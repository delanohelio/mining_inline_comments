{"pr_number": 5303, "pr_title": "Pull the source fields Set out of the RecordReader/Decoder", "pr_createdAt": "2020-04-26T00:30:20Z", "pr_url": "https://github.com/apache/pinot/pull/5303", "timeline": [{"oid": "7baef5e3e9446157c195b38db0084caaf5ad2f6b", "url": "https://github.com/apache/pinot/commit/7baef5e3e9446157c195b38db0084caaf5ad2f6b", "message": "Pull source fields set outside RecordReader", "committedDate": "2020-04-25T20:43:55Z", "type": "commit"}, {"oid": "f79e719ac44652284e75c1716f44bfddb7c1871f", "url": "https://github.com/apache/pinot/commit/f79e719ac44652284e75c1716f44bfddb7c1871f", "message": "Pull sourceFields Set outside of StreamMessageDecoder", "committedDate": "2020-04-25T23:57:33Z", "type": "commit"}, {"oid": "44473f02c1b92d8ee9760e41a339f68551baba0e", "url": "https://github.com/apache/pinot/commit/44473f02c1b92d8ee9760e41a339f68551baba0e", "message": "Fix tests", "committedDate": "2020-04-26T00:26:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NTUyMg==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415195522", "bodyText": "java docs", "author": "kishoreg", "createdAt": "2020-04-26T02:39:44Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java", "diffHunk": "@@ -40,7 +41,7 @@\n    * @param props\n    * @throws Exception\n    */\n-  void init(Map<String, String> props, Schema indexingSchema, String topicName)\n+  void init(Map<String, String> props, Schema indexingSchema, String topicName, Set<String> fields)", "originalCommit": "44473f02c1b92d8ee9760e41a339f68551baba0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eac9565fc3ac2b1bf2d7a7547bab3a61a87d2ede", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\nindex 695c72e16e..871462ae41 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\n\n@@ -34,11 +34,14 @@ import org.apache.pinot.spi.data.readers.GenericRow;\n @InterfaceStability.Stable\n public interface StreamMessageDecoder<T> {\n \n-  static final String RECORD_EXTRACTOR_CONFIG_KEY = \"recordExtractorClass\";\n+  String RECORD_EXTRACTOR_CONFIG_KEY = \"recordExtractorClass\";\n \n   /**\n-   * Initialize the decoder with decoder properties map, the stream topic name and stream schema\n-   * @param props\n+   * Initialize the decoder\n+   * @param props decoder properties extracted from the {@link StreamConfig}\n+   * @param indexingSchema the Pinot schema\n+   * @param topicName topic name of the stream\n+   * @param fields the fields to be extracted from the record\n    * @throws Exception\n    */\n   void init(Map<String, String> props, Schema indexingSchema, String topicName, Set<String> fields)\n"}}, {"oid": "eac9565fc3ac2b1bf2d7a7547bab3a61a87d2ede", "url": "https://github.com/apache/pinot/commit/eac9565fc3ac2b1bf2d7a7547bab3a61a87d2ede", "message": "Javadoc", "committedDate": "2020-04-26T22:30:22Z", "type": "commit"}, {"oid": "650e105f2503c03d5616e4a186047f6c2a49d21c", "url": "https://github.com/apache/pinot/commit/650e105f2503c03d5616e4a186047f6c2a49d21c", "message": "Remove stray commit", "committedDate": "2020-04-26T22:38:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4NjEwNA==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415986104", "bodyText": "Please fix the javadoc above", "author": "mcvsubbu", "createdAt": "2020-04-27T16:58:52Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamConsumerFactory.java", "diffHunk": "@@ -52,7 +53,7 @@ void init(StreamConfig streamConfig) {\n    * @return\n    */\n   public abstract StreamLevelConsumer createStreamLevelConsumer(String clientId, String tableName, Schema schema,\n-      String groupId);\n+      String groupId, Set<String> sourceFields);", "originalCommit": "650e105f2503c03d5616e4a186047f6c2a49d21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyMjgyOQ==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r416022829", "bodyText": "done", "author": "npawar", "createdAt": "2020-04-27T17:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4NjEwNA=="}], "type": "inlineReview", "revised_code": {"commit": "8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamConsumerFactory.java b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamConsumerFactory.java\nindex 3a16ec893d..caa5d6b6d8 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamConsumerFactory.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamConsumerFactory.java\n\n@@ -50,7 +50,8 @@ public abstract class StreamConsumerFactory {\n    * @param tableName the table name for the topic of this consumer\n    * @param schema the pinot schema of the event being consumed\n    * @param groupId consumer group Id\n-   * @return\n+   * @param sourceFields the fields to extract from the source stream\n+   * @return the stream level consumer\n    */\n   public abstract StreamLevelConsumer createStreamLevelConsumer(String clientId, String tableName, Schema schema,\n       String groupId, Set<String> sourceFields);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4NjU2NA==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415986564", "bodyText": "please fix the javadoc above", "author": "mcvsubbu", "createdAt": "2020-04-27T16:59:28Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamDecoderProvider.java", "diffHunk": "@@ -35,13 +36,13 @@\n    * @param schema\n    * @return\n    */\n-  public static StreamMessageDecoder create(StreamConfig streamConfig, Schema schema) {\n+  public static StreamMessageDecoder create(StreamConfig streamConfig, Schema schema, Set<String> fields) {", "originalCommit": "650e105f2503c03d5616e4a186047f6c2a49d21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyMjkzMQ==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r416022931", "bodyText": "done", "author": "npawar", "createdAt": "2020-04-27T17:49:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4NjU2NA=="}], "type": "inlineReview", "revised_code": {"commit": "8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamDecoderProvider.java b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamDecoderProvider.java\nindex f6665bfc06..852be98793 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamDecoderProvider.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamDecoderProvider.java\n\n@@ -32,17 +32,18 @@ public abstract class StreamDecoderProvider {\n \n   /**\n    * Constructs a {@link StreamMessageDecoder} using properties in {@link StreamConfig} and initializes it\n-   * @param streamConfig\n-   * @param schema\n-   * @return\n+   * @param streamConfig the stream configs from the table config\n+   * @param schema the schema of the Pinot table\n+   * @param sourceFields the fields to extract from the source stream\n+   * @return the StreamMessageDecoder\n    */\n-  public static StreamMessageDecoder create(StreamConfig streamConfig, Schema schema, Set<String> fields) {\n+  public static StreamMessageDecoder create(StreamConfig streamConfig, Schema schema, Set<String> sourceFields) {\n     StreamMessageDecoder decoder = null;\n     String decoderClass = streamConfig.getDecoderClass();\n     Map<String, String> decoderProperties = streamConfig.getDecoderProperties();\n     try {\n       decoder = PluginManager.get().createInstance(decoderClass);\n-      decoder.init(decoderProperties, schema, streamConfig.getTopicName(), fields);\n+      decoder.init(decoderProperties, schema, streamConfig.getTopicName(), sourceFields);\n     } catch (Exception e) {\n       ExceptionUtils.rethrow(e);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4NzA1OQ==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415987059", "bodyText": "why remove the static final?", "author": "mcvsubbu", "createdAt": "2020-04-27T17:00:10Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java", "diffHunk": "@@ -33,14 +34,17 @@\n @InterfaceStability.Stable\n public interface StreamMessageDecoder<T> {\n \n-  static final String RECORD_EXTRACTOR_CONFIG_KEY = \"recordExtractorClass\";\n+  String RECORD_EXTRACTOR_CONFIG_KEY = \"recordExtractorClass\";", "originalCommit": "650e105f2503c03d5616e4a186047f6c2a49d21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNDU3NQ==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r416004575", "bodyText": "variables in an interface are implicitly static final. This used to be an abstract class before my previous refactoring, and the static final got carried forward", "author": "npawar", "createdAt": "2020-04-27T17:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4NzA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\nindex 871462ae41..1e2f7592c8 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\n\n@@ -39,9 +39,9 @@ public interface StreamMessageDecoder<T> {\n   /**\n    * Initialize the decoder\n    * @param props decoder properties extracted from the {@link StreamConfig}\n-   * @param indexingSchema the Pinot schema\n+   * @param indexingSchema the Pinot schema TODO: Remove Schema from StreamMessageDecoder. Do not use inside the implementation, as this will be removed\n    * @param topicName topic name of the stream\n-   * @param fields the fields to be extracted from the record\n+   * @param fields the fields to be read from the source stream's record\n    * @throws Exception\n    */\n   void init(Map<String, String> props, Schema indexingSchema, String topicName, Set<String> fields)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4ODMxNg==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415988316", "bodyText": "it is not clear whether these are the fields that we should pay attention to in the  source (incoming data) or these are the fields that we need in the schema. I suppose your next step is to remove the schema argument, so then the doc becomes more important.", "author": "mcvsubbu", "createdAt": "2020-04-27T17:01:53Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java", "diffHunk": "@@ -33,14 +34,17 @@\n @InterfaceStability.Stable\n public interface StreamMessageDecoder<T> {\n \n-  static final String RECORD_EXTRACTOR_CONFIG_KEY = \"recordExtractorClass\";\n+  String RECORD_EXTRACTOR_CONFIG_KEY = \"recordExtractorClass\";\n \n   /**\n-   * Initialize the decoder with decoder properties map, the stream topic name and stream schema\n-   * @param props\n+   * Initialize the decoder\n+   * @param props decoder properties extracted from the {@link StreamConfig}\n+   * @param indexingSchema the Pinot schema\n+   * @param topicName topic name of the stream\n+   * @param fields the fields to be extracted from the record", "originalCommit": "650e105f2503c03d5616e4a186047f6c2a49d21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyNTE0Ng==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r416025146", "bodyText": "improved the javadoc. Renamed it to sourceFields. Added TODO for removing Schema and a note to not use it", "author": "npawar", "createdAt": "2020-04-27T17:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4ODMxNg=="}], "type": "inlineReview", "revised_code": {"commit": "8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\nindex 871462ae41..1e2f7592c8 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/stream/StreamMessageDecoder.java\n\n@@ -39,9 +39,9 @@ public interface StreamMessageDecoder<T> {\n   /**\n    * Initialize the decoder\n    * @param props decoder properties extracted from the {@link StreamConfig}\n-   * @param indexingSchema the Pinot schema\n+   * @param indexingSchema the Pinot schema TODO: Remove Schema from StreamMessageDecoder. Do not use inside the implementation, as this will be removed\n    * @param topicName topic name of the stream\n-   * @param fields the fields to be extracted from the record\n+   * @param fields the fields to be read from the source stream's record\n    * @throws Exception\n    */\n   void init(Map<String, String> props, Schema indexingSchema, String topicName, Set<String> fields)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4OTEwNA==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415989104", "bodyText": "Shouldnt this be destination fields instead of source fields? Or, am I missing something?", "author": "mcvsubbu", "createdAt": "2020-04-27T17:03:01Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/HLRealtimeSegmentDataManager.java", "diffHunk": "@@ -167,8 +168,10 @@ public HLRealtimeSegmentDataManager(final RealtimeSegmentZKMetadata realtimeSegm\n     // create and init stream level consumer\n     _streamConsumerFactory = StreamConsumerFactoryProvider.create(_streamConfig);\n     String clientId = HLRealtimeSegmentDataManager.class.getSimpleName() + \"-\" + _streamConfig.getTopicName();\n+    Set<String> sourceFields = SchemaFieldExtractorUtils.extract(schema);", "originalCommit": "650e105f2503c03d5616e4a186047f6c2a49d21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyNTg3MQ==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r416025871", "bodyText": "Renamed the method to extractSourceFields. It should be source fields - we get the source fields upfront and pass it to the decoder/reader.", "author": "npawar", "createdAt": "2020-04-27T17:53:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk4OTEwNA=="}], "type": "inlineReview", "revised_code": {"commit": "8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/HLRealtimeSegmentDataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/HLRealtimeSegmentDataManager.java\nindex 7f924dbc93..a2de83b127 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/HLRealtimeSegmentDataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/data/manager/realtime/HLRealtimeSegmentDataManager.java\n\n@@ -168,7 +168,7 @@ public class HLRealtimeSegmentDataManager extends RealtimeSegmentDataManager {\n     // create and init stream level consumer\n     _streamConsumerFactory = StreamConsumerFactoryProvider.create(_streamConfig);\n     String clientId = HLRealtimeSegmentDataManager.class.getSimpleName() + \"-\" + _streamConfig.getTopicName();\n-    Set<String> sourceFields = SchemaFieldExtractorUtils.extract(schema);\n+    Set<String> sourceFields = SchemaFieldExtractorUtils.extractSourceFields(schema);\n     _streamLevelConsumer = _streamConsumerFactory\n         .createStreamLevelConsumer(clientId, tableNameWithType, schema, instanceMetadata.getGroupId(tableNameWithType),\n             sourceFields);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk5MDgzNw==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r415990837", "bodyText": "there are two methods here extract and extractSource. I believe extractSource is for testing purpose only. Can you move it to the test, or in some way, get rid of it (e.g. maybe by contriving the data in test schema). There are no comments on either of these methods, and it can be confusing.\nI understand it came from a previous commit, but please fix it.\nThanks", "author": "mcvsubbu", "createdAt": "2020-04-27T17:05:35Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/utils/SchemaFieldExtractorUtils.java", "diffHunk": "@@ -19,17 +19,15 @@\n package org.apache.pinot.spi.utils;\n \n import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.base.Preconditions;\n-import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import org.apache.pinot.spi.data.function.evaluators.ExpressionEvaluator;\n+import org.apache.pinot.spi.data.function.evaluators.ExpressionEvaluatorFactory;", "originalCommit": "650e105f2503c03d5616e4a186047f6c2a49d21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyNjIzOA==", "url": "https://github.com/apache/pinot/pull/5303#discussion_r416026238", "bodyText": "Removed the test method, kept only one. Also s/extract/extractSourceFields", "author": "npawar", "createdAt": "2020-04-27T17:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk5MDgzNw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "url": "https://github.com/apache/pinot/commit/8e1f18180927efe4281ebe4da2ea4359b0dad7d6", "message": "Review comments", "committedDate": "2020-04-27T17:48:43Z", "type": "commit"}, {"oid": "0d7673a75c722c7067f56bd90628743e3eabbe5b", "url": "https://github.com/apache/pinot/commit/0d7673a75c722c7067f56bd90628743e3eabbe5b", "message": "Rename fields to sourceFields", "committedDate": "2020-04-27T17:51:08Z", "type": "commit"}, {"oid": "59ed9badb07ea8a3aa17b86e3cfe3b0b4d2ea68a", "url": "https://github.com/apache/pinot/commit/59ed9badb07ea8a3aa17b86e3cfe3b0b4d2ea68a", "message": "Rename fields to sourceFields in recordReader", "committedDate": "2020-04-27T17:52:07Z", "type": "commit"}]}