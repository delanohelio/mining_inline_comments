{"pr_number": 6204, "pr_title": "add upsert metadata metric", "pr_createdAt": "2020-10-28T00:02:37Z", "pr_url": "https://github.com/apache/pinot/pull/6204", "timeline": [{"oid": "06a34351a71bb88c9a11312d0acb147a8567495d", "url": "https://github.com/apache/pinot/commit/06a34351a71bb88c9a11312d0acb147a8567495d", "message": "add upsert metadata metric of the primary key counts per partition metadata manager", "committedDate": "2020-10-27T23:49:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzM1Nw==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513103357", "bodyText": "Use _tableNameWithType for clarity", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:06:43Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -51,6 +53,16 @@\n public class PartitionUpsertMetadataManager {\n   private static final Logger LOGGER = LoggerFactory.getLogger(PartitionUpsertMetadataManager.class);\n \n+  private final String _tableName;", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\nindex 16f3d668d0..788d23ee80 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n\n@@ -53,12 +53,12 @@ import org.slf4j.LoggerFactory;\n public class PartitionUpsertMetadataManager {\n   private static final Logger LOGGER = LoggerFactory.getLogger(PartitionUpsertMetadataManager.class);\n \n-  private final String _tableName;\n+  private final String _tableNameWithType;\n   private final int _partitionId;\n   private final ServerMetrics _serverMetrics;\n \n-  public PartitionUpsertMetadataManager(String tableName, int partitionId, ServerMetrics serverMetrics) {\n-    _tableName = tableName;\n+  public PartitionUpsertMetadataManager(String tableNameWithType, int partitionId, ServerMetrics serverMetrics) {\n+    _tableNameWithType = tableNameWithType;\n     _partitionId = partitionId;\n     _serverMetrics = serverMetrics;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzUzMQ==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513103531", "bodyText": "This line is mis-deleted?", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:07:17Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -85,8 +97,7 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-              // Update the record location when there is a tie because the record locations should point to the new\n-              // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n+               // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyNDY3Mg==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513124672", "bodyText": "no.. auto formatting", "author": "yupeng9", "createdAt": "2020-10-28T01:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzUzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3Nzk1MA==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513777950", "bodyText": "This is not auto formatting. One line is mis-deleted. Please double check", "author": "Jackie-Jiang", "createdAt": "2020-10-28T21:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzUzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\nindex 16f3d668d0..788d23ee80 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n\n@@ -97,7 +97,7 @@ public class PartitionUpsertMetadataManager {\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-               // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n+              // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n               // segment because it has not been replaced yet.\n               if (recordInfo._timestamp >= currentRecordLocation.getTimestamp()) {\n                 validDocIds.add(recordInfo._docId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwMzk2NA==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513103964", "bodyText": "_tableNameWithType", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:08:48Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java", "diffHunk": "@@ -29,8 +30,16 @@\n @ThreadSafe\n public class TableUpsertMetadataManager {\n   private final Map<Integer, PartitionUpsertMetadataManager> _partitionMetadataManagerMap = new ConcurrentHashMap<>();\n+  private final String _tableName;", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java\nindex 3317fbd29b..972156703a 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java\n\n@@ -30,16 +30,16 @@ import org.apache.pinot.common.metrics.ServerMetrics;\n @ThreadSafe\n public class TableUpsertMetadataManager {\n   private final Map<Integer, PartitionUpsertMetadataManager> _partitionMetadataManagerMap = new ConcurrentHashMap<>();\n-  private final String _tableName;\n+  private final String _tableNameWithType;\n   private final ServerMetrics _serverMetrics;\n \n-  public TableUpsertMetadataManager(String tableName, ServerMetrics serverMetrics) {\n-    _tableName = tableName;\n+  public TableUpsertMetadataManager(String tableNameWithType, ServerMetrics serverMetrics) {\n+    _tableNameWithType = tableNameWithType;\n     _serverMetrics = serverMetrics;\n   }\n \n   public PartitionUpsertMetadataManager getOrCreatePartitionManager(int partitionId) {\n-    return _partitionMetadataManagerMap\n-        .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, partitionId, _serverMetrics));\n+    return _partitionMetadataManagerMap.computeIfAbsent(partitionId,\n+        k -> new PartitionUpsertMetadataManager(_tableNameWithType, k, _serverMetrics));\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNDExMw==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513104113", "bodyText": "(nit)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, partitionId, _serverMetrics));\n          \n          \n            \n                    .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, k, _serverMetrics));", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:09:16Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java", "diffHunk": "@@ -29,8 +30,16 @@\n @ThreadSafe\n public class TableUpsertMetadataManager {\n   private final Map<Integer, PartitionUpsertMetadataManager> _partitionMetadataManagerMap = new ConcurrentHashMap<>();\n+  private final String _tableName;\n+  private final ServerMetrics _serverMetrics;\n+\n+  public TableUpsertMetadataManager(String tableName, ServerMetrics serverMetrics) {\n+    _tableName = tableName;\n+    _serverMetrics = serverMetrics;\n+  }\n \n   public PartitionUpsertMetadataManager getOrCreatePartitionManager(int partitionId) {\n-    return _partitionMetadataManagerMap.computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager());\n+    return _partitionMetadataManagerMap\n+        .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, partitionId, _serverMetrics));", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java\nindex 3317fbd29b..972156703a 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/upsert/TableUpsertMetadataManager.java\n\n@@ -30,16 +30,16 @@ import org.apache.pinot.common.metrics.ServerMetrics;\n @ThreadSafe\n public class TableUpsertMetadataManager {\n   private final Map<Integer, PartitionUpsertMetadataManager> _partitionMetadataManagerMap = new ConcurrentHashMap<>();\n-  private final String _tableName;\n+  private final String _tableNameWithType;\n   private final ServerMetrics _serverMetrics;\n \n-  public TableUpsertMetadataManager(String tableName, ServerMetrics serverMetrics) {\n-    _tableName = tableName;\n+  public TableUpsertMetadataManager(String tableNameWithType, ServerMetrics serverMetrics) {\n+    _tableNameWithType = tableNameWithType;\n     _serverMetrics = serverMetrics;\n   }\n \n   public PartitionUpsertMetadataManager getOrCreatePartitionManager(int partitionId) {\n-    return _partitionMetadataManagerMap\n-        .computeIfAbsent(partitionId, k -> new PartitionUpsertMetadataManager(_tableName, partitionId, _serverMetrics));\n+    return _partitionMetadataManagerMap.computeIfAbsent(partitionId,\n+        k -> new PartitionUpsertMetadataManager(_tableNameWithType, k, _serverMetrics));\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNDc0NQ==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513104745", "bodyText": "Use the serverMetrics available instead of mocking one", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:11:29Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java", "diffHunk": "@@ -800,7 +801,8 @@ public FakeLLRealtimeSegmentDataManager(RealtimeSegmentZKMetadata segmentZKMetad\n         throws Exception {\n       super(segmentZKMetadata, tableConfig, realtimeTableDataManager, resourceDataDir,\n           new IndexLoadingConfig(makeInstanceDataManagerConfig(), tableConfig), schema, llcSegmentName,\n-          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics, new PartitionUpsertMetadataManager());\n+          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics,\n+          new PartitionUpsertMetadataManager(\"testTable\", 0, Mockito.mock(ServerMetrics.class)));", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java b/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java\nindex 0f2ce7c46f..c70305a3c5 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java\n\n@@ -802,7 +801,7 @@ public class LLRealtimeSegmentDataManagerTest {\n       super(segmentZKMetadata, tableConfig, realtimeTableDataManager, resourceDataDir,\n           new IndexLoadingConfig(makeInstanceDataManagerConfig(), tableConfig), schema, llcSegmentName,\n           semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics,\n-          new PartitionUpsertMetadataManager(\"testTable\", 0, Mockito.mock(ServerMetrics.class)));\n+          new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics));\n       _state = LLRealtimeSegmentDataManager.class.getDeclaredField(\"_state\");\n       _state.setAccessible(true);\n       _shouldStop = LLRealtimeSegmentDataManager.class.getDeclaredField(\"_shouldStop\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTIyNg==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513105226", "bodyText": "(nit) Mock a ServerMetrics here locally instead of having a member variable", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:13:21Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java", "diffHunk": "@@ -121,7 +125,8 @@ public void loadSegment()\n     _indexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     _upsertIndexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     ((ImmutableSegmentImpl) _upsertIndexSegment)\n-        .enableUpsert(new PartitionUpsertMetadataManager(), new ThreadSafeMutableRoaringBitmap());\n+        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, _serverMetrics),", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java b/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java\nindex 921307e583..cfc0d799ec 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java\n\n@@ -123,9 +121,10 @@ public class MetadataAndDictionaryAggregationPlanMakerTest {\n   public void loadSegment()\n       throws Exception {\n     _indexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n+    ServerMetrics serverMetrics = Mockito.mock(ServerMetrics.class);\n     _upsertIndexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     ((ImmutableSegmentImpl) _upsertIndexSegment)\n-        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, _serverMetrics),\n+        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics),\n             new ThreadSafeMutableRoaringBitmap());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTQ5OQ==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513105499", "bodyText": "Make \"testTable\" a constant and change it to testTable_REALTIME?", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:14:23Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java", "diffHunk": "@@ -37,7 +39,8 @@\n \n   @Test\n   public void testAddSegment() {\n-    PartitionUpsertMetadataManager upsertMetadataManager = new PartitionUpsertMetadataManager();\n+    PartitionUpsertMetadataManager upsertMetadataManager =\n+        new PartitionUpsertMetadataManager(\"testTable\", 0, Mockito.mock(ServerMetrics.class));", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java b/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java\nindex 9385cff755..8502e2e41e 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java\n\n@@ -36,11 +36,12 @@ import static org.testng.Assert.assertSame;\n \n public class PartitionUpsertMetadataManagerTest {\n   private static final String SEGMENT_PREFIX = \"testSegment\";\n+  private static final String TEST_TABLE = \"testTable\";\n \n   @Test\n   public void testAddSegment() {\n     PartitionUpsertMetadataManager upsertMetadataManager =\n-        new PartitionUpsertMetadataManager(\"testTable\", 0, Mockito.mock(ServerMetrics.class));\n+        new PartitionUpsertMetadataManager(TEST_TABLE, 0, Mockito.mock(ServerMetrics.class));\n     Map<PrimaryKey, RecordLocation> recordLocationMap = upsertMetadataManager._primaryKeyToRecordLocationMap;\n \n     // Add the first segment\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEwNTczNg==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513105736", "bodyText": "(nit) Capitalize the first character for consistency", "author": "Jackie-Jiang", "createdAt": "2020-10-28T00:15:06Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -113,6 +124,9 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n         }\n       });\n     }\n+    // update metrics", "originalCommit": "06a34351a71bb88c9a11312d0acb147a8567495d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89602e7fca246dfb0c8008044dee8282a0535129", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\nindex 16f3d668d0..788d23ee80 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n\n@@ -124,8 +124,8 @@ public class PartitionUpsertMetadataManager {\n         }\n       });\n     }\n-    // update metrics\n-    _serverMetrics.setValueOfPartitionGauge(_tableName, _partitionId, ServerGauge.UPSERT_PRIMARY_KEYS_COUNT,\n+    // Update metrics\n+    _serverMetrics.setValueOfPartitionGauge(_tableNameWithType, _partitionId, ServerGauge.UPSERT_PRIMARY_KEYS_COUNT,\n         _primaryKeyToRecordLocationMap.size());\n     return validDocIds;\n   }\n"}}, {"oid": "89602e7fca246dfb0c8008044dee8282a0535129", "url": "https://github.com/apache/pinot/commit/89602e7fca246dfb0c8008044dee8282a0535129", "message": "comments", "committedDate": "2020-10-28T01:29:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3ODUyNQ==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513778525", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics));\n          \n          \n            \n                      new PartitionUpsertMetadataManager(\"testTable_REALTIME\", 0, serverMetrics));", "author": "Jackie-Jiang", "createdAt": "2020-10-28T21:41:02Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java", "diffHunk": "@@ -800,7 +800,8 @@ public FakeLLRealtimeSegmentDataManager(RealtimeSegmentZKMetadata segmentZKMetad\n         throws Exception {\n       super(segmentZKMetadata, tableConfig, realtimeTableDataManager, resourceDataDir,\n           new IndexLoadingConfig(makeInstanceDataManagerConfig(), tableConfig), schema, llcSegmentName,\n-          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics, new PartitionUpsertMetadataManager());\n+          semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics,\n+          new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics));", "originalCommit": "89602e7fca246dfb0c8008044dee8282a0535129", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e89497b2e88cb0252b17f709d5efcb403a69a888", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java b/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java\nindex c70305a3c5..0017c43872 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManagerTest.java\n\n@@ -801,7 +801,7 @@ public class LLRealtimeSegmentDataManagerTest {\n       super(segmentZKMetadata, tableConfig, realtimeTableDataManager, resourceDataDir,\n           new IndexLoadingConfig(makeInstanceDataManagerConfig(), tableConfig), schema, llcSegmentName,\n           semaphoreMap.get(llcSegmentName.getPartitionId()), serverMetrics,\n-          new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics));\n+          new PartitionUpsertMetadataManager(\"testTable_REALTIME\", 0, serverMetrics));\n       _state = LLRealtimeSegmentDataManager.class.getDeclaredField(\"_state\");\n       _state.setAccessible(true);\n       _shouldStop = LLRealtimeSegmentDataManager.class.getDeclaredField(\"_shouldStop\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3ODcyMQ==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513778721", "bodyText": "Revert this removal", "author": "Jackie-Jiang", "createdAt": "2020-10-28T21:41:25Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java", "diffHunk": "@@ -85,7 +97,6 @@ public ThreadSafeMutableRoaringBitmap addSegment(String segmentName, Iterator<Re\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n-              // Update the record location when there is a tie because the record locations should point to the new", "originalCommit": "89602e7fca246dfb0c8008044dee8282a0535129", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e89497b2e88cb0252b17f709d5efcb403a69a888", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\nindex 788d23ee80..24acbab7b5 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManager.java\n\n@@ -97,6 +97,7 @@ public class PartitionUpsertMetadataManager {\n               // committing a consuming segment, or reloading a completed segment.\n \n               // Update the record location when the new timestamp is greater than or equal to the current timestamp.\n+              // Update the record location when there is a tie because the record locations should point to the new\n               // segment instead of the old segment being replaced. Also, do not update the valid doc ids for the old\n               // segment because it has not been replaced yet.\n               if (recordInfo._timestamp >= currentRecordLocation.getTimestamp()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTAyMg==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513779022", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new TableUpsertMetadataManager(\"testTable\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);\n          \n          \n            \n                    new TableUpsertMetadataManager(\"testTable_REALTINE\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);", "author": "Jackie-Jiang", "createdAt": "2020-10-28T21:42:01Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java", "diffHunk": "@@ -58,7 +60,8 @@ public void setup()\n         .setUpsertConfig(new UpsertConfig(UpsertConfig.Mode.FULL)).build();\n     _recordTransformer = CompositeTransformer.getDefaultTransformer(_tableConfig, _schema);\n     File jsonFile = new File(dataResourceUrl.getFile());\n-    _partitionUpsertMetadataManager = new TableUpsertMetadataManager().getOrCreatePartitionManager(0);\n+    _partitionUpsertMetadataManager =\n+        new TableUpsertMetadataManager(\"testTable\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);", "originalCommit": "89602e7fca246dfb0c8008044dee8282a0535129", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e89497b2e88cb0252b17f709d5efcb403a69a888", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java b/pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java\nindex f7365e0831..a67836bdfd 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/indexsegment/mutable/MutableSegmentImplUpsertTest.java\n\n@@ -61,7 +61,8 @@ public class MutableSegmentImplUpsertTest {\n     _recordTransformer = CompositeTransformer.getDefaultTransformer(_tableConfig, _schema);\n     File jsonFile = new File(dataResourceUrl.getFile());\n     _partitionUpsertMetadataManager =\n-        new TableUpsertMetadataManager(\"testTable\", Mockito.mock(ServerMetrics.class)).getOrCreatePartitionManager(0);\n+        new TableUpsertMetadataManager(\"testTable_REALTIME\", Mockito.mock(ServerMetrics.class))\n+            .getOrCreatePartitionManager(0);\n     _mutableSegmentImpl = MutableSegmentImplTestUtils\n         .createMutableSegmentImpl(_schema, Collections.emptySet(), Collections.emptySet(), Collections.emptySet(),\n             false, true, new UpsertConfig(UpsertConfig.Mode.FULL), \"secondsSinceEpoch\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTE4MQ==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513779181", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics),\n          \n          \n            \n                    .enableUpsert(new PartitionUpsertMetadataManager(\"testTable_REALTIME\", 0, serverMetrics),", "author": "Jackie-Jiang", "createdAt": "2020-10-28T21:42:22Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java", "diffHunk": "@@ -119,9 +121,11 @@ public void buildSegment()\n   public void loadSegment()\n       throws Exception {\n     _indexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n+    ServerMetrics serverMetrics = Mockito.mock(ServerMetrics.class);\n     _upsertIndexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     ((ImmutableSegmentImpl) _upsertIndexSegment)\n-        .enableUpsert(new PartitionUpsertMetadataManager(), new ThreadSafeMutableRoaringBitmap());\n+        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics),", "originalCommit": "89602e7fca246dfb0c8008044dee8282a0535129", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e89497b2e88cb0252b17f709d5efcb403a69a888", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java b/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java\nindex cfc0d799ec..0125b134fe 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/plan/maker/MetadataAndDictionaryAggregationPlanMakerTest.java\n\n@@ -124,7 +124,7 @@ public class MetadataAndDictionaryAggregationPlanMakerTest {\n     ServerMetrics serverMetrics = Mockito.mock(ServerMetrics.class);\n     _upsertIndexSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     ((ImmutableSegmentImpl) _upsertIndexSegment)\n-        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable\", 0, serverMetrics),\n+        .enableUpsert(new PartitionUpsertMetadataManager(\"testTable_REALTIME\", 0, serverMetrics),\n             new ThreadSafeMutableRoaringBitmap());\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3OTUyMg==", "url": "https://github.com/apache/pinot/pull/6204#discussion_r513779522", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String TEST_TABLE = \"testTable\";\n          \n          \n            \n              private static final String REALTIME_TABLE_NAME = \"testTable_REALTIME\";", "author": "Jackie-Jiang", "createdAt": "2020-10-28T21:43:02Z", "path": "pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java", "diffHunk": "@@ -34,10 +36,12 @@\n \n public class PartitionUpsertMetadataManagerTest {\n   private static final String SEGMENT_PREFIX = \"testSegment\";\n+  private static final String TEST_TABLE = \"testTable\";", "originalCommit": "89602e7fca246dfb0c8008044dee8282a0535129", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e89497b2e88cb0252b17f709d5efcb403a69a888", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java b/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java\nindex 8502e2e41e..d1cd6799c8 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/core/upsert/PartitionUpsertMetadataManagerTest.java\n\n@@ -36,12 +36,12 @@ import static org.testng.Assert.assertSame;\n \n public class PartitionUpsertMetadataManagerTest {\n   private static final String SEGMENT_PREFIX = \"testSegment\";\n-  private static final String TEST_TABLE = \"testTable\";\n+  private static final String REALTIME_TEST_TABLE = \"testTable_REALTIME\";\n \n   @Test\n   public void testAddSegment() {\n     PartitionUpsertMetadataManager upsertMetadataManager =\n-        new PartitionUpsertMetadataManager(TEST_TABLE, 0, Mockito.mock(ServerMetrics.class));\n+        new PartitionUpsertMetadataManager(REALTIME_TEST_TABLE, 0, Mockito.mock(ServerMetrics.class));\n     Map<PrimaryKey, RecordLocation> recordLocationMap = upsertMetadataManager._primaryKeyToRecordLocationMap;\n \n     // Add the first segment\n"}}, {"oid": "e89497b2e88cb0252b17f709d5efcb403a69a888", "url": "https://github.com/apache/pinot/commit/e89497b2e88cb0252b17f709d5efcb403a69a888", "message": "comments", "committedDate": "2020-10-28T22:30:56Z", "type": "commit"}]}