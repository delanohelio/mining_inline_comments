{"pr_number": 5226, "pr_title": "Add inter segment tests for text search and fix bug for Lucene query parser creation", "pr_createdAt": "2020-04-08T06:41:16Z", "pr_url": "https://github.com/apache/pinot/pull/5226", "timeline": [{"oid": "43dc5da070c6e48b9b672e50ab41f609588d4334", "url": "https://github.com/apache/pinot/commit/43dc5da070c6e48b9b672e50ab41f609588d4334", "message": "Add inter segment tests for text search\nand fix bug for lucene query parser creation\n\nParser is JavaCC based. So it has to be created\nper query.\n\nAlso added text search tests for the SQL path", "committedDate": "2020-04-08T17:28:08Z", "type": "commit"}, {"oid": "43dc5da070c6e48b9b672e50ab41f609588d4334", "url": "https://github.com/apache/pinot/commit/43dc5da070c6e48b9b672e50ab41f609588d4334", "message": "Add inter segment tests for text search\nand fix bug for lucene query parser creation\n\nParser is JavaCC based. So it has to be created\nper query.\n\nAlso added text search tests for the SQL path", "committedDate": "2020-04-08T17:28:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcwMjc5NA==", "url": "https://github.com/apache/pinot/pull/5226#discussion_r405702794", "bodyText": "Is there any way to reuse some components here? Will this cause too much garbage?\nPlease also add some comments so that future developers know that it cannot be reused.", "author": "Jackie-Jiang", "createdAt": "2020-04-08T17:45:41Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java", "diffHunk": "@@ -133,7 +131,8 @@ public MutableRoaringBitmap getDocIds(Object value) {\n     MutableRoaringBitmap docIds = new MutableRoaringBitmap();\n     Collector docIDCollector = new LuceneDocIdCollector(docIds, _docIdTranslator);\n     try {\n-      Query query = _queryParser.parse(searchQuery);\n+      QueryParser parser = new QueryParser(_column, new StandardAnalyzer());", "originalCommit": "43dc5da070c6e48b9b672e50ab41f609588d4334", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxNzc1Ng==", "url": "https://github.com/apache/pinot/pull/5226#discussion_r405717756", "bodyText": "So the parser is JavaCC based and so it is stateful. We have to instantiate it per query (this is the bug). Analyzer on the other hand seems stateless so I reverted that part to be instantiated just once.", "author": "siddharthteotia", "createdAt": "2020-04-08T18:11:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcwMjc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "d8448bdd7e8f1feb3c1f12f27c6f9f9a75d49ab5", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java b/pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java\nindex 3aedbafcfb..302724232f 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/segment/index/readers/text/LuceneTextIndexReader.java\n\n@@ -131,7 +133,10 @@ public class LuceneTextIndexReader implements InvertedIndexReader<MutableRoaring\n     MutableRoaringBitmap docIds = new MutableRoaringBitmap();\n     Collector docIDCollector = new LuceneDocIdCollector(docIds, _docIdTranslator);\n     try {\n-      QueryParser parser = new QueryParser(_column, new StandardAnalyzer());\n+      // Lucene Query Parser is JavaCC based. It is stateful and should\n+      // be instantiated per query. Analyzer on the other hand is stateless\n+      // and can be created upfront.\n+      QueryParser parser = new QueryParser(_column, _standardAnalyzer);\n       Query query = parser.parse(searchQuery);\n       _indexSearcher.search(query, docIDCollector);\n       return docIds;\n"}}, {"oid": "d8448bdd7e8f1feb3c1f12f27c6f9f9a75d49ab5", "url": "https://github.com/apache/pinot/commit/d8448bdd7e8f1feb3c1f12f27c6f9f9a75d49ab5", "message": "Create analyzer just once", "committedDate": "2020-04-08T18:09:37Z", "type": "commit"}]}