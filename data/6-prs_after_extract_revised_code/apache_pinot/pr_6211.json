{"pr_number": 6211, "pr_title": "add api for cluster manager to get table state", "pr_createdAt": "2020-10-29T15:18:34Z", "pr_url": "https://github.com/apache/pinot/pull/6211", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2ODY4NQ==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516168685", "bodyText": "Let's keep this method's return type a boolean - isTableEnabled.", "author": "npawar", "createdAt": "2020-11-02T18:18:26Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -1981,6 +1981,16 @@ public boolean hasRealtimeTable(String tableName) {\n     return hasTable(TableNameBuilder.REALTIME.tableNameWithType(tableName));\n   }\n \n+  /**\n+   * Gets the current state of the table\n+   * @param tableNameWithType Table name with suffix\n+   * @return String enabled | disabled\n+   */", "originalCommit": "48fc2fbb4d773f2352de7f08357bf111a937fb71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ecc7e0b6bf752dd960283034d2ef0001593b01a", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\nindex 959b97c4a0..48592d41d5 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n\n@@ -1984,11 +1985,17 @@ public class PinotHelixResourceManager {\n   /**\n    * Gets the current state of the table\n    * @param tableNameWithType Table name with suffix\n-   * @return String enabled | disabled\n+   * @return 1 enabled | 0 disabled\n+   * throws {@link TableNotFoundException}\n    */\n-  public String getTableCurrentState(String tableNameWithType) {\n+  public int getTableCurrentState(String tableNameWithType)\n+      throws TableNotFoundException {\n     IdealState idealState = getTableIdealState(tableNameWithType);\n-    return idealState.isEnabled() ? \"enabled\" : \"disabled\";\n+    if (idealState == null) {\n+      throw new TableNotFoundException(\"Failed to find ideal state for table: \" + tableNameWithType);\n+    }\n+\n+    return idealState.isEnabled() ? 1 : 0;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2OTQ1Nw==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516169457", "bodyText": "current state\" has a different meaning in helix/pinot. I would suggest saying something about it being enabled ot not.", "author": "npawar", "createdAt": "2020-11-02T18:19:45Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -1981,6 +1981,16 @@ public boolean hasRealtimeTable(String tableName) {\n     return hasTable(TableNameBuilder.REALTIME.tableNameWithType(tableName));\n   }\n \n+  /**\n+   * Gets the current state of the table", "originalCommit": "48fc2fbb4d773f2352de7f08357bf111a937fb71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ecc7e0b6bf752dd960283034d2ef0001593b01a", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\nindex 959b97c4a0..48592d41d5 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n\n@@ -1984,11 +1985,17 @@ public class PinotHelixResourceManager {\n   /**\n    * Gets the current state of the table\n    * @param tableNameWithType Table name with suffix\n-   * @return String enabled | disabled\n+   * @return 1 enabled | 0 disabled\n+   * throws {@link TableNotFoundException}\n    */\n-  public String getTableCurrentState(String tableNameWithType) {\n+  public int getTableCurrentState(String tableNameWithType)\n+      throws TableNotFoundException {\n     IdealState idealState = getTableIdealState(tableNameWithType);\n-    return idealState.isEnabled() ? \"enabled\" : \"disabled\";\n+    if (idealState == null) {\n+      throw new TableNotFoundException(\"Failed to find ideal state for table: \" + tableNameWithType);\n+    }\n+\n+    return idealState.isEnabled() ? 1 : 0;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516174113", "bodyText": "Let's just make type as required, and keep return type binary, instead of introducing a json blurb here.", "author": "npawar", "createdAt": "2020-11-02T18:28:19Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,54 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr", "originalCommit": "48fc2fbb4d773f2352de7f08357bf111a937fb71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTI0NQ==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516531245", "bodyText": "@npawar  just 0 or 1?", "author": "galalen", "createdAt": "2020-11-03T09:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4NjEzNw==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516786137", "bodyText": "Can still be enabled/disabled or true/false. But just single string with only 2 possible options", "author": "npawar", "createdAt": "2020-11-03T16:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0NTY0Ng==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r516845646", "bodyText": "Done, updated the return to disabled/enabled.\nWouldn't be better if we create an enum TableState with these values [enabled/disabled]?", "author": "galalen", "createdAt": "2020-11-03T17:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwNjAyMg==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r517706022", "bodyText": "yes certainly. We already have one called StateType I believe. Wonder if we can reuse", "author": "npawar", "createdAt": "2020-11-05T00:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk2MTM2OQ==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r517961369", "bodyText": "Yeah, I saw it, but I guess we should leave it as just these simple strings [disabled/enabled].", "author": "galalen", "createdAt": "2020-11-05T10:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3NDExMw=="}], "type": "inlineReview", "revised_code": {"commit": "7ecc7e0b6bf752dd960283034d2ef0001593b01a", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java\nindex 7f52cf152c..88b5e636e9 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java\n\n@@ -565,47 +565,24 @@ public class PinotTableRestletResource {\n   @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n   public String getTableState(\n       @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n-      @ApiParam(value = \"realtime|offline\") @QueryParam(\"type\") String tableTypeStr\n+      @ApiParam(value = \"realtime|offline\", required = true) @QueryParam(\"type\") String tableTypeStr\n   ) throws TableNotFoundException {\n-    if (tableTypeStr == null) {\n-      ObjectNode data = JsonUtils.newObjectNode();\n-\n-      String offlineTableName = TableNameBuilder.forType(TableType.OFFLINE).tableNameWithType(tableName);\n-      String realtimeTableName = TableNameBuilder.forType(TableType.REALTIME).tableNameWithType(tableName);\n-\n-      if (_pinotHelixResourceManager.hasOfflineTable(offlineTableName)) {\n-        ObjectNode offline = JsonUtils.newObjectNode();\n-        offline.put(\"tableName\", offlineTableName);\n-        offline.put(\"state\", _pinotHelixResourceManager.getTableCurrentState(offlineTableName));\n-        data.set(TableType.OFFLINE.toString(), offline);\n-      }\n-\n-      if (_pinotHelixResourceManager.hasRealtimeTable(realtimeTableName)) {\n-        ObjectNode realtime = JsonUtils.newObjectNode();\n-        realtime.put(\"tableName\", realtimeTableName);\n-        realtime.put(\"state\", _pinotHelixResourceManager.getTableCurrentState(realtimeTableName));\n-        data.set(TableType.REALTIME.toString(), realtime);\n-      }\n-\n-      return data.toString();\n-    } else {\n-      try {\n-        TableType tableType = TableType.valueOf(tableTypeStr.toUpperCase());\n-        String tableNameWithType = TableNameBuilder.forType(tableType).tableNameWithType(tableName);\n-\n-        if(!_pinotHelixResourceManager.hasTable(tableNameWithType)) {\n-          throw new TableNotFoundException(\"Failed to find table: \" + tableNameWithType);\n-        }\n-\n-        ObjectNode data = JsonUtils.newObjectNode();\n-        data.put(\"tableName\", tableNameWithType);\n-        data.put(\"state\", _pinotHelixResourceManager.getTableCurrentState(tableNameWithType));\n+    TableType tableType;\n+    try {\n+      tableType = TableType.valueOf(tableTypeStr.toUpperCase());\n+    } catch (IllegalArgumentException e) {\n+      throw new ControllerApplicationException(LOGGER, \"Illegal table type: \" + tableTypeStr,\n+          Response.Status.BAD_REQUEST);\n+    }\n \n-        return data.toString();\n-      } catch (IllegalArgumentException e) {\n-        throw new ControllerApplicationException(LOGGER, \"Illegal table type: \" + tableTypeStr,\n-            Response.Status.BAD_REQUEST);\n-      }\n+    String tableNameWithType = TableNameBuilder.forType(tableType).tableNameWithType(tableName);\n+    if(!_pinotHelixResourceManager.hasTable(tableNameWithType)) {\n+      throw new TableNotFoundException(\"Failed to find table: \" + tableNameWithType);\n     }\n+\n+    ObjectNode data = JsonUtils.newObjectNode();\n+    data.put(\"tableName\", tableNameWithType);\n+    data.put(\"state\", _pinotHelixResourceManager.getTableCurrentState(tableNameWithType));\n+    return data.toString();\n   }\n }\n"}}, {"oid": "7ecc7e0b6bf752dd960283034d2ef0001593b01a", "url": "https://github.com/apache/pinot/commit/7ecc7e0b6bf752dd960283034d2ef0001593b01a", "message": "update getTableCurrentState to return binary", "committedDate": "2020-11-02T21:09:30Z", "type": "forcePushed"}, {"oid": "094066457f49b44a4c850df788b2bd455293619f", "url": "https://github.com/apache/pinot/commit/094066457f49b44a4c850df788b2bd455293619f", "message": "check table state unit test", "committedDate": "2020-11-03T10:01:11Z", "type": "forcePushed"}, {"oid": "3aafefd38e049c5f816c6237ce2ca26ea9c4ca43", "url": "https://github.com/apache/pinot/commit/3aafefd38e049c5f816c6237ce2ca26ea9c4ca43", "message": "api for checking table state [enabled/disabled]", "committedDate": "2020-11-03T10:01:11Z", "type": "forcePushed"}, {"oid": "4dfc7b4b9181e207a4967a7d068277eca7bfe00e", "url": "https://github.com/apache/pinot/commit/4dfc7b4b9181e207a4967a7d068277eca7bfe00e", "message": "api for checking table state [enabled/disabled]", "committedDate": "2020-11-03T15:24:19Z", "type": "forcePushed"}, {"oid": "e3180c260d6a3f97b00631bc13399bdc31e7ff98", "url": "https://github.com/apache/pinot/commit/e3180c260d6a3f97b00631bc13399bdc31e7ff98", "message": "api for checking table state [enabled/disabled]\n\nchance return to enabled / disabled", "committedDate": "2020-11-03T17:38:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcwNjgyMw==", "url": "https://github.com/apache/pinot/pull/6211#discussion_r517706823", "bodyText": "we dont need to again return tableName in the response do we? You can just return \"enabled\" or \"disabled\".", "author": "npawar", "createdAt": "2020-11-05T00:15:11Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java", "diffHunk": "@@ -558,4 +558,32 @@ public RebalanceResult rebalance(\n       throw new ControllerApplicationException(LOGGER, e.getMessage(), Response.Status.NOT_FOUND);\n     }\n   }\n+\n+  @GET\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @Path(\"/tables/{tableName}/state\")\n+  @ApiOperation(value = \"Get current table state\", notes = \"Get current table state\")\n+  public String getTableState(\n+      @ApiParam(value = \"Name of the table to get its state\", required = true) @PathParam(\"tableName\") String tableName,\n+      @ApiParam(value = \"realtime|offline\", required = true) @QueryParam(\"type\") String tableTypeStr\n+  ) {\n+    TableType tableType;\n+    try {\n+      tableType = TableType.valueOf(tableTypeStr.toUpperCase());\n+    } catch (IllegalArgumentException e) {\n+      throw new ControllerApplicationException(LOGGER, \"Illegal table type: \" + tableTypeStr,\n+          Response.Status.BAD_REQUEST);\n+    }\n+\n+    String tableNameWithType = TableNameBuilder.forType(tableType).tableNameWithType(tableName);\n+    try {\n+      ObjectNode data = JsonUtils.newObjectNode();\n+      data.put(\"tableName\", tableNameWithType);", "originalCommit": "e3180c260d6a3f97b00631bc13399bdc31e7ff98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b17b038044f61404f3f15689397d52b976be3b2", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java\nindex 8b334e4bde..116ad35805 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotTableRestletResource.java\n\n@@ -578,7 +578,6 @@ public class PinotTableRestletResource {\n     String tableNameWithType = TableNameBuilder.forType(tableType).tableNameWithType(tableName);\n     try {\n       ObjectNode data = JsonUtils.newObjectNode();\n-      data.put(\"tableName\", tableNameWithType);\n       data.put(\"state\", _pinotHelixResourceManager.isTableEnabled(tableNameWithType) ? \"enabled\" : \"disabled\");\n       return data.toString();\n     } catch (TableNotFoundException e) {\n"}}, {"oid": "2b17b038044f61404f3f15689397d52b976be3b2", "url": "https://github.com/apache/pinot/commit/2b17b038044f61404f3f15689397d52b976be3b2", "message": "make cluser manager check state api only return the state [enabled/disabled]", "committedDate": "2020-11-05T10:55:52Z", "type": "forcePushed"}, {"oid": "88c5e311fd7b5d66a3aa95caf1f883a312c6a47a", "url": "https://github.com/apache/pinot/commit/88c5e311fd7b5d66a3aa95caf1f883a312c6a47a", "message": "api for checking table state [enabled/disabled]\n\nchance return to enabled / disabled", "committedDate": "2020-11-06T05:36:05Z", "type": "commit"}, {"oid": "7ed209c4f07782993166a7560bedf9346bda8c2a", "url": "https://github.com/apache/pinot/commit/7ed209c4f07782993166a7560bedf9346bda8c2a", "message": "make cluser manager check state api only return the state [enabled/disabled]", "committedDate": "2020-11-06T05:36:05Z", "type": "commit"}, {"oid": "968396a0978a1d2a23ca7470993fc15da8a3b853", "url": "https://github.com/apache/pinot/commit/968396a0978a1d2a23ca7470993fc15da8a3b853", "message": "add unit tests to cluster manager check table state", "committedDate": "2020-11-06T05:36:05Z", "type": "forcePushed"}, {"oid": "96ad6a511bd5c2bdda5a690f3b20bf5463723015", "url": "https://github.com/apache/pinot/commit/96ad6a511bd5c2bdda5a690f3b20bf5463723015", "message": "add unit tests to cluster manager check table state\n\nupdate table name in unit test", "committedDate": "2020-11-06T08:15:58Z", "type": "commit"}, {"oid": "96ad6a511bd5c2bdda5a690f3b20bf5463723015", "url": "https://github.com/apache/pinot/commit/96ad6a511bd5c2bdda5a690f3b20bf5463723015", "message": "add unit tests to cluster manager check table state\n\nupdate table name in unit test", "committedDate": "2020-11-06T08:15:58Z", "type": "forcePushed"}]}