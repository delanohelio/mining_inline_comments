{"pr_number": 6005, "pr_title": "Fix extract method in AvroRecordExtractor class", "pr_createdAt": "2020-09-11T17:45:01Z", "pr_url": "https://github.com/apache/pinot/pull/6005", "timeline": [{"oid": "bfb59545cdd13e94f34c882be579afd917fbdd80", "url": "https://github.com/apache/pinot/commit/bfb59545cdd13e94f34c882be579afd917fbdd80", "message": "Fix extract method in AvroRecordExtractor", "committedDate": "2020-09-11T17:44:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxMzcwNQ==", "url": "https://github.com/apache/pinot/pull/6005#discussion_r487213705", "bodyText": "Suggest using the non-functional way for performance concern", "author": "Jackie-Jiang", "createdAt": "2020-09-11T18:20:45Z", "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "diffHunk": "@@ -46,14 +46,13 @@ public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtra\n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n     if (_extractAll) {\n-      Map<String, Object> jsonMap = JsonUtils.genericRecordToJson(from);\n-      jsonMap.forEach((fieldName, value) -> to.putValue(fieldName, AvroUtils.convert(value)));\n+      List<Schema.Field> fields = from.getSchema().getFields();", "originalCommit": "bfb59545cdd13e94f34c882be579afd917fbdd80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNDgyOQ==", "url": "https://github.com/apache/pinot/pull/6005#discussion_r487224829", "bodyText": "Done.", "author": "jackjlli", "createdAt": "2020-09-11T18:44:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxMzcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c19fb229be7c557accb175c804877df4b0deff69", "chunk": "diff --git a/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java b/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\nindex ede85869c4..646debce25 100644\n--- a/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\n+++ b/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\n\n@@ -47,12 +47,14 @@ public class AvroRecordExtractor implements RecordExtractor<GenericRecord> {\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n     if (_extractAll) {\n       List<Schema.Field> fields = from.getSchema().getFields();\n-      fields.forEach(field -> {\n+      for (Schema.Field field : fields) {\n         String fieldName = field.name();\n         to.putValue(fieldName, AvroUtils.convert(from.get(fieldName)));\n-      });\n+      }\n     } else {\n-      _fields.forEach(fieldName -> to.putValue(fieldName, AvroUtils.convert(from.get(fieldName))));\n+      for (String fieldName : _fields) {\n+        to.putValue(fieldName, AvroUtils.convert(from.get(fieldName)));\n+      }\n     }\n     return to;\n   }\n"}}, {"oid": "c19fb229be7c557accb175c804877df4b0deff69", "url": "https://github.com/apache/pinot/commit/c19fb229be7c557accb175c804877df4b0deff69", "message": "Address PR comments", "committedDate": "2020-09-11T18:42:37Z", "type": "commit"}]}