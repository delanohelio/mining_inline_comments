{"pr_number": 5613, "pr_title": "[QueryContext] Use QueryContext in functions", "pr_createdAt": "2020-06-24T20:31:45Z", "pr_url": "https://github.com/apache/pinot/pull/5613", "timeline": [{"oid": "e3f2868ed478fcdaf5a99e3a200059d5a71e4b7a", "url": "https://github.com/apache/pinot/commit/e3f2868ed478fcdaf5a99e3a200059d5a71e4b7a", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions", "committedDate": "2020-06-24T21:46:48Z", "type": "forcePushed"}, {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "url": "https://github.com/apache/pinot/commit/aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions", "committedDate": "2020-06-24T23:35:17Z", "type": "commit"}, {"oid": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "url": "https://github.com/apache/pinot/commit/aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "message": "[QueryContext] Use QueryContext in functions\n\nReplace BrokerRequest classes (AggregationInfo, TransformExpressionTree) with QueryContext classes (FunctionContext, ExpressionContext) for aggregation and transform functions", "committedDate": "2020-06-24T23:35:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2ODUzMw==", "url": "https://github.com/apache/pinot/pull/5613#discussion_r445968533", "bodyText": "what's the issue with calling init()?", "author": "mayankshriv", "createdAt": "2020-06-26T05:02:40Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/query/aggregation/function/DistinctCountThetaSketchAggregationFunction.java", "diffHunk": "@@ -83,16 +73,69 @@\n    *                    <li> Required: Last expression is the one that will be evaluated to compute final result. </li>\n    *                    </ul>\n    */\n-  public DistinctCountThetaSketchAggregationFunction(List<String> arguments)\n+  public DistinctCountThetaSketchAggregationFunction(List<ExpressionContext> arguments)\n       throws SqlParseException {\n-    int numExpressions = arguments.size();\n+    int numArguments = arguments.size();\n+\n+    // NOTE: This function expects at least 3 arguments: theta-sketch column, parameters, post-aggregation expression.\n+    Preconditions.checkArgument(numArguments >= 3,\n+        \"DistinctCountThetaSketch expects at least three arguments (theta-sketch column, parameters, post-aggregation expression), got: \",\n+        numArguments);\n+\n+    // Initialize the theta-sketch column\n+    _thetaSketchColumn = arguments.get(0);\n+    Preconditions.checkArgument(_thetaSketchColumn.getType() == ExpressionContext.Type.IDENTIFIER,\n+        \"First argument of DistinctCountThetaSketch must be identifier (theta-sketch column)\");\n+\n+    // Initialize the theta-sketch parameters\n+    ExpressionContext paramsExpression = arguments.get(1);\n+    Preconditions.checkArgument(paramsExpression.getType() == ExpressionContext.Type.LITERAL,\n+        \"Second argument of DistinctCountThetaSketch must be literal (parameters)\");\n+    _thetaSketchParams = ThetaSketchParams.fromString(paramsExpression.getLiteral());\n \n-    // This function expects at least 3 arguments: Theta Sketch Column, Predicates & final aggregation expression.\n-    Preconditions.checkArgument(numExpressions >= 3, \"DistinctCountThetaSketch expects at least three arguments, got: \",\n-        numExpressions);\n+    // Initialize the theta-sketch set operation builder\n+    _setOperationBuilder = getSetOperationBuilder();\n \n-    // Initialize all the internal state.\n-    init(arguments);\n+    // Initialize the input expressions", "originalCommit": "aeac8f4c79fb235b72e39551fe604dd17dd5f0ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3MDM2Mw==", "url": "https://github.com/apache/pinot/pull/5613#discussion_r446370363", "bodyText": "With init() the member variables cannot be declared as final. IMO declaring them as final can enhance the readability because these variables should only be set once and should not be changed.", "author": "Jackie-Jiang", "createdAt": "2020-06-26T19:27:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2ODUzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQyNTM1Ng==", "url": "https://github.com/apache/pinot/pull/5613#discussion_r446425356", "bodyText": "\ud83d\udc4d", "author": "mayankshriv", "createdAt": "2020-06-26T21:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk2ODUzMw=="}], "type": "inlineReview", "revised_code": null}]}