{"pr_number": 6001, "pr_title": "[TE] entity anomaly logging for ad-hoc debugging", "pr_createdAt": "2020-09-10T20:22:21Z", "pr_url": "https://github.com/apache/pinot/pull/6001", "timeline": [{"oid": "1692df939bd244e82e7fe1159176526ba5108fc4", "url": "https://github.com/apache/pinot/commit/1692df939bd244e82e7fe1159176526ba5108fc4", "message": "Test", "committedDate": "2020-09-10T20:19:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2MzA0OQ==", "url": "https://github.com/apache/pinot/pull/6001#discussion_r487263049", "bodyText": "hide the user name here?", "author": "jihaozh", "createdAt": "2020-09-11T20:01:27Z", "path": "thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/tools/RunAdhocDatabaseQueriesTool.java", "diffHunk": "@@ -723,9 +741,65 @@ private void rollbackMigrateSubscriptionWatermarks() {\n     }\n   }\n \n-  public static void main(String[] args) throws Exception {\n+  private void printEntityAnomalyDetails(MergedAnomalyResultDTO anomaly, String indent, int index) {\n+    LOG.info(\"\");\n+    LOG.info(\"Exploring Entity Anomaly {} with id {}\", index, anomaly.getId());\n+    LOG.info(ENTITY_STATS_TEMPLATE, anomaly.getChildren().size(), anomaly.getProperties());\n+    LOG.info(ENTITY_TIME_TEMPLATE,\n+        new DateTime(anomaly.getCreatedTime(), TIMEZONE),\n+        DATE_FORMAT.print(new DateTime(anomaly.getStartTime(), TIMEZONE)),\n+        DATE_FORMAT.print(new DateTime(anomaly.getEndTime(), TIMEZONE)));\n+  }\n \n-    File persistenceFile = new File(\"/Users/akrai/persistence-linux.yml\");\n+  /**\n+   * Visualizes the entity anomalies by printing them\n+   *\n+   * Eg: dq.printEntityAnomalyTrees(158750221, 0, System.currentTimeMillis())\n+   *\n+   * @param detectionId The detection id whose anomalies need to be printed\n+   * @param start The start time of the anomaly slice\n+   * @param end The end time of the anomaly slice\n+   */\n+  private void printEntityAnomalyTrees(long detectionId, long start, long end) {\n+    TimeSeriesLoader timeseriesLoader =\n+        new DefaultTimeSeriesLoader(metricConfigDAO, datasetConfigDAO,\n+            ThirdEyeCacheRegistry.getInstance().getQueryCache(),\n+            ThirdEyeCacheRegistry.getInstance().getTimeSeriesCache());\n+    AggregationLoader aggregationLoader =\n+        new DefaultAggregationLoader(metricConfigDAO, datasetConfigDAO,\n+            ThirdEyeCacheRegistry.getInstance().getQueryCache(),\n+            ThirdEyeCacheRegistry.getInstance().getDatasetMaxDataTimeCache());\n+    DefaultDataProvider provider =\n+        new DefaultDataProvider(metricConfigDAO, datasetConfigDAO, eventDAO, mergedResultDAO,\n+            DAORegistry.getInstance().getEvaluationManager(), timeseriesLoader, aggregationLoader,\n+            new DetectionPipelineLoader(), TimeSeriesCacheBuilder.getInstance(), AnomaliesCacheBuilder.getInstance());\n+\n+    AnomalySlice anomalySlice = new AnomalySlice();\n+    anomalySlice = anomalySlice.withDetectionId(detectionId).withStart(start).withEnd(end);\n+    Multimap<AnomalySlice, MergedAnomalyResultDTO>\n+        sliceToAnomaliesMap = provider.fetchAnomalies(Collections.singletonList(anomalySlice));\n+\n+    LOG.info(\"Total number of entity anomalies = \" + sliceToAnomaliesMap.values().size());\n+\n+    int i = 1;\n+    for (MergedAnomalyResultDTO parentAnomaly : sliceToAnomaliesMap.values()) {\n+      printEntityAnomalyDetails(parentAnomaly, \"\", i);\n+      int j = 1;\n+      for (MergedAnomalyResultDTO child : parentAnomaly.getChildren()) {\n+        printEntityAnomalyDetails(parentAnomaly, \"\\t\", j);\n+        int k = 1;\n+        for (MergedAnomalyResultDTO grandchild : child.getChildren()) {\n+          printEntityAnomalyDetails(grandchild, \"\\t\\t\", k);\n+          k++;\n+        }\n+        j++;\n+      }\n+      i++;\n+    }\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+    File persistenceFile = new File(\"/Users/akrai/persistence-local.yml\");", "originalCommit": "1692df939bd244e82e7fe1159176526ba5108fc4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "530e75f058650686b5008970630f5c6a585cadcb", "chunk": "diff --git a/thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/tools/RunAdhocDatabaseQueriesTool.java b/thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/tools/RunAdhocDatabaseQueriesTool.java\nindex 4580f5e8db..f8d576ebbe 100644\n--- a/thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/tools/RunAdhocDatabaseQueriesTool.java\n+++ b/thirdeye/thirdeye-pinot/src/test/java/org/apache/pinot/thirdeye/tools/RunAdhocDatabaseQueriesTool.java\n\n@@ -799,7 +799,7 @@ public class RunAdhocDatabaseQueriesTool {\n   }\n \n   public static void main(String[] args) throws Exception {\n-    File persistenceFile = new File(\"/Users/akrai/persistence-local.yml\");\n+    File persistenceFile = new File(\"/path/to/persistence.yml\");\n     if (!persistenceFile.exists()) {\n       System.err.println(\"Missing file:\" + persistenceFile);\n       System.exit(1);\n"}}, {"oid": "530e75f058650686b5008970630f5c6a585cadcb", "url": "https://github.com/apache/pinot/commit/530e75f058650686b5008970630f5c6a585cadcb", "message": "Updated persistence path", "committedDate": "2020-09-11T20:49:02Z", "type": "commit"}]}