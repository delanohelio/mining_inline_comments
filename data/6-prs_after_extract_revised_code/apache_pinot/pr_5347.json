{"pr_number": 5347, "pr_title": "Remove some unused TimeFieldSpec related methods from Schema", "pr_createdAt": "2020-05-07T00:58:55Z", "pr_url": "https://github.com/apache/pinot/pull/5347", "timeline": [{"oid": "19ff2b4fb6412b168eb6356c0bb2c938b54d236d", "url": "https://github.com/apache/pinot/commit/19ff2b4fb6412b168eb6356c0bb2c938b54d236d", "message": "Remove some unused TimeFieldSpec related methods from Schema", "committedDate": "2020-05-07T00:52:51Z", "type": "commit"}, {"oid": "f9033486e27d334d6d70c9835d55cb46227a8742", "url": "https://github.com/apache/pinot/commit/f9033486e27d334d6d70c9835d55cb46227a8742", "message": "Take time from table instead of reading all columns from schema, to preserve order, which is used in record reader", "committedDate": "2020-05-07T02:29:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NTkyMw==", "url": "https://github.com/apache/pinot/pull/5347#discussion_r421675923", "bodyText": "can u add a comment here that we intentionally fall through to next? thanks", "author": "mcvsubbu", "createdAt": "2020-05-07T17:35:01Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/columnminmaxvalue/ColumnMinMaxValueGenerator.java", "diffHunk": "@@ -56,32 +58,16 @@ public void addColumnMinMaxValue()\n     Preconditions.checkState(_columnMinMaxValueGeneratorMode != ColumnMinMaxValueGeneratorMode.NONE);\n \n     Schema schema = _segmentMetadata.getSchema();\n+    Set<String> columnsToAddMinMaxValue = new HashSet<>(schema.getPhysicalColumnNames());\n \n-    // Process time column\n-    String timeColumnName = schema.getTimeColumnName();\n-    if (timeColumnName != null) {\n-      addColumnMinMaxValueForColumn(timeColumnName);\n+    switch (_columnMinMaxValueGeneratorMode) {\n+      case TIME:\n+        columnsToAddMinMaxValue.removeAll(schema.getDimensionNames());", "originalCommit": "f9033486e27d334d6d70c9835d55cb46227a8742", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5MjM3NA==", "url": "https://github.com/apache/pinot/pull/5347#discussion_r421692374", "bodyText": "Done", "author": "npawar", "createdAt": "2020-05-07T18:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3NTkyMw=="}], "type": "inlineReview", "revised_code": {"commit": "e442fb882ff71c90f9c11376457832bd2232d99b", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/columnminmaxvalue/ColumnMinMaxValueGenerator.java b/pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/columnminmaxvalue/ColumnMinMaxValueGenerator.java\nindex 0ce44fb344..cfa7d93e58 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/columnminmaxvalue/ColumnMinMaxValueGenerator.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/segment/index/loader/columnminmaxvalue/ColumnMinMaxValueGenerator.java\n\n@@ -60,9 +60,13 @@ public class ColumnMinMaxValueGenerator {\n     Schema schema = _segmentMetadata.getSchema();\n     Set<String> columnsToAddMinMaxValue = new HashSet<>(schema.getPhysicalColumnNames());\n \n+    // mode ALL - use all columns\n+    // mode NON_METRIC - use all dimensions and time columns \n+    // mode TIME - use only time columns\n     switch (_columnMinMaxValueGeneratorMode) {\n       case TIME:\n         columnsToAddMinMaxValue.removeAll(schema.getDimensionNames());\n+        // Intentionally falling through to next case\n       case NON_METRIC:\n         columnsToAddMinMaxValue.removeAll(schema.getMetricNames());\n     }\n"}}, {"oid": "e442fb882ff71c90f9c11376457832bd2232d99b", "url": "https://github.com/apache/pinot/commit/e442fb882ff71c90f9c11376457832bd2232d99b", "message": "Add comment for switch", "committedDate": "2020-05-07T18:02:01Z", "type": "commit"}]}