{"pr_number": 5902, "pr_title": "Instance API to directly updateTags", "pr_createdAt": "2020-08-19T23:27:50Z", "pr_url": "https://github.com/apache/pinot/pull/5902", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1OTI3NA==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473459274", "bodyText": "Also log the tags", "author": "Jackie-Jiang", "createdAt": "2020-08-20T00:08:36Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);", "originalCommit": "e1b04f8c617f86767632e366f2487d6890a9131a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\nindex a3bc5a45fe..cb6e629eb1 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\n\n@@ -207,15 +207,16 @@ public class PinotInstanceRestletResource {\n   public SuccessResponse updateInstanceTags(\n       @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n       @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n-    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    LOGGER.info(\"Instance update request received for instance: {} and tags: {}\", instanceName, tags);\n     if (tags == null) {\n       throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n     }\n     PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n     if (!response.isSuccessful()) {\n       throw new ControllerApplicationException(LOGGER,\n-          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n+          \"Failure to update instance: \" + instanceName + \" with tags: \" + tags + \". Reason: \" + response.getMessage(),\n+          Response.Status.INTERNAL_SERVER_ERROR);\n     }\n-    return new SuccessResponse(\"Instance successfully updated\");\n+    return new SuccessResponse(\"Successfully updated tags for instance: \" + instanceName + \" tags: \" + tags);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473460422", "bodyText": "If the instance does not exist, we should return BAD_REQUEST", "author": "Jackie-Jiang", "createdAt": "2020-08-20T00:10:14Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);", "originalCommit": "e1b04f8c617f86767632e366f2487d6890a9131a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExMjQ4Mw==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r474112483", "bodyText": "Instance check is happening in PinotHelixResourceManager. How do i return BAD_REQUEST from PinotHelixResourceManager? I want that instance check to remain in PinotHelixResourceManager, because that method is synchronized and will protect against race condition with delete.", "author": "npawar", "createdAt": "2020-08-20T16:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwODk4NQ==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r474208985", "bodyText": "Seems the updateInstance has the same behavior. We should probably provide more status info in the PinotResourceManagerResponse besides success/failure. Not a blocker for this PR", "author": "Jackie-Jiang", "createdAt": "2020-08-20T19:08:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MDQyMg=="}], "type": "inlineReview", "revised_code": {"commit": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\nindex a3bc5a45fe..cb6e629eb1 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\n\n@@ -207,15 +207,16 @@ public class PinotInstanceRestletResource {\n   public SuccessResponse updateInstanceTags(\n       @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n       @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n-    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    LOGGER.info(\"Instance update request received for instance: {} and tags: {}\", instanceName, tags);\n     if (tags == null) {\n       throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n     }\n     PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n     if (!response.isSuccessful()) {\n       throw new ControllerApplicationException(LOGGER,\n-          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n+          \"Failure to update instance: \" + instanceName + \" with tags: \" + tags + \". Reason: \" + response.getMessage(),\n+          Response.Status.INTERNAL_SERVER_ERROR);\n     }\n-    return new SuccessResponse(\"Instance successfully updated\");\n+    return new SuccessResponse(\"Successfully updated tags for instance: \" + instanceName + \" tags: \" + tags);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2MTM1Nw==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473461357", "bodyText": "Pass in a List<String> so that it is easier to use?", "author": "Jackie-Jiang", "createdAt": "2020-08-20T00:11:36Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -53,6 +53,10 @@ public String forInstance(String instanceName) {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n+  public String forInstanceUpdateTags(String instanceName, String tagsList) {", "originalCommit": "e1b04f8c617f86767632e366f2487d6890a9131a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "773f80a154885427b7ca03be1e23631f02163166", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\nindex f7e683b733..d92f061796 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\n\n@@ -53,8 +55,8 @@ public class ControllerRequestURLBuilder {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n-  public String forInstanceUpdateTags(String instanceName, String tagsList) {\n-    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + tagsList);\n+  public String forInstanceUpdateTags(String instanceName, List<String> tags) {\n+    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));\n   }\n \n   public String forInstanceList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODUwOQ==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473468509", "bodyText": "Can be simplified as following (not sure why Helix does not provide setTags()), also StringUtils.split() has better performance than String.split() which takes a regex\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String[] newTags = tags.split(\",\");\n          \n          \n            \n                List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n          \n          \n            \n                for (String tag : existingTags) {\n          \n          \n            \n                  instanceConfig.removeTag(tag);\n          \n          \n            \n                }\n          \n          \n            \n                for (String tag : newTags) {\n          \n          \n            \n                  instanceConfig.addTag(tag);\n          \n          \n            \n                }\n          \n          \n            \n                List<String> tagList = Arrays.asList(StringUtils.split(tags, ','));\n          \n          \n            \n                instanceConfig.getRecord().setListField(InstanceConfig.InstanceConfigProperty.TAG_LIST.name(), tagList);", "author": "Jackie-Jiang", "createdAt": "2020-08-20T00:22:36Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);\n+    if (instanceConfig == null) {\n+      return PinotResourceManagerResponse.failure(\"Instance \" + instanceIdToUpdate + \" does not exists\");\n+    }\n+    String[] newTags = tags.split(\",\");\n+    List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n+    for (String tag : existingTags) {\n+      instanceConfig.removeTag(tag);\n+    }\n+    for (String tag : newTags) {\n+      instanceConfig.addTag(tag);\n+    }", "originalCommit": "e1b04f8c617f86767632e366f2487d6890a9131a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMwNzc0Mw==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r480307743", "bodyText": "Ah thanks for this", "author": "npawar", "createdAt": "2020-08-31T18:24:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ2ODUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\nindex d3b5d5ad22..1536128052 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n\n@@ -408,16 +409,11 @@ public class PinotHelixResourceManager {\n     if (instanceConfig == null) {\n       return PinotResourceManagerResponse.failure(\"Instance \" + instanceIdToUpdate + \" does not exists\");\n     }\n-    String[] newTags = tags.split(\",\");\n-    List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n-    for (String tag : existingTags) {\n-      instanceConfig.removeTag(tag);\n-    }\n-    for (String tag : newTags) {\n-      instanceConfig.addTag(tag);\n-    }\n+    List<String> tagList = Arrays.asList(StringUtils.split(tags, ','));\n+    instanceConfig.getRecord().setListField(InstanceConfig.InstanceConfigProperty.TAG_LIST.name(), tagList);\n     if (!_helixDataAccessor.setProperty(_keyBuilder.instanceConfig(instanceIdToUpdate), instanceConfig)) {\n-      return PinotResourceManagerResponse.failure(\"Unable to update instance: \" + instanceIdToUpdate);\n+      return PinotResourceManagerResponse\n+          .failure(\"Unable to update instance: \" + instanceIdToUpdate + \" to tags: \" + tags);\n     }\n     return PinotResourceManagerResponse.SUCCESS;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473733017", "bodyText": "run this in a compare and set loop to handle race conditions. we can wrap this function in updater", "author": "kishoreg", "createdAt": "2020-08-20T08:00:38Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java", "diffHunk": "@@ -399,6 +400,28 @@ public synchronized PinotResourceManagerResponse updateInstance(String instanceI\n     }\n   }\n \n+  /**\n+   * Updates the tags of the specified instance ID\n+   */\n+  public synchronized PinotResourceManagerResponse updateInstanceTags(String instanceIdToUpdate, String tags) {\n+    InstanceConfig instanceConfig = getHelixInstanceConfig(instanceIdToUpdate);", "originalCommit": "e1b04f8c617f86767632e366f2487d6890a9131a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExMDUzMQ==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r474110531", "bodyText": "what kind of race conditions are you thinking about? All of the methods which update this config are synchronized methods.\nAre you thinking about race conditions across controllers? (we haven't really handled that for any of our APIs)", "author": "npawar", "createdAt": "2020-08-20T16:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxOTYwNg==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r479619606", "bodyText": "ok, we can handle that in another PR", "author": "kishoreg", "createdAt": "2020-08-29T07:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMzAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\nindex d3b5d5ad22..1536128052 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/core/PinotHelixResourceManager.java\n\n@@ -408,16 +409,11 @@ public class PinotHelixResourceManager {\n     if (instanceConfig == null) {\n       return PinotResourceManagerResponse.failure(\"Instance \" + instanceIdToUpdate + \" does not exists\");\n     }\n-    String[] newTags = tags.split(\",\");\n-    List<String> existingTags = Lists.newArrayList(instanceConfig.getTags());\n-    for (String tag : existingTags) {\n-      instanceConfig.removeTag(tag);\n-    }\n-    for (String tag : newTags) {\n-      instanceConfig.addTag(tag);\n-    }\n+    List<String> tagList = Arrays.asList(StringUtils.split(tags, ','));\n+    instanceConfig.getRecord().setListField(InstanceConfig.InstanceConfigProperty.TAG_LIST.name(), tagList);\n     if (!_helixDataAccessor.setProperty(_keyBuilder.instanceConfig(instanceIdToUpdate), instanceConfig)) {\n-      return PinotResourceManagerResponse.failure(\"Unable to update instance: \" + instanceIdToUpdate);\n+      return PinotResourceManagerResponse\n+          .failure(\"Unable to update instance: \" + instanceIdToUpdate + \" to tags: \" + tags);\n     }\n     return PinotResourceManagerResponse.SUCCESS;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczNDkwMA==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r473734900", "bodyText": "print the new tags. Instance tags successfully updated from:{old tags} to: {new tags}", "author": "kishoreg", "createdAt": "2020-08-20T08:02:15Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java", "diffHunk": "@@ -196,4 +197,25 @@ public SuccessResponse updateInstance(\n     }\n     return new SuccessResponse(\"Instance successfully updated\");\n   }\n+\n+  @PUT\n+  @Path(\"/instances/{instanceName}/updateTags\")\n+  @Consumes(MediaType.APPLICATION_JSON)\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @ApiOperation(value = \"Update the tags of the specified instance\", consumes = MediaType.APPLICATION_JSON, notes = \"Update the tags of the specified instance\")\n+  @ApiResponses(value = {@ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 500, message = \"Internal error\")})\n+  public SuccessResponse updateInstanceTags(\n+      @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n+      @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n+    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    if (tags == null) {\n+      throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n+    }\n+    PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n+    if (!response.isSuccessful()) {\n+      throw new ControllerApplicationException(LOGGER,\n+          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+    return new SuccessResponse(\"Instance successfully updated\");", "originalCommit": "e1b04f8c617f86767632e366f2487d6890a9131a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\nindex a3bc5a45fe..cb6e629eb1 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotInstanceRestletResource.java\n\n@@ -207,15 +207,16 @@ public class PinotInstanceRestletResource {\n   public SuccessResponse updateInstanceTags(\n       @ApiParam(value = \"Instance name\", required = true, example = \"Server_a.b.com_20000 | Broker_my.broker.com_30000\") @PathParam(\"instanceName\") String instanceName,\n       @ApiParam(value = \"Comma separated tags list\", required = true) @QueryParam(\"tags\") String tags) {\n-    LOGGER.info(\"Instance update request received for instance: {}\", instanceName);\n+    LOGGER.info(\"Instance update request received for instance: {} and tags: {}\", instanceName, tags);\n     if (tags == null) {\n       throw new ControllerApplicationException(LOGGER, \"Must provide tags to update\", Response.Status.BAD_REQUEST);\n     }\n     PinotResourceManagerResponse response = pinotHelixResourceManager.updateInstanceTags(instanceName, tags);\n     if (!response.isSuccessful()) {\n       throw new ControllerApplicationException(LOGGER,\n-          \"Failure to update instance tags. Reason: \" + response.getMessage(), Response.Status.INTERNAL_SERVER_ERROR);\n+          \"Failure to update instance: \" + instanceName + \" with tags: \" + tags + \". Reason: \" + response.getMessage(),\n+          Response.Status.INTERNAL_SERVER_ERROR);\n     }\n-    return new SuccessResponse(\"Instance successfully updated\");\n+    return new SuccessResponse(\"Successfully updated tags for instance: \" + instanceName + \" tags: \" + tags);\n   }\n }\n"}}, {"oid": "5d65ebecfe0d568163ae90ab29c2ee630b724014", "url": "https://github.com/apache/pinot/commit/5d65ebecfe0d568163ae90ab29c2ee630b724014", "message": "Instance API to directly updateTags", "committedDate": "2020-08-31T17:17:12Z", "type": "commit"}, {"oid": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "url": "https://github.com/apache/pinot/commit/5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "message": "Review comments", "committedDate": "2020-08-31T18:23:41Z", "type": "commit"}, {"oid": "5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "url": "https://github.com/apache/pinot/commit/5481ad5cd6f1c6820b12e6c0a9ab178739a36d10", "message": "Review comments", "committedDate": "2020-08-31T18:23:41Z", "type": "forcePushed"}, {"oid": "773f80a154885427b7ca03be1e23631f02163166", "url": "https://github.com/apache/pinot/commit/773f80a154885427b7ca03be1e23631f02163166", "message": "List in param instead of string", "committedDate": "2020-08-31T18:28:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMTcwMw==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r483211703", "bodyText": "Suggest using StringUtils to join\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));\n          \n          \n            \n                return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + StringUtils.join(tags, ',');", "author": "Jackie-Jiang", "createdAt": "2020-09-03T19:39:37Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -53,6 +55,10 @@ public String forInstance(String instanceName) {\n     return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName);\n   }\n \n+  public String forInstanceUpdateTags(String instanceName, List<String> tags) {\n+    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));", "originalCommit": "773f80a154885427b7ca03be1e23631f02163166", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\nindex d92f061796..6bd53b4e9a 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\n\n@@ -56,7 +55,7 @@ public class ControllerRequestURLBuilder {\n   }\n \n   public String forInstanceUpdateTags(String instanceName, List<String> tags) {\n-    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + Joiner.on(\",\").join(tags));\n+    return StringUtil.join(\"/\", _baseUrl, \"instances\", instanceName, \"updateTags?tags=\" + StringUtils.join(tags, \",\"));\n   }\n \n   public String forInstanceList() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMjA0Mw==", "url": "https://github.com/apache/pinot/pull/5902#discussion_r483212043", "bodyText": "Not from this PR, but let's change it to lang3 for consistency\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.apache.commons.lang.StringUtils;\n          \n          \n            \n            import org.apache.commons.lang3.StringUtils;", "author": "Jackie-Jiang", "createdAt": "2020-09-03T19:40:17Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java", "diffHunk": "@@ -18,6 +18,8 @@\n  */\n package org.apache.pinot.controller.helix;\n \n+import com.google.common.base.Joiner;\n+import java.util.List;\n import javax.annotation.Nullable;\n import org.apache.commons.lang.StringUtils;", "originalCommit": "773f80a154885427b7ca03be1e23631f02163166", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\nindex d92f061796..6bd53b4e9a 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/helix/ControllerRequestURLBuilder.java\n\n@@ -18,10 +18,9 @@\n  */\n package org.apache.pinot.controller.helix;\n \n-import com.google.common.base.Joiner;\n import java.util.List;\n import javax.annotation.Nullable;\n-import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.pinot.common.utils.StringUtil;\n import org.apache.pinot.common.utils.URIUtils;\n import org.apache.pinot.controller.helix.core.rebalance.RebalanceConfigConstants;\n"}}, {"oid": "f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "url": "https://github.com/apache/pinot/commit/f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "message": "Review comments", "committedDate": "2020-09-03T20:13:27Z", "type": "commit"}, {"oid": "f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "url": "https://github.com/apache/pinot/commit/f9ce0a20a32f7da387d8d7d8ac54595e8157957d", "message": "Review comments", "committedDate": "2020-09-03T20:13:27Z", "type": "forcePushed"}]}