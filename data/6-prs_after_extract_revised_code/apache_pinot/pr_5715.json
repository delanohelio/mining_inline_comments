{"pr_number": 5715, "pr_title": "Support alias name to be same as selection", "pr_createdAt": "2020-07-18T21:40:38Z", "pr_url": "https://github.com/apache/pinot/pull/5715", "timeline": [{"oid": "799a75a1bd340635d88b0af4fefde9b73b05abce", "url": "https://github.com/apache/pinot/commit/799a75a1bd340635d88b0af4fefde9b73b05abce", "message": "Support alias name to be same as selection", "committedDate": "2020-07-18T21:46:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA==", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457626980", "bodyText": "We should not remove the sanity check on usage of alias reference\nE.g. we should reject the following query:\nSELECT colA AS a, foo(a, colB) FROM table\n\nAnother way is to replace the alias reference in selection as well", "author": "Jackie-Jiang", "createdAt": "2020-07-20T19:01:11Z", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,32 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.", "originalCommit": "799a75a1bd340635d88b0af4fefde9b73b05abce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1NjMzNg==", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457756336", "bodyText": "Added it back, basically remove colA in aliasMap for case like SELECT colA AS colA.", "author": "xiangfu0", "createdAt": "2020-07-20T23:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc1OTMyOQ==", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457759329", "bodyText": "I think the correct fix should be just not adding it to the aliasMap?\nYou can rewrite the query before handling the alias by replacing a AS a to a", "author": "Jackie-Jiang", "createdAt": "2020-07-21T00:06:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzMTkzMQ==", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457831931", "bodyText": "done.", "author": "xiangfu0", "createdAt": "2020-07-21T04:41:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNjk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "e572e681d2506869ba880ade3453189a833b69f9", "chunk": "diff --git a/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java b/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\nindex 0435712942..4ed805e34a 100644\n--- a/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n+++ b/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n\n@@ -114,11 +114,43 @@ public class CalciteSqlParser {\n     Set<String> aliasKeys = new HashSet<>();\n     for (Identifier identifier : aliasMap.keySet()) {\n       String aliasName = identifier.getName().toLowerCase();\n+      // skip for the case of `SELECT colA AS colA`\n+      Expression expression = aliasMap.get(identifier);\n+      if (expression.isSetIdentifier()) {\n+        if (expression.getIdentifier().getName().equalsIgnoreCase(aliasName)) {\n+          continue;\n+        }\n+      }\n       if (aliasKeys.contains(aliasName)) {\n         throw new SqlCompilationException(\"Duplicated alias name found.\");\n       }\n       aliasKeys.add(aliasName);\n     }\n+    for (Expression selectExpr : pinotQuery.getSelectList()) {\n+      matchIdentifierInAliasMap(selectExpr, aliasKeys);\n+    }\n+  }\n+\n+  private static void matchIdentifierInAliasMap(Expression selectExpr, Set<String> aliasKeys)\n+      throws SqlCompilationException {\n+    Function functionCall = selectExpr.getFunctionCall();\n+    if (functionCall != null) {\n+      if (functionCall.getOperator().equalsIgnoreCase(SqlKind.AS.toString())) {\n+        matchIdentifierInAliasMap(functionCall.getOperands().get(0), aliasKeys);\n+      } else {\n+        if (functionCall.getOperandsSize() > 0) {\n+          for (Expression operand : functionCall.getOperands()) {\n+            matchIdentifierInAliasMap(operand, aliasKeys);\n+          }\n+        }\n+      }\n+    }\n+    if (selectExpr.getIdentifier() != null) {\n+      if (aliasKeys.contains(selectExpr.getIdentifier().getName().toLowerCase())) {\n+        throw new SqlCompilationException(\n+            \"Alias \" + selectExpr.getIdentifier().getName() + \" cannot be referred in SELECT Clause\");\n+      }\n+    }\n   }\n \n   private static void validateGroupByClause(PinotQuery pinotQuery)\n"}}, {"oid": "e572e681d2506869ba880ade3453189a833b69f9", "url": "https://github.com/apache/pinot/commit/e572e681d2506869ba880ade3453189a833b69f9", "message": "Support alias name to be same as selection", "committedDate": "2020-07-20T23:54:26Z", "type": "forcePushed"}, {"oid": "dc12545a0db406f0a1da841da455f51df2904bb3", "url": "https://github.com/apache/pinot/commit/dc12545a0db406f0a1da841da455f51df2904bb3", "message": "Support alias name to be same as selection", "committedDate": "2020-07-21T04:27:13Z", "type": "forcePushed"}, {"oid": "e5178e4b4eb764202590f02971db43e6be44c0db", "url": "https://github.com/apache/pinot/commit/e5178e4b4eb764202590f02971db43e6be44c0db", "message": "Support alias name to be same as selection", "committedDate": "2020-07-21T04:39:49Z", "type": "commit"}, {"oid": "e5178e4b4eb764202590f02971db43e6be44c0db", "url": "https://github.com/apache/pinot/commit/e5178e4b4eb764202590f02971db43e6be44c0db", "message": "Support alias name to be same as selection", "committedDate": "2020-07-21T04:39:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0ODM5NQ==", "url": "https://github.com/apache/pinot/pull/5715#discussion_r457848395", "bodyText": "(nit)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (aliasKeys.contains(aliasName)) {\n          \n          \n            \n                    throw new SqlCompilationException(\"Duplicated alias name found.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  aliasKeys.add(aliasName);\n          \n          \n            \n                  if (!aliasKeys.add(aliasName)) {\n          \n          \n            \n                    throw new SqlCompilationException(\"Duplicated alias name found.\");\n          \n          \n            \n                  }", "author": "Jackie-Jiang", "createdAt": "2020-07-21T05:39:35Z", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -113,7 +113,11 @@ private static void validateSelectionClause(Map<Identifier, Expression> aliasMap\n     // Sanity check on selection expression shouldn't use alias reference.\n     Set<String> aliasKeys = new HashSet<>();\n     for (Identifier identifier : aliasMap.keySet()) {\n-      aliasKeys.add(identifier.getName().toLowerCase());\n+      String aliasName = identifier.getName().toLowerCase();\n+      if (aliasKeys.contains(aliasName)) {\n+        throw new SqlCompilationException(\"Duplicated alias name found.\");\n+      }\n+      aliasKeys.add(aliasName);", "originalCommit": "e5178e4b4eb764202590f02971db43e6be44c0db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "07ad284ab0bdbbe879d9b85c0416488fd89f6d38", "chunk": "diff --git a/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java b/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\nindex 38c86c852a..850a5c32ac 100644\n--- a/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n+++ b/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n\n@@ -114,10 +114,9 @@ public class CalciteSqlParser {\n     Set<String> aliasKeys = new HashSet<>();\n     for (Identifier identifier : aliasMap.keySet()) {\n       String aliasName = identifier.getName().toLowerCase();\n-      if (aliasKeys.contains(aliasName)) {\n+      if (!aliasKeys.add(aliasName)) {\n         throw new SqlCompilationException(\"Duplicated alias name found.\");\n       }\n-      aliasKeys.add(aliasName);\n     }\n     for (Expression selectExpr : pinotQuery.getSelectList()) {\n       matchIdentifierInAliasMap(selectExpr, aliasKeys);\n"}}, {"oid": "07ad284ab0bdbbe879d9b85c0416488fd89f6d38", "url": "https://github.com/apache/pinot/commit/07ad284ab0bdbbe879d9b85c0416488fd89f6d38", "message": "Update pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n\nCo-authored-by: Xiaotian (Jackie) Jiang <17555551+Jackie-Jiang@users.noreply.github.com>", "committedDate": "2020-07-21T08:36:18Z", "type": "commit"}]}