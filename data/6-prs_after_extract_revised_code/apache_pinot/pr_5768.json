{"pr_number": 5768, "pr_title": "Add untar failure server meter", "pr_createdAt": "2020-07-29T20:41:10Z", "pr_url": "https://github.com/apache/pinot/pull/5768", "timeline": [{"oid": "ef93477b20f84ffe57e0ee39481d3c759d5f86b7", "url": "https://github.com/apache/pinot/commit/ef93477b20f84ffe57e0ee39481d3c759d5f86b7", "message": "Add untar failure server meter", "committedDate": "2020-07-29T20:38:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyNDAwNg==", "url": "https://github.com/apache/pinot/pull/5768#discussion_r463124006", "bodyText": "Utils.rethrow() will keep the original exception type.", "author": "mayankshriv", "createdAt": "2020-07-30T16:32:33Z", "path": "pinot-server/src/main/java/org/apache/pinot/server/starter/helix/SegmentFetcherAndLoader.java", "diffHunk": "@@ -202,18 +206,22 @@ private String downloadSegmentToLocal(String uri, PinotCrypter crypter, String t\n           .info(\"Downloaded tarred segment: {} for table: {} from: {} to: {}, file length: {}\", segmentName, tableName,\n               uri, tempTarFile, tempTarFile.length());\n \n-      // If an exception is thrown when untarring, it means the tar file is broken OR not found after the retry.\n-      // Thus, there's no need to retry again.\n-      File tempIndexDir = TarGzCompressionUtils.untar(tempTarFile, tempSegmentDir).get(0);\n-\n-      File indexDir = new File(new File(_instanceDataManager.getSegmentDataDirectory(), tableName), segmentName);\n-      if (indexDir.exists()) {\n-        LOGGER.info(\"Deleting existing index directory for segment: {} for table: {}\", segmentName, tableName);\n-        FileUtils.deleteDirectory(indexDir);\n+      try {\n+        // If an exception is thrown when untarring, it means the tar file is broken OR not found after the retry.\n+        // Thus, there's no need to retry again.\n+        File tempIndexDir = TarGzCompressionUtils.untar(tempTarFile, tempSegmentDir).get(0);\n+        File indexDir = new File(new File(_instanceDataManager.getSegmentDataDirectory(), tableName), segmentName);\n+        if (indexDir.exists()) {\n+          LOGGER.info(\"Deleting existing index directory for segment: {} for table: {}\", segmentName, tableName);\n+          FileUtils.deleteDirectory(indexDir);\n+        }\n+        FileUtils.moveDirectory(tempIndexDir, indexDir);\n+        LOGGER.info(\"Successfully downloaded segment: {} for table: {} to: {}\", segmentName, tableName, indexDir);\n+        return indexDir.getAbsolutePath();\n+      } catch (Exception e) {\n+        _serverMetrics.addMeteredTableValue(tableName, ServerMeter.UNTAR_FAILURES, 1L);\n+        throw e;", "originalCommit": "ef93477b20f84ffe57e0ee39481d3c759d5f86b7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5bce1a323c46ae0f711beb7af039cfbd933f49a", "chunk": "diff --git a/pinot-server/src/main/java/org/apache/pinot/server/starter/helix/SegmentFetcherAndLoader.java b/pinot-server/src/main/java/org/apache/pinot/server/starter/helix/SegmentFetcherAndLoader.java\nindex e5f3c3592a..56c78dc7f2 100644\n--- a/pinot-server/src/main/java/org/apache/pinot/server/starter/helix/SegmentFetcherAndLoader.java\n+++ b/pinot-server/src/main/java/org/apache/pinot/server/starter/helix/SegmentFetcherAndLoader.java\n\n@@ -220,7 +221,8 @@ public class SegmentFetcherAndLoader {\n         return indexDir.getAbsolutePath();\n       } catch (Exception e) {\n         _serverMetrics.addMeteredTableValue(tableName, ServerMeter.UNTAR_FAILURES, 1L);\n-        throw e;\n+        Utils.rethrowException(e);\n+        return null;\n       }\n     } finally {\n       FileUtils.deleteQuietly(tempDir);\n"}}, {"oid": "f5bce1a323c46ae0f711beb7af039cfbd933f49a", "url": "https://github.com/apache/pinot/commit/f5bce1a323c46ae0f711beb7af039cfbd933f49a", "message": "Address PR comment", "committedDate": "2020-07-30T17:07:55Z", "type": "commit"}]}