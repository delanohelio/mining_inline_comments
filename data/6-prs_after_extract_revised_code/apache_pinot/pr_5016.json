{"pr_number": 5016, "pr_title": "Support alias replacement in PinotQuery", "pr_createdAt": "2020-01-25T09:59:06Z", "pr_url": "https://github.com/apache/pinot/pull/5016", "timeline": [{"oid": "be1c976497a5794bc311d2d37725f21d413b4ef2", "url": "https://github.com/apache/pinot/commit/be1c976497a5794bc311d2d37725f21d413b4ef2", "message": "Support alias replacement in PinotQuery", "committedDate": "2020-01-25T10:23:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNjQ1OA==", "url": "https://github.com/apache/pinot/pull/5016#discussion_r371406458", "bodyText": "For completeness, can we also add a test case where we have a mix of expressions and for some we use AS, and for others we don't.", "author": "siddharthteotia", "createdAt": "2020-01-27T18:26:49Z", "path": "pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java", "diffHunk": "@@ -887,4 +887,66 @@ public void testQueryValidation() {\n       Assert.assertTrue(e.getMessage().contains(\"is not allowed in GROUP BY clause.\"));\n     }\n   }\n+\n+  @Test\n+  public void testAliasQuery() {", "originalCommit": "be1c976497a5794bc311d2d37725f21d413b4ef2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NjQwMA==", "url": "https://github.com/apache/pinot/pull/5016#discussion_r371556400", "bodyText": "Updated the tests", "author": "xiangfu0", "createdAt": "2020-01-28T00:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNjQ1OA=="}], "type": "inlineReview", "revised_code": {"commit": "e0f363aebdd7949c406513442eebe9a9961c5231", "chunk": "diff --git a/pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java b/pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java\nindex 3b771ca9c2..6ae54e323a 100644\n--- a/pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java\n+++ b/pinot-common/src/test/java/org/apache/pinot/sql/parsers/CalciteSqlCompilerTest.java\n\n@@ -871,77 +871,26 @@ public class CalciteSqlCompilerTest {\n \n     // Valid groupBy non-aggregate function should pass.\n     sql =\n-        \"select secondsSinceEpoch, sum(rsvp_count), count(*) from meetupRsvp group by dateConvert(secondsSinceEpoch) limit 50\";\n+        \"select dateConvert(secondsSinceEpoch), sum(rsvp_count), count(*) from meetupRsvp group by dateConvert(secondsSinceEpoch) limit 50\";\n     pinotQuery = CalciteSqlParser.compileToPinotQuery(sql);\n     Assert.assertEquals(pinotQuery.getGroupByListSize(), 1);\n     Assert.assertEquals(pinotQuery.getSelectListSize(), 3);\n \n-    // Invalid groupBy clause shouldn't contain aggregate expression, like sum(rsvp_count), count(*).\n+    // Invalid: secondsSinceEpoch should be in groupBy clause.\n     try {\n       sql =\n-          \"select  sum(rsvp_count), count(*) from meetupRsvp group by group_country, sum(rsvp_count), count(*) limit 50\";\n+          \"select secondsSinceEpoch, dateConvert(secondsSinceEpoch), sum(rsvp_count), count(*) from meetupRsvp group by dateConvert(secondsSinceEpoch) limit 50\";\n       CalciteSqlParser.compileToPinotQuery(sql);\n       Assert.fail(\"Query should have failed compilation\");\n     } catch (Exception e) {\n       Assert.assertTrue(e instanceof SqlCompilationException);\n-      Assert.assertTrue(e.getMessage().contains(\"is not allowed in GROUP BY clause.\"));\n+      Assert.assertTrue(e.getMessage().contains(\"'secondsSinceEpoch' should appear in GROUP BY clause.\"));\n     }\n-  }\n-\n-  @Test\n-  public void testAliasQuery() {\n-    String sql;\n-    PinotQuery pinotQuery;\n-    // Valid alias in query.\n-    sql =\n-        \"select secondsSinceEpoch, sum(rsvp_count) as sum_rsvp_count, count(*) as cnt from meetupRsvp group by dateConvert(secondsSinceEpoch) order by cnt, sum_rsvp_count DESC limit 50\";\n-    pinotQuery = CalciteSqlParser.compileToPinotQuery(sql);\n-    Assert.assertEquals(pinotQuery.getSelectListSize(), 3);\n-    Assert.assertEquals(pinotQuery.getGroupByListSize(), 1);\n-    Assert.assertEquals(pinotQuery.getOrderByListSize(), 2);\n-    Assert.assertEquals(pinotQuery.getOrderByList().get(0).getFunctionCall().getOperator(), \"ASC\");\n-    Assert.assertEquals(\n-        pinotQuery.getOrderByList().get(0).getFunctionCall().getOperands().get(0).getFunctionCall().getOperator(),\n-        \"COUNT\");\n-    Assert.assertEquals(\n-        pinotQuery.getOrderByList().get(0).getFunctionCall().getOperands().get(0).getFunctionCall().getOperands().get(0)\n-            .getIdentifier().getName(), \"*\");\n-    Assert.assertEquals(pinotQuery.getOrderByList().get(1).getFunctionCall().getOperator(), \"DESC\");\n-    Assert.assertEquals(\n-        pinotQuery.getOrderByList().get(1).getFunctionCall().getOperands().get(0).getFunctionCall().getOperator(),\n-        \"SUM\");\n-    Assert.assertEquals(\n-        pinotQuery.getOrderByList().get(1).getFunctionCall().getOperands().get(0).getFunctionCall().getOperands().get(0)\n-            .getIdentifier().getName(), \"rsvp_count\");\n-\n-    sql =\n-        \"select secondsSinceEpoch/86400 AS daysSinceEpoch, sum(rsvp_count) as sum_rsvp_count, count(*) as cnt from meetupRsvp where daysSinceEpoch = 18523 group by daysSinceEpoch order by cnt, sum_rsvp_count DESC limit 50\";\n-    pinotQuery = CalciteSqlParser.compileToPinotQuery(sql);\n-    Assert.assertEquals(pinotQuery.getSelectListSize(), 3);\n-    Assert.assertEquals(pinotQuery.getFilterExpression().getFunctionCall().getOperator(), \"EQUALS\");\n-    Assert.assertEquals(\n-        pinotQuery.getFilterExpression().getFunctionCall().getOperands().get(0).getFunctionCall().getOperator(),\n-        \"DIVIDE\");\n-    Assert.assertEquals(\n-        pinotQuery.getFilterExpression().getFunctionCall().getOperands().get(0).getFunctionCall().getOperands().get(0)\n-            .getIdentifier().getName(), \"secondsSinceEpoch\");\n-    Assert.assertEquals(\n-        pinotQuery.getFilterExpression().getFunctionCall().getOperands().get(0).getFunctionCall().getOperands().get(1)\n-            .getLiteral().getLongValue(), 86400);\n-    Assert.assertEquals(\n-        pinotQuery.getFilterExpression().getFunctionCall().getOperands().get(1).getLiteral().getLongValue(), 18523);\n-    Assert.assertEquals(pinotQuery.getGroupByListSize(), 1);\n-    Assert.assertEquals(pinotQuery.getGroupByList().get(0).getFunctionCall().getOperator(), \"DIVIDE\");\n-    Assert.assertEquals(\n-        pinotQuery.getGroupByList().get(0).getFunctionCall().getOperands().get(0).getIdentifier().getName(),\n-        \"secondsSinceEpoch\");\n-    Assert.assertEquals(\n-        pinotQuery.getGroupByList().get(0).getFunctionCall().getOperands().get(1).getLiteral().getLongValue(), 86400);\n-    Assert.assertEquals(pinotQuery.getOrderByListSize(), 2);\n \n     // Invalid groupBy clause shouldn't contain aggregate expression, like sum(rsvp_count), count(*).\n     try {\n-      sql = \"select  sum(rsvp_count), count(*) as cnt from meetupRsvp group by group_country, cnt limit 50\";\n+      sql =\n+          \"select  sum(rsvp_count), count(*) from meetupRsvp group by group_country, sum(rsvp_count), count(*) limit 50\";\n       CalciteSqlParser.compileToPinotQuery(sql);\n       Assert.fail(\"Query should have failed compilation\");\n     } catch (Exception e) {\n"}}, {"oid": "e0f363aebdd7949c406513442eebe9a9961c5231", "url": "https://github.com/apache/pinot/commit/e0f363aebdd7949c406513442eebe9a9961c5231", "message": "Make toExpression by default converts SqlNode to function", "committedDate": "2020-01-27T23:53:42Z", "type": "commit"}, {"oid": "ffc1779a763dde2c8f431491dfe789931911203c", "url": "https://github.com/apache/pinot/commit/ffc1779a763dde2c8f431491dfe789931911203c", "message": "Support alias replacement in PinotQuery", "committedDate": "2020-01-27T23:53:42Z", "type": "commit"}, {"oid": "b69e8b5cde9d2e3dd16f0f2a60731220ad3490b4", "url": "https://github.com/apache/pinot/commit/b69e8b5cde9d2e3dd16f0f2a60731220ad3490b4", "message": "Adding validation for selection alias", "committedDate": "2020-01-28T00:26:24Z", "type": "commit"}, {"oid": "b69e8b5cde9d2e3dd16f0f2a60731220ad3490b4", "url": "https://github.com/apache/pinot/commit/b69e8b5cde9d2e3dd16f0f2a60731220ad3490b4", "message": "Adding validation for selection alias", "committedDate": "2020-01-28T00:26:24Z", "type": "forcePushed"}]}