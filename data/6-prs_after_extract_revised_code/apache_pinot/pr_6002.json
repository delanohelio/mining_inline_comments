{"pr_number": 6002, "pr_title": "Fixing S3PinotFS List API returned partial results", "pr_createdAt": "2020-09-11T06:45:34Z", "pr_url": "https://github.com/apache/pinot/pull/6002", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgxMDQ4Mw==", "url": "https://github.com/apache/pinot/pull/6002#discussion_r486810483", "bodyText": "will be good to log the total number of files listed as info", "author": "kishoreg", "createdAt": "2020-09-11T06:52:34Z", "path": "pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java", "diffHunk": "@@ -374,33 +375,39 @@ public long length(URI fileUri)\n       throws IOException {\n     try {\n       ImmutableList.Builder<String> builder = ImmutableList.builder();\n+      String continuationToken = null;\n+      boolean isDone = false;\n       String prefix = normalizeToDirectoryPrefix(fileUri);\n-\n-      ListObjectsV2Response listObjectsV2Response;\n-      ListObjectsV2Request.Builder listObjectsV2RequestBuilder =\n-          ListObjectsV2Request.builder().bucket(fileUri.getHost());\n-\n-      if (!prefix.equals(DELIMITER)) {\n-        listObjectsV2RequestBuilder = listObjectsV2RequestBuilder.prefix(prefix);\n-      }\n-\n-      if (!recursive) {\n-        listObjectsV2RequestBuilder = listObjectsV2RequestBuilder.delimiter(DELIMITER);\n-      }\n-\n-      ListObjectsV2Request listObjectsV2Request = listObjectsV2RequestBuilder.build();\n-      listObjectsV2Response = _s3Client.listObjectsV2(listObjectsV2Request);\n-\n-      listObjectsV2Response.contents().stream().forEach(object -> {\n-        //Only add files and not directories\n-        if (!object.key().equals(fileUri.getPath()) && !object.key().endsWith(DELIMITER)) {\n-          String fileKey = object.key();\n-          if (fileKey.startsWith(DELIMITER)) {\n-            fileKey = fileKey.substring(1);\n-          }\n-          builder.add(S3_SCHEME + fileUri.getHost() + DELIMITER + fileKey);\n+      while(!isDone) {\n+        ListObjectsV2Request.Builder listObjectsV2RequestBuilder =\n+            ListObjectsV2Request.builder().bucket(fileUri.getHost());\n+        if (!prefix.equals(DELIMITER)) {\n+          listObjectsV2RequestBuilder = listObjectsV2RequestBuilder.prefix(prefix);\n+        }\n+        if (!recursive) {\n+          listObjectsV2RequestBuilder = listObjectsV2RequestBuilder.delimiter(DELIMITER);\n         }\n-      });\n+        if (continuationToken != null) {\n+          listObjectsV2RequestBuilder.continuationToken(continuationToken);\n+        }\n+        ListObjectsV2Request listObjectsV2Request = listObjectsV2RequestBuilder.build();\n+        LOGGER.debug(\"Trying to send ListObjectsV2Request {}\", listObjectsV2Request);\n+        ListObjectsV2Response listObjectsV2Response = _s3Client.listObjectsV2(listObjectsV2Request);\n+        LOGGER.debug(\"Getting ListObjectsV2Response: {}\", listObjectsV2Response);\n+        List<S3Object> filesReturned = listObjectsV2Response.contents();\n+        filesReturned.stream().forEach(object -> {\n+          //Only add files and not directories\n+          if (!object.key().equals(fileUri.getPath()) && !object.key().endsWith(DELIMITER)) {\n+            String fileKey = object.key();\n+            if (fileKey.startsWith(DELIMITER)) {\n+              fileKey = fileKey.substring(1);\n+            }\n+            builder.add(S3_SCHEME + fileUri.getHost() + DELIMITER + fileKey);\n+          }\n+        });\n+        isDone = !listObjectsV2Response.isTruncated();\n+        continuationToken = listObjectsV2Response.nextContinuationToken();\n+      }\n       return builder.build().toArray(new String[0]);", "originalCommit": "86659186e8e2196b199a5c2bb011dd560a5a524f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgxNzgzNA==", "url": "https://github.com/apache/pinot/pull/6002#discussion_r486817834", "bodyText": "added.", "author": "xiangfu0", "createdAt": "2020-09-11T07:09:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgxMDQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "02269258463cb2aa1e70c01503cdc60bce14bb0f", "chunk": "diff --git a/pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java b/pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java\nindex 9d03c47a85..08e74c9b0a 100644\n--- a/pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java\n+++ b/pinot-plugins/pinot-file-system/pinot-s3/src/main/java/org/apache/pinot/plugin/filesystem/S3PinotFS.java\n\n@@ -408,7 +408,9 @@ public class S3PinotFS extends PinotFS {\n         isDone = !listObjectsV2Response.isTruncated();\n         continuationToken = listObjectsV2Response.nextContinuationToken();\n       }\n-      return builder.build().toArray(new String[0]);\n+      String[] listedFiles = builder.build().toArray(new String[0]);\n+      LOGGER.info(\"Listed {} files from URI: {}, is recursive: {}\", listedFiles.length, fileUri, recursive);\n+      return listedFiles;\n     } catch (Throwable t) {\n       throw new IOException(t);\n     }\n"}}, {"oid": "02269258463cb2aa1e70c01503cdc60bce14bb0f", "url": "https://github.com/apache/pinot/commit/02269258463cb2aa1e70c01503cdc60bce14bb0f", "message": "Fix S3PinotFS List API may not return full results", "committedDate": "2020-09-11T07:07:16Z", "type": "commit"}, {"oid": "02269258463cb2aa1e70c01503cdc60bce14bb0f", "url": "https://github.com/apache/pinot/commit/02269258463cb2aa1e70c01503cdc60bce14bb0f", "message": "Fix S3PinotFS List API may not return full results", "committedDate": "2020-09-11T07:07:16Z", "type": "forcePushed"}]}