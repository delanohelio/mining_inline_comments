{"pr_number": 5375, "pr_title": "Handling a no-arg function in query parsing and expression tree", "pr_createdAt": "2020-05-12T15:44:58Z", "pr_url": "https://github.com/apache/pinot/pull/5375", "timeline": [{"oid": "7869b8dd3f98041ba04d55e47a9abfcea10d6f58", "url": "https://github.com/apache/pinot/commit/7869b8dd3f98041ba04d55e47a9abfcea10d6f58", "message": "Handling a no-arg function in query parsing and expression tree", "committedDate": "2020-05-12T15:27:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0ODMyMA==", "url": "https://github.com/apache/pinot/pull/5375#discussion_r423848320", "bodyText": "Not related to this PR -- JVM won't inline this. Let's just do int size = operands.size() before the loop and i < size", "author": "siddharthteotia", "createdAt": "2020-05-12T15:57:23Z", "path": "pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java", "diffHunk": "@@ -361,8 +362,10 @@ private static Expression updateComparisonPredicate(Expression expression) {\n         default:\n           List<Expression> operands = functionCall.getOperands();\n           List<Expression> newOperands = new ArrayList<>();\n-          for (int i = 0; i < operands.size(); i++) {\n-            newOperands.add(updateComparisonPredicate(operands.get(i)));\n+          if (operands != null) {\n+            for (int i = 0; i < operands.size(); i++) {", "originalCommit": "7869b8dd3f98041ba04d55e47a9abfcea10d6f58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg5NjYzMQ==", "url": "https://github.com/apache/pinot/pull/5375#discussion_r423896631", "bodyText": "operands is null so operands.size will also throw exception, used operandsSize() instead", "author": "kishoreg", "createdAt": "2020-05-12T17:08:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0ODMyMA=="}], "type": "inlineReview", "revised_code": {"commit": "f78650718c3d5b67fccbe72d109d98d4957bd06d", "chunk": "diff --git a/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java b/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\nindex d42854982d..5abffc313b 100644\n--- a/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n+++ b/pinot-common/src/main/java/org/apache/pinot/sql/parsers/CalciteSqlParser.java\n\n@@ -360,12 +366,11 @@ public class CalciteSqlParser {\n           comparisonFunction.getFunctionCall().setOperands(exprList);\n           return comparisonFunction;\n         default:\n-          List<Expression> operands = functionCall.getOperands();\n           List<Expression> newOperands = new ArrayList<>();\n-          if (operands != null) {\n-            for (int i = 0; i < operands.size(); i++) {\n-              newOperands.add(updateComparisonPredicate(operands.get(i)));\n-            }\n+          int operandsSize = functionCall.getOperandsSize();\n+          for (int i = 0; i < operandsSize; i++) {\n+            Expression operand = functionCall.getOperands().get(i);\n+            newOperands.add(updateComparisonPredicate(operand));\n           }\n           functionCall.setOperands(newOperands);\n       }\n"}}, {"oid": "f78650718c3d5b67fccbe72d109d98d4957bd06d", "url": "https://github.com/apache/pinot/commit/f78650718c3d5b67fccbe72d109d98d4957bd06d", "message": "Addressing comments and added tests that uncovered few more places where we assumed functions have arguments", "committedDate": "2020-05-12T17:02:45Z", "type": "commit"}]}