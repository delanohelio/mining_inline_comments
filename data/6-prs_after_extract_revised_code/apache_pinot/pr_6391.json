{"pr_number": 6391, "pr_title": "Added H3IndexFilterOperator", "pr_createdAt": "2020-12-29T06:59:28Z", "pr_url": "https://github.com/apache/pinot/pull/6391", "timeline": [{"oid": "88122fc6f59251908d446c9bfde31ebdc4563cee", "url": "https://github.com/apache/pinot/commit/88122fc6f59251908d446c9bfde31ebdc4563cee", "message": "Added H3IndexFilterOperator", "committedDate": "2020-12-29T06:51:06Z", "type": "commit"}, {"oid": "1380b19866270acaee68e6c9e3a5eec743244144", "url": "https://github.com/apache/pinot/commit/1380b19866270acaee68e6c9e3a5eec743244144", "message": "updates", "committedDate": "2020-12-29T06:57:27Z", "type": "commit"}, {"oid": "e302f9b9825210c35d2f4e8d13c55759a144bb4c", "url": "https://github.com/apache/pinot/commit/e302f9b9825210c35d2f4e8d13c55759a144bb4c", "message": "revert", "committedDate": "2020-12-29T07:00:51Z", "type": "commit"}, {"oid": "275e47ee0262be997287cb14607ccc65d8b724cd", "url": "https://github.com/apache/pinot/commit/275e47ee0262be997287cb14607ccc65d8b724cd", "message": "clean up table path", "committedDate": "2020-12-29T07:09:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1OTkwNw==", "url": "https://github.com/apache/pinot/pull/6391#discussion_r549759907", "bodyText": "better to add this logic in filter plan node and fallback to expressionbased filter operator", "author": "kishoreg", "createdAt": "2020-12-29T16:06:58Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/filter/H3IndexFilterOperator.java", "diffHunk": "@@ -69,30 +76,16 @@ public H3IndexFilterOperator(Predicate predicate, IndexSegment indexSegment, int\n     } else {\n       throw new RuntimeException(\"Expecting one of the arguments of ST_DISTANCE to be an identifier\");", "originalCommit": "275e47ee0262be997287cb14607ccc65d8b724cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3NjEwOA==", "url": "https://github.com/apache/pinot/pull/6391#discussion_r549776108", "bodyText": "Yes, filter plan node has this logic, so this is defensive checking.", "author": "yupeng9", "createdAt": "2020-12-29T16:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1OTkwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2MTA5Ng==", "url": "https://github.com/apache/pinot/pull/6391#discussion_r549761096", "bodyText": "add a check that the first argument is identifier", "author": "kishoreg", "createdAt": "2020-12-29T16:10:21Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/plan/FilterPlanNode.java", "diffHunk": "@@ -93,6 +89,25 @@ public BaseFilterOperator run() {\n     }\n   }\n \n+  private boolean canApplyH3Index(Predicate predicate, FunctionContext function) {\n+    if (function.getFunctionName().equalsIgnoreCase(StDistanceFunction.FUNCTION_NAME)) {\n+      Predicate.Type type = predicate.getType();\n+      if (type != Predicate.Type.RANGE) {\n+        return false;\n+      }\n+      RangePredicate rangePredicate = (RangePredicate) predicate;\n+      // TODO: support lower bound\n+      if (rangePredicate.getUpperBound().equals(RangePredicate.UNBOUNDED) || !rangePredicate.getLowerBound()\n+          .equals(RangePredicate.UNBOUNDED)) {\n+        return false;\n+      }\n+      String columnName = function.getArguments().get(0).getIdentifier();", "originalCommit": "275e47ee0262be997287cb14607ccc65d8b724cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b1b9dd8dd7a737998efb6a293176bce8329e76d9", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/plan/FilterPlanNode.java b/pinot-core/src/main/java/org/apache/pinot/core/plan/FilterPlanNode.java\nindex d6fca05b9a..81116b27ae 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/plan/FilterPlanNode.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/plan/FilterPlanNode.java\n\n@@ -101,6 +101,10 @@ public class FilterPlanNode implements PlanNode {\n           .equals(RangePredicate.UNBOUNDED)) {\n         return false;\n       }\n+      if (function.getArguments().get(0).getType() != ExpressionContext.Type.IDENTIFIER) {\n+        // TODO: handle nested geography/geometry conversion functions\n+        return false;\n+      }\n       String columnName = function.getArguments().get(0).getIdentifier();\n       DataSource dataSource = _indexSegment.getDataSource(columnName);\n       return dataSource.getH3Index() != null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2MTU1NA==", "url": "https://github.com/apache/pinot/pull/6391#discussion_r549761554", "bodyText": "GenericQuickstart ->  quickstart cluster or just QuickstartCluster", "author": "kishoreg", "createdAt": "2020-12-29T16:11:44Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/GenericQuickstart.java", "diffHunk": "@@ -106,19 +106,19 @@ public void execute()\n \n     Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n       try {\n-        printStatus(Color.GREEN, \"***** Shutting down GitHubEventsQuickStart *****\");\n+        printStatus(Color.GREEN, \"***** Shutting down GenericQuickStart *****\");", "originalCommit": "275e47ee0262be997287cb14607ccc65d8b724cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b1b9dd8dd7a737998efb6a293176bce8329e76d9", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/GenericQuickstart.java b/pinot-tools/src/main/java/org/apache/pinot/tools/GenericQuickstart.java\nindex de297330e4..5051c1c45a 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/GenericQuickstart.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/GenericQuickstart.java\n\n@@ -106,13 +106,13 @@ public class GenericQuickstart {\n \n     Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n       try {\n-        printStatus(Color.GREEN, \"***** Shutting down GenericQuickStart *****\");\n+        printStatus(Color.GREEN, \"***** Shutting down QuickStart cluster *****\");\n         runner.stop();\n         _kafkaStarter.stop();\n         ZkStarter.stopLocalZkServer(_zookeeperInstance);\n //        FileUtils.deleteDirectory(_tableDirectory);\n       } catch (Exception e) {\n-        LOGGER.error(\"Caught exception in shutting down GenericQuickStart QuickStart\", e);\n+        LOGGER.error(\"Caught exception in shutting down QuickStart cluster\", e);\n       }\n     }));\n \n"}}, {"oid": "b1b9dd8dd7a737998efb6a293176bce8329e76d9", "url": "https://github.com/apache/pinot/commit/b1b9dd8dd7a737998efb6a293176bce8329e76d9", "message": "comments", "committedDate": "2020-12-29T16:58:47Z", "type": "commit"}]}