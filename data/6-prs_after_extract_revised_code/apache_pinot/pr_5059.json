{"pr_number": 5059, "pr_title": "[TE] Adjust dectection window using expected delay", "pr_createdAt": "2020-02-07T18:23:55Z", "pr_url": "https://github.com/apache/pinot/pull/5059", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYwMA==", "url": "https://github.com/apache/pinot/pull/5059#discussion_r376542600", "bodyText": "Shall we change it in the DataAvailabilityTaskScheduler too?", "author": "jihaozh", "createdAt": "2020-02-07T18:35:15Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/DetectionPipelineJob.java", "diffHunk": "@@ -56,9 +57,10 @@ public void execute(JobExecutionContext jobExecutionContext) throws JobExecution\n     Long id = getIdFromJobKey(jobKey.getName());\n     DetectionConfigDTO configDTO = detectionDAO.findById(id);\n \n-    // Make sure start time is not out of DETECTION_TASK_MAX_LOOKBACK_WINDOW\n+    // Get the time window for the detection job.\n+    long delay = getDetectionExpectedDelay(configDTO);\n     long end = System.currentTimeMillis();\n-    long start = Math.max(configDTO.getLastTimestamp(), end  - ThirdEyeUtils.DETECTION_TASK_MAX_LOOKBACK_WINDOW);\n+    long start = Math.max(configDTO.getLastTimestamp(), end - ThirdEyeUtils.DETECTION_TASK_MAX_LOOKBACK_WINDOW - delay);", "originalCommit": "734dbeddf882e0f8d420771997a348dda4f0c879", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1MzE5MQ==", "url": "https://github.com/apache/pinot/pull/5059#discussion_r376553191", "bodyText": "Good point. I am looking into that.", "author": "xiaohui-sun", "createdAt": "2020-02-07T18:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1OTA1OQ==", "url": "https://github.com/apache/pinot/pull/5059#discussion_r376559059", "bodyText": "I almost finished this change in DataAvailabilityTaskScheduler and am sending a PR on this.", "author": "vincentchenjl", "createdAt": "2020-02-07T19:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2MTgwMw==", "url": "https://github.com/apache/pinot/pull/5059#discussion_r376561803", "bodyText": "I am thinking of we can simplify this logic. Let's sync offline.", "author": "xiaohui-sun", "createdAt": "2020-02-07T19:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYwMA=="}], "type": "inlineReview", "revised_code": {"commit": "56678bcd845f9634c6f661d5afda375e8856b58c", "chunk": "diff --git a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/DetectionPipelineJob.java b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/DetectionPipelineJob.java\nindex fd6df28e2f..856d1854aa 100644\n--- a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/DetectionPipelineJob.java\n+++ b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/DetectionPipelineJob.java\n\n@@ -21,52 +21,32 @@ package org.apache.pinot.thirdeye.detection;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.IOException;\n-import java.util.List;\n-import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n-import java.util.stream.Collectors;\n import org.apache.pinot.thirdeye.anomaly.task.TaskConstants;\n-import org.apache.pinot.thirdeye.datalayer.bao.DetectionConfigManager;\n import org.apache.pinot.thirdeye.datalayer.bao.TaskManager;\n-import org.apache.pinot.thirdeye.datalayer.dto.DetectionConfigDTO;\n import org.apache.pinot.thirdeye.datalayer.dto.TaskDTO;\n-import org.apache.pinot.thirdeye.datalayer.util.Predicate;\n import org.apache.pinot.thirdeye.datasource.DAORegistry;\n-import org.apache.pinot.thirdeye.util.ThirdEyeUtils;\n import org.quartz.Job;\n import org.quartz.JobExecutionContext;\n-import org.quartz.JobExecutionException;\n-import org.quartz.JobKey;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.pinot.thirdeye.util.ThirdEyeUtils.*;\n-\n \n public class DetectionPipelineJob implements Job {\n   private static final Logger LOG = LoggerFactory.getLogger(DetectionPipelineJob.class);\n+\n   private TaskManager taskDAO = DAORegistry.getInstance().getTaskDAO();\n-  private DetectionConfigManager detectionDAO = DAORegistry.getInstance().getDetectionConfigManager();\n+\n   private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n   private static final long DETECTION_TASK_TIMEOUT = TimeUnit.DAYS.toMillis(1);\n \n   @Override\n-  public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {\n-    JobKey jobKey = jobExecutionContext.getJobDetail().getKey();\n-    Long id = getIdFromJobKey(jobKey.getName());\n-    DetectionConfigDTO configDTO = detectionDAO.findById(id);\n-\n-    // Get the time window for the detection job.\n-    long delay = getDetectionExpectedDelay(configDTO);\n-    long end = System.currentTimeMillis();\n-    long start = Math.max(configDTO.getLastTimestamp(), end - ThirdEyeUtils.DETECTION_TASK_MAX_LOOKBACK_WINDOW - delay);\n-    DetectionPipelineTaskInfo taskInfo = new DetectionPipelineTaskInfo(configDTO.getId(), start, end);\n-\n-    String jobName = String.format(\"%s_%d\", TaskConstants.TaskType.DETECTION, id);\n+  public void execute(JobExecutionContext jobExecutionContext) {\n+    DetectionPipelineTaskInfo taskInfo = TaskUtils.buildTaskInfo(jobExecutionContext);\n \n     // if a task is pending and not time out yet, don't schedule more\n-    if (checkTaskAlreadyRun(jobName, taskInfo)) {\n+    String jobName = String.format(\"%s_%d\", TaskConstants.TaskType.DETECTION, taskInfo.configId);\n+    if (TaskUtils.checkTaskAlreadyRun(jobName, taskInfo, DETECTION_TASK_TIMEOUT)) {\n       LOG.info(\"Skip scheduling detection task for {} with start time {}. Task is already in the queue.\", jobName,\n           taskInfo.getStart());\n       return;\n"}}, {"oid": "56678bcd845f9634c6f661d5afda375e8856b58c", "url": "https://github.com/apache/pinot/commit/56678bcd845f9634c6f661d5afda375e8856b58c", "message": "[TE] Adjust dectection window using expected delay", "committedDate": "2020-02-19T19:22:50Z", "type": "commit"}, {"oid": "33f78cedebec1a0f8ee8abcb4166f8cd34a401ee", "url": "https://github.com/apache/pinot/commit/33f78cedebec1a0f8ee8abcb4166f8cd34a401ee", "message": "[TE] Adjust dectection window using expected delay for data availability task scheduler", "committedDate": "2020-02-19T19:23:44Z", "type": "commit"}, {"oid": "33f78cedebec1a0f8ee8abcb4166f8cd34a401ee", "url": "https://github.com/apache/pinot/commit/33f78cedebec1a0f8ee8abcb4166f8cd34a401ee", "message": "[TE] Adjust dectection window using expected delay for data availability task scheduler", "committedDate": "2020-02-19T19:23:44Z", "type": "forcePushed"}]}