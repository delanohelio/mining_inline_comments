{"pr_number": 6149, "pr_title": "add validation for upsert tables", "pr_createdAt": "2020-10-15T19:36:19Z", "pr_url": "https://github.com/apache/pinot/pull/6149", "timeline": [{"oid": "d499f7c43213926bc5d559bf8ce447af4993185b", "url": "https://github.com/apache/pinot/commit/d499f7c43213926bc5d559bf8ce447af4993185b", "message": "add validation for upsert tables", "committedDate": "2020-10-15T19:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDA4OA==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505814088", "bodyText": "Please add some javadoc on the checks performed here", "author": "Jackie-Jiang", "createdAt": "2020-10-15T20:18:58Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *", "originalCommit": "d499f7c43213926bc5d559bf8ce447af4993185b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex 49840d555f..f440e959e1 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -236,34 +237,35 @@ public final class TableConfigUtils {\n \n   /**\n    * Validates the upsert-related configurations\n-   *\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n    */\n-  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n     if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n       return;\n     }\n-    // primary key exists\n-    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n-      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n-    }\n-    // replica group is configured for routing\n-    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n-        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n-      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n-    }\n-    // consumer type must be low-level\n-    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n-      StreamConfig streamConfig =\n-          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n-      if (streamConfig.getConsumerTypes().size() != 1\n-          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n-        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n-      }\n-    }\n-    // check type type is realtime\n+    // check table type is realtime\n     if (tableConfig.getTableType() != TableType.REALTIME) {\n       throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n     }\n+    // primary key exists\n+    Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n+        \"Upsert table must have primary key columns in the schema\");\n+    // consumer type must be low-level\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null,\n+        \"streamConfig must exist in the table config\");\n+    StreamConfig streamConfig =\n+        new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+    Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(),\n+        \"Upsert table must use low-level streaming consumer type\");\n+    // replica group is configured for routing\n+    Preconditions.checkState(\n+        tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n+            .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n+        \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505814806", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n          \n          \n            \n                  throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()), \"Upsert table must have primary key columns in the schema\");", "author": "Jackie-Jiang", "createdAt": "2020-10-15T20:20:27Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }", "originalCommit": "d499f7c43213926bc5d559bf8ce447af4993185b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3NzM4OA==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505877388", "bodyText": "I saw some checks in this class use precondition, others use IllegalStateException. Shall we make it consistent? @icefury71", "author": "yupeng9", "createdAt": "2020-10-15T21:39:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwOTAyNA==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505909024", "bodyText": "Will do so in my next pass", "author": "icefury71", "createdAt": "2020-10-15T22:54:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNDgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex 49840d555f..f440e959e1 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -236,34 +237,35 @@ public final class TableConfigUtils {\n \n   /**\n    * Validates the upsert-related configurations\n-   *\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n    */\n-  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n     if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n       return;\n     }\n-    // primary key exists\n-    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n-      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n-    }\n-    // replica group is configured for routing\n-    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n-        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n-      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n-    }\n-    // consumer type must be low-level\n-    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n-      StreamConfig streamConfig =\n-          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n-      if (streamConfig.getConsumerTypes().size() != 1\n-          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n-        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n-      }\n-    }\n-    // check type type is realtime\n+    // check table type is realtime\n     if (tableConfig.getTableType() != TableType.REALTIME) {\n       throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n     }\n+    // primary key exists\n+    Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n+        \"Upsert table must have primary key columns in the schema\");\n+    // consumer type must be low-level\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null,\n+        \"streamConfig must exist in the table config\");\n+    StreamConfig streamConfig =\n+        new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+    Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(),\n+        \"Upsert table must use low-level streaming consumer type\");\n+    // replica group is configured for routing\n+    Preconditions.checkState(\n+        tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n+            .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n+        \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505816751", "bodyText": "This can potentially have NPE\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n          \n          \n            \n                    .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n          \n          \n            \n                  throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n          \n          \n            \n                }\n          \n          \n            \n                Preconditions.checkState(tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE. equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()), \"Upsert table must use replica-group based routing\")", "author": "Jackie-Jiang", "createdAt": "2020-10-15T20:24:05Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }", "originalCommit": "d499f7c43213926bc5d559bf8ce447af4993185b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NDg5NQ==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505884895", "bodyText": "why? this seems the same rewrite.", "author": "yupeng9", "createdAt": "2020-10-15T21:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDQ4Mw==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505924483", "bodyText": "tableConfig.getRoutingConfig().getInstanceSelectorType() might be null", "author": "Jackie-Jiang", "createdAt": "2020-10-15T23:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTc5NA==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r506031794", "bodyText": "then it's the same :)", "author": "yupeng9", "createdAt": "2020-10-16T03:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgxNjc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex 49840d555f..f440e959e1 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -236,34 +237,35 @@ public final class TableConfigUtils {\n \n   /**\n    * Validates the upsert-related configurations\n-   *\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n    */\n-  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n     if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n       return;\n     }\n-    // primary key exists\n-    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n-      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n-    }\n-    // replica group is configured for routing\n-    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n-        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n-      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n-    }\n-    // consumer type must be low-level\n-    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n-      StreamConfig streamConfig =\n-          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n-      if (streamConfig.getConsumerTypes().size() != 1\n-          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n-        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n-      }\n-    }\n-    // check type type is realtime\n+    // check table type is realtime\n     if (tableConfig.getTableType() != TableType.REALTIME) {\n       throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n     }\n+    // primary key exists\n+    Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n+        \"Upsert table must have primary key columns in the schema\");\n+    // consumer type must be low-level\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null,\n+        \"streamConfig must exist in the table config\");\n+    StreamConfig streamConfig =\n+        new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+    Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(),\n+        \"Upsert table must use low-level streaming consumer type\");\n+    // replica group is configured for routing\n+    Preconditions.checkState(\n+        tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n+            .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n+        \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMDk0Ng==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505820946", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (streamConfig.getConsumerTypes().size() != 1\n          \n          \n            \n                      || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n          \n          \n            \n                    throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(), \"\"Upsert table must use low-level streaming consumer type\");", "author": "Jackie-Jiang", "createdAt": "2020-10-15T20:30:30Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }", "originalCommit": "d499f7c43213926bc5d559bf8ce447af4993185b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex 49840d555f..f440e959e1 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -236,34 +237,35 @@ public final class TableConfigUtils {\n \n   /**\n    * Validates the upsert-related configurations\n-   *\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n    */\n-  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n     if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n       return;\n     }\n-    // primary key exists\n-    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n-      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n-    }\n-    // replica group is configured for routing\n-    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n-        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n-      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n-    }\n-    // consumer type must be low-level\n-    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n-      StreamConfig streamConfig =\n-          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n-      if (streamConfig.getConsumerTypes().size() != 1\n-          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n-        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n-      }\n-    }\n-    // check type type is realtime\n+    // check table type is realtime\n     if (tableConfig.getTableType() != TableType.REALTIME) {\n       throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n     }\n+    // primary key exists\n+    Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n+        \"Upsert table must have primary key columns in the schema\");\n+    // consumer type must be low-level\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null,\n+        \"streamConfig must exist in the table config\");\n+    StreamConfig streamConfig =\n+        new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+    Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(),\n+        \"Upsert table must use low-level streaming consumer type\");\n+    // replica group is configured for routing\n+    Preconditions.checkState(\n+        tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n+            .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n+        \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMzczNw==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505823737", "bodyText": "Use precondition, also recommend reorder the checks in this order: upsert mode -> primary key -> table type -> consumer type -> routing type, which IMO is more intuitive", "author": "Jackie-Jiang", "createdAt": "2020-10-15T20:33:55Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "originalCommit": "d499f7c43213926bc5d559bf8ce447af4993185b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NTk3Nw==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505885977", "bodyText": "sgtm", "author": "yupeng9", "createdAt": "2020-10-15T21:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyMzczNw=="}], "type": "inlineReview", "revised_code": {"commit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex 49840d555f..f440e959e1 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -236,34 +237,35 @@ public final class TableConfigUtils {\n \n   /**\n    * Validates the upsert-related configurations\n-   *\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n    */\n-  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n     if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n       return;\n     }\n-    // primary key exists\n-    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n-      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n-    }\n-    // replica group is configured for routing\n-    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n-        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n-      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n-    }\n-    // consumer type must be low-level\n-    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n-      StreamConfig streamConfig =\n-          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n-      if (streamConfig.getConsumerTypes().size() != 1\n-          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n-        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n-      }\n-    }\n-    // check type type is realtime\n+    // check table type is realtime\n     if (tableConfig.getTableType() != TableType.REALTIME) {\n       throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n     }\n+    // primary key exists\n+    Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n+        \"Upsert table must have primary key columns in the schema\");\n+    // consumer type must be low-level\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null,\n+        \"streamConfig must exist in the table config\");\n+    StreamConfig streamConfig =\n+        new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+    Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(),\n+        \"Upsert table must use low-level streaming consumer type\");\n+    // replica group is configured for routing\n+    Preconditions.checkState(\n+        tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n+            .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n+        \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTgyODgwNA==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505828804", "bodyText": "nit: do this in the beginning ?", "author": "icefury71", "createdAt": "2020-10-15T20:40:14Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +234,38 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *\n+   */\n+  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // primary key exists\n+    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n+      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n+    }\n+    // replica group is configured for routing\n+    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n+        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n+      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n+    }\n+    // consumer type must be low-level\n+    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n+      StreamConfig streamConfig =\n+          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+      if (streamConfig.getConsumerTypes().size() != 1\n+          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n+        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n+      }\n+    }\n+    // check type type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "originalCommit": "d499f7c43213926bc5d559bf8ce447af4993185b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex 49840d555f..f440e959e1 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -236,34 +237,35 @@ public final class TableConfigUtils {\n \n   /**\n    * Validates the upsert-related configurations\n-   *\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n    */\n-  private static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n     if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n       return;\n     }\n-    // primary key exists\n-    if (schema.getPrimaryKeyColumns() == null || schema.getPrimaryKeyColumns().isEmpty()) {\n-      throw new IllegalStateException(\"Upsert table must have primary key columns in the schema.\");\n-    }\n-    // replica group is configured for routing\n-    if (tableConfig.getRoutingConfig() == null || !tableConfig.getRoutingConfig().getInstanceSelectorType()\n-        .equalsIgnoreCase(RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE)) {\n-      throw new IllegalStateException(\"Upsert table must use replicaGroup as the routing config.\");\n-    }\n-    // consumer type must be low-level\n-    if (tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null) {\n-      StreamConfig streamConfig =\n-          new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n-      if (streamConfig.getConsumerTypes().size() != 1\n-          || streamConfig.getConsumerTypes().get(0) != StreamConfig.ConsumerType.LOWLEVEL) {\n-        throw new IllegalStateException(\"Upsert table must use low-level streaming consumer type.\");\n-      }\n-    }\n-    // check type type is realtime\n+    // check table type is realtime\n     if (tableConfig.getTableType() != TableType.REALTIME) {\n       throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n     }\n+    // primary key exists\n+    Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n+        \"Upsert table must have primary key columns in the schema\");\n+    // consumer type must be low-level\n+    Preconditions.checkState(\n+        tableConfig.getIndexingConfig() != null && tableConfig.getIndexingConfig().getStreamConfigs() != null,\n+        \"streamConfig must exist in the table config\");\n+    StreamConfig streamConfig =\n+        new StreamConfig(tableConfig.getTableName(), tableConfig.getIndexingConfig().getStreamConfigs());\n+    Preconditions.checkState(streamConfig.hasLowLevelConsumerType() && !streamConfig.hasHighLevelConsumerType(),\n+        \"Upsert table must use low-level streaming consumer type\");\n+    // replica group is configured for routing\n+    Preconditions.checkState(\n+        tableConfig.getRoutingConfig() != null && RoutingConfig.REPLICA_GROUP_INSTANCE_SELECTOR_TYPE\n+            .equalsIgnoreCase(tableConfig.getRoutingConfig().getInstanceSelectorType()),\n+        \"Upsert table must use replica-group (i.e. replicaGroup) based routing\");\n   }\n \n   /**\n"}}, {"oid": "12e2ab5b400ef56fcc02f435a043785d42f71336", "url": "https://github.com/apache/pinot/commit/12e2ab5b400ef56fcc02f435a043785d42f71336", "message": "address comments", "committedDate": "2020-10-15T22:36:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDgwNw==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r505924807", "bodyText": "(nit) Use precondition for this as well", "author": "Jackie-Jiang", "createdAt": "2020-10-15T23:43:35Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java", "diffHunk": "@@ -230,6 +235,39 @@ private static void validateIngestionConfig(@Nullable IngestionConfig ingestionC\n     }\n   }\n \n+  /**\n+   * Validates the upsert-related configurations\n+   *  - check table type is realtime\n+   *  - the primary key exists on the schema\n+   *  - replica group is configured for routing type\n+   *  - consumer type must be low-level\n+   */\n+  protected static void validateUpsertConfig(TableConfig tableConfig, Schema schema) {\n+    if (tableConfig.getUpsertMode() == UpsertConfig.Mode.NONE) {\n+      return;\n+    }\n+    // check table type is realtime\n+    if (tableConfig.getTableType() != TableType.REALTIME) {", "originalCommit": "12e2ab5b400ef56fcc02f435a043785d42f71336", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMjAwMw==", "url": "https://github.com/apache/pinot/pull/6149#discussion_r506032003", "bodyText": "done", "author": "yupeng9", "createdAt": "2020-10-16T03:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyNDgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "8704e555b509a8d1c86425fff15660e85b0f675c", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\nindex f440e959e1..7d76ea9bdc 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/util/TableConfigUtils.java\n\n@@ -247,9 +247,8 @@ public final class TableConfigUtils {\n       return;\n     }\n     // check table type is realtime\n-    if (tableConfig.getTableType() != TableType.REALTIME) {\n-      throw new IllegalStateException(\"Upsert table is for realtime table only.\");\n-    }\n+    Preconditions\n+        .checkState(tableConfig.getTableType() == TableType.REALTIME, \"Upsert table is for realtime table only.\");\n     // primary key exists\n     Preconditions.checkState(CollectionUtils.isNotEmpty(schema.getPrimaryKeyColumns()),\n         \"Upsert table must have primary key columns in the schema\");\n"}}, {"oid": "8704e555b509a8d1c86425fff15660e85b0f675c", "url": "https://github.com/apache/pinot/commit/8704e555b509a8d1c86425fff15660e85b0f675c", "message": "comments", "committedDate": "2020-10-16T03:46:23Z", "type": "commit"}]}