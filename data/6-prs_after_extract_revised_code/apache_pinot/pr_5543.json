{"pr_number": 5543, "pr_title": "Added configurable http listeners for controller API", "pr_createdAt": "2020-06-11T22:34:14Z", "pr_url": "https://github.com/apache/pinot/pull/5543", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMjE0OQ==", "url": "https://github.com/apache/pinot/pull/5543#discussion_r439132149", "bodyText": "Does it make sense to do something like:\ncontroller.access.protocol = \"http\" (or, \"https\", or \"http,https\")\nand then have specific configs for the protocol as:\ncontroller.access.protocol.<yourConfiguredProtocol>.<protocol-specific-config>\nThere is already a controller.host, so I suggest we just keep that to be the same, for existing cloud installations. Otherwise, they will need to specify the same host name in multiple places. The host name is either specified or inferred, there are not any other combinations of this.  We can then leave the logic in ControllerStarter.inferHostNameifNeeded() as it is instead of looking at 3 other settings?", "author": "mcvsubbu", "createdAt": "2020-06-11T23:56:50Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/ControllerConf.java", "diffHunk": "@@ -29,21 +29,28 @@\n import org.apache.pinot.common.protocols.SegmentCompletionProtocol;\n import org.apache.pinot.common.utils.StringUtil;\n import org.apache.pinot.spi.filesystem.LocalPinotFS;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n import static org.apache.pinot.common.utils.CommonConstants.Controller.CONFIG_OF_CONTROLLER_METRICS_PREFIX;\n import static org.apache.pinot.common.utils.CommonConstants.Controller.DEFAULT_METRICS_PREFIX;\n \n \n public class ControllerConf extends PropertiesConfiguration {\n-  private static final Logger LOGGER = LoggerFactory.getLogger(ControllerConf.class);\n-\n   private static final String CONTROLLER_VIP_HOST = \"controller.vip.host\";\n   private static final String CONTROLLER_VIP_PORT = \"controller.vip.port\";\n   private static final String CONTROLLER_VIP_PROTOCOL = \"controller.vip.protocol\";\n   private static final String CONTROLLER_HOST = \"controller.host\";\n   private static final String CONTROLLER_PORT = \"controller.port\";\n+  private static final String CONTROLLER_HTTP_ENABLED = \"controller.http.enabled\";", "originalCommit": "533e7b0989540208dd0ad7dcd6d1fb3961f436a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwMjU1NQ==", "url": "https://github.com/apache/pinot/pull/5543#discussion_r439202555", "bodyText": "+1 on @mcvsubbu 's suggestion. It should be either http or https.", "author": "jackjlli", "createdAt": "2020-06-12T04:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMjE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM2ODc5OQ==", "url": "https://github.com/apache/pinot/pull/5543#discussion_r439368799", "bodyText": "@mcvsubbu I like your suggestion regarding \"dynamic\" protocol mapping. I'll rework in that sense.\nThe reason the host config is available per \"listener\" is so you can configure from which hostname the listener may be accessed. This is very useful when you want to allow http access for your internal subnet traffic (inter-service stuff) and force https for anything holding a user-facing DNS hostname or IP. Most database I've operated have this option. Kafka has this concept for instance (even auth can be configured by listener). The default value for host could certainly be re-routed to ControllerStarter.inferHostNameifNeeded() but the goal here is not to form an identity but to define allowed access. The current implementation of this PR will default host to 0.0.0.0 if undefined. The is predictable and less likely to break anything.\n@jackjlli This PR aims to offer a smooth and low risk migration path to deployments who wants to turn https on. If it's either http or https, operators have  less flexibility to plan their migration.", "author": "daniellavoie", "createdAt": "2020-06-12T11:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEzMjE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8636925d761a1e7249fa3ab7bb14f81a83cada75", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/ControllerConf.java b/pinot-controller/src/main/java/org/apache/pinot/controller/ControllerConf.java\nindex 662140232..7bed20ec9 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/ControllerConf.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/ControllerConf.java\n\n@@ -20,8 +20,12 @@ package org.apache.pinot.controller;\n \n import java.io.File;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n+import java.util.Optional;\n import java.util.Random;\n+import java.util.stream.Collectors;\n+\n import org.apache.commons.configuration.Configuration;\n import org.apache.commons.configuration.ConfigurationException;\n import org.apache.commons.configuration.PropertiesConfiguration;\n"}}, {"oid": "8636925d761a1e7249fa3ab7bb14f81a83cada75", "url": "https://github.com/apache/pinot/commit/8636925d761a1e7249fa3ab7bb14f81a83cada75", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols http/https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.<protocol>.tls.keystore.path=some-path\n  controller.access.protocols.<protocol>.tls.keystore.password=pass\n  controller.access.protocols.<protocol>.tls.requires_client_auth=false\n  controller.access.protocols.<protocol>.tls.truststore.path=some-path\n  controller.access.protocols.<protocol>.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-12T20:46:09Z", "type": "forcePushed"}, {"oid": "fd1344541cc8309c1faad332921669475efde7d0", "url": "https://github.com/apache/pinot/commit/fd1344541cc8309c1faad332921669475efde7d0", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols http/https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.<protocol>.tls.keystore.path=some-path\n  controller.access.protocols.<protocol>.tls.keystore.password=pass\n  controller.access.protocols.<protocol>.tls.requires_client_auth=false\n  controller.access.protocols.<protocol>.tls.truststore.path=some-path\n  controller.access.protocols.<protocol>.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-12T21:20:11Z", "type": "forcePushed"}, {"oid": "ce7645953877de4830837f18f3471abe6b38f9a9", "url": "https://github.com/apache/pinot/commit/ce7645953877de4830837f18f3471abe6b38f9a9", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols http/https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.<protocol>.tls.keystore.path=some-path\n  controller.access.protocols.<protocol>.tls.keystore.password=pass\n  controller.access.protocols.<protocol>.tls.requires_client_auth=false\n  controller.access.protocols.<protocol>.tls.truststore.path=some-path\n  controller.access.protocols.<protocol>.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-13T01:02:26Z", "type": "forcePushed"}, {"oid": "40873c750dcf7d36a9758f906ca35edf6cf0f5c0", "url": "https://github.com/apache/pinot/commit/40873c750dcf7d36a9758f906ca35edf6cf0f5c0", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols http/https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.<protocol>.tls.keystore.path=some-path\n  controller.access.protocols.<protocol>.tls.keystore.password=pass\n  controller.access.protocols.<protocol>.tls.requires_client_auth=false\n  controller.access.protocols.<protocol>.tls.truststore.path=some-path\n  controller.access.protocols.<protocol>.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-13T12:33:11Z", "type": "forcePushed"}, {"oid": "7394e300418d3b8997991af81290a9ef705fcbbc", "url": "https://github.com/apache/pinot/commit/7394e300418d3b8997991af81290a9ef705fcbbc", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols eg: http,https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.https.tls.keystore.path=some-path\n  controller.access.protocols.https.tls.keystore.password=pass\n  controller.access.protocols.https.tls.requires_client_auth=false\n  controller.access.protocols.https.tls.truststore.path=some-path\n  controller.access.protocols.https.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-13T12:51:48Z", "type": "forcePushed"}, {"oid": "4c8610d3fd343cf2798846466e0e30de7994557a", "url": "https://github.com/apache/pinot/commit/4c8610d3fd343cf2798846466e0e30de7994557a", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols eg: http,https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.https.tls.keystore.path=some-path\n  controller.access.protocols.https.tls.keystore.password=pass\n  controller.access.protocols.https.tls.requires_client_auth=false\n  controller.access.protocols.https.tls.truststore.path=some-path\n  controller.access.protocols.https.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-18T12:23:23Z", "type": "forcePushed"}, {"oid": "9204a8737be9ccd45c19600a872f2f82be0f5f0c", "url": "https://github.com/apache/pinot/commit/9204a8737be9ccd45c19600a872f2f82be0f5f0c", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols eg: http,https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.https.tls.keystore.path=some-path\n  controller.access.protocols.https.tls.keystore.password=pass\n  controller.access.protocols.https.tls.requires_client_auth=false\n  controller.access.protocols.https.tls.truststore.path=some-path\n  controller.access.protocols.https.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-18T13:24:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MjQyMA==", "url": "https://github.com/apache/pinot/pull/5543#discussion_r442372420", "bodyText": "Good time to change this to _httpServer", "author": "mcvsubbu", "createdAt": "2020-06-18T16:59:45Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/api/ControllerAdminApiApplication.java", "diffHunk": "@@ -18,73 +18,110 @@\n  */\n package org.apache.pinot.controller.api;\n \n-import com.google.common.base.Preconditions;\n-import io.swagger.jaxrs.config.BeanConfig;\n import java.io.IOException;\n import java.net.URI;\n import java.net.URL;\n import java.net.URLClassLoader;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n import javax.ws.rs.container.ContainerRequestContext;\n import javax.ws.rs.container.ContainerResponseContext;\n import javax.ws.rs.container.ContainerResponseFilter;\n+\n+import org.apache.pinot.controller.api.listeners.ListenerConfig;\n+import org.apache.pinot.controller.api.listeners.TlsConfiguration;\n import org.glassfish.grizzly.http.server.CLStaticHttpHandler;\n import org.glassfish.grizzly.http.server.HttpServer;\n+import org.glassfish.grizzly.http.server.NetworkListener;\n+import org.glassfish.grizzly.ssl.SSLContextConfigurator;\n+import org.glassfish.grizzly.ssl.SSLEngineConfigurator;\n import org.glassfish.hk2.utilities.binding.AbstractBinder;\n import org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory;\n+import org.glassfish.jersey.internal.guava.ThreadFactoryBuilder;\n import org.glassfish.jersey.jackson.JacksonFeature;\n import org.glassfish.jersey.media.multipart.MultiPartFeature;\n+import org.glassfish.jersey.process.JerseyProcessingUncaughtExceptionHandler;\n import org.glassfish.jersey.server.ResourceConfig;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import com.google.common.base.Preconditions;\n+\n+import io.swagger.jaxrs.config.BeanConfig;\n+\n \n public class ControllerAdminApiApplication extends ResourceConfig {\n   private static final Logger LOGGER = LoggerFactory.getLogger(ControllerAdminApiApplication.class);\n \n   private HttpServer httpServer;", "originalCommit": "9204a8737be9ccd45c19600a872f2f82be0f5f0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "615b6e4c230b3b1c62379da94fb3d384b45e0826", "chunk": "diff --git a/pinot-controller/src/main/java/org/apache/pinot/controller/api/ControllerAdminApiApplication.java b/pinot-controller/src/main/java/org/apache/pinot/controller/api/ControllerAdminApiApplication.java\nindex e1185f7a0..c5f491594 100644\n--- a/pinot-controller/src/main/java/org/apache/pinot/controller/api/ControllerAdminApiApplication.java\n+++ b/pinot-controller/src/main/java/org/apache/pinot/controller/api/ControllerAdminApiApplication.java\n\n@@ -54,7 +54,7 @@ import io.swagger.jaxrs.config.BeanConfig;\n public class ControllerAdminApiApplication extends ResourceConfig {\n   private static final Logger LOGGER = LoggerFactory.getLogger(ControllerAdminApiApplication.class);\n \n-  private HttpServer httpServer;\n+  private HttpServer _httpServer;\n   private static final String RESOURCE_PACKAGE = \"org.apache.pinot.controller.api.resources\";\n   \n   public ControllerAdminApiApplication() {\n"}}, {"oid": "615b6e4c230b3b1c62379da94fb3d384b45e0826", "url": "https://github.com/apache/pinot/commit/615b6e4c230b3b1c62379da94fb3d384b45e0826", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols eg: http,https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.https.tls.keystore.path=some-path\n  controller.access.protocols.https.tls.keystore.password=pass\n  controller.access.protocols.https.tls.requires_client_auth=false\n  controller.access.protocols.https.tls.truststore.path=some-path\n  controller.access.protocols.https.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-18T17:16:25Z", "type": "forcePushed"}, {"oid": "095921701237e756ebfb2829d82d144370187447", "url": "https://github.com/apache/pinot/commit/095921701237e756ebfb2829d82d144370187447", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols eg: http,https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.https.tls.keystore.path=some-path\n  controller.access.protocols.https.tls.keystore.password=pass\n  controller.access.protocols.https.tls.requires_client_auth=false\n  controller.access.protocols.https.tls.truststore.path=some-path\n  controller.access.protocols.https.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-18T17:33:35Z", "type": "commit"}, {"oid": "095921701237e756ebfb2829d82d144370187447", "url": "https://github.com/apache/pinot/commit/095921701237e756ebfb2829d82d144370187447", "message": "Added configurable Opt-In http listeners for controller API\n\nIntroduction of new properties:\n  controller.access.protocols=<comma seperated protocols eg: http,https>\n  controller.access.protocols.<protocol>.port=9443\n  controller.access.protocols.<protocol>.host=0.0.0.0\n  controller.access.protocols.<protocol>.vip=false\n  controller.access.protocols.https.tls.keystore.path=some-path\n  controller.access.protocols.https.tls.keystore.password=pass\n  controller.access.protocols.https.tls.requires_client_auth=false\n  controller.access.protocols.https.tls.truststore.path=some-path\n  controller.access.protocols.https.tls.truststore.password=pass\n\nOnly the 'port' property will be mandatory if a protocol is activated\nthrough controller.access.protcols\n\nThe existing 'controller.port property' is still expected by CLI. These\nnew properties are opt-in and can be activated with legacy\n'controller.port' for backward compatibility.", "committedDate": "2020-06-18T17:33:35Z", "type": "forcePushed"}]}