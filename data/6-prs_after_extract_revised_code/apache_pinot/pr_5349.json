{"pr_number": 5349, "pr_title": "Remove excessive SchemaBuilder#addTime methods", "pr_createdAt": "2020-05-07T20:54:28Z", "pr_url": "https://github.com/apache/pinot/pull/5349", "timeline": [{"oid": "247b26d1edf9c4f809d771df9bf229a18ae1c7e5", "url": "https://github.com/apache/pinot/commit/247b26d1edf9c4f809d771df9bf229a18ae1c7e5", "message": "Remove many addTime methods", "committedDate": "2020-05-07T20:32:37Z", "type": "commit"}, {"oid": "3dd199a825ba6bb89cceba459a17fce2770ab1d3", "url": "https://github.com/apache/pinot/commit/3dd199a825ba6bb89cceba459a17fce2770ab1d3", "message": "Keep only 1 addTime method", "committedDate": "2020-05-07T20:53:22Z", "type": "commit"}, {"oid": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "url": "https://github.com/apache/pinot/commit/ad0cc674a32b7049134f8d37fb83db07d6370d5b", "message": "Format classes", "committedDate": "2020-05-07T20:58:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NTQxMw==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422285413", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add single value dimensionFieldSpec with basic fields\n          \n          \n            \n                 * Add single value dimensionFieldSpec\n          \n      \n    \n    \n  \n\nthe word fields in the comment is confusing.\nI am also fine omitting javadocs from methods that are self-describing in the method name (and args)", "author": "mcvsubbu", "createdAt": "2020-05-08T17:58:02Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NTYyNg==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422285626", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n          \n          \n            \n                 * Add single value dimensionFieldSpec with a defaultNullValue", "author": "mcvsubbu", "createdAt": "2020-05-08T17:58:27Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NTg3Nw==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422285877", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add multi value dimensionFieldSpec with basic fields\n          \n          \n            \n                 * Add multi value dimensionFieldSpec", "author": "mcvsubbu", "createdAt": "2020-05-08T17:58:52Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with basic fields", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjIwNw==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422286207", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n          \n          \n            \n                 * Add single value dimensionFieldSpec with defaultNullValue", "author": "mcvsubbu", "createdAt": "2020-05-08T17:59:26Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjMxMg==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422286312", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add metricFieldSpec with basic fields\n          \n          \n            \n                 * Add metricFieldSpec", "author": "mcvsubbu", "createdAt": "2020-05-08T17:59:39Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add metricFieldSpec with basic fields", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjQyNQ==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422286425", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Add metricFieldSpec with basic fields plus defaultNullValue\n          \n          \n            \n                 * Add metricFieldSpec with defaultNullValue", "author": "mcvsubbu", "createdAt": "2020-05-08T17:59:52Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add metricFieldSpec with basic fields\n+     */\n     public SchemaBuilder addMetric(String metricName, DataType dataType) {\n       _schema.addField(new MetricFieldSpec(metricName, dataType));\n       return this;\n     }\n \n+    /**\n+     * Add metricFieldSpec with basic fields plus defaultNullValue", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzI0NA==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422287244", "bodyText": "Can we annotate it with @Deprecated so as to prevent new usage of the method?\nI suspect there are no alternative methods at this point, so you can specify exactly what conditions this method must be used (e.g. testing backward compat, like you have already done) perhaps with an @note annotation.", "author": "mcvsubbu", "createdAt": "2020-05-08T18:01:35Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java", "diffHunk": "@@ -451,118 +452,87 @@ public SchemaBuilder setSchemaName(String schemaName) {\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addSingleValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, true, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add multi value dimensionFieldSpec with basic fields\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false));\n       return this;\n     }\n \n+    /**\n+     * Add single value dimensionFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addMultiValueDimension(String dimensionName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new DimensionFieldSpec(dimensionName, dataType, false, defaultNullValue));\n       return this;\n     }\n \n+    /**\n+     * Add metricFieldSpec with basic fields\n+     */\n     public SchemaBuilder addMetric(String metricName, DataType dataType) {\n       _schema.addField(new MetricFieldSpec(metricName, dataType));\n       return this;\n     }\n \n+    /**\n+     * Add metricFieldSpec with basic fields plus defaultNullValue\n+     */\n     public SchemaBuilder addMetric(String metricName, DataType dataType, Object defaultNullValue) {\n       _schema.addField(new MetricFieldSpec(metricName, dataType, defaultNullValue));\n       return this;\n     }\n \n-    public SchemaBuilder addTime(String incomingName, TimeUnit incomingTimeUnit, DataType incomingDataType) {\n-      _schema.addField(new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnit));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, TimeUnit incomingTimeUnit, DataType incomingDataType,\n-        Object defaultNullValue) {\n-      _schema.addField(new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnit, defaultNullValue));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, TimeUnit incomingTimeUnit, DataType incomingDataType,\n-        String outgoingName, TimeUnit outgoingTimeUnit, DataType outgoingDataType) {\n-      _schema.addField(\n-          new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnit, outgoingName, outgoingDataType,\n-              outgoingTimeUnit));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, TimeUnit incomingTimeUnit, DataType incomingDataType,\n-        String outgoingName, TimeUnit outgoingTimeUnit, DataType outgoingDataType, Object defaultNullValue) {\n-      _schema.addField(\n-          new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnit, outgoingName, outgoingDataType,\n-              outgoingTimeUnit, defaultNullValue));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, int incomingTimeUnitSize, TimeUnit incomingTimeUnit,\n-        DataType incomingDataType) {\n-      _schema.addField(new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnitSize, incomingTimeUnit));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, int incomingTimeUnitSize, TimeUnit incomingTimeUnit,\n-        DataType incomingDataType, Object defaultNullValue) {\n-      _schema.addField(\n-          new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnitSize, incomingTimeUnit, defaultNullValue));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, int incomingTimeUnitSize, TimeUnit incomingTimeUnit,\n-        DataType incomingDataType, String outgoingName, int outgoingTimeUnitSize, TimeUnit outgoingTimeUnit,\n-        DataType outgoingDataType) {\n-      _schema.addField(\n-          new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnitSize, incomingTimeUnit, outgoingName,\n-              outgoingDataType, outgoingTimeUnitSize, outgoingTimeUnit));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(String incomingName, int incomingTimeUnitSize, TimeUnit incomingTimeUnit,\n-        DataType incomingDataType, String outgoingName, int outgoingTimeUnitSize, TimeUnit outgoingTimeUnit,\n-        DataType outgoingDataType, Object defaultNullValue) {\n-      _schema.addField(\n-          new TimeFieldSpec(incomingName, incomingDataType, incomingTimeUnitSize, incomingTimeUnit, outgoingName,\n-              outgoingDataType, outgoingTimeUnitSize, outgoingTimeUnit, defaultNullValue));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec) {\n-      _schema.addField(new TimeFieldSpec(incomingTimeGranularitySpec));\n-      return this;\n-    }\n-\n-    public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec, Object defaultNullValue) {\n-      _schema.addField(new TimeFieldSpec(incomingTimeGranularitySpec, defaultNullValue));\n-      return this;\n-    }\n-\n+    /**\n+     * Add timeFieldSpec with incoming and outgoing granularity spec\n+     * TODO: This is deprecated in favor of addDateTime().", "originalCommit": "ad0cc674a32b7049134f8d37fb83db07d6370d5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5NjE4MA==", "url": "https://github.com/apache/pinot/pull/5349#discussion_r422296180", "bodyText": "It was marked as Deprecated. But on second thought, I removed Deprecated. This method is not deprecated yet. It'll be truly deprecated only once we have. moved. As of now, we still want users to addTime for their main time column", "author": "npawar", "createdAt": "2020-05-08T18:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzI0NA=="}], "type": "inlineReview", "revised_code": {"commit": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\nindex b345bb1e60..27703c27ca 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/data/Schema.java\n\n@@ -502,11 +502,10 @@ public final class Schema {\n \n     /**\n      * Add timeFieldSpec with incoming and outgoing granularity spec\n-     * TODO: This is deprecated in favor of addDateTime().\n+     * TODO: This is going to be deprecated in favor of addDateTime().\n      *  Many tests use this to construct Schema with TimeFieldSpec.\n      *  This will continue to exist for a while, as it helps to test backward compatibility of schemas containing TimeFieldSpec\n      */\n-    @Deprecated\n     public SchemaBuilder addTime(TimeGranularitySpec incomingTimeGranularitySpec,\n         @Nullable TimeGranularitySpec outgoingTimeGranularitySpec) {\n       if (outgoingTimeGranularitySpec != null) {\n"}}, {"oid": "2db749470ef07f6009185e95c87bfa0d9f804f7f", "url": "https://github.com/apache/pinot/commit/2db749470ef07f6009185e95c87bfa0d9f804f7f", "message": "Remove Deprecated from addTime, as it is not deprecated as of yet", "committedDate": "2020-05-08T18:16:21Z", "type": "commit"}, {"oid": "83954109f5f160c48261e49d1e8405875bf42a2d", "url": "https://github.com/apache/pinot/commit/83954109f5f160c48261e49d1e8405875bf42a2d", "message": "Apply suggestions from code review\n\nCo-authored-by: Subbu Subramaniam <mcvsubbu@users.noreply.github.com>", "committedDate": "2020-05-08T18:18:01Z", "type": "commit"}]}