{"pr_number": 5669, "pr_title": "Fixing code to fetch the fsConfig from the right parent", "pr_createdAt": "2020-07-09T00:43:35Z", "pr_url": "https://github.com/apache/pinot/pull/5669", "timeline": [{"oid": "4c3eed8655a3b5d1cd6f702af2f7541b5c688ce1", "url": "https://github.com/apache/pinot/commit/4c3eed8655a3b5d1cd6f702af2f7541b5c688ce1", "message": "Fixing code to fetch the fsConfig from the right parent", "committedDate": "2020-07-09T00:34:23Z", "type": "commit"}, {"oid": "d9745c9a0f3f809bdeff7830be2ad92e28782367", "url": "https://github.com/apache/pinot/commit/d9745c9a0f3f809bdeff7830be2ad92e28782367", "message": "Adding test case", "committedDate": "2020-07-09T00:43:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjcxNQ==", "url": "https://github.com/apache/pinot/pull/5669#discussion_r451902715", "bodyText": "I see all non-test callers of this api are calling it with fsConfig. Is that expected? Would be good to add javadoc based on what we find.", "author": "mayankshriv", "createdAt": "2020-07-09T00:50:47Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java", "diffHunk": "@@ -60,19 +60,19 @@ public static void register(String scheme, String fsClassName, PinotConfiguratio\n     }\n   }\n \n-  public static void init(PinotConfiguration fsConfig) {\n+  public static void init(PinotConfiguration config) {", "originalCommit": "d9745c9a0f3f809bdeff7830be2ad92e28782367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1NDI3Mw==", "url": "https://github.com/apache/pinot/pull/5669#discussion_r451954273", "bodyText": "its called with fsFactoryConfig, renamed the variable.", "author": "kishoreg", "createdAt": "2020-07-09T04:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjcxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c70392426c4346dc5a49afe0ec46896dbd1cfe7b", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java b/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java\nindex eb5367c04e..b163f5cf94 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java\n\n@@ -47,12 +47,11 @@ public class PinotFSFactory {\n     }\n   };\n \n-\n-  public static void register(String scheme, String fsClassName, PinotConfiguration configuration) {\n+  public static void register(String scheme, String fsClassName, PinotConfiguration fsConfiguration) {\n     try {\n       LOGGER.info(\"Initializing PinotFS for scheme {}, classname {}\", scheme, fsClassName);\n       PinotFS pinotFS = PluginManager.get().createInstance(fsClassName);\n-      pinotFS.init(configuration);\n+      pinotFS.init(fsConfiguration);\n       PINOT_FS_MAP.put(scheme, pinotFS);\n     } catch (Exception e) {\n       LOGGER.error(\"Could not instantiate file system for class {} with scheme {}\", fsClassName, scheme, e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjgwMw==", "url": "https://github.com/apache/pinot/pull/5669#discussion_r451902803", "bodyText": "Let's not log the configs probably as they might contain sensitive content (e.g. password)", "author": "Jackie-Jiang", "createdAt": "2020-07-09T00:51:08Z", "path": "pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java", "diffHunk": "@@ -60,19 +60,19 @@ public static void register(String scheme, String fsClassName, PinotConfiguratio\n     }\n   }\n \n-  public static void init(PinotConfiguration fsConfig) {\n+  public static void init(PinotConfiguration config) {\n     // Get schemes and their respective classes\n-    PinotConfiguration schemesConfiguration = fsConfig.subset(CLASS);\n+    PinotConfiguration schemesConfiguration = config.subset(CLASS);\n     List<String> schemes = schemesConfiguration.getKeys();\n     if (!schemes.isEmpty()) {\n       LOGGER.info(\"Did not find any fs classes in the configuration\");\n     }\n     \n     for(String scheme : schemes){\n-      String fsClassName = (String) schemesConfiguration.getProperty(scheme);\n-      \n-      LOGGER.info(\"Got scheme {}, classname {}, starting to initialize\", scheme, fsClassName);\n-      register(scheme, fsClassName, schemesConfiguration.subset(scheme));\n+      String fsClassName = schemesConfiguration.getProperty(scheme);\n+      PinotConfiguration fsConfiguration = config.subset(scheme);\n+      LOGGER.info(\"Got scheme {}, initializing class {} with config : {} \", scheme, fsClassName, fsConfiguration.toMap());", "originalCommit": "d9745c9a0f3f809bdeff7830be2ad92e28782367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1NDMyOQ==", "url": "https://github.com/apache/pinot/pull/5669#discussion_r451954329", "bodyText": "fixed", "author": "kishoreg", "createdAt": "2020-07-09T04:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "c70392426c4346dc5a49afe0ec46896dbd1cfe7b", "chunk": "diff --git a/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java b/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java\nindex eb5367c04e..b163f5cf94 100644\n--- a/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java\n+++ b/pinot-spi/src/main/java/org/apache/pinot/spi/filesystem/PinotFSFactory.java\n\n@@ -47,12 +47,11 @@ public class PinotFSFactory {\n     }\n   };\n \n-\n-  public static void register(String scheme, String fsClassName, PinotConfiguration configuration) {\n+  public static void register(String scheme, String fsClassName, PinotConfiguration fsConfiguration) {\n     try {\n       LOGGER.info(\"Initializing PinotFS for scheme {}, classname {}\", scheme, fsClassName);\n       PinotFS pinotFS = PluginManager.get().createInstance(fsClassName);\n-      pinotFS.init(configuration);\n+      pinotFS.init(fsConfiguration);\n       PINOT_FS_MAP.put(scheme, pinotFS);\n     } catch (Exception e) {\n       LOGGER.error(\"Could not instantiate file system for class {} with scheme {}\", fsClassName, scheme, e);\n"}}, {"oid": "c70392426c4346dc5a49afe0ec46896dbd1cfe7b", "url": "https://github.com/apache/pinot/commit/c70392426c4346dc5a49afe0ec46896dbd1cfe7b", "message": "addressing comments", "committedDate": "2020-07-09T04:16:21Z", "type": "commit"}, {"oid": "e3900cf3521fde11f115d2aaecb6204894ed8a67", "url": "https://github.com/apache/pinot/commit/e3900cf3521fde11f115d2aaecb6204894ed8a67", "message": "Pinot fs bug fix (#5674)\n\n* Fixed missing registration for Hadoop JobRunner\r\n\r\n* Caused by Phase 1 of configuration refactor\r\n\r\n* Fixed base configuration constructor for PinotConfiguration\r\n\r\n* Fixed the PinotConfiguration constructor that accepts a Commons\r\nConfiguration.\r\n* Full test coverage of PinotConfiguration", "committedDate": "2020-07-10T14:28:37Z", "type": "commit"}]}