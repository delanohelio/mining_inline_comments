{"pr_number": 5674, "pr_title": "Pinot fs bug fix", "pr_createdAt": "2020-07-09T15:10:17Z", "pr_url": "https://github.com/apache/pinot/pull/5674", "timeline": [{"oid": "980a8ac6ca37b26f10b5e0dd84379d6e03cdd28f", "url": "https://github.com/apache/pinot/commit/980a8ac6ca37b26f10b5e0dd84379d6e03cdd28f", "message": "Fixed missing registration for Hadoop JobRunner\n\n* Caused by Phase 1 of configuration refactor", "committedDate": "2020-07-09T14:58:24Z", "type": "commit"}, {"oid": "e7532645de4fafabec6ad9e4332d8293dee00421", "url": "https://github.com/apache/pinot/commit/e7532645de4fafabec6ad9e4332d8293dee00421", "message": "Fixed base configuration constructor for PinotConfiguration\n\n* Fixed the PinotConfiguration constructor that accepts a Commons\nConfiguration.\n* Full test coverage of PinotConfiguration", "committedDate": "2020-07-09T15:00:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyMTA3MQ==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452321071", "bodyText": "Thanks for adding these unit tests. Wondering if we can also exercise the various code paths that perform different subsettings (eg for PinotFS, Crypter, Server, etc) with tests?", "author": "mayankshriv", "createdAt": "2020-07-09T15:54:16Z", "path": "pinot-spi/src/test/java/org/apache/pinot/spi/env/PinotConfigurationTest.java", "diffHunk": "@@ -24,24 +24,116 @@\n import java.nio.file.Files;\n import java.nio.file.Paths;\n import java.nio.file.StandardCopyOption;\n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n+import org.apache.commons.configuration.ConfigurationException;\n+import org.apache.commons.configuration.PropertiesConfiguration;\n+import org.apache.pinot.spi.ingestion.batch.spec.PinotFSSpec;\n import org.testng.Assert;\n import org.testng.annotations.Test;\n \n \n public class PinotConfigurationTest {\n+\n+  @Test\n+  public void assertBaseOperations() {", "originalCommit": "e7532645de4fafabec6ad9e4332d8293dee00421", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNDIyMA==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452324220", "bodyText": "Pleasure is mine @mayankshriv,\nLine 116 of PinotConfiguration executes some tests on config subsettings. Kishore added tests specifically for PinotFS, any additional contextual tests related to Crypter and Server should be hosted in their dedicated modules. That would be a great addition but maybe should be tied to a future PR that aimed at adding tests for these specific modules. What do you think?", "author": "daniellavoie", "createdAt": "2020-07-09T15:59:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyMTA3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3NTg2OA==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452975868", "bodyText": "I acknowledge that lack of coverage was an issue prior to the PinotConfiguration change. However, given that this change has a bigger impact, we run the risk of running into issues each time a specific setup (eg Crypter) is exercised. I was proposing to simply check the config part of those modules working.\nIdeally, it would have been great to have those tests to begin with. But in the absence of those (and now that we have run into an issue), the next best thing would have been adding tests to ensure the coverage before the PinotConfiguration refactor.\nOpen to suggestion if you have any, on avoiding running into issues and fixing them as we find them.", "author": "mayankshriv", "createdAt": "2020-07-10T17:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyMTA3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk3Njg3Ng==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452976876", "bodyText": "@jackjlli ^^. Perhaps you can update this thread based on your findings of successfully deploying (including crypter and Azure configs).", "author": "mayankshriv", "createdAt": "2020-07-10T17:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyMTA3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452326951", "bodyText": "can we delete the constructor from PinotConfiguration\npublic PinotConfiguration(PinotFSSpec pinotFSSpec) {\n      }", "author": "kishoreg", "createdAt": "2020-07-09T16:03:30Z", "path": "pinot-plugins/pinot-batch-ingestion/pinot-batch-ingestion-hadoop/src/main/java/org/apache/pinot/plugin/ingestion/batch/hadoop/HadoopSegmentGenerationJobRunner.java", "diffHunk": "@@ -132,7 +132,7 @@ public void run()\n     //init all file systems\n     List<PinotFSSpec> pinotFSSpecs = _spec.getPinotFSSpecs();\n     for (PinotFSSpec pinotFSSpec : pinotFSSpecs) {\n-      new PinotConfiguration(pinotFSSpec);\n+      PinotFSFactory.register(pinotFSSpec.getScheme(), pinotFSSpec.getClassName(), new PinotConfiguration(pinotFSSpec));", "originalCommit": "e7532645de4fafabec6ad9e4332d8293dee00421", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyOTEyNA==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452329124", "bodyText": "Considering that it only copies properties from PinotFSSpec.getConfig, it seems like a reasonable ask.", "author": "daniellavoie", "createdAt": "2020-07-09T16:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDYwMw==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452430603", "bodyText": "So, here's my second thoughts about this. PinotFSSpec.getConfig returns a Map<String, String> where the the other constructor takes Map<String, Object>. This use case only occurs when PinotFSSpec is involve. If I remove the constructor, I will have to setup an abstract utilitary function that translates the Map<String, String> to Map<String, Object> anyway.", "author": "daniellavoie", "createdAt": "2020-07-09T19:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDc1NA==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452824754", "bodyText": "Few other options\n\nadd a constructor PinotConfiguration(map<string,string> )\nchange getConfigs() in pinotFSSpec to return map<string,object>", "author": "kishoreg", "createdAt": "2020-07-10T12:54:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyODIyOQ==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452828229", "bodyText": "PinotConfiguration(map<string,string>) will conflict with the existing PinotConfiguration(map<string,object>) What I can do is rewrite PinotConfiguration(map<string,string>) as a static function PinotConfiguation.fromStringProperties(map<string,string>) and have that function include the mapping logic of the current PinotConfiguration(PinotFSSpec pinotFSSpec). PinotFSSpec would be out of the way with that.", "author": "daniellavoie", "createdAt": "2020-07-10T13:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg0MDM1MA==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452840350", "bodyText": "sure", "author": "kishoreg", "createdAt": "2020-07-10T13:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3OTI5Ng==", "url": "https://github.com/apache/pinot/pull/5674#discussion_r452879296", "bodyText": "you can do this in the next PR", "author": "kishoreg", "createdAt": "2020-07-10T14:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyNjk1MQ=="}], "type": "inlineReview", "revised_code": null}]}