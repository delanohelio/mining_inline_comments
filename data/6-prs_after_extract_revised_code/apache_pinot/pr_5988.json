{"pr_number": 5988, "pr_title": "Fetch Brokers From Controller in JDBC", "pr_createdAt": "2020-09-08T07:05:22Z", "pr_url": "https://github.com/apache/pinot/pull/5988", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5OTY2NQ==", "url": "https://github.com/apache/pinot/pull/5988#discussion_r484699665", "bodyText": "not needed, you can use the default tenant name and go with it.", "author": "kishoreg", "createdAt": "2020-09-08T07:14:10Z", "path": "pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotDriver.java", "diffHunk": "@@ -37,16 +38,18 @@\n public class PinotDriver implements Driver {\n   private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(PinotDriver.class);\n   private final String SCHEME = \"pinot\";\n+  public static final String TENANT = \"tenant\";\n \n   @Override\n   public Connection connect(String url, Properties info)\n       throws SQLException {\n     try {\n       LOGGER.info(\"Initiating connection to database for url: \" + url);\n       PinotClientTransport pinotClientTransport = new JsonAsyncHttpPinotClientTransportFactory().buildTransport();\n-      List<String> brokerList = DriverUtils.getBrokersFromURL(url);\n       String controllerUrl = DriverUtils.getControllerFromURL(url);\n-      return new PinotConnection(brokerList, controllerUrl, pinotClientTransport);\n+      Preconditions.checkArgument(info.containsKey(TENANT), \"Pinot tenant missing in the properties\");", "originalCommit": "636d8937771d50f0bd5ecd83afbca01891152192", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1OTU0NA==", "url": "https://github.com/apache/pinot/pull/5988#discussion_r493659544", "bodyText": "done", "author": "KKcorps", "createdAt": "2020-09-23T14:53:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY5OTY2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1b6b852b63c4c76282e545f67f27371caa6e20c8", "chunk": "diff --git a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotDriver.java b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotDriver.java\nindex 0e6418e811..b57f09ea8f 100644\n--- a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotDriver.java\n+++ b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotDriver.java\n\n@@ -39,6 +39,7 @@ public class PinotDriver implements Driver {\n   private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(PinotDriver.class);\n   private final String SCHEME = \"pinot\";\n   public static final String TENANT = \"tenant\";\n+  public static final String DEFAULT_TENANT = \"DefaultTenant\";\n \n   @Override\n   public Connection connect(String url, Properties info)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwMDYyNQ==", "url": "https://github.com/apache/pinot/pull/5988#discussion_r484700625", "bodyText": "is this called for every connection creation or every query?", "author": "kishoreg", "createdAt": "2020-09-08T07:15:54Z", "path": "pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/PinotControllerTransport.java", "diffHunk": "@@ -77,13 +76,31 @@ public SchemaResponse getTableSchema(String table, String controllerAddress) {\n       final Future<Response> response =\n           requestBuilder.addHeader(\"Content-Type\", \"application/json; charset=utf-8\").execute();\n \n-      SchemaResponseFuture schemaResponseFuture = new SchemaResponseFuture(response, url);\n+      SchemaResponse.SchemaResponseFuture schemaResponseFuture = new SchemaResponse.SchemaResponseFuture(response, url);\n       return schemaResponseFuture.get();\n     } catch (ExecutionException e) {\n       throw new PinotClientException(e);\n     }\n   }\n \n+  public ControllerTenantBrokerResponse getBrokersFromController(String controllerAddress, String tenant) {", "originalCommit": "636d8937771d50f0bd5ecd83afbca01891152192", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxMzUxNA==", "url": "https://github.com/apache/pinot/pull/5988#discussion_r484713514", "bodyText": "every connection creation.", "author": "KKcorps", "createdAt": "2020-09-08T07:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwMDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1OTkwMQ==", "url": "https://github.com/apache/pinot/pull/5988#discussion_r493659901", "bodyText": "Resolved in #6020", "author": "KKcorps", "createdAt": "2020-09-23T14:54:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwMDYyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f6391573cc5f2a6abecb9f9999145af86b8a50f", "chunk": "diff --git a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/PinotControllerTransport.java b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/PinotControllerTransport.java\nindex c673d8cfab..0b602a9418 100644\n--- a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/PinotControllerTransport.java\n+++ b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/PinotControllerTransport.java\n\n@@ -85,7 +85,7 @@ public class PinotControllerTransport {\n \n   public ControllerTenantBrokerResponse getBrokersFromController(String controllerAddress, String tenant) {\n     try {\n-      String url = \"http://\" + controllerAddress + \"/brokers/tenants/\" + tenant;\n+      String url = \"http://\" + controllerAddress + \"/v2/brokers/tenants/\" + tenant;\n       AsyncHttpClient.BoundRequestBuilder requestBuilder = _httpClient.prepareGet(url);\n       if (_headers != null) {\n         _headers.forEach((k, v) -> requestBuilder.addHeader(k, v));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwMTExNg==", "url": "https://github.com/apache/pinot/pull/5988#discussion_r484701116", "bodyText": "better to get the host name port from instance config instead of the broker name", "author": "kishoreg", "createdAt": "2020-09-08T07:16:49Z", "path": "pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/response/ControllerTenantBrokerResponse.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.client.controller.response;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.ObjectReader;\n+import com.google.common.collect.Lists;\n+import com.ning.http.client.Response;\n+\n+import java.io.IOException;\n+import java.util.*;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+\n+public class ControllerTenantBrokerResponse {\n+  private JsonNode _brokers;\n+\n+  private ControllerTenantBrokerResponse() {\n+\n+  }\n+\n+  private ControllerTenantBrokerResponse(JsonNode controllerTenantBrokerResponse) {\n+    _brokers = controllerTenantBrokerResponse;\n+  }\n+\n+  public static ControllerTenantBrokerResponse fromJson(JsonNode controllerTenantBrokerResponse) {\n+    return new ControllerTenantBrokerResponse(controllerTenantBrokerResponse);\n+  }\n+\n+  public static ControllerTenantBrokerResponse empty() {\n+    return new ControllerTenantBrokerResponse();\n+  }\n+\n+  public List<String> getBrokers() {\n+    List<String> brokerList = new ArrayList<>();\n+\n+    for (JsonNode broker : _brokers) {\n+      String[] brokerPath = broker.textValue().split(\"_\");", "originalCommit": "636d8937771d50f0bd5ecd83afbca01891152192", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b6b852b63c4c76282e545f67f27371caa6e20c8", "chunk": "diff --git a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/response/ControllerTenantBrokerResponse.java b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/response/ControllerTenantBrokerResponse.java\nindex e8fbb7b133..4410dc2ec8 100644\n--- a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/response/ControllerTenantBrokerResponse.java\n+++ b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/controller/response/ControllerTenantBrokerResponse.java\n\n@@ -54,11 +54,10 @@ public class ControllerTenantBrokerResponse {\n     List<String> brokerList = new ArrayList<>();\n \n     for (JsonNode broker : _brokers) {\n-      String[] brokerPath = broker.textValue().split(\"_\");\n-      if(brokerPath.length < 3){\n-        throw new RuntimeException(\"Invalid Broker Name found in controller: \" + broker.textValue());\n-      }\n-      String brokerHostPort = String.format(\"%s:%s\", brokerPath[1], brokerPath[2]);\n+      String hostName = broker.get(\"host\").textValue();\n+      Integer port = broker.get(\"port\").intValue();\n+\n+      String brokerHostPort = String.format(\"%s:%d\", hostName, port);\n       brokerList.add(brokerHostPort);\n     }\n \n"}}, {"oid": "1b6b852b63c4c76282e545f67f27371caa6e20c8", "url": "https://github.com/apache/pinot/commit/1b6b852b63c4c76282e545f67f27371caa6e20c8", "message": "Fetch hostname from response  rather than split the instance name", "committedDate": "2020-10-13T05:11:44Z", "type": "forcePushed"}, {"oid": "8b29541e14325465eb85473f08076031b4f3d04b", "url": "https://github.com/apache/pinot/commit/8b29541e14325465eb85473f08076031b4f3d04b", "message": "Fetch hostname from response  rather than split the instance name", "committedDate": "2020-10-14T07:08:51Z", "type": "forcePushed"}, {"oid": "b204ff91ebd484220142c4262fa24e22d9d00ea3", "url": "https://github.com/apache/pinot/commit/b204ff91ebd484220142c4262fa24e22d9d00ea3", "message": "Add support to fetch brokers from controller", "committedDate": "2020-10-22T05:53:10Z", "type": "commit"}, {"oid": "ce3926030da52049bea48bd619f663521c7ebd49", "url": "https://github.com/apache/pinot/commit/ce3926030da52049bea48bd619f663521c7ebd49", "message": "Add license header", "committedDate": "2020-10-22T05:53:10Z", "type": "commit"}, {"oid": "3e42134395a4de84b13e786f3369e4953e0a7188", "url": "https://github.com/apache/pinot/commit/3e42134395a4de84b13e786f3369e4953e0a7188", "message": "Use default tenant in case a tenant is not available", "committedDate": "2020-10-22T05:53:10Z", "type": "commit"}, {"oid": "6fd05e79ebcf4a2039f726381865d7946b0844d7", "url": "https://github.com/apache/pinot/commit/6fd05e79ebcf4a2039f726381865d7946b0844d7", "message": "Fetch hostname from response  rather than split the instance name", "committedDate": "2020-10-22T05:53:10Z", "type": "commit"}, {"oid": "8f6391573cc5f2a6abecb9f9999145af86b8a50f", "url": "https://github.com/apache/pinot/commit/8f6391573cc5f2a6abecb9f9999145af86b8a50f", "message": "Bug fix: change API to v2 and fetch proper host name", "committedDate": "2020-10-22T05:53:10Z", "type": "commit"}, {"oid": "8f6391573cc5f2a6abecb9f9999145af86b8a50f", "url": "https://github.com/apache/pinot/commit/8f6391573cc5f2a6abecb9f9999145af86b8a50f", "message": "Bug fix: change API to v2 and fetch proper host name", "committedDate": "2020-10-22T05:53:10Z", "type": "forcePushed"}]}