{"pr_number": 5484, "pr_title": "Extract all fields if fieldsToRead is null/empty", "pr_createdAt": "2020-06-02T02:55:00Z", "pr_url": "https://github.com/apache/pinot/pull/5484", "timeline": [{"oid": "426d894b2520e6b5d73462ae2a6d9d4c216e8d8e", "url": "https://github.com/apache/pinot/commit/426d894b2520e6b5d73462ae2a6d9d4c216e8d8e", "message": "Extract all fields if fieldsToRead is null/empty", "committedDate": "2020-06-02T02:46:29Z", "type": "commit"}, {"oid": "aff98272d7de54522a48ec8da1ecde289d1ac567", "url": "https://github.com/apache/pinot/commit/aff98272d7de54522a48ec8da1ecde289d1ac567", "message": "Comment, remove dependency", "committedDate": "2020-06-02T02:54:13Z", "type": "commit"}, {"oid": "11f45938d108460d55b776198292741de65b7572", "url": "https://github.com/apache/pinot/commit/11f45938d108460d55b776198292741de65b7572", "message": "avro dependency to pinot-spi", "committedDate": "2020-06-02T16:36:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3Mzc3Nw==", "url": "https://github.com/apache/pinot/pull/5484#discussion_r434773777", "bodyText": "update the javadoc for streamdecoder with the new contract", "author": "kishoreg", "createdAt": "2020-06-03T18:34:27Z", "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "diffHunk": "@@ -39,10 +42,15 @@ public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtra\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    for (String fieldName : _fields) {\n-      Object value = from.get(fieldName);\n-      Object convertedValue = AvroUtils.convert(value);\n-      to.putValue(fieldName, convertedValue);\n+    if (_fields == null || _fields.isEmpty()) { // extract all", "originalCommit": "11f45938d108460d55b776198292741de65b7572", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b92a30400a8868e4409fa6fdcee08fefdcf7e830", "chunk": "diff --git a/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java b/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\nindex 9c1253d246..b9ac3cd202 100644\n--- a/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\n+++ b/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\n\n@@ -34,15 +34,19 @@ import org.apache.pinot.spi.utils.JsonUtils;\n  */\n public class AvroRecordExtractor implements RecordExtractor<GenericRecord> {\n   private Set<String> _fields;\n+  private boolean _extractAll = false;\n \n   @Override\n   public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtractorConfig) {\n     _fields = fields;\n+    if (fields == null || fields.isEmpty()) {\n+      _extractAll = true;\n+    }\n   }\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    if (_fields == null || _fields.isEmpty()) { // extract all\n+    if (_extractAll) {\n       Map<String, Object> jsonMap = JsonUtils.genericRecordToJson(from);\n       jsonMap.forEach((fieldName, value) -> to.putValue(fieldName, RecordReaderUtils.convert(value)));\n     } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NDU4Mw==", "url": "https://github.com/apache/pinot/pull/5484#discussion_r434774583", "bodyText": "since we know this in the init, can we set a final boolean _extractAll? jvm might be able to optimize it.", "author": "kishoreg", "createdAt": "2020-06-03T18:35:54Z", "path": "pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java", "diffHunk": "@@ -39,10 +42,15 @@ public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtra\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    for (String fieldName : _fields) {\n-      Object value = from.get(fieldName);\n-      Object convertedValue = AvroUtils.convert(value);\n-      to.putValue(fieldName, convertedValue);\n+    if (_fields == null || _fields.isEmpty()) { // extract all", "originalCommit": "11f45938d108460d55b776198292741de65b7572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyODUxNg==", "url": "https://github.com/apache/pinot/pull/5484#discussion_r434828516", "bodyText": "done", "author": "npawar", "createdAt": "2020-06-03T20:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NDU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b92a30400a8868e4409fa6fdcee08fefdcf7e830", "chunk": "diff --git a/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java b/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\nindex 9c1253d246..b9ac3cd202 100644\n--- a/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\n+++ b/pinot-plugins/pinot-input-format/pinot-avro-base/src/main/java/org/apache/pinot/plugin/inputformat/avro/AvroRecordExtractor.java\n\n@@ -34,15 +34,19 @@ import org.apache.pinot.spi.utils.JsonUtils;\n  */\n public class AvroRecordExtractor implements RecordExtractor<GenericRecord> {\n   private Set<String> _fields;\n+  private boolean _extractAll = false;\n \n   @Override\n   public void init(Set<String> fields, @Nullable RecordExtractorConfig recordExtractorConfig) {\n     _fields = fields;\n+    if (fields == null || fields.isEmpty()) {\n+      _extractAll = true;\n+    }\n   }\n \n   @Override\n   public GenericRow extract(GenericRecord from, GenericRow to) {\n-    if (_fields == null || _fields.isEmpty()) { // extract all\n+    if (_extractAll) {\n       Map<String, Object> jsonMap = JsonUtils.genericRecordToJson(from);\n       jsonMap.forEach((fieldName, value) -> to.putValue(fieldName, RecordReaderUtils.convert(value)));\n     } else {\n"}}, {"oid": "b92a30400a8868e4409fa6fdcee08fefdcf7e830", "url": "https://github.com/apache/pinot/commit/b92a30400a8868e4409fa6fdcee08fefdcf7e830", "message": "Javadoc and _extractAll field", "committedDate": "2020-06-03T20:16:33Z", "type": "commit"}]}