{"pr_number": 5946, "pr_title": "Return datatypes along with column names", "pr_createdAt": "2020-08-29T15:49:28Z", "pr_url": "https://github.com/apache/pinot/pull/5946", "timeline": [{"oid": "8f96600c83b7bd6f9b9676fee1f3714bdc890d93", "url": "https://github.com/apache/pinot/commit/8f96600c83b7bd6f9b9676fee1f3714bdc890d93", "message": "Return datatypes along with column names", "committedDate": "2020-08-29T15:48:07Z", "type": "commit"}, {"oid": "3404b4629b6e15a8e61eeec5f43714047ba57384", "url": "https://github.com/apache/pinot/commit/3404b4629b6e15a8e61eeec5f43714047ba57384", "message": "Add test for result data type", "committedDate": "2020-08-30T09:56:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNzExMA==", "url": "https://github.com/apache/pinot/pull/5946#discussion_r479807110", "bodyText": "nit(formatting): i + 1", "author": "xiangfu0", "createdAt": "2020-08-30T19:32:52Z", "path": "pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotResultSet.java", "diffHunk": "@@ -62,6 +62,7 @@ public PinotResultSet(org.apache.pinot.client.ResultSet resultSet) {\n     _closed = false;\n     for (int i = 0; i < _totalColumns; i++) {\n       _columns.put(_resultSet.getColumnName(i), i + 1);\n+      _columnDataTypes.put(i+1, _resultSet.getColumnDataType(i));", "originalCommit": "3404b4629b6e15a8e61eeec5f43714047ba57384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2NzAxMA==", "url": "https://github.com/apache/pinot/pull/5946#discussion_r484567010", "bodyText": "done", "author": "KKcorps", "createdAt": "2020-09-07T21:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNzExMA=="}], "type": "inlineReview", "revised_code": {"commit": "97c70fdc905f6175e1563f742d9421736a3e903b", "chunk": "diff --git a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotResultSet.java b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotResultSet.java\nindex 56b80ef066..cf3ddbce3f 100644\n--- a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotResultSet.java\n+++ b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotResultSet.java\n\n@@ -62,7 +62,7 @@ public class PinotResultSet extends AbstractBaseResultSet {\n     _closed = false;\n     for (int i = 0; i < _totalColumns; i++) {\n       _columns.put(_resultSet.getColumnName(i), i + 1);\n-      _columnDataTypes.put(i+1, _resultSet.getColumnDataType(i));\n+      _columnDataTypes.put(i + 1, _resultSet.getColumnDataType(i));\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNzE1Ng==", "url": "https://github.com/apache/pinot/pull/5946#discussion_r479807156", "bodyText": "nit: space between comma and \"STRING\"", "author": "xiangfu0", "createdAt": "2020-08-30T19:33:38Z", "path": "pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/utils/Constants.java", "diffHunk": "@@ -33,7 +33,7 @@\n   public static final String[] SCHEMA_COLUMNS_DTYPES = {\"STRING\", \"STRING\"};\n \n   public static final String[] TABLE_COLUMNS = {\"TABLE_SCHEM\", \"TABLE_CATALOG\", \"TABLE_NAME\", \"TABLE_TYPE\", \"REMARKS\", \"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"SELF_REFERENCING_COL_NAME\", \"REF_GENERATION\"};\n-  public static final String[] TABLE_COLUMNS_DTYPES = {\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\"};\n+  public static final String[] TABLE_COLUMNS_DTYPES = {\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\",\"STRING\"};", "originalCommit": "3404b4629b6e15a8e61eeec5f43714047ba57384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2NzAyOQ==", "url": "https://github.com/apache/pinot/pull/5946#discussion_r484567029", "bodyText": "done", "author": "KKcorps", "createdAt": "2020-09-07T21:07:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNzE1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "97c70fdc905f6175e1563f742d9421736a3e903b", "chunk": "diff --git a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/utils/Constants.java b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/utils/Constants.java\nindex 18239959e8..425bec9e38 100644\n--- a/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/utils/Constants.java\n+++ b/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/utils/Constants.java\n\n@@ -32,11 +30,15 @@ public class Constants {\n   public static final String[] SCHEMA_COLUMNS = {\"TABLE_SCHEM\", \"TABLE_CATALOG\"};\n   public static final String[] SCHEMA_COLUMNS_DTYPES = {\"STRING\", \"STRING\"};\n \n-  public static final String[] TABLE_COLUMNS = {\"TABLE_SCHEM\", \"TABLE_CATALOG\", \"TABLE_NAME\", \"TABLE_TYPE\", \"REMARKS\", \"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"SELF_REFERENCING_COL_NAME\", \"REF_GENERATION\"};\n-  public static final String[] TABLE_COLUMNS_DTYPES = {\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\", \"STRING\",\"STRING\",\"STRING\"};\n+  public static final String[] TABLE_COLUMNS =\n+      {\"TABLE_SCHEM\", \"TABLE_CATALOG\", \"TABLE_NAME\", \"TABLE_TYPE\", \"REMARKS\", \"TYPE_CAT\", \"TYPE_SCHEM\", \"TYPE_NAME\", \"SELF_REFERENCING_COL_NAME\", \"REF_GENERATION\"};\n+  public static final String[] TABLE_COLUMNS_DTYPES =\n+      {\"STRING\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"STRING\"};\n \n-  public static final String[] TABLE_SCHEMA_COLUMNS = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\", \"SCOPE_CATALOG\", \"SCOPE_SCHEMA\", \"SCOPE_TABLE\", \"SOURCE_DATA_TYPE\", \"IS_AUTOINCREMENT\", \"IS_GENERATEDCOLUMN\"};\n-  public static final String[] TABLE_SCHEMA_COLUMNS_DTYPES = {\"STRING\", \"STRING\", \"STRING\", \"STRING\", \"INT\", \"STRING\", \"INT\", \"INT\", \"INT\", \"INT\", \"INT\", \"STRING\", \"STRING\", \"INT\", \"INT\", \"INT\",\"INT\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"INT\", \"STRING\", \"STRING\"};\n+  public static final String[] TABLE_SCHEMA_COLUMNS =\n+      {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\", \"SCOPE_CATALOG\", \"SCOPE_SCHEMA\", \"SCOPE_TABLE\", \"SOURCE_DATA_TYPE\", \"IS_AUTOINCREMENT\", \"IS_GENERATEDCOLUMN\"};\n+  public static final String[] TABLE_SCHEMA_COLUMNS_DTYPES =\n+      {\"STRING\", \"STRING\", \"STRING\", \"STRING\", \"INT\", \"STRING\", \"INT\", \"INT\", \"INT\", \"INT\", \"INT\", \"STRING\", \"STRING\", \"INT\", \"INT\", \"INT\", \"INT\", \"STRING\", \"STRING\", \"STRING\", \"STRING\", \"INT\", \"STRING\", \"STRING\"};\n \n   public static final String[] TABLE_TYPES_COLUMNS = {\"TABLE_TYPE\"};\n   public static final String[] TABLE_TYPES_COLUMNS_DTYPES = {\"STRING\"};\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNzI0NA==", "url": "https://github.com/apache/pinot/pull/5946#discussion_r479807244", "bodyText": "nit: i + 1", "author": "xiangfu0", "createdAt": "2020-08-30T19:34:34Z", "path": "pinot-clients/pinot-jdbc-client/src/test/java/org/apache/pinot/client/PinotResultSetTest.java", "diffHunk": "@@ -149,6 +149,18 @@ public void testFindColumn()\n     }\n   }\n \n+  @Test\n+  public void testGetResultMetadata() throws Exception {\n+    ResultSetGroup resultSetGroup = getResultSet(TEST_RESULT_SET_RESOURCE);\n+    ResultSet resultSet = resultSetGroup.getResultSet(0);\n+    PinotResultSet pinotResultSet = new PinotResultSet(resultSet);\n+    ResultSetMetaData pinotResultSetMetadata = pinotResultSet.getMetaData();\n+\n+    for (int i = 0; i < resultSet.getColumnCount(); i++) {\n+      Assert.assertEquals(pinotResultSetMetadata.getColumnTypeName(i+1), resultSet.getColumnDataType(i));", "originalCommit": "3404b4629b6e15a8e61eeec5f43714047ba57384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2NzAyNw==", "url": "https://github.com/apache/pinot/pull/5946#discussion_r484567027", "bodyText": "done", "author": "KKcorps", "createdAt": "2020-09-07T21:07:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNzI0NA=="}], "type": "inlineReview", "revised_code": {"commit": "97c70fdc905f6175e1563f742d9421736a3e903b", "chunk": "diff --git a/pinot-clients/pinot-jdbc-client/src/test/java/org/apache/pinot/client/PinotResultSetTest.java b/pinot-clients/pinot-jdbc-client/src/test/java/org/apache/pinot/client/PinotResultSetTest.java\nindex 1a5772f780..e1b470b398 100644\n--- a/pinot-clients/pinot-jdbc-client/src/test/java/org/apache/pinot/client/PinotResultSetTest.java\n+++ b/pinot-clients/pinot-jdbc-client/src/test/java/org/apache/pinot/client/PinotResultSetTest.java\n\n@@ -150,14 +150,15 @@ public class PinotResultSetTest {\n   }\n \n   @Test\n-  public void testGetResultMetadata() throws Exception {\n+  public void testGetResultMetadata()\n+      throws Exception {\n     ResultSetGroup resultSetGroup = getResultSet(TEST_RESULT_SET_RESOURCE);\n     ResultSet resultSet = resultSetGroup.getResultSet(0);\n     PinotResultSet pinotResultSet = new PinotResultSet(resultSet);\n     ResultSetMetaData pinotResultSetMetadata = pinotResultSet.getMetaData();\n \n     for (int i = 0; i < resultSet.getColumnCount(); i++) {\n-      Assert.assertEquals(pinotResultSetMetadata.getColumnTypeName(i+1), resultSet.getColumnDataType(i));\n+      Assert.assertEquals(pinotResultSetMetadata.getColumnTypeName(i + 1), resultSet.getColumnDataType(i));\n     }\n   }\n \n"}}, {"oid": "97c70fdc905f6175e1563f742d9421736a3e903b", "url": "https://github.com/apache/pinot/commit/97c70fdc905f6175e1563f742d9421736a3e903b", "message": "Fix style checks", "committedDate": "2020-09-07T21:06:48Z", "type": "commit"}]}