{"pr_number": 5194, "pr_title": "Move table config into pinot-spi", "pr_createdAt": "2020-03-27T23:29:58Z", "pr_url": "https://github.com/apache/pinot/pull/5194", "timeline": [{"oid": "1e055048c4f6c918553adebb8331d70dfc450cae", "url": "https://github.com/apache/pinot/commit/1e055048c4f6c918553adebb8331d70dfc450cae", "message": "Move table config into pinot-spi\n\nMotivation:\nTable config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\nMake all configs POJO like, and Json serializable for backward-compatibility\nDe-couple the Helix properties and utils from the configs\nAdd the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\nRefactor StorageQuotaCheckerTest to integrate with POJO like QuotaConfig\nTextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\nTableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-27T23:36:31Z", "type": "forcePushed"}, {"oid": "c39a2df1393cad7eb2b75decc0904765e45ec273", "url": "https://github.com/apache/pinot/commit/c39a2df1393cad7eb2b75decc0904765e45ec273", "message": "Move table config into pinot-spi\n\nMotivation:\nTable config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\nMake all configs POJO like, and Json serializable for backward-compatibility\nDe-couple the Helix properties and utils from the configs\nAdd the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\nRefactor StorageQuotaCheckerTest to integrate with POJO like QuotaConfig\nTextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\nTableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-28T08:03:25Z", "type": "forcePushed"}, {"oid": "30ea5f47ad16e4115263003cb4bd9bb7dbac06d5", "url": "https://github.com/apache/pinot/commit/30ea5f47ad16e4115263003cb4bd9bb7dbac06d5", "message": "Move table config into pinot-spi\n\nMotivation:\nTable config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\nMake all configs POJO like, and Json serializable for backward-compatibility\nDe-couple the Helix properties and utils from the configs\nAdd the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\nRefactor StorageQuotaCheckerTest to integrate with POJO like QuotaConfig\nTextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\nTableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-28T21:32:41Z", "type": "forcePushed"}, {"oid": "0e719fcbfa72bb09439a6bce4ef8bf50b18618a7", "url": "https://github.com/apache/pinot/commit/0e719fcbfa72bb09439a6bce4ef8bf50b18618a7", "message": "Move table config into pinot-spi\n\nMotivation:\nTable config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\nMake all configs POJO like, and Json serializable for backward-compatibility\nDe-couple the Helix properties and utils from the configs\nAdd the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\nRefactor DataSizeUtils (from DataSize), integrate StorageQuotaChecker and HelixExternalViewBasedQueryQuotaManager with the POJO like QuotaConfig\nTextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\nTableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-29T00:37:55Z", "type": "forcePushed"}, {"oid": "8ea3f803c246ee2d636bf227201a175a87844e41", "url": "https://github.com/apache/pinot/commit/8ea3f803c246ee2d636bf227201a175a87844e41", "message": "Move table config into pinot-spi\n\nMotivation:\nTable config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\nMake all configs POJO like, and Json serializable for backward-compatibility\nDe-couple the Helix properties and utils from the configs\nAdd the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\nRefactor DataSizeUtils (from DataSize), integrate StorageQuotaChecker and HelixExternalViewBasedQueryQuotaManager with the POJO like QuotaConfig\nTextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\nTableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-29T01:42:32Z", "type": "forcePushed"}, {"oid": "0e3bdafacfed6f62f8917832d5960ae8cba6c232", "url": "https://github.com/apache/pinot/commit/0e3bdafacfed6f62f8917832d5960ae8cba6c232", "message": "Move table config into pinot-spi\n\nMotivation:\n- Table config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\n- Make all configs POJO like, and Json serializable for backward-compatibility\n- De-couple the Helix properties and utils from the configs\n- Add the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\n- Refactor DataSizeUtils (from DataSize), integrate StorageQuotaChecker and HelixExternalViewBasedQueryQuotaManager with the POJO like QuotaConfig\n- TextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\n- TableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-29T03:04:57Z", "type": "commit"}, {"oid": "0e3bdafacfed6f62f8917832d5960ae8cba6c232", "url": "https://github.com/apache/pinot/commit/0e3bdafacfed6f62f8917832d5960ae8cba6c232", "message": "Move table config into pinot-spi\n\nMotivation:\n- Table config should be moved to pinot-spi so that user interface can access it (e.g. segment generation spec)\n\nChanges:\n- Make all configs POJO like, and Json serializable for backward-compatibility\n- De-couple the Helix properties and utils from the configs\n- Add the TableConfigSerDeTest to check all the serialization/de-serialization\n\nSide changes:\n- Refactor DataSizeUtils (from DataSize), integrate StorageQuotaChecker and HelixExternalViewBasedQueryQuotaManager with the POJO like QuotaConfig\n- TextIndexConfigValidator is integrated into `TableConfigUtils.validate(TableConfig tableConfig)`\n\nBACKWARD-INCOMPATIBILITY:\n- TableConfig no longer support de-serialization from json string of nested json string (i.e. no `\\\"` inside the json)", "committedDate": "2020-03-29T03:04:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwMzkwMw==", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399703903", "bodyText": "parseDouble would throw NumberFormatException if the the input string isn't a valid number.", "author": "jackjlli", "createdAt": "2020-03-28T20:06:00Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java", "diffHunk": "@@ -200,14 +201,7 @@ private void createRateLimiter(String tableNameWithType, ExternalView brokerReso\n     LOGGER.info(\"The number of online brokers for table {} is {}\", tableNameWithType, onlineCount);\n \n     // Get the dynamic rate\n-    double overallRate;\n-    if (quotaConfig.isMaxQueriesPerSecondValid()) {\n-      overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());\n-    } else {\n-      LOGGER.error(\"Failed to init qps quota: error when parsing qps quota: {} for table: {}\",\n-          quotaConfig.getMaxQueriesPerSecond(), tableNameWithType);\n-      return;\n-    }\n+    double overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());", "originalCommit": "c39a2df1393cad7eb2b75decc0904765e45ec273", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MjQzMQ==", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399872431", "bodyText": "Already fixed", "author": "Jackie-Jiang", "createdAt": "2020-03-29T23:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwMzkwMw=="}], "type": "inlineReview", "revised_code": {"commit": "0e719fcbfa72bb09439a6bce4ef8bf50b18618a7", "chunk": "diff --git a/pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java b/pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java\nindex 11504b3a33..d40eb0b665 100644\n--- a/pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java\n+++ b/pinot-broker/src/main/java/org/apache/pinot/broker/queryquota/HelixExternalViewBasedQueryQuotaManager.java\n\n@@ -201,7 +178,7 @@ public class HelixExternalViewBasedQueryQuotaManager implements ClusterChangeHan\n     LOGGER.info(\"The number of online brokers for table {} is {}\", tableNameWithType, onlineCount);\n \n     // Get the dynamic rate\n-    double overallRate = Double.parseDouble(quotaConfig.getMaxQueriesPerSecond());\n+    double overallRate = quotaConfig.getMaxQPS();\n \n     // Get stat from property store\n     String tableConfigPath = constructTableConfigPath(tableNameWithType);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDA1MA==", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399704050", "bodyText": "Why does the builder need to be a public class instead of an inner class?", "author": "jackjlli", "createdAt": "2020-03-28T20:07:44Z", "path": "pinot-broker/src/test/java/org/apache/pinot/broker/broker/HelixBrokerStarterTest.java", "diffHunk": "@@ -83,11 +84,11 @@ public void setUp()\n         .addTime(TIME_COLUMN_NAME, TimeUnit.DAYS, FieldSpec.DataType.INT).build();\n     _helixResourceManager.addSchema(schema, true);\n     TableConfig offlineTableConfig =\n-        new TableConfig.Builder(TableType.OFFLINE).setTableName(RAW_TABLE_NAME).setTimeColumnName(TIME_COLUMN_NAME)\n+        new TableConfigBuilder(TableType.OFFLINE).setTableName(RAW_TABLE_NAME).setTimeColumnName(TIME_COLUMN_NAME)", "originalCommit": "c39a2df1393cad7eb2b75decc0904765e45ec273", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MjkzOA==", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399872938", "bodyText": "To keep the config class clean and maintain the builder as an util class. There are multiple ways to get the table config: using a builder; deserialize from json; construct from ZNRecord.", "author": "Jackie-Jiang", "createdAt": "2020-03-29T23:53:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDA1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDM1Ng==", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399704356", "bodyText": "There are multiple ways to convert to TableConfig, like TableConfigUtils and Builder. Can they be unified to one class?", "author": "jackjlli", "createdAt": "2020-03-28T20:11:07Z", "path": "pinot-controller/src/main/java/org/apache/pinot/controller/util/TableRetentionValidator.java", "diffHunk": "@@ -184,7 +185,7 @@ public void run()\n \n   private TableConfig getTableConfig(String tableName)\n       throws Exception {\n-    return TableConfig.fromZnRecord(\n+    return TableConfigUtils.fromZNRecord(", "originalCommit": "c39a2df1393cad7eb2b75decc0904765e45ec273", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg3MzE3OQ==", "url": "https://github.com/apache/pinot/pull/5194#discussion_r399873179", "bodyText": "No because ZNRecord is a Helix specific concept which should not be pulled into the pinot-spi.", "author": "Jackie-Jiang", "createdAt": "2020-03-29T23:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwNDM1Ng=="}], "type": "inlineReview", "revised_code": null}]}