{"pr_number": 5737, "pr_title": "Improvements to RealtimeProvisioningHelper command", "pr_createdAt": "2020-07-22T23:04:32Z", "pr_url": "https://github.com/apache/pinot/pull/5737", "timeline": [{"oid": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "url": "https://github.com/apache/pinot/commit/b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "message": "Improvements to RealtimepRovisioningHelper command\n\n- Fixed a bug where we were looking for push frequency setting in the table config\n  Push frequency is not usually set in realtime table, so changed that to be an\n  optional argument instead.\n- Instead of push frequency, the user may specify retentionHours, meaning the number\n  of hours of most recent data that will be queried most often.\n- Added the amount of total mapped memory to the output\n- Added the number of segments queried per host to the output.\n- Added a link to the documentation to the output.\n- Instead of accepting the time taken to consume the segment, introduced an argument\n  to accept the ingestion rate per partition. This is determined easier when looking\n  at metrics for the topic that we need to ingest, and is more convenient when\n  an offline segment is being provided as a sample\n- Added the command line arguments printed with the output so that it is easy for us\n  to debug when we get questions from the community.\n\nTODO Next:\n\nCan we compute a score and just recommend a configuration? We know we want to minimize\nnum segments scanned per host, num hosts, segment size (to fit memory).\n\nIssue #5588\n\nHere is a sample output:\n============================================================\nRealtimeProvisioningHelperCommand -tableConfigFile /Users/ssubrama/tmp/samza/realtimeTableConfig.json -numPartitions 16 -pushFrequency null -numHosts 8,6,10 -numHours 6,12,18,24 -sampleCompletedSegmentDir /Users/ssubrama/tmp/samza/TestSamzaAnalyticsFeatures_1593411480000_1593500340000_0/ -ingestionRate 100 -maxUsableHostMemory 48G -retentionHours 72\n\nNote:\n\n* Table retention and push frequency ignored for determining retentionHours\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\n\nMemory used per host (Active/Mapped)\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 5.05G/19.49G    |3.37G/12.99G    |3.37G/12.99G    |\n12 --------> 5.89G/20.33G    |3.93G/13.55G    |3.93G/13.55G    |\n18 --------> 6.73G/21.49G    |4.48G/14.33G    |4.48G/14.33G    |\n24 --------> 7.56G/22G       |5.04G/14.66G    |5.04G/14.66G    |\n\nOptimal segment size\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 111.98M         |111.98M         |111.98M         |\n12 --------> 223.96M         |223.96M         |223.96M         |\n18 --------> 335.94M         |335.94M         |335.94M         |\n24 --------> 447.92M         |447.92M         |447.92M         |\n\nConsuming memory\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 1.45G           |987.17M         |987.17M         |\n12 --------> 2.61G           |1.74G           |1.74G           |\n18 --------> 3.77G           |2.52G           |2.52G           |\n24 --------> 4.94G           |3.29G           |3.29G           |\n\nNumber of segments queried per host\n\nnumHosts --> 6               |8               |10              |\nnumHours\n 6 --------> 12              |12              |12              |\n12 --------> 6               |6               |6               |\n18 --------> 4               |4               |4               |\n24 --------> 3               |3               |3               |", "committedDate": "2020-07-22T22:54:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MDEzNA==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460240134", "bodyText": "setter for retentionHours is still needed rt?", "author": "npawar", "createdAt": "2020-07-24T19:12:54Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -90,8 +91,8 @@ public RealtimeProvisioningHelperCommand setNumPartitions(int numPartitions) {\n     return this;\n   }\n \n-  public RealtimeProvisioningHelperCommand setRetentionHours(int retentionHours) {", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzOTc1Nw==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460339757", "bodyText": "Yes, added back", "author": "mcvsubbu", "createdAt": "2020-07-25T00:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MDEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "e25225d9a6b5f83678bb814cc62195734d83d473", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\nindex 8409e1c3eb..7c145b1972 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n\n@@ -96,6 +98,11 @@ public class RealtimeProvisioningHelperCommand extends AbstractBaseAdminCommand\n     return this;\n   }\n \n+  public RealtimeProvisioningHelperCommand setRetentionHours(int retentionHours) {\n+    _retentionHours = retentionHours;\n+    return this;\n+  }\n+\n   public RealtimeProvisioningHelperCommand setNumHosts(String numHosts) {\n     _numHosts = numHosts;\n     return this;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MDM4OA==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460240388", "bodyText": "setter name should be setIngestionRate() ?", "author": "npawar", "createdAt": "2020-07-24T19:13:31Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -115,17 +116,17 @@ public RealtimeProvisioningHelperCommand setSampleCompletedSegmentDir(String sam\n     return this;\n   }\n \n-  public RealtimeProvisioningHelperCommand setPeriodSampleSegmentConsumed(String periodSampleSegmentConsumed) {\n-    _periodSampleSegmentConsumed = periodSampleSegmentConsumed;\n+  public RealtimeProvisioningHelperCommand setPeriodSampleSegmentConsumed(int ingestionRate) {", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzOTkzNA==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460339934", "bodyText": "Yes, fixed", "author": "mcvsubbu", "createdAt": "2020-07-25T00:30:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MDM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "e25225d9a6b5f83678bb814cc62195734d83d473", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\nindex 8409e1c3eb..7c145b1972 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n\n@@ -116,7 +123,7 @@ public class RealtimeProvisioningHelperCommand extends AbstractBaseAdminCommand\n     return this;\n   }\n \n-  public RealtimeProvisioningHelperCommand setPeriodSampleSegmentConsumed(int ingestionRate) {\n+  public RealtimeProvisioningHelperCommand setIngestionRate(int ingestionRate) {\n     _ingestionRate = ingestionRate;\n     return this;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MTQ3OQ==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460241479", "bodyText": "LOGGER instead of sout?", "author": "npawar", "createdAt": "2020-07-24T19:15:57Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -145,6 +146,20 @@ public boolean getHelp() {\n     return _help;\n   }\n \n+  @Override\n+  public void printExamples() {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"\\n\\nThis command allows you to estimate the capacity needed for provisioning realtime hosts\")\n+        .append(\"It assumes that there is no upper limit to the amount of memory you can mmap\")\n+        .append(\"\\nIf you have a hybrid table, then consult the push frequency setting in your offline table specify it in the -pushFrequency argument\")\n+        .append(\"\\nIf you have a realtime-only table, then the default behavior is to assume that your queries need all data in memory all the time\")\n+        .append(\"\\nHowever, if most of your queries are going to be for (say) the last 96 hours, then you can specify that in -retentionHours\")\n+        .append(\"\\nDoing so will let this program assume that you are willing to take a page hit when querying older data\")\n+        .append(\"\\nand optimize memory and number of hosts accordingly.\")\n+        ;\n+    System.out.println(builder.toString());", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzUxMQ==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460333511", "bodyText": "No, sout. Think of this as a part of the result. When users cut/paste the results of the command, I found myself asking them : \"So, what arguments were provided to the command?\" We can now say \"cut-paste everything under the === line\" and get all information we want.", "author": "mcvsubbu", "createdAt": "2020-07-24T23:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0MTQ3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDM3Mg==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460244372", "bodyText": "thats over 3 weeks for a weekly push. SHould it instead be 7days + 72h for weekly and 31 days + 72h for monthly?", "author": "npawar", "createdAt": "2020-07-24T19:22:16Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -158,17 +173,36 @@ public boolean execute()\n       throw new RuntimeException(\"Exception in reading table config from file \" + _tableConfigFile, e);\n     }\n \n+    StringBuilder note = new StringBuilder();\n+    note.append(\"\\nNote:\\n\");\n     int numReplicas = tableConfig.getValidationConfig().getReplicasPerPartitionNumber();\n-    if (_retentionHours == 0) {\n-      if (tableConfig.getValidationConfig().getSegmentPushFrequency().equalsIgnoreCase(\"hourly\")) {\n-        _retentionHours = DEFAULT_RETENTION_FOR_HOURLY_PUSH;\n+    int tableRetentionHours = (int) TimeUnit.valueOf(tableConfig.getValidationConfig().getRetentionTimeUnit())\n+            .toHours(Long.parseLong(tableConfig.getValidationConfig().getRetentionTimeValue()));\n+    if (_retentionHours > 0) {\n+      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours\");\n+    } else {\n+      if (_pushFrequency == null) {\n+        // This is a realtime-only table. Pick up the retention time\n+        _retentionHours = tableRetentionHours;\n+        note.append(\"\\n* Retention hours taken from tableConfig\");\n       } else {\n-        _retentionHours = DEFAULT_RETENTION_FOR_DAILY_PUSH;\n+        if (\"hourly\".equalsIgnoreCase(_pushFrequency)) {\n+          _retentionHours = DEFAULT_RETENTION_FOR_HOURLY_PUSH;\n+        } else if (\"daily\".equalsIgnoreCase(_pushFrequency)) {\n+          _retentionHours = DEFAULT_RETENTION_FOR_DAILY_PUSH;\n+        } else if (\"weekly\".equalsIgnoreCase(_pushFrequency)) {", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0MDg1MQ==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460340851", "bodyText": "Done", "author": "mcvsubbu", "createdAt": "2020-07-25T00:36:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e25225d9a6b5f83678bb814cc62195734d83d473", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\nindex 8409e1c3eb..7c145b1972 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n\n@@ -179,7 +186,7 @@ public class RealtimeProvisioningHelperCommand extends AbstractBaseAdminCommand\n     int tableRetentionHours = (int) TimeUnit.valueOf(tableConfig.getValidationConfig().getRetentionTimeUnit())\n             .toHours(Long.parseLong(tableConfig.getValidationConfig().getRetentionTimeValue()));\n     if (_retentionHours > 0) {\n-      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours\");\n+      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours since it is specified in command\");\n     } else {\n       if (_pushFrequency == null) {\n         // This is a realtime-only table. Pick up the retention time\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDk2Mw==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460244963", "bodyText": "use LOGGER in all these lines?", "author": "npawar", "createdAt": "2020-07-24T19:23:31Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -177,25 +211,26 @@ public boolean execute()\n     // Completed: Use multiple (completedSize,numHours) data points to calculate completed size for our numHours\n     File sampleCompletedSegmentFile = new File(_sampleCompletedSegmentDir);\n \n-    long sampleSegmentConsumedSeconds =\n-        TimeUnit.SECONDS.convert(TimeUtils.convertPeriodToMillis(_periodSampleSegmentConsumed), TimeUnit.MILLISECONDS);\n-\n     long maxUsableHostMemBytes = DataSizeUtils.toBytes(_maxUsableHostMemory);\n \n     MemoryEstimator memoryEstimator =\n-        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, sampleSegmentConsumedSeconds,\n-            maxUsableHostMemBytes);\n+        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, _ingestionRate, maxUsableHostMemBytes, tableRetentionHours);\n     File sampleStatsHistory = memoryEstimator.initializeStatsHistory();\n     memoryEstimator\n         .estimateMemoryUsed(sampleStatsHistory, numHosts, numHours, totalConsumingPartitions, _retentionHours);\n \n+    note.append(\"\\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\");\n     // TODO: Make a recommendation of what config to choose by considering more inputs such as qps\n-    LOGGER.info(\"\\nMemory used per host\");\n-    displayResults(memoryEstimator.getTotalMemoryPerHost(), numHosts, numHours);\n+    System.out.println(\"\\n============================================================\\n\" + toString());", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzU4Mw==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460333583", "bodyText": "No, it will be same as the existing  display() methods. So, sout it is.", "author": "mcvsubbu", "createdAt": "2020-07-24T23:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDk2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e25225d9a6b5f83678bb814cc62195734d83d473", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\nindex 8409e1c3eb..7c145b1972 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n\n@@ -221,8 +228,7 @@ public class RealtimeProvisioningHelperCommand extends AbstractBaseAdminCommand\n \n     note.append(\"\\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\");\n     // TODO: Make a recommendation of what config to choose by considering more inputs such as qps\n-    System.out.println(\"\\n============================================================\\n\" + toString());\n-    System.out.println(note.toString());\n+    displayOutputHeader(note);\n     LOGGER.info(\"\\nMemory used per host (Active/Mapped)\");\n     displayResults(memoryEstimator.getActiveMemoryPerHost(), numHosts, numHours);\n     LOGGER.info(\"\\nOptimal segment size\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NTg3NA==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460245874", "bodyText": "I don't follow what \"Number of segments queries per host\" means. Won't that depend on the specific query patterns? Some more info about this in the log might help", "author": "npawar", "createdAt": "2020-07-24T19:25:31Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -177,25 +211,26 @@ public boolean execute()\n     // Completed: Use multiple (completedSize,numHours) data points to calculate completed size for our numHours\n     File sampleCompletedSegmentFile = new File(_sampleCompletedSegmentDir);\n \n-    long sampleSegmentConsumedSeconds =\n-        TimeUnit.SECONDS.convert(TimeUtils.convertPeriodToMillis(_periodSampleSegmentConsumed), TimeUnit.MILLISECONDS);\n-\n     long maxUsableHostMemBytes = DataSizeUtils.toBytes(_maxUsableHostMemory);\n \n     MemoryEstimator memoryEstimator =\n-        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, sampleSegmentConsumedSeconds,\n-            maxUsableHostMemBytes);\n+        new MemoryEstimator(tableConfig, sampleCompletedSegmentFile, _ingestionRate, maxUsableHostMemBytes, tableRetentionHours);\n     File sampleStatsHistory = memoryEstimator.initializeStatsHistory();\n     memoryEstimator\n         .estimateMemoryUsed(sampleStatsHistory, numHosts, numHours, totalConsumingPartitions, _retentionHours);\n \n+    note.append(\"\\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\");\n     // TODO: Make a recommendation of what config to choose by considering more inputs such as qps\n-    LOGGER.info(\"\\nMemory used per host\");\n-    displayResults(memoryEstimator.getTotalMemoryPerHost(), numHosts, numHours);\n+    System.out.println(\"\\n============================================================\\n\" + toString());\n+    System.out.println(note.toString());\n+    LOGGER.info(\"\\nMemory used per host (Active/Mapped)\");\n+    displayResults(memoryEstimator.getActiveMemoryPerHost(), numHosts, numHours);\n     LOGGER.info(\"\\nOptimal segment size\");\n     displayResults(memoryEstimator.getOptimalSegmentSize(), numHosts, numHours);\n     LOGGER.info(\"\\nConsuming memory\");\n     displayResults(memoryEstimator.getConsumingMemoryPerHost(), numHosts, numHours);\n+    LOGGER.info(\"\\nNumber of segments queried per host\");", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzczOQ==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460333739", "bodyText": "I will add that in gitbooks. This is the number of segments that that fall within the \"retentionHours\", if you will. We cannot document everyting in the command output, but I plan to add significant doc to gitbook.", "author": "mcvsubbu", "createdAt": "2020-07-24T23:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NTg3NA=="}], "type": "inlineReview", "revised_code": {"commit": "e25225d9a6b5f83678bb814cc62195734d83d473", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\nindex 8409e1c3eb..7c145b1972 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n\n@@ -221,8 +228,7 @@ public class RealtimeProvisioningHelperCommand extends AbstractBaseAdminCommand\n \n     note.append(\"\\n* See https://docs.pinot.apache.org/operators/operating-pinot/tuning/realtime\");\n     // TODO: Make a recommendation of what config to choose by considering more inputs such as qps\n-    System.out.println(\"\\n============================================================\\n\" + toString());\n-    System.out.println(note.toString());\n+    displayOutputHeader(note);\n     LOGGER.info(\"\\nMemory used per host (Active/Mapped)\");\n     displayResults(memoryEstimator.getActiveMemoryPerHost(), numHosts, numHours);\n     LOGGER.info(\"\\nOptimal segment size\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTI4Ng==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460329286", "bodyText": "can we add \"since retentionHours is provided\" to this message. Otherwise it looks like it is flagging something that went wrong", "author": "npawar", "createdAt": "2020-07-24T23:30:24Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java", "diffHunk": "@@ -158,17 +173,36 @@ public boolean execute()\n       throw new RuntimeException(\"Exception in reading table config from file \" + _tableConfigFile, e);\n     }\n \n+    StringBuilder note = new StringBuilder();\n+    note.append(\"\\nNote:\\n\");\n     int numReplicas = tableConfig.getValidationConfig().getReplicasPerPartitionNumber();\n-    if (_retentionHours == 0) {\n-      if (tableConfig.getValidationConfig().getSegmentPushFrequency().equalsIgnoreCase(\"hourly\")) {\n-        _retentionHours = DEFAULT_RETENTION_FOR_HOURLY_PUSH;\n+    int tableRetentionHours = (int) TimeUnit.valueOf(tableConfig.getValidationConfig().getRetentionTimeUnit())\n+            .toHours(Long.parseLong(tableConfig.getValidationConfig().getRetentionTimeValue()));\n+    if (_retentionHours > 0) {\n+      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours\");", "originalCommit": "b898f4166950ba60e8ab64ea1bd0ec13ac9ea642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzgzNg==", "url": "https://github.com/apache/pinot/pull/5737#discussion_r460333836", "bodyText": "ok", "author": "mcvsubbu", "createdAt": "2020-07-24T23:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyOTI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e25225d9a6b5f83678bb814cc62195734d83d473", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\nindex 8409e1c3eb..7c145b1972 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n+++ b/pinot-tools/src/main/java/org/apache/pinot/tools/admin/command/RealtimeProvisioningHelperCommand.java\n\n@@ -179,7 +186,7 @@ public class RealtimeProvisioningHelperCommand extends AbstractBaseAdminCommand\n     int tableRetentionHours = (int) TimeUnit.valueOf(tableConfig.getValidationConfig().getRetentionTimeUnit())\n             .toHours(Long.parseLong(tableConfig.getValidationConfig().getRetentionTimeValue()));\n     if (_retentionHours > 0) {\n-      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours\");\n+      note.append(\"\\n* Table retention and push frequency ignored for determining retentionHours since it is specified in command\");\n     } else {\n       if (_pushFrequency == null) {\n         // This is a realtime-only table. Pick up the retention time\n"}}, {"oid": "e25225d9a6b5f83678bb814cc62195734d83d473", "url": "https://github.com/apache/pinot/commit/e25225d9a6b5f83678bb814cc62195734d83d473", "message": "Addressed review comments", "committedDate": "2020-07-25T00:39:07Z", "type": "commit"}]}