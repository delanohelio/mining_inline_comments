{"pr_number": 6129, "pr_title": "Framework for adding compatibility tests", "pr_createdAt": "2020-10-09T23:52:42Z", "pr_url": "https://github.com/apache/pinot/pull/6129", "timeline": [{"oid": "a251ee7aa916b74a17a7d2a49859b4794eabfc14", "url": "https://github.com/apache/pinot/commit/a251ee7aa916b74a17a7d2a49859b4794eabfc14", "message": "Issue #4854 Framework for adding compatibility tests\n\nThis PR includes a basic framework for us to build compatibility tests across releases\nThe actual tests and a lot of code is yet to be written.\n\nThe framekwork is set up so that we can run operations during a cluster upgrade, and\ndetect incompatibility across releases. The value of the tests will be in the operations\nwe choose to test during upgrades\n\nConfiguration is done via YAML, and some sample yaml files and skinny classes have been\nprovided.", "committedDate": "2020-10-09T23:51:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMDkwMA==", "url": "https://github.com/apache/pinot/pull/6129#discussion_r504300900", "bodyText": "We may not need to print it out in the console?", "author": "jackjlli", "createdAt": "2020-10-13T22:45:27Z", "path": "pinot-tools/src/main/java/org/apache/pinot/tools/compat/SegmentOp.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.tools.compat;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+\n+/**\n+ * Segment Operations:\n+ * UPLOAD:\n+ *   Generates a segment for a table from the data in the input file.\n+ *   Uploads the segment, and verifies that the segments appear in externalview\n+ * DELETE:\n+ *   Deletes the segment from the table.\n+ *\n+ * TODO:\n+ *  - Maybe segment names can be auto-generated if the name is \"AUTO\".\n+ *  - We can add segmentGeneration config file as an option also\n+ *  - We can consider supporting different readers, starting with csv. Will help in easily scanning the data.\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SegmentOp extends BaseOp {\n+  public enum Op {\n+    UPLOAD,\n+    DELETE\n+  }\n+\n+  private Op _op;\n+  private String _inputDataFileName;\n+  private String _segmentName;\n+  private String _tableConfigFileName;\n+\n+  public SegmentOp() {\n+    super(OpType.SEGMENT_OP);\n+  }\n+\n+  public Op getOp() {\n+    return _op;\n+  }\n+\n+  public void setOp(Op op) {\n+    _op = op;\n+  }\n+\n+  public String getInputDataFileName() {\n+    return _inputDataFileName;\n+  }\n+\n+  public void setInputDataFileName(String inputDataFileName) {\n+    _inputDataFileName = inputDataFileName;\n+  }\n+\n+  public String getSegmentName() {\n+    return _segmentName;\n+  }\n+\n+  public void setSegmentName(String segmentName) {\n+    _segmentName = segmentName;\n+  }\n+\n+  public String getTableConfigFileName() {\n+    return _tableConfigFileName;\n+  }\n+\n+  public void setTableConfigFileName(String tableConfigFileName) {\n+    _tableConfigFileName = tableConfigFileName;\n+  }\n+\n+  @Override\n+  boolean runOp() {\n+    switch(_op) {\n+      case UPLOAD:\n+        System.out.println(\"Generating segment \" + _segmentName + \" from \" + _inputDataFileName + \" and uploading to \" +", "originalCommit": "a251ee7aa916b74a17a7d2a49859b4794eabfc14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzNjA5NQ==", "url": "https://github.com/apache/pinot/pull/6129#discussion_r508036095", "bodyText": "We will not need it. I put it there so we can see what is being run.  Once we add more logic here, we can remove these things", "author": "mcvsubbu", "createdAt": "2020-10-19T20:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMDkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "72ab67406e45f25a3a869c16ffce08bb40028a67", "chunk": "diff --git a/pinot-tools/src/main/java/org/apache/pinot/tools/compat/SegmentOp.java b/pinot-integration-tests/src/test/java/org/apache/pinot/compat/tests/SegmentOp.java\nsimilarity index 98%\nrename from pinot-tools/src/main/java/org/apache/pinot/tools/compat/SegmentOp.java\nrename to pinot-integration-tests/src/test/java/org/apache/pinot/compat/tests/SegmentOp.java\nindex b17eb4848b..32ab9807a6 100644\n--- a/pinot-tools/src/main/java/org/apache/pinot/tools/compat/SegmentOp.java\n+++ b/pinot-integration-tests/src/test/java/org/apache/pinot/compat/tests/SegmentOp.java\n\n@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.pinot.tools.compat;\n+package org.apache.pinot.compat.tests;\n \n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n \n"}}, {"oid": "72ab67406e45f25a3a869c16ffce08bb40028a67", "url": "https://github.com/apache/pinot/commit/72ab67406e45f25a3a869c16ffce08bb40028a67", "message": "Moved classes to pinot-integration-tests", "committedDate": "2020-10-19T20:17:45Z", "type": "commit"}]}