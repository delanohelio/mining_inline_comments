{"pr_number": 5163, "pr_title": "Optimization for selection only queries: Allow early termination", "pr_createdAt": "2020-03-18T01:10:22Z", "pr_url": "https://github.com/apache/pinot/pull/5163", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3MTkyNw==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394071927", "bodyText": "Can we rename this method to something more intuitive? Like isQuerySatisfied()?", "author": "Jackie-Jiang", "createdAt": "2020-03-18T02:22:12Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/operator/CombineOperator.java", "diffHunk": "@@ -196,6 +202,17 @@ public IntermediateResultsBlock callJob()\n     return mergedBlock;\n   }\n \n+  // This will check if IntermediateResultsBlock already satisfying query, so there is no need to continue query processing.\n+  private boolean allowEarlyTermination(BrokerRequest brokerRequest, IntermediateResultsBlock mergedBlock) {", "originalCommit": "c98b96efcbcbc70fe11502291f934b7ca85afd11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "chunk": "diff --git a/pinot-core/src/main/java/org/apache/pinot/core/operator/CombineOperator.java b/pinot-core/src/main/java/org/apache/pinot/core/operator/CombineOperator.java\nindex 64ed6ab710..87de349cf6 100644\n--- a/pinot-core/src/main/java/org/apache/pinot/core/operator/CombineOperator.java\n+++ b/pinot-core/src/main/java/org/apache/pinot/core/operator/CombineOperator.java\n\n@@ -203,7 +203,7 @@ public class CombineOperator extends BaseOperator<IntermediateResultsBlock> {\n   }\n \n   // This will check if IntermediateResultsBlock already satisfying query, so there is no need to continue query processing.\n-  private boolean allowEarlyTermination(BrokerRequest brokerRequest, IntermediateResultsBlock mergedBlock) {\n+  private boolean isQuerySatisfied(BrokerRequest brokerRequest, IntermediateResultsBlock mergedBlock) {\n     // Check for selection only query, if first segment already offers enough records, then there is no need to scan for the rest segments.\n     if ((brokerRequest.getSelections() != null) && (brokerRequest.getOrderBy() == null)) {\n       if ((mergedBlock.getSelectionResult() != null) && (mergedBlock.getSelectionResult().size() >= brokerRequest.getSelections().getSize())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3MzcxNw==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394073717", "bodyText": "You can make CombineOperator. MAX_NUM_THREADS_PER_QUERY public to make this test easier to understand.", "author": "Jackie-Jiang", "createdAt": "2020-03-18T02:29:48Z", "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import java.io.IOException;\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+  private int numSegmentDataManagers = Math.max(1, Math.min(10, Runtime.getRuntime().availableProcessors() / 2)) * 2;", "originalCommit": "c98b96efcbcbc70fe11502291f934b7ca85afd11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\nindex 96c761770a..dffbf0491f 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n\n@@ -18,7 +18,6 @@\n  */\n package org.apache.pinot.queries;\n \n-import java.io.IOException;\n import org.apache.pinot.common.response.broker.BrokerResponseNative;\n import org.testng.Assert;\n import org.testng.annotations.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3Mzc3NQ==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394073775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            @Override", "author": "Jackie-Jiang", "createdAt": "2020-03-18T02:30:05Z", "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import java.io.IOException;\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+  private int numSegmentDataManagers = Math.max(1, Math.min(10, Runtime.getRuntime().availableProcessors() / 2)) * 2;\n+", "originalCommit": "c98b96efcbcbc70fe11502291f934b7ca85afd11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\nindex 96c761770a..dffbf0491f 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n\n@@ -18,7 +18,6 @@\n  */\n package org.apache.pinot.queries;\n \n-import java.io.IOException;\n import org.apache.pinot.common.response.broker.BrokerResponseNative;\n import org.testng.Assert;\n import org.testng.annotations.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDAyMA==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394074020", "bodyText": "(nit) please reformat and cache getNumSegmentDataManagers()", "author": "Jackie-Jiang", "createdAt": "2020-03-18T02:31:07Z", "path": "pinot-core/src/test/java/org/apache/pinot/queries/BaseSingleValueQueriesTest.java", "diffHunk": "@@ -121,8 +122,14 @@ public void loadSegment()\n       throws Exception {\n     ImmutableSegment immutableSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     _indexSegment = immutableSegment;\n-    _segmentDataManagers = Arrays\n-        .asList(new ImmutableSegmentDataManager(immutableSegment), new ImmutableSegmentDataManager(immutableSegment));\n+    _segmentDataManagers = new ArrayList<>();\n+    for (int i = 0; i< getNumSegmentDataManagers(); i++) {", "originalCommit": "c98b96efcbcbc70fe11502291f934b7ca85afd11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/queries/BaseSingleValueQueriesTest.java b/pinot-core/src/test/java/org/apache/pinot/queries/BaseSingleValueQueriesTest.java\nindex c17b771d1d..bb05f29092 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/queries/BaseSingleValueQueriesTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/queries/BaseSingleValueQueriesTest.java\n\n@@ -123,7 +123,7 @@ public abstract class BaseSingleValueQueriesTest extends BaseQueriesTest {\n     ImmutableSegment immutableSegment = ImmutableSegmentLoader.load(new File(INDEX_DIR, SEGMENT_NAME), ReadMode.heap);\n     _indexSegment = immutableSegment;\n     _segmentDataManagers = new ArrayList<>();\n-    for (int i = 0; i< getNumSegmentDataManagers(); i++) {\n+    for (int i = 0; i < getNumSegmentDataManagers(); i++) {\n       _segmentDataManagers.add(new ImmutableSegmentDataManager(immutableSegment));\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDMwNA==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394074304", "bodyText": "Why does numSegmentsMatched also change?", "author": "Jackie-Jiang", "createdAt": "2020-03-18T02:32:27Z", "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import java.io.IOException;\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+  private int numSegmentDataManagers = Math.max(1, Math.min(10, Runtime.getRuntime().availableProcessors() / 2)) * 2;\n+\n+  protected int getNumSegmentDataManagers() {\n+    return numSegmentDataManagers;\n+  }\n+\n+  /**\n+   * With early termination, Selection Only query is scheduled with ${numSegmentDataManagers} threads,\n+   * total segment processed is same at num threads.\n+   */\n+  @Test\n+  public void testSelectOnlyQuery() {\n+    String query = \"SELECT column1, column6 FROM testTable\";\n+    BrokerResponseNative brokerResponse = getBrokerResponseForPqlQuery(query);\n+    Assert.assertNotNull(brokerResponse.getSelectionResults());\n+    Assert.assertNull(brokerResponse.getResultTable());\n+    Assert.assertTrue(brokerResponse.getNumSegmentsMatched() == numSegmentDataManagers);", "originalCommit": "c98b96efcbcbc70fe11502291f934b7ca85afd11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyMTg4NA==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394121884", "bodyText": "I think  this is because that we skipped the rest blocks to merge which don't have those information to be collected.", "author": "xiangfu0", "createdAt": "2020-03-18T06:01:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDMwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyOTQ5OA==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394129498", "bodyText": "This is kind of like  a partial results but it's a valid one .", "author": "xiangfu0", "createdAt": "2020-03-18T06:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDMwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0MzM4NQ==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394543385", "bodyText": "Never mind. Checked the definition. numSegmentsMatched are number of segments with non-zero numDocsScanned", "author": "Jackie-Jiang", "createdAt": "2020-03-18T18:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NDMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\nindex 96c761770a..dffbf0491f 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n\n@@ -18,7 +18,6 @@\n  */\n package org.apache.pinot.queries;\n \n-import java.io.IOException;\n import org.apache.pinot.common.response.broker.BrokerResponseNative;\n import org.testng.Assert;\n import org.testng.annotations.Test;\n"}}, {"oid": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "url": "https://github.com/apache/pinot/commit/5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "message": "Allow early termination for selection only queries", "committedDate": "2020-03-18T02:56:45Z", "type": "commit"}, {"oid": "5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "url": "https://github.com/apache/pinot/commit/5ad1acff338db521c2f63d9c17d3554ba0dcf6d0", "message": "Allow early termination for selection only queries", "committedDate": "2020-03-18T02:56:45Z", "type": "forcePushed"}, {"oid": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "url": "https://github.com/apache/pinot/commit/a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "message": "Address comments", "committedDate": "2020-03-18T05:42:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0MzgxNA==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394543814", "bodyText": "Why numThreadsPerQuery != CombineOperator.MAX_NUM_THREADS_PER_QUERY?", "author": "Jackie-Jiang", "createdAt": "2020-03-18T18:07:12Z", "path": "pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.queries;\n+\n+import org.apache.pinot.common.response.broker.BrokerResponseNative;\n+import org.apache.pinot.core.operator.CombineOperator;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\n+/**\n+ * Tests selection only queries\n+ */\n+public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n+\n+  /**\n+   * In order to ensure each thread is executing more than 1 segment, this test is against\n+   * (2 * MAX_NUM_THREADS_PER_QUERY) segments.\n+   */\n+  @Override\n+  protected int getNumSegmentDataManagers() {\n+    return CombineOperator.MAX_NUM_THREADS_PER_QUERY * 2;\n+  }\n+\n+  /**\n+   * With early termination, Selection Only query is scheduled with getNumSegmentDataManagers() threads,\n+   * total segment processed is same at num threads.\n+   */\n+  @Test\n+  public void testSelectOnlyQuery() {\n+    int numThreadsPerQuery = getNumSegmentDataManagers();", "originalCommit": "a91e4550a39ff3c6a5c73edb05fb600aee6dfa77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU1MzU4OQ==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394553589", "bodyText": "Cause this test will put instance responses twice in dataTableMap for broker reduce, I will update the parameters to reflect this setup.", "author": "xiangfu0", "createdAt": "2020-03-18T18:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0MzgxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4MDQ1Mg==", "url": "https://github.com/apache/pinot/pull/5163#discussion_r394580452", "bodyText": "updated the PR", "author": "xiangfu0", "createdAt": "2020-03-18T19:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU0MzgxNA=="}], "type": "inlineReview", "revised_code": {"commit": "12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "chunk": "diff --git a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\nindex b47ce231d7..7d42545dcc 100644\n--- a/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n+++ b/pinot-core/src/test/java/org/apache/pinot/queries/SelectionOnlyEarlyTerminationTest.java\n\n@@ -29,6 +29,14 @@ import org.testng.annotations.Test;\n  */\n public class SelectionOnlyEarlyTerminationTest extends BaseSingleValueQueriesTest {\n \n+  /**\n+   * Default test setup, duplicate server instance into DataMap.\n+   *\n+   * See {@link #getBrokerResponseForBrokerRequest}.\n+   */\n+  private static int numDocsPerTestSegment = 30000;\n+  private static int numTestServers = 2;\n+\n   /**\n    * In order to ensure each thread is executing more than 1 segment, this test is against\n    * (2 * MAX_NUM_THREADS_PER_QUERY) segments.\n"}}, {"oid": "12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "url": "https://github.com/apache/pinot/commit/12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "message": "refine test", "committedDate": "2020-03-18T19:11:40Z", "type": "commit"}, {"oid": "12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "url": "https://github.com/apache/pinot/commit/12f7b9f48ec0b095cbc1f78af1e03cfd9bf8e015", "message": "refine test", "committedDate": "2020-03-18T19:11:40Z", "type": "forcePushed"}, {"oid": "f533ea972acfe18eca8b691ac6260b98fd779583", "url": "https://github.com/apache/pinot/commit/f533ea972acfe18eca8b691ac6260b98fd779583", "message": "Fix the metadata issue with the early termination", "committedDate": "2020-03-18T20:12:38Z", "type": "commit"}, {"oid": "3f568b5082e25c193a4c503f6d9da7381283799a", "url": "https://github.com/apache/pinot/commit/3f568b5082e25c193a4c503f6d9da7381283799a", "message": "fix test", "committedDate": "2020-03-18T21:20:32Z", "type": "commit"}]}