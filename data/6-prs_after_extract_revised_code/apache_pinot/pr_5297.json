{"pr_number": 5297, "pr_title": "Prune stop words for text index", "pr_createdAt": "2020-04-24T20:40:59Z", "pr_url": "https://github.com/apache/pinot/pull/5297", "timeline": [{"oid": "46169700283dd09ea836eaba8bddd2a44dc8031e", "url": "https://github.com/apache/pinot/commit/46169700283dd09ea836eaba8bddd2a44dc8031e", "message": "Prune stop words for text index", "committedDate": "2020-04-24T19:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg2NTM2NA==", "url": "https://github.com/apache/pinot/pull/5297#discussion_r414865364", "bodyText": "Dont we have this in Lucene StopAnalyzer?\nStopAnalyzer.ENGLISH_STOP_WORDS_SET", "author": "kishoreg", "createdAt": "2020-04-24T21:11:04Z", "path": "pinot-core/src/main/java/org/apache/pinot/core/segment/creator/impl/inv/text/LuceneTextIndexCreator.java", "diffHunk": "@@ -50,6 +58,15 @@\n   private final Directory _indexDirectory;\n   private final IndexWriter _indexWriter;\n \n+  public static final CharArraySet ENGLISH_STOP_WORDS_SET =\n+      new CharArraySet(Arrays.asList(", "originalCommit": "46169700283dd09ea836eaba8bddd2a44dc8031e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg2Njc5Nw==", "url": "https://github.com/apache/pinot/pull/5297#discussion_r414866797", "bodyText": "No this is not in StopAnalyzer. That also takes a passed list of stopwords.\nThe list is borrowed from EnglishAnalyzer. The reason for not directly using EnglishAnalyzer is because it does word stemming and reduces words to their root form. I don't think we need that.", "author": "siddharthteotia", "createdAt": "2020-04-24T21:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg2NTM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg2NzQwMQ==", "url": "https://github.com/apache/pinot/pull/5297#discussion_r414867401", "bodyText": "StopAnalyzer can't be used either because it tokenizes input text at each character. So we stick to StandardAnalyzer which uses StandardTokenizer (based on unicode general purpose text segmentation algorithm)", "author": "siddharthteotia", "createdAt": "2020-04-24T21:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg2NTM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE5MTQwMQ==", "url": "https://github.com/apache/pinot/pull/5297#discussion_r416191401", "bodyText": "Thanks add this comment in the code.", "author": "kishoreg", "createdAt": "2020-04-27T22:25:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg2NTM2NA=="}], "type": "inlineReview", "revised_code": null}]}