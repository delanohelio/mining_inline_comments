{"pr_number": 5027, "pr_title": "Do not derive host/port from instance id in HelixServerStarter", "pr_createdAt": "2020-01-30T02:44:30Z", "pr_url": "https://github.com/apache/pinot/pull/5027", "timeline": [{"oid": "b4bef2f89e3ebde48202db0ef827f8700714d2bc", "url": "https://github.com/apache/pinot/commit/b4bef2f89e3ebde48202db0ef827f8700714d2bc", "message": "Do not derive host/port from instance id in HelixServerStarter\n\nCurrently host/port can be derived from instance id, and instance id\ncan also be derived from host/port, which makes ServerConf hard to\nconfig.\n\nInstead, with the change:\n- Host is always from config or generated by NetUtil\n- Port is always from config or using default (8098)\n- Instance id is always from config or of format 'Server_<host>_<port>'\n- Host will no longer have the 'Server_' prefix in InstanceConfig\n\nBACKWARD-INCOMPATIBLE CHANGE:\n- Host/port will no longer be derived from the instance id configuration\n- Host will no longer have the 'Server_' prefix in InstanceConfig", "committedDate": "2020-01-30T18:19:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0NjMxOQ==", "url": "https://github.com/apache/pinot/pull/5027#discussion_r373146319", "bodyText": "It is better to put stop() before assertion() to stop the HelixServerStarter. Otherwise, if the assertion fails, it will cause cascading failures to other tests as well: which just caused confusion to real issues.", "author": "chenboat", "createdAt": "2020-01-30T19:24:45Z", "path": "pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/ServerStarterIntegrationTest.java", "diffHunk": "@@ -33,119 +29,105 @@\n import org.testng.annotations.BeforeClass;\n import org.testng.annotations.Test;\n \n-import static org.apache.pinot.common.utils.CommonConstants.Helix.KEY_OF_SERVER_NETTY_HOST;\n-import static org.apache.pinot.common.utils.CommonConstants.Helix.KEY_OF_SERVER_NETTY_PORT;\n+import static org.apache.pinot.common.utils.CommonConstants.Helix.*;\n import static org.apache.pinot.common.utils.CommonConstants.Server.CONFIG_OF_INSTANCE_ID;\n import static org.testng.Assert.assertEquals;\n \n \n public class ServerStarterIntegrationTest extends ControllerTest {\n-  public static final String SERVER1 = \"Server1\";\n+  private static final String CUSTOM_INSTANCE_ID = \"CustomInstance\";\n+  private static final String CUSTOM_HOST = \"CustomHost\";\n+  private static final int CUSTOM_PORT = 10001;\n \n   @BeforeClass\n-  public void setUp()\n-      throws Exception {\n+  public void setUp() {\n     startZk();\n     startController();\n   }\n \n   @AfterClass\n-  public void tearDown()\n-      throws Exception {\n+  public void tearDown() {\n     stopController();\n     stopZk();\n   }\n \n-  private void verifyZkConfigData(HelixServerStarter helixServerStarter, String expectedInstanceName,\n-      String expectedHostname, String expectedPort) {\n-    // Verify the serverId, host and port are set correctly in Zk.\n-    HelixManager helixManager = helixServerStarter.getHelixManager();\n-    PropertyKey.Builder keyBuilder = helixManager.getHelixDataAccessor().keyBuilder();\n-    InstanceConfig config = helixManager.getHelixDataAccessor().\n-        getProperty(keyBuilder.instanceConfig(helixServerStarter.getHelixManager().getInstanceName()));\n-    helixServerStarter.stop();\n+  private void verifyInstanceConfig(HelixServerStarter helixServerStarter, String expectedInstanceId,\n+      String expectedHost, int expectedPort) {\n+    assertEquals(helixServerStarter.getInstanceId(), expectedInstanceId);\n+\n+    InstanceConfig instanceConfig =\n+        _helixDataAccessor.getProperty(_helixDataAccessor.keyBuilder().instanceConfig(expectedInstanceId));\n+    assertEquals(instanceConfig.getHostName(), expectedHost);\n+    assertEquals(Integer.parseInt(instanceConfig.getPort()), expectedPort);\n \n-    assertEquals(config.getInstanceName(), expectedInstanceName);\n-    // By default (auto joined instances), server instance name is of format: {@code Server_<hostname>_<port>}, e.g.\n-    // {@code Server_localhost_12345}, hostname is of format: {@code Server_<hostname>}, e.g. {@code Server_localhost}.\n-    // More details refer to the class ServerInstance.\n-    assertEquals(config.getHostName(), expectedHostname);\n-    assertEquals(config.getPort(), expectedPort);\n+    helixServerStarter.stop();", "originalCommit": "b4bef2f89e3ebde48202db0ef827f8700714d2bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1ODAyNg==", "url": "https://github.com/apache/pinot/pull/5027#discussion_r373158026", "bodyText": "Make sense, changed", "author": "Jackie-Jiang", "createdAt": "2020-01-30T19:48:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0NjMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b6586b90193be28d78eddc5f754b52089cc50d23", "chunk": "diff --git a/pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/ServerStarterIntegrationTest.java b/pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/ServerStarterIntegrationTest.java\nindex d09954a3fe..9c175ce2ed 100644\n--- a/pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/ServerStarterIntegrationTest.java\n+++ b/pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/ServerStarterIntegrationTest.java\n\n@@ -51,27 +51,27 @@ public class ServerStarterIntegrationTest extends ControllerTest {\n     stopZk();\n   }\n \n-  private void verifyInstanceConfig(HelixServerStarter helixServerStarter, String expectedInstanceId,\n-      String expectedHost, int expectedPort) {\n-    assertEquals(helixServerStarter.getInstanceId(), expectedInstanceId);\n+  private void verifyInstanceConfig(Configuration serverConf, String expectedInstanceId, String expectedHost,\n+      int expectedPort)\n+      throws Exception {\n+    HelixServerStarter helixServerStarter =\n+        new HelixServerStarter(getHelixClusterName(), ZkStarter.DEFAULT_ZK_STR, serverConf);\n+    helixServerStarter.stop();\n \n+    assertEquals(helixServerStarter.getInstanceId(), expectedInstanceId);\n     InstanceConfig instanceConfig =\n         _helixDataAccessor.getProperty(_helixDataAccessor.keyBuilder().instanceConfig(expectedInstanceId));\n     assertEquals(instanceConfig.getHostName(), expectedHost);\n     assertEquals(Integer.parseInt(instanceConfig.getPort()), expectedPort);\n-\n-    helixServerStarter.stop();\n   }\n \n   @Test\n   public void testDefaultServerConf()\n       throws Exception {\n     Configuration serverConf = new BaseConfiguration();\n-    HelixServerStarter helixServerStarter =\n-        new HelixServerStarter(getHelixClusterName(), ZkStarter.DEFAULT_ZK_STR, serverConf);\n     String expectedHost = NetUtil.getHostAddress();\n     String expectedInstanceId = PREFIX_OF_SERVER_INSTANCE + expectedHost + \"_\" + DEFAULT_SERVER_NETTY_PORT;\n-    verifyInstanceConfig(helixServerStarter, expectedInstanceId, expectedHost, DEFAULT_SERVER_NETTY_PORT);\n+    verifyInstanceConfig(serverConf, expectedInstanceId, expectedHost, DEFAULT_SERVER_NETTY_PORT);\n   }\n \n   @Test\n"}}, {"oid": "b6586b90193be28d78eddc5f754b52089cc50d23", "url": "https://github.com/apache/pinot/commit/b6586b90193be28d78eddc5f754b52089cc50d23", "message": "Do not derive host/port from instance id in HelixServerStarter\n\nCurrently host/port can be derived from instance id, and instance id\ncan also be derived from host/port, which makes ServerConf hard to\nconfig.\n\nInstead, with the change:\n- Host is always from config or generated by NetUtil\n- Port is always from config or using default (8098)\n- Instance id is always from config or of format 'Server_<host>_<port>'\n- Host will no longer have the 'Server_' prefix in InstanceConfig\n\nBACKWARD-INCOMPATIBLE CHANGE:\n- Host/port will no longer be derived from the instance id configuration\n- Host will no longer have the 'Server_' prefix in InstanceConfig", "committedDate": "2020-01-30T20:12:34Z", "type": "commit"}, {"oid": "b6586b90193be28d78eddc5f754b52089cc50d23", "url": "https://github.com/apache/pinot/commit/b6586b90193be28d78eddc5f754b52089cc50d23", "message": "Do not derive host/port from instance id in HelixServerStarter\n\nCurrently host/port can be derived from instance id, and instance id\ncan also be derived from host/port, which makes ServerConf hard to\nconfig.\n\nInstead, with the change:\n- Host is always from config or generated by NetUtil\n- Port is always from config or using default (8098)\n- Instance id is always from config or of format 'Server_<host>_<port>'\n- Host will no longer have the 'Server_' prefix in InstanceConfig\n\nBACKWARD-INCOMPATIBLE CHANGE:\n- Host/port will no longer be derived from the instance id configuration\n- Host will no longer have the 'Server_' prefix in InstanceConfig", "committedDate": "2020-01-30T20:12:34Z", "type": "forcePushed"}]}