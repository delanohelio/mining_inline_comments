{"pr_number": 5196, "pr_title": "[TE] fix the merger issue that it can't merge historical anomaly generated by multiple rules", "pr_createdAt": "2020-03-30T20:55:16Z", "pr_url": "https://github.com/apache/pinot/pull/5196", "timeline": [{"oid": "0ce1f7213ad454c8f2622962a5e867be239a046c", "url": "https://github.com/apache/pinot/commit/0ce1f7213ad454c8f2622962a5e867be239a046c", "message": "[TE] fix the merger issue that it can't merge historical anomaly generated by multiple rules.", "committedDate": "2020-03-30T20:51:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MDM0OA==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r400560348", "bodyText": "@jihaozh Do you know a reason why we had this logic?", "author": "xiaohui-sun", "createdAt": "2020-03-30T23:46:03Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java", "diffHunk": "@@ -48,9 +50,23 @@ public ChildKeepingMergeWrapper(DataProvider provider, DetectionConfigDTO config\n   }\n \n   @Override\n-  // does not fetch any anomalies from database", "originalCommit": "0ce1f7213ad454c8f2622962a5e867be239a046c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5OTU3NA==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r401199574", "bodyText": "Previously, when two detectors detect the same anomaly duration, we retain the parent anomaly's detector name. So next time, when the pipeline runs, the parent anomaly will be retrieved from the rule-level merger.  However, now we changed the parent anomaly's detector name to be the join of two detector names, the rule-level merger won't pick up the parent anomaly. The final merger needs to retrieve those anomalies and merges them.", "author": "jihaozh", "createdAt": "2020-03-31T20:37:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MDM0OA=="}], "type": "inlineReview", "revised_code": {"commit": "55eda4b995d47b68e651d92d8ace4dc653ff08b5", "chunk": "diff --git a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\nindex 5f7b692daa..4455a63860 100644\n--- a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\n+++ b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\n\n@@ -60,15 +60,10 @@ public class ChildKeepingMergeWrapper extends BaselineFillingMergeWrapper {\n         this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n \n     return anomalies.stream()\n-        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))\n+        .filter(anomaly -> !anomaly.isChild() && ThirdEyeUtils.isDetectedByMultipleComponents(anomaly))\n         .collect(Collectors.toList());\n   }\n \n-  private boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n-    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n-    return componentName.contains(\",\");\n-  }\n-\n   @Override\n   protected List<MergedAnomalyResultDTO> merge(Collection<MergedAnomalyResultDTO> anomalies) {\n     List<MergedAnomalyResultDTO> input = new ArrayList<>(anomalies);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MTE1Mg==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r400561152", "bodyText": "This is too hacky.  We can't depend on the string match to tell whether there are multiple components.\nWhat if we decided to change the delimiter some time later then this is a bug hard to debug.\nLet's put some helper function here to actually parse/assemble the component name in a centralized place.", "author": "xiaohui-sun", "createdAt": "2020-03-30T23:48:43Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java", "diffHunk": "@@ -48,9 +50,23 @@ public ChildKeepingMergeWrapper(DataProvider provider, DetectionConfigDTO config\n   }\n \n   @Override\n-  // does not fetch any anomalies from database\n+  // retrieve the anomalies that are detected by multiple detectors\n   protected List<MergedAnomalyResultDTO> retrieveAnomaliesFromDatabase(List<MergedAnomalyResultDTO> generated) {\n-    return Collections.emptyList();\n+    AnomalySlice effectiveSlice = this.slice.withDetectionId(this.config.getId())\n+        .withStart(this.getStartTime(generated) - this.maxGap - 1)\n+        .withEnd(this.getEndTime(generated) + this.maxGap + 1);\n+\n+    Collection<MergedAnomalyResultDTO> anomalies =\n+        this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n+\n+    return anomalies.stream()\n+        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))\n+        .collect(Collectors.toList());\n+  }\n+\n+  private boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n+    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n+    return componentName.contains(\",\");", "originalCommit": "0ce1f7213ad454c8f2622962a5e867be239a046c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5OTcxOA==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r401199718", "bodyText": "Updated.", "author": "jihaozh", "createdAt": "2020-03-31T20:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MTE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "55eda4b995d47b68e651d92d8ace4dc653ff08b5", "chunk": "diff --git a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\nindex 5f7b692daa..4455a63860 100644\n--- a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\n+++ b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\n\n@@ -60,15 +60,10 @@ public class ChildKeepingMergeWrapper extends BaselineFillingMergeWrapper {\n         this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n \n     return anomalies.stream()\n-        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))\n+        .filter(anomaly -> !anomaly.isChild() && ThirdEyeUtils.isDetectedByMultipleComponents(anomaly))\n         .collect(Collectors.toList());\n   }\n \n-  private boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n-    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n-    return componentName.contains(\",\");\n-  }\n-\n   @Override\n   protected List<MergedAnomalyResultDTO> merge(Collection<MergedAnomalyResultDTO> anomalies) {\n     List<MergedAnomalyResultDTO> input = new ArrayList<>(anomalies);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MTI1Mg==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r400561252", "bodyText": "Why we need to have a filter on multiple component here?", "author": "xiaohui-sun", "createdAt": "2020-03-30T23:49:02Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java", "diffHunk": "@@ -48,9 +50,23 @@ public ChildKeepingMergeWrapper(DataProvider provider, DetectionConfigDTO config\n   }\n \n   @Override\n-  // does not fetch any anomalies from database\n+  // retrieve the anomalies that are detected by multiple detectors\n   protected List<MergedAnomalyResultDTO> retrieveAnomaliesFromDatabase(List<MergedAnomalyResultDTO> generated) {\n-    return Collections.emptyList();\n+    AnomalySlice effectiveSlice = this.slice.withDetectionId(this.config.getId())\n+        .withStart(this.getStartTime(generated) - this.maxGap - 1)\n+        .withEnd(this.getEndTime(generated) + this.maxGap + 1);\n+\n+    Collection<MergedAnomalyResultDTO> anomalies =\n+        this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n+\n+    return anomalies.stream()\n+        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))", "originalCommit": "0ce1f7213ad454c8f2622962a5e867be239a046c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwMDQ1NQ==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r401200455", "bodyText": "The rule-level merger will only fetch the anomalies generated by single rule. The final merger needs to retrieve the anomalies that are generated by multiple components and merges them.", "author": "jihaozh", "createdAt": "2020-03-31T20:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MTI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "55eda4b995d47b68e651d92d8ace4dc653ff08b5", "chunk": "diff --git a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\nindex 5f7b692daa..4455a63860 100644\n--- a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\n+++ b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/detection/wrapper/ChildKeepingMergeWrapper.java\n\n@@ -60,15 +60,10 @@ public class ChildKeepingMergeWrapper extends BaselineFillingMergeWrapper {\n         this.provider.fetchAnomalies(Collections.singleton(effectiveSlice)).get(effectiveSlice);\n \n     return anomalies.stream()\n-        .filter(anomaly -> !anomaly.isChild() && isDetectedByMultipleComponents(anomaly))\n+        .filter(anomaly -> !anomaly.isChild() && ThirdEyeUtils.isDetectedByMultipleComponents(anomaly))\n         .collect(Collectors.toList());\n   }\n \n-  private boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n-    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n-    return componentName.contains(\",\");\n-  }\n-\n   @Override\n   protected List<MergedAnomalyResultDTO> merge(Collection<MergedAnomalyResultDTO> anomalies) {\n     List<MergedAnomalyResultDTO> input = new ArrayList<>(anomalies);\n"}}, {"oid": "55eda4b995d47b68e651d92d8ace4dc653ff08b5", "url": "https://github.com/apache/pinot/commit/55eda4b995d47b68e651d92d8ace4dc653ff08b5", "message": "address comments", "committedDate": "2020-03-31T20:36:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDkwMQ==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r401204901", "bodyText": "Convert \",\" to a static final string PROP_DETECTOR_COMPONENT_NAME_DELIMETER and use this for all the places it is used. E.g, combineComponents()/", "author": "xiaohui-sun", "createdAt": "2020-03-31T20:47:04Z", "path": "thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/util/ThirdEyeUtils.java", "diffHunk": "@@ -705,6 +706,16 @@ public static long getCachingPeriodLookback(TimeGranularity granularity) {\n     return period;\n   }\n \n+  /**\n+   * Check if the anomaly is detected by multiple components\n+   * @param anomaly the anomaly\n+   * @return if the anomaly is detected by multiple components\n+   */\n+  public static boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n+    String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n+    return componentName.contains(\",\");", "originalCommit": "55eda4b995d47b68e651d92d8ace4dc653ff08b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyMzIxNQ==", "url": "https://github.com/apache/pinot/pull/5196#discussion_r401223215", "bodyText": "good point. updated", "author": "jihaozh", "createdAt": "2020-03-31T21:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDkwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e6a8d8603e53f0dc9a8575818d3ab6a10b12f8e0", "chunk": "diff --git a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/util/ThirdEyeUtils.java b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/util/ThirdEyeUtils.java\nindex 71e9e7cf1b..e7512c3f52 100644\n--- a/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/util/ThirdEyeUtils.java\n+++ b/thirdeye/thirdeye-pinot/src/main/java/org/apache/pinot/thirdeye/util/ThirdEyeUtils.java\n\n@@ -713,7 +715,7 @@ public abstract class ThirdEyeUtils {\n    */\n   public static boolean isDetectedByMultipleComponents(MergedAnomalyResultDTO anomaly) {\n     String componentName = anomaly.getProperties().getOrDefault(PROP_DETECTOR_COMPONENT_NAME, \"\");\n-    return componentName.contains(\",\");\n+    return componentName.contains(PROP_DETECTOR_COMPONENT_NAME_DELIMETER);\n   }\n \n   /**\n"}}, {"oid": "e6a8d8603e53f0dc9a8575818d3ab6a10b12f8e0", "url": "https://github.com/apache/pinot/commit/e6a8d8603e53f0dc9a8575818d3ab6a10b12f8e0", "message": "address comment", "committedDate": "2020-03-31T21:21:25Z", "type": "commit"}]}