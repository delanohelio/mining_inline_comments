{"pr_number": 5082, "pr_title": "Plug in the new routing introduced in #5046", "pr_createdAt": "2020-02-19T20:16:22Z", "pr_url": "https://github.com/apache/pinot/pull/5082", "timeline": [{"oid": "d746cb89541b16f522d41212ce2e03dc32553a25", "url": "https://github.com/apache/pinot/commit/d746cb89541b16f522d41212ce2e03dc32553a25", "message": "Plug in the new routing introduced in #5046\n\n- Plug in the new routing for the new added routing features\n- Re-implement time boundary refresh as a general broker segment refresh to handle the update of time info, partition info etc.\n- Add PinotBrokerRouting resource to provide APIs to manage the broker routing\n  - PUT `/routing/{tableName}`: Build/rebuild the routing for a table\n  - PUT `/routing/refresh/{tableName}/{segmentName}`: Refresh the routing for a segment\n  - DELETE `/routing/{tableName}`: Remove the routing for a table\n- Add a new debug API to help test the segment pruning\n  - GET `/debug/routingTable?pql={pql}`: Get the routing table for a query\n\n(Backward-incompatible) Broker rest API changes:\n- GET `/debug/timeBoundary/{tableName}` will return NOT_FOUND status when time boundary does not exist\n- GET `/debug/routingTable/{tableName}` will return the actual routing table instead of the snapshots because snapshot is no longer available for the new routing\n- GET `/health` will return the status from the ServiceStatus in order to reflect the real status of the broker\n\n(Backward-incompatible) Time boundary refresh:\nTime boundary refresh is merged into the general broker segment refresh and is triggered by the SegmentRefreshMessage.\nIn case controller and broker are running in different versions, it won't have any effect.\nSince time boundary refresh is needed in very rare scenario, it should have very little impact.", "committedDate": "2020-02-19T20:29:55Z", "type": "forcePushed"}, {"oid": "5fe28eed52345e4925b89d9af14f81fa2be33840", "url": "https://github.com/apache/pinot/commit/5fe28eed52345e4925b89d9af14f81fa2be33840", "message": "Plug in the new routing introduced in #5046\n\n- Plug in the new routing for the new added routing features\n- Re-implement time boundary refresh as a general broker segment refresh to handle the update of time info, partition info etc.\n- Add PinotBrokerRouting resource to provide APIs to manage the broker routing\n  - PUT `/routing/{tableName}`: Build/rebuild the routing for a table\n  - PUT `/routing/refresh/{tableName}/{segmentName}`: Refresh the routing for a segment\n  - DELETE `/routing/{tableName}`: Remove the routing for a table\n- Add a new debug API to help test the segment pruning\n  - GET `/debug/routingTable?pql={pql}`: Get the routing table for a query\n\n(Backward-incompatible) Broker rest API changes:\n- GET `/debug/timeBoundary/{tableName}` will return NOT_FOUND status when time boundary does not exist\n- GET `/debug/routingTable/{tableName}` will return the actual routing table instead of the snapshots because snapshot is no longer available for the new routing\n- GET `/health` will return the status from the ServiceStatus in order to reflect the real status of the broker\n\n(Backward-incompatible) Time boundary refresh:\nTime boundary refresh is merged into the general broker segment refresh and is triggered by the SegmentRefreshMessage.\nIn case controller and broker are running in different versions, it won't have any effect.\nSince time boundary refresh is needed in very rare scenario, it should have very little impact.", "committedDate": "2020-02-19T21:36:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzMyMw==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382737323", "bodyText": "Can we update the javadoc to state the time boundary refresh is now done as part of SegmentRefreshMessage?", "author": "siddharthteotia", "createdAt": "2020-02-21T18:29:03Z", "path": "pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java", "diffHunk": "@@ -19,52 +19,60 @@\n package org.apache.pinot.common.messages;\n \n import java.util.UUID;\n+import org.apache.helix.ZNRecord;\n import org.apache.helix.model.Message;\n \n \n /**\n- * This (helix) message is sent from the controller to the server when a request is received to refresh\n+ * This (Helix) message is sent from the controller to brokers and servers when a request is received to refresh\n  * an existing segment.\n  *\n- * There is one mandatory field in the message -- the CRC of the new segment.\n+ * NOTE: Changing this class to include new fields is a change in the protocol, so the new fields must be made optional,\n+ * and coded in such a way that either controller, broker or server may be upgraded first.", "originalCommit": "5fe28eed52345e4925b89d9af14f81fa2be33840", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MjAyMw==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382752023", "bodyText": "Added", "author": "Jackie-Jiang", "createdAt": "2020-02-21T19:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "chunk": "diff --git a/pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java b/pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java\nindex ea6b2f6f41..aeaa33add1 100644\n--- a/pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java\n+++ b/pinot-common/src/main/java/org/apache/pinot/common/messages/SegmentRefreshMessage.java\n\n@@ -24,8 +24,10 @@ import org.apache.helix.model.Message;\n \n \n /**\n- * This (Helix) message is sent from the controller to brokers and servers when a request is received to refresh\n- * an existing segment.\n+ * This (Helix) message is sent from the controller to servers and brokers when a request is received to refresh\n+ * an existing segment. When server gets this message, it will check the crc of the local segment and the segment ZK\n+ * metadata and download the refreshed segment if necessary. When broker gets this message, it will update the routing\n+ * properties (time boundary, partition info etc.) based on the refreshed segment ZK metadata.\n  *\n  * NOTE: Changing this class to include new fields is a change in the protocol, so the new fields must be made optional,\n  * and coded in such a way that either controller, broker or server may be upgraded first.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTUzMA==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382739530", "bodyText": "It looks like with these changes we can delete HelixExternalViewBasedRouting class and RoutingTable interface? (assuming RoutingManager is backward compatible)", "author": "siddharthteotia", "createdAt": "2020-02-21T18:33:54Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/HelixBrokerStarter.java", "diffHunk": "@@ -82,16 +82,16 @@\n   private ZkHelixPropertyStore<ZNRecord> _propertyStore;\n   private HelixDataAccessor _helixDataAccessor;\n \n-  // Cluster change handlers\n-  private HelixExternalViewBasedRouting _helixExternalViewBasedRouting;", "originalCommit": "5fe28eed52345e4925b89d9af14f81fa2be33840", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MjE4Mw==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382752183", "bodyText": "Yes. The code cleanup will be in the following pr.", "author": "Jackie-Jiang", "createdAt": "2020-02-21T19:01:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTUzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTU4NA==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382739584", "bodyText": "(nit): Can we please add Javadoc?", "author": "siddharthteotia", "createdAt": "2020-02-21T18:34:02Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pinot.broker.broker.helix;\n+\n+import org.apache.helix.NotificationContext;\n+import org.apache.helix.messaging.handling.HelixTaskResult;\n+import org.apache.helix.messaging.handling.MessageHandler;\n+import org.apache.helix.messaging.handling.MessageHandlerFactory;\n+import org.apache.helix.model.Message;\n+import org.apache.pinot.broker.routing.v2.RoutingManager;\n+import org.apache.pinot.common.messages.SegmentRefreshMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+", "originalCommit": "5fe28eed52345e4925b89d9af14f81fa2be33840", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NDIxNg==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382754216", "bodyText": "Added", "author": "Jackie-Jiang", "createdAt": "2020-02-21T19:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "chunk": "diff --git a/pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java b/pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java\nindex 0a186f31bd..86e9269041 100644\n--- a/pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java\n+++ b/pinot-broker/src/main/java/org/apache/pinot/broker/broker/helix/BrokerUserDefineMessageHandlerFactory.java\n\n@@ -29,6 +29,13 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n \n+/**\n+ * Broker message handler factory for Helix user-define messages.\n+ * <p>The following message sub-types are supported:\n+ * <ul>\n+ *   <li>Refresh segment message: Refresh the routing properties for a given segment</li>\n+ * </ul>\n+ */\n public class BrokerUserDefineMessageHandlerFactory implements MessageHandlerFactory {\n   private static final Logger LOGGER = LoggerFactory.getLogger(BrokerUserDefineMessageHandlerFactory.class);\n \n"}}, {"oid": "a003e01433f3ae4e948076f46ae91b88955e367e", "url": "https://github.com/apache/pinot/commit/a003e01433f3ae4e948076f46ae91b88955e367e", "message": "Plug in the new routing introduced in #5046\n\n- Plug in the new routing for the new added routing features\n- Re-implement time boundary refresh as a general broker segment refresh to handle the update of time info, partition info etc.\n- Add PinotBrokerRouting resource to provide APIs to manage the broker routing\n  - PUT `/routing/{tableName}`: Build/rebuild the routing for a table\n  - PUT `/routing/refresh/{tableName}/{segmentName}`: Refresh the routing for a segment\n  - DELETE `/routing/{tableName}`: Remove the routing for a table\n- Add a new debug API to help test the segment pruning\n  - GET `/debug/routingTable?pql={pql}`: Get the routing table for a query\n\n(Backward-incompatible) Broker rest API changes:\n- GET `/debug/timeBoundary/{tableName}` will return NOT_FOUND status when time boundary does not exist\n- GET `/debug/routingTable/{tableName}` will return the actual routing table instead of the snapshots because snapshot is no longer available for the new routing\n- GET `/health` will return the status from the ServiceStatus in order to reflect the real status of the broker\n\n(Backward-incompatible) Time boundary refresh:\nTime boundary refresh is merged into the general broker segment refresh and is triggered by the SegmentRefreshMessage.\nIn case controller and broker are running in different versions, it won't have any effect.\nSince time boundary refresh is needed in very rare scenario, it should have very little impact.", "committedDate": "2020-02-21T18:56:49Z", "type": "commit"}, {"oid": "23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "url": "https://github.com/apache/pinot/commit/23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "message": "address comments", "committedDate": "2020-02-21T19:06:17Z", "type": "commit"}, {"oid": "23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "url": "https://github.com/apache/pinot/commit/23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "message": "address comments", "committedDate": "2020-02-21T19:06:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTMxMg==", "url": "https://github.com/apache/pinot/pull/5082#discussion_r382755312", "bodyText": "I generally like the REST API resources to document in the javadoc each API endpoint and purpose as bullet list. But upto you.", "author": "siddharthteotia", "createdAt": "2020-02-21T19:08:18Z", "path": "pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotBrokerDebug.java", "diffHunk": "@@ -23,77 +23,96 @@\n import io.swagger.annotations.ApiParam;\n import io.swagger.annotations.ApiResponse;\n import io.swagger.annotations.ApiResponses;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.pinot.broker.routing.RoutingTable;\n-import org.apache.pinot.broker.routing.TimeBoundaryService;\n+import org.apache.pinot.broker.routing.v2.RoutingManager;\n+import org.apache.pinot.broker.routing.v2.timeboundary.TimeBoundaryInfo;\n import org.apache.pinot.common.config.TableNameBuilder;\n-import org.apache.pinot.common.metrics.BrokerMeter;\n-import org.apache.pinot.common.metrics.BrokerMetrics;\n-import org.apache.pinot.common.utils.CommonConstants;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.apache.pinot.common.utils.CommonConstants.Helix.TableType;\n+import org.apache.pinot.core.transport.ServerInstance;\n+import org.apache.pinot.pql.parsers.Pql2Compiler;\n \n ", "originalCommit": "23dbc3f5e488da215c79c7e6cfbc500c00b0bde9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}