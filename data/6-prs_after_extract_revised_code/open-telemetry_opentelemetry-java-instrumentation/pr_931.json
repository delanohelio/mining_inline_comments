{"pr_number": 931, "pr_title": "Avoid ClassCastException on direct SDK access", "pr_createdAt": "2020-08-09T04:39:15Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931", "timeline": [{"oid": "7d01159d82bb00f4065ae59ce8e03e4f7178c3c6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7d01159d82bb00f4065ae59ce8e03e4f7178c3c6", "message": "Avoid ClassCastException on direct SDK access", "committedDate": "2020-08-09T04:38:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzNjA0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931#discussion_r467536049", "bodyText": "I'd include the flag here if mentioning debug logging", "author": "anuraaga", "createdAt": "2020-08-09T04:50:47Z", "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/UnshadedTracerProvider.java", "diffHunk": "@@ -42,4 +53,20 @@ public Tracer get(final String instrumentationName, final String instrumentation\n             .get(instrumentationName, instrumentationVersion),\n         contextStore);\n   }\n+\n+  // this is called by OpenTelemetrySdk, which expects to get back a real TracerProviderSdk\n+  @Override\n+  public Object unobfuscate() {\n+    if (!messageAlreadyLogged.getAndSet(true)) {\n+      String message =\n+          \"direct usage of the OpenTelemetry SDK is not supported when running agent\"\n+              + \" (run with debug logging to see stack trace)\";", "originalCommit": "7d01159d82bb00f4065ae59ce8e03e4f7178c3c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzNjExMg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931#discussion_r467536112", "bodyText": "Adding the concrete operation can provide good context\nDirect usage of the OpenTelemetry SDK by calling OpenTelemetrySdk.getTracrProvider() is not...", "author": "anuraaga", "createdAt": "2020-08-09T04:51:54Z", "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/UnshadedTracerProvider.java", "diffHunk": "@@ -42,4 +53,20 @@ public Tracer get(final String instrumentationName, final String instrumentation\n             .get(instrumentationName, instrumentationVersion),\n         contextStore);\n   }\n+\n+  // this is called by OpenTelemetrySdk, which expects to get back a real TracerProviderSdk\n+  @Override\n+  public Object unobfuscate() {\n+    if (!messageAlreadyLogged.getAndSet(true)) {\n+      String message =\n+          \"direct usage of the OpenTelemetry SDK is not supported when running agent\"", "originalCommit": "7d01159d82bb00f4065ae59ce8e03e4f7178c3c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzNjIxOA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931#discussion_r467536218", "bodyText": "Also maybe a link to how to configure the agent (presumably what they were trying to do).", "author": "anuraaga", "createdAt": "2020-08-09T04:53:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzNjExMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2NTAxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931#discussion_r467565010", "bodyText": "What does it mean \"not supported\"? We don't throw, we don't exist, we have test it place to verify nothing is broken. So what exactly is not supported?", "author": "iNikem", "createdAt": "2020-08-09T10:20:10Z", "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/UnshadedTracerProvider.java", "diffHunk": "@@ -42,4 +53,20 @@ public Tracer get(final String instrumentationName, final String instrumentation\n             .get(instrumentationName, instrumentationVersion),\n         contextStore);\n   }\n+\n+  // this is called by OpenTelemetrySdk, which expects to get back a real TracerProviderSdk\n+  @Override\n+  public Object unobfuscate() {\n+    if (!messageAlreadyLogged.getAndSet(true)) {\n+      String message =\n+          \"direct usage of the OpenTelemetry SDK is not supported when running agent\"", "originalCommit": "7d01159d82bb00f4065ae59ce8e03e4f7178c3c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MTUwNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931#discussion_r467671504", "bodyText": "Not supported means that if you use OpenTelemetrySdk.getTraceProvider(), you won't get back the agent's TraceProvider bridge, and so any telemetry you emit won't get intercepted / correlated / exported by the agent the way we do if you use OpenTelemetry.getTraceProvider() from OpenTelemetry API", "author": "trask", "createdAt": "2020-08-10T03:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2NTAxMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxMzA4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/931#discussion_r467613080", "bodyText": "Sorry, but I am totally confused. Javadoc for Obfuscated says: \"because auto-instrumentation takes over the static global providers returned by the API and points them to it's embedded SDK\". And also \"Static global providers are obfuscated when they are returned from the API to prevent users from casting them to their SDK specific implementation.\"\nBut it seems to me that here we are doing exactly the same, no? We don't \"take over the static global providers returned by the API and point them to it's embedded SDK\", but we take global provider, unobfuskcate it and return to the end users.\nCan we have a chat where @trask we explain to me (and @anuraaga if he wishes so) this whole business with obfuscation, shading, future support for multiple versions of API/SDK etc etc. Because I am totally confused.", "author": "iNikem", "createdAt": "2020-08-09T18:18:48Z", "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/UnshadedTracerProvider.java", "diffHunk": "@@ -42,4 +53,20 @@ public Tracer get(final String instrumentationName, final String instrumentation\n             .get(instrumentationName, instrumentationVersion),\n         contextStore);\n   }\n+\n+  // this is called by OpenTelemetrySdk, which expects to get back a real TracerProviderSdk\n+  @Override\n+  public Object unobfuscate() {\n+    if (!messageAlreadyLogged.getAndSet(true)) {\n+      String message =\n+          \"direct usage of the OpenTelemetry SDK is not supported when running agent\"\n+              + \" (run with debug logging to see stack trace)\";\n+      if (log.isDebugEnabled()) {\n+        log.debug(message, new Exception(\"stack trace\"));\n+      } else {\n+        log.info(message);\n+      }\n+    }\n+    return ((Obfuscated<?>) originalTracerProvider).unobfuscate();", "originalCommit": "7d01159d82bb00f4065ae59ce8e03e4f7178c3c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}