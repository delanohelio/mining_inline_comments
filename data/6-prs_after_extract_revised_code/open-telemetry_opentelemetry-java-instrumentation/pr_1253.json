{"pr_number": 1253, "pr_title": "Support otlp_span and otlp_metric exporter config names", "pr_createdAt": "2020-09-24T08:56:16Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253", "timeline": [{"oid": "9570a48860a4b441f854461c0818f55950684f2e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9570a48860a4b441f854461c0818f55950684f2e", "message": "Support otlp_span and otelp_metric exporter config names\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-24T08:55:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494221024", "bodyText": "Hmm - feels a bit magic but I guess it's fine \ud83d\ude03", "author": "anuraaga", "createdAt": "2020-09-24T10:55:37Z", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -91,6 +91,7 @@ private static MetricExporterFactory findMetricExporterFactory(String exporterNa\n       if (metricExporterFactory\n           .getClass()\n           .getSimpleName()\n+          .replace(\"_\", \"\")", "originalCommit": "9570a48860a4b441f854461c0818f55950684f2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQyNjU2OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494426568", "bodyText": "yeah, maybe the factories could have a method that returns a name and do the comparison based on that.", "author": "pavolloffay", "createdAt": "2020-09-24T15:49:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcwOTI0MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494709241", "bodyText": "I like the idea of SpanExporterFactory/MetricExporterFactory having a method Set<String> getNames() (Set since e.g. OtlpSpanExporterFactory can be enabled via both otlp and otlp_span)", "author": "trask", "createdAt": "2020-09-25T02:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcxMzAwMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494713003", "bodyText": "I guess this is only applicable to our built-in exporters though, as opposed to someone building their own Exporter and using EXPORTER_JAR, so maybe not. Also, I forget, now that we are Java 8, we can always add interface methods after GA \ud83d\ude01", "author": "trask", "createdAt": "2020-09-25T02:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2MzU4NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1253#discussion_r494763584", "bodyText": "Yeah I think my idea before was to have a map of wellknown names, and only use the classname for custom exporters", "author": "anuraaga", "createdAt": "2020-09-25T05:57:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyMTAyNA=="}], "type": "inlineReview", "revised_code": null}]}