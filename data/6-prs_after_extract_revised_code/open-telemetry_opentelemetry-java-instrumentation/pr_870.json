{"pr_number": 870, "pr_title": "Add response generic parameter to HttpServerTracer", "pr_createdAt": "2020-08-01T20:45:27Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/870", "timeline": [{"oid": "a31f5fbe24e422bf06968a7f10527c7f41612fb2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a31f5fbe24e422bf06968a7f10527c7f41612fb2", "message": "Add response generic parameter to HttpServerTracer", "committedDate": "2020-08-01T23:15:17Z", "type": "forcePushed"}, {"oid": "85d1f623956ae80d2d013bf8bcf30f8027912d05", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/85d1f623956ae80d2d013bf8bcf30f8027912d05", "message": "Add response generic parameter to HttpServerTracer", "committedDate": "2020-08-02T00:35:50Z", "type": "forcePushed"}, {"oid": "0a9a28211593a953c49499b8951f3817a67b44f1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0a9a28211593a953c49499b8951f3817a67b44f1", "message": "Add response generic parameter to HttpServerTracer", "committedDate": "2020-08-02T00:38:05Z", "type": "commit"}, {"oid": "0a9a28211593a953c49499b8951f3817a67b44f1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0a9a28211593a953c49499b8951f3817a67b44f1", "message": "Add response generic parameter to HttpServerTracer", "committedDate": "2020-08-02T00:38:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyNTQ0Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/870#discussion_r464225442", "bodyText": "I would call it endSpan", "author": "iNikem", "createdAt": "2020-08-03T06:52:36Z", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerTracer.java", "diffHunk": "@@ -267,12 +277,20 @@ static String extractForwardedFor(String forwarded) {\n     return span.getContext();\n   }\n \n-  private void setStatus(Span span, int status) {\n+  private static void setStatus(Span span, int status) {\n     SemanticAttributes.HTTP_STATUS_CODE.set(span, status);\n     // TODO status_message\n     span.setStatus(HttpStatusConverter.statusFromHttpStatus(status));\n   }\n \n+  private static void commonEnd(Span span, long timestamp) {", "originalCommit": "0a9a28211593a953c49499b8951f3817a67b44f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU3Mjc1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/870#discussion_r464572750", "bodyText": "\ud83d\udc4d done", "author": "trask", "createdAt": "2020-08-03T17:56:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyNTQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e30965ad1a11d45c6cec60de3528b2f77b681319", "chunk": "diff --git a/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerTracer.java b/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerTracer.java\nindex f4daddb6d2..63134524eb 100644\n--- a/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerTracer.java\n+++ b/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerTracer.java\n\n@@ -283,7 +283,7 @@ public abstract class HttpServerTracer<REQUEST, RESPONSE, CONNECTION, STORAGE> e\n     span.setStatus(HttpStatusConverter.statusFromHttpStatus(status));\n   }\n \n-  private static void commonEnd(Span span, long timestamp) {\n+  private static void endSpan(Span span, long timestamp) {\n     if (timestamp >= 0) {\n       span.end(EndSpanOptions.builder().setEndTimestamp(timestamp).build());\n     } else {\n"}}, {"oid": "e30965ad1a11d45c6cec60de3528b2f77b681319", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e30965ad1a11d45c6cec60de3528b2f77b681319", "message": "feedback", "committedDate": "2020-08-03T17:55:43Z", "type": "commit"}]}