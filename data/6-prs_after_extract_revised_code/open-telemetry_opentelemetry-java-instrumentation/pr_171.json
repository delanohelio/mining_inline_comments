{"pr_number": 171, "pr_title": "Removed statically loaded exporters and added more tests", "pr_createdAt": "2020-02-18T19:32:48Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171", "timeline": [{"oid": "468f55e92bed4f5dc53f0529b9758c9226c1560c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/468f55e92bed4f5dc53f0529b9758c9226c1560c", "message": "Classloader done. Still needs shading", "committedDate": "2020-02-08T01:46:45Z", "type": "commit"}, {"oid": "d93b9eed41e5851e70434e53b1287ac8c5ba00a4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d93b9eed41e5851e70434e53b1287ac8c5ba00a4", "message": "First working version", "committedDate": "2020-02-10T16:27:59Z", "type": "commit"}, {"oid": "b7bbcfd19df1c0e4a4c50321f65ca8738cc90b0f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b7bbcfd19df1c0e4a4c50321f65ca8738cc90b0f", "message": "Made the dummy exporter slightly less stupid", "committedDate": "2020-02-10T18:33:36Z", "type": "commit"}, {"oid": "b40c68f60ef6be8d77d80462effc3a24eb637401", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b40c68f60ef6be8d77d80462effc3a24eb637401", "message": "Use SPI pattern for loading. Added runtime shader", "committedDate": "2020-02-11T04:03:40Z", "type": "commit"}, {"oid": "e3ae2f524764636d859c2ae81db0fe2e64c9e3bc", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e3ae2f524764636d859c2ae81db0fe2e64c9e3bc", "message": "Changed to do shading on binary stream instead of loading the class first", "committedDate": "2020-02-11T14:44:24Z", "type": "commit"}, {"oid": "7a827279a5de8fdca26e93fe799c619217be6af2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7a827279a5de8fdca26e93fe799c619217be6af2", "message": "Protected the runtime shader from having its internals shaded", "committedDate": "2020-02-12T15:52:12Z", "type": "commit"}, {"oid": "4934e259a5d45c8154c5e7f2b4f3b2b137254529", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4934e259a5d45c8154c5e7f2b4f3b2b137254529", "message": "Cleaned up code and naming", "committedDate": "2020-02-12T22:25:54Z", "type": "commit"}, {"oid": "223c561024cbf4b39ece218df920474d7be9ce7c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/223c561024cbf4b39ece218df920474d7be9ce7c", "message": "Cleaned up", "committedDate": "2020-02-13T01:27:39Z", "type": "commit"}, {"oid": "ced5de1f2e8d5f56629b6ee64df6da6c7ca38f84", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ced5de1f2e8d5f56629b6ee64df6da6c7ca38f84", "message": "Merge remote-tracking branch 'upstream/master' into prydin-exporter-experiment", "committedDate": "2020-02-13T01:27:42Z", "type": "commit"}, {"oid": "a2371bdf9fa27b312eff388255a9492c089054b8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a2371bdf9fa27b312eff388255a9492c089054b8", "message": "Cleaned up and fixed test issues", "committedDate": "2020-02-13T04:05:49Z", "type": "commit"}, {"oid": "1d2f7532728ed3131f29474662b58fafb277c7ec", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1d2f7532728ed3131f29474662b58fafb277c7ec", "message": "Merge branch 'master' into prydin-exporter-experiment", "committedDate": "2020-02-13T04:16:59Z", "type": "commit"}, {"oid": "f3ad858bd931d0645f16f0ce436dacfcce1098f1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f3ad858bd931d0645f16f0ce436dacfcce1098f1", "message": "Minor fixes from code review", "committedDate": "2020-02-13T13:33:17Z", "type": "commit"}, {"oid": "3b0e247749554f5bb44f5d890f034e69417080aa", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3b0e247749554f5bb44f5d890f034e69417080aa", "message": "Merge from upstream", "committedDate": "2020-02-13T14:14:52Z", "type": "commit"}, {"oid": "cf5a9db69bb5e2ab7a91d0bca1e5387855ee1fd7", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cf5a9db69bb5e2ab7a91d0bca1e5387855ee1fd7", "message": "Merge branch 'prydin-exporter-experiment' of https://github.com/prydin/opentelemetry-auto-instr-java into prydin-exporter-experiment", "committedDate": "2020-02-13T14:19:32Z", "type": "commit"}, {"oid": "dcdd621f53dc51d5f671b7efafc716d6ad2a1862", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dcdd621f53dc51d5f671b7efafc716d6ad2a1862", "message": "Added exporter smoke tests", "committedDate": "2020-02-13T22:23:34Z", "type": "commit"}, {"oid": "0a6bd6e5c36b09640ffd0e5bd74c0a1662c6240a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0a6bd6e5c36b09640ffd0e5bd74c0a1662c6240a", "message": "Merge remote-tracking branch 'upstream/master' into prydin-exporter-experiment", "committedDate": "2020-02-13T22:23:58Z", "type": "commit"}, {"oid": "210a8973fad7f59dceea281852f680121022ec1b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/210a8973fad7f59dceea281852f680121022ec1b", "message": "Finalized exporter smoke tests", "committedDate": "2020-02-13T23:03:44Z", "type": "commit"}, {"oid": "0c10330d07ccf09fcdefbe5aec0f96b8919094fb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0c10330d07ccf09fcdefbe5aec0f96b8919094fb", "message": "Reenabled springboot test", "committedDate": "2020-02-13T23:14:35Z", "type": "commit"}, {"oid": "2dca1b2d76489b086b118849839e0cd7ac8a5d21", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/2dca1b2d76489b086b118849839e0cd7ac8a5d21", "message": "Fixed some copy-paste issues", "committedDate": "2020-02-13T23:18:38Z", "type": "commit"}, {"oid": "b6ac07bf21ac88f7148b33f11763c57400be8c4e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b6ac07bf21ac88f7148b33f11763c57400be8c4e", "message": "Initial work on exporter bridges", "committedDate": "2020-02-14T01:31:46Z", "type": "commit"}, {"oid": "fb44fb516a47a893b80a424c1f10ad78106adc4e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fb44fb516a47a893b80a424c1f10ad78106adc4e", "message": "Implemented dynamically loaded exporter adapters", "committedDate": "2020-02-15T20:59:04Z", "type": "commit"}, {"oid": "fc86881e1394474e560697675a35c44d63cfa2a6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fc86881e1394474e560697675a35c44d63cfa2a6", "message": "Added some more files", "committedDate": "2020-02-15T21:00:02Z", "type": "commit"}, {"oid": "d96f61c7231ceb5302ca0edfc22562fdf43792f0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d96f61c7231ceb5302ca0edfc22562fdf43792f0", "message": "Added exporter-adapters for well-known exporters\n\nMoved dummy-exporter to exporter adapters\n\nRemoved -Dota.exporter option in favor of ota.exporter.jar\n\nAdded basic exporter tests to smoketest\n\nIncreased timeout for Finatra server start to help with parallel test execution", "committedDate": "2020-02-18T14:14:25Z", "type": "commit"}, {"oid": "d10bcb864cdf9a9984c073ed9b8b6dbcb04308ea", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d10bcb864cdf9a9984c073ed9b8b6dbcb04308ea", "message": "Cleaned up tests, removed dead code and updated README", "committedDate": "2020-02-18T19:17:51Z", "type": "commit"}, {"oid": "d384d5876434e0ee28e70e856411293e845b6b2d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d384d5876434e0ee28e70e856411293e845b6b2d", "message": "Update README.md", "committedDate": "2020-02-18T19:23:39Z", "type": "commit"}, {"oid": "d87b3e5df54d63b47aba2389aba45239d59e36d1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d87b3e5df54d63b47aba2389aba45239d59e36d1", "message": "Update README.md", "committedDate": "2020-02-18T19:24:17Z", "type": "commit"}, {"oid": "6d6a27033656dd0508a40a70c9544d5a8e2f20e7", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6d6a27033656dd0508a40a70c9544d5a8e2f20e7", "message": "Removed references to gRPC dependencies needed by Jaeger", "committedDate": "2020-02-18T19:36:28Z", "type": "commit"}, {"oid": "92f8fdec0263b40b0048616adc65a4300328ea0a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/92f8fdec0263b40b0048616adc65a4300328ea0a", "message": "Merge branch 'master' of https://github.com/open-telemetry/opentelemetry-auto-instr-java into prydin-dynamic-jaeger", "committedDate": "2020-02-18T19:36:44Z", "type": "commit"}, {"oid": "147145d6191726e0ab953af35226bbd796fa417f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/147145d6191726e0ab953af35226bbd796fa417f", "message": "Merge branch 'prydin-dynamic-jaeger' of https://github.com/prydin/opentelemetry-auto-instr-java into prydin-dynamic-jaeger", "committedDate": "2020-02-18T19:37:42Z", "type": "commit"}, {"oid": "1a51083cd2607512fabb038dc05a47c4fe1f8744", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1a51083cd2607512fabb038dc05a47c4fe1f8744", "message": "Fixed incorrect use of ServiceLoader in test", "committedDate": "2020-02-18T20:05:48Z", "type": "commit"}, {"oid": "fa7e1d5dfd30d4515c747f9d56687ee4bbddded0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fa7e1d5dfd30d4515c747f9d56687ee4bbddded0", "message": "Fixed test dependencies", "committedDate": "2020-02-18T21:15:30Z", "type": "commit"}, {"oid": "3bf1d4d82eb9ebe4dd56d0789ac0b873270bd5a0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3bf1d4d82eb9ebe4dd56d0789ac0b873270bd5a0", "message": "Adjusted exporter tests", "committedDate": "2020-02-18T21:47:14Z", "type": "commit"}, {"oid": "50bdc689a19b759c03ceff44406755e318c98108", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/50bdc689a19b759c03ceff44406755e318c98108", "message": "Fixed codeNarc issues", "committedDate": "2020-02-18T21:54:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA2NDcxNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171#discussion_r381064714", "bodyText": "just want to check that things moved around in this file intentionally?", "author": "trask", "createdAt": "2020-02-19T03:54:39Z", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java", "diffHunk": "@@ -73,17 +68,16 @@\n   private static final boolean DEFAULT_HTTP_CLIENT_SPLIT_BY_DOMAIN = false;\n   private static final boolean DEFAULT_DB_CLIENT_HOST_SPLIT_BY_INSTANCE = false;\n   private static final int DEFAULT_SCOPE_DEPTH_LIMIT = 100;\n-\n-  public static final boolean DEFAULT_LOGS_INJECTION_ENABLED = false;\n-", "originalCommit": "50bdc689a19b759c03ceff44406755e318c98108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxMjY0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171#discussion_r382712643", "bodyText": "Sort of. Looks like the aftermath of a merge combined with opinionated auto formatting.", "author": "prydin", "createdAt": "2020-02-21T17:34:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA2NDcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "60f21747387520d6f954add4ec36607b43266db1", "chunk": "diff --git a/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java b/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java\nindex d77ecea366..895b426894 100644\n--- a/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java\n+++ b/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java\n\n@@ -68,16 +73,16 @@ public class Config {\n   private static final boolean DEFAULT_HTTP_CLIENT_SPLIT_BY_DOMAIN = false;\n   private static final boolean DEFAULT_DB_CLIENT_HOST_SPLIT_BY_INSTANCE = false;\n   private static final int DEFAULT_SCOPE_DEPTH_LIMIT = 100;\n+\n+  public static final boolean DEFAULT_LOGS_INJECTION_ENABLED = false;\n+\n   private static final String SPLIT_BY_SPACE_OR_COMMA_REGEX = \"[,\\\\s]+\";\n \n   private static final String DEFAULT_TRACE_ANNOTATIONS = null;\n   private static final boolean DEFAULT_TRACE_EXECUTORS_ALL = false;\n   private static final String DEFAULT_TRACE_EXECUTORS = \"\";\n   private static final String DEFAULT_TRACE_METHODS = null;\n-  // This has to be placed after all other static fields to give them a chance to initialize\n-  private static final Config INSTANCE = new Config();\n-  // Values from an optionally provided properties file\n-  private static Properties propertiesFromConfigFile;\n+\n   @Getter private final String exporterJar;\n   @Getter private final String serviceName;\n   @Getter private final boolean traceEnabled;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA2NjQ1NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171#discussion_r381066455", "bodyText": "\ud83d\udc4d", "author": "trask", "createdAt": "2020-02-19T04:03:23Z", "path": "agent-tooling/src/main/java/io/opentelemetry/auto/tooling/ExporterClassLoader.java", "diffHunk": "@@ -37,6 +38,17 @@ public ExporterClassLoader(final URL[] urls, final ClassLoader parent) {\n     super(urls, parent);\n   }\n \n+  @Override\n+  public Enumeration<URL> getResources(final String name) throws IOException {\n+    // A small hack to prevent other exporters from being loaded by this classloader if they\n+    // should happen to appear on the classpath.", "originalCommit": "50bdc689a19b759c03ceff44406755e318c98108", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA2NzQzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171#discussion_r381067439", "bodyText": "why not use default deadline?", "author": "trask", "createdAt": "2020-02-19T04:07:47Z", "path": "exporter-adapters/jaeger-adapter/src/main/java/io/opentelemetry/auto/exporters/jaeger/JaegerExporterFactory.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.opentelemetry.auto.exporters.jaeger;\n+\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+import io.opentelemetry.auto.exportersupport.ConfigProvider;\n+import io.opentelemetry.auto.exportersupport.SpanExporterFactory;\n+import io.opentelemetry.exporters.jaeger.JaegerGrpcSpanExporter;\n+import io.opentelemetry.sdk.trace.export.SpanExporter;\n+\n+public class JaegerExporterFactory implements SpanExporterFactory {\n+  private static final String HOST_CONFIG = \"jaeger.host\";\n+\n+  private static final String PORT_CONFIG = \"jaeger.port\";\n+\n+  private static final String SERVICE_CONFIG = \"service\";\n+\n+  private static final int DEFAULT_PORT = 14250;\n+\n+  private static final String DEFAULT_SERVICE = \"(unknown service)\";\n+\n+  @Override\n+  public SpanExporter fromConfig(final ConfigProvider config) {\n+    final String host = config.getString(HOST_CONFIG, null);\n+    if (host == null) {\n+      throw new IllegalArgumentException(HOST_CONFIG + \" must be specified\");\n+    }\n+    final int port = config.getInt(PORT_CONFIG, DEFAULT_PORT);\n+    final String service = config.getString(SERVICE_CONFIG, DEFAULT_SERVICE);\n+    final ManagedChannel jaegerChannel =\n+        ManagedChannelBuilder.forAddress(host, port).usePlaintext().build();\n+    return JaegerGrpcSpanExporter.newBuilder()\n+        .setServiceName(service)\n+        .setChannel(jaegerChannel)\n+        .setDeadline(30000)", "originalCommit": "50bdc689a19b759c03ceff44406755e318c98108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxMjIxMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171#discussion_r382712211", "bodyText": "Ooops. Copy-paste mistake.", "author": "prydin", "createdAt": "2020-02-21T17:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA2NzQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4dec100147620430a96422a4d2d352630ad38896", "chunk": "diff --git a/exporter-adapters/jaeger-adapter/src/main/java/io/opentelemetry/auto/exporters/jaeger/JaegerExporterFactory.java b/exporter-adapters/jaeger-adapter/src/main/java/io/opentelemetry/auto/exporters/jaeger/JaegerExporterFactory.java\nindex 5c8adae121..99fa9d4b5d 100644\n--- a/exporter-adapters/jaeger-adapter/src/main/java/io/opentelemetry/auto/exporters/jaeger/JaegerExporterFactory.java\n+++ b/exporter-adapters/jaeger-adapter/src/main/java/io/opentelemetry/auto/exporters/jaeger/JaegerExporterFactory.java\n\n@@ -31,7 +31,6 @@ public class JaegerExporterFactory implements SpanExporterFactory {\n     return JaegerGrpcSpanExporter.newBuilder()\n         .setServiceName(service)\n         .setChannel(jaegerChannel)\n-        .setDeadline(30000)\n         .build();\n   }\n }\n"}}, {"oid": "bcd947cebfbcb75f21a09b3c5ef8a23e9ec8240f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bcd947cebfbcb75f21a09b3c5ef8a23e9ec8240f", "message": "Fixed CircleCI issues", "committedDate": "2020-02-19T13:56:42Z", "type": "commit"}, {"oid": "206dcf8667c50b7d4a0fb1cb93fcce4f1ae23df8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/206dcf8667c50b7d4a0fb1cb93fcce4f1ae23df8", "message": "Added tests to check what CircleCI is doing", "committedDate": "2020-02-19T14:52:59Z", "type": "commit"}, {"oid": "c7506714de74d56c4e81bd9f1301aebac7cb06af", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c7506714de74d56c4e81bd9f1301aebac7cb06af", "message": "Added missing logging directory", "committedDate": "2020-02-19T15:08:28Z", "type": "commit"}, {"oid": "4dec100147620430a96422a4d2d352630ad38896", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4dec100147620430a96422a4d2d352630ad38896", "message": "Removed deadline() from Jaeger factory", "committedDate": "2020-02-19T15:38:33Z", "type": "commit"}, {"oid": "71e4f5357383445ca0333dd4ab9fd0d4faca0540", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/71e4f5357383445ca0333dd4ab9fd0d4faca0540", "message": "Another attempt to make it pass CircleCI", "committedDate": "2020-02-19T16:13:53Z", "type": "commit"}, {"oid": "79109ea99eb76e4e049da7277158952b81872629", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/79109ea99eb76e4e049da7277158952b81872629", "message": "Fixed some minor codeNarc issues", "committedDate": "2020-02-20T19:54:09Z", "type": "commit"}, {"oid": "66ee78f32a67ecff218987293a9325dac6ad1be2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/66ee78f32a67ecff218987293a9325dac6ad1be2", "message": "Wrapped test config in doFirst", "committedDate": "2020-02-21T12:34:14Z", "type": "commit"}, {"oid": "6ccce10651c182120275eee848b87b18104f4c15", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6ccce10651c182120275eee848b87b18104f4c15", "message": "Merged and removed thread silliness in SpanCounter", "committedDate": "2020-02-21T15:48:13Z", "type": "commit"}, {"oid": "14d0edee97270a835a48f36b9fef5edd05e87987", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/14d0edee97270a835a48f36b9fef5edd05e87987", "message": "Change forEach -> each", "committedDate": "2020-02-21T17:17:04Z", "type": "commit"}, {"oid": "d274543500dd145f0210967cc9ad8f033485282e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d274543500dd145f0210967cc9ad8f033485282e", "message": "Removed README section about commercial exporters", "committedDate": "2020-02-21T17:38:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MTc2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/171#discussion_r382751765", "bodyText": "can you reduce moving things around in this PR? it will help with merge conflicts as i'm still merging from https://github.com/DataDog/dd-trace-java", "author": "trask", "createdAt": "2020-02-21T19:00:38Z", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java", "diffHunk": "@@ -638,4 +595,31 @@ public static Config get(final Properties properties) {\n       return new Config(properties, INSTANCE);\n     }\n   }\n+\n+  public boolean isIntegrationEnabled(\n+      final SortedSet<String> integrationNames, final boolean defaultEnabled) {\n+    return integrationEnabled(integrationNames, defaultEnabled);\n+  }\n+\n+  private Set<Integer> getIntegerRangeSettingFromEnvironment(\n+      final String name, final Set<Integer> defaultValue) {\n+    final String value = getSettingFromEnvironment(name, null);\n+    try {\n+      return value == null ? defaultValue : parseIntegerRangeSet(value, name);\n+    } catch (final NumberFormatException e) {\n+      log.warn(\"Invalid configuration for \" + name, e);\n+      return defaultValue;\n+    }\n+  }\n+\n+  private Set<Integer> getPropertyIntegerRangeValue(\n+      final Properties properties, final String name, final Set<Integer> defaultValue) {\n+    final String value = properties.getProperty(name);\n+    try {\n+      return value == null ? defaultValue : parseIntegerRangeSet(value, name);\n+    } catch (final NumberFormatException e) {\n+      log.warn(\"Invalid configuration for \" + name, e);\n+      return defaultValue;\n+    }\n+  }", "originalCommit": "d274543500dd145f0210967cc9ad8f033485282e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "60f21747387520d6f954add4ec36607b43266db1", "chunk": "diff --git a/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java b/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java\nindex e338a68950..895b426894 100644\n--- a/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java\n+++ b/agent-bootstrap/src/main/java/io/opentelemetry/auto/config/Config.java\n\n@@ -595,31 +634,4 @@ public class Config {\n       return new Config(properties, INSTANCE);\n     }\n   }\n-\n-  public boolean isIntegrationEnabled(\n-      final SortedSet<String> integrationNames, final boolean defaultEnabled) {\n-    return integrationEnabled(integrationNames, defaultEnabled);\n-  }\n-\n-  private Set<Integer> getIntegerRangeSettingFromEnvironment(\n-      final String name, final Set<Integer> defaultValue) {\n-    final String value = getSettingFromEnvironment(name, null);\n-    try {\n-      return value == null ? defaultValue : parseIntegerRangeSet(value, name);\n-    } catch (final NumberFormatException e) {\n-      log.warn(\"Invalid configuration for \" + name, e);\n-      return defaultValue;\n-    }\n-  }\n-\n-  private Set<Integer> getPropertyIntegerRangeValue(\n-      final Properties properties, final String name, final Set<Integer> defaultValue) {\n-    final String value = properties.getProperty(name);\n-    try {\n-      return value == null ? defaultValue : parseIntegerRangeSet(value, name);\n-    } catch (final NumberFormatException e) {\n-      log.warn(\"Invalid configuration for \" + name, e);\n-      return defaultValue;\n-    }\n-  }\n }\n"}}, {"oid": "89e97b3c2d71d81950f2e30c7f1b894296a49de6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/89e97b3c2d71d81950f2e30c7f1b894296a49de6", "message": "Merge branch 'master' into prydin-dynamic-jaeger", "committedDate": "2020-02-21T20:14:21Z", "type": "commit"}, {"oid": "fe63fc65d435b3779acafbdb9940b684d4ca8de3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fe63fc65d435b3779acafbdb9940b684d4ca8de3", "message": "Reduced number of changes to Config", "committedDate": "2020-02-21T20:30:07Z", "type": "commit"}, {"oid": "087752cb87e06255a2bd820643e2532dad9d69dd", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/087752cb87e06255a2bd820643e2532dad9d69dd", "message": "Merge branch 'prydin-dynamic-jaeger' of https://github.com/prydin/opentelemetry-auto-instr-java into prydin-dynamic-jaeger", "committedDate": "2020-02-21T20:30:30Z", "type": "commit"}, {"oid": "60f21747387520d6f954add4ec36607b43266db1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/60f21747387520d6f954add4ec36607b43266db1", "message": "Fixed field reordering issue", "committedDate": "2020-02-21T21:15:48Z", "type": "commit"}, {"oid": "df09a89f7f1347d2d53de758ceabad2ce24fa4e5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/df09a89f7f1347d2d53de758ceabad2ce24fa4e5", "message": "Removed references to dummy exporter", "committedDate": "2020-02-21T22:56:16Z", "type": "commit"}]}