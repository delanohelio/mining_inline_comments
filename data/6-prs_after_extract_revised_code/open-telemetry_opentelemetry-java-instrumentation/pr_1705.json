{"pr_number": 1705, "pr_title": "update SystemMetrics according to spec update", "pr_createdAt": "2020-11-20T03:46:08Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705", "timeline": [{"oid": "78bfefe6566c7a7d94af506303c5ffd7d1659611", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/78bfefe6566c7a7d94af506303c5ffd7d1659611", "message": "update SystemMetrics according to spec update\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-11-20T03:45:27Z", "type": "commit"}, {"oid": "4cb12a39d9b46dba43ca98547beaaa0ab8e123b7", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4cb12a39d9b46dba43ca98547beaaa0ab8e123b7", "message": "remove unused variable\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-11-20T03:47:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQwMjAzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527402034", "bodyText": "Should we create constants for all the labels?", "author": "anuraaga", "createdAt": "2020-11-20T05:14:02Z", "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -32,15 +31,15 @@ public static void registerObservers() {\n     meter\n         .longUpDownSumObserverBuilder(\"system.memory.usage\")\n         .setDescription(\"System memory usage\")\n-        .setUnit(\"bytes\")\n+        .setUnit(\"By\")\n         .build()\n         .setCallback(\n             new Callback<LongResult>() {\n               @Override\n               public void update(LongResult r) {\n                 GlobalMemory mem = hal.getMemory();\n-                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(TYPE_LABEL_KEY, \"used\"));\n-                r.observe(mem.getAvailable(), Labels.of(TYPE_LABEL_KEY, \"free\"));\n+                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(\"state\", \"used\"));", "originalCommit": "4cb12a39d9b46dba43ca98547beaaa0ab8e123b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQyNDgwNg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527424806", "bodyText": "updated for label keys", "author": "malafeev", "createdAt": "2020-11-20T05:44:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQwMjAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "12810974a6e79676961ca01b323950c5bcf77995", "chunk": "diff --git a/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java b/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java\nindex d98ce304f4..ed14c9efe0 100644\n--- a/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java\n+++ b/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java\n\n@@ -38,8 +41,8 @@ public class SystemMetrics {\n               @Override\n               public void update(LongResult r) {\n                 GlobalMemory mem = hal.getMemory();\n-                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(\"state\", \"used\"));\n-                r.observe(mem.getAvailable(), Labels.of(\"state\", \"free\"));\n+                r.observe(mem.getTotal() - mem.getAvailable(), Labels.of(STATE_LABEL_KEY, \"used\"));\n+                r.observe(mem.getAvailable(), Labels.of(STATE_LABEL_KEY, \"free\"));\n               }\n             });\n \n"}}, {"oid": "37506e497bbda3e55582e5bf16c32309e3f07b34", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/37506e497bbda3e55582e5bf16c32309e3f07b34", "message": "update test\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-11-20T05:38:08Z", "type": "commit"}, {"oid": "12810974a6e79676961ca01b323950c5bcf77995", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/12810974a6e79676961ca01b323950c5bcf77995", "message": "use constants for label keys\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-11-20T05:44:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzNjgxNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527436815", "bodyText": "Shouldn't we do something like private static final Labels STATE_USED = Labels.of(\"state\", \"used\")? That way we don't have to create a labels object every time we record a value (at least I think that's what's happening right now)", "author": "anuraaga", "createdAt": "2020-11-20T05:57:43Z", "path": "instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java", "diffHunk": "@@ -19,7 +19,9 @@\n \n /** System Metrics Utility. */\n public class SystemMetrics {\n-  private static final String TYPE_LABEL_KEY = \"type\";\n+  private static final String DEVICE_LABEL_KEY = \"device\";", "originalCommit": "12810974a6e79676961ca01b323950c5bcf77995", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0MTA3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527441073", "bodyText": "but it will not work for Labels.of(DEVICE_LABEL_KEY, device, DIRECTION_LABEL_KEY, \"transmit\")", "author": "malafeev", "createdAt": "2020-11-20T06:02:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzNjgxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0Mjc3NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1705#discussion_r527442775", "bodyText": "updated for state labels", "author": "malafeev", "createdAt": "2020-11-20T06:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzNjgxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "55d5f479ec8552448fd65a7c4c3b2c800d4dd83e", "chunk": "diff --git a/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java b/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java\nindex ed14c9efe0..47f31856c3 100644\n--- a/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java\n+++ b/instrumentation/oshi/library/src/main/java/io/opentelemetry/instrumentation/oshi/SystemMetrics.java\n\n@@ -21,7 +21,8 @@ import oshi.hardware.NetworkIF;\n public class SystemMetrics {\n   private static final String DEVICE_LABEL_KEY = \"device\";\n   private static final String DIRECTION_LABEL_KEY = \"direction\";\n-  private static final String STATE_LABEL_KEY = \"state\";\n+  private static final Labels LABEL_STATE_USED = Labels.of(\"state\", \"used\");\n+  private static final Labels LABEL_STATE_FREE = Labels.of(\"state\", \"free\");\n \n   private SystemMetrics() {}\n \n"}}, {"oid": "55d5f479ec8552448fd65a7c4c3b2c800d4dd83e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/55d5f479ec8552448fd65a7c4c3b2c800d4dd83e", "message": "update labels\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-11-20T06:03:14Z", "type": "commit"}]}