{"pr_number": 563, "pr_title": "Working against otel-java 0.6.0-SNAPSHOT", "pr_createdAt": "2020-06-23T10:58:33Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/563", "timeline": [{"oid": "d7dd259c10789c6147bf5208067abc77a853f7cb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d7dd259c10789c6147bf5208067abc77a853f7cb", "message": "Working against otel-java 0.6.0-SNAPSHOT", "committedDate": "2020-06-23T10:56:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MDA5Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/563#discussion_r444590097", "bodyText": "(in the future) this probably is better in common package, like you did for LabelsShader", "author": "trask", "createdAt": "2020-06-24T01:12:40Z", "path": "instrumentation/opentelemetry-api-beta/src/main/java/io/opentelemetry/auto/instrumentation/opentelemetryapi/trace/Bridging.java", "diffHunk": "@@ -100,17 +101,20 @@ public static SpanContext toUnshaded(final io.opentelemetry.trace.SpanContext sh\n     }\n   }\n \n-  public static Map<String, io.opentelemetry.common.AttributeValue> toShaded(\n-      final Map<String, AttributeValue> unshadedAttributes) {\n-    final Map<String, io.opentelemetry.common.AttributeValue> shadedAttributes = new HashMap<>();\n-    for (final Map.Entry<String, AttributeValue> entry : unshadedAttributes.entrySet()) {\n-      final AttributeValue value = entry.getValue();\n-      final io.opentelemetry.common.AttributeValue shadedValue = toShadedOrNull(value);\n-      if (shadedValue != null) {\n-        shadedAttributes.put(entry.getKey(), shadedValue);\n-      }\n-    }\n-    return shadedAttributes;\n+  public static io.opentelemetry.common.Attributes toShaded(final Attributes unshadedAttributes) {", "originalCommit": "d7dd259c10789c6147bf5208067abc77a853f7cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}