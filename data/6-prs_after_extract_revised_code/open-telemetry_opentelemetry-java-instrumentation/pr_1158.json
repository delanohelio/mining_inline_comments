{"pr_number": 1158, "pr_title": "mapping redis (jedis) connection net.peer attributes", "pr_createdAt": "2020-09-02T13:57:17Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482099437", "bodyText": "Please review the order of method. Before this change it was somewhat logical if you look at parameter types. Now it seems to me as more chaotic.", "author": "iNikem", "createdAt": "2020-09-02T14:10:19Z", "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,7 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n-\n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n-\n-  public static void setNetPeer(Span span, String peerName, String peerIp) {\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {", "originalCommit": "3a3dd2ca6acf9644ce1d2a786fc76c3eabb8c33c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MTM1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482171350", "bodyText": "Goal of my refactoring was to make it in order - main method (setting attrs) first, then delegates starting from the simplest one. But I can bring it back as it was, just confirm that you'd like it that way :)", "author": "kubawach", "createdAt": "2020-09-02T15:40:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MzkyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482193926", "bodyText": "I prefer the same order as with constructors: shorter before, longer after. If A delegates to B, then A is before B.", "author": "iNikem", "createdAt": "2020-09-02T16:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwMDAyNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482300024", "bodyText": "Changed as suggested :)", "author": "kubawach", "createdAt": "2020-09-02T18:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5OTQzNw=="}], "type": "inlineReview", "revised_code": {"commit": "51bf7a10cd7010d387262540f996556098694b75", "chunk": "diff --git a/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java b/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java\nindex 469648b3c7..d126bbd448 100644\n--- a/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java\n+++ b/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java\n\n@@ -27,6 +27,9 @@ public final class NetPeerUtils {\n   private NetPeerUtils() {}\n \n   public static void setNetPeer(Span span, String peerName, String peerIp, int port) {\n+\n+    System.out.println(\"NAME: \"+peerName+\", IP: \"+peerIp+\", PORT: \"+port);\n+\n     if (peerName != null && !peerName.equals(peerIp)) {\n       SemanticAttributes.NET_PEER_NAME.set(span, peerName);\n     }\n"}}, {"oid": "51bf7a10cd7010d387262540f996556098694b75", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/51bf7a10cd7010d387262540f996556098694b75", "message": "mapping redis (jedis) connection net.peer properties", "committedDate": "2020-09-02T15:38:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5NTYxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482195610", "bodyText": "Don't forget to remove :)", "author": "iNikem", "createdAt": "2020-09-02T16:16:00Z", "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java", "diffHunk": "@@ -26,24 +26,10 @@\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n-    if (remoteConnection != null) {\n-      InetAddress remoteAddress = remoteConnection.getAddress();\n-      if (remoteAddress != null) {\n-        setNetPeer(span, remoteAddress);\n-      } else {\n-        // Failed DNS lookup, the host string is the name.\n-        setNetPeer(span, remoteConnection.getHostString(), null);\n-      }\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), remoteConnection.getPort());\n-    }\n-  }\n+  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {\n \n-  public static void setNetPeer(Span span, InetAddress remoteAddress) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress());\n-  }\n+    System.out.println(\"NAME: \"+peerName+\", IP: \"+peerIp+\", PORT: \"+port);", "originalCommit": "51bf7a10cd7010d387262540f996556098694b75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5NjA2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1158#discussion_r482296060", "bodyText": "You didn't see anything! ;-)", "author": "kubawach", "createdAt": "2020-09-02T18:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5NTYxMA=="}], "type": "inlineReview", "revised_code": {"commit": "35eb17445713d6667d230e3c670fd0233ecdf2b0", "chunk": "diff --git a/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java b/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java\nindex d126bbd448..762a1f2e95 100644\n--- a/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java\n+++ b/instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/utils/NetPeerUtils.java\n\n@@ -26,36 +26,6 @@ public final class NetPeerUtils {\n \n   private NetPeerUtils() {}\n \n-  public static void setNetPeer(Span span, String peerName, String peerIp, int port) {\n-\n-    System.out.println(\"NAME: \"+peerName+\", IP: \"+peerIp+\", PORT: \"+port);\n-\n-    if (peerName != null && !peerName.equals(peerIp)) {\n-      SemanticAttributes.NET_PEER_NAME.set(span, peerName);\n-    }\n-    if (peerIp != null) {\n-      SemanticAttributes.NET_PEER_IP.set(span, peerIp);\n-    }\n-    String peerService = mapToPeer(peerName);\n-    if (peerService == null) {\n-      peerService = mapToPeer(peerIp);\n-    }\n-    if (peerService != null) {\n-      SemanticAttributes.PEER_SERVICE.set(span, peerService);\n-    }\n-    if (port > 0) {\n-      span.setAttribute(SemanticAttributes.NET_PEER_PORT.key(), port);\n-    }\n-  }\n-\n-  public static void setNetPeer(Span span, String peerName, String peerIp) {\n-    setNetPeer(span, peerName, peerIp, -1);\n-  }\n-\n-  public static void setNetPeer(Span span, InetAddress remoteAddress, int port) {\n-    setNetPeer(span, remoteAddress.getHostName(), remoteAddress.getHostAddress(), port);\n-  }\n-\n   public static void setNetPeer(Span span, InetSocketAddress remoteConnection) {\n     if (remoteConnection != null) {\n       InetAddress remoteAddress = remoteConnection.getAddress();\n"}}, {"oid": "35eb17445713d6667d230e3c670fd0233ecdf2b0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/35eb17445713d6667d230e3c670fd0233ecdf2b0", "message": "mapping redis (jedis) connection net.peer properties", "committedDate": "2020-09-02T18:46:53Z", "type": "commit"}, {"oid": "35eb17445713d6667d230e3c670fd0233ecdf2b0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/35eb17445713d6667d230e3c670fd0233ecdf2b0", "message": "mapping redis (jedis) connection net.peer properties", "committedDate": "2020-09-02T18:46:53Z", "type": "forcePushed"}]}