{"pr_number": 1784, "pr_title": "Prefix custom attributes with instrumentation name", "pr_createdAt": "2020-11-27T20:46:45Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1784", "timeline": [{"oid": "567769a51e5619f4c82afc50080ba1d77fc16e60", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/567769a51e5619f4c82afc50080ba1d77fc16e60", "message": "Prefix custom attributes with instrumentation name", "committedDate": "2020-11-27T20:43:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTkwOTQ0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1784#discussion_r531909448", "bodyText": "The aws changes will be very breaking for us in the collector. I need to get back to my spec PR for these... Do intend to change these, but need to change the collector handling in a backwards compatible way first.", "author": "anuraaga", "createdAt": "2020-11-28T05:48:35Z", "path": "instrumentation/aws-sdk/aws-sdk-2.2/library/src/main/java/io/opentelemetry/instrumentation/awssdk/v2_2/TracingExecutionInterceptor.java", "diffHunk": "@@ -137,9 +137,9 @@ private void decorateWithExAttributesData(Span span, ExecutionAttributes attribu\n     String awsServiceName = attributes.getAttribute(SdkExecutionAttribute.SERVICE_NAME);\n     String awsOperation = attributes.getAttribute(SdkExecutionAttribute.OPERATION_NAME);\n \n-    span.setAttribute(\"aws.agent\", COMPONENT_NAME);\n-    span.setAttribute(\"aws.service\", awsServiceName);\n-    span.setAttribute(\"aws.operation\", awsOperation);\n+    span.setAttribute(\"aws-sdk.agent\", COMPONENT_NAME);", "originalCommit": "567769a51e5619f4c82afc50080ba1d77fc16e60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE1NDgzMg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1784#discussion_r532154832", "bodyText": "I reverted the aws attribute name changes", "author": "trask", "createdAt": "2020-11-29T04:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTkwOTQ0OA=="}], "type": "inlineReview", "revised_code": {"commit": "361f05be8b686380cd996d3c11e892cc4a3e7235", "chunk": "diff --git a/instrumentation/aws-sdk/aws-sdk-2.2/library/src/main/java/io/opentelemetry/instrumentation/awssdk/v2_2/TracingExecutionInterceptor.java b/instrumentation/aws-sdk/aws-sdk-2.2/library/src/main/java/io/opentelemetry/instrumentation/awssdk/v2_2/TracingExecutionInterceptor.java\nindex cf2b519b00..ea27ba0278 100644\n--- a/instrumentation/aws-sdk/aws-sdk-2.2/library/src/main/java/io/opentelemetry/instrumentation/awssdk/v2_2/TracingExecutionInterceptor.java\n+++ b/instrumentation/aws-sdk/aws-sdk-2.2/library/src/main/java/io/opentelemetry/instrumentation/awssdk/v2_2/TracingExecutionInterceptor.java\n\n@@ -137,9 +137,9 @@ final class TracingExecutionInterceptor implements ExecutionInterceptor {\n     String awsServiceName = attributes.getAttribute(SdkExecutionAttribute.SERVICE_NAME);\n     String awsOperation = attributes.getAttribute(SdkExecutionAttribute.OPERATION_NAME);\n \n-    span.setAttribute(\"aws-sdk.agent\", COMPONENT_NAME);\n-    span.setAttribute(\"aws-sdk.service\", awsServiceName);\n-    span.setAttribute(\"aws-sdk.operation\", awsOperation);\n+    span.setAttribute(\"aws.agent\", COMPONENT_NAME);\n+    span.setAttribute(\"aws.service\", awsServiceName);\n+    span.setAttribute(\"aws.operation\", awsOperation);\n   }\n \n   @Override\n"}}, {"oid": "361f05be8b686380cd996d3c11e892cc4a3e7235", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/361f05be8b686380cd996d3c11e892cc4a3e7235", "message": "Revert change to aws-sdk attributes", "committedDate": "2020-11-29T04:42:43Z", "type": "commit"}, {"oid": "49684831d2497921e69fbd19dbd12d338949ec60", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/49684831d2497921e69fbd19dbd12d338949ec60", "message": "Revert change to aws-sdk attributes", "committedDate": "2020-11-29T04:45:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ5MjI3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1784#discussion_r532492273", "bodyText": "What do you think about using SemanticAttributes.MESSAGING_KAFKA_PARTITION for this one?", "author": "mateuszrzeszutek", "createdAt": "2020-11-30T10:28:56Z", "path": "instrumentation/apache-camel-2.20/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java", "diffHunk": "@@ -61,22 +61,22 @@ public void pre(Span span, Exchange exchange, Endpoint endpoint, CamelDirection\n \n     String partition = getValue(exchange, PARTITION, Integer.class);\n     if (partition != null) {\n-      span.setAttribute(\"partition\", partition);\n+      span.setAttribute(\"apache-camel.kafka.partition\", partition);", "originalCommit": "49684831d2497921e69fbd19dbd12d338949ec60", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba95c389846b7ee5d8397d96fbe289b95d1a69a5", "chunk": "diff --git a/instrumentation/apache-camel-2.20/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java b/instrumentation/apache-camel-2.20/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java\nsimilarity index 95%\nrename from instrumentation/apache-camel-2.20/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java\nrename to instrumentation/apache-camel-2.20/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java\nindex 491834b2a9..7a4ef59c21 100644\n--- a/instrumentation/apache-camel-2.20/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java\n+++ b/instrumentation/apache-camel-2.20/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/apachecamel/decorators/KafkaSpanDecorator.java\n\n@@ -59,9 +59,9 @@ class KafkaSpanDecorator extends MessagingSpanDecorator {\n     span.setAttribute(SemanticAttributes.MESSAGING_OPERATION, \"process\");\n     span.setAttribute(SemanticAttributes.MESSAGING_DESTINATION_KIND, \"topic\");\n \n-    String partition = getValue(exchange, PARTITION, Integer.class);\n+    Integer partition = exchange.getIn().getHeader(PARTITION, Integer.class);\n     if (partition != null) {\n-      span.setAttribute(\"apache-camel.kafka.partition\", partition);\n+      span.setAttribute(SemanticAttributes.MESSAGING_KAFKA_PARTITION, partition);\n     }\n \n     String partitionKey = (String) exchange.getIn().getHeader(PARTITION_KEY);\n"}}, {"oid": "93b97d069cbf45bfa9af0bb297b68d1a85406ca7", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/93b97d069cbf45bfa9af0bb297b68d1a85406ca7", "message": "Merge remote-tracking branch 'upstream/master' into instrumentation-specific-attributes", "committedDate": "2020-12-03T21:44:42Z", "type": "commit"}, {"oid": "ba95c389846b7ee5d8397d96fbe289b95d1a69a5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ba95c389846b7ee5d8397d96fbe289b95d1a69a5", "message": "Use messaging.kafka.partition in apache-camel", "committedDate": "2020-12-03T21:48:26Z", "type": "commit"}, {"oid": "f5a4f85436d0d8ed3b73c2fd88c82c7fa785d7ca", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f5a4f85436d0d8ed3b73c2fd88c82c7fa785d7ca", "message": "Update tests", "committedDate": "2020-12-03T22:47:44Z", "type": "commit"}, {"oid": "1d6cbca76566afce637b02a5304255ab3d989ba5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1d6cbca76566afce637b02a5304255ab3d989ba5", "message": "Update apache-camel tests too", "committedDate": "2020-12-04T01:30:55Z", "type": "commit"}, {"oid": "89288fa60247975d5e9743719d938d9fb3447b2b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/89288fa60247975d5e9743719d938d9fb3447b2b", "message": "One more", "committedDate": "2020-12-04T04:34:44Z", "type": "commit"}]}