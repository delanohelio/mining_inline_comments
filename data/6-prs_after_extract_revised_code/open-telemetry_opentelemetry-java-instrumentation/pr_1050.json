{"pr_number": 1050, "pr_title": "Use Futures.addCallback() and other cleanup", "pr_createdAt": "2020-08-19T04:04:10Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1050", "timeline": [{"oid": "936c2c88fc0270d5a6c91171d7752e706c0057f6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/936c2c88fc0270d5a6c91171d7752e706c0057f6", "message": "Use Futures.addCallback() and other cleanup", "committedDate": "2020-08-19T04:01:21Z", "type": "commit"}, {"oid": "94f1a9e589d9ec747da4931e369d36cc985ea293", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/94f1a9e589d9ec747da4931e369d36cc985ea293", "message": "muzzle", "committedDate": "2020-08-19T04:29:02Z", "type": "commit"}, {"oid": "813c65781fe057189be7159662db266e912fde5a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/813c65781fe057189be7159662db266e912fde5a", "message": "Remove suppression", "committedDate": "2020-08-19T04:31:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1MDA5MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1050#discussion_r472750090", "bodyText": "\ud83c\udf89", "author": "anuraaga", "createdAt": "2020-08-19T06:20:54Z", "path": "instrumentation/cassandra/cassandra-3.0/src/main/java/io/opentelemetry/instrumentation/auto/cassandra/v3_0/TracingSession.java", "diffHunk": "@@ -240,19 +220,20 @@ private static String getQuery(Statement statement) {\n     return query == null ? \"\" : query;\n   }\n \n-  private static Runnable createListener(final Span span, final ResultSetFuture future) {\n-    return new Runnable() {\n-      @Override\n-      public void run() {\n-        try (Scope ignored = currentContextWith(span)) {\n-          ResultSet resultSet = future.get();\n-          TRACER.onResponse(span, resultSet.getExecutionInfo());\n-        } catch (InterruptedException | ExecutionException e) {\n-          TRACER.endExceptionally(span, e);\n-        } finally {\n-          TRACER.end(span);\n-        }\n-      }\n-    };\n+  private void addCallbackToEndSpan(ResultSetFuture future, final Span span) {\n+    Futures.addCallback(\n+        future,\n+        new FutureCallback<ResultSet>() {\n+          @Override\n+          public void onSuccess(ResultSet result) {\n+            TRACER.end(span, result.getExecutionInfo());\n+          }\n+\n+          @Override\n+          public void onFailure(Throwable t) {\n+            TRACER.endExceptionally(span, t);\n+          }\n+        },\n+        directExecutor());", "originalCommit": "813c65781fe057189be7159662db266e912fde5a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}