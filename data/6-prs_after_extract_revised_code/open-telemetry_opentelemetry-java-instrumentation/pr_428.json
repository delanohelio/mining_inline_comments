{"pr_number": 428, "pr_title": "Change names of servlet based server spans", "pr_createdAt": "2020-05-22T12:31:51Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428", "timeline": [{"oid": "58df836d2ac45ff583a95ed85a5d5f2661ec707a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/58df836d2ac45ff583a95ed85a5d5f2661ec707a", "message": "Add documentation describing non-obvious points of Servlet instrumentations", "committedDate": "2020-05-22T10:38:20Z", "type": "commit"}, {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6404e596174f7e529b4773805c6bf6ec49c075b5", "message": "Change names of servlet based server spans", "committedDate": "2020-05-22T13:22:44Z", "type": "commit"}, {"oid": "6404e596174f7e529b4773805c6bf6ec49c075b5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6404e596174f7e529b4773805c6bf6ec49c075b5", "message": "Change names of servlet based server spans", "committedDate": "2020-05-22T13:22:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMzYwOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429423609", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Please read README.md to understand what is this instrumentation.\n          \n          \n            \n            // Please read this instrumentation's README.md to understand what is this instrumentation.", "author": "trask", "createdAt": "2020-05-22T19:36:47Z", "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -31,13 +31,15 @@\n import io.opentelemetry.auto.instrumentation.api.SpanWithScope;\n import io.opentelemetry.auto.tooling.Instrumenter;\n import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.Span.Kind;\n import java.lang.reflect.Method;\n import java.util.Map;\n import net.bytebuddy.asm.Advice;\n import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n+// Please read README.md to understand what is this instrumentation.", "originalCommit": "6404e596174f7e529b4773805c6bf6ec49c075b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8be103b3af6531a0edb94f0257ff821aa5267aad", "chunk": "diff --git a/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java b/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\nindex 21eb845b18..bc3c8a151b 100644\n--- a/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\n+++ b/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\n\n@@ -39,7 +39,7 @@ import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-// Please read README.md to understand what is this instrumentation.\n+// Please read README.md of this subproject to understand what is this instrumentation.\n @AutoService(Instrumenter.class)\n public final class HttpServletInstrumentation extends Instrumenter.Default {\n   public HttpServletInstrumentation() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTIxMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429425213", "bodyText": "I think this should be an INTERNAL span, from https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md#spankind:\n\nINTERNAL Default value. Indicates that the span represents an internal operation within an application, as opposed to an operations with remote parents or children.", "author": "trask", "createdAt": "2020-05-22T19:41:00Z", "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -93,7 +95,11 @@ public static SpanWithScope start(@Advice.Origin final Method method) {\n       }\n \n       // Here we use the Method instead of \"this.class.name\" to distinguish calls to \"super\".\n-      final Span span = TRACER.spanBuilder(DECORATE.spanNameForMethod(method)).startSpan();\n+      final Span span =\n+          TRACER\n+              .spanBuilder(DECORATE.spanNameForMethod(method))\n+              .setSpanKind(Kind.SERVER)", "originalCommit": "6404e596174f7e529b4773805c6bf6ec49c075b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8be103b3af6531a0edb94f0257ff821aa5267aad", "chunk": "diff --git a/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java b/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\nindex 21eb845b18..bc3c8a151b 100644\n--- a/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\n+++ b/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\n\n@@ -98,7 +98,7 @@ public final class HttpServletInstrumentation extends Instrumenter.Default {\n       final Span span =\n           TRACER\n               .spanBuilder(DECORATE.spanNameForMethod(method))\n-              .setSpanKind(Kind.SERVER)\n+              .setSpanKind(Kind.INTERNAL)\n               .startSpan();\n       DECORATE.afterStart(span);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNTk5OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r429425998", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // TODO this logic should be moved to Servle2 specific Decorator\n          \n          \n            \n                // TODO this logic should be moved to Servlet2 specific Decorator", "author": "trask", "createdAt": "2020-05-22T19:43:17Z", "path": "instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java", "diffHunk": "@@ -29,31 +29,35 @@\n import io.opentelemetry.auto.instrumentation.api.Tags;\n import io.opentelemetry.trace.Span;\n import io.opentelemetry.trace.Status;\n+import java.lang.reflect.Method;\n import java.security.Principal;\n import javax.servlet.ServletRequest;\n import javax.servlet.ServletResponse;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import net.bytebuddy.asm.Advice;\n-import net.bytebuddy.implementation.bytecode.assign.Assigner;\n \n public class Servlet2Advice {\n \n   @Advice.OnMethodEnter(suppress = Throwable.class)\n   public static SpanWithScope onEnter(\n       @Advice.This final Object servlet,\n+      @Advice.Origin final Method method,\n       @Advice.Argument(0) final ServletRequest request,\n-      @Advice.Argument(value = 1, typing = Assigner.Typing.DYNAMIC)\n-          final ServletResponse response) {\n+      @Advice.Argument(1) final ServletResponse response) {\n+    if (!(request instanceof HttpServletRequest)) {\n+      return null;\n+    }\n+\n     final boolean hasServletTrace = request.getAttribute(SPAN_ATTRIBUTE) instanceof Span;\n-    final boolean invalidRequest = !(request instanceof HttpServletRequest);\n-    if (invalidRequest || hasServletTrace) {\n+    if (hasServletTrace) {\n       // Tracing might already be applied by the FilterChain or a parent request (forward/include).\n       return null;\n     }\n \n     final HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n \n+    // TODO this logic should be moved to Servle2 specific Decorator", "originalCommit": "6404e596174f7e529b4773805c6bf6ec49c075b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8be103b3af6531a0edb94f0257ff821aa5267aad", "chunk": "diff --git a/instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java b/instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java\nindex 71e20b4e1c..d06683c8c6 100644\n--- a/instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java\n+++ b/instrumentation/servlet/request-2.3/src/main/java/io/opentelemetry/auto/instrumentation/servlet/v2_3/Servlet2Advice.java\n\n@@ -57,7 +57,7 @@ public class Servlet2Advice {\n \n     final HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n \n-    // TODO this logic should be moved to Servle2 specific Decorator\n+    // TODO this logic should be moved to Servlet2 specific Decorator\n     if (response instanceof HttpServletResponse) {\n       // For use by HttpServletResponseInstrumentation:\n       InstrumentationContext.get(HttpServletResponse.class, HttpServletRequest.class)\n"}}, {"oid": "8be103b3af6531a0edb94f0257ff821aa5267aad", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8be103b3af6531a0edb94f0257ff821aa5267aad", "message": "Polish", "committedDate": "2020-05-25T06:48:58Z", "type": "commit"}, {"oid": "bb9c06ac0b82161566cf71377b7e36e20a7ee59b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/bb9c06ac0b82161566cf71377b7e36e20a7ee59b", "message": "Merge remote-tracking branch 'upstream/master' into servlet-spans", "committedDate": "2020-05-25T06:49:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NzgxOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/428#discussion_r430057819", "bodyText": "this is the default\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          .setSpanKind(Kind.INTERNAL)", "author": "trask", "createdAt": "2020-05-25T19:44:18Z", "path": "instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "diffHunk": "@@ -98,7 +98,7 @@ public static SpanWithScope start(@Advice.Origin final Method method) {\n       final Span span =\n           TRACER\n               .spanBuilder(DECORATE.spanNameForMethod(method))\n-              .setSpanKind(Kind.SERVER)\n+              .setSpanKind(Kind.INTERNAL)", "originalCommit": "bb9c06ac0b82161566cf71377b7e36e20a7ee59b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43620e4907c5c1d003e3cafffe7c5b2fdb806681", "chunk": "diff --git a/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java b/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\nindex bc3c8a151b..72a95b65fa 100644\n--- a/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\n+++ b/instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java\n\n@@ -98,7 +98,6 @@ public final class HttpServletInstrumentation extends Instrumenter.Default {\n       final Span span =\n           TRACER\n               .spanBuilder(DECORATE.spanNameForMethod(method))\n-              .setSpanKind(Kind.INTERNAL)\n               .startSpan();\n       DECORATE.afterStart(span);\n \n"}}, {"oid": "43620e4907c5c1d003e3cafffe7c5b2fdb806681", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/43620e4907c5c1d003e3cafffe7c5b2fdb806681", "message": "Update instrumentation/servlet/src/main/java/io/opentelemetry/auto/instrumentation/servlet/http/HttpServletInstrumentation.java", "committedDate": "2020-05-25T19:48:19Z", "type": "commit"}]}