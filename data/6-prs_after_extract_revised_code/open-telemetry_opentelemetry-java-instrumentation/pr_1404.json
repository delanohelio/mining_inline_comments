{"pr_number": 1404, "pr_title": "fix finding SpanExporterFactory by exporterName with underscore e.g. \"otlp_span\"", "pr_createdAt": "2020-10-16T14:06:34Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404", "timeline": [{"oid": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3", "message": "#1401 fix finding SpanExporterFactory by exporterName with underscore e.g. \"otlp_span\"\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-10-16T14:05:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r506599152", "bodyText": "We need to fix that black magic exporter matching soon...\nCan you add the same fix to MetricExporterFactory and MetricServer methods?\nThanks!", "author": "mateuszrzeszutek", "createdAt": "2020-10-16T16:50:23Z", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -127,9 +127,8 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n       if (spanExporterFactory\n           .getClass()\n           .getSimpleName()\n-          .replace(\"_\", \"\")\n           .toLowerCase()\n-          .startsWith(exporterName.toLowerCase())) {\n+          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {", "originalCommit": "10c5f8c4f2cc8e85b5a25656759773c0bbc14bb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY0NjQ5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r506646495", "bodyText": "can we make it so that otlpspan does not work? I think better to be strict about only supporting the values in the spec https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/sdk-environment-variables.md#exporter-selection", "author": "trask", "createdAt": "2020-10-16T18:15:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0MTU0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r507741540", "bodyText": "done", "author": "malafeev", "createdAt": "2020-10-19T13:22:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NTY3Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r507985676", "bodyText": "i think otlpspan will still work with latest change?", "author": "trask", "createdAt": "2020-10-19T18:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1MTg4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r508151880", "bodyText": "@trask, yes, otlpspan still works. If I will check for strict list of supported values then how user will be able to specify custom exporter?", "author": "malafeev", "createdAt": "2020-10-20T01:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE5Njk4NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1404#discussion_r508196985", "bodyText": "ok, makes sense, we can tackle this later in #1287", "author": "trask", "createdAt": "2020-10-20T04:07:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5OTE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "39f00d7f0380fb5b87ef3e872e134248b34cae74", "chunk": "diff --git a/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java b/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java\nindex 6d514dd895..bd6bcd6a04 100644\n--- a/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java\n+++ b/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java\n\n@@ -128,13 +126,17 @@ public class TracerInstaller {\n           .getClass()\n           .getSimpleName()\n           .toLowerCase()\n-          .startsWith(exporterName.replace(\"_\", \"\").toLowerCase())) {\n+          .startsWith(exporterName(exporterName).toLowerCase())) {\n         return spanExporterFactory;\n       }\n     }\n     return null;\n   }\n \n+  private static String exporterName(String exporterName) {\n+    return exporterName.replace(\"otlp_span\", \"otlpspan\").replace(\"otlp_metric\", \"otlpmetric\");\n+  }\n+\n   private static synchronized void installExportersFromJar(String exporterJar, Properties config) {\n     URL url;\n     try {\n"}}, {"oid": "39f00d7f0380fb5b87ef3e872e134248b34cae74", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/39f00d7f0380fb5b87ef3e872e134248b34cae74", "message": "#1401 change exporterName of \"otlp_span\" and \"otlp_metric\" only\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-10-19T13:22:18Z", "type": "commit"}, {"oid": "b09c4c105fcad57923c44fb97bfaa20c8cf20016", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b09c4c105fcad57923c44fb97bfaa20c8cf20016", "message": "Merge branch 'master' into fix-exporter-name-search", "committedDate": "2020-10-19T13:35:24Z", "type": "commit"}]}