{"pr_number": 481, "pr_title": "Merge changes from dd-trace-java 0.54.0", "pr_createdAt": "2020-06-09T05:47:33Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/481", "timeline": [{"oid": "642ec4b92bb7ee0991980b5e5f0ab8bd4c9b31a3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/642ec4b92bb7ee0991980b5e5f0ab8bd4c9b31a3", "message": "Use ClassValue to store ThreadLocal call depth (DataDog/dd-trace-java#1528)", "committedDate": "2020-06-09T20:21:17Z", "type": "forcePushed"}, {"oid": "cd547a961318920d54ac2bc9a595336ea3ece0d6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/cd547a961318920d54ac2bc9a595336ea3ece0d6", "message": "Use ClassValue to store ThreadLocal call depth (DataDog/dd-trace-java#1528)", "committedDate": "2020-06-10T22:12:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYxNTY2Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/481#discussion_r437615662", "bodyText": "Why is this needed? I think this deserves an explanation", "author": "iNikem", "createdAt": "2020-06-09T17:56:47Z", "path": "instrumentation/rabbitmq-amqp-2.7/src/main/java/io/opentelemetry/auto/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java", "diffHunk": "@@ -90,14 +92,24 @@ public void handleDelivery(\n         spanBuilder.setNoParent();\n       }\n \n+      final long startTimeMillis = System.currentTimeMillis();\n       span =\n           spanBuilder\n               .setAttribute(\"message.size\", body == null ? 0 : body.length)\n               .setAttribute(\"span.origin.type\", delegate.getClass().getName())\n+              .setStartTimestamp(TimeUnit.MILLISECONDS.toNanos(startTimeMillis))", "originalCommit": "97b74ab8af2d89c33f4db8e6e9cf6483f0153635", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1ODk2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/481#discussion_r438558960", "bodyText": "we re-use the span start time below, but there's no way to get the start time back from the span after we create it", "author": "trask", "createdAt": "2020-06-11T05:58:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYxNTY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f2bf50684ad9e2fa374e082c4acc1db973787593", "chunk": "diff --git a/instrumentation/rabbitmq-amqp-2.7/src/main/java/io/opentelemetry/auto/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java b/instrumentation/rabbitmq-amqp-2.7/src/main/java/io/opentelemetry/auto/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java\nindex b313b3d767..6f4b86a0ec 100644\n--- a/instrumentation/rabbitmq-amqp-2.7/src/main/java/io/opentelemetry/auto/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java\n+++ b/instrumentation/rabbitmq-amqp-2.7/src/main/java/io/opentelemetry/auto/instrumentation/rabbitmq/amqp/TracedDelegatingConsumer.java\n\n@@ -92,24 +90,14 @@ public class TracedDelegatingConsumer implements Consumer {\n         spanBuilder.setNoParent();\n       }\n \n-      final long startTimeMillis = System.currentTimeMillis();\n       span =\n           spanBuilder\n               .setAttribute(\"message.size\", body == null ? 0 : body.length)\n               .setAttribute(\"span.origin.type\", delegate.getClass().getName())\n-              .setStartTimestamp(TimeUnit.MILLISECONDS.toNanos(startTimeMillis))\n               .startSpan();\n       DECORATE.afterStart(span);\n       DECORATE.onDeliver(span, envelope);\n \n-      if (properties.getTimestamp() != null) {\n-        // this will be set if the sender sets the timestamp,\n-        // or if a plugin is installed on the rabbitmq broker\n-        final long produceTime = properties.getTimestamp().getTime();\n-        final long consumeTime = NANOSECONDS.toMillis(startTimeMillis);\n-        span.setAttribute(\"record.queue_time_ms\", Math.max(0L, consumeTime - produceTime));\n-      }\n-\n       scope = currentContextWith(span);\n \n     } catch (final Exception e) {\n"}}, {"oid": "f2bf50684ad9e2fa374e082c4acc1db973787593", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f2bf50684ad9e2fa374e082c4acc1db973787593", "message": "Use Retry.Mode.SETUP_FEATURE_CLEANUP to improve Elasticsearch test flakiness (DataDog/dd-trace-java#1494)", "committedDate": "2020-06-11T17:12:11Z", "type": "commit"}, {"oid": "1b29184e7c3359a1902f31bac2dded52e4c3a801", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1b29184e7c3359a1902f31bac2dded52e4c3a801", "message": "Make rootDir usage consistent (DataDog/dd-trace-java#1518)", "committedDate": "2020-06-11T17:14:02Z", "type": "commit"}, {"oid": "c61034c945c5b5104183806ef4915f50bc0f8715", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c61034c945c5b5104183806ef4915f50bc0f8715", "message": "Fix elasticsearch test flakiness (DataDog/dd-trace-java#1513)", "committedDate": "2020-06-11T17:14:07Z", "type": "commit"}, {"oid": "13264b3560dc1526708309c0b447aab4abc0df3d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/13264b3560dc1526708309c0b447aab4abc0df3d", "message": "Add record.queue_time_ms to rabbitmq consumer span tags (DataDog/dd-trace-java#1522)", "committedDate": "2020-06-11T17:14:07Z", "type": "commit"}, {"oid": "f200b4cbed52311fa4314fb94eb5e53548a8ade5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f200b4cbed52311fa4314fb94eb5e53548a8ade5", "message": "Ignore proxool proxy classes (DataDog/dd-trace-java#1524)", "committedDate": "2020-06-11T17:14:07Z", "type": "commit"}, {"oid": "badfbb8b1897a64b5430dedfbb9da88ca91ff160", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/badfbb8b1897a64b5430dedfbb9da88ca91ff160", "message": "Change error bound so test should almost never fail (DataDog/dd-trace-java#1525)", "committedDate": "2020-06-11T17:14:07Z", "type": "commit"}, {"oid": "57c0aed1fa2e2f7dcf667d01034854892408123c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/57c0aed1fa2e2f7dcf667d01034854892408123c", "message": "Use ClassValue to store ThreadLocal call depth (DataDog/dd-trace-java#1528)", "committedDate": "2020-06-11T17:14:07Z", "type": "commit"}, {"oid": "57c0aed1fa2e2f7dcf667d01034854892408123c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/57c0aed1fa2e2f7dcf667d01034854892408123c", "message": "Use ClassValue to store ThreadLocal call depth (DataDog/dd-trace-java#1528)", "committedDate": "2020-06-11T17:14:07Z", "type": "forcePushed"}]}