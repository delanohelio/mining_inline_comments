{"pr_number": 1082, "pr_title": "Support RESTeasy 4.0 version in unit tests", "pr_createdAt": "2020-08-21T16:21:46Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1082", "timeline": [{"oid": "aa118dbc2f9f32e41ca119e5f296ff3bfee7f61e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/aa118dbc2f9f32e41ca119e5f296ff3bfee7f61e", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-08-24T10:51:56Z", "type": "forcePushed"}, {"oid": "67018d6bb7678c3b5a7f2293cddc8a369e337c20", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/67018d6bb7678c3b5a7f2293cddc8a369e337c20", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-08-24T11:45:29Z", "type": "forcePushed"}, {"oid": "496c5ae842093945f953de26cd656cc2a5829884", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/496c5ae842093945f953de26cd656cc2a5829884", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-01T08:39:30Z", "type": "forcePushed"}, {"oid": "6bd67fbec2b4e9f76bbb1c1c0cd712ce35b636bb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6bd67fbec2b4e9f76bbb1c1c0cd712ce35b636bb", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-04T11:34:11Z", "type": "forcePushed"}, {"oid": "c307d03819ec3cd2474b96509714e7c027a81898", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c307d03819ec3cd2474b96509714e7c027a81898", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-07T13:06:31Z", "type": "forcePushed"}, {"oid": "94f5a0fe5a076309fd2917d98f1503fa24136e9e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/94f5a0fe5a076309fd2917d98f1503fa24136e9e", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-09T09:18:11Z", "type": "forcePushed"}, {"oid": "ea9d27754084e81f7ff0acd734e10ae878e568a4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ea9d27754084e81f7ff0acd734e10ae878e568a4", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-09T09:20:35Z", "type": "forcePushed"}, {"oid": "060364987b343eeab3845cf93a374ee42bb4629b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/060364987b343eeab3845cf93a374ee42bb4629b", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-09T09:26:05Z", "type": "forcePushed"}, {"oid": "068ccae76dd0e45792d3260a75a078a93f89cbba", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/068ccae76dd0e45792d3260a75a078a93f89cbba", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-09T12:33:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkzNDcxNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1082#discussion_r485934715", "bodyText": "why checking currentSpan == serverSpan?", "author": "trask", "createdAt": "2020-09-09T21:34:16Z", "path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-common/src/main/java/io/opentelemetry/instrumentation/auto/jaxrs/v2_0/AbstractRequestContextInstrumentation.java", "diffHunk": "@@ -74,39 +73,35 @@ public AbstractRequestContextInstrumentation() {\n   }\n \n   public static class RequestFilterHelper {\n-    public static SpanWithScope createOrUpdateAbortSpan(\n+    public static Span createOrUpdateAbortSpan(\n         ContainerRequestContext context, Class<?> resourceClass, Method method) {\n \n       if (method != null && resourceClass != null) {\n         context.setProperty(JaxRsAnnotationsTracer.ABORT_HANDLED, true);\n-        Span parent = BaseTracer.getCurrentServerSpan();\n-        Span span = TRACER.getCurrentSpan();\n+        Span serverSpan = BaseTracer.getCurrentServerSpan();\n+        Span currentSpan = TRACER.getCurrentSpan();\n \n-        if (span == null) {\n-          span = TRACER.startSpan(resourceClass, method);\n-          return new SpanWithScope(span, currentContextWith(span));\n+        if (currentSpan == null || currentSpan == serverSpan) {", "originalCommit": "068ccae76dd0e45792d3260a75a078a93f89cbba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE4MjYwNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1082#discussion_r486182605", "bodyText": "I should have added a comment here -- will fix it.\nI've found out that DefaultRequestContextInstrumentation and implementation-specific RequestContextInstrumentations (e.g. Resteasy31RequestContextInstrumentation) worked differently when executed in different order.\n\nIn case of default -> impl order: the default instrumentation has always created a span, but without adding the ABORT_HANDLED marker, so the impl instrumentation also ran; span != null so only the span names were updated.\nIn case of impl -> default: span was also not null (because the servlet span would be the current span), so no new span was started here; ABORT_HANDLED marker was added though. The default instrumentation did not run; in this case we were missing one span.", "author": "mateuszrzeszutek", "createdAt": "2020-09-10T09:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkzNDcxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "ef99c2bd596f67e8755d1bd9b9c6fbaf2bcedd61", "chunk": "diff --git a/instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-common/src/main/java/io/opentelemetry/instrumentation/auto/jaxrs/v2_0/AbstractRequestContextInstrumentation.java b/instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-common/src/main/java/io/opentelemetry/instrumentation/auto/jaxrs/v2_0/AbstractRequestContextInstrumentation.java\nindex b31ed7c6c2..534419f24b 100644\n--- a/instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-common/src/main/java/io/opentelemetry/instrumentation/auto/jaxrs/v2_0/AbstractRequestContextInstrumentation.java\n+++ b/instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-common/src/main/java/io/opentelemetry/instrumentation/auto/jaxrs/v2_0/AbstractRequestContextInstrumentation.java\n\n@@ -81,6 +81,10 @@ public abstract class AbstractRequestContextInstrumentation extends Instrumenter\n         Span serverSpan = BaseTracer.getCurrentServerSpan();\n         Span currentSpan = TRACER.getCurrentSpan();\n \n+        // if there's no current span or it's the same as the server (servlet) span we need to start\n+        // a JAX-RS one\n+        // in other case, DefaultRequestContextInstrumentation must have already run so it's enough\n+        // to just update the names\n         if (currentSpan == null || currentSpan == serverSpan) {\n           return TRACER.startSpan(resourceClass, method);\n         } else {\n"}}, {"oid": "c67e466e70cad3a136f9e09b282bbe034f0ab108", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c67e466e70cad3a136f9e09b282bbe034f0ab108", "message": "Support RESTeasy 4.0 version in unit tests\n\n* Split jaxrs-2.0 into jaxrs-2.0-common and jaxrs-2.0-testing (similar to e.g. play)\n* Support newest RESTEasy version in unit tests", "committedDate": "2020-09-10T09:15:11Z", "type": "commit"}, {"oid": "6639baeed1c064d5dc72d0cb66e197ba5d5d5ef8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6639baeed1c064d5dc72d0cb66e197ba5d5d5ef8", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-09-10T09:15:11Z", "type": "commit"}, {"oid": "6639baeed1c064d5dc72d0cb66e197ba5d5d5ef8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6639baeed1c064d5dc72d0cb66e197ba5d5d5ef8", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-09-10T09:15:11Z", "type": "forcePushed"}, {"oid": "ef99c2bd596f67e8755d1bd9b9c6fbaf2bcedd61", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ef99c2bd596f67e8755d1bd9b9c6fbaf2bcedd61", "message": "Support RESTeasy 4.0 version in unit tests - code review follow-up", "committedDate": "2020-09-10T09:20:41Z", "type": "commit"}]}