{"pr_number": 1482, "pr_title": "Fix net.peer.* setting for Cassandra 4.+", "pr_createdAt": "2020-10-26T08:58:18Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482", "timeline": [{"oid": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107", "message": "Fix net.peer.* setting for Cassandra 4.+", "committedDate": "2020-10-26T08:52:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r511870965", "bodyText": "I don't think it's related to this PR since we have many instrumentations with the same pattern - I often worry about blocking an event loop with a DNS lookup just to set a span attribute. I want (someone) to remove the spec's language encouraging a DNS lookup just to resolve an attribute.\nJust the word resolve makes it more obvious than Java where a seemingly normal getter has the chance to block and brought this point up for me :)", "author": "anuraaga", "createdAt": "2020-10-26T10:50:29Z", "path": "instrumentation/cassandra/cassandra-4.0/src/main/java/io/opentelemetry/javaagent/instrumentation/cassandra/v4_0/CassandraDatabaseClientTracer.java", "diffHunk": "@@ -47,8 +47,10 @@ protected InetSocketAddress peerAddress(CqlSession cqlSession) {\n   public void onResponse(Span span, ExecutionInfo executionInfo) {\n     Node coordinator = executionInfo.getCoordinator();\n     if (coordinator != null) {\n-      Optional<InetSocketAddress> address = coordinator.getBroadcastRpcAddress();\n-      address.ifPresent(inetSocketAddress -> NetPeerUtils.setNetPeer(span, inetSocketAddress));\n+      SocketAddress socketAddress = coordinator.getEndPoint().resolve();", "originalCommit": "0e940b67b070bfb47f5b8a26a5a35cb3a1dc1107", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkwMTkzMg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r511901932", "bodyText": "Good point. But this may be related to the general question of bringing performance considerations into semantic conventions...", "author": "iNikem", "createdAt": "2020-10-26T11:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMDM2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1482#discussion_r512200366", "bodyText": "I'd be interested if we force DNS resolution anywhere, I know we've tried to avoid that in the past.\nIn this case, I'm not sure why the method is named resolve(), at least the implementation I'm seeing when I look doesn't seem to resolve anything.", "author": "trask", "createdAt": "2020-10-26T19:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3MDk2NQ=="}], "type": "inlineReview", "revised_code": null}]}