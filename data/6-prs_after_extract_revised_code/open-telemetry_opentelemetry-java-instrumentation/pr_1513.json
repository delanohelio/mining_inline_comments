{"pr_number": 1513, "pr_title": "Add explicit names to metrics/trace SPI factories", "pr_createdAt": "2020-10-28T18:57:37Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1513", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwNjEyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1513#discussion_r513706126", "bodyText": "i think it's a little confusing why we support multiple names without a bit of explanation:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns names of metric servers supported by this factory.\n          \n          \n            \n               * Returns names of metric servers supported by this factory.\n          \n          \n            \n               *\n          \n          \n            \n               * <p>Multiple names are useful for enabling a pair of span and metric exporters using the same\n          \n          \n            \n               * name, while still having separate names for enabling them individually.", "author": "trask", "createdAt": "2020-10-28T19:28:01Z", "path": "javaagent-spi/src/main/java/io/opentelemetry/javaagent/spi/exporter/MetricServer.java", "diffHunk": "@@ -23,4 +24,11 @@\n    * @param config The configuration\n    */\n   void start(MetricProducer producer, Properties config);\n+\n+  /**\n+   * Returns names of metric servers supported by this factory.", "originalCommit": "338c562acd57c7535a7c65fe370e974be6463ea8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwNjkyMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1513#discussion_r513706923", "bodyText": "same as above\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Returns names of span exporters supported by this factory.\n          \n          \n            \n               * Returns names of span exporters supported by this factory.\n          \n          \n            \n               *\n          \n          \n            \n               * <p>Multiple names are useful for enabling a pair of span and metric exporters using the same\n          \n          \n            \n               * name, while still having separate names for enabling them individually.", "author": "trask", "createdAt": "2020-10-28T19:29:26Z", "path": "javaagent-spi/src/main/java/io/opentelemetry/javaagent/spi/exporter/SpanExporterFactory.java", "diffHunk": "@@ -21,4 +22,11 @@\n    * @return An implementation of a {@link SpanExporter}\n    */\n   SpanExporter fromConfig(Properties config);\n+\n+  /**\n+   * Returns names of span exporters supported by this factory.", "originalCommit": "338c562acd57c7535a7c65fe370e974be6463ea8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7b21768b6f21fc8566fc766beb5b82bce8668b6", "chunk": "diff --git a/javaagent-spi/src/main/java/io/opentelemetry/javaagent/spi/exporter/SpanExporterFactory.java b/javaagent-spi/src/main/java/io/opentelemetry/javaagent/spi/exporter/SpanExporterFactory.java\nindex 287f12325..febc78a7a 100644\n--- a/javaagent-spi/src/main/java/io/opentelemetry/javaagent/spi/exporter/SpanExporterFactory.java\n+++ b/javaagent-spi/src/main/java/io/opentelemetry/javaagent/spi/exporter/SpanExporterFactory.java\n\n@@ -26,6 +26,9 @@ public interface SpanExporterFactory {\n   /**\n    * Returns names of span exporters supported by this factory.\n    *\n+   * <p>Multiple names are useful for enabling a pair of span and metric exporters using the same\n+   * name, while still having separate names for enabling them individually.\n+   *\n    * @return The exporter names supported by this factory\n    */\n   Set<String> getNames();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0MzI2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1513#discussion_r513743260", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (spanExporterFactory.getNames().contains(exporterName)) return spanExporterFactory;\n          \n          \n            \n                  if (spanExporterFactory.getNames().contains(exporterName)) {\n          \n          \n            \n                    return spanExporterFactory;\n          \n          \n            \n                  }", "author": "iNikem", "createdAt": "2020-10-28T20:35:12Z", "path": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java", "diffHunk": "@@ -122,21 +114,11 @@ private static SpanExporterFactory findSpanExporterFactory(String exporterName)\n         ServiceLoader.load(SpanExporterFactory.class, TracerInstaller.class.getClassLoader());\n \n     for (SpanExporterFactory spanExporterFactory : serviceLoader) {\n-      if (spanExporterFactory\n-          .getClass()\n-          .getSimpleName()\n-          .toLowerCase()\n-          .startsWith(exporterName(exporterName).toLowerCase())) {\n-        return spanExporterFactory;\n-      }\n+      if (spanExporterFactory.getNames().contains(exporterName)) return spanExporterFactory;", "originalCommit": "338c562acd57c7535a7c65fe370e974be6463ea8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7b21768b6f21fc8566fc766beb5b82bce8668b6", "chunk": "diff --git a/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java b/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java\nindex 423d430ae..daae8a9bd 100644\n--- a/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java\n+++ b/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/TracerInstaller.java\n\n@@ -114,7 +114,9 @@ public class TracerInstaller {\n         ServiceLoader.load(SpanExporterFactory.class, TracerInstaller.class.getClassLoader());\n \n     for (SpanExporterFactory spanExporterFactory : serviceLoader) {\n-      if (spanExporterFactory.getNames().contains(exporterName)) return spanExporterFactory;\n+      if (spanExporterFactory.getNames().contains(exporterName)) {\n+        return spanExporterFactory;\n+      }\n     }\n     return null;\n   }\n"}}, {"oid": "b7b21768b6f21fc8566fc766beb5b82bce8668b6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b7b21768b6f21fc8566fc766beb5b82bce8668b6", "message": "Add explicit names to metrics/trace SPI factories\n\nSigned-off-by: Pavol Loffay <p.loffay@gmail.com>", "committedDate": "2020-10-29T07:18:33Z", "type": "commit"}, {"oid": "b7b21768b6f21fc8566fc766beb5b82bce8668b6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b7b21768b6f21fc8566fc766beb5b82bce8668b6", "message": "Add explicit names to metrics/trace SPI factories\n\nSigned-off-by: Pavol Loffay <p.loffay@gmail.com>", "committedDate": "2020-10-29T07:18:33Z", "type": "forcePushed"}, {"oid": "7b70c5a4142155eb3cce0122df4964317f6fe3ec", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7b70c5a4142155eb3cce0122df4964317f6fe3ec", "message": "Fix tests\n\nSigned-off-by: Pavol Loffay <p.loffay@gmail.com>", "committedDate": "2020-10-29T09:30:51Z", "type": "commit"}]}