{"pr_number": 1246, "pr_title": "Add traceId to logging exporter", "pr_createdAt": "2020-09-23T13:32:08Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246", "timeline": [{"oid": "333997ead01b0b555485e6d8ab3ac48810847891", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/333997ead01b0b555485e6d8ab3ac48810847891", "message": "Add traceId to logging exporter\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-23T13:02:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwODk2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493608966", "bodyText": "Use System.out.printf", "author": "iNikem", "createdAt": "2020-09-23T13:50:51Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));", "originalCommit": "333997ead01b0b555485e6d8ab3ac48810847891", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxODg1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493618857", "bodyText": "oh my bad thanks for the catch!", "author": "pavolloffay", "createdAt": "2020-09-23T14:02:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwODk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b81ed93ff72b5ba95feb04a843b57fd60f743b8f", "chunk": "diff --git a/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java b/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java\nindex 51064298f7..674477a293 100644\n--- a/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java\n+++ b/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java\n\n@@ -33,7 +33,9 @@ public class LoggingExporter implements SpanExporter {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n+      System.out.printf(\n+          String.format(\n+              \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n       span.getAttributes()\n           .forEach(\n               new KeyValueConsumer<String, AttributeValue>() {\n"}}, {"oid": "b81ed93ff72b5ba95feb04a843b57fd60f743b8f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b81ed93ff72b5ba95feb04a843b57fd60f743b8f", "message": "format\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-23T15:03:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczMzM0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493733343", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.printf(\n          \n          \n            \n                      String.format(\n          \n          \n            \n                          \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n          \n          \n            \n                  System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "author": "trask", "createdAt": "2020-09-23T16:35:21Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,9 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(String.format(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n+      System.out.printf(\n+          String.format(\n+              \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));", "originalCommit": "b81ed93ff72b5ba95feb04a843b57fd60f743b8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwOTk3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r493809971", "bodyText": "done", "author": "pavolloffay", "createdAt": "2020-09-23T18:42:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczMzM0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb", "chunk": "diff --git a/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java b/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java\nindex 674477a293..5c03468961 100644\n--- a/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java\n+++ b/javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java\n\n@@ -33,9 +33,7 @@ public class LoggingExporter implements SpanExporter {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.printf(\n-          String.format(\n-              \"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId()));\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());\n       span.getAttributes()\n           .forEach(\n               new KeyValueConsumer<String, AttributeValue>() {\n"}}, {"oid": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ddecc14a2385978777b7a1e7f1fbf04e7918bcdb", "message": "fix\n\nSigned-off-by: Pavol Loffay <ploffay@redhat.com>", "committedDate": "2020-09-23T18:41:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494045579", "bodyText": "printf is sloooow - can we switch back to appending?", "author": "anuraaga", "createdAt": "2020-09-24T05:23:37Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -33,7 +33,7 @@ public LoggingExporter(String prefix) {\n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n     for (SpanData span : list) {\n-      System.out.print(prefix + \" \" + span.getName() + \" \" + span.getSpanId() + \" \");\n+      System.out.printf(\"%s %s %s %s\", prefix, span.getName(), span.getTraceId(), span.getSpanId());", "originalCommit": "ddecc14a2385978777b7a1e7f1fbf04e7918bcdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTgwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494045807", "bodyText": "Also looks like we're missing space between span ID and attributes now probably good to have that (or maybe enclose attributes in {}", "author": "anuraaga", "createdAt": "2020-09-24T05:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NjMyMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494046320", "bodyText": "No objection to switching back to appending. Good catch on the missing space \ud83d\udc4d", "author": "trask", "createdAt": "2020-09-24T05:26:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MzA4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494063080", "bodyText": "@anuraaga Any numbers to back that claim? :) And is it important enough for us?", "author": "iNikem", "createdAt": "2020-09-24T06:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MTY0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494071646", "bodyText": "Have benchmarked similar now and again, generally 10-20x slower. The readability difference is small enough to get the free speed, and I always recommend people to just never use printf in Java, unless formatting numbers, since it's not worth the cognitive load of deciding between one or the other the performance difference is too great. So I'd consider it important for us.", "author": "anuraaga", "createdAt": "2020-09-24T06:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzMDU1NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1246#discussion_r494130555", "bodyText": "I will submit a PR to use the appending.\nWould it be better to use string builder", "author": "pavolloffay", "createdAt": "2020-09-24T08:25:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTU3OQ=="}], "type": "inlineReview", "revised_code": null}]}