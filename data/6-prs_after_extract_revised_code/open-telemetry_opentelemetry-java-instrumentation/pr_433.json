{"pr_number": 433, "pr_title": "Merge changes from dd-trace-java 0.52.0", "pr_createdAt": "2020-05-23T18:11:48Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433", "timeline": [{"oid": "a8b66fab2b3601a45ff17681b4a9306aa2164dbc", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a8b66fab2b3601a45ff17681b4a9306aa2164dbc", "message": "Disable CI cache for muzzle (DataDog/dd-trace-java#1479)", "committedDate": "2020-05-23T18:21:53Z", "type": "forcePushed"}, {"oid": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3", "message": "Disable CI cache for muzzle (DataDog/dd-trace-java#1479)", "committedDate": "2020-05-23T18:49:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDQ3Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600476", "bodyText": "Why? What happens otherwise?", "author": "iNikem", "createdAt": "2020-05-24T05:25:09Z", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java", "diffHunk": "@@ -28,6 +28,8 @@ private InstrumentationContext() {}\n    * <p>However, the implementation is actually provided by bytecode transformation for performance\n    * reasons.\n    *\n+   * <p>This method must only be called within an Advice class.", "originalCommit": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExOTc1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430119750", "bodyText": "added explanation", "author": "trask", "createdAt": "2020-05-26T01:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDQ3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a16b519176cc4f6d9ee6004a7f6fe405e1d554d4", "chunk": "diff --git a/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java b/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java\nindex bf87787b29..5fb45c02dd 100644\n--- a/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java\n+++ b/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/InstrumentationContext.java\n\n@@ -28,8 +28,6 @@ public class InstrumentationContext {\n    * <p>However, the implementation is actually provided by bytecode transformation for performance\n    * reasons.\n    *\n-   * <p>This method must only be called within an Advice class.\n-   *\n    * @param keyClass The key class context is attached to.\n    * @param contextClass The context class attached to the user class.\n    * @param <K> key class\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDUzMg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600532", "bodyText": "Seems unused?", "author": "iNikem", "createdAt": "2020-05-24T05:26:13Z", "path": "agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java", "diffHunk": "@@ -22,13 +22,20 @@\n import io.opentelemetry.trace.Status;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.util.regex.Pattern;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public abstract class HttpServerDecorator<REQUEST, CONNECTION, RESPONSE> extends ServerDecorator {\n   public static final String SPAN_ATTRIBUTE = \"io.opentelemetry.auto.span\";\n+  public static final String RESPONSE_ATTRIBUTE = \"io.opentelemetry.auto.response\";\n   public static final String DEFAULT_SPAN_NAME = \"HTTP request\";\n \n+  // Source: https://www.regextester.com/22\n+  private static final Pattern VALID_IPV4_ADDRESS =", "originalCommit": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExMTY2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430111665", "bodyText": "removed", "author": "trask", "createdAt": "2020-05-26T01:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDUzMg=="}], "type": "inlineReview", "revised_code": {"commit": "a16b519176cc4f6d9ee6004a7f6fe405e1d554d4", "chunk": "diff --git a/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java b/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java\nindex e48e53a08d..535c66b935 100644\n--- a/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java\n+++ b/agent-bootstrap/src/main/java/io/opentelemetry/auto/bootstrap/instrumentation/decorator/HttpServerDecorator.java\n\n@@ -22,20 +22,13 @@ import io.opentelemetry.trace.Span;\n import io.opentelemetry.trace.Status;\n import java.net.URI;\n import java.net.URISyntaxException;\n-import java.util.regex.Pattern;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public abstract class HttpServerDecorator<REQUEST, CONNECTION, RESPONSE> extends ServerDecorator {\n   public static final String SPAN_ATTRIBUTE = \"io.opentelemetry.auto.span\";\n-  public static final String RESPONSE_ATTRIBUTE = \"io.opentelemetry.auto.response\";\n   public static final String DEFAULT_SPAN_NAME = \"HTTP request\";\n \n-  // Source: https://www.regextester.com/22\n-  private static final Pattern VALID_IPV4_ADDRESS =\n-      Pattern.compile(\n-          \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\");\n-\n   protected abstract String method(REQUEST request);\n \n   protected abstract URI url(REQUEST request) throws URISyntaxException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDY2Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r429600662", "bodyText": "I don\u2019t think we need these ifs polluting the code", "author": "iNikem", "createdAt": "2020-05-24T05:29:20Z", "path": "agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java", "diffHunk": "@@ -142,12 +142,14 @@ public static HelperInjector forDynamicTypes(\n             helperModules.add(new WeakReference<>(javaModule.unwrap()));\n           }\n         } catch (final Exception e) {\n-          log.error(\n-              \"Error preparing helpers while processing {} for {}. Failed to inject helper classes into instance {}\",\n-              typeDescription,\n-              requestingName,\n-              classLoader,\n-              e);\n+          if (log.isErrorEnabled()) {", "originalCommit": "0bea2b6b239a97a73d6f48b4ce98aa621c3f77f3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExMjY5NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/433#discussion_r430112695", "bodyText": "Did you see DataDog/dd-trace-java#1466? I'm not opposed to it in this case for avoiding memory allocation.", "author": "trask", "createdAt": "2020-05-26T01:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwMDY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a16b519176cc4f6d9ee6004a7f6fe405e1d554d4", "chunk": "diff --git a/agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java b/agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java\nindex 806f713552..b760fbb149 100644\n--- a/agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java\n+++ b/agent-tooling/src/main/java/io/opentelemetry/auto/tooling/HelperInjector.java\n\n@@ -142,14 +142,12 @@ public class HelperInjector implements Transformer {\n             helperModules.add(new WeakReference<>(javaModule.unwrap()));\n           }\n         } catch (final Exception e) {\n-          if (log.isErrorEnabled()) {\n-            log.error(\n-                \"Error preparing helpers while processing {} for {}. Failed to inject helper classes into instance {}\",\n-                typeDescription,\n-                requestingName,\n-                classLoader,\n-                e);\n-          }\n+          log.error(\n+              \"Error preparing helpers while processing {} for {}. Failed to inject helper classes into instance {}\",\n+              typeDescription,\n+              requestingName,\n+              classLoader,\n+              e);\n           throw new RuntimeException(e);\n         }\n \n"}}, {"oid": "a16b519176cc4f6d9ee6004a7f6fe405e1d554d4", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/a16b519176cc4f6d9ee6004a7f6fe405e1d554d4", "message": "Update gradle to 6.4 (DataDog/dd-trace-java#1443)", "committedDate": "2020-05-26T18:54:55Z", "type": "commit"}, {"oid": "3bb17e1c3cc0b2db991b3c5d44ee646a01ca90fc", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3bb17e1c3cc0b2db991b3c5d44ee646a01ca90fc", "message": "Remove deprecated usage from internal instrumentation (DataDog/dd-trace-java#1441)", "committedDate": "2020-05-26T18:54:55Z", "type": "commit"}, {"oid": "f74d249a2ef3c24c432702afe1700db37c95a916", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f74d249a2ef3c24c432702afe1700db37c95a916", "message": "Migrate lettuce instrumentation away from deprecated finishSpanOnClose (DataDog/dd-trace-java#1445)", "committedDate": "2020-05-26T18:54:55Z", "type": "commit"}, {"oid": "c58d25945940ef3403c1fca29ca33aafbe6f3952", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c58d25945940ef3403c1fca29ca33aafbe6f3952", "message": "Make Retrys consistent (DataDog/dd-trace-java#1442)", "committedDate": "2020-05-26T18:54:55Z", "type": "commit"}, {"oid": "dbe1c00ac15ab25730ff1767b8c7b1dd00e3e4d8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dbe1c00ac15ab25730ff1767b8c7b1dd00e3e4d8", "message": "Adding an option to manually disable Kafka headers (DataDog/dd-trace-java#1448)", "committedDate": "2020-05-26T18:54:56Z", "type": "commit"}, {"oid": "f0e19d6a83fea47db37f63be034ce54b67618a38", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f0e19d6a83fea47db37f63be034ce54b67618a38", "message": "Rename java packages for lettuce 4 and 5 to not have collisions (DataDog/dd-trace-java#1450)", "committedDate": "2020-05-26T18:54:56Z", "type": "commit"}, {"oid": "67219faf253878bee7bb532a74cefd5998698a6f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/67219faf253878bee7bb532a74cefd5998698a6f", "message": "Add version specific names to allow disabling only a specific version (DataDog/dd-trace-java#1456)", "committedDate": "2020-05-26T18:54:56Z", "type": "commit"}, {"oid": "77ae5434d59003902b4e33eca5688493e77d112e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/77ae5434d59003902b4e33eca5688493e77d112e", "message": "Attempt to improve muzzle time by randomly ignoring versions until 10 remain (DataDog/dd-trace-java#1451)", "committedDate": "2020-05-26T18:54:57Z", "type": "commit"}, {"oid": "ec0c313a78407572c269415c514187b64ed32745", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ec0c313a78407572c269415c514187b64ed32745", "message": "Save circle cache with name matching restore patterns (DataDog/dd-trace-java#1457)", "committedDate": "2020-05-26T18:54:57Z", "type": "commit"}, {"oid": "ebebbc7daec9a7fd78f54c8387b1a09ced30c267", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/ebebbc7daec9a7fd78f54c8387b1a09ced30c267", "message": "Wrap log statements using varargs to avoid object allocation (DataDog/dd-trace-java#1466)", "committedDate": "2020-05-26T18:54:57Z", "type": "commit"}, {"oid": "d8c9639fbbe804f6d4d5a83065cc4ca546b8211d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d8c9639fbbe804f6d4d5a83065cc4ca546b8211d", "message": "Grizzly-http and grizzly-client instrumentation (DataDog/dd-trace-java#1365)", "committedDate": "2020-05-26T18:54:59Z", "type": "commit"}, {"oid": "b7ac69ee146a14fcee87c51b48e464e0fb916609", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b7ac69ee146a14fcee87c51b48e464e0fb916609", "message": "More refactoring for ScopeManager (DataDog/dd-trace-java#1467)", "committedDate": "2020-05-26T18:54:59Z", "type": "commit"}, {"oid": "8b6536e31c1225b06dfe6f31cbebecb8b3983d48", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8b6536e31c1225b06dfe6f31cbebecb8b3983d48", "message": "Remove Java 9 and 10 from the build (DataDog/dd-trace-java#1473)", "committedDate": "2020-05-26T18:54:59Z", "type": "commit"}, {"oid": "6a6ea807ea7e5048b4647e152011b1b5a71597f1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6a6ea807ea7e5048b4647e152011b1b5a71597f1", "message": "Disable CI cache for muzzle (DataDog/dd-trace-java#1479)", "committedDate": "2020-05-26T18:55:00Z", "type": "commit"}, {"oid": "6a6ea807ea7e5048b4647e152011b1b5a71597f1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6a6ea807ea7e5048b4647e152011b1b5a71597f1", "message": "Disable CI cache for muzzle (DataDog/dd-trace-java#1479)", "committedDate": "2020-05-26T18:55:00Z", "type": "forcePushed"}]}