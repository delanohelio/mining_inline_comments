{"pr_number": 1810, "pr_title": "Pass around context more instead of span (HttpServerTracer)", "pr_createdAt": "2020-12-01T01:18:51Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810", "timeline": [{"oid": "24ddccaccc24dcd2a62c580940b206fce5134148", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/24ddccaccc24dcd2a62c580940b206fce5134148", "message": "Move context attributes to startSpan", "committedDate": "2020-12-01T00:42:52Z", "type": "commit"}, {"oid": "20085bca4001da07b89828cde8524f85fbeae12d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/20085bca4001da07b89828cde8524f85fbeae12d", "message": "Pass more context", "committedDate": "2020-12-01T01:13:05Z", "type": "commit"}, {"oid": "6d09bc9d5e5caa3b9e2014847101141681d459e8", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/6d09bc9d5e5caa3b9e2014847101141681d459e8", "message": "A comment and a fix", "committedDate": "2020-12-01T01:46:09Z", "type": "commit"}, {"oid": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dcc9a2e73dd5405e9c9638c96b95c356654a6ed9", "message": "Small comment update to match other PR", "committedDate": "2020-12-01T02:51:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNDc0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533114744", "bodyText": "Why this change?", "author": "iNikem", "createdAt": "2020-12-01T07:10:26Z", "path": "instrumentation/armeria-1.0/library/src/main/java/io/opentelemetry/instrumentation/armeria/v1_0/server/ArmeriaServerTracer.java", "diffHunk": "@@ -19,7 +19,8 @@\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n public class ArmeriaServerTracer\n-    extends HttpServerTracer<HttpRequest, RequestLog, ServiceRequestContext, Void> {\n+    extends HttpServerTracer<\n+        HttpRequest, RequestLog, ServiceRequestContext, ServiceRequestContext> {", "originalCommit": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMTA1MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533121051", "bodyText": "NullAway made me do it. It wouldn't let me pass null STORAGE to HttpClientTracer.startSpan(), without marking the STORAGE parameter as truly @Nullable which then would cascade to lots of other places. So instead I changed this, and just passed the (non-null) ServiceRequestContext twice.", "author": "trask", "createdAt": "2020-12-01T07:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNDc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEzMzM3Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533133377", "bodyText": "hm, I was going to try with @Nullable Void, but now can't repro at all, so reverting the change and let's see what CI says..", "author": "trask", "createdAt": "2020-12-01T07:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNDc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY1MzQ0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533653444", "bodyText": "wow, it passed, thx for asking this \ud83d\udc4d\ud83d\udc4d", "author": "trask", "createdAt": "2020-12-01T19:05:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNDc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "e4cbac6158beebff5ff1dbf2f92151f0608fcb45", "chunk": "diff --git a/instrumentation/armeria-1.0/library/src/main/java/io/opentelemetry/instrumentation/armeria/v1_0/server/ArmeriaServerTracer.java b/instrumentation/armeria-1.0/library/src/main/java/io/opentelemetry/instrumentation/armeria/v1_0/server/ArmeriaServerTracer.java\nindex f72eb1293f..70cdb45a66 100644\n--- a/instrumentation/armeria-1.0/library/src/main/java/io/opentelemetry/instrumentation/armeria/v1_0/server/ArmeriaServerTracer.java\n+++ b/instrumentation/armeria-1.0/library/src/main/java/io/opentelemetry/instrumentation/armeria/v1_0/server/ArmeriaServerTracer.java\n\n@@ -19,8 +19,7 @@ import java.util.stream.Collectors;\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n public class ArmeriaServerTracer\n-    extends HttpServerTracer<\n-        HttpRequest, RequestLog, ServiceRequestContext, ServiceRequestContext> {\n+    extends HttpServerTracer<HttpRequest, RequestLog, ServiceRequestContext, Void> {\n \n   ArmeriaServerTracer() {}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjAyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533116029", "bodyText": "I don't understand where this happens now. We have to active new context somewhere, haven't we?", "author": "iNikem", "createdAt": "2020-12-01T07:13:34Z", "path": "instrumentation-api/src/main/java/io/opentelemetry/instrumentation/api/tracer/HttpServerTracer.java", "diffHunk": "@@ -58,67 +69,51 @@ public Context startSpan(\n     onRequest(span, request);\n     onConnectionAndRequest(span, connection, request);\n \n-    return parentContext.with(span);\n-  }\n+    Context context = parentContext.with(CONTEXT_SERVER_SPAN_KEY, span).with(span);\n+    attachServerContext(context, storage);\n \n-  /**\n-   * Creates new scoped context, based on the current context, with the given span.\n-   *\n-   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n-   */\n-  public Scope startScope(Span span, STORAGE storage) {\n-    return startScope(span, storage, Context.current());\n-  }\n-\n-  /**\n-   * Creates new scoped context, based on the given context, with the given span.\n-   *\n-   * <p>Attaches new context to the request to avoid creating duplicate server spans.\n-   */\n-  public Scope startScope(Span span, STORAGE storage, Context context) {\n-    // TODO we could do this in one go, but TracingContextUtils.CONTEXT_SPAN_KEY is private\n-    Context newContext = context.with(CONTEXT_SERVER_SPAN_KEY, span).with(span);\n-    attachServerContext(newContext, storage);\n-    return newContext.makeCurrent();", "originalCommit": "dcc9a2e73dd5405e9c9638c96b95c356654a6ed9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExODEwMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533118103", "bodyText": "A, I see, every instrumentation now does that itself.\nI have one problem with this and with the removal of startScope: inconsistency. Now instrumentations which use HttpServerTracer and those which use e.g. HttpClientTracer are different. They used to follow the same pattern: startSpan+startScope, now they are going to be different. Maybe it is worth leaving startScope method here with just context.makeCurrent() to preserve uniformity?", "author": "iNikem", "createdAt": "2020-12-01T07:18:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjAyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMDE0MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1810#discussion_r533120141", "bodyText": "#1811 \ud83d\ude01", "author": "trask", "createdAt": "2020-12-01T07:23:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjAyOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "e4cbac6158beebff5ff1dbf2f92151f0608fcb45", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e4cbac6158beebff5ff1dbf2f92151f0608fcb45", "message": "Revert change I thought was needed for NullAway", "committedDate": "2020-12-01T07:50:44Z", "type": "commit"}]}