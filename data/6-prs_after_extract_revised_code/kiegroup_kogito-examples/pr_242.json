{"pr_number": 242, "pr_title": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus", "pr_createdAt": "2020-04-21T15:14:09Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/242", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUyOTI0MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r413529241", "bodyText": "missing copywrite to Java classes", "author": "cristianonicolai", "createdAt": "2020-04-23T05:55:02Z", "path": "kogito-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.acme.travels;", "originalCommit": "70f2367c662e59d14daeb5c7114d1a6d70a53ca9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f81f0d0afc6b3bb0439e5a73ca5cec1fbf93ba5e", "chunk": "diff --git a/kogito-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java b/process-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java\nsimilarity index 62%\nrename from kogito-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java\nrename to process-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java\nindex dea22cd3..c5b44b73 100644\n--- a/kogito-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java\n+++ b/process-mongodb-persistence-quarkus/src/main/java/org/acme/travels/Address.java\n\n@@ -1,3 +1,19 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package org.acme.travels;\n \n import java.io.Serializable;\n"}}, {"oid": "f81f0d0afc6b3bb0439e5a73ca5cec1fbf93ba5e", "url": "https://github.com/kiegroup/kogito-examples/commit/f81f0d0afc6b3bb0439e5a73ca5cec1fbf93ba5e", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkas\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-04-24T19:31:14Z", "type": "forcePushed"}, {"oid": "f16a794926ad674c7dcac9379841de4b575467a1", "url": "https://github.com/kiegroup/kogito-examples/commit/f16a794926ad674c7dcac9379841de4b575467a1", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkas\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-04-24T19:42:15Z", "type": "forcePushed"}, {"oid": "5a81fe284e3b6bb166275cb5f3b8581b3f07ebcf", "url": "https://github.com/kiegroup/kogito-examples/commit/5a81fe284e3b6bb166275cb5f3b8581b3f07ebcf", "message": "Persistence example with Quarkus and Mongo DB\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-06-09T22:08:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0NjQwMg==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r444246402", "bodyText": "This has changed in the master branch, update and follow the same approach as done for Infinispan.", "author": "Sgitario", "createdAt": "2020-06-23T13:59:38Z", "path": "process-mongodb-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+import java.util.Map;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class DealsRestIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DealsRestIT.class);\n+    private static final int MONGO_DEFAULT_PORT = 27017;\n+    private static final String MONGO_VERSION = \"mongo:4.0\";\n+\n+    @Container\n+    public static GenericContainer INFINISPAN = new FixedHostPortGenericContainer(MONGO_VERSION).withFixedExposedPort(MONGO_DEFAULT_PORT, MONGO_DEFAULT_PORT)\n+                                                                                                .withLogConsumer(new Slf4jLogConsumer(LOGGER))\n+                                                                                                .waitingFor(Wait.forLogMessage(\".*build index done.*\", 1));", "originalCommit": "5a81fe284e3b6bb166275cb5f3b8581b3f07ebcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMDg4MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r447210880", "bodyText": "I will check infinispan implementation. Thanks!", "author": "swati-kale", "createdAt": "2020-06-29T19:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0NjQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0MzU2Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r462343562", "bodyText": "Added integration test following infinispan.", "author": "swati-kale", "createdAt": "2020-07-29T14:29:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0NjQwMg=="}], "type": "inlineReview", "revised_code": {"commit": "4dcd495db0e87f0716d2fcfc770650bbb7814090", "chunk": "diff --git a/process-mongodb-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java b/process-mongodb-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java\nindex b21d6a1b..159ca926 100644\n--- a/process-mongodb-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java\n+++ b/process-mongodb-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java\n\n@@ -17,17 +17,11 @@ package org.acme.deals;\n \n import java.util.Map;\n \n+import io.quarkus.test.common.QuarkusTestResource;\n import io.quarkus.test.junit.QuarkusTest;\n import io.restassured.http.ContentType;\n import org.junit.jupiter.api.Test;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.testcontainers.containers.FixedHostPortGenericContainer;\n-import org.testcontainers.containers.GenericContainer;\n-import org.testcontainers.containers.output.Slf4jLogConsumer;\n-import org.testcontainers.containers.wait.strategy.Wait;\n-import org.testcontainers.junit.jupiter.Container;\n-import org.testcontainers.junit.jupiter.Testcontainers;\n+import org.kie.kogito.testcontainers.quarkus.MongoDBQuarkusTestResource;\n \n import static io.restassured.RestAssured.given;\n import static org.hamcrest.CoreMatchers.is;\n"}}, {"oid": "4dcd495db0e87f0716d2fcfc770650bbb7814090", "url": "https://github.com/kiegroup/kogito-examples/commit/4dcd495db0e87f0716d2fcfc770650bbb7814090", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus", "committedDate": "2020-07-24T21:20:45Z", "type": "forcePushed"}, {"oid": "4febacdb08818b3acf1c92c7c0160a610c72b727", "url": "https://github.com/kiegroup/kogito-examples/commit/4febacdb08818b3acf1c92c7c0160a610c72b727", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus", "committedDate": "2020-07-28T02:29:50Z", "type": "forcePushed"}, {"oid": "9fd129a59cd0c7e09f27fa32e598f01047baf91a", "url": "https://github.com/kiegroup/kogito-examples/commit/9fd129a59cd0c7e09f27fa32e598f01047baf91a", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus", "committedDate": "2020-08-03T03:15:08Z", "type": "forcePushed"}, {"oid": "87275c7432be0637c7df94649037492e1a33dc58", "url": "https://github.com/kiegroup/kogito-examples/commit/87275c7432be0637c7df94649037492e1a33dc58", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-06T21:18:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2NDA0OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r466764049", "bodyText": "AFIK  examples-test-utils will be removed. You should be able to reuse this from kogito-test-utils in the runtime.\n@Sgitario that's the plan right?", "author": "cristianonicolai", "createdAt": "2020-08-07T01:02:54Z", "path": "examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KogitoMongoDBContainer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers;\n+\n+import org.kie.kogito.resources.TestResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.MongoDBContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+\n+/**\n+ * MongoDB Container for Kogito examples.\n+ */\n+public class KogitoMongoDBContainer extends MongoDBContainer implements TestResource {", "originalCommit": "87275c7432be0637c7df94649037492e1a33dc58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0NzE5Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r466847196", "bodyText": "That's correct. However, this module has not been deleted yet (it will be done as part of KOGITO-2985 which is blocked). So, it's fine to leave it this way at the moment).", "author": "Sgitario", "createdAt": "2020-08-07T06:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2NDA0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "66652a914f8bf3d40f43c06d5b0f645123d0d554", "chunk": "diff --git a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KogitoMongoDBContainer.java b/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KogitoMongoDBContainer.java\ndeleted file mode 100644\nindex 26a69b9b..00000000\n--- a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KogitoMongoDBContainer.java\n+++ /dev/null\n\n@@ -1,47 +0,0 @@\n-/**\n- *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n- *\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *        http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- */\n-package org.kie.kogito.testcontainers;\n-\n-import org.kie.kogito.resources.TestResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.testcontainers.containers.MongoDBContainer;\n-import org.testcontainers.containers.output.Slf4jLogConsumer;\n-\n-/**\n- * MongoDB Container for Kogito examples.\n- */\n-public class KogitoMongoDBContainer extends MongoDBContainer implements TestResource {\n-\n-    public static final String NAME = \"mongodb\";\n-    private static final int MONGODB_INTERNAL_PORT = 27017;\n-\n-    private static final Logger LOGGER = LoggerFactory.getLogger(KogitoMongoDBContainer.class);\n-\n-    public KogitoMongoDBContainer() {\n-        withLogConsumer(new Slf4jLogConsumer(LOGGER));\n-    }\n-\n-    @Override\n-    public int getMappedPort() {\n-        return MONGODB_INTERNAL_PORT;\n-    }\n-\n-    @Override\n-    public String getResourceName() {\n-        return NAME;\n-    }\n-}\n"}}, {"oid": "66652a914f8bf3d40f43c06d5b0f645123d0d554", "url": "https://github.com/kiegroup/kogito-examples/commit/66652a914f8bf3d40f43c06d5b0f645123d0d554", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-13T20:06:27Z", "type": "forcePushed"}, {"oid": "bef871316898420a3085bc498eba913ff9b24843", "url": "https://github.com/kiegroup/kogito-examples/commit/bef871316898420a3085bc498eba913ff9b24843", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-21T14:48:58Z", "type": "forcePushed"}, {"oid": "58802c361c7b193ecf05d075721c2a2e06edfff5", "url": "https://github.com/kiegroup/kogito-examples/commit/58802c361c7b193ecf05d075721c2a2e06edfff5", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-26T17:02:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4MTQ5Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r477581497", "bodyText": "Formatting uses tabs instead of spaces.", "author": "MarianMacik", "createdAt": "2020-08-26T20:51:05Z", "path": "process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Address.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+public class Address {\n+\n+\tprivate String street;\n+\tprivate String city;\n+\tprivate String zipCode;\n+\tprivate String country;\n+\n+\tpublic Address() {\n+\n+\t}\n+\n+\tpublic Address(String street, String city, String zipCode, String country) {\n+\t\tthis.street = street;\n+\t\tthis.city = city;\n+\t\tthis.zipCode = zipCode;\n+\t\tthis.country = country;", "originalCommit": "58802c361c7b193ecf05d075721c2a2e06edfff5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4f10cf0b11f0d09bfe375e63960358161c4659f0", "chunk": "diff --git a/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Address.java b/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Address.java\nindex d7885c58..01fadd98 100644\n--- a/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Address.java\n+++ b/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Address.java\n\n@@ -17,56 +17,56 @@ package org.acme.deals;\n \n public class Address {\n \n-\tprivate String street;\n-\tprivate String city;\n-\tprivate String zipCode;\n-\tprivate String country;\n+    private String street;\n+    private String city;\n+    private String zipCode;\n+    private String country;\n \n-\tpublic Address() {\n+    public Address() {\n \n-\t}\n+    }\n \n-\tpublic Address(String street, String city, String zipCode, String country) {\n-\t\tthis.street = street;\n-\t\tthis.city = city;\n-\t\tthis.zipCode = zipCode;\n-\t\tthis.country = country;\n-\t}\n+    public Address(String street, String city, String zipCode, String country) {\n+        this.street = street;\n+        this.city = city;\n+        this.zipCode = zipCode;\n+        this.country = country;\n+    }\n \n-\tpublic String getStreet() {\n-\t\treturn street;\n-\t}\n+    public String getStreet() {\n+        return street;\n+    }\n \n-\tpublic void setStreet(String street) {\n-\t\tthis.street = street;\n-\t}\n+    public void setStreet(String street) {\n+        this.street = street;\n+    }\n \n-\tpublic String getCity() {\n-\t\treturn city;\n-\t}\n+    public String getCity() {\n+        return city;\n+    }\n \n-\tpublic void setCity(String city) {\n-\t\tthis.city = city;\n-\t}\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n \n-\tpublic String getZipCode() {\n-\t\treturn zipCode;\n-\t}\n+    public String getZipCode() {\n+        return zipCode;\n+    }\n \n-\tpublic void setZipCode(String zipCode) {\n-\t\tthis.zipCode = zipCode;\n-\t}\n+    public void setZipCode(String zipCode) {\n+        this.zipCode = zipCode;\n+    }\n \n-\tpublic String getCountry() {\n-\t\treturn country;\n-\t}\n+    public String getCountry() {\n+        return country;\n+    }\n \n-\tpublic void setCountry(String country) {\n-\t\tthis.country = country;\n-\t}\n+    public void setCountry(String country) {\n+        this.country = country;\n+    }\n \n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"Address [street=\" + street + \", city=\" + city + \", zipCode=\" + zipCode + \", country=\" + country + \"]\";\n-\t}\n+    @Override\n+    public String toString() {\n+        return \"Address [street=\" + street + \", city=\" + city + \", zipCode=\" + zipCode + \", country=\" + country + \"]\";\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU4MTY3Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/242#discussion_r477581677", "bodyText": "Same here, tabs instead of spaces.", "author": "MarianMacik", "createdAt": "2020-08-26T20:51:25Z", "path": "process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+public class Traveller {\n+\n+\tprivate String firstName;\n+\tprivate String lastName;\n+\tprivate String email;\n+\tprivate String nationality;\n+\tprivate Address address;\n+\n+\tpublic Traveller() {\n+\n+\t}\n+\n+\tpublic Traveller(String firstName, String lastName, String email, String nationality, Address address) {\n+\t\tthis.firstName = firstName;", "originalCommit": "58802c361c7b193ecf05d075721c2a2e06edfff5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4f10cf0b11f0d09bfe375e63960358161c4659f0", "chunk": "diff --git a/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java b/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java\nindex 6d2655c3..e9e1b582 100644\n--- a/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java\n+++ b/process-mongodb-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java\n\n@@ -17,68 +17,66 @@ package org.acme.deals;\n \n public class Traveller {\n \n-\tprivate String firstName;\n-\tprivate String lastName;\n-\tprivate String email;\n-\tprivate String nationality;\n-\tprivate Address address;\n-\n-\tpublic Traveller() {\n-\n-\t}\n-\n-\tpublic Traveller(String firstName, String lastName, String email, String nationality, Address address) {\n-\t\tthis.firstName = firstName;\n-\t\tthis.lastName = lastName;\n-\t\tthis.email = email;\n-\t\tthis.nationality = nationality;\n-\t\tthis.address = address;\n-\t}\n-\n-\tpublic String getFirstName() {\n-\t\treturn firstName;\n-\t}\n-\n-\tpublic void setFirstName(String firstName) {\n-\t\tthis.firstName = firstName;\n-\t}\n-\n-\tpublic String getLastName() {\n-\t\treturn lastName;\n-\t}\n-\n-\tpublic void setLastName(String lastName) {\n-\t\tthis.lastName = lastName;\n-\t}\n-\n-\tpublic String getEmail() {\n-\t\treturn email;\n-\t}\n-\n-\tpublic void setEmail(String email) {\n-\t\tthis.email = email;\n-\t}\n-\n-\tpublic String getNationality() {\n-\t\treturn nationality;\n-\t}\n-\n-\tpublic void setNationality(String nationality) {\n-\t\tthis.nationality = nationality;\n-\t}\n-\n-\tpublic Address getAddress() {\n-\t\treturn address;\n-\t}\n-\n-\tpublic void setAddress(Address address) {\n-\t\tthis.address = address;\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"Traveller [firstName=\" + firstName + \", lastName=\" + lastName + \", email=\" + email + \", nationality=\"\n-\t\t\t\t+ nationality + \", address=\" + address + \"]\";\n-\t}\n-\n+    private String firstName;\n+    private String lastName;\n+    private String email;\n+    private String nationality;\n+    private Address address;\n+\n+    public Traveller() {\n+\n+    }\n+\n+    public Traveller(String firstName, String lastName, String email, String nationality, Address address) {\n+        this.firstName = firstName;\n+        this.lastName = lastName;\n+        this.email = email;\n+        this.nationality = nationality;\n+        this.address = address;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    public void setEmail(String email) {\n+        this.email = email;\n+    }\n+\n+    public String getNationality() {\n+        return nationality;\n+    }\n+\n+    public void setNationality(String nationality) {\n+        this.nationality = nationality;\n+    }\n+\n+    public Address getAddress() {\n+        return address;\n+    }\n+\n+    public void setAddress(Address address) {\n+        this.address = address;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Traveller [firstName=\" + firstName + \", lastName=\" + lastName + \", email=\" + email + \", nationality=\" + nationality + \", address=\" + address + \"]\";\n+    }\n }\n"}}, {"oid": "4f10cf0b11f0d09bfe375e63960358161c4659f0", "url": "https://github.com/kiegroup/kogito-examples/commit/4f10cf0b11f0d09bfe375e63960358161c4659f0", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T02:51:09Z", "type": "forcePushed"}, {"oid": "975ef6ab8032579fb71024a88ed8342e007d8c7e", "url": "https://github.com/kiegroup/kogito-examples/commit/975ef6ab8032579fb71024a88ed8342e007d8c7e", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:24:38Z", "type": "forcePushed"}, {"oid": "3b0c9f4afbd31a89f169e5b921c46a18fb6ff12c", "url": "https://github.com/kiegroup/kogito-examples/commit/3b0c9f4afbd31a89f169e5b921c46a18fb6ff12c", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-31T02:18:13Z", "type": "forcePushed"}, {"oid": "1934ddb329e01ba57bb2f63e958a844ca0577eca", "url": "https://github.com/kiegroup/kogito-examples/commit/1934ddb329e01ba57bb2f63e958a844ca0577eca", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-31T13:27:08Z", "type": "commit"}, {"oid": "1934ddb329e01ba57bb2f63e958a844ca0577eca", "url": "https://github.com/kiegroup/kogito-examples/commit/1934ddb329e01ba57bb2f63e958a844ca0577eca", "message": "[KOGITO-1920] - Example for persistence in Mongo DB with Quarkus\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-31T13:27:08Z", "type": "forcePushed"}]}