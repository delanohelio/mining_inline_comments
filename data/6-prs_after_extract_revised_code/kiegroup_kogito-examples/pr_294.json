{"pr_number": 294, "pr_title": "[KOGITO-2424] Add flexible-process-springboot example", "pr_createdAt": "2020-07-06T12:34:03Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/294", "timeline": [{"oid": "b0b74a3a410f4e22c244e11194b0156abf3dc421", "url": "https://github.com/kiegroup/kogito-examples/commit/b0b74a3a410f4e22c244e11194b0156abf3dc421", "message": "[KOGITO-2424] Add flexible-process springboot\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T13:02:01Z", "type": "forcePushed"}, {"oid": "4bde442024a62c5050b0b1d0881df1ac75f6f7d6", "url": "https://github.com/kiegroup/kogito-examples/commit/4bde442024a62c5050b0b1d0881df1ac75f6f7d6", "message": "[KOGITO-2424] Add flexible-process springboot\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T13:02:57Z", "type": "forcePushed"}, {"oid": "387247dc6a6085943beeb9b1cd6191b215f2e294", "url": "https://github.com/kiegroup/kogito-examples/commit/387247dc6a6085943beeb9b1cd6191b215f2e294", "message": "[KOGITO-2424] Add flexible-process springboot\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T14:03:26Z", "type": "forcePushed"}, {"oid": "4dc76f73975aab3a716cb6593a63c4a0c6896b2b", "url": "https://github.com/kiegroup/kogito-examples/commit/4dc76f73975aab3a716cb6593a63c4a0c6896b2b", "message": "[KOGITO-2424] Add flexible-process springboot\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T14:27:32Z", "type": "forcePushed"}, {"oid": "2c3d27bce932d34cb919010066a83d4f7b9c0333", "url": "https://github.com/kiegroup/kogito-examples/commit/2c3d27bce932d34cb919010066a83d4f7b9c0333", "message": "[KOGITO-2424] Add flexible-process springboot\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T14:29:46Z", "type": "commit"}, {"oid": "2c3d27bce932d34cb919010066a83d4f7b9c0333", "url": "https://github.com/kiegroup/kogito-examples/commit/2c3d27bce932d34cb919010066a83d4f7b9c0333", "message": "[KOGITO-2424] Add flexible-process springboot\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T14:29:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mzk5NA==", "url": "https://github.com/kiegroup/kogito-examples/pull/294#discussion_r450983994", "bodyText": "why not using the SpringBootTest.WebEnvironment.RANDOM_PORT? it is great for tests, to avoid conflicts.", "author": "tiagodolphine", "createdAt": "2020-07-07T16:14:45Z", "path": "flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.flexible.kogito.example;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.Test;\n+import org.kie.flexible.kogito.example.model.Product;\n+import org.kie.flexible.kogito.example.model.State;\n+import org.kie.flexible.kogito.example.model.SupportCase;\n+import org.kie.flexible.kogito.example.service.TriageService;\n+import org.kie.kogito.tests.KogitoSpringbootApplication;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import static org.hamcrest.CoreMatchers.anyOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, classes = KogitoSpringbootApplication.class)", "originalCommit": "2c3d27bce932d34cb919010066a83d4f7b9c0333", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1578fd6f9aa8dd63512e800d6a0bd6c13a614ce", "chunk": "diff --git a/flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java b/flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java\nindex 0deaacd9..3d0cd7b1 100644\n--- a/flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java\n+++ b/flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java\n\n@@ -21,6 +21,7 @@ import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.kie.flexible.kogito.example.model.Product;\n import org.kie.flexible.kogito.example.model.State;\n"}}, {"oid": "d1578fd6f9aa8dd63512e800d6a0bd6c13a614ce", "url": "https://github.com/kiegroup/kogito-examples/commit/d1578fd6f9aa8dd63512e800d6a0bd6c13a614ce", "message": "[KOGITO-2424] Use random port\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T17:11:49Z", "type": "commit"}]}