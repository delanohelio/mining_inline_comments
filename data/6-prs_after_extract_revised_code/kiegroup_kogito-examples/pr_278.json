{"pr_number": 278, "pr_title": "KOGITO-1867: Move docker image property definitions to parent pom", "pr_createdAt": "2020-06-17T12:14:21Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/278", "timeline": [{"oid": "1d041071f21da22105db6d11a5bccfce488a72f7", "url": "https://github.com/kiegroup/kogito-examples/commit/1d041071f21da22105db6d11a5bccfce488a72f7", "message": "KOGITO-1867: Move docker image property definitions to parent pom", "committedDate": "2020-06-17T12:18:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4OTk3OA==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r441989978", "bodyText": "could we turn the image specs to a constant too? KEYCLOAK_IMAGE for example? so that it's in top of the class definition.", "author": "jstastny-cz", "createdAt": "2020-06-18T06:13:18Z", "path": "examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KeycloakContainer.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers;\n+\n+import java.time.Duration;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+\n+/**\n+ * This container wraps Keycloak container\n+ *\n+ */\n+public class KeycloakContainer extends ConditionalGenericContainer<KeycloakContainer> {\n+\n+    public static final String KEYCLOAK_PROPERTY = \"container.image.keycloak\";\n+\n+    private static final String REALM_FILE = \"/tmp/realm.json\";\n+    private static final Logger LOGGER = LoggerFactory.getLogger(KeycloakContainer.class);\n+\n+    public KeycloakContainer() {\n+        addFixedExposedPort(8281, 8080);\n+        withEnv(\"KEYCLOAK_USER\", \"admin\");\n+        withEnv(\"KEYCLOAK_PASSWORD\", \"admin\");\n+        withEnv(\"KEYCLOAK_IMPORT\", REALM_FILE);\n+        withClasspathResourceMapping(\"testcontainers/keycloak/kogito-realm.json\", REALM_FILE, BindMode.READ_ONLY);\n+        withLogConsumer(new Slf4jLogConsumer(LOGGER));\n+        waitingFor(Wait.forHttp(\"/auth\").withStartupTimeout(Duration.ofMinutes(5)));\n+    }\n+\n+    @Override\n+    protected void preStart() {\n+        setDockerImageName(System.getProperty(KEYCLOAK_PROPERTY, \"quay.io/keycloak/keycloak:8.0.1\"));", "originalCommit": "1d041071f21da22105db6d11a5bccfce488a72f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5NjMyOA==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r441996328", "bodyText": "Sorry, this is a leftover. I will remove it instead.", "author": "Sgitario", "createdAt": "2020-06-18T06:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4OTk3OA=="}], "type": "inlineReview", "revised_code": {"commit": "04a64012f21bb570560c8d0a21fcef19208dbddf", "chunk": "diff --git a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KeycloakContainer.java b/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KeycloakContainer.java\nindex 78441a41..80bbd39a 100644\n--- a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KeycloakContainer.java\n+++ b/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KeycloakContainer.java\n\n@@ -46,6 +46,6 @@ public class KeycloakContainer extends ConditionalGenericContainer<KeycloakConta\n \n     @Override\n     protected void preStart() {\n-        setDockerImageName(System.getProperty(KEYCLOAK_PROPERTY, \"quay.io/keycloak/keycloak:8.0.1\"));\n+        setDockerImageName(System.getProperty(KEYCLOAK_PROPERTY));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5NTI1Mw==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r441995253", "bodyText": "Since the class is called ConditionalQuarkusResource I would expect this to be a general use test resource, but it's tightly coupled with the containers, the name should reflect that too. Plus I would also keep the full substring TestResource as part of the name.\nWouldn't here be more general approach to extend the QUarkusTestResourceLifecycleManager interface by a method like boolean isEnabled() that would then be used in start/stop. That we can call ConditionalTestResource and then by all means having an abstract class that introduces the container support to be extended by particular testcontainers based test resources.", "author": "jstastny-cz", "createdAt": "2020-06-18T06:27:34Z", "path": "examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/ConditionalQuarkusResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers.quarkus;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.kie.kogito.testcontainers.ConditionalGenericContainer;\n+\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+/**\n+ * Quarkus resource to be run if and only if it was enabled.\n+ */\n+public abstract class ConditionalQuarkusResource implements QuarkusTestResourceLifecycleManager {", "originalCommit": "1d041071f21da22105db6d11a5bccfce488a72f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAyMDkyMA==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r442020920", "bodyText": "If I understood correctly your comment, you are proposing either (a) to rename this class with a better name as this is tightly coupled with testcontainers, or (b) isolate it from testcontainers.\nI partly did (b). Ideally, the ConditionalGenericContainer class should be isolated as well, but this would not be compatible with the builder pattern: doing this.enableIfTestCategoryIs().withEnv(\"x\", \"y), and for spring boot, I think this is quite useful as it allows to set your container in one line.\nLet me know if you're ok with these changes. Thanks!", "author": "Sgitario", "createdAt": "2020-06-18T07:25:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5NTI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9915bb83d8c36c44e29570593ec1758594d2b509", "chunk": "diff --git a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/ConditionalQuarkusResource.java b/examples-test-utils/src/main/java/org/kie/kogito/resources/ConditionalQuarkusTestResource.java\nsimilarity index 79%\nrename from examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/ConditionalQuarkusResource.java\nrename to examples-test-utils/src/main/java/org/kie/kogito/resources/ConditionalQuarkusTestResource.java\nindex fd772401..595a82db 100644\n--- a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/ConditionalQuarkusResource.java\n+++ b/examples-test-utils/src/main/java/org/kie/kogito/resources/ConditionalQuarkusTestResource.java\n\n@@ -13,25 +13,23 @@\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  */\n-package org.kie.kogito.testcontainers.quarkus;\n+package org.kie.kogito.resources;\n \n import java.util.Collections;\n import java.util.Map;\n import java.util.Optional;\n \n-import org.kie.kogito.testcontainers.ConditionalGenericContainer;\n-\n import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n \n /**\n  * Quarkus resource to be run if and only if it was enabled.\n  */\n-public abstract class ConditionalQuarkusResource implements QuarkusTestResourceLifecycleManager {\n+public abstract class ConditionalQuarkusTestResource implements QuarkusTestResourceLifecycleManager {\n     private static final String ENABLE_PROPERTY = \"enableIfTestCategoryIs\";\n \n-    private final ConditionalGenericContainer<?> container;\n+    private final ConditionalTestResource<?> container;\n     \n-    public ConditionalQuarkusResource(ConditionalGenericContainer<?> container) {\n+    public ConditionalQuarkusTestResource(ConditionalTestResource<?> container) {\n         this.container = container;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5NTU4Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r441995587", "bodyText": "I would keep the word TestResource in names.", "author": "jstastny-cz", "createdAt": "2020-06-18T06:28:21Z", "path": "examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusResource.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers.quarkus;\n+\n+import org.kie.kogito.testcontainers.KeycloakContainer;\n+\n+/**\n+ * Keycloak quarkus resource that works within the test lifecycle.\n+ *\n+ */\n+public class KeycloakQuarkusResource extends ConditionalQuarkusResource {", "originalCommit": "1d041071f21da22105db6d11a5bccfce488a72f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAyMTQ5Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r442021496", "bodyText": "Renamed this and InfinispanQuarkusResource.", "author": "Sgitario", "createdAt": "2020-06-18T07:26:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk5NTU4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9915bb83d8c36c44e29570593ec1758594d2b509", "chunk": "diff --git a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusResource.java b/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusTestResource.java\nsimilarity index 82%\nrename from examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusResource.java\nrename to examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusTestResource.java\nindex a45b05ae..7c8e5277 100644\n--- a/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusResource.java\n+++ b/examples-test-utils/src/main/java/org/kie/kogito/testcontainers/quarkus/KeycloakQuarkusTestResource.java\n\n@@ -15,15 +15,16 @@\n  */\n package org.kie.kogito.testcontainers.quarkus;\n \n+import org.kie.kogito.resources.ConditionalQuarkusTestResource;\n import org.kie.kogito.testcontainers.KeycloakContainer;\n \n /**\n  * Keycloak quarkus resource that works within the test lifecycle.\n  *\n  */\n-public class KeycloakQuarkusResource extends ConditionalQuarkusResource {\n+public class KeycloakQuarkusTestResource extends ConditionalQuarkusTestResource {\n \n-    public KeycloakQuarkusResource() {\n+    public KeycloakQuarkusTestResource() {\n         super(new KeycloakContainer());\n     }\n \n"}}, {"oid": "9915bb83d8c36c44e29570593ec1758594d2b509", "url": "https://github.com/kiegroup/kogito-examples/commit/9915bb83d8c36c44e29570593ec1758594d2b509", "message": "KOGITO-1867: Move docker image property definitions to parent pom", "committedDate": "2020-06-18T07:32:40Z", "type": "forcePushed"}, {"oid": "04a64012f21bb570560c8d0a21fcef19208dbddf", "url": "https://github.com/kiegroup/kogito-examples/commit/04a64012f21bb570560c8d0a21fcef19208dbddf", "message": "KOGITO-1867: Move docker image property definitions to parent pom", "committedDate": "2020-06-18T07:33:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1NDc2NQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r442054765", "bodyText": "I meant extending QuarkusTestResourceLifecycleManager here and implementing just this in ConditionalQuarkusTestResource\npublic abstract class ConditionalQuarkusTestResource implements ConditionalTestResource.", "author": "jstastny-cz", "createdAt": "2020-06-18T08:25:02Z", "path": "examples-test-utils/src/main/java/org/kie/kogito/resources/ConditionalTestResource.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.resources;\n+\n+/**\n+ * Conditional test resource for kogito tests.\n+ * \n+ */\n+public interface ConditionalTestResource<T> {", "originalCommit": "04a64012f21bb570560c8d0a21fcef19208dbddf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExNTc1MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r442115750", "bodyText": "As agreed, I've already renamed the field to conditionalResource. Thanks for spotting this!", "author": "Sgitario", "createdAt": "2020-06-18T10:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1NDc2NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f125f959df08009d1634a3a27f08c09f1c9e3ecf", "url": "https://github.com/kiegroup/kogito-examples/commit/f125f959df08009d1634a3a27f08c09f1c9e3ecf", "message": "KOGITO-1867: Move docker image property definitions to parent pom", "committedDate": "2020-06-18T10:05:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMDA0NA==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r442130044", "bodyText": "can be still final, right?", "author": "jstastny-cz", "createdAt": "2020-06-18T10:32:47Z", "path": "process-usertasks-with-security-oidc-springboot/src/test/java/org/acme/travels/ApprovalsRestIT.java", "diffHunk": "@@ -22,41 +22,42 @@\n \n import java.util.Map;\n \n-import org.junit.Before;\n-import org.junit.ClassRule;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n import org.keycloak.representations.AccessTokenResponse;\n import org.kie.kogito.springboot.KogitoSpringbootApplication;\n+import org.kie.kogito.testcontainers.KeycloakContainer;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.web.server.LocalServerPort;\n import org.springframework.test.annotation.DirtiesContext;\n import org.springframework.test.annotation.DirtiesContext.ClassMode;\n-import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n \n import io.restassured.RestAssured;\n import io.restassured.http.ContentType;\n \n-@RunWith(SpringRunner.class)\n+@Testcontainers\n+@ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = KogitoSpringbootApplication.class)\n @DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD)\n public class ApprovalsRestIT {\n \n-    @ClassRule\n-    public static final KeycloakContainerResource keycloak = new KeycloakContainerResource();\n+    @Container\n+    public static KeycloakContainer KEYCLOAK = new KeycloakContainer();", "originalCommit": "f125f959df08009d1634a3a27f08c09f1c9e3ecf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMTY1MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/278#discussion_r442131651", "bodyText": "Sure. Re-added.", "author": "Sgitario", "createdAt": "2020-06-18T10:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMDA0NA=="}], "type": "inlineReview", "revised_code": {"commit": "f87fac414f200811a6aa540a286fcfe92ee0f417", "chunk": "diff --git a/process-usertasks-with-security-oidc-springboot/src/test/java/org/acme/travels/ApprovalsRestIT.java b/process-usertasks-with-security-oidc-springboot/src/test/java/org/acme/travels/ApprovalsRestIT.java\nindex a80aaf96..9e786b4a 100644\n--- a/process-usertasks-with-security-oidc-springboot/src/test/java/org/acme/travels/ApprovalsRestIT.java\n+++ b/process-usertasks-with-security-oidc-springboot/src/test/java/org/acme/travels/ApprovalsRestIT.java\n\n@@ -46,7 +46,7 @@ import io.restassured.http.ContentType;\n public class ApprovalsRestIT {\n \n     @Container\n-    public static KeycloakContainer KEYCLOAK = new KeycloakContainer();\n+    public static final KeycloakContainer KEYCLOAK = new KeycloakContainer();\n \n     @LocalServerPort\n     int randomServerPort;\n"}}, {"oid": "f87fac414f200811a6aa540a286fcfe92ee0f417", "url": "https://github.com/kiegroup/kogito-examples/commit/f87fac414f200811a6aa540a286fcfe92ee0f417", "message": "KOGITO-1867: Move docker image property definitions to parent pom", "committedDate": "2020-06-18T10:35:28Z", "type": "commit"}, {"oid": "f87fac414f200811a6aa540a286fcfe92ee0f417", "url": "https://github.com/kiegroup/kogito-examples/commit/f87fac414f200811a6aa540a286fcfe92ee0f417", "message": "KOGITO-1867: Move docker image property definitions to parent pom", "committedDate": "2020-06-18T10:35:28Z", "type": "forcePushed"}]}