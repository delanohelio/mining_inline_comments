{"pr_number": 241, "pr_title": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot", "pr_createdAt": "2020-04-21T15:10:34Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/241", "timeline": [{"oid": "0d2045600eced7faf0be95366e97d954509f263d", "url": "https://github.com/kiegroup/kogito-examples/commit/0d2045600eced7faf0be95366e97d954509f263d", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot", "committedDate": "2020-07-28T05:03:43Z", "type": "forcePushed"}, {"oid": "321a5094e6b08b23fb4bc87ec9deaaa1efe73b4b", "url": "https://github.com/kiegroup/kogito-examples/commit/321a5094e6b08b23fb4bc87ec9deaaa1efe73b4b", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot", "committedDate": "2020-07-28T05:08:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ5NzkxNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/241#discussion_r463497916", "bodyText": "please review code format and remove comment out code.", "author": "cristianonicolai", "createdAt": "2020-07-31T09:12:25Z", "path": "process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+import java.util.Map;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import io.restassured.response.ValidatableResponse;\n+import org.acme.travels.KogitoApplication;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.testcontainers.springboot.MongoDBSpringBootTestResource;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.context.ContextConfiguration;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@SpringBootTest(classes = KogitoApplication.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+@ContextConfiguration(initializers = MongoDBSpringBootTestResource.Conditional.class)\n+public class DealsRestIT {\n+\n+\t@LocalServerPort\n+    int randomServerPort;\n+    \n+    @BeforeEach\n+    public void setup() {\n+        RestAssured.port = randomServerPort;\n+    }\n+   \n+    @Test\n+    public void testDealsRest() {\n+        // test adding new deal\n+        String addDealPayload = \"{\\\"name\\\" : \\\"my fancy deal\\\", \\\"traveller\\\" : { \\\"firstName\\\" : \\\"John\\\", \\\"lastName\\\" : \\\"Doe\\\", \\\"email\\\" : \\\"jon.doe@example.com\\\", \\\"nationality\\\" : \\\"American\\\",\\\"address\\\" : { \\\"street\\\" : \\\"main street\\\", \\\"city\\\" : \\\"Boston\\\", \\\"zipCode\\\" : \\\"10005\\\", \\\"country\\\" : \\\"US\\\" }}}\";", "originalCommit": "321a5094e6b08b23fb4bc87ec9deaaa1efe73b4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "425a210adde1907fed3dd11d240b33a9ed72741a", "chunk": "diff --git a/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java b/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\nindex c13f73af..61312eae 100644\n--- a/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\n+++ b/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\n\n@@ -19,7 +19,6 @@ import java.util.Map;\n \n import io.restassured.RestAssured;\n import io.restassured.http.ContentType;\n-import io.restassured.response.ValidatableResponse;\n import org.acme.travels.KogitoApplication;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ5ODQ5Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/241#discussion_r463498497", "bodyText": "this validation looks fine to me. The one below is missing to check the actual id.", "author": "cristianonicolai", "createdAt": "2020-07-31T09:13:43Z", "path": "process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+import java.util.Map;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import io.restassured.response.ValidatableResponse;\n+import org.acme.travels.KogitoApplication;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.testcontainers.springboot.MongoDBSpringBootTestResource;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.context.ContextConfiguration;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@SpringBootTest(classes = KogitoApplication.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+@ContextConfiguration(initializers = MongoDBSpringBootTestResource.Conditional.class)\n+public class DealsRestIT {\n+\n+\t@LocalServerPort\n+    int randomServerPort;\n+    \n+    @BeforeEach\n+    public void setup() {\n+        RestAssured.port = randomServerPort;\n+    }\n+   \n+    @Test\n+    public void testDealsRest() {\n+        // test adding new deal\n+        String addDealPayload = \"{\\\"name\\\" : \\\"my fancy deal\\\", \\\"traveller\\\" : { \\\"firstName\\\" : \\\"John\\\", \\\"lastName\\\" : \\\"Doe\\\", \\\"email\\\" : \\\"jon.doe@example.com\\\", \\\"nationality\\\" : \\\"American\\\",\\\"address\\\" : { \\\"street\\\" : \\\"main street\\\", \\\"city\\\" : \\\"Boston\\\", \\\"zipCode\\\" : \\\"10005\\\", \\\"country\\\" : \\\"US\\\" }}}\";\n+        ValidatableResponse statusCode1 = given().contentType(ContentType.JSON).accept(ContentType.JSON).body(\n+                                                                                                              addDealPayload)\n+                .when().post(\"/deals\")\n+                                                 .then().log().ifValidationFails().statusCode(200);\n+        String dealId = statusCode1.extract().jsonPath().getString(\"id\");\n+\n+        // test getting the created deal\n+        //        given().accept(ContentType.JSON)\n+        //                .when().get(\"/deals\")\n+        //                .then().log().ifValidationFails().statusCode(200).body(\"$.size()\", is(1), \"[0].id\", is(dealId));", "originalCommit": "321a5094e6b08b23fb4bc87ec9deaaa1efe73b4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "425a210adde1907fed3dd11d240b33a9ed72741a", "chunk": "diff --git a/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java b/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\nindex c13f73af..61312eae 100644\n--- a/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\n+++ b/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\n\n@@ -19,7 +19,6 @@ import java.util.Map;\n \n import io.restassured.RestAssured;\n import io.restassured.http.ContentType;\n-import io.restassured.response.ValidatableResponse;\n import org.acme.travels.KogitoApplication;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n"}}, {"oid": "425a210adde1907fed3dd11d240b33a9ed72741a", "url": "https://github.com/kiegroup/kogito-examples/commit/425a210adde1907fed3dd11d240b33a9ed72741a", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot", "committedDate": "2020-08-03T03:22:56Z", "type": "forcePushed"}, {"oid": "59afe3e7501193ce3af131f7cf198b5aed8fa524", "url": "https://github.com/kiegroup/kogito-examples/commit/59afe3e7501193ce3af131f7cf198b5aed8fa524", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-06T21:00:48Z", "type": "forcePushed"}, {"oid": "21f20cf7afc5b6fdd7f24ec69f54fb614cb104d3", "url": "https://github.com/kiegroup/kogito-examples/commit/21f20cf7afc5b6fdd7f24ec69f54fb614cb104d3", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>\n\nprofile", "committedDate": "2020-08-13T21:42:27Z", "type": "forcePushed"}, {"oid": "64191e7809ee36ed3a2e316f653fb043567112f5", "url": "https://github.com/kiegroup/kogito-examples/commit/64191e7809ee36ed3a2e316f653fb043567112f5", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>\n\nprofile", "committedDate": "2020-08-21T15:21:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA4MjY1MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/241#discussion_r477082651", "bodyText": "This is not needed as it is called automatically...", "author": "MarianMacik", "createdAt": "2020-08-26T07:12:16Z", "path": "process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Address.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.acme.travels;\n+\n+public class Address {\n+\n+    private String street;\n+    private String city;\n+    private String zipCode;\n+    private String country;\n+\n+    public Address() {\n+\n+    }\n+\n+    public Address(String street, String city, String zipCode, String country) {\n+        super();", "originalCommit": "64191e7809ee36ed3a2e316f653fb043567112f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da5ef70338c82ae21005e9880b137f9c3b844f49", "chunk": "diff --git a/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Address.java b/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Address.java\nindex 6da4d4d0..abb698fb 100644\n--- a/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Address.java\n+++ b/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Address.java\n\n@@ -28,7 +28,6 @@ public class Address {\n     }\n \n     public Address(String street, String city, String zipCode, String country) {\n-        super();\n         this.street = street;\n         this.city = city;\n         this.zipCode = zipCode;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA4MjkxMg==", "url": "https://github.com/kiegroup/kogito-examples/pull/241#discussion_r477082912", "bodyText": "Same here.", "author": "MarianMacik", "createdAt": "2020-08-26T07:12:51Z", "path": "process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Traveller.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.acme.travels;\n+\n+public class Traveller {\n+\n+    private String firstName;\n+    private String lastName;\n+    private String email;\n+    private String nationality;\n+    private Address address;\n+\n+    public Traveller() {\n+\n+    }\n+\n+    public Traveller(String firstName, String lastName, String email, String nationality, Address address) {\n+        super();", "originalCommit": "64191e7809ee36ed3a2e316f653fb043567112f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da5ef70338c82ae21005e9880b137f9c3b844f49", "chunk": "diff --git a/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Traveller.java b/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Traveller.java\nindex 8cc3e5bf..3b773462 100644\n--- a/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Traveller.java\n+++ b/process-mongodb-persistence-springboot/src/main/java/org/acme/travels/Traveller.java\n\n@@ -29,7 +29,6 @@ public class Traveller {\n     }\n \n     public Traveller(String firstName, String lastName, String email, String nationality, Address address) {\n-        super();\n         this.firstName = firstName;\n         this.lastName = lastName;\n         this.email = email;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA4MzE4Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/241#discussion_r477083187", "bodyText": "Formatting.", "author": "MarianMacik", "createdAt": "2020-08-26T07:13:28Z", "path": "process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+import java.util.Map;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.acme.travels.KogitoApplication;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.testcontainers.springboot.MongoDBSpringBootTestResource;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.context.ContextConfiguration;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@SpringBootTest(classes = KogitoApplication.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+@ContextConfiguration(initializers = MongoDBSpringBootTestResource.Conditional.class)\n+public class DealsRestIT {\n+\n+\t@LocalServerPort\n+    int randomServerPort;", "originalCommit": "64191e7809ee36ed3a2e316f653fb043567112f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da5ef70338c82ae21005e9880b137f9c3b844f49", "chunk": "diff --git a/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java b/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\nindex 61312eae..01158d8d 100644\n--- a/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\n+++ b/process-mongodb-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java\n\n@@ -37,21 +37,23 @@ import static org.junit.jupiter.api.Assertions.assertNotNull;\n @ContextConfiguration(initializers = MongoDBSpringBootTestResource.Conditional.class)\n public class DealsRestIT {\n \n-\t@LocalServerPort\n+    @LocalServerPort\n     int randomServerPort;\n-    \n+\n     @BeforeEach\n     public void setup() {\n         RestAssured.port = randomServerPort;\n     }\n-   \n+\n     @Test\n     public void testDealsRest() {\n         // test adding new deal\n-        String addDealPayload = \"{\\\"name\\\" : \\\"my fancy deal\\\", \\\"traveller\\\" : { \\\"firstName\\\" : \\\"John\\\", \\\"lastName\\\" : \\\"Doe\\\", \\\"email\\\" : \\\"jon.doe@example.com\\\", \\\"nationality\\\" : \\\"American\\\",\\\"address\\\" : { \\\"street\\\" : \\\"main street\\\", \\\"city\\\" : \\\"Boston\\\", \\\"zipCode\\\" : \\\"10005\\\", \\\"country\\\" : \\\"US\\\" }}}\";\n+        String addDealPayload =\n+                \"{\\\"name\\\" : \\\"my fancy deal\\\", \\\"traveller\\\" : { \\\"firstName\\\" : \\\"John\\\", \\\"lastName\\\" : \\\"Doe\\\", \\\"email\\\" : \\\"jon.doe@example.com\\\", \\\"nationality\\\" : \\\"American\\\",\\\"address\\\" : { \\\"street\\\" : \\\"main street\\\", \\\"city\\\" : \\\"Boston\\\", \\\"zipCode\\\" : \\\"10005\\\", \\\"country\\\" : \\\"US\\\" }}}\";\n         String dealId = given().contentType(ContentType.JSON).accept(ContentType.JSON).body(\n                                                                                             addDealPayload)\n-                .when().post(\"/deals\")\n+                               .when().post(\n+                                            \"/deals\")\n                                .then().log().ifValidationFails().statusCode(200).body(\"id\", notNullValue()).extract().path(\"id\");\n         // test getting the created deal\n         given().accept(ContentType.JSON)\n"}}, {"oid": "da5ef70338c82ae21005e9880b137f9c3b844f49", "url": "https://github.com/kiegroup/kogito-examples/commit/da5ef70338c82ae21005e9880b137f9c3b844f49", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-26T16:28:09Z", "type": "forcePushed"}, {"oid": "126c99c099674c7c744b308dbc468bd79c8d7081", "url": "https://github.com/kiegroup/kogito-examples/commit/126c99c099674c7c744b308dbc468bd79c8d7081", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-26T16:47:40Z", "type": "forcePushed"}, {"oid": "698f260be58a340204bca6049dcf6443aed3c796", "url": "https://github.com/kiegroup/kogito-examples/commit/698f260be58a340204bca6049dcf6443aed3c796", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T03:05:29Z", "type": "forcePushed"}, {"oid": "80538eb4bdf8093658dcd7ccf1399fe500b68d40", "url": "https://github.com/kiegroup/kogito-examples/commit/80538eb4bdf8093658dcd7ccf1399fe500b68d40", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:08:09Z", "type": "commit"}, {"oid": "80538eb4bdf8093658dcd7ccf1399fe500b68d40", "url": "https://github.com/kiegroup/kogito-examples/commit/80538eb4bdf8093658dcd7ccf1399fe500b68d40", "message": "[KOGITO-1921]- Example for persistence in Mongo DB with Springboot\n\nSigned-off-by: Swati Kale <swkale@redhat.com>", "committedDate": "2020-08-27T13:08:09Z", "type": "forcePushed"}]}