{"pr_number": 293, "pr_title": "[KOGITO-2423] Add flexible-process-quarkus example", "pr_createdAt": "2020-07-06T12:23:22Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/293", "timeline": [{"oid": "e2d7bfe2e044d10cafe137c53b15b898d0a4f732", "url": "https://github.com/kiegroup/kogito-examples/commit/e2d7bfe2e044d10cafe137c53b15b898d0a4f732", "message": "[KOGITO-2423] Add flexible-process-quarkus example\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-06T13:56:15Z", "type": "forcePushed"}, {"oid": "154faaf0a51c375c93979566b6962d1e57b95635", "url": "https://github.com/kiegroup/kogito-examples/commit/154faaf0a51c375c93979566b6962d1e57b95635", "message": "[KOGITO-2423] Add flexible-process-quarkus example\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-06T17:17:38Z", "type": "commit"}, {"oid": "154faaf0a51c375c93979566b6962d1e57b95635", "url": "https://github.com/kiegroup/kogito-examples/commit/154faaf0a51c375c93979566b6962d1e57b95635", "message": "[KOGITO-2423] Add flexible-process-quarkus example\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-06T17:17:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NDMxNw==", "url": "https://github.com/kiegroup/kogito-examples/pull/293#discussion_r450384317", "bodyText": "You could have the integration test sending requests to the REST APIs as well, wdyt?", "author": "tiagodolphine", "createdAt": "2020-07-06T17:48:34Z", "path": "flexible-process-quarkus/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.flexible.kogito.example;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.Test;\n+import org.kie.flexible.kogito.example.model.Product;\n+import org.kie.flexible.kogito.example.model.State;\n+import org.kie.flexible.kogito.example.model.SupportCase;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessInstance;\n+import org.kie.kogito.process.WorkItem;\n+import org.kie.kogito.process.impl.Sig;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+@QuarkusTest\n+public class ServiceDeskProcessTest {", "originalCommit": "154faaf0a51c375c93979566b6962d1e57b95635", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4MjIwOQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/293#discussion_r450582209", "bodyText": "+1", "author": "cristianonicolai", "createdAt": "2020-07-07T02:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NDMxNw=="}], "type": "inlineReview", "revised_code": {"commit": "0bce19e11ffb25d2710fff2f716b5067c01e016b", "chunk": "diff --git a/flexible-process-quarkus/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java b/flexible-process-quarkus/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java\nindex 7371bebd..e894175f 100644\n--- a/flexible-process-quarkus/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java\n+++ b/flexible-process-quarkus/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java\n\n@@ -16,7 +16,6 @@\n package org.kie.flexible.kogito.example;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.util.HashMap;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2NzkxMw==", "url": "https://github.com/kiegroup/kogito-examples/pull/293#discussion_r450567913", "bodyText": "@ruromero why not simply return the SupportCase object instead of recreating?", "author": "cristianonicolai", "createdAt": "2020-07-07T01:52:31Z", "path": "flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/CommentService.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.flexible.kogito.example.service;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.flexible.kogito.example.model.Comment;\n+import org.kie.flexible.kogito.example.model.State;\n+import org.kie.flexible.kogito.example.model.SupportCase;\n+\n+import static org.kie.flexible.kogito.example.model.State.WAITING_FOR_CUSTOMER;\n+import static org.kie.flexible.kogito.example.model.State.WAITING_FOR_OWNER;\n+\n+@ApplicationScoped\n+public class CommentService {\n+\n+    public SupportCase addCustomerComment(SupportCase supportCase, String comment, String author) {\n+        return addComment(supportCase, author, comment, WAITING_FOR_OWNER);\n+    }\n+\n+    public SupportCase addSupportComment(SupportCase supportCase, String comment, String author) {\n+        return addComment(supportCase, author, comment, WAITING_FOR_CUSTOMER);\n+    }\n+\n+    private SupportCase addComment(SupportCase supportCase, String author, String comment, State newState) {\n+        SupportCase sCase = new SupportCase(supportCase).addComment(new Comment().setAuthor(author).setText(comment));", "originalCommit": "154faaf0a51c375c93979566b6962d1e57b95635", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY5Mjc1Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/293#discussion_r450692756", "bodyText": "I prefer to have immutable objects when possible", "author": "ruromero", "createdAt": "2020-07-07T08:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2NzkxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2ODA1MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/293#discussion_r450568051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public SupportCase close(SupportCase supportCase, int evaluation, String comment) {\n          \n          \n            \n                public SupportCase close(SupportCase supportCase, Integer evaluation, String comment) {", "author": "cristianonicolai", "createdAt": "2020-07-07T01:53:04Z", "path": "flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.flexible.kogito.example.service;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.flexible.kogito.example.model.Questionnaire;\n+import org.kie.flexible.kogito.example.model.State;\n+import org.kie.flexible.kogito.example.model.SupportCase;\n+\n+@ApplicationScoped\n+public class StateService {\n+\n+    public void resolve() {\n+    }\n+\n+    public SupportCase resolve(SupportCase supportCase) {\n+        return new SupportCase(supportCase).setState(State.RESOLVED);\n+    }\n+\n+    public SupportCase close(SupportCase supportCase, int evaluation, String comment) {", "originalCommit": "154faaf0a51c375c93979566b6962d1e57b95635", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0bce19e11ffb25d2710fff2f716b5067c01e016b", "chunk": "diff --git a/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java b/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java\nindex 0ba1873d..087e9514 100644\n--- a/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java\n+++ b/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java\n\n@@ -32,7 +32,7 @@ public class StateService {\n         return new SupportCase(supportCase).setState(State.RESOLVED);\n     }\n \n-    public SupportCase close(SupportCase supportCase, int evaluation, String comment) {\n+    public SupportCase close(SupportCase supportCase, Integer evaluation, String comment) {\n         return new SupportCase(supportCase)\n                 .setQuestionnaire(new Questionnaire().setComment(comment).setEvaluation(evaluation))\n                 .setState(State.CLOSED);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU2ODExNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/293#discussion_r450568116", "bodyText": "same, I guess no need to recreate the object", "author": "cristianonicolai", "createdAt": "2020-07-07T01:53:20Z", "path": "flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.flexible.kogito.example.service;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.kie.flexible.kogito.example.model.Questionnaire;\n+import org.kie.flexible.kogito.example.model.State;\n+import org.kie.flexible.kogito.example.model.SupportCase;\n+\n+@ApplicationScoped\n+public class StateService {\n+\n+    public void resolve() {\n+    }\n+\n+    public SupportCase resolve(SupportCase supportCase) {\n+        return new SupportCase(supportCase).setState(State.RESOLVED);\n+    }\n+\n+    public SupportCase close(SupportCase supportCase, int evaluation, String comment) {\n+        return new SupportCase(supportCase)", "originalCommit": "154faaf0a51c375c93979566b6962d1e57b95635", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0bce19e11ffb25d2710fff2f716b5067c01e016b", "chunk": "diff --git a/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java b/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java\nindex 0ba1873d..087e9514 100644\n--- a/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java\n+++ b/flexible-process-quarkus/src/main/java/org/kie/flexible/kogito/example/service/StateService.java\n\n@@ -32,7 +32,7 @@ public class StateService {\n         return new SupportCase(supportCase).setState(State.RESOLVED);\n     }\n \n-    public SupportCase close(SupportCase supportCase, int evaluation, String comment) {\n+    public SupportCase close(SupportCase supportCase, Integer evaluation, String comment) {\n         return new SupportCase(supportCase)\n                 .setQuestionnaire(new Questionnaire().setComment(comment).setEvaluation(evaluation))\n                 .setState(State.CLOSED);\n"}}, {"oid": "0bce19e11ffb25d2710fff2f716b5067c01e016b", "url": "https://github.com/kiegroup/kogito-examples/commit/0bce19e11ffb25d2710fff2f716b5067c01e016b", "message": "[KOGITO-2423] Apply review changes\n\nSigned-off-by: ruromero <rromerom@redhat.com>", "committedDate": "2020-07-07T11:20:54Z", "type": "commit"}]}