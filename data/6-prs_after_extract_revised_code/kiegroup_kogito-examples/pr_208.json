{"pr_number": 208, "pr_title": "KOGITO-1798: Disable example failing tests with persistence until def\u2026", "pr_createdAt": "2020-04-09T13:56:24Z", "pr_url": "https://github.com/kiegroup/kogito-examples/pull/208", "timeline": [{"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c", "url": "https://github.com/kiegroup/kogito-examples/commit/14802de701c0c2507f1e3b9397b59757377f4c7c", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-14T08:35:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwMzg4Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408003882", "bodyText": "Can you please unify assetions?\nYou seems to use old and new JUnit at the same time.", "author": "sutaakar", "createdAt": "2020-04-14T09:41:38Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;", "originalCommit": "14802de701c0c2507f1e3b9397b59757377f4c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTE1Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408015157", "bodyText": "Done", "author": "Sgitario", "createdAt": "2020-04-14T09:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwMzg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8532e321f7d680fb3a3c3567a76c415a3b633369", "chunk": "diff --git a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java\nindex 77781706..858016b2 100644\n--- a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java\n+++ b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java\n\n@@ -1,7 +1,7 @@\n package org.kie.kogito.examples.demo;\n \n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408006431", "bodyText": "Why did you delete assertEquals(ProcessInstance.STATE_COMPLETED, processInstance.status());", "author": "sutaakar", "createdAt": "2020-04-14T09:45:24Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.auth.SecurityPolicy;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessInstance;\n+import org.kie.kogito.process.ProcessInstances;\n+import org.kie.kogito.process.WorkItem;\n+import org.kie.kogito.services.identity.StaticIdentityProvider;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n+public class OrdersProcessTest {\n+\n+\t@Autowired\n+\t@Qualifier(\"demo.orders\")\n+\tProcess<? extends Model> orderProcess;\n+\n+\t@Autowired\n+\t@Qualifier(\"demo.orderItems\")\n+\tProcess<? extends Model> orderItemsProcess;\n+\n+\tprivate SecurityPolicy policy = SecurityPolicy\n+\t\t\t.of(new StaticIdentityProvider(\"john\", Collections.singletonList(\"managers\")));\n+\n+\t@Test\n+\tpublic void testOrderProcess() {\n+\t\tassertNotNull(orderProcess);\n+\n+\t\tModel m = orderProcess.createModel();\n+\t\tMap<String, Object> parameters = new HashMap<>();\n+\t\tparameters.put(\"approver\", \"john\");\n+\t\tparameters.put(\"order\", new Order(\"12345\", false, 0.0));\n+\t\tm.fromMap(parameters);\n+\n+\t\tProcessInstance<?> processInstance = orderProcess.createInstance(m);\n+\t\tprocessInstance.start();\n+\n+\t\tassertEquals(ProcessInstance.STATE_ACTIVE, processInstance.status());\n+\t\tModel result = (Model) processInstance.variables();\n+\t\tassertEquals(2, result.toMap().size());\n+\t\tassertTrue(((Order) result.toMap().get(\"order\")).getTotal() > 0);\n+\n+\t\tProcessInstances<? extends Model> orderItemProcesses = orderItemsProcess.instances();\n+\t\tassertEquals(1, orderItemProcesses.values().size());\n+\n+\t\tProcessInstance<?> childProcessInstance = orderItemProcesses.values().iterator().next();\n+\n+\t\tList<WorkItem> workItems = childProcessInstance.workItems(policy);\n+\t\tassertEquals(1, workItems.size());\n+\n+\t\tchildProcessInstance.completeWorkItem(workItems.get(0).getId(), null, policy);\n+\n+\t\tassertEquals(ProcessInstance.STATE_COMPLETED, childProcessInstance.status());", "originalCommit": "14802de701c0c2507f1e3b9397b59757377f4c7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxMjU2MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408012560", "bodyText": "It was failing and looking at the Quarkus version, this line was removed as part of https://issues.redhat.com/browse/KOGITO-173.", "author": "Sgitario", "createdAt": "2020-04-14T09:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNjMyNw==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408016327", "bodyText": "hmm, ok\nbut why it doesn't fail in the test below? The line is there.", "author": "sutaakar", "createdAt": "2020-04-14T10:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxODY2MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408018660", "bodyText": "I didn't take a look, but I'm sure this depends on retriggering processes.", "author": "Sgitario", "createdAt": "2020-04-14T10:05:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyMjE4Nw==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408022187", "bodyText": "ok, can you please take a look then?", "author": "sutaakar", "createdAt": "2020-04-14T10:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MzM2OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408043369", "bodyText": "Raised: https://issues.redhat.com/browse/KOGITO-1848", "author": "Sgitario", "createdAt": "2020-04-14T10:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8532e321f7d680fb3a3c3567a76c415a3b633369", "chunk": "diff --git a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java\nindex 77781706..858016b2 100644\n--- a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java\n+++ b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java\n\n@@ -1,7 +1,7 @@\n package org.kie.kogito.examples.demo;\n \n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n"}}, {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369", "url": "https://github.com/kiegroup/kogito-examples/commit/8532e321f7d680fb3a3c3567a76c415a3b633369", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-14T09:58:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTE4Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408029182", "bodyText": "Wouldn't it have more sense to keep there AFTER_EACH_TEST_METHOD?", "author": "sutaakar", "createdAt": "2020-04-14T10:22:56Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java", "diffHunk": "@@ -0,0 +1,303 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method", "originalCommit": "8532e321f7d680fb3a3c3567a76c415a3b633369", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzMjA4Ng==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408032086", "bodyText": "changed .....", "author": "Sgitario", "createdAt": "2020-04-14T10:28:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "chunk": "diff --git a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java\nindex e5931148..284f0587 100644\n--- a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java\n+++ b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java\n\n@@ -28,7 +28,7 @@ import io.restassured.http.ContentType;\n \n @ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n-@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method\n+@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n public class OrdersRestTest {\n \n \tprivate static String orderPayload = \"{\\\"approver\\\" : \\\"john\\\", \\\"order\\\" : {\\\"orderNumber\\\" : \\\"12345\\\", \\\"shipped\\\" : false}}\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408029722", "bodyText": "IMHO it should be rather placed in AfterEach so the test cleans up after it has been executed.", "author": "sutaakar", "createdAt": "2020-04-14T10:23:54Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java", "diffHunk": "@@ -0,0 +1,303 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method\n+public class OrdersRestTest {\n+\n+\tprivate static String orderPayload = \"{\\\"approver\\\" : \\\"john\\\", \\\"order\\\" : {\\\"orderNumber\\\" : \\\"12345\\\", \\\"shipped\\\" : false}}\";\n+\n+\t@Inject\n+\t@Named(\"demo.orders\")\n+\tProcess<? extends Model> orderProcess;\n+\n+\t@Inject\n+\t@Named(\"demo.orderItems\")\n+\tProcess<? extends Model> orderItemsProcess;\n+\n+\t@LocalServerPort\n+\tint port;\n+\n+\t@BeforeEach\n+\tpublic void setUp() {\n+\t\tRestAssured.port = port;\n+\n+        // need it when running with persistence\n+        orderProcess.instances().values().forEach(pi -> pi.abort());", "originalCommit": "8532e321f7d680fb3a3c3567a76c415a3b633369", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzMTI4NA==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408031284", "bodyText": "In Quarkus version, it was being done before each test and it does not really matter if done before or after....", "author": "Sgitario", "createdAt": "2020-04-14T10:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzNDM0OA==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408034348", "bodyText": "Yes, though it may affect other tests when the cleanup is done in Before phase.", "author": "sutaakar", "createdAt": "2020-04-14T10:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0NTIxMw==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408045213", "bodyText": "It's not going to be an issue since no more tests are using the order process, but will do.", "author": "Sgitario", "createdAt": "2020-04-14T10:51:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNTg1MQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408235851", "bodyText": "I usually prefer to have the clean up done in the before method. That helps if you run let's say a separated service ( infinispan ? ) so the state is always the expected one when the test executes.", "author": "cristianonicolai", "createdAt": "2020-04-14T15:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxNzMzNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408617336", "bodyText": "I agree with you. Usually, I do this stuff in the before methods as a setup configuration of my test suite. What do you think about @sutaakar ? Let me know whether reverting this or keeping it like this.", "author": "Sgitario", "createdAt": "2020-04-15T06:50:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3NzIwMg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408777202", "bodyText": "@Sgitario I don't have a strong preference in that, if you think it is better to do the cleanup before then feel free to do so.", "author": "sutaakar", "createdAt": "2020-04-15T11:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NDI2OQ==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408784269", "bodyText": "In order to avoid to have an afterEach and a beforeEach both in the Spring Boot examples, I've changed it to be done in the beforeEach method as at the beginning.", "author": "Sgitario", "createdAt": "2020-04-15T11:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}], "type": "inlineReview", "revised_code": {"commit": "9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "chunk": "diff --git a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java\nindex e5931148..284f0587 100644\n--- a/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java\n+++ b/process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java\n\n@@ -28,7 +28,7 @@ import io.restassured.http.ContentType;\n \n @ExtendWith(SpringExtension.class)\n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n-@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method\n+@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n public class OrdersRestTest {\n \n \tprivate static String orderPayload = \"{\\\"approver\\\" : \\\"john\\\", \\\"order\\\" : {\\\"orderNumber\\\" : \\\"12345\\\", \\\"shipped\\\" : false}}\";\n"}}, {"oid": "9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "url": "https://github.com/kiegroup/kogito-examples/commit/9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-14T10:27:48Z", "type": "forcePushed"}, {"oid": "3d5a3ecb8ca0e84d2472bdd8fa43a25fecc5a5f8", "url": "https://github.com/kiegroup/kogito-examples/commit/3d5a3ecb8ca0e84d2472bdd8fa43a25fecc5a5f8", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-14T10:43:47Z", "type": "forcePushed"}, {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379", "url": "https://github.com/kiegroup/kogito-examples/commit/94a49c23e28aa46407372de4f3c8178dedcaf379", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-14T10:55:51Z", "type": "forcePushed"}, {"oid": "ba140456694b353e2d9c9734e2910a309771f664", "url": "https://github.com/kiegroup/kogito-examples/commit/ba140456694b353e2d9c9734e2910a309771f664", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-14T14:40:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNjgxNg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408236816", "bodyText": "missing headers?", "author": "cristianonicolai", "createdAt": "2020-04-14T15:39:19Z", "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.kie.kogito.examples.demo;", "originalCommit": "ba140456694b353e2d9c9734e2910a309771f664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxNjI1MA==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408616250", "bodyText": "I don't see any header in the process-quarkus-example and process-springboot-example projects at least. Should we add them to all the sources? If so, I guess this should be done as part of another task. What do you think about?", "author": "Sgitario", "createdAt": "2020-04-15T06:48:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNjgxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc5NTk5Mg==", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408795992", "bodyText": "Raised a ticket for adding the headers: https://issues.redhat.com/browse/KOGITO-1866", "author": "Sgitario", "createdAt": "2020-04-15T12:15:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNjgxNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "url": "https://github.com/kiegroup/kogito-examples/commit/13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-15T11:52:17Z", "type": "commit"}, {"oid": "13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "url": "https://github.com/kiegroup/kogito-examples/commit/13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed", "committedDate": "2020-04-15T11:52:17Z", "type": "forcePushed"}]}