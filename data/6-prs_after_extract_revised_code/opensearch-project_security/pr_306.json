{"pr_number": 306, "pr_title": "AuditLog: Refactor to audit config", "pr_createdAt": "2020-03-20T22:38:25Z", "pr_url": "https://github.com/opensearch-project/security/pull/306", "timeline": [{"oid": "8445d07d4757a95e162790d280afff7edd2b8db1", "url": "https://github.com/opensearch-project/security/commit/8445d07d4757a95e162790d280afff7edd2b8db1", "message": "Refactor to use audit config", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "65a7534165c71427f4853ba747eb5136ef533b07", "url": "https://github.com/opensearch-project/security/commit/65a7534165c71427f4853ba747eb5136ef533b07", "message": "Address code reviews", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "44fd98532ba47d8221242f4eb7e03a567d5ea104", "url": "https://github.com/opensearch-project/security/commit/44fd98532ba47d8221242f4eb7e03a567d5ea104", "message": "Address code reviews", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "b4c7bcad42812940bfe5f9f78a5da894e5e84e8b", "url": "https://github.com/opensearch-project/security/commit/b4c7bcad42812940bfe5f9f78a5da894e5e84e8b", "message": "Remove unnecessary imports", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "8a83821cb3897e65df124e7503128b84fe21e565", "url": "https://github.com/opensearch-project/security/commit/8a83821cb3897e65df124e7503128b84fe21e565", "message": "Address code reviews", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "bbe7c2da641319c79eb92a1104a43413c3c4a0ea", "url": "https://github.com/opensearch-project/security/commit/bbe7c2da641319c79eb92a1104a43413c3c4a0ea", "message": "Address code reviews", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "8c59f64160f37b13c91e86735f789248b2a19edc", "url": "https://github.com/opensearch-project/security/commit/8c59f64160f37b13c91e86735f789248b2a19edc", "message": "Address code reviews", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "8aebeb4a35f9e3c1ab9022c888e33f5a63a9f851", "url": "https://github.com/opensearch-project/security/commit/8aebeb4a35f9e3c1ab9022c888e33f5a63a9f851", "message": "Change grammar of logs", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "343a56ad406831b92b6a6693f976d6bef2cf7f37", "url": "https://github.com/opensearch-project/security/commit/343a56ad406831b92b6a6693f976d6bef2cf7f37", "message": "Revert back to log", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "505a2495ee2b30f18e4a68d0bef49b646ed396bd", "url": "https://github.com/opensearch-project/security/commit/505a2495ee2b30f18e4a68d0bef49b646ed396bd", "message": "Update log statement for open distro security index", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "8080e0db8af98567582bb0f19cba8bc1be33c25a", "url": "https://github.com/opensearch-project/security/commit/8080e0db8af98567582bb0f19cba8bc1be33c25a", "message": "Remove opendistro index from audit log config", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "779ffa856dc6717f69378cc6609d4a91846475e9", "url": "https://github.com/opensearch-project/security/commit/779ffa856dc6717f69378cc6609d4a91846475e9", "message": "Update tests", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "9ccb2a49090c10944e063acc5c96840c91a4c3f4", "url": "https://github.com/opensearch-project/security/commit/9ccb2a49090c10944e063acc5c96840c91a4c3f4", "message": "move log messages", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"oid": "02410371433a36a60a8ab3bcfce60ee1cf515cee", "url": "https://github.com/opensearch-project/security/commit/02410371433a36a60a8ab3bcfce60ee1cf515cee", "message": "Move audit config to inner class AuditConfig.Filter", "committedDate": "2020-04-04T01:31:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Njk1OQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r403496959", "bodyText": "opendistrosecurityIndex is not used.", "author": "vrozov", "createdAt": "2020-04-04T17:50:15Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,206 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class AuditConfig {\n+    public static class Filter {\n+        private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n+        private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n+                Arrays.asList(AuditCategory.AUTHENTICATED.toString(),\n+                        AuditCategory.GRANTED_PRIVILEGES.toString());\n+\n+        private final boolean isRestApiAuditEnabled;\n+        private final boolean isTransportApiAuditEnabled;\n+        private final boolean resolveBulkRequests;\n+        private final boolean logRequestBody;\n+        private final boolean resolveIndices;\n+        private final boolean excludeSensitiveHeaders;\n+        private final Set<String> ignoredAuditUsers;\n+        private final Set<String> ignoredComplianceUsersForRead;\n+        private final Set<String> ignoredComplianceUsersForWrite;\n+        private final Set<String> ignoreAuditRequests;\n+        private final EnumSet<AuditCategory> disabledRestCategories;\n+        private final EnumSet<AuditCategory> disabledTransportCategories;\n+\n+        private Filter(final boolean isRestApiAuditEnabled,\n+                       final boolean isTransportApiAuditEnabled,\n+                       final boolean resolveBulkRequests,\n+                       final boolean logRequestBody,\n+                       final boolean resolveIndices,\n+                       final boolean excludeSensitiveHeaders,\n+                       final Set<String> ignoredAuditUsers,\n+                       final Set<String> ignoredComplianceUsersForRead,\n+                       final Set<String> ignoredComplianceUsersForWrite,\n+                       final Set<String> ignoredAuditRequests,\n+                       final EnumSet<AuditCategory> disabledRestCategories,\n+                       final EnumSet<AuditCategory> disabledTransportCategories) {\n+            this.isRestApiAuditEnabled = isRestApiAuditEnabled;\n+            this.isTransportApiAuditEnabled = isTransportApiAuditEnabled;\n+            this.resolveBulkRequests = resolveBulkRequests;\n+            this.logRequestBody = logRequestBody;\n+            this.resolveIndices = resolveIndices;\n+            this.excludeSensitiveHeaders = excludeSensitiveHeaders;\n+            this.ignoredAuditUsers = ignoredAuditUsers;\n+            this.ignoredComplianceUsersForRead = ignoredComplianceUsersForRead;\n+            this.ignoredComplianceUsersForWrite = ignoredComplianceUsersForWrite;\n+            this.ignoreAuditRequests = ignoredAuditRequests;\n+            this.disabledRestCategories = disabledRestCategories;\n+            this.disabledTransportCategories = disabledTransportCategories;\n+        }\n+\n+        public static Filter from(Settings settings) {\n+            final boolean isRestApiAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n+            final boolean isTransportAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n+            final boolean resolveBulkRequests = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_BULK_REQUESTS, false);\n+            final boolean logRequestBody = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_LOG_REQUEST_BODY, true);\n+            final boolean resolveIndices = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_INDICES, true);\n+            final boolean excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+            final String opendistrosecurityIndex = settings.get(ConfigConstants.OPENDISTRO_SECURITY_CONFIG_INDEX_NAME, ConfigConstants.OPENDISTRO_SECURITY_DEFAULT_CONFIG_INDEX);", "originalCommit": "02410371433a36a60a8ab3bcfce60ee1cf515cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\nindex e656caae..ffc715bf 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n\n@@ -65,7 +65,6 @@ public class AuditConfig {\n             final boolean logRequestBody = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_LOG_REQUEST_BODY, true);\n             final boolean resolveIndices = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_INDICES, true);\n             final boolean excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n-            final String opendistrosecurityIndex = settings.get(ConfigConstants.OPENDISTRO_SECURITY_CONFIG_INDEX_NAME, ConfigConstants.OPENDISTRO_SECURITY_DEFAULT_CONFIG_INDEX);\n \n             final EnumSet<AuditCategory> disabledRestCategories = AuditCategory.parse(getSettingAsList(\n                     settings,\n"}}, {"oid": "83bdfb791bb857530d27e3db0347129973f8d9ff", "url": "https://github.com/opensearch-project/security/commit/83bdfb791bb857530d27e3db0347129973f8d9ff", "message": "Remove unused opendistro security index", "committedDate": "2020-04-05T01:10:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3ODQ3NQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405178475", "bodyText": "[suggestion]: we might consider including Lombok as a dependency in the future as it will simplify adding constructors, setters, getters and builders. Created issue https://github.com/opendistro-for-elasticsearch/security/issues/363", "author": "debjanibnrj", "createdAt": "2020-04-07T23:48:13Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class AuditConfig {\n+    public static class Filter {\n+        private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n+        private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n+                Arrays.asList(AuditCategory.AUTHENTICATED.toString(),\n+                        AuditCategory.GRANTED_PRIVILEGES.toString());\n+\n+        private final boolean isRestApiAuditEnabled;\n+        private final boolean isTransportApiAuditEnabled;\n+        private final boolean resolveBulkRequests;\n+        private final boolean logRequestBody;\n+        private final boolean resolveIndices;\n+        private final boolean excludeSensitiveHeaders;\n+        private final Set<String> ignoredAuditUsers;\n+        private final Set<String> ignoredComplianceUsersForRead;\n+        private final Set<String> ignoredComplianceUsersForWrite;\n+        private final Set<String> ignoreAuditRequests;\n+        private final EnumSet<AuditCategory> disabledRestCategories;\n+        private final EnumSet<AuditCategory> disabledTransportCategories;\n+\n+        private Filter(final boolean isRestApiAuditEnabled,", "originalCommit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "442470f798c725832252b72cd41069d850cf5a20", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\nindex ffc715bf..38ae51fa 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n\n@@ -12,7 +12,15 @@ import java.util.EnumSet;\n import java.util.List;\n import java.util.Set;\n \n+/**\n+ * Class represents configuration for audit logging.\n+ */\n public class AuditConfig {\n+\n+    /**\n+     * Filter represents set of filtering configuration settings for audit logging.\n+     * Audit logger will use these settings to determine what audit logs are to be generated.\n+     */\n     public static class Filter {\n         private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n         private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3OTUyNQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405179525", "bodyText": "just curious, why does this flag default to false and the others to true?", "author": "debjanibnrj", "createdAt": "2020-04-07T23:51:36Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class AuditConfig {\n+    public static class Filter {\n+        private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n+        private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n+                Arrays.asList(AuditCategory.AUTHENTICATED.toString(),\n+                        AuditCategory.GRANTED_PRIVILEGES.toString());\n+\n+        private final boolean isRestApiAuditEnabled;\n+        private final boolean isTransportApiAuditEnabled;\n+        private final boolean resolveBulkRequests;\n+        private final boolean logRequestBody;\n+        private final boolean resolveIndices;\n+        private final boolean excludeSensitiveHeaders;\n+        private final Set<String> ignoredAuditUsers;\n+        private final Set<String> ignoredComplianceUsersForRead;\n+        private final Set<String> ignoredComplianceUsersForWrite;\n+        private final Set<String> ignoreAuditRequests;\n+        private final EnumSet<AuditCategory> disabledRestCategories;\n+        private final EnumSet<AuditCategory> disabledTransportCategories;\n+\n+        private Filter(final boolean isRestApiAuditEnabled,\n+                       final boolean isTransportApiAuditEnabled,\n+                       final boolean resolveBulkRequests,\n+                       final boolean logRequestBody,\n+                       final boolean resolveIndices,\n+                       final boolean excludeSensitiveHeaders,\n+                       final Set<String> ignoredAuditUsers,\n+                       final Set<String> ignoredComplianceUsersForRead,\n+                       final Set<String> ignoredComplianceUsersForWrite,\n+                       final Set<String> ignoredAuditRequests,\n+                       final EnumSet<AuditCategory> disabledRestCategories,\n+                       final EnumSet<AuditCategory> disabledTransportCategories) {\n+            this.isRestApiAuditEnabled = isRestApiAuditEnabled;\n+            this.isTransportApiAuditEnabled = isTransportApiAuditEnabled;\n+            this.resolveBulkRequests = resolveBulkRequests;\n+            this.logRequestBody = logRequestBody;\n+            this.resolveIndices = resolveIndices;\n+            this.excludeSensitiveHeaders = excludeSensitiveHeaders;\n+            this.ignoredAuditUsers = ignoredAuditUsers;\n+            this.ignoredComplianceUsersForRead = ignoredComplianceUsersForRead;\n+            this.ignoredComplianceUsersForWrite = ignoredComplianceUsersForWrite;\n+            this.ignoreAuditRequests = ignoredAuditRequests;\n+            this.disabledRestCategories = disabledRestCategories;\n+            this.disabledTransportCategories = disabledTransportCategories;\n+        }\n+\n+        public static Filter from(Settings settings) {\n+            final boolean isRestApiAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n+            final boolean isTransportAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n+            final boolean resolveBulkRequests = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_BULK_REQUESTS, false);", "originalCommit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4OTEwNg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405189106", "bodyText": "Retained the existing default.\nResolving bulk requests results in additional computation hence user must intentionally set to true.", "author": "sujithvm", "createdAt": "2020-04-08T00:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3OTUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "442470f798c725832252b72cd41069d850cf5a20", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\nindex ffc715bf..38ae51fa 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n\n@@ -12,7 +12,15 @@ import java.util.EnumSet;\n import java.util.List;\n import java.util.Set;\n \n+/**\n+ * Class represents configuration for audit logging.\n+ */\n public class AuditConfig {\n+\n+    /**\n+     * Filter represents set of filtering configuration settings for audit logging.\n+     * Audit logger will use these settings to determine what audit logs are to be generated.\n+     */\n     public static class Filter {\n         private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n         private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MDUzNQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405180535", "bodyText": "Would be useful to provide doc comments for classes in the future.", "author": "debjanibnrj", "createdAt": "2020-04-07T23:54:47Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class AuditConfig {", "originalCommit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5ODU1Nw==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405198557", "bodyText": "Add private constructor for AuditConfig to avoid class misuse. It is a container for other classes inside AuditConfig.", "author": "vrozov", "createdAt": "2020-04-08T00:57:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MDUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "442470f798c725832252b72cd41069d850cf5a20", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\nindex ffc715bf..38ae51fa 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n\n@@ -12,7 +12,15 @@ import java.util.EnumSet;\n import java.util.List;\n import java.util.Set;\n \n+/**\n+ * Class represents configuration for audit logging.\n+ */\n public class AuditConfig {\n+\n+    /**\n+     * Filter represents set of filtering configuration settings for audit logging.\n+     * Audit logger will use these settings to determine what audit logs are to be generated.\n+     */\n     public static class Filter {\n         private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n         private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MTA2Nw==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405181067", "bodyText": "I see us using this function and then converting the output to a set. Any reason why we don't return a Set by default.", "author": "debjanibnrj", "createdAt": "2020-04-07T23:56:35Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class AuditConfig {\n+    public static class Filter {\n+        private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n+        private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n+                Arrays.asList(AuditCategory.AUTHENTICATED.toString(),\n+                        AuditCategory.GRANTED_PRIVILEGES.toString());\n+\n+        private final boolean isRestApiAuditEnabled;\n+        private final boolean isTransportApiAuditEnabled;\n+        private final boolean resolveBulkRequests;\n+        private final boolean logRequestBody;\n+        private final boolean resolveIndices;\n+        private final boolean excludeSensitiveHeaders;\n+        private final Set<String> ignoredAuditUsers;\n+        private final Set<String> ignoredComplianceUsersForRead;\n+        private final Set<String> ignoredComplianceUsersForWrite;\n+        private final Set<String> ignoreAuditRequests;\n+        private final EnumSet<AuditCategory> disabledRestCategories;\n+        private final EnumSet<AuditCategory> disabledTransportCategories;\n+\n+        private Filter(final boolean isRestApiAuditEnabled,\n+                       final boolean isTransportApiAuditEnabled,\n+                       final boolean resolveBulkRequests,\n+                       final boolean logRequestBody,\n+                       final boolean resolveIndices,\n+                       final boolean excludeSensitiveHeaders,\n+                       final Set<String> ignoredAuditUsers,\n+                       final Set<String> ignoredComplianceUsersForRead,\n+                       final Set<String> ignoredComplianceUsersForWrite,\n+                       final Set<String> ignoredAuditRequests,\n+                       final EnumSet<AuditCategory> disabledRestCategories,\n+                       final EnumSet<AuditCategory> disabledTransportCategories) {\n+            this.isRestApiAuditEnabled = isRestApiAuditEnabled;\n+            this.isTransportApiAuditEnabled = isTransportApiAuditEnabled;\n+            this.resolveBulkRequests = resolveBulkRequests;\n+            this.logRequestBody = logRequestBody;\n+            this.resolveIndices = resolveIndices;\n+            this.excludeSensitiveHeaders = excludeSensitiveHeaders;\n+            this.ignoredAuditUsers = ignoredAuditUsers;\n+            this.ignoredComplianceUsersForRead = ignoredComplianceUsersForRead;\n+            this.ignoredComplianceUsersForWrite = ignoredComplianceUsersForWrite;\n+            this.ignoreAuditRequests = ignoredAuditRequests;\n+            this.disabledRestCategories = disabledRestCategories;\n+            this.disabledTransportCategories = disabledTransportCategories;\n+        }\n+\n+        public static Filter from(Settings settings) {\n+            final boolean isRestApiAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n+            final boolean isTransportAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n+            final boolean resolveBulkRequests = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_BULK_REQUESTS, false);\n+            final boolean logRequestBody = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_LOG_REQUEST_BODY, true);\n+            final boolean resolveIndices = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_INDICES, true);\n+            final boolean excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+\n+            final EnumSet<AuditCategory> disabledRestCategories = AuditCategory.parse(getSettingAsList(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES,\n+                    DEFAULT_DISABLED_CATEGORIES,\n+                    true));\n+\n+            final EnumSet<AuditCategory> disabledTransportCategories = AuditCategory.parse(getSettingAsList(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_TRANSPORT_CATEGORIES,\n+                    DEFAULT_DISABLED_CATEGORIES,\n+                    true));\n+\n+            final Set<String> ignoredAuditUsers = ImmutableSet.copyOf(getSettingAsList(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false));\n+\n+            final Set<String> ignoredComplianceUsersForRead = ImmutableSet.copyOf(getSettingAsList(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_HISTORY_READ_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false));\n+\n+            final Set<String> ignoredComplianceUsersForWrite = ImmutableSet.copyOf(getSettingAsList(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_HISTORY_WRITE_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false));\n+\n+            final Set<String> ignoreAuditRequests = ImmutableSet.copyOf(settings.getAsList(\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS,\n+                    Collections.emptyList()));\n+\n+            return new Filter(isRestApiAuditEnabled,\n+                    isTransportAuditEnabled,\n+                    resolveBulkRequests,\n+                    logRequestBody,\n+                    resolveIndices,\n+                    excludeSensitiveHeaders,\n+                    ignoredAuditUsers,\n+                    ignoredComplianceUsersForRead,\n+                    ignoredComplianceUsersForWrite,\n+                    ignoreAuditRequests,\n+                    disabledRestCategories,\n+                    disabledTransportCategories);\n+        }\n+\n+        private static List<String> getSettingAsList(final Settings settings, final String key, final List<String> defaultList, final boolean ignoreCaseForNone) {", "originalCommit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5Mjk2Mg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405192962", "bodyText": "Sounds good!", "author": "sujithvm", "createdAt": "2020-04-08T00:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MTA2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwNTYwMg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405205602", "bodyText": "Converting the output to a set has an additional cost when it is passed to AuditCategory.parse() as it will be constructing a different set and checking for uniqueness again (not a big deal).", "author": "vrozov", "createdAt": "2020-04-08T01:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MTA2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "442470f798c725832252b72cd41069d850cf5a20", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\nindex ffc715bf..38ae51fa 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java\n\n@@ -12,7 +12,15 @@ import java.util.EnumSet;\n import java.util.List;\n import java.util.Set;\n \n+/**\n+ * Class represents configuration for audit logging.\n+ */\n public class AuditConfig {\n+\n+    /**\n+     * Filter represents set of filtering configuration settings for audit logging.\n+     * Audit logger will use these settings to determine what audit logs are to be generated.\n+     */\n     public static class Filter {\n         private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n         private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405182010", "bodyText": "nit: maybe rename this to logger. auditConfigFilter.log(log) was a little difficult for me to understand", "author": "debjanibnrj", "createdAt": "2020-04-07T23:59:28Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -80,33 +79,16 @@\n import com.google.common.io.BaseEncoding;\n \n public abstract class AbstractAuditLog implements AuditLog {\n-\n-    private static final List<String> DEFAULT_DISABLED_CATEGORIES = Arrays.asList(AuditCategory.AUTHENTICATED.toString(), AuditCategory.GRANTED_PRIVILEGES.toString());\n-\n     protected final Logger log = LogManager.getLogger(this.getClass());", "originalCommit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5MDM2MA==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405190360", "bodyText": "I had renamed this to logger. @vrozov wanted it renamed back to log", "author": "sujithvm", "createdAt": "2020-04-08T00:28:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5OTM1Nw==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405199357", "bodyText": "@debjanibnrj It is more consistent with how Logger is named in other places and avoids unnecessary diffs.", "author": "vrozov", "createdAt": "2020-04-08T01:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMTUxMg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405201512", "bodyText": "@vrozov Fair point with reducing diffs but auditConfigFilter.log(log) would be confusing to anyone especially because this is around audit \"logging\"", "author": "sujithvm", "createdAt": "2020-04-08T01:09:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwNzI2Ng==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405207266", "bodyText": "IMO, it is a problem with method name, not Logger name. Rename AuditConfig.Filter.log().", "author": "vrozov", "createdAt": "2020-04-08T01:30:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwODM0Mw==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405208343", "bodyText": "It is not a static function if thats what you mean.", "author": "sujithvm", "createdAt": "2020-04-08T01:35:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxMDMyNQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405210325", "bodyText": "I mean that the minor readability problem is caused by AuditConfig.Filter class method name log(). It is not important whether it is static or not.", "author": "vrozov", "createdAt": "2020-04-08T01:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxMjYyMQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405212621", "bodyText": "If you want it renamed to something specific I will rename as you had previously suggested to use log() otherwise let's leave this. I m fine with this.", "author": "sujithvm", "createdAt": "2020-04-08T01:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxNTg4NA==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405215884", "bodyText": "I am fine the current function name or with a different function name if you want to add readability. I strongly prefer log not to be renamed to logger.", "author": "vrozov", "createdAt": "2020-04-08T02:03:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyNjc2Mg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405226762", "bodyText": "@vrozov Can you approve this PR in that case ?", "author": "sujithvm", "createdAt": "2020-04-08T02:45:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjAxMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MzI2MA==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405183260", "bodyText": "wildcard imports are generally considered bad practice.", "author": "debjanibnrj", "createdAt": "2020-04-08T00:03:42Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigFilterTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.common.settings.Settings;\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.Set;\n+\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.*;", "originalCommit": "83bdfb791bb857530d27e3db0347129973f8d9ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5MTc3NQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405191775", "bodyText": "I assumed it is generally fine to have wildcard imports for constants/values.\nRemoving this would add 10 other import lines.", "author": "sujithvm", "createdAt": "2020-04-08T00:32:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MzI2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5MjcwMQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405192701", "bodyText": "Seeing as your using most audit categories for the tests this is a fair point. For import static org.junit.Assert.*; it may be better to specify the specific imports.", "author": "debjanibnrj", "createdAt": "2020-04-08T00:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MzI2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5NTg5Ng==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405195896", "bodyText": "Should probably write a checkstyle rule for this", "author": "sujithvm", "createdAt": "2020-04-08T00:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MzI2MA=="}], "type": "inlineReview", "revised_code": {"commit": "442470f798c725832252b72cd41069d850cf5a20", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigFilterTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigFilterTest.java\nindex 2885fc5f..cea7a6e3 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigFilterTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigFilterTest.java\n\n@@ -10,7 +10,13 @@ import java.util.Collections;\n import java.util.EnumSet;\n import java.util.Set;\n \n-import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.*;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.AUTHENTICATED;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.GRANTED_PRIVILEGES;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.BAD_HEADERS;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.SSL_EXCEPTION;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.FAILED_LOGIN;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.MISSING_PRIVILEGES;\n+\n import static org.junit.Assert.*;\n \n public class AuditConfigFilterTest {\n"}}, {"oid": "442470f798c725832252b72cd41069d850cf5a20", "url": "https://github.com/opensearch-project/security/commit/442470f798c725832252b72cd41069d850cf5a20", "message": "Address code reviews", "committedDate": "2020-04-08T00:49:18Z", "type": "commit"}, {"oid": "9fee10cde967b2cf3c942abb25614e94de2972c1", "url": "https://github.com/opensearch-project/security/commit/9fee10cde967b2cf3c942abb25614e94de2972c1", "message": "More specific imports", "committedDate": "2020-04-08T01:00:54Z", "type": "commit"}, {"oid": "60cf91df686ae5833494df60776862df078fad1a", "url": "https://github.com/opensearch-project/security/commit/60cf91df686ae5833494df60776862df078fad1a", "message": "Add private constructor", "committedDate": "2020-04-08T01:24:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyODcyNg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405228726", "bodyText": "Consider  moving this method to AuditConfig from AuditConfig.Filter", "author": "vrozov", "createdAt": "2020-04-08T02:52:56Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,268 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Class represents configuration for audit logging.\n+ */\n+public class AuditConfig {\n+\n+    private AuditConfig() { }\n+\n+    /**\n+     * Filter represents set of filtering configuration settings for audit logging.\n+     * Audit logger will use these settings to determine what audit logs are to be generated.\n+     */\n+    public static class Filter {\n+        private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n+        private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n+                Arrays.asList(AuditCategory.AUTHENTICATED.toString(),\n+                        AuditCategory.GRANTED_PRIVILEGES.toString());\n+\n+        private final boolean isRestApiAuditEnabled;\n+        private final boolean isTransportApiAuditEnabled;\n+        private final boolean resolveBulkRequests;\n+        private final boolean logRequestBody;\n+        private final boolean resolveIndices;\n+        private final boolean excludeSensitiveHeaders;\n+        private final Set<String> ignoredAuditUsers;\n+        private final Set<String> ignoredComplianceUsersForRead;\n+        private final Set<String> ignoredComplianceUsersForWrite;\n+        private final Set<String> ignoreAuditRequests;\n+        private final EnumSet<AuditCategory> disabledRestCategories;\n+        private final EnumSet<AuditCategory> disabledTransportCategories;\n+\n+        private Filter(final boolean isRestApiAuditEnabled,\n+                       final boolean isTransportApiAuditEnabled,\n+                       final boolean resolveBulkRequests,\n+                       final boolean logRequestBody,\n+                       final boolean resolveIndices,\n+                       final boolean excludeSensitiveHeaders,\n+                       final Set<String> ignoredAuditUsers,\n+                       final Set<String> ignoredComplianceUsersForRead,\n+                       final Set<String> ignoredComplianceUsersForWrite,\n+                       final Set<String> ignoredAuditRequests,\n+                       final EnumSet<AuditCategory> disabledRestCategories,\n+                       final EnumSet<AuditCategory> disabledTransportCategories) {\n+            this.isRestApiAuditEnabled = isRestApiAuditEnabled;\n+            this.isTransportApiAuditEnabled = isTransportApiAuditEnabled;\n+            this.resolveBulkRequests = resolveBulkRequests;\n+            this.logRequestBody = logRequestBody;\n+            this.resolveIndices = resolveIndices;\n+            this.excludeSensitiveHeaders = excludeSensitiveHeaders;\n+            this.ignoredAuditUsers = ignoredAuditUsers;\n+            this.ignoredComplianceUsersForRead = ignoredComplianceUsersForRead;\n+            this.ignoredComplianceUsersForWrite = ignoredComplianceUsersForWrite;\n+            this.ignoreAuditRequests = ignoredAuditRequests;\n+            this.disabledRestCategories = disabledRestCategories;\n+            this.disabledTransportCategories = disabledTransportCategories;\n+        }\n+\n+        /**\n+         * Generate audit logging configuration from settings defined in elasticsearch.yml\n+         * @param settings settings\n+         * @return audit configuration filter\n+         */\n+        public static Filter from(Settings settings) {\n+            final boolean isRestApiAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n+            final boolean isTransportAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n+            final boolean resolveBulkRequests = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_BULK_REQUESTS, false);\n+            final boolean logRequestBody = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_LOG_REQUEST_BODY, true);\n+            final boolean resolveIndices = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_INDICES, true);\n+            final boolean excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+\n+            final EnumSet<AuditCategory> disabledRestCategories = AuditCategory.parse(getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES,\n+                    DEFAULT_DISABLED_CATEGORIES,\n+                    true));\n+\n+            final EnumSet<AuditCategory> disabledTransportCategories = AuditCategory.parse(getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_TRANSPORT_CATEGORIES,\n+                    DEFAULT_DISABLED_CATEGORIES,\n+                    true));\n+\n+            final Set<String> ignoredAuditUsers = getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false);\n+\n+            final Set<String> ignoredComplianceUsersForRead = getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_HISTORY_READ_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false);\n+\n+            final Set<String> ignoredComplianceUsersForWrite = getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_HISTORY_WRITE_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false);\n+\n+            final Set<String> ignoreAuditRequests = ImmutableSet.copyOf(settings.getAsList(\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS,\n+                    Collections.emptyList()));\n+\n+            return new Filter(isRestApiAuditEnabled,\n+                    isTransportAuditEnabled,\n+                    resolveBulkRequests,\n+                    logRequestBody,\n+                    resolveIndices,\n+                    excludeSensitiveHeaders,\n+                    ignoredAuditUsers,\n+                    ignoredComplianceUsersForRead,\n+                    ignoredComplianceUsersForWrite,\n+                    ignoreAuditRequests,\n+                    disabledRestCategories,\n+                    disabledTransportCategories);\n+        }\n+\n+        private static Set<String> getSettingAsSet(final Settings settings, final String key, final List<String> defaultList, final boolean ignoreCaseForNone) {", "originalCommit": "60cf91df686ae5833494df60776862df078fad1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNDc3Mg==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405234772", "bodyText": "Will move it when needed as this has more restricted scope as NONE handling is not used everywhere as theres plans to deprecate it.", "author": "sujithvm", "createdAt": "2020-04-08T03:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyODcyNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzMTI5MA==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405231290", "bodyText": "In case conversion to Set is done inside this function, it is better to add isEmpty() check here. I am not 100% convinced that it is necessary to convert to Set from List here as it is not always necessary and in the future there may be different requirements for case-sensitivity of the returned Set.", "author": "vrozov", "createdAt": "2020-04-08T03:03:12Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -0,0 +1,268 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.google.common.collect.ImmutableSet;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Class represents configuration for audit logging.\n+ */\n+public class AuditConfig {\n+\n+    private AuditConfig() { }\n+\n+    /**\n+     * Filter represents set of filtering configuration settings for audit logging.\n+     * Audit logger will use these settings to determine what audit logs are to be generated.\n+     */\n+    public static class Filter {\n+        private static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n+        private static final List<String> DEFAULT_DISABLED_CATEGORIES =\n+                Arrays.asList(AuditCategory.AUTHENTICATED.toString(),\n+                        AuditCategory.GRANTED_PRIVILEGES.toString());\n+\n+        private final boolean isRestApiAuditEnabled;\n+        private final boolean isTransportApiAuditEnabled;\n+        private final boolean resolveBulkRequests;\n+        private final boolean logRequestBody;\n+        private final boolean resolveIndices;\n+        private final boolean excludeSensitiveHeaders;\n+        private final Set<String> ignoredAuditUsers;\n+        private final Set<String> ignoredComplianceUsersForRead;\n+        private final Set<String> ignoredComplianceUsersForWrite;\n+        private final Set<String> ignoreAuditRequests;\n+        private final EnumSet<AuditCategory> disabledRestCategories;\n+        private final EnumSet<AuditCategory> disabledTransportCategories;\n+\n+        private Filter(final boolean isRestApiAuditEnabled,\n+                       final boolean isTransportApiAuditEnabled,\n+                       final boolean resolveBulkRequests,\n+                       final boolean logRequestBody,\n+                       final boolean resolveIndices,\n+                       final boolean excludeSensitiveHeaders,\n+                       final Set<String> ignoredAuditUsers,\n+                       final Set<String> ignoredComplianceUsersForRead,\n+                       final Set<String> ignoredComplianceUsersForWrite,\n+                       final Set<String> ignoredAuditRequests,\n+                       final EnumSet<AuditCategory> disabledRestCategories,\n+                       final EnumSet<AuditCategory> disabledTransportCategories) {\n+            this.isRestApiAuditEnabled = isRestApiAuditEnabled;\n+            this.isTransportApiAuditEnabled = isTransportApiAuditEnabled;\n+            this.resolveBulkRequests = resolveBulkRequests;\n+            this.logRequestBody = logRequestBody;\n+            this.resolveIndices = resolveIndices;\n+            this.excludeSensitiveHeaders = excludeSensitiveHeaders;\n+            this.ignoredAuditUsers = ignoredAuditUsers;\n+            this.ignoredComplianceUsersForRead = ignoredComplianceUsersForRead;\n+            this.ignoredComplianceUsersForWrite = ignoredComplianceUsersForWrite;\n+            this.ignoreAuditRequests = ignoredAuditRequests;\n+            this.disabledRestCategories = disabledRestCategories;\n+            this.disabledTransportCategories = disabledTransportCategories;\n+        }\n+\n+        /**\n+         * Generate audit logging configuration from settings defined in elasticsearch.yml\n+         * @param settings settings\n+         * @return audit configuration filter\n+         */\n+        public static Filter from(Settings settings) {\n+            final boolean isRestApiAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n+            final boolean isTransportAuditEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n+            final boolean resolveBulkRequests = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_BULK_REQUESTS, false);\n+            final boolean logRequestBody = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_LOG_REQUEST_BODY, true);\n+            final boolean resolveIndices = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_RESOLVE_INDICES, true);\n+            final boolean excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+\n+            final EnumSet<AuditCategory> disabledRestCategories = AuditCategory.parse(getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES,\n+                    DEFAULT_DISABLED_CATEGORIES,\n+                    true));\n+\n+            final EnumSet<AuditCategory> disabledTransportCategories = AuditCategory.parse(getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_TRANSPORT_CATEGORIES,\n+                    DEFAULT_DISABLED_CATEGORIES,\n+                    true));\n+\n+            final Set<String> ignoredAuditUsers = getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false);\n+\n+            final Set<String> ignoredComplianceUsersForRead = getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_HISTORY_READ_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false);\n+\n+            final Set<String> ignoredComplianceUsersForWrite = getSettingAsSet(\n+                    settings,\n+                    ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_HISTORY_WRITE_IGNORE_USERS,\n+                    DEFAULT_IGNORED_USERS,\n+                    false);\n+\n+            final Set<String> ignoreAuditRequests = ImmutableSet.copyOf(settings.getAsList(\n+                    ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS,\n+                    Collections.emptyList()));\n+\n+            return new Filter(isRestApiAuditEnabled,\n+                    isTransportAuditEnabled,\n+                    resolveBulkRequests,\n+                    logRequestBody,\n+                    resolveIndices,\n+                    excludeSensitiveHeaders,\n+                    ignoredAuditUsers,\n+                    ignoredComplianceUsersForRead,\n+                    ignoredComplianceUsersForWrite,\n+                    ignoreAuditRequests,\n+                    disabledRestCategories,\n+                    disabledTransportCategories);\n+        }\n+\n+        private static Set<String> getSettingAsSet(final Settings settings, final String key, final List<String> defaultList, final boolean ignoreCaseForNone) {\n+            final List<String> list = settings.getAsList(key, defaultList);\n+            if (list.size() == 1 && \"NONE\".equals(ignoreCaseForNone? list.get(0).toUpperCase() : list.get(0))) {", "originalCommit": "60cf91df686ae5833494df60776862df078fad1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNDg0NQ==", "url": "https://github.com/opensearch-project/security/pull/306#discussion_r405234845", "bodyText": "Will change it when needed in the future.", "author": "sujithvm", "createdAt": "2020-04-08T03:17:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzMTI5MA=="}], "type": "inlineReview", "revised_code": null}]}