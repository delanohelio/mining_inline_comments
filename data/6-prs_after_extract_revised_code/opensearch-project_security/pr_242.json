{"pr_number": 242, "pr_title": "Added SuperAdmin check to allow update/delete/add of reserved config \u2026", "pr_createdAt": "2020-02-24T23:28:30Z", "pr_url": "https://github.com/opensearch-project/security/pull/242", "timeline": [{"oid": "a10d9543a224333e2240ab213352b8201cfa27a0", "url": "https://github.com/opensearch-project/security/commit/a10d9543a224333e2240ab213352b8201cfa27a0", "message": "Added SuperAdmin check to allow update/delete/add of reserved config without restarting elasticsearch", "committedDate": "2020-02-24T23:21:26Z", "type": "commit"}, {"oid": "dd25120141ebf3a969f28d87d04c09a60a786458", "url": "https://github.com/opensearch-project/security/commit/dd25120141ebf3a969f28d87d04c09a60a786458", "message": "Add unit test for disallowing anyone apart from SuperAdmin to alter the reserved resources", "committedDate": "2020-02-25T01:46:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3OTY2Nw==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384079667", "bodyText": "PR looks good to me.\nNot sure if there is a better name for isReservedAndAccessibleToSuperAdmin or maybe use isReserved itself and document that super admins can update reserved resources.", "author": "sujithvm", "createdAt": "2020-02-25T19:33:06Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java", "diffHunk": "@@ -537,4 +538,17 @@ public String getName() {\n \n \tprotected abstract Endpoint getEndpoint();\n \n+\tprotected boolean isSuperAdmin() {\n+\t\tUser user = threadPool.getThreadContext().getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\t\treturn adminDNs.isAdmin(user);\n+\t}\n+\n+\tprotected boolean isReservedAndAccessibleToSuperAdmin(final SecurityDynamicConfiguration<?> existingConfiguration,", "originalCommit": "dd25120141ebf3a969f28d87d04c09a60a786458", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4MDI4OQ==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384080289", "bodyText": "What are your thoughts?", "author": "sujithvm", "createdAt": "2020-02-25T19:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3OTY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4MjUzOA==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384082538", "bodyText": "I think rename is required. From what I think, isReservedAndAccessible should be the one. Because it will make more sense. isReserved we can do but I think it wont go with the code.\nYour call - isReserved or isReservedAndAccessible?", "author": "palashhedau", "createdAt": "2020-02-25T19:38:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3OTY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4MzkyNw==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384083927", "bodyText": "Are there any resources which are reserved and not accessible to super-admins ?", "author": "sujithvm", "createdAt": "2020-02-25T19:41:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3OTY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4NjIyOA==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384086228", "bodyText": "We are allowing actiongroups, internalusers, roles, rolesmapping, tenants.\nAccount & Permission is not allowed to edit.\nAre they also required?", "author": "palashhedau", "createdAt": "2020-02-25T19:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3OTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "36ed503d349bbe1437228019b9f7388495c64e6e", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java\nindex 81a2fc40..ecd01a82 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java\n\n@@ -543,8 +543,8 @@ public abstract class AbstractApiAction extends BaseRestHandler {\n \t\treturn adminDNs.isAdmin(user);\n \t}\n \n-\tprotected boolean isReservedAndAccessibleToSuperAdmin(final SecurityDynamicConfiguration<?> existingConfiguration,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  String name) {\n+\tprotected boolean isReservedAndAccessible(final SecurityDynamicConfiguration<?> existingConfiguration,\n+\t\t\t\t\t\t\t\t\t\t\t  String name) {\n \t\tif( isReserved(existingConfiguration, name) && !isSuperAdmin()) {\n \t\t\treturn true;\n \t\t}\n"}}, {"oid": "36ed503d349bbe1437228019b9f7388495c64e6e", "url": "https://github.com/opensearch-project/security/commit/36ed503d349bbe1437228019b9f7388495c64e6e", "message": "Function name change", "committedDate": "2020-02-26T01:43:33Z", "type": "commit"}, {"oid": "321817c808e0f54529d5220fece033a491c78070", "url": "https://github.com/opensearch-project/security/commit/321817c808e0f54529d5220fece033a491c78070", "message": "Reverse the logic to make sense to the caller", "committedDate": "2020-02-26T01:51:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MTM3Mw==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384751373", "bodyText": "Should we rename it to testActionGroupsApiForNonSuperAdmin() ?", "author": "hardik-k-shah", "createdAt": "2020-02-26T20:39:00Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java", "diffHunk": "@@ -298,4 +307,36 @@ public void testActionGroupsApi() throws Exception {\n         Assert.assertEquals(1, permissions.size());\n         Assert.assertTrue(permissions.contains(\"READ_UT\"));        \n \t}\n+\n+    @Test\n+    public void testActionGroupsApiWithoutCertificate() throws Exception {", "originalCommit": "321817c808e0f54529d5220fece033a491c78070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNTMxNQ==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384805315", "bodyText": "Make sense. Changed.", "author": "palashhedau", "createdAt": "2020-02-26T22:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MTM3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "53c824936c77970804745b3a77844b7b6a2289eb", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java\nindex 0110e524..73a98fa7 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java\n\n@@ -309,12 +309,12 @@ public class ActionGroupsApiTest extends AbstractRestApiUnitTest {\n \t}\n \n     @Test\n-    public void testActionGroupsApiWithoutCertificate() throws Exception {\n+    public void testActionGroupsApiForNonSuperAdmin() throws Exception {\n \n         setupWithRestRoles();\n \n         rh.keystore = \"restapi/kirk-keystore.jks\";\n-        rh.sendHTTPClientCertificate = false;\n+        rh.sendAdminCertificate = false;\n         rh.sendHTTPClientCredentials = true;\n \n         HttpResponse response;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2MDI1OQ==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384760259", "bodyText": "lets rename sendHTTPClientCertificate to presentAdminCertificate or sendAdminCertificate", "author": "hardik-k-shah", "createdAt": "2020-02-26T20:56:11Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java", "diffHunk": "@@ -193,9 +195,10 @@ public void testActionGroupsApi() throws Exception {\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n \n         // PATCH read only resource, must be forbidden\n+        // SuperAdmin can patch read only resource", "originalCommit": "321817c808e0f54529d5220fece033a491c78070", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNTE3MQ==", "url": "https://github.com/opensearch-project/security/pull/242#discussion_r384805171", "bodyText": "renamed to sendAdminCertificate", "author": "palashhedau", "createdAt": "2020-02-26T22:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2MDI1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "53c824936c77970804745b3a77844b7b6a2289eb", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java\nindex 0110e524..73a98fa7 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/ActionGroupsApiTest.java\n\n@@ -139,85 +139,85 @@ public class ActionGroupsApiTest extends AbstractRestApiUnitTest {\n \t\tresponse = rh.executePutRequest(\"/_opendistro/_security/api/actiongroups/CRUD_UT\", FileHelper.loadFile(\"restapi/actiongroup_crud.json\"), new Header[0]);\n \t\tAssert.assertEquals(HttpStatus.SC_CREATED, response.getStatusCode());\n \n-\t\trh.sendHTTPClientCertificate = false;\n+\t\trh.sendAdminCertificate = false;\n \n \t\t// write access allowed again, read forbidden, since READ_UT group is still missing\n \t\tcheckReadAccess(HttpStatus.SC_FORBIDDEN, \"picard\", \"picard\", \"sf\", \"ships\", 0);\n \t\tcheckWriteAccess(HttpStatus.SC_OK, \"picard\", \"picard\", \"sf\", \"ships\", 0);\n \n \t\t// restore READ_UT action groups\n-\t\trh.sendHTTPClientCertificate = true;\n+\t\trh.sendAdminCertificate = true;\n \t\tresponse = rh.executePutRequest(\"/_opendistro/_security/api/actiongroups/READ_UT\", FileHelper.loadFile(\"restapi/actiongroup_read.json\"), new Header[0]);\n \t\tAssert.assertEquals(HttpStatus.SC_CREATED, response.getStatusCode());\n \n-\t\trh.sendHTTPClientCertificate = false;\n+\t\trh.sendAdminCertificate = false;\n \t\t// read/write allowed again\n \t\tcheckReadAccess(HttpStatus.SC_OK, \"picard\", \"picard\", \"sf\", \"ships\", 0);\n \t\tcheckWriteAccess(HttpStatus.SC_OK, \"picard\", \"picard\", \"sf\", \"ships\", 0);\n \n \t\t// -- PUT, new JSON format including readonly flag, disallowed in REST API\n-\t\trh.sendHTTPClientCertificate = true;\n+\t\trh.sendAdminCertificate = true;\n \t\tresponse = rh.executePutRequest(\"/_opendistro/_security/api/actiongroups/CRUD_UT\", FileHelper.loadFile(\"restapi/actiongroup_readonly.json\"), new Header[0]);\n \t\tAssert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n \n \t\t// -- DELETE read only resource, must be forbidden\n         // superAdmin can delete read only resource\n-\t\trh.sendHTTPClientCertificate = true;\n+\t\trh.sendAdminCertificate = true;\n \t\tresponse = rh.executeDeleteRequest(\"/_opendistro/_security/api/actiongroups/GET_UT\", new Header[0]);\n \t\tAssert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n \n \t\t// -- PUT read only resource, must be forbidden\n         // superAdmin can add/update read only resource\n-\t\trh.sendHTTPClientCertificate = true;\n+\t\trh.sendAdminCertificate = true;\n         response = rh.executePutRequest(\"/_opendistro/_security/api/actiongroups/GET_UT\", FileHelper.loadFile(\"restapi/actiongroup_read.json\"), new Header[0]);\n \t\tAssert.assertEquals(HttpStatus.SC_CREATED, response.getStatusCode());\n         Assert.assertFalse(response.getBody().contains(\"Resource 'GET_UT' is read-only.\"));\n \n         // -- GET_UT hidden resource, must be 404\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executeGetRequest(\"/_opendistro/_security/api/actiongroups/INTERNAL\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n \n \t\t// -- DELETE hidden resource, must be 404\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executeDeleteRequest(\"/_opendistro/_security/api/actiongroups/INTERNAL\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n \n         // -- PUT hidden resource, must be forbidden\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePutRequest(\"/_opendistro/_security/api/actiongroups/INTERNAL\", FileHelper.loadFile(\"restapi/actiongroup_read.json\"), new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n \n         // -- PATCH\n         // PATCH on non-existing resource\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePatchRequest(\"/_opendistro/_security/api/actiongroups/imnothere\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/a/b/c\\\", \\\"value\\\": [ \\\"foo\\\", \\\"bar\\\" ] }]\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n \n         // PATCH read only resource, must be forbidden\n         // SuperAdmin can patch read only resource\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePatchRequest(\"/_opendistro/_security/api/actiongroups/GET_UT\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n \n         // PATCH hidden resource, must be not found\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePatchRequest(\"/_opendistro/_security/api/actiongroups/INTERNAL\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/a/b/c\\\", \\\"value\\\": [ \\\"foo\\\", \\\"bar\\\" ] }]\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n \n         // PATCH value of hidden flag, must fail with validation error\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePatchRequest(\"/_opendistro/_security/api/actiongroups/CRUD_UT\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/hidden\\\", \\\"value\\\": true }]\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n         Assert.assertTrue(response.getBody(), response.getBody().matches(\".*\\\"invalid_keys\\\"\\\\s*:\\\\s*\\\\{\\\\s*\\\"keys\\\"\\\\s*:\\\\s*\\\"hidden\\\"\\\\s*\\\\}.*\"));\n \n         // PATCH with relative JSON pointer, must fail\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePatchRequest(\"/_opendistro/_security/api/actiongroups/CRUD_UT\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"1/INTERNAL/allowed_actions/-\\\", \\\"value\\\": \\\"OPENDISTRO_SECURITY_DELETE\\\" }]\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n \n         // PATCH new format\n-        rh.sendHTTPClientCertificate = true;\n+        rh.sendAdminCertificate = true;\n         response = rh.executePatchRequest(\"/_opendistro/_security/api/actiongroups/CRUD_UT\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/allowed_actions/-\\\", \\\"value\\\": \\\"OPENDISTRO_SECURITY_DELETE\\\" }]\", new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n         response = rh.executeGetRequest(\"/_opendistro/_security/api/actiongroups/CRUD_UT\", new Header[0]);\n"}}, {"oid": "53c824936c77970804745b3a77844b7b6a2289eb", "url": "https://github.com/opensearch-project/security/commit/53c824936c77970804745b3a77844b7b6a2289eb", "message": "Changed test admincert variable name and renamed test function to reflect proper functionality", "committedDate": "2020-02-26T21:56:52Z", "type": "commit"}]}