{"pr_number": 539, "pr_title": "Decrypt assertions", "pr_createdAt": "2020-07-01T14:24:29Z", "pr_url": "https://github.com/opensearch-project/security/pull/539", "timeline": [{"oid": "d3d576b32c6e9935a3bd2e1bebe9ea7528d6ebb1", "url": "https://github.com/opensearch-project/security/commit/d3d576b32c6e9935a3bd2e1bebe9ea7528d6ebb1", "message": "Pass SP Signature Private Key to Saml2SettingsProvider", "committedDate": "2020-07-01T20:37:12Z", "type": "commit"}, {"oid": "d3d576b32c6e9935a3bd2e1bebe9ea7528d6ebb1", "url": "https://github.com/opensearch-project/security/commit/d3d576b32c6e9935a3bd2e1bebe9ea7528d6ebb1", "message": "Pass SP Signature Private Key to Saml2SettingsProvider", "committedDate": "2020-07-01T20:37:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NzUwNA==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r448647504", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private String spSignaturePrivateKey;\n          \n          \n            \n                private final String spSignaturePrivateKey;", "author": "vrozov", "createdAt": "2020-07-01T22:25:40Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -54,8 +55,9 @@\n     private String idpEntityId;\n     private Saml2Settings cachedSaml2Settings;\n     private DateTime metadataUpdateTime;\n+    private String spSignaturePrivateKey;", "originalCommit": "d3d576b32c6e9935a3bd2e1bebe9ea7528d6ebb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "218111980069b9912debb00fa4771c890a34967d", "chunk": "diff --git a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\nindex 52dc085b..507376a7 100644\n--- a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n+++ b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n\n@@ -50,17 +50,18 @@ import net.shibboleth.utilities.java.support.resolver.ResolverException;\n public class Saml2SettingsProvider {\n     protected final static Logger log = LogManager.getLogger(Saml2SettingsProvider.class);\n \n-    private Settings esSettings;\n-    private MetadataResolver metadataResolver;\n-    private String idpEntityId;\n-    private Saml2Settings cachedSaml2Settings;\n-    private DateTime metadataUpdateTime;\n-    private String spSignaturePrivateKey;\n+    private final Settings esSettings;\n+    private final MetadataResolver metadataResolver;\n+    private final String idpEntityId;\n+    private PrivateKey spSignaturePrivateKey;\n+    private  Saml2Settings cachedSaml2Settings;\n+    private  DateTime metadataUpdateTime;\n \n     Saml2SettingsProvider(Settings esSettings, MetadataResolver metadataResolver, PrivateKey spSignaturePrivateKey) {\n         this.esSettings = esSettings;\n         this.metadataResolver = metadataResolver;\n         this.idpEntityId = esSettings.get(\"idp.entity_id\");\n+        this.spSignaturePrivateKey = spSignaturePrivateKey;\n     }\n \n     Saml2Settings get() throws SamlConfigException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0NzczNA==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r448647734", "bodyText": "missing this.spSignaturePrivateKey = spSignaturePrivateKey", "author": "vrozov", "createdAt": "2020-07-01T22:26:28Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -54,8 +55,9 @@\n     private String idpEntityId;\n     private Saml2Settings cachedSaml2Settings;\n     private DateTime metadataUpdateTime;\n+    private String spSignaturePrivateKey;\n \n-    Saml2SettingsProvider(Settings esSettings, MetadataResolver metadataResolver) {\n+    Saml2SettingsProvider(Settings esSettings, MetadataResolver metadataResolver, PrivateKey spSignaturePrivateKey) {\n         this.esSettings = esSettings;\n         this.metadataResolver = metadataResolver;\n         this.idpEntityId = esSettings.get(\"idp.entity_id\");", "originalCommit": "d3d576b32c6e9935a3bd2e1bebe9ea7528d6ebb1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "218111980069b9912debb00fa4771c890a34967d", "chunk": "diff --git a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\nindex 52dc085b..507376a7 100644\n--- a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n+++ b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n\n@@ -50,17 +50,18 @@ import net.shibboleth.utilities.java.support.resolver.ResolverException;\n public class Saml2SettingsProvider {\n     protected final static Logger log = LogManager.getLogger(Saml2SettingsProvider.class);\n \n-    private Settings esSettings;\n-    private MetadataResolver metadataResolver;\n-    private String idpEntityId;\n-    private Saml2Settings cachedSaml2Settings;\n-    private DateTime metadataUpdateTime;\n-    private String spSignaturePrivateKey;\n+    private final Settings esSettings;\n+    private final MetadataResolver metadataResolver;\n+    private final String idpEntityId;\n+    private PrivateKey spSignaturePrivateKey;\n+    private  Saml2Settings cachedSaml2Settings;\n+    private  DateTime metadataUpdateTime;\n \n     Saml2SettingsProvider(Settings esSettings, MetadataResolver metadataResolver, PrivateKey spSignaturePrivateKey) {\n         this.esSettings = esSettings;\n         this.metadataResolver = metadataResolver;\n         this.idpEntityId = esSettings.get(\"idp.entity_id\");\n+        this.spSignaturePrivateKey = spSignaturePrivateKey;\n     }\n \n     Saml2Settings get() throws SamlConfigException {\n"}}, {"oid": "218111980069b9912debb00fa4771c890a34967d", "url": "https://github.com/opensearch-project/security/commit/218111980069b9912debb00fa4771c890a34967d", "message": "PR feedback", "committedDate": "2020-07-02T17:03:00Z", "type": "commit"}, {"oid": "f1a60cfda7a4bdf030be128b2ffd7c7aba342e99", "url": "https://github.com/opensearch-project/security/commit/f1a60cfda7a4bdf030be128b2ffd7c7aba342e99", "message": "PR feedback", "committedDate": "2020-07-02T17:04:49Z", "type": "commit"}, {"oid": "21ff3d628da026a42691a304262330dbd1e5d2d1", "url": "https://github.com/opensearch-project/security/commit/21ff3d628da026a42691a304262330dbd1e5d2d1", "message": "Add test for encrypted assertion", "committedDate": "2020-07-13T21:14:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA5NDE0NA==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r456094144", "bodyText": "Please don't use wildcard import.", "author": "vrozov", "createdAt": "2020-07-16T21:41:16Z", "path": "src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java", "diffHunk": "@@ -37,14 +37,11 @@\n import java.security.cert.Certificate;\n import java.security.cert.CertificateException;\n import java.security.cert.X509Certificate;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Enumeration;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n+import java.util.*;", "originalCommit": "21ff3d628da026a42691a304262330dbd1e5d2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "chunk": "diff --git a/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java b/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\nindex 8fde6fc9..63948049 100644\n--- a/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\n+++ b/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\n\n@@ -37,7 +37,12 @@ import java.security.UnrecoverableKeyException;\n import java.security.cert.Certificate;\n import java.security.cert.CertificateException;\n import java.security.cert.X509Certificate;\n-import java.util.*;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n import java.util.stream.Collectors;\n \n import javax.crypto.KeyGenerator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA5Nzg4Nw==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r456097887", "bodyText": "nit: undo new line", "author": "vrozov", "createdAt": "2020-07-16T21:49:40Z", "path": "src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java", "diffHunk": "@@ -180,6 +169,7 @@\n     private String endpointQueryString;\n     private String defaultAssertionConsumerService;\n \n+", "originalCommit": "21ff3d628da026a42691a304262330dbd1e5d2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "chunk": "diff --git a/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java b/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\nindex 8fde6fc9..63948049 100644\n--- a/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\n+++ b/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\n\n@@ -169,7 +174,6 @@ class MockSamlIdpServer implements Closeable {\n     private String endpointQueryString;\n     private String defaultAssertionConsumerService;\n \n-\n     MockSamlIdpServer() throws IOException {\n         this(SocketUtils.findAvailableTcpPort());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1MDU1MQ==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r456550551", "bodyText": "extra space", "author": "vrozov", "createdAt": "2020-07-17T16:34:55Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -49,16 +50,18 @@\n public class Saml2SettingsProvider {\n     protected final static Logger log = LogManager.getLogger(Saml2SettingsProvider.class);\n \n-    private Settings esSettings;\n-    private MetadataResolver metadataResolver;\n-    private String idpEntityId;\n-    private Saml2Settings cachedSaml2Settings;\n-    private DateTime metadataUpdateTime;\n+    private final Settings esSettings;\n+    private final MetadataResolver metadataResolver;\n+    private final String idpEntityId;\n+    private final PrivateKey spSignaturePrivateKey;\n+    private  Saml2Settings cachedSaml2Settings;", "originalCommit": "21ff3d628da026a42691a304262330dbd1e5d2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "chunk": "diff --git a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\nindex d67325c5..60835014 100644\n--- a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n+++ b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n\n@@ -54,8 +54,8 @@ public class Saml2SettingsProvider {\n     private final MetadataResolver metadataResolver;\n     private final String idpEntityId;\n     private final PrivateKey spSignaturePrivateKey;\n-    private  Saml2Settings cachedSaml2Settings;\n-    private  DateTime metadataUpdateTime;\n+    private Saml2Settings cachedSaml2Settings;\n+    private DateTime metadataUpdateTime;\n \n     Saml2SettingsProvider(Settings esSettings, MetadataResolver metadataResolver, PrivateKey spSignaturePrivateKey) {\n         this.esSettings = esSettings;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1MjkwMg==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r456552902", "bodyText": "nit: move to initMisc()", "author": "vrozov", "createdAt": "2020-07-17T16:39:39Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -89,6 +92,8 @@ Saml2Settings get() throws SamlConfigException {\n \n             SettingsBuilder settingsBuilder = new SettingsBuilder();\n \n+            configProperties.put(SettingsBuilder.SP_PRIVATEKEY_PROPERTY_KEY, this.spSignaturePrivateKey);", "originalCommit": "21ff3d628da026a42691a304262330dbd1e5d2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "chunk": "diff --git a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\nindex d67325c5..60835014 100644\n--- a/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n+++ b/src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java\n\n@@ -92,8 +92,6 @@ public class Saml2SettingsProvider {\n \n             SettingsBuilder settingsBuilder = new SettingsBuilder();\n \n-            configProperties.put(SettingsBuilder.SP_PRIVATEKEY_PROPERTY_KEY, this.spSignaturePrivateKey);\n-\n             // TODO allow overriding of IdP metadata?\n             settingsBuilder.fromValues(configProperties);\n             settingsBuilder.fromValues(new SamlSettingsMap(this.esSettings));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3NDU1NQ==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r456574555", "bodyText": "Please add this as decryptAssertionsTest() (keep basicTest() as is).", "author": "vrozov", "createdAt": "2020-07-17T17:23:09Z", "path": "src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java", "diffHunk": "@@ -124,9 +124,13 @@ public void basicTest() throws Exception {\n         mockSamlIdpServer.loadSigningKeys(\"saml/kirk-keystore.jks\", \"kirk\");\n         mockSamlIdpServer.setAuthenticateUser(\"horst\");\n         mockSamlIdpServer.setEndpointQueryString(null);\n+        mockSamlIdpServer.setSpSignatureCertificate(spSigningCertificate);", "originalCommit": "21ff3d628da026a42691a304262330dbd1e5d2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "chunk": "diff --git a/src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java b/src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java\nindex 94f68440..8af5425a 100644\n--- a/src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java\n+++ b/src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java\n\n@@ -124,6 +124,40 @@ public class HTTPSamlAuthenticatorTest {\n         mockSamlIdpServer.loadSigningKeys(\"saml/kirk-keystore.jks\", \"kirk\");\n         mockSamlIdpServer.setAuthenticateUser(\"horst\");\n         mockSamlIdpServer.setEndpointQueryString(null);\n+\n+        Settings settings = Settings.builder().put(IDP_METADATA_URL, mockSamlIdpServer.getMetadataUri())\n+                .put(\"kibana_url\", \"http://wherever\").put(\"idp.entity_id\", mockSamlIdpServer.getIdpEntityId())\n+                .put(\"exchange_key\", \"abc\").put(\"roles_key\", \"roles\").put(\"path.home\", \".\").build();\n+\n+        HTTPSamlAuthenticator samlAuthenticator = new HTTPSamlAuthenticator(settings, null);\n+\n+        AuthenticateHeaders authenticateHeaders = getAutenticateHeaders(samlAuthenticator);\n+\n+        String encodedSamlResponse = mockSamlIdpServer.handleSsoGetRequestURI(authenticateHeaders.location);\n+\n+        RestRequest tokenRestRequest = buildTokenExchangeRestRequest(encodedSamlResponse, authenticateHeaders);\n+        TestRestChannel tokenRestChannel = new TestRestChannel(tokenRestRequest);\n+\n+        samlAuthenticator.reRequestAuthentication(tokenRestChannel, null);\n+\n+        String responseJson = new String(BytesReference.toBytes(tokenRestChannel.response.content()));\n+        HashMap<String, Object> response = DefaultObjectMapper.objectMapper.readValue(responseJson,\n+                new TypeReference<HashMap<String, Object>>() {\n+                });\n+        String authorization = (String) response.get(\"authorization\");\n+\n+        Assert.assertNotNull(\"Expected authorization attribute in JSON: \" + responseJson, authorization);\n+\n+        JwsJwtCompactConsumer jwtConsumer = new JwsJwtCompactConsumer(authorization.replaceAll(\"\\\\s*bearer\\\\s*\", \"\"));\n+        JwtToken jwt = jwtConsumer.getJwtToken();\n+\n+        Assert.assertEquals(\"horst\", jwt.getClaim(\"sub\"));\n+    }\n+\n+    @Test\n+    public void decryptAssertionsTest() throws Exception {\n+        mockSamlIdpServer.setAuthenticateUser(\"horst\");\n+        mockSamlIdpServer.setEndpointQueryString(null);\n         mockSamlIdpServer.setSpSignatureCertificate(spSigningCertificate);\n         mockSamlIdpServer.setEncryptAssertion(true);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3NTg0OA==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r456575848", "bodyText": "nit: this.encryptAssertion = encryptAssertion; on a separate line.", "author": "vrozov", "createdAt": "2020-07-17T17:25:52Z", "path": "src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java", "diffHunk": "@@ -1103,6 +1111,8 @@ public void setSignResponses(boolean signResponses) {\n         this.signResponses = signResponses;\n     }\n \n+    public void setEncryptAssertion(boolean encryptAssertion) { this.encryptAssertion = encryptAssertion;}", "originalCommit": "21ff3d628da026a42691a304262330dbd1e5d2d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "chunk": "diff --git a/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java b/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\nindex 8fde6fc9..63948049 100644\n--- a/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\n+++ b/src/test/java/com/amazon/dlic/auth/http/saml/MockSamlIdpServer.java\n\n@@ -1111,7 +1115,9 @@ class MockSamlIdpServer implements Closeable {\n         this.signResponses = signResponses;\n     }\n \n-    public void setEncryptAssertion(boolean encryptAssertion) { this.encryptAssertion = encryptAssertion;}\n+    public void setEncryptAssertion(boolean encryptAssertion) {\n+        this.encryptAssertion = encryptAssertion;\n+    }\n \n     public X509Certificate getSpSignatureCertificate() {\n         return spSignatureCertificate;\n"}}, {"oid": "0895272761a0118b35eeca2ea7ea5288f4bc7819", "url": "https://github.com/opensearch-project/security/commit/0895272761a0118b35eeca2ea7ea5288f4bc7819", "message": "PR Tweaks", "committedDate": "2020-07-17T18:07:00Z", "type": "commit"}, {"oid": "923c4ea535f78f77b55dc80eccb9853e3fbe18fd", "url": "https://github.com/opensearch-project/security/commit/923c4ea535f78f77b55dc80eccb9853e3fbe18fd", "message": "Remove wildcard import", "committedDate": "2020-07-17T18:10:33Z", "type": "commit"}, {"oid": "f922963809c0b7267b45a1ca8b736c6c793456af", "url": "https://github.com/opensearch-project/security/commit/f922963809c0b7267b45a1ca8b736c6c793456af", "message": "Remove extra line", "committedDate": "2020-07-17T18:11:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNTA0Mg==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r459015042", "bodyText": "Curious where we are using spSignaturePrivateKey in the Saml2SettingsProvider.", "author": "debjanibnrj", "createdAt": "2020-07-22T18:58:21Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -133,6 +136,7 @@ private boolean isUpdateRequired() {\n     private void initMisc(HashMap<String, Object> configProperties) {\n         configProperties.put(SettingsBuilder.STRICT_PROPERTY_KEY, true);\n         configProperties.put(SettingsBuilder.SECURITY_REJECT_UNSOLICITED_RESPONSES_WITH_INRESPONSETO, true);\n+        configProperties.put(SettingsBuilder.SP_PRIVATEKEY_PROPERTY_KEY, this.spSignaturePrivateKey);", "originalCommit": "f922963809c0b7267b45a1ca8b736c6c793456af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzODQ4Mw==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r459038483", "bodyText": "It's read from the settings here: https://github.com/onelogin/java-saml/blob/master/core/src/main/java/com/onelogin/saml2/authn/SamlResponse.java#L1074", "author": "jcleezer", "createdAt": "2020-07-22T19:41:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNTA0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2OTYyOQ==", "url": "https://github.com/opensearch-project/security/pull/539#discussion_r459069629", "bodyText": "Thanks for clarifying", "author": "debjanibnrj", "createdAt": "2020-07-22T20:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNTA0Mg=="}], "type": "inlineReview", "revised_code": null}]}