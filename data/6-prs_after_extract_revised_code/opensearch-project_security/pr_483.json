{"pr_number": 483, "pr_title": "Remove immutable indices from compliance config", "pr_createdAt": "2020-06-01T22:45:03Z", "pr_url": "https://github.com/opensearch-project/security/pull/483", "timeline": [{"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f", "url": "https://github.com/opensearch-project/security/commit/45aea174b3eb3a645cb6f9663ae48e31c4c57c8f", "message": "Remove immutable indices from compliance config and inject directly to the request filter", "committedDate": "2020-06-02T01:20:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NTg0MA==", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433575840", "bodyText": "Please create a follow up PR/issue to remove final from IndexResolverReplacer and mock IndexResolverReplacer.", "author": "vrozov", "createdAt": "2020-06-02T01:41:11Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.amazon.opendistroforelasticsearch.security.filter;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n+import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n+import com.amazon.opendistroforelasticsearch.security.configuration.ClusterInfoHolder;\n+import com.amazon.opendistroforelasticsearch.security.configuration.CompatConfig;\n+import com.amazon.opendistroforelasticsearch.security.configuration.DlsFlsRequestValve;\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+@RunWith(Parameterized.class)\n+public class OpenDistroSecurityFilterTest {\n+\n+    private final Settings settings;\n+    private final WildcardMatcher expected;\n+\n+    public OpenDistroSecurityFilterTest(Settings settings, WildcardMatcher expected) {\n+        this.settings = settings;\n+        this.expected = expected;\n+    }\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+        return Arrays.asList(new Object[][]{\n+                {Settings.EMPTY, WildcardMatcher.NONE},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+        });\n+    }\n+\n+    @Test\n+    public void testImmutableIndicesWildcardMatcher() {\n+        // act\n+        final OpenDistroSecurityFilter filter = new OpenDistroSecurityFilter(\n+                settings,\n+                mock(PrivilegesEvaluator.class),\n+                mock(AdminDNs.class),\n+                mock(DlsFlsRequestValve.class),\n+                mock(AuditLog.class),\n+                mock(ThreadPool.class),\n+                mock(ClusterService.class),\n+                mock(CompatConfig.class),\n+                new IndexResolverReplacer(", "originalCommit": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3Njc0Mw==", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433576743", "bodyText": "If its okay, I will make the change here itself.", "author": "sujithvm", "createdAt": "2020-06-02T01:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NTg0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5MTM0OQ==", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433591349", "bodyText": "Yes, should be fine assuming there are no concerns removing final from IndexResolverReplacer.", "author": "vrozov", "createdAt": "2020-06-02T02:46:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NTg0MA=="}], "type": "inlineReview", "revised_code": {"commit": "298016dee61971add1f190c0c032a13c65578714", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java\nindex e593452a..40404076 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java\n\n@@ -2,7 +2,6 @@ package com.amazon.opendistroforelasticsearch.security.filter;\n \n import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n-import com.amazon.opendistroforelasticsearch.security.configuration.ClusterInfoHolder;\n import com.amazon.opendistroforelasticsearch.security.configuration.CompatConfig;\n import com.amazon.opendistroforelasticsearch.security.configuration.DlsFlsRequestValve;\n import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NjY2Nw==", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433576667", "bodyText": "nit: not sure that this and the other comment is necessary.", "author": "vrozov", "createdAt": "2020-06-02T01:44:39Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.amazon.opendistroforelasticsearch.security.filter;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n+import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n+import com.amazon.opendistroforelasticsearch.security.configuration.ClusterInfoHolder;\n+import com.amazon.opendistroforelasticsearch.security.configuration.CompatConfig;\n+import com.amazon.opendistroforelasticsearch.security.configuration.DlsFlsRequestValve;\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+@RunWith(Parameterized.class)\n+public class OpenDistroSecurityFilterTest {\n+\n+    private final Settings settings;\n+    private final WildcardMatcher expected;\n+\n+    public OpenDistroSecurityFilterTest(Settings settings, WildcardMatcher expected) {\n+        this.settings = settings;\n+        this.expected = expected;\n+    }\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+        return Arrays.asList(new Object[][]{\n+                {Settings.EMPTY, WildcardMatcher.NONE},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+        });\n+    }\n+\n+    @Test\n+    public void testImmutableIndicesWildcardMatcher() {\n+        // act", "originalCommit": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "298016dee61971add1f190c0c032a13c65578714", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java\nindex e593452a..40404076 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java\n\n@@ -2,7 +2,6 @@ package com.amazon.opendistroforelasticsearch.security.filter;\n \n import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n-import com.amazon.opendistroforelasticsearch.security.configuration.ClusterInfoHolder;\n import com.amazon.opendistroforelasticsearch.security.configuration.CompatConfig;\n import com.amazon.opendistroforelasticsearch.security.configuration.DlsFlsRequestValve;\n import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n"}}, {"oid": "298016dee61971add1f190c0c032a13c65578714", "url": "https://github.com/opensearch-project/security/commit/298016dee61971add1f190c0c032a13c65578714", "message": "code review", "committedDate": "2020-06-02T03:56:11Z", "type": "commit"}]}