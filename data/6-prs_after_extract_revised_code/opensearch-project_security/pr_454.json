{"pr_number": 454, "pr_title": "Migration and validation APIs for version upgrade", "pr_createdAt": "2020-05-04T20:08:36Z", "pr_url": "https://github.com/opensearch-project/security/pull/454", "timeline": [{"oid": "856290308700e3da2f1963fd7d785a824eab8a8e", "url": "https://github.com/opensearch-project/security/commit/856290308700e3da2f1963fd7d785a824eab8a8e", "message": "Migration and valdiation APIs for version upgrade for advance module cherry pick of 8cf60f21e650aa16a77c39339a2455e7603c130b", "committedDate": "2020-05-04T17:16:05Z", "type": "commit"}, {"oid": "cf83e666b5a8800ef1c6d4b472f8af7c0f0fa6ab", "url": "https://github.com/opensearch-project/security/commit/cf83e666b5a8800ef1c6d4b472f8af7c0f0fa6ab", "message": "Version upgrade fix cherry pick of 0286850f413016b1586a13189a9bb9d9b05a9bd3", "committedDate": "2020-05-04T19:50:55Z", "type": "commit"}, {"oid": "26b01ef547d7e2dadaa812c77977cd51e7a5babd", "url": "https://github.com/opensearch-project/security/commit/26b01ef547d7e2dadaa812c77977cd51e7a5babd", "message": "version upgrade fix cherry pick of 472d652261c3a19affecfa594b93f7052dc20a68", "committedDate": "2020-05-04T19:53:44Z", "type": "commit"}, {"oid": "2ba17592b74ac200cbf5986b2d5588c1c84e82cb", "url": "https://github.com/opensearch-project/security/commit/2ba17592b74ac200cbf5986b2d5588c1c84e82cb", "message": "Fixing version upgrade test\n\n(cherry picked from commit 2259e6b743f4539e1798ef625d93d2972152a4fa)", "committedDate": "2020-05-04T19:54:08Z", "type": "commit"}, {"oid": "2132ba87901d8c558fdb78318dc36dff6fb0c401", "url": "https://github.com/opensearch-project/security/commit/2132ba87901d8c558fdb78318dc36dff6fb0c401", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-05-04T20:05:40Z", "type": "commit"}, {"oid": "d0a65067cc62ddb92e39c44dacac1e5797165026", "url": "https://github.com/opensearch-project/security/commit/d0a65067cc62ddb92e39c44dacac1e5797165026", "message": "refectoring", "committedDate": "2020-05-04T21:21:02Z", "type": "commit"}, {"oid": "3ac9044840d04a7d9ce919654e9f1aa396670aa6", "url": "https://github.com/opensearch-project/security/commit/3ac9044840d04a7d9ce919654e9f1aa396670aa6", "message": "Registering GET handler for Validate API", "committedDate": "2020-05-06T17:32:58Z", "type": "commit"}, {"oid": "2244fdb72205e0e8c30dfff24c21c0107eebfdab", "url": "https://github.com/opensearch-project/security/commit/2244fdb72205e0e8c30dfff24c21c0107eebfdab", "message": "Merge pull request #1 from debjanibnrj/hardik-k-shah-master\n\nRegistering GET handler for Validate API", "committedDate": "2020-05-06T23:53:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxOTY4Mg==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r421919682", "bodyText": "Curious why we have this property - Whats the use case of starting up nodes always accepting invalid config?\nIf it's just for loading during migration API call, we can just overload the function to do it?", "author": "sujithvm", "createdAt": "2020-05-08T03:42:39Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/ConfigurationRepository.java", "diffHunk": "@@ -101,6 +102,7 @@ private ConfigurationRepository(Settings settings, final Path configPath, Thread\n         this.clusterService = clusterService;\n         this.auditLog = auditLog;\n         this.configurationChangedListener = new ArrayList<>();\n+        this.acceptInvalid = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, false);", "originalCommit": "2244fdb72205e0e8c30dfff24c21c0107eebfdab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNTg2NQ==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r424705865", "bodyText": "accepting invalid config is configuration parameter you can set in elasticsearch.yml\nYou can configure if you want to accept invalid/non-supported 6.x configuration and still migrate remaining valid configuration to 7.x format and still start node.\n7.x can still read 6.x configuration and work without any problem.\nIf you migrate configuration with accept invalid configuration to true, you need that flag everytime when node boots up to ignore invalid configuration present in index.", "author": "hardik-k-shah", "createdAt": "2020-05-13T20:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxOTY4Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0NzI4Ng==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r422247286", "bodyText": "Need to add NodesDn also to the migration", "author": "sujithvm", "createdAt": "2020-05-08T16:42:09Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrateApiAction.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *  You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.security.dlic.rest.api;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import org.elasticsearch.Version;\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;\n+import org.elasticsearch.action.bulk.BulkRequestBuilder;\n+import org.elasticsearch.action.bulk.BulkResponse;\n+import org.elasticsearch.action.index.IndexRequest;\n+import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;\n+import org.elasticsearch.action.support.master.AcknowledgedResponse;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.metadata.IndexMetaData;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.collect.Tuple;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.settings.Settings.Builder;\n+import org.elasticsearch.common.xcontent.XContentHelper;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.rest.RestChannel;\n+import org.elasticsearch.rest.RestController;\n+import org.elasticsearch.rest.RestRequest;\n+import org.elasticsearch.rest.RestRequest.Method;\n+import org.elasticsearch.threadpool.ThreadPool;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n+import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n+import com.amazon.opendistroforelasticsearch.security.configuration.ConfigurationRepository;\n+import com.amazon.opendistroforelasticsearch.security.dlic.rest.validation.AbstractConfigurationValidator;\n+import com.amazon.opendistroforelasticsearch.security.dlic.rest.validation.NoOpValidator;\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.Migration;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.CType;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.SecurityDynamicConfiguration;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.ActionGroupsV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.ConfigV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.InternalUserV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.RoleMappingsV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.RoleV6;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.ActionGroupsV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.ConfigV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.InternalUserV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.RoleMappingsV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.RoleV7;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v7.TenantV7;\n+import com.amazon.opendistroforelasticsearch.security.ssl.transport.PrincipalExtractor;\n+\n+public class MigrateApiAction extends AbstractApiAction {\n+\n+    @Inject\n+    public MigrateApiAction(final Settings settings, final Path configPath, final RestController controller, final Client client,\n+                            final AdminDNs adminDNs, final ConfigurationRepository cl, final ClusterService cs, final PrincipalExtractor principalExtractor,\n+                            final PrivilegesEvaluator evaluator, ThreadPool threadPool, AuditLog auditLog) {\n+        super(settings, configPath, controller, client, adminDNs, cl, cs, principalExtractor, evaluator, threadPool, auditLog);\n+    }\n+\n+    @Override\n+    protected void registerHandlers(RestController controller, Settings settings) {\n+        controller.registerHandler(Method.POST, \"/_opendistro/_security/api/migrate\", this);\n+    }\n+\n+    @Override\n+    protected Endpoint getEndpoint() {\n+        return Endpoint.MIGRATE;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    protected void handlePost(RestChannel channel, RestRequest request, Client client, final JsonNode content) throws IOException {\n+\n+        final Version oldestNodeVersion = cs.state().getNodes().getMinNodeVersion();\n+\n+        if(oldestNodeVersion.before(Version.V_7_0_0)) {\n+            badRequestResponse(channel, \"Can not migrate configuration because cluster is not fully migrated.\");\n+            return;\n+        }\n+\n+        final SecurityDynamicConfiguration<?> loadedConfig = load(CType.CONFIG, true);\n+\n+        if (loadedConfig.getVersion() != 1) {\n+            badRequestResponse(channel, \"Can not migrate configuration because it was already migrated.\");\n+            return;\n+        }\n+\n+        final SecurityDynamicConfiguration<ConfigV6> configV6 = (SecurityDynamicConfiguration<ConfigV6>) loadedConfig;\n+        final SecurityDynamicConfiguration<ActionGroupsV6> actionGroupsV6 = (SecurityDynamicConfiguration<ActionGroupsV6>) load(CType.ACTIONGROUPS, true);\n+        final SecurityDynamicConfiguration<InternalUserV6> internalUsersV6 = (SecurityDynamicConfiguration<InternalUserV6>) load(CType.INTERNALUSERS, true);\n+        final SecurityDynamicConfiguration<RoleV6> rolesV6 = (SecurityDynamicConfiguration<RoleV6>) load(CType.ROLES, true);\n+        final SecurityDynamicConfiguration<RoleMappingsV6> rolesmappingV6 = (SecurityDynamicConfiguration<RoleMappingsV6>) load(CType.ROLESMAPPING, true);\n+", "originalCommit": "2244fdb72205e0e8c30dfff24c21c0107eebfdab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNTk1MQ==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r424705951", "bodyText": "added.", "author": "hardik-k-shah", "createdAt": "2020-05-13T20:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0NzI4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MzM1MQ==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r425373351", "bodyText": "Need to add to validate api too ?", "author": "sujithvm", "createdAt": "2020-05-14T19:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI0NzI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7694a383f041e385ef529d8bdf552a2604d7af3c", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrateApiAction.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrateApiAction.java\nindex 40c43504..b2d0c6ba 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrateApiAction.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrateApiAction.java\n\n@@ -52,6 +52,7 @@ import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvalu\n import com.amazon.opendistroforelasticsearch.security.securityconf.Migration;\n import com.amazon.opendistroforelasticsearch.security.securityconf.impl.CType;\n import com.amazon.opendistroforelasticsearch.security.securityconf.impl.SecurityDynamicConfiguration;\n+import com.amazon.opendistroforelasticsearch.security.securityconf.impl.NodesDn;\n import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.ActionGroupsV6;\n import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.ConfigV6;\n import com.amazon.opendistroforelasticsearch.security.securityconf.impl.v6.InternalUserV6;\n"}}, {"oid": "7694a383f041e385ef529d8bdf552a2604d7af3c", "url": "https://github.com/opensearch-project/security/commit/7694a383f041e385ef529d8bdf552a2604d7af3c", "message": "NodesDN changes", "committedDate": "2020-05-13T19:40:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MjI5Ng==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r424762296", "bodyText": "The class is used only within SecurityDynamicConfiguration, can it be made private static inside SecurityDynamicConfiguration?", "author": "vrozov", "createdAt": "2020-05-13T22:16:13Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/NonValidatingObjectMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2015-2018 _floragunn_ GmbH\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Portions Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.security;\n+\n+import java.io.IOException;\n+import java.security.AccessController;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n+\n+import org.elasticsearch.SpecialPermission;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.type.TypeFactory;\n+\n+public class NonValidatingObjectMapper {", "originalCommit": "7694a383f041e385ef529d8bdf552a2604d7af3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2NTMzMQ==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r424765331", "bodyText": "these is mostly cherry pick from 7.1 branch which we missed merging to master branch.\nI would prefer to make separate PR for suggested refactoring if any.", "author": "hardik-k-shah", "createdAt": "2020-05-13T22:24:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MjI5Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MzIwOQ==", "url": "https://github.com/opensearch-project/security/pull/454#discussion_r424763209", "bodyText": "Is it necessary to make nonValidatingObjectMapper a singleton?", "author": "vrozov", "createdAt": "2020-05-13T22:18:41Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/NonValidatingObjectMapper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2015-2018 _floragunn_ GmbH\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Portions Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.security;\n+\n+import java.io.IOException;\n+import java.security.AccessController;\n+import java.security.PrivilegedActionException;\n+import java.security.PrivilegedExceptionAction;\n+\n+import org.elasticsearch.SpecialPermission;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JavaType;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.type.TypeFactory;\n+\n+public class NonValidatingObjectMapper {\n+    private static final ObjectMapper nonValidatingObjectMapper = new ObjectMapper();", "originalCommit": "7694a383f041e385ef529d8bdf552a2604d7af3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}