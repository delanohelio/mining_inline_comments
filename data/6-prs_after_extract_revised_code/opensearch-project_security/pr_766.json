{"pr_number": 766, "pr_title": "Fix missing trim when parsing roles in proxy authenticator", "pr_createdAt": "2020-10-13T18:44:01Z", "pr_url": "https://github.com/opensearch-project/security/pull/766", "timeline": [{"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b", "url": "https://github.com/opensearch-project/security/commit/2577f60cd17d3079cc3733d51e5f8ea6fb49807b", "message": "Fix missing trim when parsing roles in proxy authenticator", "committedDate": "2020-10-13T18:42:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0MjIwNA==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504242204", "bodyText": "Consider using Pattern.splitAsStream(). Compile pattern in the HTTPProxyAuthenticator constructor.", "author": "vrozov", "createdAt": "2020-10-13T20:34:33Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,8 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Stream.of(roles.split(rolesSeparator)).map(String::trim).toArray(String[]::new);", "originalCommit": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODE5NA==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504278194", "bodyText": "Filter out empty string after trim().", "author": "vrozov", "createdAt": "2020-10-13T21:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0MjIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\nindex 759b453e..6331957d 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n\n@@ -79,7 +79,11 @@ public class HTTPProxyAuthenticator implements HTTPAuthenticator {\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n                 String roles = (String) request.header(rolesHeader);\n-                backendRoles = Stream.of(roles.split(rolesSeparator)).map(String::trim).toArray(String[]::new);\n+                backendRoles = Pattern.compile(rolesSeparator)\n+                        .splitAsStream(roles)\n+                        .map(String::trim)\n+                        .filter(role -> !Strings.isNullOrEmpty(role))\n+                        .toArray(String[]::new);\n             }\n             return new AuthCredentials((String) request.header(userHeader), backendRoles).markComplete();\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODQ2OA==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504278468", "bodyText": "avoid wildcard import", "author": "vrozov", "createdAt": "2020-10-13T21:49:05Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "diffHunk": "@@ -29,6 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n+import static org.hamcrest.MatcherAssert.*;\n+import static org.hamcrest.Matchers.*;", "originalCommit": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java\nindex ed952210..ea53adbb 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java\n\n@@ -29,8 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n-import static org.hamcrest.MatcherAssert.*;\n-import static org.hamcrest.Matchers.*;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.contains;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3OTY2OA==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504279668", "bodyText": "nit: prefer junit over hamcrest.", "author": "vrozov", "createdAt": "2020-10-13T21:51:56Z", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "diffHunk": "@@ -29,6 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n+import static org.hamcrest.MatcherAssert.*;", "originalCommit": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzMjI5Mg==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504432292", "bodyText": "In this case (list comparison), I think that hamcrest is better than junit.\nWhy should junit be prefered to hamcrest ?", "author": "mmadoo", "createdAt": "2020-10-14T06:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3OTY2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MjE2Ng==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504972166", "bodyText": "For consistency. Looking at the code it is hard to guess that assertNull() is from different library than assertThat().", "author": "vrozov", "createdAt": "2020-10-14T21:06:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3OTY2OA=="}], "type": "inlineReview", "revised_code": {"commit": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "chunk": "diff --git a/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java b/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java\nindex ed952210..ea53adbb 100644\n--- a/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java\n+++ b/src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java\n\n@@ -29,8 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n-import static org.hamcrest.MatcherAssert.*;\n-import static org.hamcrest.Matchers.*;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.contains;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n"}}, {"oid": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "url": "https://github.com/opensearch-project/security/commit/52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "message": "Fix", "committedDate": "2020-10-14T06:28:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2OTU3Ng==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504969576", "bodyText": "Compile pattern once in the constructor.", "author": "vrozov", "createdAt": "2020-10-14T21:01:10Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Pattern.compile(rolesSeparator)", "originalCommit": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c0015598c75c0f6d59cb5a096ea89f7ee9cc9a5", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\nindex 6331957d..81c5c22e 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n\n@@ -79,10 +80,10 @@ public class HTTPProxyAuthenticator implements HTTPAuthenticator {\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n                 String roles = (String) request.header(rolesHeader);\n-                backendRoles = Pattern.compile(rolesSeparator)\n+                backendRoles = rolesSeparator\n                         .splitAsStream(roles)\n                         .map(String::trim)\n-                        .filter(role -> !Strings.isNullOrEmpty(role))\n+                        .filter(role -> !\"\".equals(role))\n                         .toArray(String[]::new);\n             }\n             return new AuthCredentials((String) request.header(userHeader), backendRoles).markComplete();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2OTgxMQ==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504969811", "bodyText": "AFAIK, it can't be null, it can be empty.", "author": "vrozov", "createdAt": "2020-10-14T21:01:42Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Pattern.compile(rolesSeparator)\n+                        .splitAsStream(roles)\n+                        .map(String::trim)\n+                        .filter(role -> !Strings.isNullOrEmpty(role))", "originalCommit": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c0015598c75c0f6d59cb5a096ea89f7ee9cc9a5", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\nindex 6331957d..81c5c22e 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n\n@@ -79,10 +80,10 @@ public class HTTPProxyAuthenticator implements HTTPAuthenticator {\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n                 String roles = (String) request.header(rolesHeader);\n-                backendRoles = Pattern.compile(rolesSeparator)\n+                backendRoles = rolesSeparator\n                         .splitAsStream(roles)\n                         .map(String::trim)\n-                        .filter(role -> !Strings.isNullOrEmpty(role))\n+                        .filter(role -> !\"\".equals(role))\n                         .toArray(String[]::new);\n             }\n             return new AuthCredentials((String) request.header(userHeader), backendRoles).markComplete();\n"}}, {"oid": "1c0015598c75c0f6d59cb5a096ea89f7ee9cc9a5", "url": "https://github.com/opensearch-project/security/commit/1c0015598c75c0f6d59cb5a096ea89f7ee9cc9a5", "message": "fix", "committedDate": "2020-10-15T07:00:46Z", "type": "commit"}, {"oid": "20e35298f977a9bbc25c6b7eabbb4b931d3395f6", "url": "https://github.com/opensearch-project/security/commit/20e35298f977a9bbc25c6b7eabbb4b931d3395f6", "message": "Remove unused import", "committedDate": "2020-10-15T07:02:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNzU3Mg==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r505937572", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .filter(role -> !\"\".equals(role))\n          \n          \n            \n                                    .filter(Predicates.not(String::isEmpty))", "author": "vrozov", "createdAt": "2020-10-16T00:31:22Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +79,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = rolesSeparator\n+                        .splitAsStream(roles)\n+                        .map(String::trim)\n+                        .filter(role -> !\"\".equals(role))", "originalCommit": "20e35298f977a9bbc25c6b7eabbb4b931d3395f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74c73cab4da40317d6d02f52ce6fbd06ff6ff45f", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\nindex 81c5c22e..00ff6228 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n\n@@ -83,7 +83,7 @@ public class HTTPProxyAuthenticator implements HTTPAuthenticator {\n                 backendRoles = rolesSeparator\n                         .splitAsStream(roles)\n                         .map(String::trim)\n-                        .filter(role -> !\"\".equals(role))\n+                        .filter(Predicates.not(String::isEmpty))\n                         .toArray(String[]::new);\n             }\n             return new AuthCredentials((String) request.header(userHeader), backendRoles).markComplete();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk0MzMyMw==", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r505943323", "bodyText": "nit: inline roles.", "author": "vrozov", "createdAt": "2020-10-16T00:45:08Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +79,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);", "originalCommit": "20e35298f977a9bbc25c6b7eabbb4b931d3395f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74c73cab4da40317d6d02f52ce6fbd06ff6ff45f", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\nindex 81c5c22e..00ff6228 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n\n@@ -83,7 +83,7 @@ public class HTTPProxyAuthenticator implements HTTPAuthenticator {\n                 backendRoles = rolesSeparator\n                         .splitAsStream(roles)\n                         .map(String::trim)\n-                        .filter(role -> !\"\".equals(role))\n+                        .filter(Predicates.not(String::isEmpty))\n                         .toArray(String[]::new);\n             }\n             return new AuthCredentials((String) request.header(userHeader), backendRoles).markComplete();\n"}}, {"oid": "74c73cab4da40317d6d02f52ce6fbd06ff6ff45f", "url": "https://github.com/opensearch-project/security/commit/74c73cab4da40317d6d02f52ce6fbd06ff6ff45f", "message": "Update src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java\n\nCo-authored-by: Vlad Rozov <vrozov@users.noreply.github.com>", "committedDate": "2020-10-16T06:44:44Z", "type": "commit"}, {"oid": "7c8a9bc2dcaad4502ab09937863951970a210240", "url": "https://github.com/opensearch-project/security/commit/7c8a9bc2dcaad4502ab09937863951970a210240", "message": "Inline roles", "committedDate": "2020-10-16T06:54:16Z", "type": "commit"}]}