{"pr_number": 616, "pr_title": "Remove unnecessary check of remote address for null", "pr_createdAt": "2020-08-03T18:06:01Z", "pr_url": "https://github.com/opensearch-project/security/pull/616", "timeline": [{"oid": "7c33ce0fb612d009a3f44ca261290f05530c6800", "url": "https://github.com/opensearch-project/security/commit/7c33ce0fb612d009a3f44ca261290f05530c6800", "message": "Remove unnecessary check of remote address for null", "committedDate": "2020-08-03T18:00:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4NzM3Nw==", "url": "https://github.com/opensearch-project/security/pull/616#discussion_r464587377", "bodyText": "Can you explain why removing this is OK ?\nI don't see any checks for null in \"mapRoles\" method.\nhttps://github.com/opendistro-for-elasticsearch/security/blob/master/src/main/java/com/amazon/opendistroforelasticsearch/security/privileges/PrivilegesEvaluator.java#L436", "author": "dinusX", "createdAt": "2020-08-03T18:25:20Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/OpenDistroSecurityIndexSearcherWrapper.java", "diffHunk": "@@ -122,11 +122,8 @@ protected final boolean isBlockedIndexRequest() {\n     }\n \n     protected final boolean isPermittedOnIndex() {\n-        final TransportAddress caller = (TransportAddress) this.threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_REMOTE_ADDRESS);\n-        final User user = (User) threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n-        if (caller == null || user == null) {\n-            return false;\n-        }", "originalCommit": "7c33ce0fb612d009a3f44ca261290f05530c6800", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwMzM1NA==", "url": "https://github.com/opensearch-project/security/pull/616#discussion_r464603354", "bodyText": "There are few other places where mapRoles() method is called without the check for the remote address to be not null.\nThe mapRoles() call eventually translates to the call to Set<String> map(final User user, final TransportAddress caller) (either in ConfigModelV6 or ConfigModelV7) that correctly handles cases when caller is null", "author": "vrozov", "createdAt": "2020-08-03T18:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4NzM3Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4ODc3NQ==", "url": "https://github.com/opensearch-project/security/pull/616#discussion_r464588775", "bodyText": "Will this automatic object mapping work on some older versions of Java ?", "author": "dinusX", "createdAt": "2020-08-03T18:27:58Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/OpenDistroSecurityIndexSearcherWrapper.java", "diffHunk": "@@ -122,11 +122,8 @@ protected final boolean isBlockedIndexRequest() {\n     }\n \n     protected final boolean isPermittedOnIndex() {\n-        final TransportAddress caller = (TransportAddress) this.threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_REMOTE_ADDRESS);\n-        final User user = (User) threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);", "originalCommit": "7c33ce0fb612d009a3f44ca261290f05530c6800", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTczOA==", "url": "https://github.com/opensearch-project/security/pull/616#discussion_r464605738", "bodyText": "Yes, the type inference is available since 1.8 and it is not new for the project, there are few other places where it is already used.", "author": "vrozov", "createdAt": "2020-08-03T19:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4ODc3NQ=="}], "type": "inlineReview", "revised_code": null}]}