{"pr_number": 261, "pr_title": "Add null checks to translators", "pr_createdAt": "2020-07-18T14:31:26Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5NjU1MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457396550", "bodyText": "I would rather assume \"ACTIVE\"", "author": "ibacher", "createdAt": "2020-07-20T13:43:37Z", "path": "api-2.2/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConditionClinicalStatusTranslatorImpl_2_2.java", "diffHunk": "@@ -49,6 +49,10 @@ public ConditionClinicalStatus toOpenmrsType(CodeableConcept codeableConcept) {\n \t}\n \t\n \tprivate ConditionClinicalStatus getClinicalStatus(Coding coding) {\n+\t\tif (coding.getCode() == null) {\n+\t\t\treturn ConditionClinicalStatus.INACTIVE;", "originalCommit": "6935bd650f3214698eacbcaa432dcd17d01cfcfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxNDc5MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457414791", "bodyText": "@ibacher\nI set it as INACTIVE because the default value being returned is INACTIVE as well.\nSimilarly, we are setting as \"inactive\" in the toFhirResource() as well.", "author": "varung-31", "createdAt": "2020-07-20T14:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5NjU1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxNTc1Mg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457415752", "bodyText": "Ah... ok. That's probably not a great assumption, but fine.", "author": "ibacher", "createdAt": "2020-07-20T14:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5NjU1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5ODE0OA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457398148", "bodyText": "Could we instead make use of the Apache Commons Collections version of this class and method?", "author": "ibacher", "createdAt": "2020-07-20T13:45:24Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java", "diffHunk": "@@ -30,6 +30,7 @@\n import org.openmrs.module.fhir2.api.translators.ProvenanceTranslator;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.springframework.util.CollectionUtils;", "originalCommit": "6935bd650f3214698eacbcaa432dcd17d01cfcfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ece796d9c0c9a576682d41fb0a522781db666886", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java\nindex 0467fdec..1e8274b3 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceTranslatorImpl.java\n\n@@ -30,7 +31,6 @@ import org.openmrs.module.fhir2.api.translators.PractitionerReferenceTranslator;\n import org.openmrs.module.fhir2.api.translators.ProvenanceTranslator;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n-import org.springframework.util.CollectionUtils;\n \n @Component\n @Setter(AccessLevel.PACKAGE)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM5OTE4NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457399185", "bodyText": "It seems kind of silly to import StringUtils just to get a reference to the empty string.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tString display = (conceptName == null || conceptName.getName() == null) ? StringUtils.EMPTY : conceptName.getName();\n          \n          \n            \n            \t\tString display = (conceptName == null || conceptName.getName() == null) ? \"\" : conceptName.getName();", "author": "ibacher", "createdAt": "2020-07-20T13:46:40Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConceptTranslatorImpl.java", "diffHunk": "@@ -103,11 +106,11 @@ private void addConceptCoding(Coding coding, String system, String code, Concept\n \t\tcoding.setSystem(system);\n \t\tcoding.setCode(code);\n \t\tConceptName conceptName = concept.getName(userDefaultProperties.getDefaultLocale());\n-\t\tif (conceptName.getName() == null) {\n+\t\tif (conceptName == null || conceptName.getName() == null) {\n \t\t\tconceptName = concept.getName();\n \t\t}\n \t\t\n-\t\tString display = conceptName.getName() == null ? \"\" : conceptName.getName();\n+\t\tString display = (conceptName == null || conceptName.getName() == null) ? StringUtils.EMPTY : conceptName.getName();", "originalCommit": "6935bd650f3214698eacbcaa432dcd17d01cfcfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ece796d9c0c9a576682d41fb0a522781db666886", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConceptTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConceptTranslatorImpl.java\nindex 49a038b4..3a9d5b87 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConceptTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ConceptTranslatorImpl.java\n\n@@ -110,7 +109,7 @@ public class ConceptTranslatorImpl implements ConceptTranslator {\n \t\t\tconceptName = concept.getName();\n \t\t}\n \t\t\n-\t\tString display = (conceptName == null || conceptName.getName() == null) ? StringUtils.EMPTY : conceptName.getName();\n+\t\tString display = (conceptName == null || conceptName.getName() == null) ? \"\" : conceptName.getName();\n \t\tcoding.setDisplay(display);\n \t\t\n \t\tfor (ConceptName name : concept.getNames()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTUyNQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457401525", "bodyText": "While we're adding error checking code:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));\n          \n          \n            \n            \t\t\t\tdouble latitude = NumberUtils.toDouble(openmrsLocation.getLatitiude, -1.0d);\n          \n          \n            \n            \t\t\t\tif (latitude >= 0.0d) {\n          \n          \n            \n            \t\t\t\t\tposition.setLatitude(latitude);\n          \n          \n            \n            \t\t\t\t}", "author": "ibacher", "createdAt": "2020-07-20T13:49:27Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java", "diffHunk": "@@ -65,10 +66,10 @@ public Location toFhirResource(org.openmrs.Location openmrsLocation) {\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (openmrsLocation.getLatitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));", "originalCommit": "6935bd650f3214698eacbcaa432dcd17d01cfcfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMjI4NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457402285", "bodyText": "Note that this also eliminates the need for the isNotEmpty() check as a null or empty value will result in the default value.", "author": "ibacher", "createdAt": "2020-07-20T13:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "ece796d9c0c9a576682d41fb0a522781db666886", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java\nindex 1eb24ce0..b87a3201 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java\n\n@@ -66,11 +66,14 @@ public class LocationTranslatorImpl extends BaseReferenceHandlingTranslator impl\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n-\t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));\n+\t\t\tdouble latitude = NumberUtils.toDouble(openmrsLocation.getLatitude(), -1.0d);\n+\t\t\tif (latitude >= 0.0d) {\n+\t\t\t\tposition.setLatitude(latitude);\n \t\t\t}\n-\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLongitude())) {\n-\t\t\t\tposition.setLongitude(Double.parseDouble(openmrsLocation.getLongitude()));\n+\t\t\t\n+\t\t\tdouble longitude = NumberUtils.toDouble(openmrsLocation.getLongitude(), -1.0d);\n+\t\t\tif (longitude >= 0.0d) {\n+\t\t\t\tposition.setLongitude(longitude);\n \t\t\t}\n \t\t\t\n \t\t\tfhirLocation.setPosition(position);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQwMTgzMQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457401831", "bodyText": "As above...", "author": "ibacher", "createdAt": "2020-07-20T13:49:42Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java", "diffHunk": "@@ -65,10 +66,10 @@ public Location toFhirResource(org.openmrs.Location openmrsLocation) {\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (openmrsLocation.getLatitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n \t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));\n \t\t\t}\n-\t\t\tif (openmrsLocation.getLongitude() != null) {\n+\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLongitude())) {\n \t\t\t\tposition.setLongitude(Double.parseDouble(openmrsLocation.getLongitude()));", "originalCommit": "6935bd650f3214698eacbcaa432dcd17d01cfcfb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ece796d9c0c9a576682d41fb0a522781db666886", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java\nindex 1eb24ce0..b87a3201 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/LocationTranslatorImpl.java\n\n@@ -66,11 +66,14 @@ public class LocationTranslatorImpl extends BaseReferenceHandlingTranslator impl\n \t\t\tfhirLocation.setDescription(openmrsLocation.getDescription());\n \t\t\tfhirLocation.setAddress(locationAddressTranslator.toFhirResource(openmrsLocation));\n \t\t\t\n-\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLatitude())) {\n-\t\t\t\tposition.setLatitude(Double.parseDouble(openmrsLocation.getLatitude()));\n+\t\t\tdouble latitude = NumberUtils.toDouble(openmrsLocation.getLatitude(), -1.0d);\n+\t\t\tif (latitude >= 0.0d) {\n+\t\t\t\tposition.setLatitude(latitude);\n \t\t\t}\n-\t\t\tif (StringUtils.isNotEmpty(openmrsLocation.getLongitude())) {\n-\t\t\t\tposition.setLongitude(Double.parseDouble(openmrsLocation.getLongitude()));\n+\t\t\t\n+\t\t\tdouble longitude = NumberUtils.toDouble(openmrsLocation.getLongitude(), -1.0d);\n+\t\t\tif (longitude >= 0.0d) {\n+\t\t\t\tposition.setLongitude(longitude);\n \t\t\t}\n \t\t\t\n \t\t\tfhirLocation.setPosition(position);\n"}}, {"oid": "ece796d9c0c9a576682d41fb0a522781db666886", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ece796d9c0c9a576682d41fb0a522781db666886", "message": "Add null checks to translators", "committedDate": "2020-07-20T14:20:35Z", "type": "commit"}, {"oid": "ece796d9c0c9a576682d41fb0a522781db666886", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/ece796d9c0c9a576682d41fb0a522781db666886", "message": "Add null checks to translators", "committedDate": "2020-07-20T14:20:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0NzU5OQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/261#discussion_r457647599", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\n          \n          \n            \n            \t\t\t\tif (reaction.getReaction() != null) {\n          \n          \n            \n            \t\t\t\t\tmanifestations.add(\n          \n          \n            \n            \t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n          \n          \n            \n            \t\t\t\t}\n          \n          \n            \n            \t\t\t\t\n          \n          \n            \n            \t\t\t\tif (reaction.getReaction() != null) {\n          \n          \n            \n            \t\t\t\t\tmanifestations.add(\n          \n          \n            \n            \t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n          \n          \n            \n            \t\t\t\t}", "author": "ibacher", "createdAt": "2020-07-20T19:40:25Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java", "diffHunk": "@@ -83,9 +83,16 @@ private CodeableConcept getAllergySubstance(Allergen allergen) {\n \t\n \tprivate List<CodeableConcept> getManifestation(List<AllergyReaction> reactions) {\n \t\tList<CodeableConcept> manifestations = new ArrayList<>();\n-\t\tfor (AllergyReaction reaction : reactions) {\n-\t\t\tmanifestations\n-\t\t\t        .add(conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n+\t\t\n+\t\tif (reactions != null) {\n+\t\t\tfor (AllergyReaction reaction : reactions) {\n+\t\t\t\t\n+\t\t\t\tif (reaction.getReaction() != null) {\n+\t\t\t\t\tmanifestations.add(\n+\t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n+\t\t\t\t}\n+\t\t\t\t", "originalCommit": "ece796d9c0c9a576682d41fb0a522781db666886", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d46a9948883ee0056e3c103882bac7ccecef6415", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java\nindex a42dee0a..f4ee6831 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java\n\n@@ -86,12 +86,10 @@ public class AllergyIntoleranceReactionComponentTranslatorImpl implements Allerg\n \t\t\n \t\tif (reactions != null) {\n \t\t\tfor (AllergyReaction reaction : reactions) {\n-\t\t\t\t\n \t\t\t\tif (reaction.getReaction() != null) {\n \t\t\t\t\tmanifestations.add(\n \t\t\t\t\t    conceptTranslator.toFhirResource(reaction.getReaction()).setText(reaction.getReactionNonCoded()));\n \t\t\t\t}\n-\t\t\t\t\n \t\t\t}\n \t\t}\n \t\t\n"}}, {"oid": "d46a9948883ee0056e3c103882bac7ccecef6415", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d46a9948883ee0056e3c103882bac7ccecef6415", "message": "Update api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/AllergyIntoleranceReactionComponentTranslatorImpl.java", "committedDate": "2020-07-20T19:41:23Z", "type": "commit"}]}