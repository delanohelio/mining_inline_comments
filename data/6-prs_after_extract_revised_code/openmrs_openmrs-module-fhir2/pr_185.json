{"pr_number": 185, "pr_title": "FM2-178: Add patient search parameter where subject is allowed", "pr_createdAt": "2020-05-27T14:32:17Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/185", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMwNzgyNw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/185#discussion_r431307827", "bodyText": "@reagan-meant I don't think that we should do this here.\ncc @ibacher", "author": "VaishSiddharth", "createdAt": "2020-05-27T17:12:21Z", "path": "omod/src/main/java/org/openmrs/module/fhir2/providers/EncounterFhirResourceProvider.java", "diffHunk": "@@ -69,7 +69,12 @@ public Bundle searchEncounter(@OptionalParam(name = Encounter.SP_DATE) DateRange\n \t                Practitioner.SP_GIVEN, Practitioner.SP_FAMILY,\n \t                Practitioner.SP_NAME }, targetTypes = Practitioner.class) ReferenceParam participantReference,\n \t        @OptionalParam(name = Encounter.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_GIVEN,\n-\t                Patient.SP_FAMILY, Patient.SP_NAME }, targetTypes = Patient.class) ReferenceParam subjectReference) {\n+\t\t\t\t\tPatient.SP_FAMILY, Patient.SP_NAME }, targetTypes = Patient.class) ReferenceParam subjectReference,\n+\t\t\t@OptionalParam(name = Encounter.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_GIVEN,\n+\t                Patient.SP_FAMILY, Patient.SP_NAME }, targetTypes = Patient.class) ReferenceParam patientReference) {\n+\t\t\t\t\t\tif(patientReference != null){\n+\t\t\t\t\t\t\tsubjectReference = patientReference;\n+\t\t\t\t\t\t}", "originalCommit": "50dcba1c852372f16c6528c97406ec1edb992d7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwMjM3NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/185#discussion_r431402375", "bodyText": "Actually, this is explicitly what we do want to have happen. The patient search parameter is a sub-set of the subject search parameter where the subject is a Patient. So the patient parameter is more exact than the subject parameter. I suppose the other thing we could do is throw an exception here.", "author": "ibacher", "createdAt": "2020-05-27T19:47:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMwNzgyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzOTE0MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/185#discussion_r431639140", "bodyText": "@ibacher what would be the potential cause the exception?", "author": "reagan-meant", "createdAt": "2020-05-28T07:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMwNzgyNw=="}], "type": "inlineReview", "revised_code": {"commit": "a882800dc7890b57593bd970d71c3a7980851669", "chunk": "diff --git a/omod/src/main/java/org/openmrs/module/fhir2/providers/EncounterFhirResourceProvider.java b/api/src/main/java/org/openmrs/module/fhir2/providers/r4/EncounterFhirResourceProvider.java\nsimilarity index 79%\nrename from omod/src/main/java/org/openmrs/module/fhir2/providers/EncounterFhirResourceProvider.java\nrename to api/src/main/java/org/openmrs/module/fhir2/providers/r4/EncounterFhirResourceProvider.java\nindex 486c2f9f..1d9f0105 100644\n--- a/omod/src/main/java/org/openmrs/module/fhir2/providers/EncounterFhirResourceProvider.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/providers/r4/EncounterFhirResourceProvider.java\n\n@@ -53,41 +53,43 @@ public class EncounterFhirResourceProvider implements IResourceProvider {\n \t\n \t@Read\n \tpublic Encounter getEncounterByUuid(@IdParam @NotNull IdType id) {\n-\t\tEncounter encounter = encounterService.getEncounterByUuid(id.getIdPart());\n+\t\tEncounter encounter = encounterService.get(id.getIdPart());\n \t\tif (encounter == null) {\n \t\t\tthrow new ResourceNotFoundException(\"Could not find encounter with Id \" + id.getIdPart());\n \t\t}\n \t\treturn encounter;\n \t}\n \t\n+\t@History\n+\t@SuppressWarnings(\"unused\")\n+\tpublic List<Resource> getEncounterHistoryById(@IdParam @NotNull IdType id) {\n+\t\tEncounter encounter = encounterService.get(id.getIdPart());\n+\t\tif (encounter == null) {\n+\t\t\tthrow new ResourceNotFoundException(\"Could not find encounter with Id \" + id.getIdPart());\n+\t\t}\n+\t\treturn encounter.getContained();\n+\t}\n+\t\n \t@Search\n \tpublic Bundle searchEncounter(@OptionalParam(name = Encounter.SP_DATE) DateRangeParam date,\n \t        @OptionalParam(name = Encounter.SP_LOCATION, chainWhitelist = { \"\", Location.SP_ADDRESS_CITY,\n \t                Location.SP_ADDRESS_STATE, Location.SP_ADDRESS_COUNTRY,\n-\t                Location.SP_ADDRESS_POSTALCODE }, targetTypes = Location.class) ReferenceParam location,\n+\t                Location.SP_ADDRESS_POSTALCODE }, targetTypes = Location.class) ReferenceAndListParam location,\n \t        @OptionalParam(name = Encounter.SP_PARTICIPANT, chainWhitelist = { \"\", Practitioner.SP_IDENTIFIER,\n \t                Practitioner.SP_GIVEN, Practitioner.SP_FAMILY,\n-\t                Practitioner.SP_NAME }, targetTypes = Practitioner.class) ReferenceParam participantReference,\n+\t                Practitioner.SP_NAME }, targetTypes = Practitioner.class) ReferenceAndListParam participantReference,\n \t        @OptionalParam(name = Encounter.SP_SUBJECT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_GIVEN,\n-\t\t\t\t\tPatient.SP_FAMILY, Patient.SP_NAME }, targetTypes = Patient.class) ReferenceParam subjectReference,\n+\t                Patient.SP_FAMILY,\n+\t\t\t\t\tPatient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam subjectReference,\n \t\t\t@OptionalParam(name = Encounter.SP_PATIENT, chainWhitelist = { \"\", Patient.SP_IDENTIFIER, Patient.SP_GIVEN,\n-\t                Patient.SP_FAMILY, Patient.SP_NAME }, targetTypes = Patient.class) ReferenceParam patientReference) {\n-\t\t\t\t\t\tif(patientReference != null){\n-\t\t\t\t\t\t\tsubjectReference = patientReference;\n+\t                Patient.SP_FAMILY, Patient.SP_NAME }, targetTypes = Patient.class) ReferenceAndListParam patientParam) {\n+\t\t\t\t\t\tif(patientParam != null){\n+\t\t\t\t\t\t\tsubjectReference = patientParam;\n \t\t\t\t\t\t}\n-\t\treturn FhirServerUtils.convertSearchResultsToBundle(\n+\t\t\t\t\t\t\n+\t\treturn FhirProviderUtils.convertSearchResultsToBundle(\n \t\t    encounterService.searchForEncounters(date, location, participantReference, subjectReference));\n \t\t\n \t}\n \t\n-\t@History\n-\t@SuppressWarnings(\"unused\")\n-\tpublic List<Resource> getEncounterHistoryById(@IdParam @NotNull IdType id) {\n-\t\tEncounter encounter = encounterService.getEncounterByUuid(id.getIdPart());\n-\t\tif (encounter == null) {\n-\t\t\tthrow new ResourceNotFoundException(\"Could not find encounter with Id \" + id.getIdPart());\n-\t\t}\n-\t\treturn encounter.getContained();\n-\t}\n-\t\n }\n"}}, {"oid": "a882800dc7890b57593bd970d71c3a7980851669", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a882800dc7890b57593bd970d71c3a7980851669", "message": "FM2-178: Creating patient/subject search parameter where subject/patient is allowed", "committedDate": "2020-05-28T09:00:59Z", "type": "commit"}, {"oid": "a882800dc7890b57593bd970d71c3a7980851669", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a882800dc7890b57593bd970d71c3a7980851669", "message": "FM2-178: Creating patient/subject search parameter where subject/patient is allowed", "committedDate": "2020-05-28T09:00:59Z", "type": "forcePushed"}]}