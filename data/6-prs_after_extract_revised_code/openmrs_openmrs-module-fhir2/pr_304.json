{"pr_number": 304, "pr_title": "FM2-311: Refactor to remove BaseServiceRequestTranslatorImpl", "pr_createdAt": "2020-10-30T06:40:50Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/304", "timeline": [{"oid": "b827fece7f9b2befb9c859b7a836590f518c64e7", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/b827fece7f9b2befb9c859b7a836590f518c64e7", "message": "FM2-311:Refactor to remove BaseServiceRequestTranslatorImpl", "committedDate": "2020-10-30T06:37:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwMDk2Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/304#discussion_r516800966", "bodyText": "Please add tab indentation", "author": "varung-31", "createdAt": "2020-11-03T16:34:04Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ServiceRequestTranslatorImpl.java", "diffHunk": "@@ -80,4 +97,54 @@ public ServiceRequest toFhirResource(@Nonnull TestOrder order) {\n \tpublic TestOrder toOpenmrsType(@Nonnull ServiceRequest resource) {\n \t\tthrow new UnsupportedOperationException();\n \t}\n+\n+\tprivate ServiceRequest.ServiceRequestStatus determineServiceRequestStatus(String orderUuid) {\n+\t\tIBundleProvider results = taskService.searchForTasks(\n+\t\t\t\tnew ReferenceAndListParam()\n+\t\t\t\t\t\t.addAnd(new ReferenceOrListParam().add(new ReferenceParam(\"ServiceRequest\", null, orderUuid))),\n+\t\t\t\tnull, null, null, null, null);\n+\n+\t\tCollection<Task> serviceRequestTasks = results.getResources(START_INDEX, END_INDEX).stream().map(p -> (Task) p)\n+\t\t\t\t.collect(Collectors.toList());\n+\n+\t\tServiceRequest.ServiceRequestStatus serviceRequestStatus = ServiceRequest.ServiceRequestStatus.UNKNOWN;\n+\n+\t\tif (serviceRequestTasks.size() != 1) {\n+\t\t\treturn serviceRequestStatus;\n+\t\t}\n+\n+\t\tTask serviceRequestTask = serviceRequestTasks.iterator().next();\n+\n+\t\tif (serviceRequestTask.hasStatus()) {\n+\t\t\tswitch (serviceRequestTask.getStatus()) {\n+\t\t\tcase ACCEPTED:\n+\t\t\tcase REQUESTED:\n+\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.ACTIVE;\n+\t\t\t\tbreak;\n+\t\t\tcase REJECTED:\n+\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.REVOKED;\n+\t\t\t\tbreak;\n+\t\t\tcase COMPLETED:\n+\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.COMPLETED;\n+\t\t\t\tbreak;", "originalCommit": "b827fece7f9b2befb9c859b7a836590f518c64e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd8fd1aff1d7cd22a0a901a893f37f83972723ba", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ServiceRequestTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ServiceRequestTranslatorImpl.java\nindex bc6f379a..b7bd37ee 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ServiceRequestTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/ServiceRequestTranslatorImpl.java\n\n@@ -97,54 +96,57 @@ public class ServiceRequestTranslatorImpl implements ServiceRequestTranslator<Te\n \tpublic TestOrder toOpenmrsType(@Nonnull ServiceRequest resource) {\n \t\tthrow new UnsupportedOperationException();\n \t}\n-\n+\t\n \tprivate ServiceRequest.ServiceRequestStatus determineServiceRequestStatus(String orderUuid) {\n \t\tIBundleProvider results = taskService.searchForTasks(\n-\t\t\t\tnew ReferenceAndListParam()\n-\t\t\t\t\t\t.addAnd(new ReferenceOrListParam().add(new ReferenceParam(\"ServiceRequest\", null, orderUuid))),\n-\t\t\t\tnull, null, null, null, null);\n-\n+\t\t    new ReferenceAndListParam()\n+\t\t            .addAnd(new ReferenceOrListParam().add(new ReferenceParam(\"ServiceRequest\", null, orderUuid))),\n+\t\t    null, null, null, null, null);\n+\t\t\n \t\tCollection<Task> serviceRequestTasks = results.getResources(START_INDEX, END_INDEX).stream().map(p -> (Task) p)\n-\t\t\t\t.collect(Collectors.toList());\n-\n+\t\t        .collect(Collectors.toList());\n+\t\t\n \t\tServiceRequest.ServiceRequestStatus serviceRequestStatus = ServiceRequest.ServiceRequestStatus.UNKNOWN;\n-\n+\t\t\n \t\tif (serviceRequestTasks.size() != 1) {\n \t\t\treturn serviceRequestStatus;\n \t\t}\n-\n+\t\t\n \t\tTask serviceRequestTask = serviceRequestTasks.iterator().next();\n-\n+\t\t\n \t\tif (serviceRequestTask.hasStatus()) {\n \t\t\tswitch (serviceRequestTask.getStatus()) {\n-\t\t\tcase ACCEPTED:\n-\t\t\tcase REQUESTED:\n-\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.ACTIVE;\n-\t\t\t\tbreak;\n-\t\t\tcase REJECTED:\n-\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.REVOKED;\n-\t\t\t\tbreak;\n-\t\t\tcase COMPLETED:\n-\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.COMPLETED;\n-\t\t\t\tbreak;\n+\t\t\t\tcase ACCEPTED:\n+\t\t\t\t\t\n+\t\t\t\tcase REQUESTED:\n+\t\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.ACTIVE;\n+\t\t\t\t\tbreak;\n+\t\t\t\t\t\n+\t\t\t\tcase REJECTED:\n+\t\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.REVOKED;\n+\t\t\t\t\tbreak;\n+\t\t\t\t\t\n+\t\t\t\tcase COMPLETED:\n+\t\t\t\t\tserviceRequestStatus = ServiceRequest.ServiceRequestStatus.COMPLETED;\n+\t\t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t\treturn serviceRequestStatus;\n \t}\n-\n+\t\n \tprivate Reference determineServiceRequestPerformer(String orderUuid) {\n \t\tIBundleProvider results = taskService.searchForTasks(\n-\t\t\t\tnew ReferenceAndListParam()\n-\t\t\t\t\t\t.addAnd(new ReferenceOrListParam().add(new ReferenceParam(\"ServiceRequest\", null, orderUuid))),\n-\t\t\t\tnull, null, null, null, null);\n-\n+\t\t    new ReferenceAndListParam()\n+\t\t            .addAnd(new ReferenceOrListParam().add(new ReferenceParam(\"ServiceRequest\", null, orderUuid))),\n+\t\t    null, null, null, null, null);\n+\t\t\n \t\tCollection<Task> serviceRequestTasks = results.getResources(START_INDEX, END_INDEX).stream().map(p -> (Task) p)\n-\t\t\t\t.collect(Collectors.toList());\n-\n+\t\t        .collect(Collectors.toList());\n+\t\t\n \t\tif (serviceRequestTasks.size() != 1) {\n \t\t\treturn null;\n \t\t}\n-\n+\t\t\n \t\treturn serviceRequestTasks.iterator().next().getOwner();\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwMTQ4NQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/304#discussion_r516801485", "bodyText": "Since this class is not being used at all, why not delete it completely?", "author": "varung-31", "createdAt": "2020-11-03T16:34:46Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/BaseServiceRequestTranslatorImpl.java", "diffHunk": "@@ -9,78 +9,11 @@\n  */\n package org.openmrs.module.fhir2.api.translators.impl;\n \n-import java.util.Collection;\n-import java.util.stream.Collectors;\n-\n-import ca.uhn.fhir.rest.api.server.IBundleProvider;\n-import ca.uhn.fhir.rest.param.ReferenceAndListParam;\n-import ca.uhn.fhir.rest.param.ReferenceOrListParam;\n-import ca.uhn.fhir.rest.param.ReferenceParam;\n import lombok.AccessLevel;\n import lombok.Setter;\n-import org.hl7.fhir.r4.model.Reference;\n-import org.hl7.fhir.r4.model.ServiceRequest;\n-import org.hl7.fhir.r4.model.Task;\n-import org.openmrs.module.fhir2.api.FhirTaskService;\n-import org.springframework.beans.factory.annotation.Autowired;\n \n @Setter(AccessLevel.PROTECTED)\n public abstract class BaseServiceRequestTranslatorImpl {", "originalCommit": "b827fece7f9b2befb9c859b7a836590f518c64e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd8fd1aff1d7cd22a0a901a893f37f83972723ba", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/BaseServiceRequestTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/BaseServiceRequestTranslatorImpl.java\ndeleted file mode 100644\nindex f6075863..00000000\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/BaseServiceRequestTranslatorImpl.java\n+++ /dev/null\n\n@@ -1,19 +0,0 @@\n-/*\n- * This Source Code Form is subject to the terms of the Mozilla Public License,\n- * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n- * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n- * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n- *\n- * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n- * graphic logo is a trademark of OpenMRS Inc.\n- */\n-package org.openmrs.module.fhir2.api.translators.impl;\n-\n-import lombok.AccessLevel;\n-import lombok.Setter;\n-\n-@Setter(AccessLevel.PROTECTED)\n-public abstract class BaseServiceRequestTranslatorImpl {\n-\t\n-\t\n-}\n"}}, {"oid": "fd8fd1aff1d7cd22a0a901a893f37f83972723ba", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fd8fd1aff1d7cd22a0a901a893f37f83972723ba", "message": "FM2-311:Refactor to remove BaseServiceRequestTranslatorImpl", "committedDate": "2020-11-10T09:38:16Z", "type": "commit"}]}