{"pr_number": 34, "pr_title": "FM2-11 Implement the Observation Resource", "pr_createdAt": "2020-01-21T16:48:45Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5ODMzOA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369398338", "bodyText": "I think this should be:\n/**\n  * Maps an {@link org.hl7.fhir.r4.model.Observation.ObservationStatus} to an {@link Obs}\n  */", "author": "corneliouzbett", "createdAt": "2020-01-22T07:09:51Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationStatusTranslator.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators;\n+\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.Obs;\n+\n+public interface ObservationStatusTranslator extends ToFhirTranslator<Obs, Observation.ObservationStatus>, UpdatableOpenmrsTranslator<Obs, Observation.ObservationStatus> {\n+\t\n+\t/**\n+\t * Maps an {@link Obs} to an {@link org.hl7.fhir.r4.model.Observation.ObservationStatus}\n+\t * \n+\t * @param observation the observation to translate\n+\t * @return the corresponding observation status\n+\t */\n+\t@Override\n+\tObservation.ObservationStatus toFhirResource(Obs observation);\n+\t\n+\t/**\n+\t * Maps a FHIR resource to an OpenMRS data element\n+\t * ", "originalCommit": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe7a926e8121ed6e9dcc52744e3d01d676928597", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationStatusTranslator.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationStatusTranslator.java\nindex e81647a3..8bea80a5 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationStatusTranslator.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/ObservationStatusTranslator.java\n\n@@ -24,7 +24,7 @@ public interface ObservationStatusTranslator extends ToFhirTranslator<Obs, Obser\n \tObservation.ObservationStatus toFhirResource(Obs observation);\n \t\n \t/**\n-\t * Maps a FHIR resource to an OpenMRS data element\n+\t * Maps an {@link org.hl7.fhir.r4.model.Observation.ObservationStatus} to an {@link Obs}\n \t * \n \t * @param observation the observation to update\n \t * @param observationStatus the observation status\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzODQ4Mg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369538482", "bodyText": "I would prefer this ordering of imports;\nblank, \njava.*, \nblank, \njavax.*, \nblank, \norg.*, \nblank, \ncom.*, \nblank, \nall other imports,\nblank,\nstatic all other\n\nWhat would you prefer?", "author": "corneliouzbett", "createdAt": "2020-01-22T12:45:42Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/dao/impl/FhirObservationDaoImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.dao.impl;\n+\n+import static org.hibernate.criterion.Restrictions.eq;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.hibernate.SessionFactory;\n+import org.openmrs.Obs;\n+import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n+import org.springframework.stereotype.Component;", "originalCommit": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU2OTE2MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369569160", "bodyText": "You're absolutely right that that's the OpenMRS standard. I actually prefer static imports at the top of the file, but I will fix this to reflect OpenMRS' coding style.", "author": "ibacher", "createdAt": "2020-01-22T13:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzODQ4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU3ODQ5Mw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369578493", "bodyText": "Actually, on digging a bit further, the OpenMRS standard is to use Eclipse's default, which has static imports at the top. Is there any reason not to do that?", "author": "ibacher", "createdAt": "2020-01-22T14:07:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzODQ4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxNTE2MQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369615161", "bodyText": "No reason at all.  We use OpenMRS standard", "author": "corneliouzbett", "createdAt": "2020-01-22T15:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzODQ4Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NDg2MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369544860", "bodyText": "I think new Date() can be volatile", "author": "corneliouzbett", "createdAt": "2020-01-22T13:00:40Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/ObservationValueTranslatorImplTest.java", "diffHunk": "@@ -0,0 +1,247 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.translators.impl;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.powermock.api.mockito.PowerMockito.mockStatic;\n+\n+import java.util.Date;\n+\n+import org.hl7.fhir.r4.model.BooleanType;\n+import org.hl7.fhir.r4.model.CodeableConcept;\n+import org.hl7.fhir.r4.model.DateTimeType;\n+import org.hl7.fhir.r4.model.IntegerType;\n+import org.hl7.fhir.r4.model.Quantity;\n+import org.hl7.fhir.r4.model.StringType;\n+import org.hl7.fhir.r4.model.Type;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.openmrs.Concept;\n+import org.openmrs.ConceptDatatype;\n+import org.openmrs.Obs;\n+import org.openmrs.api.ConceptService;\n+import org.openmrs.api.context.Context;\n+import org.openmrs.module.fhir2.api.translators.ConceptTranslator;\n+import org.powermock.core.classloader.annotations.PrepareOnlyThisForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareOnlyThisForTest({ Context.class })\n+public class ObservationValueTranslatorImplTest {\n+\t\n+\tprivate static final String CONCEPT_VALUE_UUID = \"12345-abcde-54321\";\n+\t\n+\tprivate static final String OBS_STRING = \"An ingenious observation\";\n+\t\n+\t@Mock\n+\tprivate ConceptTranslator conceptTranslator;\n+\t\n+\tprivate Obs obs;\n+\t\n+\tprivate ObservationValueTranslatorImpl obsValueTranslator;\n+\t\n+\t@Before\n+\tpublic void setup() {\n+\t\tobsValueTranslator = new ObservationValueTranslatorImpl();\n+\t\tobsValueTranslator.setConceptTranslator(conceptTranslator);\n+\t\t\n+\t\tobs = new Obs();\n+\t}\n+\t\n+\t@Test\n+\tpublic void toFhirResource_shouldConvertObsWithCodedValueToCodeableConcept() {\n+\t\tConcept concept = new Concept();\n+\t\tconcept.setUuid(CONCEPT_VALUE_UUID);\n+\t\tobs.setValueCoded(concept);\n+\t\t\n+\t\tCodeableConcept codeableConcept = new CodeableConcept();\n+\t\tcodeableConcept.setId(CONCEPT_VALUE_UUID);\n+\t\twhen(conceptTranslator.toFhirResource(concept)).thenReturn(codeableConcept);\n+\t\t\n+\t\tType result = obsValueTranslator.toFhirResource(obs);\n+\t\t\n+\t\tassertThat(result, notNullValue());\n+\t\tassertThat(result, instanceOf(CodeableConcept.class));\n+\t\tassertThat(result.getId(), equalTo(CONCEPT_VALUE_UUID));\n+\t}\n+\t\n+\t@Test\n+\tpublic void toFhirResource_shouldConvertObsWithDatetimeToDateTimeType() {\n+\t\tDate expected = new Date();\n+\t\tobs.setValueDate(expected);", "originalCommit": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU2ODA5MA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369568090", "bodyText": "It can be, but in this case, this is harmless, because we expect that the date returned from the translator is the same as the date provided to the translator. In these circumstances (where we're testing equality against a dynamic value) this test might actually be able to detect subtle issues that arise around daylight-savings, leap-years, etc.", "author": "ibacher", "createdAt": "2020-01-22T13:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NDg2MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NjQ5Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369546496", "bodyText": "should add @Transactional\ncheckout this", "author": "corneliouzbett", "createdAt": "2020-01-22T13:04:18Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.module.fhir2.api.FhirObservationService;\n+import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n+import org.openmrs.module.fhir2.api.translators.ObservationTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirObservationServiceImpl implements FhirObservationService {\n+\t", "originalCommit": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe7a926e8121ed6e9dcc52744e3d01d676928597", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java\nindex 7309cf0e..5026c198 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java\n\n@@ -18,8 +18,10 @@ import org.openmrs.module.fhir2.api.FhirObservationService;\n import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n import org.openmrs.module.fhir2.api.translators.ObservationTranslator;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n \n @Component\n+@Transactional\n @Setter(AccessLevel.PACKAGE)\n public class FhirObservationServiceImpl implements FhirObservationService {\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NzA4Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/34#discussion_r369547086", "bodyText": "@Transactional(readOnly = true)", "author": "corneliouzbett", "createdAt": "2020-01-22T13:05:40Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.impl;\n+\n+import javax.inject.Inject;\n+\n+import lombok.AccessLevel;\n+import lombok.Setter;\n+import org.hl7.fhir.r4.model.Observation;\n+import org.openmrs.module.fhir2.api.FhirObservationService;\n+import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n+import org.openmrs.module.fhir2.api.translators.ObservationTranslator;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+@Setter(AccessLevel.PACKAGE)\n+public class FhirObservationServiceImpl implements FhirObservationService {\n+\t\n+\t@Inject\n+\tFhirObservationDao dao;\n+\t\n+\t@Inject\n+\tObservationTranslator observationTranslator;\n+\t\n+\t@Override\n+\tpublic Observation getObservationByUuid(String uuid) {", "originalCommit": "6f80745ccb36f84f46b16bc3e748a3d3d95f93cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe7a926e8121ed6e9dcc52744e3d01d676928597", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java\nindex 7309cf0e..5026c198 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/impl/FhirObservationServiceImpl.java\n\n@@ -18,8 +18,10 @@ import org.openmrs.module.fhir2.api.FhirObservationService;\n import org.openmrs.module.fhir2.api.dao.FhirObservationDao;\n import org.openmrs.module.fhir2.api.translators.ObservationTranslator;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n \n @Component\n+@Transactional\n @Setter(AccessLevel.PACKAGE)\n public class FhirObservationServiceImpl implements FhirObservationService {\n \t\n"}}, {"oid": "fe7a926e8121ed6e9dcc52744e3d01d676928597", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/fe7a926e8121ed6e9dcc52744e3d01d676928597", "message": "FM2-11 Implement the Observation Resource", "committedDate": "2020-01-22T14:12:27Z", "type": "forcePushed"}, {"oid": "54b7579675f611bd533ae788294ef7f0cfcbf408", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/54b7579675f611bd533ae788294ef7f0cfcbf408", "message": "FM2-11 Implement the Observation Resource", "committedDate": "2020-01-22T15:02:37Z", "type": "commit"}, {"oid": "54b7579675f611bd533ae788294ef7f0cfcbf408", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/54b7579675f611bd533ae788294ef7f0cfcbf408", "message": "FM2-11 Implement the Observation Resource", "committedDate": "2020-01-22T15:02:37Z", "type": "forcePushed"}, {"oid": "83eaeec8acabd8f52308b3214bdaed6b2c633f29", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/83eaeec8acabd8f52308b3214bdaed6b2c633f29", "message": "Merge branch 'master' into FM2-11", "committedDate": "2020-01-22T15:21:21Z", "type": "commit"}]}