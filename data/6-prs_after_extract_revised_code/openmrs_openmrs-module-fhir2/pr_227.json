{"pr_number": 227, "pr_title": "FM2-241: Add mappings for the Encounter.class field", "pr_createdAt": "2020-06-22T22:49:26Z", "pr_url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMzUyOQ==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r445103529", "bodyText": "We might want to use a configuration file similar to the ObservationCategoryMap to make this determination.", "author": "ibacher", "createdAt": "2020-06-24T18:54:33Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "diffHunk": "@@ -42,6 +45,27 @@\n \t@Autowired\n \tprivate ProvenanceTranslator<org.openmrs.Encounter> provenanceTranslator;\n \t\n+\tprivate Coding mapLocationToClass(Location location) {\n+\t\tCoding coding = new Coding();\n+\t\tcoding.setSystem(FhirConstants.ENCOUNTER_CLASS_VALUE_SET_URI);\n+\t\t// The default code for anything that cannot be matched with FHIR codes.\n+\t\tcoding.setCode(\"AMB\");\n+\t\tif (location == null) {\n+\t\t\treturn coding;\n+\t\t}\n+\t\t// TODO: These are a subset of locations in the Ref. App.; figure out a more generic way for\n+\t\t// this mapping, possibly by including encounter type too.\n+\t\tswitch (location.getName()) {\n+\t\t\tcase \"Inpatient Ward\":\n+\t\t\t\tcoding.setCode(\"IMB\");\n+\t\t\t\tbreak;\n+\t\t\tcase \"Outpatient Clinic\":\n+\t\t\t\tcoding.setCode(\"AMB\");\n+\t\t\t\tbreak;\n+\t\t}\n+\t\treturn coding;", "originalCommit": "ca9c5136c03713a716fe8b9e3b4aac478850f5c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI5NTQ2Mw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r447295463", "bodyText": "Thanks for the suggestion; yes using a configurable map makes sense. But did you mean to actually rely on Obs.Concept of OpenMRS to figure out the FHIR Encounter class? Looking at the V3 Value SetActEncounterCode list it feels it is mostly about location, no? I would definitely prefer to rely on a coded concept than location strings (which I am not even sure if they are commonly used outside Ref. App.) but I don't know what that concept should be.\nIf you want, I can loop through all concepts of all observations in the encounter and come up with some heuristics (do we have any repository of sample databases for various implementations)?", "author": "bashir2", "createdAt": "2020-06-29T22:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMzUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYxMTUxNA==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r454611514", "bodyText": "I wish we had sample databases to do that! I agree that the location is likely to helpful in determining this. \"Inpatient Ward\" and \"Outpatient Clinic\" are definitely not widely-used... If nothing else, we have a significant number of installs in non-English speaking places. I wouldn't suggest relying on someone storing an Obs. The encounter location is probably the best we can do.", "author": "ibacher", "createdAt": "2020-07-14T20:04:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMzUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMDQwMw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r458400403", "bodyText": "@ibacher I changed this based on what we agreed on, i.e., added a location to class properties file. Please note that I pushed two commits, one is just moving some files and removing a redundant interface and the last one is the actual code changes since last time. PTAL and thanks.", "author": "bashir2", "createdAt": "2020-07-21T21:31:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMzUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "51f51d986f069faa43bd2ffb46de5b3446196fc3", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java\nindex 85190c80..46107803 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java\n\n@@ -45,6 +46,9 @@ public class EncounterTranslatorImpl implements EncounterTranslator {\n \t@Autowired\n \tprivate ProvenanceTranslator<org.openmrs.Encounter> provenanceTranslator;\n \t\n+\t@Autowired\n+\tprivate EncounterClassMap encounterClassMap;\n+\t\n \tprivate Coding mapLocationToClass(Location location) {\n \t\tCoding coding = new Coding();\n \t\tcoding.setSystem(FhirConstants.ENCOUNTER_CLASS_VALUE_SET_URI);\n"}}, {"oid": "a73c526de7bdf8970363be7da74566065d6be79b", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/a73c526de7bdf8970363be7da74566065d6be79b", "message": "Initial implementation for the Encounter class", "committedDate": "2020-07-21T15:45:00Z", "type": "commit"}, {"oid": "d40cc17548915dd1050b1f5c1fab7b9f3965b782", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/d40cc17548915dd1050b1f5c1fab7b9f3965b782", "message": "removed redundant ObservationCategoryMap interface", "committedDate": "2020-07-21T16:35:23Z", "type": "commit"}, {"oid": "51f51d986f069faa43bd2ffb46de5b3446196fc3", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/51f51d986f069faa43bd2ffb46de5b3446196fc3", "message": "added support for the encounter class map file", "committedDate": "2020-07-21T21:26:42Z", "type": "commit"}, {"oid": "51f51d986f069faa43bd2ffb46de5b3446196fc3", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/51f51d986f069faa43bd2ffb46de5b3446196fc3", "message": "added support for the encounter class map file", "committedDate": "2020-07-21T21:26:42Z", "type": "forcePushed"}, {"oid": "bd83135ce5c39b68a3fdddcce65ad316ea4e3230", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/bd83135ce5c39b68a3fdddcce65ad316ea4e3230", "message": "Update api/src/main/resources/encounterClassMap.properties", "committedDate": "2020-07-31T13:58:29Z", "type": "commit"}, {"oid": "80c0374fcd7eccd2fcea74213c00070c299063d9", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/80c0374fcd7eccd2fcea74213c00070c299063d9", "message": "Update api/src/main/resources/encounterClassMap.properties", "committedDate": "2020-07-31T13:59:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDA5Nw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r463630097", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic String getFhirClass(@NotNull String locationText) {\n          \n          \n            \n            \t\treturn getValue(locationText).orElse(null);\n          \n          \n            \n            \tpublic String getFhirClass(@NotNull String locationUuid) {\n          \n          \n            \n            \t\treturn getValue(locationUuid).orElse(null);", "author": "ibacher", "createdAt": "2020-07-31T14:02:55Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/mappings/EncounterClassMap.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.module.fhir2.api.mappings;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.springframework.stereotype.Component;\n+\n+// A class for mapping OpenMRS location names to FHIR Encounter classes. In the properties file the\n+// location names are keys and FHIR class names are values; it is a many to one map. Note going from\n+// FHIR classes to OpenMRS locations is not well-defined hence we do not expose the inverse map.\n+@Component\n+public class EncounterClassMap extends BaseMapping {\n+\t\n+\tpublic EncounterClassMap() {\n+\t\tsuper(\"encounterClassMap.properties\");\n+\t}\n+\t\n+\tpublic String getFhirClass(@NotNull String locationText) {\n+\t\treturn getValue(locationText).orElse(null);", "originalCommit": "80c0374fcd7eccd2fcea74213c00070c299063d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9967baa7f36871285c407a06f30cca5b3955bd3b", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/mappings/EncounterClassMap.java b/api/src/main/java/org/openmrs/module/fhir2/api/mappings/EncounterClassMap.java\nindex 3fc22b6e..f3027eb7 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/mappings/EncounterClassMap.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/mappings/EncounterClassMap.java\n\n@@ -23,7 +23,7 @@ public class EncounterClassMap extends BaseMapping {\n \t\tsuper(\"encounterClassMap.properties\");\n \t}\n \t\n-\tpublic String getFhirClass(@NotNull String locationText) {\n-\t\treturn getValue(locationText).orElse(null);\n+\tpublic String getFhirClass(@NotNull String locationUuid) {\n+\t\treturn getValue(locationUuid).orElse(null);\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDM3Ng==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r463630376", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tString classCode = encounterClassMap.getFhirClass(location.getName());\n          \n          \n            \n            \t\tString classCode = encounterClassMap.getFhirClass(location.getUuid());", "author": "ibacher", "createdAt": "2020-07-31T14:03:25Z", "path": "api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java", "diffHunk": "@@ -42,6 +46,24 @@\n \t@Autowired\n \tprivate ProvenanceTranslator<org.openmrs.Encounter> provenanceTranslator;\n \t\n+\t@Autowired\n+\tprivate EncounterClassMap encounterClassMap;\n+\t\n+\tprivate Coding mapLocationToClass(Location location) {\n+\t\tCoding coding = new Coding();\n+\t\tcoding.setSystem(FhirConstants.ENCOUNTER_CLASS_VALUE_SET_URI);\n+\t\t// The default code for anything that cannot be matched with FHIR codes.\n+\t\tcoding.setCode(\"AMB\");\n+\t\tif (location == null) {\n+\t\t\treturn coding;\n+\t\t}\n+\t\tString classCode = encounterClassMap.getFhirClass(location.getName());", "originalCommit": "80c0374fcd7eccd2fcea74213c00070c299063d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9967baa7f36871285c407a06f30cca5b3955bd3b", "chunk": "diff --git a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java\nindex 46107803..ec9054dc 100644\n--- a/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java\n+++ b/api/src/main/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImpl.java\n\n@@ -57,7 +57,7 @@ public class EncounterTranslatorImpl implements EncounterTranslator {\n \t\tif (location == null) {\n \t\t\treturn coding;\n \t\t}\n-\t\tString classCode = encounterClassMap.getFhirClass(location.getName());\n+\t\tString classCode = encounterClassMap.getFhirClass(location.getUuid());\n \t\tif (classCode != null) {\n \t\t\tcoding.setCode(classCode);\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMTg2Mw==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r463631863", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\twhen(encounterClassMap.getFhirClass(TEST_LOCATION_NAME)).thenReturn(TEST_FHIR_CLASS);\n          \n          \n            \n            \t\twhen(encounterClassMap.getFhirClass(LOCACTION_UUID)).thenReturn(TEST_FHIR_CLASS);", "author": "ibacher", "createdAt": "2020-07-31T14:06:10Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java", "diffHunk": "@@ -345,4 +352,30 @@ public void shouldAddProvenances() {\n \t\tassertThat(resources.stream().findAny().get().isResource(), is(true));\n \t\tassertThat(resources.stream().findAny().get().getResourceType().name(), equalTo(Provenance.class.getSimpleName()));\n \t}\n+\t\n+\t@Test\n+\tpublic void shouldTranslateLocationToEncounterClassFhirType() {\n+\t\twhen(encounterClassMap.getFhirClass(TEST_LOCATION_NAME)).thenReturn(TEST_FHIR_CLASS);", "originalCommit": "80c0374fcd7eccd2fcea74213c00070c299063d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9967baa7f36871285c407a06f30cca5b3955bd3b", "chunk": "diff --git a/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java b/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java\nindex d9e3b2db..7cf861b3 100644\n--- a/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java\n+++ b/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java\n\n@@ -355,7 +354,7 @@ public class EncounterTranslatorImplTest {\n \t\n \t@Test\n \tpublic void shouldTranslateLocationToEncounterClassFhirType() {\n-\t\twhen(encounterClassMap.getFhirClass(TEST_LOCATION_NAME)).thenReturn(TEST_FHIR_CLASS);\n+\t\twhen(encounterClassMap.getFhirClass(LOCACTION_UUID)).thenReturn(TEST_FHIR_CLASS);\n \t\tomrsEncounter.setLocation(location);\n \t\t\n \t\tEncounter result = encounterTranslator.toFhirResource(omrsEncounter);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMjI4Mg==", "url": "https://github.com/openmrs/openmrs-module-fhir2/pull/227#discussion_r463632282", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate static final String TEST_LOCATION_NAME = \"test location name\";", "author": "ibacher", "createdAt": "2020-07-31T14:06:54Z", "path": "api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java", "diffHunk": "@@ -75,6 +76,8 @@\n \t\n \tprivate static final String TEST_LOCATION_NAME = \"test location name\";", "originalCommit": "80c0374fcd7eccd2fcea74213c00070c299063d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9967baa7f36871285c407a06f30cca5b3955bd3b", "chunk": "diff --git a/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java b/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java\nindex d9e3b2db..7cf861b3 100644\n--- a/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java\n+++ b/api/src/test/java/org/openmrs/module/fhir2/api/translators/impl/EncounterTranslatorImplTest.java\n\n@@ -74,7 +74,6 @@ public class EncounterTranslatorImplTest {\n \t\n \tprivate static final String LOCACTION_UUID = \"123hh34-23jk23-23jk213-23jkl\";\n \t\n-\tprivate static final String TEST_LOCATION_NAME = \"test location name\";\n \t\n \tprivate static final String TEST_FHIR_CLASS = \"test fhir class\";\n \t\n"}}, {"oid": "9967baa7f36871285c407a06f30cca5b3955bd3b", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/9967baa7f36871285c407a06f30cca5b3955bd3b", "message": "Apply suggestions from code review", "committedDate": "2020-07-31T14:07:45Z", "type": "commit"}, {"oid": "7bfb8d511e8032dd7cfb362da5bd2330a14ba29f", "url": "https://github.com/openmrs/openmrs-module-fhir2/commit/7bfb8d511e8032dd7cfb362da5bd2330a14ba29f", "message": "Restore TEST_LOCATION_NAME", "committedDate": "2020-07-31T14:42:18Z", "type": "commit"}]}