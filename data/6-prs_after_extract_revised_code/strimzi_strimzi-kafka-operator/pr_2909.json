{"pr_number": 2909, "pr_title": "Mask passwords in while printing environment variables in our operators", "pr_createdAt": "2020-04-28T21:54:07Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909", "timeline": [{"oid": "9899152de36da5cf4e7460103e7226fa93a99d9a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9899152de36da5cf4e7460103e7226fa93a99d9a", "message": "Mask passwords in while printing environment variables in our operators\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-28T21:51:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyMzc4MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417223781", "bodyText": "This seems like an unrelated change, I guess this was missed in the Connectors Exception fixes PR?", "author": "samuel-hawker", "createdAt": "2020-04-29T10:45:53Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java", "diffHunk": "@@ -151,8 +151,8 @@ public KafkaMirrorMaker2AssemblyOperator(Vertx vertx, PlatformFeaturesAvailabili\n                 .compose(i -> deploymentOperations.reconcile(namespace, mirrorMaker2Cluster.getName(), mirrorMaker2Cluster.generateDeployment(annotations, pfa.isOpenshift(), imagePullPolicy, imagePullSecrets)))\n                 .compose(i -> deploymentOperations.scaleUp(namespace, mirrorMaker2Cluster.getName(), mirrorMaker2Cluster.getReplicas()))\n                 .compose(i -> deploymentOperations.waitForObserved(namespace, mirrorMaker2Cluster.getName(), 1_000, operationTimeoutMs))\n-                .compose(i -> deploymentOperations.readiness(namespace, mirrorMaker2Cluster.getName(), 1_000, operationTimeoutMs))\n-                .compose(i -> reconcileConnectors(reconciliation, kafkaMirrorMaker2, mirrorMaker2Cluster, kafkaMirrorMaker2Status))\n+                .compose(i -> mirrorMaker2Cluster.getReplicas() > 0 ? deploymentOperations.readiness(namespace, mirrorMaker2Cluster.getName(), 1_000, operationTimeoutMs) : Future.succeededFuture())", "originalCommit": "9899152de36da5cf4e7460103e7226fa93a99d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0NTg0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417245847", "bodyText": "Good point, that was wrong commit. Fixed.", "author": "scholzj", "createdAt": "2020-04-29T11:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyMzc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "58911c3bcb1c56fe485457befd69b039700878cb", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java\nindex 0092289f3..95196abf6 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaMirrorMaker2AssemblyOperator.java\n\n@@ -151,8 +151,8 @@ public class KafkaMirrorMaker2AssemblyOperator extends AbstractConnectOperator<K\n                 .compose(i -> deploymentOperations.reconcile(namespace, mirrorMaker2Cluster.getName(), mirrorMaker2Cluster.generateDeployment(annotations, pfa.isOpenshift(), imagePullPolicy, imagePullSecrets)))\n                 .compose(i -> deploymentOperations.scaleUp(namespace, mirrorMaker2Cluster.getName(), mirrorMaker2Cluster.getReplicas()))\n                 .compose(i -> deploymentOperations.waitForObserved(namespace, mirrorMaker2Cluster.getName(), 1_000, operationTimeoutMs))\n-                .compose(i -> mirrorMaker2Cluster.getReplicas() > 0 ? deploymentOperations.readiness(namespace, mirrorMaker2Cluster.getName(), 1_000, operationTimeoutMs) : Future.succeededFuture())\n-                .compose(i -> mirrorMaker2Cluster.getReplicas() > 0 ? reconcileConnectors(reconciliation, kafkaMirrorMaker2, mirrorMaker2Cluster, kafkaMirrorMaker2Status) : Future.succeededFuture())\n+                .compose(i -> deploymentOperations.readiness(namespace, mirrorMaker2Cluster.getName(), 1_000, operationTimeoutMs))\n+                .compose(i -> reconcileConnectors(reconciliation, kafkaMirrorMaker2, mirrorMaker2Cluster, kafkaMirrorMaker2Status))\n                 .map((Void) null)\n                 .setHandler(reconciliationResult -> {\n                     StatusUtils.setStatusConditionAndObservedGeneration(kafkaMirrorMaker2, kafkaMirrorMaker2Status, reconciliationResult);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417225086", "bodyText": "Should we only be hiding passwords, might we want to hide apikeys or certificates as well?\nDo let me know if I am wrong on this though...", "author": "samuel-hawker", "createdAt": "2020-04-29T10:48:26Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/Util.java", "diffHunk": "@@ -223,4 +222,35 @@ private static File store(String prefix, String suffix, KeyStore trustStore, cha\n             throw e;\n         }\n     }\n+\n+    /**\n+     * Logs environment variables into the regular log file.\n+     */\n+    public static void printEnvInfo() {\n+        Map<String, String> env = new HashMap<>(System.getenv());\n+        StringBuilder sb = new StringBuilder();\n+\n+        for (Map.Entry<String, String> entry: env.entrySet()) {\n+            sb.append(\"\\t\").append(entry.getKey()).append(\": \").append(maskPassword(entry.getKey(), entry.getValue())).append(\"\\n\");\n+        }\n+\n+        LOGGER.info(\"Using config:\\n\" + sb.toString());\n+    }\n+\n+    /**\n+     * Gets environment variable, checks if it contains a password and in case it does it masks the output. It expects\n+     * environment variables with passwords to contain `PASSWORD` in their name.", "originalCommit": "9899152de36da5cf4e7460103e7226fa93a99d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyODQ3OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417228479", "bodyText": "If so I propose we expand the list of masks", "author": "samuel-hawker", "createdAt": "2020-04-29T10:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0NTkwMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417245901", "bodyText": "We do not pass any private (or even public) keys this way. So we actually don't know how would the environment variables look like. I can add some generic strings - e.g. PRIVATE_KEY, API_KEY - but not sure they would match in the future.", "author": "scholzj", "createdAt": "2020-04-29T11:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2OTAwNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417569007", "bodyText": "Makes sense to me, I was unsure if there were any and was just bringing it up in case there were any I was not aware of.\nIf you think it is unlikely that Strimzi will ever pass such values via Envars then I think you're right it is not needed, I do wonder though, if users are providing their own values for their own envars, e.g. in custom Connect images where they can configure extra envars for their own use cases might it make sense that we cover the hiding of such values by adding some extra generic strings like the ones you suggested above and briefly doc that these will be masked in the Envar list object that is used in the CRDs?\n(Happy to not have it added though and only add it if a user requests such an enhancement)", "author": "samuel-hawker", "createdAt": "2020-04-29T19:48:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYwMDM0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417600343", "bodyText": "If you think it is unlikely that Strimzi will ever pass such values via Envars then I think you're right it is not needed\n\nI'm not sure I would call it unlikely. But until we have them, we do not have any name to filter against. So we just guess how our future self would name them. Or we should add them here hen we start using them.\n\nif users are providing their own values for their own envars, e.g. in custom Connect images where they can configure extra envars for their own use cases might it make sense that we cover the hiding of such values by adding some extra generic strings like the ones you suggested above and briefly doc that these will be masked in the Envar list object that is used in the CRDs?\n\nThis covers only the operators. Not things like Kafka Connect. Users can provide custom variables here as well, but there are no obvious plugable interfaces. So make any sense of passing something secret, they would need to modify the project quite significantly. Also, we again do not know the names, so it is hard to mask them.\nSo I would probably leave it out as it is.", "author": "scholzj", "createdAt": "2020-04-29T20:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NjUwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417656500", "bodyText": "Thanks for clarifying, happy to approve :)", "author": "samuel-hawker", "createdAt": "2020-04-29T22:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NzM0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2909#discussion_r417657343", "bodyText": "Thanks \ud83d\udc4d", "author": "scholzj", "createdAt": "2020-04-29T22:48:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIyNTA4Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "58911c3bcb1c56fe485457befd69b039700878cb", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/58911c3bcb1c56fe485457befd69b039700878cb", "message": "Revert incorrectly commited file\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-04-29T11:29:10Z", "type": "commit"}]}