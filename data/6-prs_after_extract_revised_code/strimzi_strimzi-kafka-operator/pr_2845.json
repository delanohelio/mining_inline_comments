{"pr_number": 2845, "pr_title": "[systemtest] Add process method and update OpenShift template tests", "pr_createdAt": "2020-04-16T17:10:16Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845", "timeline": [{"oid": "9b586eb80d2fbd7c47e371f4e1cbb909ef75cfaa", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9b586eb80d2fbd7c47e371f4e1cbb909ef75cfaa", "message": "add new method for process and apply yaml\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-16T17:02:59Z", "type": "commit"}, {"oid": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7777940a8c63d9a3e55e0f26c25e4364f4f7b555", "message": "update tests with templates\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-16T17:03:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxNzM0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409717348", "bodyText": "I think we can remove this cast", "author": "Frawless", "createdAt": "2020-04-16T17:11:46Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -124,10 +124,11 @@\n     @OpenShiftOnly\n     void testDeployKafkaClusterViaTemplate() {\n         cluster.createCustomResources(\"../examples/templates/cluster-operator\");\n-        String appName = \"strimzi-ephemeral\";\n+        String templateName = \"strimzi-ephemeral\";\n         Oc oc = (Oc) cmdKubeClient();", "originalCommit": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e756f4be9f8753c2a66816bb3894c962686dd0b", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java b/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\nindex 7b10b412b8..2b6c3bec45 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\n\n@@ -125,9 +125,8 @@ class KafkaST extends BaseST {\n     void testDeployKafkaClusterViaTemplate() {\n         cluster.createCustomResources(\"../examples/templates/cluster-operator\");\n         String templateName = \"strimzi-ephemeral\";\n-        Oc oc = (Oc) cmdKubeClient();\n         String clusterName = \"openshift-my-cluster\";\n-        oc.createResourceAndApply(templateName, map(\"CLUSTER_NAME\", clusterName));\n+        cmdKubeClient().createResourceAndApply(templateName, map(\"CLUSTER_NAME\", clusterName));\n \n         StatefulSetUtils.waitForAllStatefulSetPodsReady(KafkaResources.zookeeperStatefulSetName(clusterName), 3);\n         StatefulSetUtils.waitForAllStatefulSetPodsReady(KafkaResources.kafkaStatefulSetName(clusterName), 3);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODUwNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409718505", "bodyText": "why we cannot apply (instead of create) the created yaml content?", "author": "Frawless", "createdAt": "2020-04-16T17:13:48Z", "path": "test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java", "diffHunk": "@@ -342,6 +351,18 @@ public String getResourceAsYaml(String resourceType, String resourceName) {\n         return Exec.exec(namespacedCommand(\"get\", resourceType, resourceName, \"-o\", \"yaml\")).out();\n     }\n \n+    @Override\n+    public void createResourceAndApply(String template, Map<String, String> params) {\n+        List<String> cmd = namespacedCommand(\"process\", template, \"-l\", \"app=\" + template, \"-o\", \"yaml\");\n+        for (Map.Entry<String, String> entry : params.entrySet()) {\n+            cmd.add(\"-p\");\n+            cmd.add(entry.getKey() + \"=\" + entry.getValue());\n+        }\n+\n+        String yaml = Exec.exec(cmd).out();\n+        createContent(yaml);", "originalCommit": "7777940a8c63d9a3e55e0f26c25e4364f4f7b555", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0MzA3Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409743076", "bodyText": "when I tried that with applyContent (because if you use only apply it needs file) I got really strange annotation that includes CR in JSON. I will try that again and I'll see.", "author": "im-konge", "createdAt": "2020-04-16T17:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0ODkyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2845#discussion_r409748928", "bodyText": "I tried that right now and it seems to work, so thank you for nit :)", "author": "im-konge", "createdAt": "2020-04-16T18:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "6e756f4be9f8753c2a66816bb3894c962686dd0b", "chunk": "diff --git a/test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java b/test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java\nindex 68b86783ef..5f62b68bb3 100644\n--- a/test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java\n+++ b/test/src/main/java/io/strimzi/test/k8s/cmdClient/BaseCmdKubeClient.java\n\n@@ -360,7 +360,7 @@ public abstract class BaseCmdKubeClient<K extends BaseCmdKubeClient<K>> implemen\n         }\n \n         String yaml = Exec.exec(cmd).out();\n-        createContent(yaml);\n+        applyContent(yaml);\n     }\n \n     @Override\n"}}, {"oid": "6e756f4be9f8753c2a66816bb3894c962686dd0b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6e756f4be9f8753c2a66816bb3894c962686dd0b", "message": "fixup! update tests with templates\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-16T18:04:04Z", "type": "commit"}, {"oid": "6f1891c71a39a07b01bfcab29d8de2b4ea6771e7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6f1891c71a39a07b01bfcab29d8de2b4ea6771e7", "message": "fixup! fixup! update tests with templates\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-16T18:14:58Z", "type": "commit"}]}