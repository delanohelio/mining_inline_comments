{"pr_number": 2465, "pr_title": "Add listener certificate to the Kafka Status", "pr_createdAt": "2020-01-28T00:41:23Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371642613", "bodyText": "\"The A list...\" seems to be a typo.\nAnyway isn't it better saying \"TLS certificates\" instead of \"public TLS keys\"?", "author": "ppatierno", "createdAt": "2020-01-28T07:31:04Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java", "diffHunk": "@@ -55,6 +56,16 @@ public void setAddresses(List<ListenerAddress> addresses) {\n         this.addresses = addresses;\n     }\n \n+    @Description(\"The A list of public TLS keys which can be used to verify the identity of the server when connecting \" +", "originalCommit": "74e137090a17cd295ff8729b30e2f650253b73f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1MzUxMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371653512", "bodyText": "The problem is that our documentation is using certificate as a synonym for private key. We have things like certificates and public keys on many places. That is why I used the public keys.", "author": "scholzj", "createdAt": "2020-01-28T08:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1NDI5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371654291", "bodyText": "Really? It's quite the opposite!", "author": "ppatierno", "createdAt": "2020-01-28T08:08:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1NDU5OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371654598", "bodyText": "For example here we start the chapter with it: https://strimzi.io/docs/master/full.html#kafka-listener-certificates-str", "author": "scholzj", "createdAt": "2020-01-28T08:09:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3NDU4NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371674585", "bodyText": "Are you referring at this sentence? \"You can provide your own server certificates and public keys\" ... in this case it's wrong imho. We should try to fix this because a server certificates IS a public key (signed).", "author": "ppatierno", "createdAt": "2020-01-28T08:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDM2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371714362", "bodyText": "I'm not sure I really agree. In my life the most common and understandable seemed to be certificate = public + private key. I usually prefer to be specific to make it easier and ytry to avoid certificate where possible. If you want I can change it here.", "author": "scholzj", "createdAt": "2020-01-28T10:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcyOTkyMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371729920", "bodyText": "I lived a different life maybe :-) ...  but certificate was always = signed public key. Why a certificate should be public + private key? It means that if you are delivering the certificate, you are delivering both public and private keys somehow? which is not the case.", "author": "ppatierno", "createdAt": "2020-01-28T10:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMTA1NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371731055", "bodyText": "When you generate a public + private key couple and you need a certificate out of it, you generate a CSR providing only the public key. The CSR will be processed by signing your public key generating the certificate. Your private key is not involved at all.\nActually you could do encryption stuff without any sign of your public key (but of course in this case you cannot prove that a public key is yours, so the sign by a CA for example).", "author": "ppatierno", "createdAt": "2020-01-28T10:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMTIyMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371731221", "bodyText": "A certificate contains a public key (it also includes information about the associated entity and a digital signature from the issuer). I think we should fix the documentation which @scholzj linked (and any other places where the language is unclear). For this description I would at \"A list of TLS certificates...\" which is imho clear and correct and lets the reader keep whatever mental model of a TLS certificate they already have (correct or not).", "author": "tombentley", "createdAt": "2020-01-28T10:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMjI1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371732258", "bodyText": "Let me know if we need to change the terminology used in \"Kafka listener certificates\".", "author": "laidan6000", "createdAt": "2020-01-28T10:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczNTI0OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371735249", "bodyText": "Comments on the description above:\nwhich can be used > that can be used\n...when connecting to the Kafka broker. Does that make sense?", "author": "laidan6000", "createdAt": "2020-01-28T10:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczNjAzMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371736032", "bodyText": "@laidan6000 I think we should reword: \"You can provide your own TLS certificates for the following types of listeners:\", but let's see how this discussion concludes before we go making any changes.", "author": "tombentley", "createdAt": "2020-01-28T11:00:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczODYwMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371738602", "bodyText": "Sorry, I've just seen the full description: ... when connecting to the given listener.\nSounds good to me.", "author": "laidan6000", "createdAt": "2020-01-28T11:06:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MjYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "59c6aac1d8acb352fb2318698071aa704e08ced8", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java b/api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java\nindex 61bfe8fd59..a147c08013 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/status/ListenerStatus.java\n\n@@ -56,7 +56,7 @@ public class ListenerStatus implements UnknownPropertyPreserving, Serializable {\n         this.addresses = addresses;\n     }\n \n-    @Description(\"The A list of public TLS keys which can be used to verify the identity of the server when connecting \" +\n+    @Description(\"The list of public TLS keys which can be used to verify the identity of the server when connecting \" +\n             \"to the given listener. Set only for `tls` and `external` listeners.\")\n     public List<String> getCertificates() {\n         return certificates;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MzQyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371643428", "bodyText": "Remove commented lines?", "author": "ppatierno", "createdAt": "2020-01-28T07:33:45Z", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorCustomCertTest.java", "diffHunk": "@@ -422,8 +422,10 @@ public MockKafkaAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pfa,\n         Future<Void> reconcile(ReconciliationState reconcileState)  {\n             return reconcileState.reconcileCas(this::dateSupplier)\n                     .compose(state -> state.getKafkaClusterDescription())\n-                    .compose(state -> state.getCustomTlsListenerThumbprint())\n-                    .compose(state -> state.getCustomExternalListenerThumbprint())\n+                    //.compose(state -> state.getCustomTlsListenerThumbprint())\n+                    //.compose(state -> state.getCustomExternalListenerThumbprint())", "originalCommit": "74e137090a17cd295ff8729b30e2f650253b73f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59c6aac1d8acb352fb2318698071aa704e08ced8", "chunk": "diff --git a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorCustomCertTest.java b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorCustomCertTest.java\nindex 53dd4b6aa2..e835932ef0 100644\n--- a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorCustomCertTest.java\n+++ b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperatorCustomCertTest.java\n\n@@ -422,8 +422,6 @@ public class KafkaAssemblyOperatorCustomCertTest {\n         Future<Void> reconcile(ReconciliationState reconcileState)  {\n             return reconcileState.reconcileCas(this::dateSupplier)\n                     .compose(state -> state.getKafkaClusterDescription())\n-                    //.compose(state -> state.getCustomTlsListenerThumbprint())\n-                    //.compose(state -> state.getCustomExternalListenerThumbprint())\n                     .compose(state -> state.customTlsListenerCertificate())\n                     .compose(state -> state.customExternalListenerCertificate())\n                     .compose(state -> state.kafkaStatefulSet())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3MjI5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371672299", "bodyText": "I guess the charset should be ASCII.", "author": "tombentley", "createdAt": "2020-01-28T08:54:20Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -1983,54 +1988,77 @@ private KafkaVersionChange getKafkaVersionChange(StatefulSet kafkaSts) {\n             return resultPromise.future();\n         }\n \n-        Future<ReconciliationState> getCustomTlsListenerThumbprint() {\n-            return getCertificateSignature(kafkaCluster.getSecretSourceTls()).map(thumbprint -> {\n-                tlsListenerCustomCertificateThumbprint = thumbprint;\n-                return this;\n-            });\n-        }\n+        Future<ReconciliationState> customTlsListenerCertificate() {\n+            CertAndKeySecretSource customCertSecret = kafkaCluster.getSecretSourceTls();\n \n-        Future<ReconciliationState> getCustomExternalListenerThumbprint() {\n-            return getCertificateSignature(kafkaCluster.getSecretSourceExternal()).map(thumbprint -> {\n-                externalListenerCustomCertificateThumbprint = thumbprint;\n-                return this;\n-            });\n+            return getCustomCertificateSecret(customCertSecret)\n+                    .compose(secret -> {\n+                        if (secret != null)  {\n+                            byte[] publicKeyBytes = Base64.getDecoder().decode(secret.getData().get(customCertSecret.getCertificate()));\n+                            tlsListenerCustomCertificate = new String(publicKeyBytes, Charset.defaultCharset());", "originalCommit": "243e446ef53fcb66209b67a145bf6fd18495f566", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50de2124e2dd5218e9e83f70020dd3fc4d169593", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\nindex e9b768a1e8..e80b919fae 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\n\n@@ -1995,7 +1994,7 @@ public class KafkaAssemblyOperator extends AbstractAssemblyOperator<KubernetesCl\n                     .compose(secret -> {\n                         if (secret != null)  {\n                             byte[] publicKeyBytes = Base64.getDecoder().decode(secret.getData().get(customCertSecret.getCertificate()));\n-                            tlsListenerCustomCertificate = new String(publicKeyBytes, Charset.defaultCharset());\n+                            tlsListenerCustomCertificate = new String(publicKeyBytes);\n                             tlsListenerCustomCertificateThumbprint = getCertificateThumbprint(secret, customCertSecret);\n \n                             return Future.succeededFuture(this);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3MjM3OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2465#discussion_r371672378", "bodyText": "Ditto", "author": "tombentley", "createdAt": "2020-01-28T08:54:29Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -1983,54 +1988,77 @@ private KafkaVersionChange getKafkaVersionChange(StatefulSet kafkaSts) {\n             return resultPromise.future();\n         }\n \n-        Future<ReconciliationState> getCustomTlsListenerThumbprint() {\n-            return getCertificateSignature(kafkaCluster.getSecretSourceTls()).map(thumbprint -> {\n-                tlsListenerCustomCertificateThumbprint = thumbprint;\n-                return this;\n-            });\n-        }\n+        Future<ReconciliationState> customTlsListenerCertificate() {\n+            CertAndKeySecretSource customCertSecret = kafkaCluster.getSecretSourceTls();\n \n-        Future<ReconciliationState> getCustomExternalListenerThumbprint() {\n-            return getCertificateSignature(kafkaCluster.getSecretSourceExternal()).map(thumbprint -> {\n-                externalListenerCustomCertificateThumbprint = thumbprint;\n-                return this;\n-            });\n+            return getCustomCertificateSecret(customCertSecret)\n+                    .compose(secret -> {\n+                        if (secret != null)  {\n+                            byte[] publicKeyBytes = Base64.getDecoder().decode(secret.getData().get(customCertSecret.getCertificate()));\n+                            tlsListenerCustomCertificate = new String(publicKeyBytes, Charset.defaultCharset());\n+                            tlsListenerCustomCertificateThumbprint = getCertificateThumbprint(secret, customCertSecret);\n+\n+                            return Future.succeededFuture(this);\n+                        } else {\n+                            return Future.succeededFuture(this);\n+                        }\n+                    });\n         }\n \n-        Future<String> getCertificateSignature(CertAndKeySecretSource customCertSecret)  {\n-            Promise<String> thumbprintPromise = Promise.promise();\n+        Future<ReconciliationState> customExternalListenerCertificate() {\n+            CertAndKeySecretSource customCertSecret = kafkaCluster.getSecretSourceExternal();\n \n+            return getCustomCertificateSecret(customCertSecret)\n+                    .compose(secret -> {\n+                        if (secret != null)  {\n+                            byte[] publicKeyBytes = Base64.getDecoder().decode(secret.getData().get(customCertSecret.getCertificate()));\n+                            externalListenerCustomCertificate = new String(publicKeyBytes, Charset.defaultCharset());", "originalCommit": "243e446ef53fcb66209b67a145bf6fd18495f566", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50de2124e2dd5218e9e83f70020dd3fc4d169593", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\nindex e9b768a1e8..e80b919fae 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\n\n@@ -1995,7 +1994,7 @@ public class KafkaAssemblyOperator extends AbstractAssemblyOperator<KubernetesCl\n                     .compose(secret -> {\n                         if (secret != null)  {\n                             byte[] publicKeyBytes = Base64.getDecoder().decode(secret.getData().get(customCertSecret.getCertificate()));\n-                            tlsListenerCustomCertificate = new String(publicKeyBytes, Charset.defaultCharset());\n+                            tlsListenerCustomCertificate = new String(publicKeyBytes);\n                             tlsListenerCustomCertificateThumbprint = getCertificateThumbprint(secret, customCertSecret);\n \n                             return Future.succeededFuture(this);\n"}}, {"oid": "50de2124e2dd5218e9e83f70020dd3fc4d169593", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/50de2124e2dd5218e9e83f70020dd3fc4d169593", "message": "Add listener certificate to the Kafka Status\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "a167c08a34103002e5a6fca143db553fd0b59171", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a167c08a34103002e5a6fca143db553fd0b59171", "message": "Update CHANGELOG.md\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "fb0ac3efe809f7e4e3e466bd2a56be47c0c5d924", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fb0ac3efe809f7e4e3e466bd2a56be47c0c5d924", "message": "Fix spotbugs and CRDs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "59c6aac1d8acb352fb2318698071aa704e08ced8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/59c6aac1d8acb352fb2318698071aa704e08ced8", "message": "Review comments, forgotten DEBUG log level\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "6e598b79b7c19b0a18770c9d4c942a77717e2e19", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6e598b79b7c19b0a18770c9d4c942a77717e2e19", "message": "Fix docs after description annotation change\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "59946b8df8ac0ba66f443f40766a20accaa85ab8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/59946b8df8ac0ba66f443f40766a20accaa85ab8", "message": "Review comments II\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "2c165dae01a17bb47ceaa1a04bdea81319e8e57a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2c165dae01a17bb47ceaa1a04bdea81319e8e57a", "message": "Unused import :-(\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "44bf0077ef3280b12dc56879f430787449fe49a0", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/44bf0077ef3280b12dc56879f430787449fe49a0", "message": "Fix description certificates versus public key\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "0ddb3336980c68209f2af9e783d1cff8d9f50542", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0ddb3336980c68209f2af9e783d1cff8d9f50542", "message": "Add the certificates to the example in docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "commit"}, {"oid": "0ddb3336980c68209f2af9e783d1cff8d9f50542", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0ddb3336980c68209f2af9e783d1cff8d9f50542", "message": "Add the certificates to the example in docs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-01-28T15:27:54Z", "type": "forcePushed"}]}