{"pr_number": 2447, "pr_title": "ST: Add test coverage for improvements for connect and connector operator", "pr_createdAt": "2020-01-23T14:47:56Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447", "timeline": [{"oid": "01223d3cdb08cc618a13ddbe68008d753b1aab67", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/01223d3cdb08cc618a13ddbe68008d753b1aab67", "message": "Add test coverage for improvements for connect and connector operator\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-23T14:28:48Z", "type": "commit"}, {"oid": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "message": "Add s2i status checks\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-23T14:47:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDQyMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670421", "bodyText": "Are you saying that the NotReady has a NullPointerException as its reason? If so we should fix that.", "author": "tombentley", "createdAt": "2020-01-24T14:46:41Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -250,6 +253,20 @@ void testKafkaConnectS2IStatus() throws InterruptedException {\n         assertKafkaConnectS2IStatus(3, connectS2IUrl, connectS2IDeploymentConfigName);\n     }\n \n+    @Test\n+    void testKafkaConnectorWithoutClusterConfig() {\n+        // This test check NPE when connect cluster is not specified in labels", "originalCommit": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY4MTc3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370681777", "bodyText": "No, it was already fixed and this test just check, that no NPE is in log during this test case.", "author": "Frawless", "createdAt": "2020-01-24T15:07:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDQyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDkyNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670926", "bodyText": "We should reuse the checkConnectorInStatus().", "author": "tombentley", "createdAt": "2020-01-24T14:47:40Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -416,13 +433,31 @@ void assertKafkaConnectStatus(long expectedObservedGeneration, String expectedUr\n         KafkaConnectStatus kafkaConnectStatus = KafkaConnectResource.kafkaConnectClient().inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",", "originalCommit": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "855352ece8b4561b8575206962bf71a0cc41cd90", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java b/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java\nindex 877c02822..6453ff71a 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java\n\n@@ -434,14 +434,7 @@ class CustomResourceStatusST extends BaseST {\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n \n-        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n-        assertThat(pluginsList, notNullValue());\n-        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n-        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",\n-                \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n-                \"org.apache.kafka.connect.mirror.MirrorCheckpointConnector\",\n-                \"org.apache.kafka.connect.mirror.MirrorHeartbeatConnector\",\n-                \"org.apache.kafka.connect.mirror.MirrorSourceConnector\"));\n+        validateConnectPlugins(kafkaConnectStatus.getConnectorPlugins());\n     }\n \n     void assertKafkaConnectS2IStatus(long expectedObservedGeneration, String expectedUrl, String expectedConfigName) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDk3OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2447#discussion_r370670979", "bodyText": "We should reuse the checkConnectorInStatus().", "author": "tombentley", "createdAt": "2020-01-24T14:47:47Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java", "diffHunk": "@@ -416,13 +433,31 @@ void assertKafkaConnectStatus(long expectedObservedGeneration, String expectedUr\n         KafkaConnectStatus kafkaConnectStatus = KafkaConnectResource.kafkaConnectClient().inNamespace(NAMESPACE).withName(CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",\n+                \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorCheckpointConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorHeartbeatConnector\",\n+                \"org.apache.kafka.connect.mirror.MirrorSourceConnector\"));\n     }\n \n     void assertKafkaConnectS2IStatus(long expectedObservedGeneration, String expectedUrl, String expectedConfigName) {\n         KafkaConnectS2Istatus kafkaConnectS2IStatus = KafkaConnectS2IResource.kafkaConnectS2IClient().inNamespace(NAMESPACE).withName(CONNECTS2I_CLUSTER_NAME).get().getStatus();\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect Observed Generation\", kafkaConnectS2IStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect URL\", kafkaConnectS2IStatus.getUrl(), is(expectedUrl));\n         assertThat(\"Kafka ConnectS2I cluster status has incorrect BuildConfigName\", kafkaConnectS2IStatus.getBuildConfigName(), is(expectedConfigName));\n+\n+        List<ConnectorPlugin> pluginsList = kafkaConnectS2IStatus.getConnectorPlugins();\n+        assertThat(pluginsList, notNullValue());\n+        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n+        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",", "originalCommit": "93ffc60f97b7f6d0eb3f4e3caf775a38bdc8472a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "855352ece8b4561b8575206962bf71a0cc41cd90", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java b/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java\nindex 877c02822..6453ff71a 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/CustomResourceStatusST.java\n\n@@ -434,14 +434,7 @@ class CustomResourceStatusST extends BaseST {\n         assertThat(\"Kafka Connect cluster status has incorrect Observed Generation\", kafkaConnectStatus.getObservedGeneration(), is(expectedObservedGeneration));\n         assertThat(\"Kafka Connect cluster status has incorrect URL\", kafkaConnectStatus.getUrl(), is(expectedUrl));\n \n-        List<ConnectorPlugin> pluginsList = kafkaConnectStatus.getConnectorPlugins();\n-        assertThat(pluginsList, notNullValue());\n-        List<String> pluginsClasses = pluginsList.stream().map(p -> p.getConnectorClass()).collect(Collectors.toList());\n-        assertThat(pluginsClasses, hasItems(\"org.apache.kafka.connect.file.FileStreamSinkConnector\",\n-                \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n-                \"org.apache.kafka.connect.mirror.MirrorCheckpointConnector\",\n-                \"org.apache.kafka.connect.mirror.MirrorHeartbeatConnector\",\n-                \"org.apache.kafka.connect.mirror.MirrorSourceConnector\"));\n+        validateConnectPlugins(kafkaConnectStatus.getConnectorPlugins());\n     }\n \n     void assertKafkaConnectS2IStatus(long expectedObservedGeneration, String expectedUrl, String expectedConfigName) {\n"}}, {"oid": "855352ece8b4561b8575206962bf71a0cc41cd90", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/855352ece8b4561b8575206962bf71a0cc41cd90", "message": "Fixup comments\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-01-24T15:30:32Z", "type": "commit"}]}