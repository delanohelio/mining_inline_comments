{"pr_number": 3093, "pr_title": "[MO] - [system test] -> removing extra log", "pr_createdAt": "2020-05-26T09:09:26Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NDk4Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093#discussion_r430294983", "bodyText": "Could you please add here client name/id ?", "author": "Frawless", "createdAt": "2020-05-26T09:56:15Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java", "diffHunk": "@@ -65,8 +65,11 @@ protected void handleClient() {\n \n     @Override\n     public void close() {\n-        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n+            LOGGER.info(\"Closing Consumer instance {}\", consumer.getClass().getName());", "originalCommit": "686c79c34a31975692347c4df687585f608847ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39d4b1e61ee03bf0fc6f2324201078d0c2103925", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java b/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java\nindex 88c40f7461..fe879baffc 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Consumer.java\n\n@@ -65,11 +65,8 @@ public class Consumer extends ClientHandlerBase<Integer> implements AutoCloseabl\n \n     @Override\n     public void close() {\n+        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n-            LOGGER.info(\"Closing Consumer instance {}\", consumer.getClass().getName());\n-            consumer.close();\n-\n-            LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n             vertx.close();\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTA1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093#discussion_r430295058", "bodyText": "Same as above", "author": "Frawless", "createdAt": "2020-05-26T09:56:25Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java", "diffHunk": "@@ -50,30 +53,34 @@ protected void handleClient() {\n \n         LOGGER.info(\"Producer is starting with following properties: {}\", properties.getProperties().toString());\n \n-        KafkaProducer<String, String> producer = KafkaProducer.create(vertx, properties.getProperties());\n-\n         if (msgCntPredicate.test(-1)) {\n             vertx.eventBus().consumer(clientName, msg -> {\n                 if (msg.body().equals(\"stop\")) {\n                     LOGGER.debug(\"Received stop command! Produced messages: {}\", numSent.get());\n                     resultPromise.complete(numSent.get());\n                 }\n             });\n-            vertx.setPeriodic(1000, id -> sendNext(producer, topic));\n+            vertx.setPeriodic(1000, id -> sendNext(topic));\n         } else {\n-            sendNext(producer, topic);\n+            sendNext(topic);\n         }\n     }\n \n     @Override\n     public void close() {\n-        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n+\n+            LOGGER.info(\"Closing Producer instance {}\", producer.getClass().getName());", "originalCommit": "686c79c34a31975692347c4df687585f608847ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39d4b1e61ee03bf0fc6f2324201078d0c2103925", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java b/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java\nindex 9bebe635a4..31ae697aa9 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java\n\n@@ -53,6 +50,8 @@ public class Producer extends ClientHandlerBase<Integer> implements AutoCloseabl\n \n         LOGGER.info(\"Producer is starting with following properties: {}\", properties.getProperties().toString());\n \n+        KafkaProducer<String, String> producer = KafkaProducer.create(vertx, properties.getProperties());\n+\n         if (msgCntPredicate.test(-1)) {\n             vertx.eventBus().consumer(clientName, msg -> {\n                 if (msg.body().equals(\"stop\")) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTEyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3093#discussion_r430295122", "bodyText": "Same as above", "author": "Frawless", "createdAt": "2020-05-26T09:56:32Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java", "diffHunk": "@@ -50,30 +53,34 @@ protected void handleClient() {\n \n         LOGGER.info(\"Producer is starting with following properties: {}\", properties.getProperties().toString());\n \n-        KafkaProducer<String, String> producer = KafkaProducer.create(vertx, properties.getProperties());\n-\n         if (msgCntPredicate.test(-1)) {\n             vertx.eventBus().consumer(clientName, msg -> {\n                 if (msg.body().equals(\"stop\")) {\n                     LOGGER.debug(\"Received stop command! Produced messages: {}\", numSent.get());\n                     resultPromise.complete(numSent.get());\n                 }\n             });\n-            vertx.setPeriodic(1000, id -> sendNext(producer, topic));\n+            vertx.setPeriodic(1000, id -> sendNext(topic));\n         } else {\n-            sendNext(producer, topic);\n+            sendNext(topic);\n         }\n     }\n \n     @Override\n     public void close() {\n-        LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());\n         if (vertx != null) {\n+\n+            LOGGER.info(\"Closing Producer instance {}\", producer.getClass().getName());\n+            if (producer != null) {\n+                producer.close();\n+            }\n+\n+            LOGGER.info(\"Closing Vert.x instance for the client {}\", this.getClass().getName());", "originalCommit": "686c79c34a31975692347c4df687585f608847ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39d4b1e61ee03bf0fc6f2324201078d0c2103925", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java b/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java\nindex 9bebe635a4..31ae697aa9 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/kafkaclients/externalClients/Producer.java\n\n@@ -53,6 +50,8 @@ public class Producer extends ClientHandlerBase<Integer> implements AutoCloseabl\n \n         LOGGER.info(\"Producer is starting with following properties: {}\", properties.getProperties().toString());\n \n+        KafkaProducer<String, String> producer = KafkaProducer.create(vertx, properties.getProperties());\n+\n         if (msgCntPredicate.test(-1)) {\n             vertx.eventBus().consumer(clientName, msg -> {\n                 if (msg.body().equals(\"stop\")) {\n"}}, {"oid": "39d4b1e61ee03bf0fc6f2324201078d0c2103925", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/39d4b1e61ee03bf0fc6f2324201078d0c2103925", "message": "[MO] - [bug] -> extra log from client\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T07:37:55Z", "type": "commit"}, {"oid": "93fb3e94a064cbda95cd5518c1cc51dd822870c3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/93fb3e94a064cbda95cd5518c1cc51dd822870c3", "message": "[MO] -[closing] -> producer, consumer instance\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T07:37:55Z", "type": "commit"}, {"oid": "aaa70f19b0cee2b23a9a1d213e141aec5fecdde6", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/aaa70f19b0cee2b23a9a1d213e141aec5fecdde6", "message": "ds\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T07:37:55Z", "type": "commit"}, {"oid": "9a2d9bf68fd211eb13bca0022210d32462a2f017", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9a2d9bf68fd211eb13bca0022210d32462a2f017", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T07:37:55Z", "type": "commit"}, {"oid": "9a2d9bf68fd211eb13bca0022210d32462a2f017", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9a2d9bf68fd211eb13bca0022210d32462a2f017", "message": "update\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T07:37:55Z", "type": "forcePushed"}]}