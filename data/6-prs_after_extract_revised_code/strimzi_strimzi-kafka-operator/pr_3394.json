{"pr_number": 3394, "pr_title": "[systemtest][mm2] Add checks for mirroring headers to separate test", "pr_createdAt": "2020-07-27T13:43:06Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3394", "timeline": [{"oid": "11ab29630bbaa087f855703968156252389ef48c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/11ab29630bbaa087f855703968156252389ef48c", "message": "separe the test and change timeouts in clients utils\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-27T13:34:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNTY2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3394#discussion_r460915664", "bodyText": "any reason why you change this again? I thought we agreed it's not needed in this method.", "author": "Frawless", "createdAt": "2020-07-27T14:06:56Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -43,15 +45,17 @@ public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafk\n     }\n \n     public static void waitTillContinuousClientsFinish(String producerName, String consumerName, String namespace, int messageCount) {\n-        long timeout = (long) messageCount * 1000;\n+        // need to add at least 1-2minutes for finishing the jobs\n+        long timeout = (long) messageCount * 1000 + Duration.ofMinutes(2).toMillis();", "originalCommit": "11ab29630bbaa087f855703968156252389ef48c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxODIyMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3394#discussion_r460918221", "bodyText": "well I changed this as I'm using it in the test. I didn't wanted to add something like messagesCount * 3000, because this can cause unnecessarily long timeout in upgrade tests. So I added just two minutes to both function -> for finishing the job. If you agree I can leave it like this. If not, I'll change it", "author": "im-konge", "createdAt": "2020-07-27T14:10:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNTY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxOTQ4MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3394#discussion_r460919481", "bodyText": "Not great, not terrible. Maybe we should have for this some method which can be called in both cases?", "author": "Frawless", "createdAt": "2020-07-27T14:12:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNTY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzODE1MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3394#discussion_r460938151", "bodyText": "sure good idea", "author": "im-konge", "createdAt": "2020-07-27T14:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxNTY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "ad7217bd7e6cd4e309432f1299ddb827d33d49c3", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java b/systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java\nindex 3aecfa9229..480cb89139 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java\n\n@@ -45,20 +45,21 @@ public class ClientUtils {\n     }\n \n     public static void waitTillContinuousClientsFinish(String producerName, String consumerName, String namespace, int messageCount) {\n-        // need to add at least 1-2minutes for finishing the jobs\n-        long timeout = (long) messageCount * 1000 + Duration.ofMinutes(2).toMillis();\n-        LOGGER.info(\"Waiting till producer {} and consumer {} finish for the following {} ms\", producerName, consumerName, timeout);\n-        TestUtils.waitFor(\"continuous clients finished\", Constants.GLOBAL_POLL_INTERVAL, timeout,\n+        LOGGER.info(\"Waiting till producer {} and consumer {} finish\", producerName, consumerName);\n+        TestUtils.waitFor(\"continuous clients finished\", Constants.GLOBAL_POLL_INTERVAL, timeoutForClientFinishJob(messageCount),\n             () -> kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(producerName).get().getStatus().getSucceeded().equals(1) &&\n                     kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(consumerName).get().getStatus().getSucceeded().equals(1));\n     }\n \n     public static void waitForClientSuccess(String jobName, String namespace, int messageCount) {\n-        // need to add at least 1-2minutes for finishing the job\n-        long timeout = (long) messageCount * 1000 + Duration.ofMinutes(2).toMillis();\n-        LOGGER.info(\"Waiting for producer/consumer:{} will be finished in next {} ms\", jobName, timeout);\n-        TestUtils.waitFor(\"job finished\", Constants.GLOBAL_POLL_INTERVAL, timeout,\n+        LOGGER.info(\"Waiting for producer/consumer:{} will be finished\", jobName);\n+        TestUtils.waitFor(\"job finished\", Constants.GLOBAL_POLL_INTERVAL, timeoutForClientFinishJob(messageCount),\n             () -> kubeClient().getClient().batch().jobs().inNamespace(namespace).withName(jobName).get().getStatus().getSucceeded().equals(1));\n     }\n+\n+    private static long timeoutForClientFinishJob(int messagesCount) {\n+        // need to add at least 1-2minutes for finishing the job\n+        return (long) messagesCount * 1000 + Duration.ofMinutes(2).toMillis();\n+    }\n }\n \n"}}, {"oid": "ad7217bd7e6cd4e309432f1299ddb827d33d49c3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ad7217bd7e6cd4e309432f1299ddb827d33d49c3", "message": "comment\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-27T15:28:08Z", "type": "commit"}, {"oid": "ad7217bd7e6cd4e309432f1299ddb827d33d49c3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ad7217bd7e6cd4e309432f1299ddb827d33d49c3", "message": "comment\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-07-27T15:28:08Z", "type": "forcePushed"}]}