{"pr_number": 2915, "pr_title": "Remove Zookeeper TLS sidecars", "pr_createdAt": "2020-04-29T14:14:47Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTA1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417575058", "bodyText": "Do we want to use a constant and reference it for the 2181 here", "author": "samuel-hawker", "createdAt": "2020-04-29T19:58:52Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java", "diffHunk": "@@ -324,18 +327,13 @@ private ZKClientConfig getClientConfig()  {\n      * @param scale     Number of nodes which the Zookeeper cluster should have\n      * @return          Map with configuration\n      */\n-    /*test*/ static Map<String, String> generateConfig(int scale)   {\n+    /*test*/ static Map<String, String> generateConfig(int scale, Function<Integer, String> zkNodeAddress)   {\n         Map<String, String> servers = new HashMap<>(scale);\n \n         for (int i = 0; i < scale; i++) {\n-            // The Zookeeper server IDs starts with 1\n+            // The Zookeeper server IDs starts with 1, but pod index starts from 0\n             String key = String.format(\"server.%d\", i + 1);\n-\n-            // The ports\n-            int followerPort = (ZookeeperCluster.CLUSTERING_PORT * 10) + i;\n-            int electionPort = (ZookeeperCluster.LEADER_ELECTION_PORT * 10) + i;\n-            int clientPort = (ZookeeperCluster.CLIENT_PORT * 10) + i;\n-            String value = String.format(\"127.0.0.1:%d:%d:participant;127.0.0.1:%d\", followerPort, electionPort, clientPort);\n+            String value = String.format(\"%s:%d:%d:participant;127.0.0.1:%d\", zkNodeAddress.apply(i), ZookeeperCluster.CLUSTERING_PORT, ZookeeperCluster.LEADER_ELECTION_PORT, 2181);", "originalCommit": "572a81f014fd25741beca2ff3869a3c2b73d7957", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYzMTc2Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417631762", "bodyText": "Done", "author": "scholzj", "createdAt": "2020-04-29T21:46:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "3eaa99349cbea974cf15f7fbbab6eec5cf0e0ac2", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java\nindex 67400143ea..0abe13f4a4 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/ZookeeperScaler.java\n\n@@ -333,7 +333,7 @@ public class ZookeeperScaler implements AutoCloseable {\n         for (int i = 0; i < scale; i++) {\n             // The Zookeeper server IDs starts with 1, but pod index starts from 0\n             String key = String.format(\"server.%d\", i + 1);\n-            String value = String.format(\"%s:%d:%d:participant;127.0.0.1:%d\", zkNodeAddress.apply(i), ZookeeperCluster.CLUSTERING_PORT, ZookeeperCluster.LEADER_ELECTION_PORT, 2181);\n+            String value = String.format(\"%s:%d:%d:participant;127.0.0.1:%d\", zkNodeAddress.apply(i), ZookeeperCluster.CLUSTERING_PORT, ZookeeperCluster.LEADER_ELECTION_PORT, ZookeeperCluster.CLIENT_PLAINTEXT_PORT);\n \n             servers.put(key, value);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1NjY3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417856674", "bodyText": "Removing these properties is an incompatible change. I don't think that actually breaks anything on any of the versions of Kube which we support (since we're not using structural schemas), but if we were using structural schemas the existing CRs which specified this property would be rejected by the API server. So it might not cause any problems immediately until we make the CRD changes for structual schemas at which point users who still had this specified in their CRs would suddenly get errors.\nOverall I think it might be safer to just leave the property in there, but mark it as @DeprecatedProperty and ignore it when it's set. We could remove it in v1beta2.", "author": "tombentley", "createdAt": "2020-04-30T08:52:22Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/ZookeeperClusterSpec.java", "diffHunk": "@@ -96,16 +99,6 @@ public void setLogging(Logging logging) {\n         this.logging = logging;\n     }\n \n-    @Description(\"TLS sidecar configuration\")\n-    @JsonInclude(JsonInclude.Include.NON_NULL)\n-    public TlsSidecar getTlsSidecar() {\n-        return tlsSidecar;\n-    }\n-\n-    public void setTlsSidecar(TlsSidecar tlsSidecar) {\n-        this.tlsSidecar = tlsSidecar;\n-    }\n-", "originalCommit": "8d29f3b86979b5622123e64ca362ff74feafeda7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62d32344ef8fe9a74d3ccc109abee12d28cc1577", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/ZookeeperClusterSpec.java b/api/src/main/java/io/strimzi/api/kafka/model/ZookeeperClusterSpec.java\nindex 3d350a6c15..20f7df4c12 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/ZookeeperClusterSpec.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/ZookeeperClusterSpec.java\n\n@@ -99,6 +100,19 @@ public class ZookeeperClusterSpec implements UnknownPropertyPreserving, Serializ\n         this.logging = logging;\n     }\n \n+    @DeprecatedProperty\n+    @Deprecated\n+    @Description(\"TLS sidecar configuration. \" +\n+            \"The TLS sidecar is not used anymore and this option will be ignored.\")\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public TlsSidecar getTlsSidecar() {\n+        return tlsSidecar;\n+    }\n+\n+    public void setTlsSidecar(TlsSidecar tlsSidecar) {\n+        this.tlsSidecar = tlsSidecar;\n+    }\n+\n     @Description(\"The number of pods in the cluster.\")\n     @Minimum(1)\n     @JsonProperty(required = true)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1Njg1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417856858", "bodyText": "Same comment.", "author": "tombentley", "createdAt": "2020-04-30T08:52:41Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java", "diffHunk": "@@ -111,16 +110,6 @@ public void setZookeeperContainer(ContainerTemplate zookeeperContainer) {\n         this.zookeeperContainer = zookeeperContainer;\n     }\n \n-    @Description(\"Template for the Kafka broker TLS sidecar container\")\n-    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n-    public ContainerTemplate getTlsSidecarContainer() {\n-        return tlsSidecarContainer;\n-    }\n-\n-    public void setTlsSidecarContainer(ContainerTemplate tlsSidecarContainer) {\n-        this.tlsSidecarContainer = tlsSidecarContainer;\n-    }", "originalCommit": "8d29f3b86979b5622123e64ca362ff74feafeda7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62d32344ef8fe9a74d3ccc109abee12d28cc1577", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java b/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java\nindex 3ca0105ac0..fbfaf78ceb 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java\n\n@@ -110,6 +112,19 @@ public class ZookeeperClusterTemplate implements Serializable, UnknownPropertyPr\n         this.zookeeperContainer = zookeeperContainer;\n     }\n \n+    @DeprecatedProperty\n+    @Deprecated\n+    @Description(\"Template for the Kafka broker TLS sidecar container. \" +\n+            \"The TLS sidecar is not used anymore and this option will be ignored.\")\n+    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n+    public ContainerTemplate getTlsSidecarContainer() {\n+        return tlsSidecarContainer;\n+    }\n+\n+    public void setTlsSidecarContainer(ContainerTemplate tlsSidecarContainer) {\n+        this.tlsSidecarContainer = tlsSidecarContainer;\n+    }\n+\n     @Override\n     public Map<String, Object> getAdditionalProperties() {\n         return this.additionalProperties;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1NzQ5OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417957498", "bodyText": "I know it doesn't matter as this is now deprecated, but isn't this technically the ZooKeeper TLS sidecar container?\nOr do you refer to it as the kafka broker sidecar as its job is to speak to the kafka broker?", "author": "samuel-hawker", "createdAt": "2020-04-30T12:00:09Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java", "diffHunk": "@@ -111,7 +112,10 @@ public void setZookeeperContainer(ContainerTemplate zookeeperContainer) {\n         this.zookeeperContainer = zookeeperContainer;\n     }\n \n-    @Description(\"Template for the Kafka broker TLS sidecar container\")\n+    @DeprecatedProperty\n+    @Deprecated\n+    @Description(\"Template for the Kafka broker TLS sidecar container. \" +", "originalCommit": "c825401c74fff57d2216c7eb938be693fce078bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "425bedaaadeefcb348848f03b9bb413bb2e97f0e", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java b/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java\nindex fbfaf78ceb..3ca0105ac0 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/template/ZookeeperClusterTemplate.java\n\n@@ -112,19 +110,6 @@ public class ZookeeperClusterTemplate implements Serializable, UnknownPropertyPr\n         this.zookeeperContainer = zookeeperContainer;\n     }\n \n-    @DeprecatedProperty\n-    @Deprecated\n-    @Description(\"Template for the Kafka broker TLS sidecar container. \" +\n-            \"The TLS sidecar is not used anymore and this option will be ignored.\")\n-    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n-    public ContainerTemplate getTlsSidecarContainer() {\n-        return tlsSidecarContainer;\n-    }\n-\n-    public void setTlsSidecarContainer(ContainerTemplate tlsSidecarContainer) {\n-        this.tlsSidecarContainer = tlsSidecarContainer;\n-    }\n-\n     @Override\n     public Map<String, Object> getAdditionalProperties() {\n         return this.additionalProperties;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1Nzg4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417957882", "bodyText": "Might be missing something here, but don't we only add two things to data , not three?", "author": "samuel-hawker", "createdAt": "2020-04-30T12:00:54Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -374,7 +374,7 @@ public String parseLogging(Logging logging, ConfigMap externalCm) {\n      * @return The generated ConfigMap.\n      */\n     public ConfigMap generateMetricsAndLogConfigMap(ConfigMap cm) {\n-        Map<String, String> data = new HashMap<>();\n+        Map<String, String> data = new HashMap<>(3);", "originalCommit": "c825401c74fff57d2216c7eb938be693fce078bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "425bedaaadeefcb348848f03b9bb413bb2e97f0e", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java\nindex 1aaef99283..7248038445 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java\n\n@@ -374,7 +374,7 @@ public abstract class AbstractModel {\n      * @return The generated ConfigMap.\n      */\n     public ConfigMap generateMetricsAndLogConfigMap(ConfigMap cm) {\n-        Map<String, String> data = new HashMap<>(3);\n+        Map<String, String> data = new HashMap<>();\n         data.put(getAncillaryConfigMapKeyLogConfig(), parseLogging(getLogging(), cm));\n         if (isMetricsEnabled()) {\n             HashMap<String, Object> m = new HashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1OTIxOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417959218", "bodyText": "FORBIDDEN_OPTIONS_EXCEPTIONS  might be a slightly better name just so that this isn't confused with EXCEPTIONS as in the throwable (highly unlikely I admit, but still probably best to stay consistent with where  we have used:\nFORBIDDEN_PREFIXES\nFORBIDDEN_PREFIXES_EXCEPTIONS", "author": "samuel-hawker", "createdAt": "2020-04-30T12:03:35Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ZookeeperConfiguration.java", "diffHunk": "@@ -7,34 +7,25 @@\n \n import io.strimzi.api.kafka.model.ZookeeperClusterSpec;\n \n-import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-import static java.util.Collections.emptyList;\n+import static java.util.Arrays.asList;\n \n /**\n  * Class for handling Zookeeper configuration passed by the user\n  */\n public class ZookeeperConfiguration extends AbstractConfiguration {\n \n     private static final List<String> FORBIDDEN_OPTIONS;\n+    private static final List<String> EXCEPTIONS;\n     protected static final Map<String, String> DEFAULTS;\n \n     static {\n-        FORBIDDEN_OPTIONS = new ArrayList<>();\n-        FORBIDDEN_OPTIONS.addAll(Arrays.asList(ZookeeperClusterSpec.FORBIDDEN_PREFIXES.split(\" *, *\")));\n-        // This option is handled in the Zookeeper container startup script\n-        FORBIDDEN_OPTIONS.add(\"snapshot.trust.empty\");\n-        // This option would prevent scaling beyond 1 node for clusters started with a single node\n-        FORBIDDEN_OPTIONS.add(\"standaloneEnabled\");\n-        // Reconfiguration needs to be enabled to allow scaling of the cluster\n-        FORBIDDEN_OPTIONS.add(\"reconfigEnabled\");\n-        // The Cluster Operator requires access to multiple 4LW and access to the nodes is secured by the TLS-Sidecars so we set all allowed\n-        FORBIDDEN_OPTIONS.add(\"4lw.commands.whitelist\");\n+        FORBIDDEN_OPTIONS = asList(ZookeeperClusterSpec.FORBIDDEN_PREFIXES.split(\", \"));\n+        EXCEPTIONS = asList(ZookeeperClusterSpec.FORBIDDEN_PREFIX_EXCEPTIONS.split(\", \"));", "originalCommit": "c825401c74fff57d2216c7eb938be693fce078bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4NDAxOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417984018", "bodyText": "I think this is fair point, but it is named EXCEPTIONS everywhere else - in all the other *Configuration classes in themodel package. So I probably prefer to keep it as it is and in sync with the other classes. I would instead open a sepaarte issue for it if it is fine with you.", "author": "scholzj", "createdAt": "2020-04-30T12:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1OTIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4ODkwNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r417988907", "bodyText": "I actually decided to go ahead and opened #2927 - I think it makes nice and easy issue for someone to get started with it. I hope you don't mind.", "author": "scholzj", "createdAt": "2020-04-30T12:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1OTIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI5ODMwNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2915#discussion_r418298305", "bodyText": "Makes sense to me, thanks for raising an issue for it - leaving as is absolutely fine in my eyes :)", "author": "samuel-hawker", "createdAt": "2020-04-30T21:25:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1OTIxOA=="}], "type": "inlineReview", "revised_code": {"commit": "425bedaaadeefcb348848f03b9bb413bb2e97f0e", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ZookeeperConfiguration.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ZookeeperConfiguration.java\nindex 6a91ebacf6..554025419d 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ZookeeperConfiguration.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ZookeeperConfiguration.java\n\n@@ -7,12 +7,14 @@ package io.strimzi.operator.cluster.model;\n \n import io.strimzi.api.kafka.model.ZookeeperClusterSpec;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-import static java.util.Arrays.asList;\n+import static java.util.Collections.emptyList;\n \n /**\n  * Class for handling Zookeeper configuration passed by the user\n"}}, {"oid": "425bedaaadeefcb348848f03b9bb413bb2e97f0e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/425bedaaadeefcb348848f03b9bb413bb2e97f0e", "message": "Remove Zookeeper TLS sidecars\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "5de559a92f49d30127d5f257a0f91fe3a45187da", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5de559a92f49d30127d5f257a0f91fe3a45187da", "message": "Fix KafkaST\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "d685c04a6261003ce1ef6e0d7ad4d6549ce4e74a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d685c04a6261003ce1ef6e0d7ad4d6549ce4e74a", "message": "Remove traces of ZooKeeper 3.4\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "3eaa99349cbea974cf15f7fbbab6eec5cf0e0ac2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3eaa99349cbea974cf15f7fbbab6eec5cf0e0ac2", "message": "Make Zookeeper scaling work without restarts\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "f92906c2be430659ae18c569634ad2547f56bb2e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f92906c2be430659ae18c569634ad2547f56bb2e", "message": "Let users configure cipher suites and TLS protocols\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "798cf8c857e8bbc3e2f54346d3b4a2cb34dab899", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/798cf8c857e8bbc3e2f54346d3b4a2cb34dab899", "message": "Fix docs, CRDs and APi description\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "6dda6340d83927a6abc2ec81110e48044b1d1a87", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6dda6340d83927a6abc2ec81110e48044b1d1a87", "message": "Remove the TLS sidecar from system test image check\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "62d32344ef8fe9a74d3ccc109abee12d28cc1577", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/62d32344ef8fe9a74d3ccc109abee12d28cc1577", "message": "Review commments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "c8e39dd1f8abfe7c379038660460a7431b1274b2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c8e39dd1f8abfe7c379038660460a7431b1274b2", "message": "Review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "534920cbe47c3bfd862b099e670630da2aa5eedc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/534920cbe47c3bfd862b099e670630da2aa5eedc", "message": "Fix Zookeeper connection port for STs\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "58df1a4608a86e72ffe99e53c2b326100b69d328", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/58df1a4608a86e72ffe99e53c2b326100b69d328", "message": "Use 2181 for the Zookeeper port to be able to handle upgrades\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "35f416b06d4f178a3a8a207ae6722ded5892b62d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/35f416b06d4f178a3a8a207ae6722ded5892b62d", "message": "Remove unfinished changes\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-01T21:03:05Z", "type": "commit"}, {"oid": "32389dadd2b95071dbe71b45e3feb30234febed2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/32389dadd2b95071dbe71b45e3feb30234febed2", "message": "Try to fix upgrade issues\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-02T20:37:23Z", "type": "commit"}, {"oid": "32389dadd2b95071dbe71b45e3feb30234febed2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/32389dadd2b95071dbe71b45e3feb30234febed2", "message": "Try to fix upgrade issues\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-02T20:37:23Z", "type": "forcePushed"}, {"oid": "85c56377848a8e8103f2f16a19facb94e6b09e5b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/85c56377848a8e8103f2f16a19facb94e6b09e5b", "message": "Update some more system tests, add comments to the code etc.\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-03T15:27:41Z", "type": "commit"}, {"oid": "65aab2c2241395e6f46be082207f64cdad277a17", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/65aab2c2241395e6f46be082207f64cdad277a17", "message": "Revert back the changes in StrimziUpgradeST.json\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-05-04T08:19:02Z", "type": "commit"}, {"oid": "d7a0d47310b44f5f50b9418896ba7d3e25d45edc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d7a0d47310b44f5f50b9418896ba7d3e25d45edc", "message": "Merge branch 'master' into remove-zookeeper-sidecars", "committedDate": "2020-05-05T17:36:44Z", "type": "commit"}]}