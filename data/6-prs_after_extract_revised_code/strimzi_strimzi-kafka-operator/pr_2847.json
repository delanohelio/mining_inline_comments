{"pr_number": 2847, "pr_title": "[systemtest] Fix failing tests", "pr_createdAt": "2020-04-16T21:27:16Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MTQ2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r409861466", "bodyText": "Why 5 times?", "author": "Frawless", "createdAt": "2020-04-16T21:33:37Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/kafka/ListenersST.java", "diffHunk": "@@ -657,12 +657,15 @@ void testCustomCertLoadBalancerAndTlsRollingUpdate() throws Exception {\n         );\n \n         internalKafkaClient.setConsumerGroup(\"consumer-group-certs-71\");\n-        internalKafkaClient.setMessageCount(MESSAGE_COUNT * 3);\n+        internalKafkaClient.setMessageCount(MESSAGE_COUNT);\n \n         sent = internalKafkaClient.sendMessagesTls();\n-        assertThat(sent, is(3 * MESSAGE_COUNT));\n+        assertThat(sent, is(MESSAGE_COUNT));\n+\n+        internalKafkaClient.setMessageCount(MESSAGE_COUNT * 5);", "originalCommit": "6a60954136a74d08a187807d42868edb4f058c90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE0NDk5MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r410144990", "bodyText": "I need to get some info from Maros about clients -> but if you set different CONSUMER_GROUP you'll receive all messages until that moment -> not just messages you set in setMessagesCount. So maybe it's problem in VerifiableClient. But in the original test (before refactor of the clients) was it this way.", "author": "im-konge", "createdAt": "2020-04-17T10:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MTQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE0OTQyMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r410149421", "bodyText": "Can you open the issue for it? We should understand what's happening here.", "author": "Frawless", "createdAt": "2020-04-17T10:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MTQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE0OTcwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r410149700", "bodyText": "Yeah sure -> how I said - maybe it's fault in understanding from my side, we will see.", "author": "im-konge", "createdAt": "2020-04-17T10:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MTQ2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2Mzc3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r409863777", "bodyText": "Wouldn't it be better to check this list size in waitForPodDeletion() ?", "author": "Frawless", "createdAt": "2020-04-16T21:38:39Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -1009,34 +1018,31 @@ void testRemoveUserAndTopicOperatorsFromEntityOperator() {\n         timeMeasuringSystem.setOperationID(timeMeasuringSystem.startTimeMeasuring(Operation.CLUSTER_DEPLOYMENT));\n         KafkaResource.kafkaEphemeral(CLUSTER_NAME, 3).done();\n \n-        String eoPodName = kubeClient().listPodsByPrefixInName(KafkaResources.entityOperatorDeploymentName(CLUSTER_NAME))\n-                .get(0).getMetadata().getName();\n+        String eoDeploymentName = KafkaResources.entityOperatorDeploymentName(CLUSTER_NAME);\n \n         KafkaResource.replaceKafkaResource(CLUSTER_NAME, k -> {\n-            EntityOperatorSpec entityOperatorSpec = k.getSpec().getEntityOperator();\n-            entityOperatorSpec.setTopicOperator(null);\n-            entityOperatorSpec.setUserOperator(null);\n-            k.getSpec().setEntityOperator(entityOperatorSpec);\n+            k.getSpec().getEntityOperator().setTopicOperator(null);\n+            k.getSpec().getEntityOperator().setUserOperator(null);\n         });\n \n         //Waiting when EO pod will be deleted\n-        DeploymentUtils.waitForDeploymentDeletion(KafkaResources.entityOperatorDeploymentName(CLUSTER_NAME));\n-        ReplicaSetUtils.waitForReplicaSetDeletion(KafkaResources.entityOperatorDeploymentName(CLUSTER_NAME));\n-        PodUtils.waitForPodDeletion(eoPodName);\n+        DeploymentUtils.waitForDeploymentDeletion(eoDeploymentName);\n+        ReplicaSetUtils.waitForReplicaSetDeletion(eoDeploymentName);\n \n+        if (kubeClient().listPodsByPrefixInName(eoDeploymentName).size() != 0) {\n+            PodUtils.waitForPodDeletion(kubeClient().listPodsByPrefixInName(eoDeploymentName).get(0).getMetadata().getName());\n+        }", "originalCommit": "6a60954136a74d08a187807d42868edb4f058c90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE0ODI5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r410148299", "bodyText": "Now it's redundant here", "author": "Frawless", "createdAt": "2020-04-17T10:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2Mzc3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8618116a5c35eadefa3ee00e12494940cfc14120", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java b/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\nindex 5d3f25c5b4..c2e1e6f713 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\n\n@@ -1028,10 +1028,8 @@ class KafkaST extends BaseST {\n         //Waiting when EO pod will be deleted\n         DeploymentUtils.waitForDeploymentDeletion(eoDeploymentName);\n         ReplicaSetUtils.waitForReplicaSetDeletion(eoDeploymentName);\n+        PodUtils.waitForPodDeletion(kubeClient().listPodsByPrefixInName(eoDeploymentName).get(0).getMetadata().getName());\n \n-        if (kubeClient().listPodsByPrefixInName(eoDeploymentName).size() != 0) {\n-            PodUtils.waitForPodDeletion(kubeClient().listPodsByPrefixInName(eoDeploymentName).get(0).getMetadata().getName());\n-        }\n         //Checking that EO was removed\n         assertThat(kubeClient().listPodsByPrefixInName(eoDeploymentName).size(), is(0));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MDM2Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2847#discussion_r410180363", "bodyText": "this assert can be written just one time outside of the if(s), it's common to both.", "author": "ppatierno", "createdAt": "2020-04-17T12:10:03Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java", "diffHunk": "@@ -845,12 +845,21 @@ void testJvmAndResources() {\n         kubeClient().getPod(eoPod).getSpec().getContainers().forEach(container -> {\n             if (!container.getName().equals(\"tls-sidecar\")) {\n                 LOGGER.info(\"Check if -D java options are present in {}\", container.getName());\n-                String value = container.getEnv().stream().filter(envVar ->\n-                        envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).findFirst().get().getValue();\n-                if (container.getName().equals(\"topic-operator\"))\n-                    assertThat(value, is(\"-Xms1024M -Xmx2G -Djavax.net.debug=verbose\"));\n-                if (container.getName().equals(\"user-operator\"))\n-                    assertThat(value, is(\"-Xms512M -Xmx1G -Djavax.net.debug=verbose\"));\n+\n+                String javaSystemProp = container.getEnv().stream().filter(envVar ->\n+                    envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).findFirst().get().getValue();\n+                String javaOpts = container.getEnv().stream().filter(envVar ->\n+                    envVar.getName().equals(\"STRIMZI_JAVA_OPTS\")).findFirst().get().getValue();\n+\n+                if (container.getName().equals(\"topic-operator\")) {\n+                    assertThat(javaSystemProp, is(\"-Djavax.net.debug=verbose\"));", "originalCommit": "5d37b93f4678f98acf1e0efd7566b137a320f458", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52433b003606372d4c8ff411007b23178b6510dd", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java b/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\nindex c2e1e6f713..36856b7f78 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/KafkaST.java\n\n@@ -845,21 +845,12 @@ class KafkaST extends BaseST {\n         kubeClient().getPod(eoPod).getSpec().getContainers().forEach(container -> {\n             if (!container.getName().equals(\"tls-sidecar\")) {\n                 LOGGER.info(\"Check if -D java options are present in {}\", container.getName());\n-\n-                String javaSystemProp = container.getEnv().stream().filter(envVar ->\n-                    envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).findFirst().get().getValue();\n-                String javaOpts = container.getEnv().stream().filter(envVar ->\n-                    envVar.getName().equals(\"STRIMZI_JAVA_OPTS\")).findFirst().get().getValue();\n-\n-                if (container.getName().equals(\"topic-operator\")) {\n-                    assertThat(javaSystemProp, is(\"-Djavax.net.debug=verbose\"));\n-                    assertThat(javaOpts, is(\"-Xms1024M -Xmx2G\"));\n-                }\n-\n-                if (container.getName().equals(\"user-operator\")) {\n-                    assertThat(javaSystemProp, is(\"-Djavax.net.debug=verbose\"));\n-                    assertThat(javaOpts, is(\"-Xms512M -Xmx1G\"));\n-                }\n+                String value = container.getEnv().stream().filter(envVar ->\n+                        envVar.getName().equals(\"STRIMZI_JAVA_SYSTEM_PROPERTIES\")).findFirst().get().getValue();\n+                if (container.getName().equals(\"topic-operator\"))\n+                    assertThat(value, is(\"-Xms1024M -Xmx2G -Djavax.net.debug=verbose\"));\n+                if (container.getName().equals(\"user-operator\"))\n+                    assertThat(value, is(\"-Xms512M -Xmx1G -Djavax.net.debug=verbose\"));\n             }\n         });\n \n"}}, {"oid": "52433b003606372d4c8ff411007b23178b6510dd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/52433b003606372d4c8ff411007b23178b6510dd", "message": "fix failing tests\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T12:47:27Z", "type": "commit"}, {"oid": "3d8a7a6862df0ae8be750190b9f5b680493e2b94", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3d8a7a6862df0ae8be750190b9f5b680493e2b94", "message": "another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T12:47:27Z", "type": "commit"}, {"oid": "feeecb5efaefaaa396747a5ae6b8c0149c2d4a12", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/feeecb5efaefaaa396747a5ae6b8c0149c2d4a12", "message": "fixup! another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T12:47:27Z", "type": "commit"}, {"oid": "8618116a5c35eadefa3ee00e12494940cfc14120", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8618116a5c35eadefa3ee00e12494940cfc14120", "message": "fixup! fixup! another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T12:47:27Z", "type": "commit"}, {"oid": "8618116a5c35eadefa3ee00e12494940cfc14120", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8618116a5c35eadefa3ee00e12494940cfc14120", "message": "fixup! fixup! another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T12:47:27Z", "type": "forcePushed"}, {"oid": "8a7907c845052f8d1b023ac8d8b7c736cafe1c79", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8a7907c845052f8d1b023ac8d8b7c736cafe1c79", "message": "fixup! fixup! fixup! another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T20:33:08Z", "type": "forcePushed"}, {"oid": "05dcbd160edb27980ad20ba251116f757cf2206d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/05dcbd160edb27980ad20ba251116f757cf2206d", "message": "fixup! fixup! fixup! another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T21:20:24Z", "type": "commit"}, {"oid": "05dcbd160edb27980ad20ba251116f757cf2206d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/05dcbd160edb27980ad20ba251116f757cf2206d", "message": "fixup! fixup! fixup! another one\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-17T21:20:24Z", "type": "forcePushed"}]}