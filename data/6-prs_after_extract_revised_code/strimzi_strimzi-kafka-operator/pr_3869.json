{"pr_number": 3869, "pr_title": "Implement custom Matcher for AssemblyOperator states", "pr_createdAt": "2020-10-23T19:08:48Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3869", "timeline": [{"oid": "4e696e7d31654f495777f4bf2584c2da076d8ec3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4e696e7d31654f495777f4bf2584c2da076d8ec3", "message": "Implement custom Matcher for AssemblyOperator states\n\nSigned-off-by: klalafaryan <lalafaryan@gmail.com>", "committedDate": "2020-10-23T19:05:42Z", "type": "commit"}, {"oid": "4762a64c4e7e5fbabc6d9f9770fcab1016ddb7b4", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4762a64c4e7e5fbabc6d9f9770fcab1016ddb7b4", "message": "Remove unused imports\n\nSigned-off-by: klalafaryan <lalafaryan@gmail.com>", "committedDate": "2020-10-25T20:53:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxMzU4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3869#discussion_r511813587", "bodyText": "I don't think we want to add Guava as dependency. Can you solve this with regular Java lists/arrays? From the code it is not clear why is it really needed. This is also what is breaking the CI builds.", "author": "scholzj", "createdAt": "2020-10-26T09:15:43Z", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaRebalanceAssemblyOperatorTest.java", "diffHunk": "@@ -4,6 +4,7 @@\n  */\n package io.strimzi.operator.cluster.operator.assembly;\n \n+import com.google.common.collect.Lists;", "originalCommit": "4762a64c4e7e5fbabc6d9f9770fcab1016ddb7b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "679fc3fe08891f3925a8e53c06c512240285de0a", "chunk": "diff --git a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaRebalanceAssemblyOperatorTest.java b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaRebalanceAssemblyOperatorTest.java\nindex c6c01bc264..9b4c59d297 100644\n--- a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaRebalanceAssemblyOperatorTest.java\n+++ b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaRebalanceAssemblyOperatorTest.java\n\n@@ -4,7 +4,6 @@\n  */\n package io.strimzi.operator.cluster.operator.assembly;\n \n-import com.google.common.collect.Lists;\n import io.fabric8.kubernetes.client.KubernetesClient;\n import io.strimzi.api.kafka.Crds;\n import io.strimzi.api.kafka.KafkaList;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxMzg4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3869#discussion_r511813882", "bodyText": "Do we need so many empty lines?", "author": "scholzj", "createdAt": "2020-10-26T09:16:08Z", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.assembly;\n+\n+import io.strimzi.api.kafka.model.KafkaRebalance;\n+import io.strimzi.api.kafka.model.balancing.KafkaRebalanceState;\n+import io.strimzi.api.kafka.model.status.Condition;\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.TypeSafeDiagnosingMatcher;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.is;\n+\n+public class AbstractResourceStateMatchers {\n+\n+", "originalCommit": "4762a64c4e7e5fbabc6d9f9770fcab1016ddb7b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "679fc3fe08891f3925a8e53c06c512240285de0a", "chunk": "diff --git a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java\nindex a9f2f04505..4bb6548bac 100644\n--- a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java\n+++ b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java\n\n@@ -18,8 +18,6 @@ import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.is;\n \n public class AbstractResourceStateMatchers {\n-\n-\n     public static Matcher<KafkaRebalance> hasState() {\n         return new TypeSafeDiagnosingMatcher<>() {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgxMzk3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3869#discussion_r511813973", "bodyText": "Do we need so many empty lines?", "author": "scholzj", "createdAt": "2020-10-26T09:16:16Z", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.assembly;\n+\n+import io.strimzi.api.kafka.model.KafkaRebalance;\n+import io.strimzi.api.kafka.model.balancing.KafkaRebalanceState;\n+import io.strimzi.api.kafka.model.status.Condition;\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.TypeSafeDiagnosingMatcher;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.is;\n+\n+public class AbstractResourceStateMatchers {\n+\n+\n+    public static Matcher<KafkaRebalance> hasState() {\n+        return new TypeSafeDiagnosingMatcher<>() {\n+\n+            @Override\n+            protected boolean matchesSafely(KafkaRebalance kafkaRebalance, Description mismatchDescription) {\n+                mismatchDescription.appendText(\"was \").appendValue(kafkaRebalance);\n+\n+                if (kafkaRebalance == null) {\n+                    mismatchDescription.appendText(\"\\n KafkaRebalance is null\");\n+                    return false;\n+                }\n+\n+                if (kafkaRebalance.getStatus() == null) {\n+                    mismatchDescription.appendText(\"\\n KafkaRebalance status is null\");\n+                    return false;\n+                }\n+\n+                if (kafkaRebalance.getStatus().getConditions() == null) {\n+                    mismatchDescription.appendText(\"\\n KafkaRebalance status conditions is null\");\n+                    return false;\n+                }\n+\n+                return true;\n+            }\n+\n+            @Override\n+            public void describeTo(final Description description) {\n+                //\n+            }\n+        };\n+\n+    }\n+\n+", "originalCommit": "4762a64c4e7e5fbabc6d9f9770fcab1016ddb7b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "679fc3fe08891f3925a8e53c06c512240285de0a", "chunk": "diff --git a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java\nindex a9f2f04505..4bb6548bac 100644\n--- a/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java\n+++ b/cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/AbstractResourceStateMatchers.java\n\n@@ -18,8 +18,6 @@ import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.is;\n \n public class AbstractResourceStateMatchers {\n-\n-\n     public static Matcher<KafkaRebalance> hasState() {\n         return new TypeSafeDiagnosingMatcher<>() {\n \n"}}, {"oid": "679fc3fe08891f3925a8e53c06c512240285de0a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/679fc3fe08891f3925a8e53c06c512240285de0a", "message": "Use Java collections instead of guava\n\nSigned-off-by: klalafaryan <lalafaryan@gmail.com>", "committedDate": "2020-10-26T12:40:41Z", "type": "commit"}]}