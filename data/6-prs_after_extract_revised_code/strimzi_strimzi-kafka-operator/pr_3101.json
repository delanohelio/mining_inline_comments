{"pr_number": 3101, "pr_title": "[MO] - [system tests] -> cruise control api tests", "pr_createdAt": "2020-05-27T09:03:41Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101", "timeline": [{"oid": "9f899b4ebbe1f3bb45d1d7b57d60770d3997acef", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9f899b4ebbe1f3bb45d1d7b57d60770d3997acef", "message": "[MO] - [system test] -> cruise control api tests\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T09:01:19Z", "type": "commit"}, {"oid": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6e6adf5113339b10bcc48b8d8de5541dc0d17ab8", "message": "checkstyle\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-27T09:34:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwNDUzNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431004534", "bodyText": "So these endpoints are already defined in the cluster-operator module. I know we decided against putting the cc client stuff in operator-common but preventing duplicate code like this might be a good argument for moving it. Particularly if the endpoints need to be updated in future.", "author": "tomncooper", "createdAt": "2020-05-27T10:06:08Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -48,6 +49,8 @@ private CruiseControlUtils() { }\n         USER_TASKS\n     }", "originalCommit": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY5NzQyNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431697424", "bodyText": "Hmm, so if you moved that code in operator-common I would be glad and totally agree with that. @tomncooper", "author": "see-quick", "createdAt": "2020-05-28T09:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAwNDUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "c3a5ba14b88e2bad9c3736de78e7fa6365e2be4b", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java b/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\nindex 1485bda0a..ea0fa81f3 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\n\n@@ -51,7 +51,7 @@ public class CruiseControlUtils {\n \n     @SuppressWarnings(\"Regexp\")\n     @SuppressFBWarnings(\"DM_CONVERT_CASE\")\n-    public static String call(SupportedHttpMethods method, CruiseControlEndpoints endpoint) {\n+    public static String callApi(SupportedHttpMethods method, CruiseControlEndpoints endpoint) {\n         String ccPodName = PodUtils.getFirstPodNameContaining(\"cruise-control\");\n \n         return\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyNzQ1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431127457", "bodyText": "Maybe you can use better name for this method? Something like callApi ? But it's just a suggestion", "author": "Frawless", "createdAt": "2020-05-27T13:24:09Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -29,8 +32,37 @@\n     private static final String CRUISE_CONTROL_MODEL_TRAINING_SAMPLES_TOPIC = \"strimzi.cruisecontrol.modeltrainingsamples\"; // partitions 32 , rf - 2\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n+    private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n+    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";\n+\n     private CruiseControlUtils() { }\n \n+    public enum SupportedHttpMethods {\n+        GET,\n+        POST\n+    }\n+\n+    public enum CruiseControlEndpoints {\n+        STATE,\n+        REBALANCE,\n+        STOP_PROPOSAL_EXECUTION,\n+        USER_TASKS\n+    }\n+\n+    @SuppressWarnings(\"Regexp\")\n+    @SuppressFBWarnings(\"DM_CONVERT_CASE\")\n+    public static String call(SupportedHttpMethods method, CruiseControlEndpoints endpoint) {", "originalCommit": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3a5ba14b88e2bad9c3736de78e7fa6365e2be4b", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java b/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\nindex 1485bda0a..ea0fa81f3 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\n\n@@ -33,7 +33,7 @@ public class CruiseControlUtils {\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n     private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n-    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";\n+    private static final String CRUISE_CONTROL_BASE_ENDPOINT = \"/kafkacruisecontrol/\";\n \n     private CruiseControlUtils() { }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzODA1OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431238058", "bodyText": "it's not an endpoint on its own, should we call it CRUISE_CONTROL_BASE_ENDPOINT or maybe better CRUISE_CONTROL_ENDPOINT_BASE? @tomncooper wdyt? Or using ROOT instead of BASE ...", "author": "ppatierno", "createdAt": "2020-05-27T15:36:16Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java", "diffHunk": "@@ -29,8 +32,37 @@\n     private static final String CRUISE_CONTROL_MODEL_TRAINING_SAMPLES_TOPIC = \"strimzi.cruisecontrol.modeltrainingsamples\"; // partitions 32 , rf - 2\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n+    private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n+    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";", "originalCommit": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0NDU1MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431244551", "bodyText": "Yeah all the endpoints start with this and it is not endpoint on its own AFAIK", "author": "tomncooper", "createdAt": "2020-05-27T15:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzODA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "c3a5ba14b88e2bad9c3736de78e7fa6365e2be4b", "chunk": "diff --git a/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java b/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\nindex 1485bda0a..ea0fa81f3 100644\n--- a/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\n+++ b/systemtest/src/main/java/io/strimzi/systemtest/utils/specific/CruiseControlUtils.java\n\n@@ -33,7 +33,7 @@ public class CruiseControlUtils {\n     private static final String CRUISE_CONTROL_PARTITION_METRICS_SAMPLES_TOPIC = \"strimzi.cruisecontrol.partitionmetricsamples\"; // partitions 32 , rf - 2\n \n     private static final int CRUISE_CONTROL_DEFAULT_PORT = 9090;\n-    private static final String CRUISE_CONTROL_ENDPOINT = \"/kafkacruisecontrol/\";\n+    private static final String CRUISE_CONTROL_BASE_ENDPOINT = \"/kafkacruisecontrol/\";\n \n     private CruiseControlUtils() { }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIzODUxMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3101#discussion_r431238513", "bodyText": "CruiseControlApiST", "author": "ppatierno", "createdAt": "2020-05-27T15:36:56Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.systemtest.cruisecontrol;\n+\n+import io.strimzi.systemtest.BaseST;\n+import io.strimzi.systemtest.resources.KubernetesResource;\n+import io.strimzi.systemtest.resources.ResourceManager;\n+import io.strimzi.systemtest.resources.crd.KafkaResource;\n+import io.strimzi.systemtest.utils.specific.CruiseControlUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.MethodOrderer;\n+import org.junit.jupiter.api.Order;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestMethodOrder;\n+\n+import java.util.List;\n+\n+import static io.strimzi.systemtest.Constants.ACCEPTANCE;\n+import static io.strimzi.systemtest.Constants.CRUISE_CONTROL;\n+import static io.strimzi.systemtest.Constants.REGRESSION;\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+@Tag(REGRESSION)\n+@Tag(CRUISE_CONTROL)\n+@TestMethodOrder(MethodOrderer.OrderAnnotation.class)\n+public class CruiseControlApiST extends BaseST {\n+\n+    private static final Logger LOGGER = LogManager.getLogger(CruiseControlConfigurationST.class);", "originalCommit": "6e6adf5113339b10bcc48b8d8de5541dc0d17ab8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3a5ba14b88e2bad9c3736de78e7fa6365e2be4b", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java b/systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java\nindex b01c34681..9c1676648 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/cruisecontrol/CruiseControlApiST.java\n\n@@ -33,7 +33,7 @@ import static org.hamcrest.MatcherAssert.assertThat;\n @TestMethodOrder(MethodOrderer.OrderAnnotation.class)\n public class CruiseControlApiST extends BaseST {\n \n-    private static final Logger LOGGER = LogManager.getLogger(CruiseControlConfigurationST.class);\n+    private static final Logger LOGGER = LogManager.getLogger(CruiseControlApiST.class);\n     private static final String NAMESPACE = \"cruise-control-api-test\";\n \n     private static final String CRUISE_CONTROL_NAME = \"Cruise Control\";\n"}}, {"oid": "c3a5ba14b88e2bad9c3736de78e7fa6365e2be4b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c3a5ba14b88e2bad9c3736de78e7fa6365e2be4b", "message": "[MO] - [commends] -> resolved\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-05-28T09:12:54Z", "type": "commit"}, {"oid": "8d0967f9f5358f20315903f4a82908aac8cdb077", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8d0967f9f5358f20315903f4a82908aac8cdb077", "message": "[MO] - [update] -> rebalance\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-06-01T10:49:15Z", "type": "commit"}]}