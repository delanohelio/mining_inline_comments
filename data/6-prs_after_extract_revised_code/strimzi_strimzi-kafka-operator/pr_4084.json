{"pr_number": 4084, "pr_title": "Make fetching CMs async", "pr_createdAt": "2020-12-10T13:08:08Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084", "timeline": [{"oid": "ef74b5bed7b214c539948535024b6e029b36c5eb", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ef74b5bed7b214c539948535024b6e029b36c5eb", "message": "Make fetching CMs async\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-10T13:07:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU1NDQxNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r540554415", "bodyText": "I wonder if the code would look nicer and easier to read if you wrap lines 81-83 into a method and call the method here.", "author": "scholzj", "createdAt": "2020-12-10T22:48:15Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java", "diffHunk": "@@ -91,7 +89,8 @@ public KafkaBridgeAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pfa\n         kafkaBridgeServiceAccount(namespace, bridge)\n             .compose(i -> deploymentOperations.scaleDown(namespace, bridge.getName(), bridge.getReplicas()))\n             .compose(scale -> serviceOperations.reconcile(namespace, bridge.getServiceName(), bridge.generateService()))\n-            .compose(i -> configMapOperations.reconcile(namespace, bridge.getAncillaryConfigMapName(), logAndMetricsConfigMap))\n+            .compose(i -> loggingCmFut)", "originalCommit": "ef74b5bed7b214c539948535024b6e029b36c5eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78159229295122077031d96d0c0117705c9e010c", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java\nindex b368a4c636..7d49f8f970 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperator.java\n\n@@ -78,10 +79,6 @@ public class KafkaBridgeAssemblyOperator extends AbstractAssemblyOperator<Kubern\n             return Future.failedFuture(new ReconciliationException(kafkaBridgeStatus, e));\n         }\n \n-        Future<ConfigMap> loggingCmFut = bridge.getLogging() instanceof ExternalLogging ?\n-                configMapOperations.getAsync(namespace, ((ExternalLogging) bridge.getLogging()).getName()) :\n-                Future.succeededFuture(null);\n-\n         Promise<KafkaBridgeStatus> createOrUpdatePromise = Promise.promise();\n \n         boolean bridgeHasZeroReplicas = bridge.getReplicas() == 0;\n"}}, {"oid": "78159229295122077031d96d0c0117705c9e010c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/78159229295122077031d96d0c0117705c9e010c", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-11T07:30:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwMzYzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r540803630", "bodyText": "Using CompositeFuture in the return type is not very nice, because it means callers of this method need to know what the elements of the composite are, and CompositeFuture is not type safe. I think it would be much nicer to declare a class which holds the metrics cm and the logging cm, like this:\npublic class MetricsAndLoggingCm {\n    public ConfigMap metricsCm;\n    public ConfigMap loggingCm;\n    MetricsAndLoggingCm(ConfigMap metricsCm, ConfigMap loggingCm) {\n        // ...\n    }\n}\nand have this method return a Future<MetricsAndLoggingCm> (by doing map on the result of the join). That way it's all much more self-describing.", "author": "tombentley", "createdAt": "2020-12-11T09:21:15Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java", "diffHunk": "@@ -698,15 +699,22 @@ protected JsonObject asJson(KafkaConnectorSpec spec) {\n         return updateStatusPromise.future();\n     }\n \n-    protected Future<ConfigMap> connectMetricsConfigMap(String namespace, KafkaConnectCluster connect) {\n+    protected CompositeFuture connectMetricsAndLoggingConfigMap(String namespace, KafkaConnectCluster connect) {", "originalCommit": "78159229295122077031d96d0c0117705c9e010c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "927473d926b5ae43fb5c4f2ac751a17477d4cbcc", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java\nindex 2282a9a948..42ddb1556b 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/AbstractConnectOperator.java\n\n@@ -699,7 +700,7 @@ public abstract class AbstractConnectOperator<C extends KubernetesClient, T exte\n         return updateStatusPromise.future();\n     }\n \n-    protected CompositeFuture connectMetricsAndLoggingConfigMap(String namespace, KafkaConnectCluster connect) {\n+    protected Future<MetricsAndLoggingCm> connectMetricsAndLoggingConfigMap(String namespace, KafkaConnectCluster connect) {\n         final Future<ConfigMap> metricsCmFut;\n         if (connect.isMetricsConfigured()) {\n             if (connect.getMetricsConfigInCm() instanceof JmxPrometheusExporterMetrics) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgwNTU3Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r540805576", "bodyText": "Wrt previous comment, is means that here you don't need to know which indices correspond to which CM, the field or accessor method tell you. You could also, perhaps, change generateMetricsAndLogConfigMap to take an instance of the new class.", "author": "tombentley", "createdAt": "2020-12-11T09:24:19Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java", "diffHunk": "@@ -137,9 +132,9 @@ public KafkaConnectAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pf\n                 .compose(i -> networkPolicyOperator.reconcile(namespace, connect.getName(), connect.generateNetworkPolicy(pfa.isNamespaceAndPodSelectorNetworkPolicySupported(), isUseResources(kafkaConnect), operatorNamespace, operatorNamespaceLabels)))\n                 .compose(i -> deploymentOperations.scaleDown(namespace, connect.getName(), connect.getReplicas()))\n                 .compose(scale -> serviceOperations.reconcile(namespace, connect.getServiceName(), connect.generateService()))\n-                .compose(i -> connectMetricsConfigMap(namespace, connect))\n-                .compose(metricsCm -> {\n-                    ConfigMap logAndMetricsConfigMap = connect.generateMetricsAndLogConfigMap(loggingCm, metricsCm);\n+                .compose(i -> connectMetricsAndLoggingConfigMap(namespace, connect))\n+                .compose(metricsAndLoggingCm -> {\n+                    ConfigMap logAndMetricsConfigMap = connect.generateMetricsAndLogConfigMap(metricsAndLoggingCm.resultAt(1), metricsAndLoggingCm.resultAt(0));", "originalCommit": "78159229295122077031d96d0c0117705c9e010c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "927473d926b5ae43fb5c4f2ac751a17477d4cbcc", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java\nindex 4c10ecf585..69f730778e 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaConnectAssemblyOperator.java\n\n@@ -134,7 +134,7 @@ public class KafkaConnectAssemblyOperator extends AbstractConnectOperator<Kubern\n                 .compose(scale -> serviceOperations.reconcile(namespace, connect.getServiceName(), connect.generateService()))\n                 .compose(i -> connectMetricsAndLoggingConfigMap(namespace, connect))\n                 .compose(metricsAndLoggingCm -> {\n-                    ConfigMap logAndMetricsConfigMap = connect.generateMetricsAndLogConfigMap(metricsAndLoggingCm.resultAt(1), metricsAndLoggingCm.resultAt(0));\n+                    ConfigMap logAndMetricsConfigMap = connect.generateMetricsAndLogConfigMap(metricsAndLoggingCm.loggingCm, metricsAndLoggingCm.metricsCm);\n                     annotations.put(Annotations.ANNO_STRIMZI_LOGGING_DYNAMICALLY_UNCHANGEABLE_HASH,\n                             Util.stringHash(Util.getLoggingDynamicallyUnmodifiableEntries(logAndMetricsConfigMap.getData().get(AbstractModel.ANCILLARY_CM_KEY_LOG_CONFIG))));\n                     desiredLogging.set(logAndMetricsConfigMap.getData().get(AbstractModel.ANCILLARY_CM_KEY_LOG_CONFIG));\n"}}, {"oid": "927473d926b5ae43fb5c4f2ac751a17477d4cbcc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/927473d926b5ae43fb5c4f2ac751a17477d4cbcc", "message": "avoid using composite fut\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-11T14:28:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQyNzY3Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4084#discussion_r541427673", "bodyText": "This seems to be used exclusively by assembly operators. So why is it in resource operators package? Should it be moved to the assembly package?", "author": "scholzj", "createdAt": "2020-12-11T23:51:38Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/MetricsAndLoggingCm.java", "diffHunk": "@@ -0,0 +1,16 @@\n+/*\n+ * Copyright Strimzi authors.\n+ * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n+ */\n+package io.strimzi.operator.cluster.operator.resource;", "originalCommit": "927473d926b5ae43fb5c4f2ac751a17477d4cbcc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "815c9ec414a818d8437eab93d39f642d741c3125", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/MetricsAndLoggingCm.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/MetricsAndLoggingCm.java\nsimilarity index 89%\nrename from cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/MetricsAndLoggingCm.java\nrename to cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/MetricsAndLoggingCm.java\nindex e01f908338..cbb61c13bc 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/MetricsAndLoggingCm.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/MetricsAndLoggingCm.java\n\n@@ -2,7 +2,7 @@\n  * Copyright Strimzi authors.\n  * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).\n  */\n-package io.strimzi.operator.cluster.operator.resource;\n+package io.strimzi.operator.cluster.operator.assembly;\n \n import io.fabric8.kubernetes.api.model.ConfigMap;\n \n"}}, {"oid": "815c9ec414a818d8437eab93d39f642d741c3125", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/815c9ec414a818d8437eab93d39f642d741c3125", "message": "refactor\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-14T08:03:46Z", "type": "commit"}, {"oid": "3e8dba09a5da560f83ddfae3753915799f1c2cad", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3e8dba09a5da560f83ddfae3753915799f1c2cad", "message": "fix\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-15T10:06:39Z", "type": "forcePushed"}, {"oid": "547b20c4fe7581612316ceac8c4a6d36daec2654", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/547b20c4fe7581612316ceac8c4a6d36daec2654", "message": "fix\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-15T10:07:45Z", "type": "commit"}, {"oid": "547b20c4fe7581612316ceac8c4a6d36daec2654", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/547b20c4fe7581612316ceac8c4a6d36daec2654", "message": "fix\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-15T10:07:45Z", "type": "forcePushed"}]}