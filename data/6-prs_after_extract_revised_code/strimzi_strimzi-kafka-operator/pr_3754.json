{"pr_number": 3754, "pr_title": "Fix upgrade from 0.19 when Kafka version is not specified in the CRD", "pr_createdAt": "2020-10-07T00:03:14Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754", "timeline": [{"oid": "fe7def7f0f42b1c6db882e2152feb41feefba2e5", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fe7def7f0f42b1c6db882e2152feb41feefba2e5", "message": "Fix upgrade from 0.19 when Kafka version is not specified in the CRD - Closes #3685\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-10-06T22:41:19Z", "type": "commit"}, {"oid": "cb1d957a1dd5a9de8803af2172b47681f8b2027d", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cb1d957a1dd5a9de8803af2172b47681f8b2027d", "message": "Fix NPE on new clusters when the version is not known yet\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-10-06T23:22:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNjQxMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500806410", "bodyText": "Just typo ...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.debug(\"{}: Kafka versions are not known yet, upgrade iwll be skipped\", reconciliation);\n          \n          \n            \n                            log.debug(\"{}: Kafka versions are not known yet, upgrade will be skipped\", reconciliation);", "author": "im-konge", "createdAt": "2020-10-07T07:49:46Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -896,35 +898,65 @@ private KafkaVersionChange getKafkaVersionChange(StatefulSet kafkaSts) {\n                             return Future.succeededFuture(this);\n                         }\n \n-                        KafkaVersionChange versionChange = getKafkaVersionChange(oldSts);\n+                        this.versionChange = getKafkaVersionChange(oldSts);\n+                        return Future.succeededFuture(this);\n+                    });\n+        }\n \n-                        // Get the current version of the cluster\n-                        KafkaVersion currentVersion = versions.version(Annotations.annotations(oldSts).get(ANNO_STRIMZI_IO_KAFKA_VERSION));\n+        /**\n+         * Does the Kafka upgrade from one version to another. Regular upgrades with Kafka version specified in the\n+         * Kafka CR are done as early as possible in the cycle since the broker has already rolled with the new Strimzi\n+         * version before. This is indicated by the postponedUpgrade flag being set to false. Upgrades without Kafka\n+         * version specified in the Kafka CR upgrade the operator and Kafka in one go. These have to run only before the\n+         * regular Kafka rolling update when all resources are already updated. This is indicated by the\n+         * postponedUpgrade flag being set to true.\n+         *\n+         * @param postponedUpgrade     Indicates the phase from which is this method called.\n+         * @return\n+         */\n+        Future<ReconciliationState> kafkaVersionChange(boolean postponedUpgrade) {\n+            boolean shouldBePostponed = kafkaAssembly.getSpec().getKafka().getVersion() == null;\n \n-                        StatefulSet sts;\n-                        ConfigMap cm;\n+            if (versionChange == null)   {\n+                log.debug(\"{}: Kafka versions are not known yet, upgrade iwll be skipped\", reconciliation);", "originalCommit": "cb1d957a1dd5a9de8803af2172b47681f8b2027d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\nindex af7ee08b75..43e9595730 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java\n\n@@ -918,7 +918,7 @@ public class KafkaAssemblyOperator extends AbstractAssemblyOperator<KubernetesCl\n             boolean shouldBePostponed = kafkaAssembly.getSpec().getKafka().getVersion() == null;\n \n             if (versionChange == null)   {\n-                log.debug(\"{}: Kafka versions are not known yet, upgrade iwll be skipped\", reconciliation);\n+                log.debug(\"{}: Kafka versions are not known yet, upgrade will be skipped\", reconciliation);\n                 return Future.succeededFuture(this);\n             } else if (shouldBePostponed != postponedUpgrade) {\n                 log.debug(\"{}: Upgrade should not be done in this phase\", reconciliation);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwODc0MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500808741", "bodyText": "I think that we can remove this, as we are not checking this anywhere.", "author": "im-konge", "createdAt": "2020-10-07T07:53:28Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/upgrade/StrimziUpgradeST.java", "diffHunk": "@@ -180,33 +179,34 @@ void testChainUpgrade() throws Exception {\n         }\n     }\n \n-    // TODO: remove disabled tag after fix of issue #3685\n     @Test\n-    @Disabled(\"Disabled because of bug https://github.com/strimzi/strimzi-kafka-operator/issues/3685\")\n     void testUpgradeKafkaWithoutVersion() throws IOException {\n-        File dir = FileUtils.downloadAndUnzip(latestReleasedOperator);\n-        File kafkaPersistent = new File(dir, \"strimzi-\" + latestReleasedVersion + \"/examples/kafka/kafka-persistent.yaml\");\n-        File kafkaVersions = FileUtils.downloadYaml(\"https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/\" + latestReleasedVersion + \"/kafka-versions.yaml\");\n+        File dir = FileUtils.downloadAndUnzip(strimziReleaseWithOlderKafka);\n+        File previousKafkaPersistent = new File(dir, \"strimzi-\" + strimziReleaseWithOlderKafkaVersion + \"/examples/kafka/kafka-persistent.yaml\");\n+        File previousKafkaVersionsYaml = FileUtils.downloadYaml(\"https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/\" + strimziReleaseWithOlderKafkaVersion + \"/kafka-versions.yaml\");\n+        File latestKafkaVersionsYaml = new File(TestUtils.USER_PATH + \"//../kafka-versions.yaml\");\n \n-        coDir = new File(dir, \"strimzi-\" + latestReleasedVersion + \"/install/cluster-operator/\");\n+        coDir = new File(dir, \"strimzi-\" + strimziReleaseWithOlderKafkaVersion + \"/install/cluster-operator/\");\n \n-        String latestKafkaVersion = getValueForLastKafkaVersionInFile(kafkaVersions, \"version\");\n+        //String previousKafkaVersion = getValueForLastKafkaVersionInFile(previousKafkaVersionsYaml, \"version\");", "originalCommit": "cb1d957a1dd5a9de8803af2172b47681f8b2027d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/upgrade/StrimziUpgradeST.java b/systemtest/src/test/java/io/strimzi/systemtest/upgrade/StrimziUpgradeST.java\nindex 7e516efc8c..b1b55cfb2f 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/upgrade/StrimziUpgradeST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/upgrade/StrimziUpgradeST.java\n\n@@ -188,7 +188,6 @@ public class StrimziUpgradeST extends AbstractST {\n \n         coDir = new File(dir, \"strimzi-\" + strimziReleaseWithOlderKafkaVersion + \"/install/cluster-operator/\");\n \n-        //String previousKafkaVersion = getValueForLastKafkaVersionInFile(previousKafkaVersionsYaml, \"version\");\n         String latestKafkaVersion = getValueForLastKafkaVersionInFile(latestKafkaVersionsYaml, \"version\");\n \n         // Modify + apply installation files\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODIwMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500978201", "bodyText": "Do we want to use a boolean argument here, I wonder if it would be better to have two separate methods:\nkafkaVersionChange\n\nand\nkafkaVersionChangePostponed", "author": "samuel-hawker", "createdAt": "2020-10-07T12:40:05Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/assembly/KafkaAssemblyOperator.java", "diffHunk": "@@ -280,7 +280,8 @@ public KafkaAssemblyOperator(Vertx vertx, PlatformFeaturesAvailability pfa,\n                 .compose(state -> state.kafkaManualPodCleaning())\n                 .compose(state -> state.kafkaNetPolicy())\n                 .compose(state -> state.kafkaManualRollingUpdate())\n-                .compose(state -> state.kafkaVersionChange())\n+                .compose(state -> state.kafkaVersionChangeCheck())\n+                .compose(state -> state.kafkaVersionChange(false))", "originalCommit": "cb1d957a1dd5a9de8803af2172b47681f8b2027d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3OTE1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500979157", "bodyText": "The methods are otherwise almost the same. So is it really worth to have separate methods duplicating the code? Or would you just want to have methods which simply delegate to the shared method again?", "author": "scholzj", "createdAt": "2020-10-07T12:41:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODIwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4ODc0OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3754#discussion_r500988749", "bodyText": "I was thinking through this as I was reading through the method, it would be nice if they could be split, with the duplicated logic being moved out to separate methods, I started refactoring it locally and realized to rip out the boolean would be a non-trivial effort for not enough value. I thought it was worth bringing up, as boolean arguments normally can be extracted, but in this case it wouldn't be worth it.", "author": "samuel-hawker", "createdAt": "2020-10-07T12:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3ODIwMQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1f4fb9a69d09c00c027e5b30d9ecd497abac6bf7", "message": "Review comments\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-10-07T17:48:54Z", "type": "commit"}]}