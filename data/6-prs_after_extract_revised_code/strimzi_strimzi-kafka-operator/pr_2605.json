{"pr_number": 2605, "pr_title": "Add JavaSystemProperties for EO", "pr_createdAt": "2020-02-26T15:29:57Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605", "timeline": [{"oid": "395e05482dec10f16e6533de16cb9935d74dabe7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/395e05482dec10f16e6533de16cb9935d74dabe7", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-02-27T14:51:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Njc5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r385196791", "bodyText": "So if i remember correctly, this tries to calculate the defult -Xmx etc.? I do not hink we want that, I think we want to just pass the options over to the containers / JVM.", "author": "scholzj", "createdAt": "2020-02-27T15:51:35Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java", "diffHunk": "@@ -259,6 +263,11 @@ public static EntityTopicOperator fromCrd(Kafka kafkaAssembly) {\n         varList.add(buildEnvVar(ENV_VAR_TOPIC_METADATA_MAX_ATTEMPTS, String.valueOf(topicMetadataMaxAttempts)));\n         varList.add(buildEnvVar(ENV_VAR_TLS_ENABLED, Boolean.toString(true)));\n         varList.add(buildEnvVar(ENV_VAR_STRIMZI_GC_LOG_ENABLED, String.valueOf(gcLoggingEnabled)));\n+        if (javaSystemProperties != null) {\n+            varList.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties)));\n+        }\n+        heapOptions(varList, 0.5, 5L * 1024L * 1024L * 1024L);", "originalCommit": "395e05482dec10f16e6533de16cb9935d74dabe7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c416296e425cae83ae376451aa15ebb5799fe96", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java\nindex 2d96600fa4..2c933dbe1e 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityTopicOperator.java\n\n@@ -266,8 +265,6 @@ public class EntityTopicOperator extends AbstractModel {\n         if (javaSystemProperties != null) {\n             varList.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties)));\n         }\n-        heapOptions(varList, 0.5, 5L * 1024L * 1024L * 1024L);\n-        jvmPerformanceOptions(varList);\n \n         addContainerEnvsToExistingEnvs(varList, templateContainerEnvVars);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5Njg2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r385196864", "bodyText": "same as above", "author": "scholzj", "createdAt": "2020-02-27T15:51:41Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java", "diffHunk": "@@ -257,6 +261,11 @@ public static EntityUserOperator fromCrd(Kafka kafkaAssembly) {\n         varList.add(buildEnvVar(ENV_VAR_CLIENTS_CA_VALIDITY, Integer.toString(clientsCaValidityDays)));\n         varList.add(buildEnvVar(ENV_VAR_CLIENTS_CA_RENEWAL, Integer.toString(clientsCaRenewalDays)));\n         varList.add(buildEnvVar(ENV_VAR_STRIMZI_GC_LOG_ENABLED, String.valueOf(gcLoggingEnabled)));\n+        if (javaSystemProperties != null) {\n+            varList.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties)));\n+        }\n+        heapOptions(varList, 0.5, 5L * 1024L * 1024L * 1024L);", "originalCommit": "395e05482dec10f16e6533de16cb9935d74dabe7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c416296e425cae83ae376451aa15ebb5799fe96", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java\nindex eecb41c7b7..c83fc5e5ba 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityUserOperator.java\n\n@@ -264,8 +263,6 @@ public class EntityUserOperator extends AbstractModel {\n         if (javaSystemProperties != null) {\n             varList.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties)));\n         }\n-        heapOptions(varList, 0.5, 5L * 1024L * 1024L * 1024L);\n-        jvmPerformanceOptions(varList);\n \n         addContainerEnvsToExistingEnvs(varList, templateContainerEnvVars);\n \n"}}, {"oid": "4c416296e425cae83ae376451aa15ebb5799fe96", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4c416296e425cae83ae376451aa15ebb5799fe96", "message": "Java System Properties for EO\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-02T12:29:23Z", "type": "commit"}, {"oid": "2fe7269fe66e7db4938fa6458ba95781c1d0eb5f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/2fe7269fe66e7db4938fa6458ba95781c1d0eb5f", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-02T12:29:23Z", "type": "commit"}, {"oid": "fb5a81b1e63b6909f12f8769efcffb97848e59c7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fb5a81b1e63b6909f12f8769efcffb97848e59c7", "message": "comment\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-02T12:29:23Z", "type": "commit"}, {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e48c2ead91b5a98e7e3972ab3435880f0c0bb459", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-02T12:29:23Z", "type": "commit"}, {"oid": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/e48c2ead91b5a98e7e3972ab3435880f0c0bb459", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-02T12:29:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2ODM5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386368391", "bodyText": "If it is just for EO, should it be maybe in some EO class and not in the Abstratc Model which is shared for everything?", "author": "scholzj", "createdAt": "2020-03-02T12:39:20Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -1190,4 +1194,47 @@ protected void addContainerEnvsToExistingEnvs(List<EnvVar> existingEnvs, List<Co\n             }\n         }\n     }\n+\n+    protected void javaOptionsForEO(List<EnvVar> envVars) {", "originalCommit": "e48c2ead91b5a98e7e3972ab3435880f0c0bb459", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4176148395d9ab121d3ee5920c5f4fbe66145031", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java\nindex 1704ab13ce..8d40304458 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java\n\n@@ -1194,47 +1194,4 @@ public abstract class AbstractModel {\n             }\n         }\n     }\n-\n-    protected void javaOptionsForEO(List<EnvVar> envVars) {\n-        StringBuilder strimziJavaOpts = new StringBuilder();\n-        String xms = getJvmOptions() != null ? getJvmOptions().getXms() : null;\n-        if (xms != null) {\n-            strimziJavaOpts.append(\"-Xms\").append(xms);\n-        }\n-\n-        String xmx = getJvmOptions() != null ? getJvmOptions().getXmx() : null;\n-        if (xmx != null) {\n-            strimziJavaOpts.append(\" -Xmx\").append(xmx);\n-        }\n-\n-        Boolean server = jvmOptions != null ? jvmOptions.isServer() : null;\n-\n-        if (server != null && server) {\n-            strimziJavaOpts.append(' ').append(\" -server\");\n-        }\n-\n-        Map<String, String> xx = jvmOptions != null ? jvmOptions.getXx() : null;\n-        if (xx != null) {\n-            xx.forEach((k, v) -> {\n-                strimziJavaOpts.append(' ').append(\"-XX:\");\n-\n-                if (\"true\".equalsIgnoreCase(v))   {\n-                    strimziJavaOpts.append(\"+\").append(k);\n-                } else if (\"false\".equalsIgnoreCase(v)) {\n-                    strimziJavaOpts.append(\"-\").append(k);\n-                } else  {\n-                    strimziJavaOpts.append(k).append(\"=\").append(v);\n-                }\n-            });\n-        }\n-\n-        if (javaSystemProperties != null) {\n-            strimziJavaOpts.append(' ').append(ModelUtils.getJavaSystemPropertiesToString(javaSystemProperties));\n-        }\n-\n-        String trim = strimziJavaOpts.toString().trim();\n-        if (!trim.isEmpty()) {\n-            envVars.add(buildEnvVar(ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES, trim));\n-        }\n-    }\n }\n"}}, {"oid": "4176148395d9ab121d3ee5920c5f4fbe66145031", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4176148395d9ab121d3ee5920c5f4fbe66145031", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-02T12:56:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NTUzNQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386865535", "bodyText": "The true/false mapping to +/- seems unintuitive to me. Why not have JvmOptions.Xx be a list of XX options. You'd prefix each element  with -XX: and just pass it through.\nI guess I'd also put the code in ModelUtils, alongside ModelUtils.getJavaSystemPropertiesToString. In fact having a jvmOptionsToString method in ModelUtils which computes trim would be better, I think. Then get rid of this method and let the current caller of this method invoke jvmOptionsToString and decide how it gets passed to the container (in particular which env var gets set).", "author": "tombentley", "createdAt": "2020-03-03T08:37:33Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/EntityOperator.java", "diffHunk": "@@ -336,4 +338,47 @@ public ServiceAccount generateServiceAccount() {\n         }\n         return super.generateServiceAccount();\n     }\n+\n+    protected static void javaOptions(List<EnvVar> envVars, JvmOptions jvmOptions, List<SystemProperty> javaSystemProperties) {\n+        StringBuilder strimziJavaOpts = new StringBuilder();\n+        String xms = jvmOptions != null ? jvmOptions.getXms() : null;\n+        if (xms != null) {\n+            strimziJavaOpts.append(\"-Xms\").append(xms);\n+        }\n+\n+        String xmx = jvmOptions != null ? jvmOptions.getXmx() : null;\n+        if (xmx != null) {\n+            strimziJavaOpts.append(\" -Xmx\").append(xmx);\n+        }\n+\n+        Boolean server = jvmOptions != null ? jvmOptions.isServer() : null;\n+\n+        if (server != null && server) {\n+            strimziJavaOpts.append(' ').append(\" -server\");\n+        }\n+\n+        Map<String, String> xx = jvmOptions != null ? jvmOptions.getXx() : null;\n+        if (xx != null) {\n+            xx.forEach((k, v) -> {\n+                strimziJavaOpts.append(' ').append(\"-XX:\");\n+\n+                if (\"true\".equalsIgnoreCase(v))   {\n+                    strimziJavaOpts.append(\"+\").append(k);\n+                } else if (\"false\".equalsIgnoreCase(v)) {\n+                    strimziJavaOpts.append(\"-\").append(k);\n+                } else  {\n+                    strimziJavaOpts.append(k).append(\"=\").append(v);\n+                }", "originalCommit": "4176148395d9ab121d3ee5920c5f4fbe66145031", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MTQ3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386871477", "bodyText": "The true/false mapping to +/- seems unintuitive to me. Why not have JvmOptions.Xx be a list of XX options. You'd prefix each element with -XX: and just pass it through.\n\nThis already exists for all the Kafka based pods. So we cannot easily change it there. And the whole idea of the PR was to have the same configuration in all places not have different stuff in different pods. So I'm not sure this is worth it.", "author": "scholzj", "createdAt": "2020-03-03T08:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NTUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3OTcwMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2605#discussion_r386879701", "bodyText": "Well if that's the API we've already adopted, I guess we're stuck with it \u2639\ufe0f.", "author": "tombentley", "createdAt": "2020-03-03T09:04:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NTUzNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "923c80ca4ae258ffc88beff510a91b3a1d91f03f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/923c80ca4ae258ffc88beff510a91b3a1d91f03f", "message": "Apply suggestions from code review\n\nCo-Authored-By: Tom Bentley <tombentley@users.noreply.github.com>\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-03T09:04:01Z", "type": "commit"}, {"oid": "923c80ca4ae258ffc88beff510a91b3a1d91f03f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/923c80ca4ae258ffc88beff510a91b3a1d91f03f", "message": "Apply suggestions from code review\n\nCo-Authored-By: Tom Bentley <tombentley@users.noreply.github.com>\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-03-03T09:04:01Z", "type": "forcePushed"}]}