{"pr_number": 3216, "pr_title": "Add rebalance performance tuning options and documentation", "pr_createdAt": "2020-06-19T13:46:37Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MTc0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r442851748", "bodyText": "what's kind of \"leadership\" this is referring? \"leader\" partition movements? can you make it clear?", "author": "ppatierno", "createdAt": "2020-06-19T13:49:32Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing leadership movements\")", "originalCommit": "a8a805e2158eb3dfb387d6ef7d24b9df277cd887", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "375ceb7abdedacf091760f6f1a6e988fec579678", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java b/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\nindex aef0f382eb..278159bfe7 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\n\n@@ -64,7 +64,7 @@ public class KafkaRebalanceSpec implements UnknownPropertyPreserving, Serializab\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n-    @Description(\"The upper bound of ongoing replica movements going into/out of each broker\")\n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n     @Minimum(0)\n     public int getConcurrentPartitionMovementsPerBroker() {\n         return concurrentPartitionMovementsPerBroker;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MzE1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r442853150", "bodyText": "can you have just the version with long and using cast to int of the parameter when it's safe to do it?", "author": "ppatierno", "createdAt": "2020-06-19T13:52:06Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java", "diffHunk": "@@ -61,12 +61,29 @@ public PathBuilder addParameter(CruiseControlParameters param, List<String> valu\n         return this;\n     }\n \n+    private void addIfNotZero(PathBuilder builder, CruiseControlParameters param, int value) {\n+        if (value > 0) {\n+            builder.addParameter(param, String.valueOf(value));\n+        }\n+    }\n+\n+    private void addIfNotZero(PathBuilder builder, CruiseControlParameters param, long value) {\n+        if (value > 0) {\n+            builder.addParameter(param, String.valueOf(value));\n+        }\n+    }", "originalCommit": "a8a805e2158eb3dfb387d6ef7d24b9df277cd887", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "375ceb7abdedacf091760f6f1a6e988fec579678", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java\nindex fef8602cb2..1f5c0bbd4a 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/PathBuilder.java\n\n@@ -61,12 +61,6 @@ public class PathBuilder {\n         return this;\n     }\n \n-    private void addIfNotZero(PathBuilder builder, CruiseControlParameters param, int value) {\n-        if (value > 0) {\n-            builder.addParameter(param, String.valueOf(value));\n-        }\n-    }\n-\n     private void addIfNotZero(PathBuilder builder, CruiseControlParameters param, long value) {\n         if (value > 0) {\n             builder.addParameter(param, String.valueOf(value));\n"}}, {"oid": "d97e104db6382ac587343d2d9b9b1cb298b9cae8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d97e104db6382ac587343d2d9b9b1cb298b9cae8", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-19T15:07:03Z", "type": "forcePushed"}, {"oid": "375ceb7abdedacf091760f6f1a6e988fec579678", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/375ceb7abdedacf091760f6f1a6e988fec579678", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-19T15:18:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443357942", "bodyText": "do all these parameters have defaults? Are we forcing the user to set them even at 0? How was it working until today without this configuration?", "author": "ppatierno", "createdAt": "2020-06-22T07:12:39Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }", "originalCommit": "375ceb7abdedacf091760f6f1a6e988fec579678", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNDM2NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443404365", "bodyText": "They all have defaults in CC, which are in the documentation. If the keys are not present or set to zero they are ignored (which I should add to the documentation).", "author": "tomncooper", "createdAt": "2020-06-22T08:42:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNjU0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443406548", "bodyText": "but setting Minimum(0) are you sure that the API server validates as ok a KafkaRebalance without these settings? I don't remember tbh.", "author": "ppatierno", "createdAt": "2020-06-22T08:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3ODE3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443578177", "bodyText": "I have tested it with and without configuration and it works fine.", "author": "tomncooper", "createdAt": "2020-06-22T13:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM1Nzk0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9e6b05cc1346d6e21c494e0a5872a69b1c909796", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java b/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\nindex 278159bfe7..112672c3fc 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\n\n@@ -64,7 +64,7 @@ public class KafkaRebalanceSpec implements UnknownPropertyPreserving, Serializab\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n-    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker\")\n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker. Default is 10.\")\n     @Minimum(0)\n     public int getConcurrentPartitionMovementsPerBroker() {\n         return concurrentPartitionMovementsPerBroker;\n"}}, {"oid": "9e6b05cc1346d6e21c494e0a5872a69b1c909796", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9e6b05cc1346d6e21c494e0a5872a69b1c909796", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-22T15:15:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg2NjE3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443866174", "bodyText": "weather -> whether", "author": "kyguy", "createdAt": "2020-06-22T22:46:54Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java", "diffHunk": "@@ -8,11 +8,24 @@\n \n public class RebalanceOptions {\n \n+    /** Sets weather this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */", "originalCommit": "9e6b05cc1346d6e21c494e0a5872a69b1c909796", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "703ed73eb33cc4960abd263809656a657ea90592", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java\nindex 0fed4a9878..4538dc9146 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java\n\n@@ -8,7 +8,7 @@ import java.util.List;\n \n public class RebalanceOptions {\n \n-    /** Sets weather this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */\n+    /** Sets whether this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */\n     private boolean isDryRun;\n     /** List of optimisation goal class names, must be a sub-set of the configured master goals and include all hard.goals unless skipHardGoals=true */\n     private List<String> goals;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg2NzA2MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r443867061", "bodyText": "weather -> whether", "author": "kyguy", "createdAt": "2020-06-22T22:49:51Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java", "diffHunk": "@@ -8,11 +8,24 @@\n \n public class RebalanceOptions {\n \n+    /** Sets weather this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */\n     private boolean isDryRun;\n+    /** List of optimisation goal class names, must be a sub-set of the configured master goals and include all hard.goals unless skipHardGoals=true */\n     private List<String> goals;\n+    /** Include additional information in the response from the Cruise Control Server */\n     private boolean verbose;\n+    /** Allows specifying a custom goals list that does not incude all configured hard.goals */\n     private boolean skipHardGoalCheck;\n+    /** Sets weather the response should be JSON formatted or formated for readibility on the command line */", "originalCommit": "9e6b05cc1346d6e21c494e0a5872a69b1c909796", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "703ed73eb33cc4960abd263809656a657ea90592", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java\nindex 0fed4a9878..4538dc9146 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/cruisecontrol/RebalanceOptions.java\n\n@@ -8,7 +8,7 @@ import java.util.List;\n \n public class RebalanceOptions {\n \n-    /** Sets weather this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */\n+    /** Sets whether this rebalance only provides an optimisation proposal (true) or starts a rebalance (false) */\n     private boolean isDryRun;\n     /** List of optimisation goal class names, must be a sub-set of the configured master goals and include all hard.goals unless skipHardGoals=true */\n     private List<String> goals;\n"}}, {"oid": "703ed73eb33cc4960abd263809656a657ea90592", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/703ed73eb33cc4960abd263809656a657ea90592", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-24T10:24:58Z", "type": "forcePushed"}, {"oid": "14225ee8aa4da70b88ecbd5c1a6e1cbcdb5e6859", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/14225ee8aa4da70b88ecbd5c1a6e1cbcdb5e6859", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-24T12:15:27Z", "type": "forcePushed"}, {"oid": "ea1ffad27fb6cc541b92af2d1323cf3b17d5cc48", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ea1ffad27fb6cc541b92af2d1323cf3b17d5cc48", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-29T15:54:29Z", "type": "forcePushed"}, {"oid": "fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-29T16:57:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3MjY2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3216#discussion_r447472664", "bodyText": "Do we need two blank lines?", "author": "tombentley", "createdAt": "2020-06-30T07:35:31Z", "path": "api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java", "diffHunk": "@@ -55,6 +64,47 @@ public void setSkipHardGoalCheck(boolean skipHardGoalCheck) {\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker. Default is 10.\")\n+    @Minimum(0)\n+    public int getConcurrentPartitionMovementsPerBroker() {\n+        return concurrentPartitionMovementsPerBroker;\n+    }\n+\n+    public void setConcurrentPartitionMovementsPerBroker(int movements) {\n+        this.concurrentPartitionMovementsPerBroker = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.\")\n+    @Minimum(0)\n+    public int getConcurrentIntraBrokerPartitionMovements() {\n+        return concurrentIntraBrokerPartitionMovements;\n+    }\n+\n+    public void setConcurrentIntraBrokerPartitionMovements(int movements) {\n+        this.concurrentIntraBrokerPartitionMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound of ongoing partition leadership movements. Default is 1000.\")\n+    @Minimum(0)\n+    public int getConcurrentLeaderMovements() {\n+        return concurrentLeaderMovements;\n+    }\n+\n+    public void setConcurrentLeaderMovements(int movements) {\n+        this.concurrentLeaderMovements = movements;\n+    }\n+\n+    @Description(\"The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.\")\n+    @Minimum(0)\n+    public long getReplicationThrottle() {\n+        return replicationThrottle;\n+    }\n+\n+    public void setReplicationThrottle(long bandwidth) {\n+        this.replicationThrottle = bandwidth;\n+    }\n+\n+", "originalCommit": "fd00a2a97e226a6c8bdf9752be8a61a73eaf4a59", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b06678e59d22bd9bd4f7c562b9119881d1b19bc", "chunk": "diff --git a/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java b/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\nindex 112672c3fc..92df906302 100644\n--- a/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\n+++ b/api/src/main/java/io/strimzi/api/kafka/model/KafkaRebalanceSpec.java\n\n@@ -64,7 +64,7 @@ public class KafkaRebalanceSpec implements UnknownPropertyPreserving, Serializab\n         this.skipHardGoalCheck = skipHardGoalCheck;\n     }\n \n-    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker. Default is 10.\")\n+    @Description(\"The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.\")\n     @Minimum(0)\n     public int getConcurrentPartitionMovementsPerBroker() {\n         return concurrentPartitionMovementsPerBroker;\n"}}, {"oid": "5b06678e59d22bd9bd4f7c562b9119881d1b19bc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5b06678e59d22bd9bd4f7c562b9119881d1b19bc", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-30T09:55:56Z", "type": "commit"}, {"oid": "5b06678e59d22bd9bd4f7c562b9119881d1b19bc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/5b06678e59d22bd9bd4f7c562b9119881d1b19bc", "message": "Added rebalance performance tuning options and documentation\n\nSigned-off-by: Thomas Cooper <tcooper@redhat.com>", "committedDate": "2020-06-30T09:55:56Z", "type": "forcePushed"}]}