{"pr_number": 3672, "pr_title": "More fixes for dynamic logging diff", "pr_createdAt": "2020-09-18T07:45:26Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672", "timeline": [{"oid": "75fa1595ab42e6849054d32a8559d9693ac87a3a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/75fa1595ab42e6849054d32a8559d9693ac87a3a", "message": "Travis failures - added var definitions, value interpolation support to interpreting log4j.properties\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-18T07:02:49Z", "type": "commit"}, {"oid": "c35f11b09364fc7aa4c14ac07030257f61b335e7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c35f11b09364fc7aa4c14ac07030257f61b335e7", "message": "Additional fixes for dynamic logging configuration\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-18T07:02:49Z", "type": "commit"}, {"oid": "55324fce3181012c2a3b5d21457df7477666eadd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/55324fce3181012c2a3b5d21457df7477666eadd", "message": "Try fix KafkaRollerTest\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-18T11:39:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTI5OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r491811298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                int p = line.indexOf(\"=\", 13);\n          \n          \n            \n                                int p = line.indexOf(\"=\", \"log4j.logger.\".length());", "author": "sknot-rh", "createdAt": "2020-09-21T06:15:48Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java", "diffHunk": "@@ -96,6 +95,80 @@ public int getDiffSize() {\n         return updatedCE;\n     }\n \n+    private static Map<String, String> readLog4jConfig(String config) {\n+\n+        Map<String, String> parsed = new LinkedHashMap<>();\n+        Map<String, String> env = new HashMap<>();\n+        BufferedReader reader = new BufferedReader(new StringReader(config));\n+        String line;\n+        try {\n+            while ((line = reader.readLine()) != null) {\n+                // skip comments\n+                if (line.startsWith(\"#\")) continue;\n+\n+                // ignore empty lines\n+                line = line.trim();\n+                if (line.length() == 0) continue;\n+\n+                // everything that does not start with 'log4j.' is a variable definition\n+                if (!line.startsWith(\"log4j.\")) {\n+                    int p = line.indexOf(\"=\");\n+                    if (p >= 0) {\n+                        env.put(line.substring(0, p).trim(), line.substring(p + 1).trim());\n+                    } else {\n+                        env.put(line.trim(), \"\");\n+                    }\n+                    log.debug(\"Treating the line as ENV var declaration: {}\", line);\n+                    continue;\n+                }\n+\n+                // we ignore appenders (log4j.appender.*)\n+                // and only handle loggers (log4j.logger.*)\n+                if (line.startsWith(\"log4j.logger.\")) {\n+                    int p = line.indexOf(\"=\", 13);", "originalCommit": "55324fce3181012c2a3b5d21457df7477666eadd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxNDEyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r491814127", "bodyText": "Multiple occurrences.", "author": "sknot-rh", "createdAt": "2020-09-21T06:24:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTI5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwOTY2OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r493909669", "bodyText": "Yeah, makes it easier to read.", "author": "mstruk", "createdAt": "2020-09-23T21:37:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTI5OA=="}], "type": "inlineReview", "revised_code": {"commit": "c324c5eb2a6da7d285e6de5d81073224ea4a23a2", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\nindex 958b451bf7..03d8b4b6f2 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\n\n@@ -133,11 +134,11 @@ public class KafkaBrokerLoggingConfigurationDiff extends AbstractResourceDiff {\n                     String name = line.substring(13, p).trim();\n                     String value = line.substring(p + 1).trim();\n \n-                    value = expandVars(value, env);\n+                    value = Util.expandVar(value, env);\n                     parsed.put(name, value);\n \n                 } else if (line.startsWith(\"log4j.rootLogger=\")) {\n-                    parsed.put(\"root\", expandVars(line.substring(17).trim(), env));\n+                    parsed.put(\"root\", Util.expandVar(line.substring(17).trim(), env));\n \n                 } else {\n                     log.debug(\"Skipping log4j line: {}\", line);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTg4MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r491811880", "bodyText": "What about spaces before =?", "author": "sknot-rh", "createdAt": "2020-09-21T06:17:43Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java", "diffHunk": "@@ -96,6 +95,80 @@ public int getDiffSize() {\n         return updatedCE;\n     }\n \n+    private static Map<String, String> readLog4jConfig(String config) {\n+\n+        Map<String, String> parsed = new LinkedHashMap<>();\n+        Map<String, String> env = new HashMap<>();\n+        BufferedReader reader = new BufferedReader(new StringReader(config));\n+        String line;\n+        try {\n+            while ((line = reader.readLine()) != null) {\n+                // skip comments\n+                if (line.startsWith(\"#\")) continue;\n+\n+                // ignore empty lines\n+                line = line.trim();\n+                if (line.length() == 0) continue;\n+\n+                // everything that does not start with 'log4j.' is a variable definition\n+                if (!line.startsWith(\"log4j.\")) {\n+                    int p = line.indexOf(\"=\");", "originalCommit": "55324fce3181012c2a3b5d21457df7477666eadd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkxMDMyMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r493910321", "bodyText": "trim() takes care of those, or do you have something else in mind?", "author": "mstruk", "createdAt": "2020-09-23T21:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MTU5Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r494061593", "bodyText": "Ah, yes, you are right", "author": "sknot-rh", "createdAt": "2020-09-24T06:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2Mjk3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r494062974", "bodyText": "Can we have a better variable name than p?", "author": "tombentley", "createdAt": "2020-09-24T06:17:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxMzAyNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r499413026", "bodyText": "Can we have a better variable name than p?", "author": "tombentley", "createdAt": "2020-10-05T08:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTg4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMzI5Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r499423296", "bodyText": "Hmm, looks like I missed this one.", "author": "mstruk", "createdAt": "2020-10-05T08:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMTg4MA=="}], "type": "inlineReview", "revised_code": {"commit": "c324c5eb2a6da7d285e6de5d81073224ea4a23a2", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\nindex 958b451bf7..03d8b4b6f2 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\n\n@@ -133,11 +134,11 @@ public class KafkaBrokerLoggingConfigurationDiff extends AbstractResourceDiff {\n                     String name = line.substring(13, p).trim();\n                     String value = line.substring(p + 1).trim();\n \n-                    value = expandVars(value, env);\n+                    value = Util.expandVar(value, env);\n                     parsed.put(name, value);\n \n                 } else if (line.startsWith(\"log4j.rootLogger=\")) {\n-                    parsed.put(\"root\", expandVars(line.substring(17).trim(), env));\n+                    parsed.put(\"root\", Util.expandVar(line.substring(17).trim(), env));\n \n                 } else {\n                     log.debug(\"Skipping log4j line: {}\", line);\n"}}, {"oid": "f4ce75cc0bc889b714e98d26008c7284ffd26f40", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f4ce75cc0bc889b714e98d26008c7284ffd26f40", "message": "patch appender\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-09-22T11:29:00Z", "type": "commit"}, {"oid": "c324c5eb2a6da7d285e6de5d81073224ea4a23a2", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c324c5eb2a6da7d285e6de5d81073224ea4a23a2", "message": "var expansion\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-09-22T12:26:17Z", "type": "commit"}, {"oid": "afefd88c6c74dcc07ff5984d3d0327fa08f2d479", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/afefd88c6c74dcc07ff5984d3d0327fa08f2d479", "message": "Merge pull request #2 from stanlyDoge/fix-logging-diff\n\nAutomatically add the appender to root logger, if only the level is set in the inline / external logging config.", "committedDate": "2020-09-23T19:26:44Z", "type": "commit"}, {"oid": "bad05569d19c30c1c9b00c83d79f81f1bca2f5cc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/bad05569d19c30c1c9b00c83d79f81f1bca2f5cc", "message": "Fix NPE\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-23T21:27:58Z", "type": "commit"}, {"oid": "b4ce1f6da2d43c63047fa96a63cd75b58652003c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b4ce1f6da2d43c63047fa96a63cd75b58652003c", "message": "Improve readability\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-23T21:40:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MzQwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r494063408", "bodyText": "Likewise, why we are using single letter variable here? The rest of the Strimzi codebase is pretty consistently using descriptive names for variables like these.", "author": "tombentley", "createdAt": "2020-09-24T06:18:47Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java", "diffHunk": "@@ -96,6 +95,80 @@ public int getDiffSize() {\n         return updatedCE;\n     }\n \n+    private static Map<String, String> readLog4jConfig(String config) {\n+\n+        Map<String, String> parsed = new LinkedHashMap<>();\n+        Map<String, String> env = new HashMap<>();\n+        BufferedReader reader = new BufferedReader(new StringReader(config));\n+        String line;\n+        try {\n+            while ((line = reader.readLine()) != null) {\n+                // skip comments\n+                if (line.startsWith(\"#\")) continue;\n+\n+                // ignore empty lines\n+                line = line.trim();\n+                if (line.length() == 0) continue;\n+\n+                // everything that does not start with 'log4j.' is a variable definition\n+                if (!line.startsWith(\"log4j.\")) {\n+                    int p = line.indexOf(\"=\");\n+                    if (p >= 0) {\n+                        env.put(line.substring(0, p).trim(), line.substring(p + 1).trim());\n+                    } else {\n+                        env.put(line.trim(), \"\");\n+                    }\n+                    log.debug(\"Treating the line as ENV var declaration: {}\", line);\n+                    continue;\n+                }\n+\n+                // we ignore appenders (log4j.appender.*)\n+                // and only handle loggers (log4j.logger.*)\n+                if (line.startsWith(\"log4j.logger.\")) {\n+                    int p = line.indexOf(\"=\", 13);\n+                    if (p == -1) {\n+                        log.debug(\"Skipping log4j.logger.* declaration without level: {}\", line);\n+                        continue;\n+                    }\n+                    String name = line.substring(13, p).trim();\n+                    String value = line.substring(p + 1).trim();\n+\n+                    value = expandVars(value, env);\n+                    parsed.put(name, value);\n+\n+                } else if (line.startsWith(\"log4j.rootLogger=\")) {\n+                    parsed.put(\"root\", expandVars(line.substring(17).trim(), env));\n+\n+                } else {\n+                    log.debug(\"Skipping log4j line: {}\", line);\n+                }\n+            }\n+        } catch (Exception e) {\n+            log.error(\"Failed to parse logging configuration: \" + config, e);\n+            return Collections.emptyMap();\n+        }\n+        return parsed;\n+    }\n+\n+    private static String expandVars(String value, Map<String, String> env) {\n+        StringBuilder sb = new StringBuilder();\n+        int e = -1;\n+        int b;", "originalCommit": "55324fce3181012c2a3b5d21457df7477666eadd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE4NzU5Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r494187596", "bodyText": "I agree with Tom. It's hard to read code with one letter variables.", "author": "Frawless", "createdAt": "2020-09-24T09:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MzQwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMDA0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3672#discussion_r495010047", "bodyText": "I can see the majority opinion is against me on this one :)\nI'll call these startIdx and endIdx then.", "author": "mstruk", "createdAt": "2020-09-25T14:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MzQwOA=="}], "type": "inlineReview", "revised_code": {"commit": "ae5b1850c66748c09d0ebef9c665a92645f47561", "chunk": "diff --git a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\nindex 958b451bf7..dd40300820 100644\n--- a/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\n+++ b/cluster-operator/src/main/java/io/strimzi/operator/cluster/operator/resource/KafkaBrokerLoggingConfigurationDiff.java\n\n@@ -125,19 +126,21 @@ public class KafkaBrokerLoggingConfigurationDiff extends AbstractResourceDiff {\n                 // we ignore appenders (log4j.appender.*)\n                 // and only handle loggers (log4j.logger.*)\n                 if (line.startsWith(\"log4j.logger.\")) {\n-                    int p = line.indexOf(\"=\", 13);\n+                    int startat = \"log4j.logger.\".length();\n+                    int p = line.indexOf(\"=\", startat);\n                     if (p == -1) {\n                         log.debug(\"Skipping log4j.logger.* declaration without level: {}\", line);\n                         continue;\n                     }\n-                    String name = line.substring(13, p).trim();\n+                    String name = line.substring(startat, p).trim();\n                     String value = line.substring(p + 1).trim();\n \n-                    value = expandVars(value, env);\n+                    value = Util.expandVar(value, env);\n                     parsed.put(name, value);\n \n                 } else if (line.startsWith(\"log4j.rootLogger=\")) {\n-                    parsed.put(\"root\", expandVars(line.substring(17).trim(), env));\n+                    int startat = \"log4j.rootLogger=\".length();\n+                    parsed.put(\"root\", Util.expandVar(line.substring(startat).trim(), env));\n \n                 } else {\n                     log.debug(\"Skipping log4j line: {}\", line);\n"}}, {"oid": "ae5b1850c66748c09d0ebef9c665a92645f47561", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ae5b1850c66748c09d0ebef9c665a92645f47561", "message": "use default value ad default value\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-09-25T08:58:45Z", "type": "commit"}, {"oid": "db6143ee0300d13e7bd10db1d7ea96b1afaf1e4a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/db6143ee0300d13e7bd10db1d7ea96b1afaf1e4a", "message": "Merge pull request #3 from stanlyDoge/fix-logging-diff\n\nconnect logging - use default value as default value", "committedDate": "2020-09-25T13:48:08Z", "type": "commit"}, {"oid": "b690978e816ba61aaa1f4127b8f0980d5efb0695", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b690978e816ba61aaa1f4127b8f0980d5efb0695", "message": "Rename single-letter vars and remove some leftover logging\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-25T14:35:00Z", "type": "commit"}, {"oid": "cb63089041a1e694248be208abbe01c3d2849f7b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/cb63089041a1e694248be208abbe01c3d2849f7b", "message": "Fix the KafkaConnectApiTest - loggers are no longer turned off\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-09-27T18:20:49Z", "type": "commit"}, {"oid": "17bea2542615c984a5334d77bb369141e5d36afc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/17bea2542615c984a5334d77bb369141e5d36afc", "message": "Fix single-char local variable names\n\nSigned-off-by: Marko Strukelj <marko.strukelj@gmail.com>", "committedDate": "2020-10-05T13:26:34Z", "type": "commit"}, {"oid": "7203031604f293b79cca0bbb01ede1645843ec63", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7203031604f293b79cca0bbb01ede1645843ec63", "message": "fix external cm logging\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-10-07T13:25:08Z", "type": "commit"}, {"oid": "4f6d6d154549445d1cc5d5d13ef09904338c7398", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/4f6d6d154549445d1cc5d5d13ef09904338c7398", "message": "Merge pull request #4 from stanlyDoge/fix-logging-diff\n\nfix external cm logging", "committedDate": "2020-10-07T13:30:03Z", "type": "commit"}, {"oid": "c96d3701027565dc59da6f85c9a2816f04e7a519", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c96d3701027565dc59da6f85c9a2816f04e7a519", "message": "Remove unused line\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>", "committedDate": "2020-10-07T15:05:15Z", "type": "commit"}]}