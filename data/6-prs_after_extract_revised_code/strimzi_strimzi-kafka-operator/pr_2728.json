{"pr_number": 2728, "pr_title": "[MO] - [system test] -> Fix race-condition for mirroring topics", "pr_createdAt": "2020-03-20T13:14:47Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728", "timeline": [{"oid": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89", "message": "[MO] - [system test] -> fixes\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-20T13:09:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNjIyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#discussion_r396236227", "bodyText": "out of curiosity, why an exception is logged as INFO and not as ERROR printing the stack trace? Is it the pattern that you are using everywhere?", "author": "ppatierno", "createdAt": "2020-03-23T06:36:40Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java", "diffHunk": "@@ -193,10 +195,18 @@ void testProducerConsumerMirrorMaker() throws IOException, InterruptedException,\n                 .endSpec()\n                 .done();\n \n-        consumer = oauthKafkaClient.receiveMessages(TOPIC_NAME, NAMESPACE, targetKafkaCluster, MESSAGE_COUNT,\n-                CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n-\n-        assertThat(consumer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS), is(MESSAGE_COUNT));\n+        TestUtils.waitFor(\"Waiting for Mirror Maker will copy messages from \" + CLUSTER_NAME + \" to \" + targetKafkaCluster,\n+            Duration.ofSeconds(30).toMillis(), Constants.TIMEOUT_FOR_MIRROR_MAKER_COPY_MESSAGES_BETWEEN_BROKERS,\n+            () -> {\n+                try {\n+                    Future<Integer> oauthConsumer = oauthKafkaClient.receiveMessages(TOPIC_NAME, NAMESPACE, targetKafkaCluster,\n+                            MESSAGE_COUNT, CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n+                    return MESSAGE_COUNT == oauthConsumer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS);\n+                } catch (IOException | InterruptedException | ExecutionException | TimeoutException e) {\n+                    LOGGER.info(\"Consumer doesn't received messages {}\", e.getMessage());", "originalCommit": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwMTY0OA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#discussion_r397101648", "bodyText": "Good point, It will make more sense if I change it to error :)", "author": "see-quick", "createdAt": "2020-03-24T12:05:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNjIyNw=="}], "type": "inlineReview", "revised_code": {"commit": "8ff521bce6e153d3347fcb4740f8e6aada5ff2a5", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java b/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java\nindex 80acf63e6..a4bab7f33 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java\n\n@@ -203,7 +203,8 @@ public class OauthPlainST extends OauthBaseST {\n                             MESSAGE_COUNT, CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n                     return MESSAGE_COUNT == oauthConsumer.get(Constants.GLOBAL_CLIENTS_TIMEOUT, TimeUnit.MILLISECONDS);\n                 } catch (IOException | InterruptedException | ExecutionException | TimeoutException e) {\n-                    LOGGER.info(\"Consumer doesn't received messages {}\", e.getMessage());\n+                    LOGGER.error(\"Consumer doesn't received messages {}\", e.getMessage());\n+                    e.printStackTrace();\n                     return false;\n                 }\n             });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNjM2MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2728#discussion_r396236361", "bodyText": "Make it clear it's Mirror Maker 2 in the log message.", "author": "ppatierno", "createdAt": "2020-03-23T06:37:11Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java", "diffHunk": "@@ -276,8 +287,18 @@ void testProducerConsumerMirrorMaker2() throws IOException, InterruptedException\n                 .endSpec()\n                 .done();\n \n-        consumer = oauthKafkaClient.receiveMessages(TOPIC_NAME, NAMESPACE, kafkaTargetClusterName, MESSAGE_COUNT,\n-                CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE));\n+        TestUtils.waitFor(\"Waiting for Mirror Maker will copy messages from \" + kafkaSourceClusterName + \" to \" + kafkaTargetClusterName,", "originalCommit": "547ea738fa95fe9e8e9e2eaea8f2fe1febff2d89", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ff521bce6e153d3347fcb4740f8e6aada5ff2a5", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java b/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java\nindex 80acf63e6..a4bab7f33 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/oauth/OauthPlainST.java\n\n@@ -287,7 +288,7 @@ public class OauthPlainST extends OauthBaseST {\n                 .endSpec()\n                 .done();\n \n-        TestUtils.waitFor(\"Waiting for Mirror Maker will copy messages from \" + kafkaSourceClusterName + \" to \" + kafkaTargetClusterName,\n+        TestUtils.waitFor(\"Waiting for Mirror Maker 2 will copy messages from \" + kafkaSourceClusterName + \" to \" + kafkaTargetClusterName,\n             Duration.ofSeconds(30).toMillis(), Constants.TIMEOUT_FOR_MIRROR_MAKER_COPY_MESSAGES_BETWEEN_BROKERS,\n             () -> {\n                 try {\n"}}, {"oid": "8ff521bce6e153d3347fcb4740f8e6aada5ff2a5", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8ff521bce6e153d3347fcb4740f8e6aada5ff2a5", "message": "[MO] - [commends] -> done\n\nSigned-off-by: morsak <xorsak02@stud.fit.vutbr.cz>", "committedDate": "2020-03-24T12:06:18Z", "type": "commit"}]}