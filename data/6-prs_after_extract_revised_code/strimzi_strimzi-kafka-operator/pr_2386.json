{"pr_number": 2386, "pr_title": "SecurityST: Remove OpenShiftOnly tests (#1994)", "pr_createdAt": "2020-01-10T13:49:35Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386", "timeline": [{"oid": "48eea38fce741a4c82abc09e25d2959e29252b5b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/48eea38fce741a4c82abc09e25d2959e29252b5b", "message": "fixup! SecurityST: Remove OpenShiftOnly tests (#1994)\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-10T13:51:14Z", "type": "forcePushed"}, {"oid": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/235546e6bb5e598ed9f548fecc48c5fdb7125ffd", "message": "Fix kafka user quotas deleting (#2394)\n\n* Fix kafka user quotas deleting\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>\n\n* use scram name\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>\n\n* mocking\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-15T12:01:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMxOTY0Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386#discussion_r367319647", "bodyText": "Yyou can use something like KafkaUserUtils.waitForSecret() or SecretUtils.waitForSecret() instead of this.", "author": "Frawless", "createdAt": "2020-01-16T09:44:04Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -194,13 +196,24 @@ void autoRenewSomeCaCertsTriggeredByAnno(\n             boolean zkShouldRoll,\n             boolean kafkaShouldRoll,\n             boolean eoShouldRoll) throws Exception {\n-        createClusterWithExternalRoute();\n         String userName = \"alice\";\n-        KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+        int received = 0;\n+        String topicName = TOPIC_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE);\n+\n+        createKafkaCluster();\n+\n+        KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, userName).done();\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+\n+        String defaultKafkaClientsPodName =\n+                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n         waitFor(\"\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS, () -> kubeClient().getSecret(\"alice\") != null,", "originalCommit": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff7fb98b71e42f60d96c8881302fce47c88d8e2f", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java b/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\nindex 2225a20a20..6c7d1efa9a 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\n\n@@ -197,7 +201,6 @@ class SecurityST extends MessagingBaseST {\n             boolean kafkaShouldRoll,\n             boolean eoShouldRoll) throws Exception {\n         String userName = \"alice\";\n-        int received = 0;\n         String topicName = TOPIC_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE);\n \n         createKafkaCluster();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyMTAzMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386#discussion_r367321030", "bodyText": "Same as above", "author": "Frawless", "createdAt": "2020-01-16T09:47:07Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -310,14 +328,27 @@ void autoReplaceSomeKeysTriggeredByAnno(final List<String> secrets,\n                                             boolean zkShouldRoll,\n                                             boolean kafkaShouldRoll,\n                                             boolean eoShouldRoll) throws Exception {\n-        createClusterWithExternalRoute();\n+\n+        int received = 0;\n+\n+        createKafkaCluster();\n+\n         String aliceUserName = \"alice\";\n-        KafkaUserResource.tlsUser(CLUSTER_NAME, aliceUserName).done();\n+        KafkaUser user = KafkaUserResource.tlsUser(CLUSTER_NAME, aliceUserName).done();\n+        String topicName = TOPIC_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE);\n+\n+        KafkaTopicResource.topic(CLUSTER_NAME, topicName).done();\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+\n+        String defaultKafkaClientsPodName =\n+                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n         waitFor(\"Alic's secret to exist\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS,", "originalCommit": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff7fb98b71e42f60d96c8881302fce47c88d8e2f", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java b/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\nindex 2225a20a20..6c7d1efa9a 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\n\n@@ -328,9 +341,6 @@ class SecurityST extends MessagingBaseST {\n                                             boolean zkShouldRoll,\n                                             boolean kafkaShouldRoll,\n                                             boolean eoShouldRoll) throws Exception {\n-\n-        int received = 0;\n-\n         createKafkaCluster();\n \n         String aliceUserName = \"alice\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyMTIyMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2386#discussion_r367321220", "bodyText": "Same as above", "author": "Frawless", "createdAt": "2020-01-16T09:47:32Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java", "diffHunk": "@@ -377,16 +408,22 @@ void autoReplaceSomeKeysTriggeredByAnno(final List<String> secrets,\n                     value, is(not(initialCaKeys.get(secretName))));\n         }\n \n-        waitForClusterAvailabilityTls(aliceUserName, NAMESPACE, CLUSTER_NAME);\n-\n         // Finally check a new client (signed by new client key) can consume\n         String bobUserName = \"bob\";\n-        KafkaUserResource.tlsUser(CLUSTER_NAME, bobUserName).done();\n+        user = KafkaUserResource.tlsUser(CLUSTER_NAME, bobUserName).done();\n+        KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n+\n+        defaultKafkaClientsPodName =\n+                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+\n         waitFor(\"Bob's secret to exist\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS,", "originalCommit": "235546e6bb5e598ed9f548fecc48c5fdb7125ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff7fb98b71e42f60d96c8881302fce47c88d8e2f", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java b/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\nindex 2225a20a20..6c7d1efa9a 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/SecurityST.java\n\n@@ -408,22 +421,29 @@ class SecurityST extends MessagingBaseST {\n                     value, is(not(initialCaKeys.get(secretName))));\n         }\n \n+        LOGGER.info(\"Checking consumed messages to pod:{}\", externalKafkaClient.getPodName());\n+        externalKafkaClient.checkProducedAndConsumedMessages(\n+                messagesCount,\n+                externalKafkaClient.receiveMessages(topicName, NAMESPACE, CLUSTER_NAME, messagesCount, CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE))\n+        );\n+\n         // Finally check a new client (signed by new client key) can consume\n         String bobUserName = \"bob\";\n         user = KafkaUserResource.tlsUser(CLUSTER_NAME, bobUserName).done();\n         KafkaClientsResource.deployKafkaClients(true, CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS, user).done();\n \n         defaultKafkaClientsPodName =\n-                kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n+                ResourceManager.kubeClient().listPodsByPrefixInName(CLUSTER_NAME + \"-\" + Constants.KAFKA_CLIENTS).get(0).getMetadata().getName();\n \n-        waitFor(\"Bob's secret to exist\", Constants.GLOBAL_POLL_INTERVAL, Constants.TIMEOUT_FOR_GET_SECRETS,\n-            () -> kubeClient().getSecret(bobUserName) != null,\n-            () -> LOGGER.error(\"Couldn't find user secret {}\", kubeClient().listSecrets()));\n+        externalKafkaClient.setPodName(defaultKafkaClientsPodName);\n \n+        LOGGER.info(\"Checking consumed messages to pod:{}\", externalKafkaClient.getPodName());\n+        externalKafkaClient.checkProducedAndConsumedMessages(\n+                messagesCount,\n+                externalKafkaClient.receiveMessages(topicName, NAMESPACE, CLUSTER_NAME, messagesCount, CONSUMER_GROUP_NAME + \"-\" + rng.nextInt(Integer.MAX_VALUE))\n+        );\n \n-        LOGGER.info(\"Actual default clients pod name: {}\", defaultKafkaClientsPodName);\n-        received = receiveMessages(messagesCount, CLUSTER_NAME, true, topicName, user, defaultKafkaClientsPodName);\n-        assertSentAndReceivedMessages(messagesCount, received);\n+        SecretUtils.waitForSecretReady(bobUserName);\n \n         if (!zkShouldRoll) {\n             assertThat(\"ZK pods should not roll, but did.\", StatefulSetUtils.ssSnapshot(zookeeperStatefulSetName(CLUSTER_NAME)), is(zkPods));\n"}}, {"oid": "ff7fb98b71e42f60d96c8881302fce47c88d8e2f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ff7fb98b71e42f60d96c8881302fce47c88d8e2f", "message": "Change availabilityTest with new external kafka client's check\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-19T19:43:52Z", "type": "forcePushed"}, {"oid": "48fa6cd63ae5ee8870233dc4d79a47a68eeca8c6", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/48fa6cd63ae5ee8870233dc4d79a47a68eeca8c6", "message": "Fix kafka user quotas deleting (#2394)\n\n* Fix kafka user quotas deleting\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>\n\n* use scram name\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>\n\n* mocking\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-19T19:53:41Z", "type": "commit"}, {"oid": "558c5e77b315752084096b59a507607f5667e64b", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/558c5e77b315752084096b59a507607f5667e64b", "message": "Remove external listeners from tests where are not needed\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-19T19:53:41Z", "type": "commit"}, {"oid": "037de585641396e12f8222b8e662b0c6c549cd9e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/037de585641396e12f8222b8e662b0c6c549cd9e", "message": "Add extra memory for containerBuilder to run tests without memory errors\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-19T19:53:41Z", "type": "commit"}, {"oid": "d93d5e717154b7eb491b77b5aa814728ac472409", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d93d5e717154b7eb491b77b5aa814728ac472409", "message": "Change availabilityTest with new external kafka client's check\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-19T19:53:41Z", "type": "forcePushed"}, {"oid": "b8ceeaedd25c92167e29c0e49a80ec413c374212", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b8ceeaedd25c92167e29c0e49a80ec413c374212", "message": "Change availabilityTest with new external kafka client's check\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-20T07:30:11Z", "type": "commit"}, {"oid": "b8ceeaedd25c92167e29c0e49a80ec413c374212", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b8ceeaedd25c92167e29c0e49a80ec413c374212", "message": "Change availabilityTest with new external kafka client's check\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-01-20T07:30:11Z", "type": "forcePushed"}]}