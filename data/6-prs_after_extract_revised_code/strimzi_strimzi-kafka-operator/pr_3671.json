{"pr_number": 3671, "pr_title": "ST: Add strimzi_resources_state metric check to MetricsST", "pr_createdAt": "2020-09-18T07:30:05Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671", "timeline": [{"oid": "6301ebbba460fa0a08b08ab9b2be33cea49546aa", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6301ebbba460fa0a08b08ab9b2be33cea49546aa", "message": "Add strimzi_resources_state metric check to MetricsST\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-09-21T07:06:04Z", "type": "commit"}, {"oid": "6301ebbba460fa0a08b08ab9b2be33cea49546aa", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6301ebbba460fa0a08b08ab9b2be33cea49546aa", "message": "Add strimzi_resources_state metric check to MetricsST\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-09-21T07:06:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwNjk1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671#discussion_r491906950", "bodyText": "should we add the new one strimzi_resource_state to the check in this list as well?", "author": "ppatierno", "createdAt": "2020-09-21T09:34:40Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -228,33 +236,30 @@ void testClusterOperatorMetrics() {\n             assertCoMetricNotNull(\"strimzi_reconciliations_failed_total\", resource, clusterOperatorMetricsData);\n         }", "originalCommit": "6301ebbba460fa0a08b08ab9b2be33cea49546aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyMzI1MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671#discussion_r491923250", "bodyText": "Ye I can add it", "author": "Frawless", "createdAt": "2020-09-21T09:59:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwNjk1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2OTY3Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671#discussion_r491969672", "bodyText": "I checked the code and it kinda doesn't make sense to add it into this loop. Basically if the metric is set properly is tested by new asserts which I added after this loop.", "author": "Frawless", "createdAt": "2020-09-21T11:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwNjk1MA=="}], "type": "inlineReview", "revised_code": {"commit": "60a081ea063157265c332c53880a63deb4c466cc", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java b/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java\nindex e5d43abe1..e45c116e8 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java\n\n@@ -250,16 +254,16 @@ public class MetricsST extends AbstractST {\n         assertCoMetricResourceState(KafkaConnectS2I.RESOURCE_KIND, CLUSTER_NAME, 0);\n \n         assertCoMetricResources(KafkaMirrorMaker.RESOURCE_KIND, 0);\n-        assertCoMetricResourceState(KafkaMirrorMaker.RESOURCE_KIND, CLUSTER_NAME, 0);\n+        AssertCoMetricResourceStateNotExists(KafkaMirrorMaker.RESOURCE_KIND, CLUSTER_NAME);\n \n         assertCoMetricResources(KafkaMirrorMaker2.RESOURCE_KIND, 1);\n         assertCoMetricResourceState(KafkaMirrorMaker2.RESOURCE_KIND, MIRROR_MAKER_CLUSTER, 1);\n \n         assertCoMetricResources(KafkaConnector.RESOURCE_KIND, 0);\n-        assertCoMetricResourceState(KafkaConnector.RESOURCE_KIND, CLUSTER_NAME, 0);\n+        AssertCoMetricResourceStateNotExists(KafkaConnector.RESOURCE_KIND, CLUSTER_NAME);\n \n         assertCoMetricResources(KafkaRebalance.RESOURCE_KIND, 0);\n-        assertCoMetricResourceState(KafkaRebalance.RESOURCE_KIND, CLUSTER_NAME, 0);\n+        AssertCoMetricResourceStateNotExists(KafkaRebalance.RESOURCE_KIND, CLUSTER_NAME);\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwNzk1NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671#discussion_r491907954", "bodyText": "if there is no resource of a specific kind, the corresponding state_resource_state metric should not exist. Do you see it existing but with 0 value?", "author": "ppatierno", "createdAt": "2020-09-21T09:36:32Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java", "diffHunk": "@@ -228,33 +236,30 @@ void testClusterOperatorMetrics() {\n             assertCoMetricNotNull(\"strimzi_reconciliations_failed_total\", resource, clusterOperatorMetricsData);\n         }\n \n-        Pattern connectResponse = Pattern.compile(\"strimzi_resources\\\\{kind=\\\"Kafka\\\",} ([\\\\d.][^\\\\n]+)\");\n-        ArrayList<Double> values = MetricsUtils.collectSpecificMetric(connectResponse, clusterOperatorMetricsData);\n-        assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 2));\n+        assertCoMetricResources(Kafka.RESOURCE_KIND, 2);\n+        assertCoMetricResourceState(Kafka.RESOURCE_KIND, CLUSTER_NAME, 1);\n+        assertCoMetricResourceState(Kafka.RESOURCE_KIND, SECOND_CLUSTER, 1);\n \n-        connectResponse = Pattern.compile(\"strimzi_resources\\\\{kind=\\\"KafkaBridge\\\",} ([\\\\d.][^\\\\n]+)\");\n-        values = MetricsUtils.collectSpecificMetric(connectResponse, clusterOperatorMetricsData);\n-        assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 1));\n+        assertCoMetricResources(KafkaBridge.RESOURCE_KIND, 1);\n+        assertCoMetricResourceState(KafkaBridge.RESOURCE_KIND, BRIDGE_CLUSTER, 1);\n \n-        connectResponse = Pattern.compile(\"strimzi_resources\\\\{kind=\\\"KafkaConnect\\\",} ([\\\\d.][^\\\\n]+)\");\n-        values = MetricsUtils.collectSpecificMetric(connectResponse, clusterOperatorMetricsData);\n-        assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 1));\n+        assertCoMetricResources(KafkaConnect.RESOURCE_KIND, 1);\n+        assertCoMetricResourceState(KafkaConnect.RESOURCE_KIND, CLUSTER_NAME, 1);\n \n-        connectResponse = Pattern.compile(\"strimzi_resources\\\\{kind=\\\"KafkaConnectS2I\\\",} ([\\\\d.][^\\\\n]+)\");\n-        values = MetricsUtils.collectSpecificMetric(connectResponse, clusterOperatorMetricsData);\n-        assertThat(values.stream().mapToDouble(i -> i).sum(), is((double) 0));\n+        assertCoMetricResources(KafkaConnectS2I.RESOURCE_KIND, 0);\n+        assertCoMetricResourceState(KafkaConnectS2I.RESOURCE_KIND, CLUSTER_NAME, 0);", "originalCommit": "6301ebbba460fa0a08b08ab9b2be33cea49546aa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyMzA0NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671#discussion_r491923045", "bodyText": "In case it's not exists, the check return 0, but it return 0 in case the resource is nto ready. I can try to rewrite it a little bit and check that metric is not expsoed in case the resource is nto created.", "author": "Frawless", "createdAt": "2020-09-21T09:59:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwNzk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkzODk0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3671#discussion_r491938943", "bodyText": "Yeah exactly, they are two different things: metric doesn't exist vs metric 0 (resource not ready). I would test them differently.", "author": "ppatierno", "createdAt": "2020-09-21T10:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkwNzk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "60a081ea063157265c332c53880a63deb4c466cc", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java b/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java\nindex e5d43abe1..e45c116e8 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/metrics/MetricsST.java\n\n@@ -250,16 +254,16 @@ public class MetricsST extends AbstractST {\n         assertCoMetricResourceState(KafkaConnectS2I.RESOURCE_KIND, CLUSTER_NAME, 0);\n \n         assertCoMetricResources(KafkaMirrorMaker.RESOURCE_KIND, 0);\n-        assertCoMetricResourceState(KafkaMirrorMaker.RESOURCE_KIND, CLUSTER_NAME, 0);\n+        AssertCoMetricResourceStateNotExists(KafkaMirrorMaker.RESOURCE_KIND, CLUSTER_NAME);\n \n         assertCoMetricResources(KafkaMirrorMaker2.RESOURCE_KIND, 1);\n         assertCoMetricResourceState(KafkaMirrorMaker2.RESOURCE_KIND, MIRROR_MAKER_CLUSTER, 1);\n \n         assertCoMetricResources(KafkaConnector.RESOURCE_KIND, 0);\n-        assertCoMetricResourceState(KafkaConnector.RESOURCE_KIND, CLUSTER_NAME, 0);\n+        AssertCoMetricResourceStateNotExists(KafkaConnector.RESOURCE_KIND, CLUSTER_NAME);\n \n         assertCoMetricResources(KafkaRebalance.RESOURCE_KIND, 0);\n-        assertCoMetricResourceState(KafkaRebalance.RESOURCE_KIND, CLUSTER_NAME, 0);\n+        AssertCoMetricResourceStateNotExists(KafkaRebalance.RESOURCE_KIND, CLUSTER_NAME);\n     }\n \n     @Test\n"}}, {"oid": "60a081ea063157265c332c53880a63deb4c466cc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/60a081ea063157265c332c53880a63deb4c466cc", "message": "comments\n\nSigned-off-by: Jakub Stejskal <xstejs24@gmail.com>", "committedDate": "2020-09-21T11:29:00Z", "type": "commit"}]}