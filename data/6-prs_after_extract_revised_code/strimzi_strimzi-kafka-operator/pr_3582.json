{"pr_number": 3582, "pr_title": "[systemtest][mm2] Test for Identity Replication Policy", "pr_createdAt": "2020-09-01T14:44:48Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582", "timeline": [{"oid": "3cb3bd20687f0dab14bcebb06ff0eeb23c9625cb", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3cb3bd20687f0dab14bcebb06ff0eeb23c9625cb", "message": "add test for IRP\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-01T14:46:07Z", "type": "commit"}, {"oid": "3cb3bd20687f0dab14bcebb06ff0eeb23c9625cb", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3cb3bd20687f0dab14bcebb06ff0eeb23c9625cb", "message": "add test for IRP\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-01T14:46:07Z", "type": "forcePushed"}, {"oid": "0d37e2858606ba7f3cc2c41635a0e9cc019be9b7", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0d37e2858606ba7f3cc2c41635a0e9cc019be9b7", "message": "add another checks\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-01T19:15:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NTAyNw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582#discussion_r481385027", "bodyText": "Stupid question ... but ... On line 692 you create topic original-topic and here you just list it and check it has the right name? Because how do you know this is not the initial topic you created when using single namespace? I guess you could say that if on line 725 you can read the mirrored messages from the topic original-topic it worked. But this should be either fixed or removed.", "author": "scholzj", "createdAt": "2020-09-01T19:36:27Z", "path": "systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java", "diffHunk": "@@ -678,6 +680,59 @@ void testScaleMirrorMaker2ToZero() {\n         assertNull(mm2Status.getUrl());\n     }\n \n+    @Test\n+    void testIdentityReplicationPolicy() {\n+        String originalTopicName = \"original-topic\";\n+\n+        // Deploy source kafka\n+        KafkaResource.kafkaEphemeral(kafkaClusterSourceName, 1, 1).done();\n+        // Deploy target kafka\n+        KafkaResource.kafkaEphemeral(kafkaClusterTargetName, 1, 1).done();\n+        // Create topic\n+        KafkaTopicResource.topic(kafkaClusterSourceName, originalTopicName, 3).done();\n+\n+        KafkaClientsResource.deployKafkaClients(false, KAFKA_CLIENTS_NAME).done();\n+\n+        final String kafkaClientsPodName = kubeClient().listPodsByPrefixInName(KAFKA_CLIENTS_NAME).get(0).getMetadata().getName();\n+\n+        KafkaMirrorMaker2Resource.kafkaMirrorMaker2(CLUSTER_NAME, kafkaClusterTargetName, kafkaClusterSourceName, 1, false)\n+            .editSpec()\n+                .editMirror(0)\n+                    .editSourceConnector()\n+                        .addToConfig(\"replication.policy.class\", \"io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy\")\n+                    .endSourceConnector()\n+                .endMirror()\n+            .endSpec()\n+            .done();\n+\n+        LOGGER.info(\"Sending and receiving messages via {}\", kafkaClusterSourceName);\n+        InternalKafkaClient internalKafkaClient = new InternalKafkaClient.Builder()\n+            .withNamespaceName(NAMESPACE)\n+            .withTopicName(originalTopicName)\n+            .withClusterName(kafkaClusterSourceName)\n+            .withMessageCount(MESSAGE_COUNT)\n+            .withUsingPodName(kafkaClientsPodName)\n+            .build();\n+\n+        internalKafkaClient.assertSentAndReceivedMessages(\n+            internalKafkaClient.sendMessagesPlain(),\n+            internalKafkaClient.receiveMessagesPlain()\n+        );\n+\n+        LOGGER.info(\"Changing to {} and will try to receive messages\", kafkaClusterTargetName);\n+        internalKafkaClient.setClusterName(kafkaClusterTargetName);\n+\n+        assertThat(internalKafkaClient.receiveMessagesPlain(), equalTo(MESSAGE_COUNT));\n+\n+        LOGGER.info(\"Checking if the mirrored topic name is same as the original one\");\n+\n+        KafkaTopic kafkaTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(NAMESPACE).withName(originalTopicName).get();\n+        assertNotNull(kafkaTopic);\n+        assertThat(kafkaTopic.getMetadata().getName(), equalTo(originalTopicName));\n+        assertThat(kafkaTopic.getSpec().getPartitions(), equalTo(3));\n+        assertThat(kafkaTopic.getSpec().getReplicas(), equalTo(1));", "originalCommit": "0d37e2858606ba7f3cc2c41635a0e9cc019be9b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQwMjU3Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582#discussion_r481402577", "bodyText": "Yes, that's true, I'm looking at solution that getting (somehow, if it is possible) the KafkaTopics from MM2 API ...", "author": "im-konge", "createdAt": "2020-09-01T20:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NTAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQwMzAzOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582#discussion_r481403039", "bodyText": "But \ud83d\ude04 don't know if it is possible", "author": "im-konge", "createdAt": "2020-09-01T20:11:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NTAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQwNzczMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582#discussion_r481407731", "bodyText": "Nothing easy comes to my mind. I don't even know how the TO would handle it. So I guess you can:\n\ndecide that reading the messages from the topic is good enough (assuming the internal client doesn't subscribe to some regex)\nCheck it using Kafka APIs / kafka_topics.sh", "author": "scholzj", "createdAt": "2020-09-01T20:20:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NTAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ1MzU1Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582#discussion_r481453557", "bodyText": "I was thinking about it, I will check it via Kafka APIs/kafka_topics.sh -> I want to be 100% sure of this \ud83d\ude04", "author": "im-konge", "createdAt": "2020-09-01T21:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NTAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY5NTEwMA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3582#discussion_r481695100", "bodyText": "Now it should be more sufficient", "author": "im-konge", "createdAt": "2020-09-02T04:59:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NTAyNw=="}], "type": "inlineReview", "revised_code": {"commit": "ff8719b54af1c00f9b65ddc30e97b6fb156bc32f", "chunk": "diff --git a/systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java b/systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java\nindex 3ca2751d24..641571feda 100644\n--- a/systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java\n+++ b/systemtest/src/test/java/io/strimzi/systemtest/mirrormaker/MirrorMaker2ST.java\n\n@@ -726,11 +727,12 @@ class MirrorMaker2ST extends AbstractST {\n \n         LOGGER.info(\"Checking if the mirrored topic name is same as the original one\");\n \n-        KafkaTopic kafkaTopic = KafkaTopicResource.kafkaTopicClient().inNamespace(NAMESPACE).withName(originalTopicName).get();\n-        assertNotNull(kafkaTopic);\n-        assertThat(kafkaTopic.getMetadata().getName(), equalTo(originalTopicName));\n-        assertThat(kafkaTopic.getSpec().getPartitions(), equalTo(3));\n-        assertThat(kafkaTopic.getSpec().getReplicas(), equalTo(1));\n+        List<String> kafkaTopics = KafkaCmdClient.listTopicsUsingPodCli(kafkaClusterTargetName, 0);\n+        assertNotNull(kafkaTopics.stream().filter(kafkaTopic -> kafkaTopic.equals(originalTopicName)).findAny());\n+\n+        List<String> kafkaTopicSpec = KafkaCmdClient.describeTopicUsingPodCli(kafkaClusterTargetName, 0, originalTopicName);\n+        assertThat(kafkaTopicSpec.get(0), equalTo(\"Topic:\" + originalTopicName));\n+        assertThat(kafkaTopicSpec.get(1), equalTo(\"PartitionCount:3\"));\n     }\n \n     @BeforeAll\n"}}, {"oid": "ff8719b54af1c00f9b65ddc30e97b6fb156bc32f", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ff8719b54af1c00f9b65ddc30e97b6fb156bc32f", "message": "comment\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-09-02T04:59:22Z", "type": "commit"}]}