{"pr_number": 4428, "pr_title": "Prevent outlaws from entering towns", "pr_createdAt": "2020-11-09T02:44:09Z", "pr_url": "https://github.com/TownyAdvanced/Towny/pull/4428", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxOTY2NQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519719665", "bodyText": "you don't actually need the .replace(), instead use\nTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\", outlaw.getName()));", "author": "LlmDl", "createdAt": "2020-11-09T10:55:24Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjQ3NQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520036475", "bodyText": "Done \ud83d\udc4d\ud83c\udffc", "author": "GNosii", "createdAt": "2020-11-09T18:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxOTY2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcyMTA4OA==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519721088", "bodyText": "Same as above, changing the language string to only use %s and not %c, as well as making sure they're in the right order. Instead of cooldown use TownySettings.getOutlawKickCooldown().", "author": "LlmDl", "createdAt": "2020-11-09T10:57:53Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxOTI2Mw==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520019263", "bodyText": "This was replaced by TownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\", town.getFormattedName(), TimeMgmt.formatCountdownTime(TownySettings.getOutlawKickCooldown()))); on the latest commit.", "author": "GNosii", "createdAt": "2020-11-09T18:15:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcyMTA4OA=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNjQzMQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519736431", "bodyText": "I believe this can be simplified to:\n\t\tif (TownyAPI.getInstance().getTown(player.getLocation()) != null && TownyAPI.getInstance().getTown(player.getLocation()) == town && town.hasOutlaw(player.getName())) {\n\t\t\tspawnLoc = town.getWorld().getSpawnLocation();\n\t\t\tif (player.getBedSpawnLocation() != null) \n\t\t\t\tspawnLoc = player.getBedSpawnLocation();\n\t\t\tif (outlaw.hasTown() && TownyAPI.getInstance().getTownSpawnLocation(player) != null)\n\t\t\t\tspawnLoc = TownyAPI.getInstance().getTownSpawnLocation(player);\n\n\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n\t\t\tPaperLib.teleportAsync(player, spawnLoc, TeleportCause.PLUGIN);\n\t\t}", "author": "LlmDl", "createdAt": "2020-11-09T11:24:47Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNDk1Mw==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520034953", "bodyText": "Does work, implemented it in the latest commit", "author": "GNosii", "createdAt": "2020-11-09T18:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNjQzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTQ4NQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519739485", "bodyText": "I would probably put this at the top after line 794, ie:\n\t\t/*\n\t\t * Town does consider the player an outlaw.\n\t\t */\n\t\tif (event.getTo().getTownBlock().getTown().hasOutlaw(outlaw)) {\n\t\t\t\n\t\t\t// Outlaws are allowed to roam in all towns freely.\n\t\t\tif (TownySettings.canOutlawsEnterTowns()) {\n\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", town));\n\t\t\t\n\t\t\t// Outlaws are teleported away if they spend too long in a town who has outlawed them.\n\t\t\t} else {\n\t\t\t\t// All of the new code.\n\t\t\t}\n\t\t}", "author": "LlmDl", "createdAt": "2020-11-09T11:30:11Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}.runTaskLater(plugin, cooldown * 20);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", town));\n+\t\t\t}", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNzMwMA==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520017300", "bodyText": "Added this way of handling this on the latest commit.", "author": "GNosii", "createdAt": "2020-11-09T18:12:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTYxNQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519739615", "bodyText": "Remove whitespacing changes.", "author": "LlmDl", "createdAt": "2020-11-09T11:30:26Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}.runTaskLater(plugin, cooldown * 20);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", town));\n+\t\t\t}\n+\t\t}\n \t}\n-\n-\n-\t/**\n+\t\t\n+\t\t/**", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTE1NA==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520035154", "bodyText": "done.", "author": "GNosii", "createdAt": "2020-11-09T18:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTYxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTcyOQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519739729", "bodyText": "Remove whitespacing change.", "author": "LlmDl", "createdAt": "2020-11-09T11:30:40Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -1063,3 +1125,4 @@ public void onAdminToolUseOnEntities(PlayerInteractEntityEvent event) {\n \t\n \t\n }\n+", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTI4MQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520035281", "bodyText": "Done", "author": "GNosii", "createdAt": "2020-11-09T18:43:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczOTcyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "560a3956edc18ba316655d3cc1ff7e5df8f4164a", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..3d95a6a4 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -1125,4 +1092,3 @@ public class TownyPlayerListener implements Listener {\n \t\n \t\n }\n-\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MTI4Mw==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519741283", "bodyText": "This doesn't need to be there, as the message is shown below when they get teleported which will be right away if the cooldown is 0.", "author": "LlmDl", "createdAt": "2020-11-09T11:33:29Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNjExMA==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520016110", "bodyText": "Deleted this on the latest commit", "author": "GNosii", "createdAt": "2020-11-09T18:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MTI4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjE2Nw==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519742167", "bodyText": "Instead of cooldown use TownySettings.getOutlawKickCooldown().", "author": "LlmDl", "createdAt": "2020-11-09T11:35:06Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();\n+\t\t\n+\t\t// If this resident is an outlaw in this town\n+\t\tif (location.getTown().hasOutlaw(outlaw)) {\n+\t\t\tif (!TownySettings.canOutlawsEnterTowns()) {\n+\t\t\t\t// Are towns warned when there is an outlaw entering?\n+\t\t\t\tif (TownySettings.doTownsGetWarnedOnOutlaw()) {\n+\t\t\t\t\tTownyMessaging.sendPrefixedTownMessage(town, Translation.of(\"msg_outlaw_town_notify\").replace(\"%s\", outlaw.getName()));\n+\t\t\t\t}\n+\t\t\t\t// Cooldown messages\n+\t\t\t\tif (cooldown < 1) {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick\", town));\n+\t\t\t\t} else {\n+\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kick_cooldown\").replace(\"%c\", TimeMgmt.formatCountdownTime(cooldown)).replace(\"%s\", town.getFormattedName()));\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t\tnew BukkitRunnable() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void run() {\n+\t\t\t\t\t\t\n+\t\t\t\t\t\tif (town.hasOutlaw(outlaw)) {\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\tPlayer player = outlaw.getPlayer();\n+\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t// Outlaw has/doesn't have a town.\n+\t\t\t\t\t\t\tif (!outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\tif (player.getBedSpawnLocation() == null) { \n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(player.getBedLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else if (outlaw.hasTown()) {\n+\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\tif (outlaw.getTown().hasSpawn()) {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw.getTown(), Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.TOWN);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tSpawnUtil.sendToTownySpawn(player, split, outlaw, Translation.of(\"msg_err_cant_afford_tp\"), false, false, SpawnType.RESIDENT);\n+\t\t\t\t\t\t\t\t\t\t} catch(TownyException exception) {\n+\t\t\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t} catch (NotRegisteredException e) {\n+\t\t\t\t\t\t\t\t\tplayer.teleport(town.getWorld().getSpawnLocation());\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tTownyMessaging.sendMsg(outlaw, Translation.of(\"msg_outlaw_kicked\", town));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}.runTaskLater(plugin, cooldown * 20);", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNTgxNg==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520015816", "bodyText": "Changed on latest commit", "author": "GNosii", "createdAt": "2020-11-09T18:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzU5Mg==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r519743592", "bodyText": "All three of these variables won't be needed after the above changes are made.", "author": "LlmDl", "createdAt": "2020-11-09T11:37:45Z", "path": "src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java", "diffHunk": "@@ -771,23 +776,80 @@ public void onPlayerChangePlotEvent(PlayerChangePlotEvent event) {\n \t\t}\t\t\n \t}\n \t\n-\t/*\n+\t/**\n \t * onOutlawEnterTown\n-\t * - Shows message to outlaws entering towns in which they are considered an outlaw.\n-\t */\n+\t * - Handles outlaws entering a town they are outlawed in.\n+\t **/\n \t@EventHandler(priority = EventPriority.NORMAL)\n \tpublic void onOutlawEnterTown(PlayerEnterTownEvent event) throws NotRegisteredException {\n-\t\t\n-\t\tPlayer player = event.getPlayer();\t\t\n-\t\tWorldCoord to = event.getTo();\n-\t\tResident resident = TownyUniverse.getInstance().getDataSource().getResident(player.getName());\n \n-\t\tif (to.getTownBlock().getTown().hasOutlaw(resident))\n-\t\t\tTownyMessaging.sendMsg(player, Translation.of(\"msg_you_are_an_outlaw_in_this_town\", to.getTownBlock().getTown()));\n+\t\tResident outlaw = TownyUniverse.getInstance().getDataSource().getResident(event.getPlayer().getName());\n+\t\tTown town = event.getEnteredtown();\n+\t\tTownBlock location = event.getTo().getTownBlock();\n+\t\t\n+\t\tString[] split = new String[0];\n+\t\tlong cooldown = TownySettings.getOutlawKickCooldown();", "originalCommit": "9332c8953c50d02ffee7de167866da19c3481228", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNjkzMg==", "url": "https://github.com/TownyAdvanced/Towny/pull/4428#discussion_r520036932", "bodyText": "Changes were made, variables were removed", "author": "GNosii", "createdAt": "2020-11-09T18:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzU5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "chunk": "diff --git a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\nindex 8db6389a..66736719 100644\n--- a/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n+++ b/src/com/palmergames/bukkit/towny/listeners/TownyPlayerListener.java\n\n@@ -853,7 +840,7 @@ public class TownyPlayerListener implements Listener {\n \t * onPlayerDieInTown\n \t * - Handles death events and the KeepInventory/KeepLevel options are being used.\n \t * \n-\t * @author - Articdive\n+\t * @author - Articdiv\n \t * @param event - PlayerDeathEvent\n \t */\n \t@EventHandler(priority = EventPriority.HIGHEST)\n"}}, {"oid": "2a6e0dc0c10f567ba69c264f2d26171b89888107", "url": "https://github.com/TownyAdvanced/Towny/commit/2a6e0dc0c10f567ba69c264f2d26171b89888107", "message": "Update TownyPlayerListener.java", "committedDate": "2020-11-11T16:44:38Z", "type": "commit"}, {"oid": "ebf2b61a515900e18632c96942b2198c40d3de47", "url": "https://github.com/TownyAdvanced/Towny/commit/ebf2b61a515900e18632c96942b2198c40d3de47", "message": "Update english.yml", "committedDate": "2020-11-11T16:51:52Z", "type": "commit"}, {"oid": "27d727687cc558363dadb81ec37481cb31cc6812", "url": "https://github.com/TownyAdvanced/Towny/commit/27d727687cc558363dadb81ec37481cb31cc6812", "message": "Fixed automatic wildcard imports made by my IDE", "committedDate": "2020-11-11T16:52:45Z", "type": "commit"}, {"oid": "28dd89eaa9f8bf6171d45e230912c285ca4d6a63", "url": "https://github.com/TownyAdvanced/Towny/commit/28dd89eaa9f8bf6171d45e230912c285ca4d6a63", "message": "Update ConfigNodes.java", "committedDate": "2020-11-11T16:53:21Z", "type": "commit"}, {"oid": "dfb30aca17fa4119a51efe226df5f11c439ed8e6", "url": "https://github.com/TownyAdvanced/Towny/commit/dfb30aca17fa4119a51efe226df5f11c439ed8e6", "message": "Fixed Articdive's name", "committedDate": "2020-11-11T16:54:16Z", "type": "commit"}, {"oid": "95d837f6d08c08ec4e5196e7fb0d0f53b9381d7c", "url": "https://github.com/TownyAdvanced/Towny/commit/95d837f6d08c08ec4e5196e7fb0d0f53b9381d7c", "message": "Added missing import for SpawnType", "committedDate": "2020-11-11T16:54:16Z", "type": "commit"}, {"oid": "0b4cd8a69bfc61ee8f7e0652282051caf18f18be", "url": "https://github.com/TownyAdvanced/Towny/commit/0b4cd8a69bfc61ee8f7e0652282051caf18f18be", "message": "Added changes requested by LlmDl", "committedDate": "2020-11-11T16:54:56Z", "type": "commit"}, {"oid": "560a3956edc18ba316655d3cc1ff7e5df8f4164a", "url": "https://github.com/TownyAdvanced/Towny/commit/560a3956edc18ba316655d3cc1ff7e5df8f4164a", "message": "Whitespace changes", "committedDate": "2020-11-11T16:56:21Z", "type": "commit"}, {"oid": "efc4fa773ad46fd3e66cd2478a3df09783dc0e06", "url": "https://github.com/TownyAdvanced/Towny/commit/efc4fa773ad46fd3e66cd2478a3df09783dc0e06", "message": "Tidy-up Commit.\n\n- Remove unused import.\n- Rename a new config setting.\n- Reword a bit of the new config settings.\n- Spiff up the english.yml's new language strings.\n  - Use double ' when it is needed.\n- Remove whitespacing changes.\n\nChange-Id: I8eea0b3f3113e0b6ee6c140db8016d53ee211c0d", "committedDate": "2020-11-11T16:57:08Z", "type": "commit"}, {"oid": "d4a73650be850a38dd41f5a1e239923510b77dc7", "url": "https://github.com/TownyAdvanced/Towny/commit/d4a73650be850a38dd41f5a1e239923510b77dc7", "message": "- Minor change to language strings' colours.", "committedDate": "2020-11-11T17:11:17Z", "type": "commit"}]}