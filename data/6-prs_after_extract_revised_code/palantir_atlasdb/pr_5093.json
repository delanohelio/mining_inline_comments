{"pr_number": 5093, "pr_title": "add initializeAsync for Db implementations", "pr_createdAt": "2020-11-03T01:47:21Z", "pr_url": "https://github.com/palantir/atlasdb/pull/5093", "timeline": [{"oid": "c282f9d439a4ff8b0fa43aa9589cc87752f94727", "url": "https://github.com/palantir/atlasdb/commit/c282f9d439a4ff8b0fa43aa9589cc87752f94727", "message": "add initializeAsync for Db implementations", "committedDate": "2020-11-03T01:42:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0MTYwNg==", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r525541606", "bodyText": "Could we use AtlasDbConstants.DEFAULT_INITIALIZE_ASYNC instead of false here (and other places in this PR where we used false)?", "author": "sudiksha27", "createdAt": "2020-11-17T21:38:42Z", "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/timestamp/InDbTimestampBoundStore.java", "diffHunk": "@@ -53,25 +74,50 @@ public InDbTimestampBoundStore(ConnectionManager connManager, TableReference tim\n         this(connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, EMPTY_TABLE_PREFIX));\n     }\n \n-    public static InDbTimestampBoundStore create(ConnectionManager connManager, TableReference timestampTable) {\n+    public static TimestampBoundStore create(ConnectionManager connManager, TableReference timestampTable) {\n         return InDbTimestampBoundStore.create(connManager, timestampTable, EMPTY_TABLE_PREFIX);\n     }\n \n-    public static InDbTimestampBoundStore create(\n+    public static TimestampBoundStore create(\n+            ConnectionManager connManager, TableReference timestampTable, boolean initializeAsync) {\n+        return InDbTimestampBoundStore.create(connManager, timestampTable, EMPTY_TABLE_PREFIX, initializeAsync);\n+    }\n+\n+    public static TimestampBoundStore create(\n             ConnectionManager connManager, TableReference timestampTable, String tablePrefixString) {\n-        return createWithStrategy(connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, tablePrefixString));\n+        return createWithStrategy(\n+                connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, tablePrefixString), false);\n+    }", "originalCommit": "c282f9d439a4ff8b0fa43aa9589cc87752f94727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d80d111b257fdafbb109b7d6836812e33fe2a2ff", "chunk": "diff --git a/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/timestamp/InDbTimestampBoundStore.java b/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/timestamp/InDbTimestampBoundStore.java\nindex a84bf8e78d..c3c4f071fe 100644\n--- a/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/timestamp/InDbTimestampBoundStore.java\n+++ b/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/timestamp/InDbTimestampBoundStore.java\n\n@@ -86,7 +87,7 @@ public class InDbTimestampBoundStore implements TimestampBoundStore {\n     public static TimestampBoundStore create(\n             ConnectionManager connManager, TableReference timestampTable, String tablePrefixString) {\n         return createWithStrategy(\n-                connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, tablePrefixString), false);\n+                connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, tablePrefixString), AtlasDbConstants.DEFAULT_INITIALIZE_ASYNC);\n     }\n \n     public static TimestampBoundStore create(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MTIwMw==", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r525551203", "bodyText": "Would it make sense to push other public members of DbKvs up? I am not sure if we should be limiting the DbKvs api but I may be missing something.", "author": "sudiksha27", "createdAt": "2020-11-17T21:56:38Z", "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKeyValueService.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.keyvalue.dbkvs.impl;\n+\n+import com.palantir.atlasdb.keyvalue.api.KeyValueService;\n+import com.palantir.processors.AutoDelegate;\n+\n+@AutoDelegate\n+public interface DbKeyValueService extends KeyValueService {\n+\n+    String getTablePrefix();", "originalCommit": "c282f9d439a4ff8b0fa43aa9589cc87752f94727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU1MDEwNg==", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r526550106", "bodyText": "I looked at the usage of the public members internally, and the only one used that I found was checkDatabaseVersion, but that was already done through casting of the object to DbKvs.", "author": "rzpt", "createdAt": "2020-11-19T02:24:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MTIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "6e4fde26a7f2bb410d90bd30b36d60b36c9a41ce", "chunk": "diff --git a/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKeyValueService.java b/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKeyValueService.java\nindex 2c97069405..a12d9657b5 100644\n--- a/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKeyValueService.java\n+++ b/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKeyValueService.java\n\n@@ -21,6 +21,5 @@ import com.palantir.processors.AutoDelegate;\n \n @AutoDelegate\n public interface DbKeyValueService extends KeyValueService {\n-\n     String getTablePrefix();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MTY1NA==", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r525551654", "bodyText": "Same as above: Can we use AtlasDbConstants.DEFAULT_INITIALIZE_ASYNC?", "author": "sudiksha27", "createdAt": "2020-11-17T21:57:26Z", "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ConnectionManagerAwareDbKvs.java", "diffHunk": "@@ -33,15 +33,20 @@\n \n // This class should be removed and replaced by DbKvs when InDbTimestampStore depends directly on DbKvs\n public final class ConnectionManagerAwareDbKvs extends ForwardingKeyValueService {\n-    private final DbKvs kvs;\n+    private final DbKeyValueService kvs;\n     private final ConnectionManager connManager;\n     private final SqlConnectionSupplier sqlConnectionSupplier;\n \n     public static ConnectionManagerAwareDbKvs create(DbKeyValueServiceConfig config) {\n+        return create(config, false);\n+    }", "originalCommit": "c282f9d439a4ff8b0fa43aa9589cc87752f94727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d80d111b257fdafbb109b7d6836812e33fe2a2ff", "chunk": "diff --git a/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ConnectionManagerAwareDbKvs.java b/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ConnectionManagerAwareDbKvs.java\nindex bb13812b2d..06194b33e3 100644\n--- a/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ConnectionManagerAwareDbKvs.java\n+++ b/atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ConnectionManagerAwareDbKvs.java\n\n@@ -38,7 +39,7 @@ public final class ConnectionManagerAwareDbKvs extends ForwardingKeyValueService\n     private final SqlConnectionSupplier sqlConnectionSupplier;\n \n     public static ConnectionManagerAwareDbKvs create(DbKeyValueServiceConfig config) {\n-        return create(config, false);\n+        return create(config, AtlasDbConstants.DEFAULT_INITIALIZE_ASYNC);\n     }\n \n     public static ConnectionManagerAwareDbKvs create(DbKeyValueServiceConfig config, boolean initializeAsync) {\n"}}, {"oid": "d80d111b257fdafbb109b7d6836812e33fe2a2ff", "url": "https://github.com/palantir/atlasdb/commit/d80d111b257fdafbb109b7d6836812e33fe2a2ff", "message": "replace default value with DEFAULT_INITIALIZE_ASYNC", "committedDate": "2020-11-19T02:26:58Z", "type": "commit"}, {"oid": "a90a2215f719cc39c4f106acd6931a0d7335182f", "url": "https://github.com/palantir/atlasdb/commit/a90a2215f719cc39c4f106acd6931a0d7335182f", "message": "format", "committedDate": "2020-11-19T02:29:55Z", "type": "commit"}, {"oid": "c4400a4cb00cef4d36f3ee77d2775f6b67dbf1cb", "url": "https://github.com/palantir/atlasdb/commit/c4400a4cb00cef4d36f3ee77d2775f6b67dbf1cb", "message": "Merge remote-tracking branch 'origin/develop' into initialize-async-db", "committedDate": "2020-11-23T18:22:19Z", "type": "commit"}, {"oid": "49e1b7672cf84fd080ad4133867dc7f52d19a62d", "url": "https://github.com/palantir/atlasdb/commit/49e1b7672cf84fd080ad4133867dc7f52d19a62d", "message": "checkstyle", "committedDate": "2020-11-23T20:06:17Z", "type": "commit"}, {"oid": "6e4fde26a7f2bb410d90bd30b36d60b36c9a41ce", "url": "https://github.com/palantir/atlasdb/commit/6e4fde26a7f2bb410d90bd30b36d60b36c9a41ce", "message": "Remove extra line", "committedDate": "2020-11-24T17:49:24Z", "type": "commit"}, {"oid": "a23dce1806b4b602081247bdc1dd249dde58fc4b", "url": "https://github.com/palantir/atlasdb/commit/a23dce1806b4b602081247bdc1dd249dde58fc4b", "message": "Add generated changelog entries", "committedDate": "2020-11-24T17:49:24Z", "type": "commit"}, {"oid": "196697ad7af9849a03809e5160551704b3b58aa7", "url": "https://github.com/palantir/atlasdb/commit/196697ad7af9849a03809e5160551704b3b58aa7", "message": "Add generated changelog entries", "committedDate": "2020-11-24T17:49:24Z", "type": "commit"}]}