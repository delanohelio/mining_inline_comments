{"pr_number": 4837, "pr_title": "[PD$-110002] Part 2: Economising Snapshot Transaction commitWrites() Timers", "pr_createdAt": "2020-06-15T17:50:26Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4837", "timeline": [{"oid": "38d2ea9fb59127be88de56b5b05b20dc7656aea6", "url": "https://github.com/palantir/atlasdb/commit/38d2ea9fb59127be88de56b5b05b20dc7656aea6", "message": "Tracing only for certain sections", "committedDate": "2020-06-15T17:41:53Z", "type": "commit"}, {"oid": "918c617f1d9aa2034dbcf3c2aa6640ee565df423", "url": "https://github.com/palantir/atlasdb/commit/918c617f1d9aa2034dbcf3c2aa6640ee565df423", "message": "Add generated changelog entries", "committedDate": "2020-06-15T17:41:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxODY0Mg==", "url": "https://github.com/palantir/atlasdb/pull/4837#discussion_r440818642", "bodyText": "I think this comment, in isolation, is not that useful: I assume it is explaining why this is not timed, but outside of the context of this PR it doesn't really imply. Perhaps:\n// Not timed because TransactionService.putUnlessExists actually commits the transaction, and is timed", "author": "Jolyon-S", "createdAt": "2020-06-16T12:42:22Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java", "diffHunk": "@@ -1700,28 +1703,33 @@ private void commitWrites(TransactionService transactionService) {\n                 // We check the pre-commit conditions first since they may operate similarly to read write conflict\n                 // handling - we should check lock validity last to ensure that sweep hasn't affected the checks.\n                 timedAndTraced(\"userPreCommitCondition\", () -> throwIfPreCommitConditionInvalid(commitTimestamp));\n-                timedAndTraced(\"preCommitLockCheck\", () -> throwIfImmutableTsOrCommitLocksExpired(commitLocksToken));\n+                traced(\"preCommitLockCheck\", () -> throwIfImmutableTsOrCommitLocksExpired(commitLocksToken));\n \n-                timedAndTraced(\"commitPutCommitTs\",\n+                // TransactionService.putUnlessExists: actually commits the transaction", "originalCommit": "918c617f1d9aa2034dbcf3c2aa6640ee565df423", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyNzAzNw==", "url": "https://github.com/palantir/atlasdb/pull/4837#discussion_r441027037", "bodyText": "That's a fair point. Makes sense", "author": "jeremyk-91", "createdAt": "2020-06-16T17:38:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxODY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "92bc1079b01857e28cfa43a676ed1b6287fe9b8d", "chunk": "diff --git a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\nindex 7c0849e1d0..909d90991d 100644\n--- a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n+++ b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n\n@@ -1703,9 +1703,12 @@ public class SnapshotTransaction extends AbstractTransaction implements Constrai\n                 // We check the pre-commit conditions first since they may operate similarly to read write conflict\n                 // handling - we should check lock validity last to ensure that sweep hasn't affected the checks.\n                 timedAndTraced(\"userPreCommitCondition\", () -> throwIfPreCommitConditionInvalid(commitTimestamp));\n+\n+                // Not timed, because this just calls ConjureTimelockServiceBlocking.refreshLockLeases, and that is\n+                // timed.\n                 traced(\"preCommitLockCheck\", () -> throwIfImmutableTsOrCommitLocksExpired(commitLocksToken));\n \n-                // TransactionService.putUnlessExists: actually commits the transaction\n+                // Not timed, because this just calls TransactionService.putUnlessExists, and that is timed.\n                 traced(\"commitPutCommitTs\",\n                         () -> putCommitTimestamp(commitTimestamp, commitLocksToken, transactionService));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgyMDY5Nw==", "url": "https://github.com/palantir/atlasdb/pull/4837#discussion_r440820697", "bodyText": "You've mentioned:\n\"refreshing commit locks: consider ConjureTimelockServiceBlocking.refreshLockLeases\"\nin the changelog, but I don't see a comment here in the code (where you have for others that are no longer timed). Is it perhaps adding a comment?", "author": "Jolyon-S", "createdAt": "2020-06-16T12:45:37Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java", "diffHunk": "@@ -1700,28 +1703,33 @@ private void commitWrites(TransactionService transactionService) {\n                 // We check the pre-commit conditions first since they may operate similarly to read write conflict\n                 // handling - we should check lock validity last to ensure that sweep hasn't affected the checks.\n                 timedAndTraced(\"userPreCommitCondition\", () -> throwIfPreCommitConditionInvalid(commitTimestamp));\n-                timedAndTraced(\"preCommitLockCheck\", () -> throwIfImmutableTsOrCommitLocksExpired(commitLocksToken));\n+                traced(\"preCommitLockCheck\", () -> throwIfImmutableTsOrCommitLocksExpired(commitLocksToken));", "originalCommit": "918c617f1d9aa2034dbcf3c2aa6640ee565df423", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyNzM0OQ==", "url": "https://github.com/palantir/atlasdb/pull/4837#discussion_r441027349", "bodyText": "Yep, I'll add one. I think I left this out as I thought it was obvious, but probably worth doing for the sake of completeness", "author": "jeremyk-91", "createdAt": "2020-06-16T17:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgyMDY5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "92bc1079b01857e28cfa43a676ed1b6287fe9b8d", "chunk": "diff --git a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\nindex 7c0849e1d0..909d90991d 100644\n--- a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n+++ b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n\n@@ -1703,9 +1703,12 @@ public class SnapshotTransaction extends AbstractTransaction implements Constrai\n                 // We check the pre-commit conditions first since they may operate similarly to read write conflict\n                 // handling - we should check lock validity last to ensure that sweep hasn't affected the checks.\n                 timedAndTraced(\"userPreCommitCondition\", () -> throwIfPreCommitConditionInvalid(commitTimestamp));\n+\n+                // Not timed, because this just calls ConjureTimelockServiceBlocking.refreshLockLeases, and that is\n+                // timed.\n                 traced(\"preCommitLockCheck\", () -> throwIfImmutableTsOrCommitLocksExpired(commitLocksToken));\n \n-                // TransactionService.putUnlessExists: actually commits the transaction\n+                // Not timed, because this just calls TransactionService.putUnlessExists, and that is timed.\n                 traced(\"commitPutCommitTs\",\n                         () -> putCommitTimestamp(commitTimestamp, commitLocksToken, transactionService));\n \n"}}, {"oid": "92bc1079b01857e28cfa43a676ed1b6287fe9b8d", "url": "https://github.com/palantir/atlasdb/commit/92bc1079b01857e28cfa43a676ed1b6287fe9b8d", "message": "CR: shore up explanations", "committedDate": "2020-06-16T17:39:39Z", "type": "commit"}]}