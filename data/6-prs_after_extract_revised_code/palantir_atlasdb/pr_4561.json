{"pr_number": 4561, "pr_title": "[Conjure Java Runtime] Part 26: Story of Thanatosis (Removing AtlasDB-Feign Entirely)", "pr_createdAt": "2020-02-11T11:44:37Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4561", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MTY4Ng==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r377591686", "bodyText": "I haven't read the PR, but we need to make sure we don't miss the code in ExperimentRunningProxy:\nthis.refreshingExperimentalServiceSupplier = Suppliers.memoizeWithExpiration(\n                experimentalServiceSupplier::get, CLIENT_REFRESH_INTERVAL.toMinutes(), TimeUnit.MINUTES);  \n\nWithout this we loose the 30 minute client reload thing, meaning we'll get the lockups back again.", "author": "jkozlowski", "createdAt": "2020-02-11T11:59:15Z", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java", "diffHunk": "@@ -56,54 +51,24 @@ private AtlasDbHttpClients() {\n             ServerListConfig serverListConfig,\n             Class<T> type,\n             AuxiliaryRemotingParameters parameters) {\n-        return createExperimentallyWithFallback(\n-                metricsManager,\n-                () -> ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithFailover(\n-                        serverListConfig, type, parameters),\n-                () -> AtlasDbFeignTargetFactory.DEFAULT.createProxyWithFailover(serverListConfig, type, parameters),\n-                type,\n-                parameters);\n+        return VersionSelectingClients.instrumentWithClientVersionTag(", "originalCommit": "466b1ab9f8afd17bdb73fde812265b967867d112", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "chunk": "diff --git a/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java b/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java\nindex 831036e2d1..bc7034a8c8 100644\n--- a/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java\n+++ b/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java\n\n@@ -51,10 +56,13 @@ public final class AtlasDbHttpClients {\n             ServerListConfig serverListConfig,\n             Class<T> type,\n             AuxiliaryRemotingParameters parameters) {\n-        return VersionSelectingClients.instrumentWithClientVersionTag(\n-                metricsManager.getTaggedRegistry(),\n-                ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithFailover(serverListConfig, type, parameters),\n-                type);\n+        return createExperimentallyWithFallback(\n+                metricsManager,\n+                () -> ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithFailover(\n+                        serverListConfig, type, parameters),\n+                () -> AtlasDbFeignTargetFactory.DEFAULT.createProxyWithFailover(serverListConfig, type, parameters),\n+                type,\n+                parameters);\n     }\n \n     public static <T> T createLiveReloadingProxyWithFailover(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyNjU5MQ==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r380226591", "bodyText": "can we remove VersionSelectingClients? I don't think it's relevant anymore.", "author": "felixdesouza", "createdAt": "2020-02-17T14:54:29Z", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java", "diffHunk": "@@ -56,54 +55,26 @@ private AtlasDbHttpClients() {\n             ServerListConfig serverListConfig,\n             Class<T> type,\n             AuxiliaryRemotingParameters parameters) {\n-        return createExperimentallyWithFallback(\n-                metricsManager,\n-                () -> ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithFailover(\n-                        serverListConfig, type, parameters),\n-                () -> AtlasDbFeignTargetFactory.DEFAULT.createProxyWithFailover(serverListConfig, type, parameters),\n-                type,\n-                parameters);\n+        Supplier<T> clientFactory = () -> VersionSelectingClients.instrumentWithClientVersionTag(", "originalCommit": "efdf886718386734b8f873aeabe8f9a5059ff960", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "chunk": "diff --git a/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java b/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java\nindex ee4cd15ebc..bc7034a8c8 100644\n--- a/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java\n+++ b/atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java\n\n@@ -55,11 +56,13 @@ public final class AtlasDbHttpClients {\n             ServerListConfig serverListConfig,\n             Class<T> type,\n             AuxiliaryRemotingParameters parameters) {\n-        Supplier<T> clientFactory = () -> VersionSelectingClients.instrumentWithClientVersionTag(\n-                metricsManager.getTaggedRegistry(),\n-                ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithFailover(serverListConfig, type, parameters),\n-                type);\n-        return SelfRefreshingProxy.create(clientFactory, type);\n+        return createExperimentallyWithFallback(\n+                metricsManager,\n+                () -> ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithFailover(\n+                        serverListConfig, type, parameters),\n+                () -> AtlasDbFeignTargetFactory.DEFAULT.createProxyWithFailover(serverListConfig, type, parameters),\n+                type,\n+                parameters);\n     }\n \n     public static <T> T createLiveReloadingProxyWithFailover(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyNjkyMg==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r380226922", "bodyText": "Nice, in my hack branch, I have the same thing, although a bit condensed, it's just the Suppliers.memoizeWithExpiration piece etc.", "author": "felixdesouza", "createdAt": "2020-02-17T14:54:59Z", "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/SelfRefreshingProxy.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.time.Duration;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.base.Suppliers;\n+import com.google.common.reflect.AbstractInvocationHandler;\n+\n+/**\n+ * Proxy that creates a new underlying instance on the first request after a specified amount of time has elapsed on\n+ * the existing instance. Once the refresh interval has expired, a new instance is not guaranteed to be created until\n+ * a method is invoked on the proxy.\n+ */\n+public class SelfRefreshingProxy<T> extends AbstractInvocationHandler {", "originalCommit": "efdf886718386734b8f873aeabe8f9a5059ff960", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "chunk": "diff --git a/atlasdb-commons/src/main/java/com/palantir/common/proxy/SelfRefreshingProxy.java b/atlasdb-commons/src/main/java/com/palantir/common/proxy/SelfRefreshingProxy.java\ndeleted file mode 100644\nindex 2132a6e07a..0000000000\n--- a/atlasdb-commons/src/main/java/com/palantir/common/proxy/SelfRefreshingProxy.java\n+++ /dev/null\n\n@@ -1,67 +0,0 @@\n-/*\n- * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.palantir.common.proxy;\n-\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Proxy;\n-import java.time.Duration;\n-import java.util.concurrent.TimeUnit;\n-import java.util.function.Supplier;\n-\n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.base.Suppliers;\n-import com.google.common.reflect.AbstractInvocationHandler;\n-\n-/**\n- * Proxy that creates a new underlying instance on the first request after a specified amount of time has elapsed on\n- * the existing instance. Once the refresh interval has expired, a new instance is not guaranteed to be created until\n- * a method is invoked on the proxy.\n- */\n-public class SelfRefreshingProxy<T> extends AbstractInvocationHandler {\n-    private static final Duration REFRESH_INTERVAL = Duration.ofMinutes(30);\n-\n-    private final Supplier<T> proxySupplier;\n-\n-    private SelfRefreshingProxy(Supplier<T> proxy) {\n-        this.proxySupplier = proxy;\n-    }\n-\n-    public static <T> T create(Supplier<T> proxyFactory, Class<T> clazz) {\n-        return create(proxyFactory, clazz, REFRESH_INTERVAL);\n-    }\n-\n-    @VisibleForTesting\n-    @SuppressWarnings(\"unchecked\")\n-    static <T> T create(Supplier<T> proxyFactory, Class<T> clazz, Duration refreshInterval) {\n-        SelfRefreshingProxy<T> proxy = new SelfRefreshingProxy<>(Suppliers.memoizeWithExpiration(\n-                proxyFactory::get, refreshInterval.toNanos(), TimeUnit.NANOSECONDS));\n-        return (T) Proxy.newProxyInstance(\n-                clazz.getClassLoader(),\n-                new Class[] {clazz},\n-                proxy);\n-    }\n-\n-    @Override\n-    protected Object handleInvocation(Object proxy, Method method, Object[] args) throws Throwable {\n-        try {\n-            return method.invoke(proxySupplier.get(), args);\n-        } catch (InvocationTargetException e) {\n-            throw e.getTargetException();\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyNzgwNw==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r380227807", "bodyText": "can you go into a bit more detail as to why it has to be done this way?", "author": "felixdesouza", "createdAt": "2020-02-17T14:56:28Z", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1087,11 +1093,14 @@ private static LockAndTimestampServices createRawLeaderServices(\n                     } catch (ClientErrorException e) {\n                         useLocalServicesFuture.complete(false);\n                         return;\n-                    } catch (Throwable e) {\n-                        if (--logAfter == 0) {\n-                            log.warn(\"Failed to read remote timestamp server ID\", e);\n-                            logAfter = LOGGING_INTERVAL;\n+                    } catch (UnknownRemoteException e) {\n+                        if (400 <= e.getStatus() && e.getStatus() <= 499) {", "originalCommit": "efdf886718386734b8f873aeabe8f9a5059ff960", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ0MjUzNA==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r383442534", "bodyText": "Sure, added a comment. Basically it looks like the treatment of an unmapped 4xx has changed: this was a ClientErrorException in the Feign world, but looks like that has been changed to be a UnknownRemoteException in the CJR world.", "author": "jeremyk-91", "createdAt": "2020-02-24T18:40:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyNzgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "chunk": "diff --git a/atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java b/atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java\nindex 1c417c6e8f..47f2a90b31 100644\n--- a/atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java\n+++ b/atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java\n\n@@ -1093,14 +1094,11 @@ public abstract class TransactionManagers {\n                     } catch (ClientErrorException e) {\n                         useLocalServicesFuture.complete(false);\n                         return;\n-                    } catch (UnknownRemoteException e) {\n-                        if (400 <= e.getStatus() && e.getStatus() <= 499) {\n-                            useLocalServicesFuture.complete(false);\n-                            return;\n-                        }\n-                        logAfter = logFailureToReadRemoteTimestampServerId(logAfter, e);\n                     } catch (Throwable e) {\n-                        logAfter = logFailureToReadRemoteTimestampServerId(logAfter, e);\n+                        if (--logAfter == 0) {\n+                            log.warn(\"Failed to read remote timestamp server ID\", e);\n+                            logAfter = LOGGING_INTERVAL;\n+                        }\n                     }\n                     Uninterruptibles.sleepUninterruptibly(1, TimeUnit.SECONDS);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyODc5MA==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r380228790", "bodyText": "I don't think this is true? still feels like you can have something that gets deserialised into a RemotingClientConfig no?", "author": "felixdesouza", "createdAt": "2020-02-17T14:58:14Z", "path": "atlasdb-remoting-api/src/main/java/com/palantir/atlasdb/config/AuxiliaryRemotingParameters.java", "diffHunk": "@@ -48,7 +48,11 @@ default boolean shouldSupportBlockingOperations() {\n         return true;\n     }\n \n+    /**\n+     * @deprecated Conjure is now always used, and supplying alternative configs is not possible.", "originalCommit": "efdf886718386734b8f873aeabe8f9a5059ff960", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIzNTQ5MA==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r380235490", "bodyText": "I think we should go through and purge the config stuff properly. Deprecations don't really do anything if we never remove them.\nI also don't think we want to deprecate this anyway. Since if we do need to open up other configurations i.e. if we want to add some configurability for our own testing purposes, this is the right place to do it.\nStarting from the config RemotingClientConfig, we can delete the two properties, and if we're super concerned we can do what we did in AtlasDbConfig, where as a class level annotation, we do @JsonIgnoreProperties({\"maximumConjureRemotingProbability\", \"enableLegacyClientFallback\"} and then we delete those properties.\nWe should probably add a RemotingClientConfigs.DEFAULT configuration, and then have the old thing RemotingClientConfigs.ALWAYS_USE_CONJURE refer to that, and change all of our references to that.\nThen we can propagate the deletion of the java properties everywhere (i.e. and continue to get rid of VersionSelectingClients.", "author": "felixdesouza", "createdAt": "2020-02-17T15:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyODc5MA=="}], "type": "inlineReview", "revised_code": {"commit": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "chunk": "diff --git a/atlasdb-remoting-api/src/main/java/com/palantir/atlasdb/config/AuxiliaryRemotingParameters.java b/atlasdb-remoting-api/src/main/java/com/palantir/atlasdb/config/AuxiliaryRemotingParameters.java\nindex 67d4a7b606..f931ccf148 100644\n--- a/atlasdb-remoting-api/src/main/java/com/palantir/atlasdb/config/AuxiliaryRemotingParameters.java\n+++ b/atlasdb-remoting-api/src/main/java/com/palantir/atlasdb/config/AuxiliaryRemotingParameters.java\n\n@@ -48,11 +48,7 @@ public interface AuxiliaryRemotingParameters {\n         return true;\n     }\n \n-    /**\n-     * @deprecated Conjure is now always used, and supplying alternative configs is not possible.\n-     */\n     @Value.Default\n-    @Deprecated\n     default Supplier<RemotingClientConfig> remotingClientConfig() {\n         return () -> RemotingClientConfigs.ALWAYS_USE_CONJURE;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyOTA5NQ==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r380229095", "bodyText": "??", "author": "felixdesouza", "createdAt": "2020-02-17T14:58:44Z", "path": "timelock-agent/src/test/java/com/palantir/timelock/paxos/LeaderPingHealthCheckTest.java", "diffHunk": "@@ -188,7 +187,7 @@ private static HealthCheckPinger getMockOfPingableLeaderWherePingReturns(Set<Cli\n \n     private static HealthCheckPinger getMockOfPingableLeaderWherePingThrows() {\n         HealthCheckPinger mockLeader = mock(HealthCheckPinger.class);\n-        when(mockLeader.apply(ALL_CLIENTS)).thenThrow(mock(AtlasDbRemoteException.class));\n+        when(mockLeader.apply(ALL_CLIENTS)).thenThrow(mock(IllegalStateException.class));", "originalCommit": "efdf886718386734b8f873aeabe8f9a5059ff960", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQxOTc4Mg==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r383419782", "bodyText": "Yep, sorry about this \ud83d\ude1e", "author": "jeremyk-91", "createdAt": "2020-02-24T17:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyOTA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "chunk": "diff --git a/timelock-agent/src/test/java/com/palantir/timelock/paxos/LeaderPingHealthCheckTest.java b/timelock-agent/src/test/java/com/palantir/timelock/paxos/LeaderPingHealthCheckTest.java\nindex 84c70df37d..41ce8db5e0 100644\n--- a/timelock-agent/src/test/java/com/palantir/timelock/paxos/LeaderPingHealthCheckTest.java\n+++ b/timelock-agent/src/test/java/com/palantir/timelock/paxos/LeaderPingHealthCheckTest.java\n\n@@ -187,7 +188,7 @@ public class LeaderPingHealthCheckTest {\n \n     private static HealthCheckPinger getMockOfPingableLeaderWherePingThrows() {\n         HealthCheckPinger mockLeader = mock(HealthCheckPinger.class);\n-        when(mockLeader.apply(ALL_CLIENTS)).thenThrow(mock(IllegalStateException.class));\n+        when(mockLeader.apply(ALL_CLIENTS)).thenThrow(mock(AtlasDbRemoteException.class));\n         return mockLeader;\n     }\n }\n"}}, {"oid": "a5dca24451bf4cebb8936c10dd161af5f00e4068", "url": "https://github.com/palantir/atlasdb/commit/a5dca24451bf4cebb8936c10dd161af5f00e4068", "message": "Remove atlasdb-feign", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "a43266d0b5d33fb1d432a89d0cd2b1b19686211b", "url": "https://github.com/palantir/atlasdb/commit/a43266d0b5d33fb1d432a89d0cd2b1b19686211b", "message": "Some fixes", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "3e65089b73b911f11449ff8858f2fb452ba0c480", "url": "https://github.com/palantir/atlasdb/commit/3e65089b73b911f11449ff8858f2fb452ba0c480", "message": "Fix accidental compile break", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "8e45df7ebd01fe56861bbdaec81617f9b87fc9c2", "url": "https://github.com/palantir/atlasdb/commit/8e45df7ebd01fe56861bbdaec81617f9b87fc9c2", "message": "Fix the build", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "360fa74b19a8ad28aca6ed685fb1655919773b67", "url": "https://github.com/palantir/atlasdb/commit/360fa74b19a8ad28aca6ed685fb1655919773b67", "message": "Fix broken tests", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "b7d5a027d5516840f58ee21f93f50dcc8d049cb4", "url": "https://github.com/palantir/atlasdb/commit/b7d5a027d5516840f58ee21f93f50dcc8d049cb4", "message": "Baseline", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "cce2b36dbb31acae6314c3c4ed55194a3e71f87f", "url": "https://github.com/palantir/atlasdb/commit/cce2b36dbb31acae6314c3c4ed55194a3e71f87f", "message": "Add generated changelog entries", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "87308547a8c6b4869bde35827fe431035bddb64f", "url": "https://github.com/palantir/atlasdb/commit/87308547a8c6b4869bde35827fe431035bddb64f", "message": "Replacement for Exp Running Proxy", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "4cc4efc63da5fe59cd2a6afa7ce1863320f68b37", "url": "https://github.com/palantir/atlasdb/commit/4cc4efc63da5fe59cd2a6afa7ce1863320f68b37", "message": "Unwrap ITEs", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "16e4e84123197ba2f511be44de3f5b4d4ee0710f", "url": "https://github.com/palantir/atlasdb/commit/16e4e84123197ba2f511be44de3f5b4d4ee0710f", "message": "bla", "committedDate": "2020-02-24T18:40:35Z", "type": "commit"}, {"oid": "16e4e84123197ba2f511be44de3f5b4d4ee0710f", "url": "https://github.com/palantir/atlasdb/commit/16e4e84123197ba2f511be44de3f5b4d4ee0710f", "message": "bla", "committedDate": "2020-02-24T18:40:35Z", "type": "forcePushed"}, {"oid": "af136ef5a8a446fcacf24a1b4721d8a313ca65f7", "url": "https://github.com/palantir/atlasdb/commit/af136ef5a8a446fcacf24a1b4721d8a313ca65f7", "message": "CR: simple changes", "committedDate": "2020-02-24T19:15:12Z", "type": "commit"}, {"oid": "a15bb06a3350999faa9c4c30059dbbba3ecfd3df", "url": "https://github.com/palantir/atlasdb/commit/a15bb06a3350999faa9c4c30059dbbba3ecfd3df", "message": "Remove config options", "committedDate": "2020-03-10T17:09:45Z", "type": "commit"}, {"oid": "0150b62dd7016c19322cbdf10b812bf650129213", "url": "https://github.com/palantir/atlasdb/commit/0150b62dd7016c19322cbdf10b812bf650129213", "message": "Update RCC", "committedDate": "2020-03-10T17:14:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4MDY1Nw==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r390480657", "bodyText": "iirc, instrumentation has always been separate from creating clients. i.e. ServiceCreator and in timelock (before and after my changes). Unless they're all changed, we're going to double report, and likely we'll have wrong metrics on our dashboards.", "author": "felixdesouza", "createdAt": "2020-03-10T17:19:25Z", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java", "diffHunk": "@@ -83,11 +87,23 @@ private AtlasDbHttpClients() {\n             ServerListConfig serverListConfig,\n             Class<T> type,\n             AuxiliaryRemotingParameters parameters) {\n-        Supplier<T> clientFactory = () -> VersionSelectingClients.instrumentWithClientVersionTag(\n+        Supplier<T> clientFactory = () -> instrument(\n                 metricsManager.getTaggedRegistry(),\n                 ConjureJavaRuntimeTargetFactory.DEFAULT.createProxyWithQuickFailoverForTesting(\n                         serverListConfig, type, parameters),\n                 type);\n         return SelfRefreshingProxy.create(clientFactory, type);\n     }\n+\n+    private static <T> T instrument(", "originalCommit": "a15bb06a3350999faa9c4c30059dbbba3ecfd3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4NTQ3Mw==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r390485473", "bodyText": "good catch!", "author": "jeremyk-91", "createdAt": "2020-03-10T17:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4MDY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUxNDU4MQ==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r390514581", "bodyText": "Discussed offline: This is messy, because just removing will mean that we lose some metrics - not true that all ServiceCreator created things are instrumented. Will do as a follow up to this PR.", "author": "jeremyk-91", "createdAt": "2020-03-10T18:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4MDY1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4MTgwNg==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r390481806", "bodyText": "note to self/you: you'll have to change the places where this is referred to explicitly namely big internal product and it's related projects.", "author": "felixdesouza", "createdAt": "2020-03-10T17:21:11Z", "path": "atlasdb-remoting-api/src/main/java/com/palantir/atlasdb/config/RemotingClientConfigs.java", "diffHunk": "@@ -21,8 +21,5 @@ private RemotingClientConfigs() {\n         // Constants\n     }\n \n-    public static final RemotingClientConfig ALWAYS_USE_CONJURE = ImmutableRemotingClientConfig.builder()", "originalCommit": "a15bb06a3350999faa9c4c30059dbbba3ecfd3df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4NTY2MA==", "url": "https://github.com/palantir/atlasdb/pull/4561#discussion_r390485660", "bodyText": "Yeah, that's right. Thanks", "author": "jeremyk-91", "createdAt": "2020-03-10T17:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ4MTgwNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0e0e951887f161c87582b81f1d0f298420f966e2", "url": "https://github.com/palantir/atlasdb/commit/0e0e951887f161c87582b81f1d0f298420f966e2", "message": "kein tags", "committedDate": "2020-03-10T17:52:16Z", "type": "commit"}, {"oid": "a9fe2103e512a7e99bcc01f7fa5ccf18ae821333", "url": "https://github.com/palantir/atlasdb/commit/a9fe2103e512a7e99bcc01f7fa5ccf18ae821333", "message": "Merge branch 'develop' into jkong/cjr-burn", "committedDate": "2020-03-10T18:09:41Z", "type": "commit"}, {"oid": "1454e935dc4caead33e821e5a6a294ded5eb04a8", "url": "https://github.com/palantir/atlasdb/commit/1454e935dc4caead33e821e5a6a294ded5eb04a8", "message": "Optimize imports", "committedDate": "2020-03-10T18:20:45Z", "type": "commit"}]}