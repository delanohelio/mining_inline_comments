{"pr_number": 4791, "pr_title": "Always send full last known version, including id.", "pr_createdAt": "2020-05-20T15:30:49Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4791", "timeline": [{"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7", "url": "https://github.com/palantir/atlasdb/commit/05e0a701d91721501b8d6b0c4badf70e4278bbc7", "message": "Always send full last known version, including id.", "committedDate": "2020-05-20T15:28:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEzMDQyNg==", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428130426", "bodyText": "Thinking about this a bit more: I think this is a change in behavior, in that every startTransactions call now will cause timelock to compute a snapshot, until we have an impl.", "author": "jkozlowski", "createdAt": "2020-05-20T16:03:36Z", "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -25,18 +25,17 @@\n @SuppressWarnings(\"FinalClass\") // mocks\n public class NoOpLockWatchEventCache implements LockWatchEventCache {\n     public static final LockWatchEventCache INSTANCE = new NoOpLockWatchEventCache();\n-    private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion\n-            .of(UUID.randomUUID(), Optional.empty());\n+    private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion.of(UUID.randomUUID(), 0L);\n     private static final TransactionsLockWatchEvents NONE = TransactionsLockWatchEvents.failure(\n-            LockWatchStateUpdate.snapshot(UUID.randomUUID(), 0L, ImmutableSet.of(), ImmutableSet.of()));\n+            LockWatchStateUpdate.snapshot(UUID.randomUUID(), -1L, ImmutableSet.of(), ImmutableSet.of()));\n \n     private NoOpLockWatchEventCache() {\n         // singleton\n     }\n \n     @Override\n-    public IdentifiedVersion lastKnownVersion() {\n-        return FAKE;\n+    public Optional<IdentifiedVersion> lastKnownVersion() {\n+        return Optional.empty();", "originalCommit": "05e0a701d91721501b8d6b0c4badf70e4278bbc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1MTcyMQ==", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428151721", "bodyText": "I guess snapshotting right now is cheap since there aren't actually going to be events, but this could lead to unintended consequences later on. It seems safer to return Optional.of(FAKE)? - you still take a snapshot when there's a leader election, but that's relatively uncommon", "author": "jeremyk-91", "createdAt": "2020-05-20T16:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEzMDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE2ODk4Ng==", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428168986", "bodyText": "Exactly, I think snapshotting is cheap so I shouldn't worry about it.", "author": "jkozlowski", "createdAt": "2020-05-20T17:00:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEzMDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3MDA1OA==", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428170058", "bodyText": "Returning FAKE is same as Optional.empty, see impl. So I don't mind, I'll revert it.", "author": "jkozlowski", "createdAt": "2020-05-20T17:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEzMDQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "baee023586125737893b6e70f8d5e6fe57318745", "chunk": "diff --git a/lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java b/lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java\nindex 01c0d93b44..67b474ab3c 100644\n--- a/lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java\n+++ b/lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java\n\n@@ -26,6 +26,7 @@ import com.google.common.collect.ImmutableSet;\n public class NoOpLockWatchEventCache implements LockWatchEventCache {\n     public static final LockWatchEventCache INSTANCE = new NoOpLockWatchEventCache();\n     private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion.of(UUID.randomUUID(), 0L);\n+    private static final Optional<IdentifiedVersion> FAKE_OPTIONAL_VERSION = Optional.of(FAKE);\n     private static final TransactionsLockWatchEvents NONE = TransactionsLockWatchEvents.failure(\n             LockWatchStateUpdate.snapshot(UUID.randomUUID(), -1L, ImmutableSet.of(), ImmutableSet.of()));\n \n"}}, {"oid": "baee023586125737893b6e70f8d5e6fe57318745", "url": "https://github.com/palantir/atlasdb/commit/baee023586125737893b6e70f8d5e6fe57318745", "message": "Use fake throughout.", "committedDate": "2020-05-20T17:03:56Z", "type": "commit"}, {"oid": "3b8140fffcdfbcf9cf3b2c11c9feaa1cba7b5ed6", "url": "https://github.com/palantir/atlasdb/commit/3b8140fffcdfbcf9cf3b2c11c9feaa1cba7b5ed6", "message": "Use Long.", "committedDate": "2020-05-20T17:07:30Z", "type": "commit"}, {"oid": "b37fd572cface42e51fefd3972ef4fd8c72c5bb6", "url": "https://github.com/palantir/atlasdb/commit/b37fd572cface42e51fefd3972ef4fd8c72c5bb6", "message": "Use Long.", "committedDate": "2020-05-20T17:09:42Z", "type": "commit"}, {"oid": "c816d5f23c6ff7ae4899396e216f99b98b9556fb", "url": "https://github.com/palantir/atlasdb/commit/c816d5f23c6ff7ae4899396e216f99b98b9556fb", "message": "Fix test.", "committedDate": "2020-05-21T11:36:38Z", "type": "commit"}]}