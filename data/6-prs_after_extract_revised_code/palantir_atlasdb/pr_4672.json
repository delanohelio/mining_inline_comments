{"pr_number": 4672, "pr_title": "[Timelock Partitioning/Perf] Reduce context switches", "pr_createdAt": "2020-03-25T16:47:36Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4672", "timeline": [{"oid": "13fb891790f2770d175e1705318bdca979dd128a", "url": "https://github.com/palantir/atlasdb/commit/13fb891790f2770d175e1705318bdca979dd128a", "message": "Refactor out latest round verifier so we can pass one in.", "committedDate": "2020-03-25T16:29:45Z", "type": "commit"}, {"oid": "33e3f0f97125db074675e1630f84d246f6c50fa5", "url": "https://github.com/palantir/atlasdb/commit/33e3f0f97125db074675e1630f84d246f6c50fa5", "message": "Wire up different latestRoundVerifier based on mode.", "committedDate": "2020-03-25T16:29:45Z", "type": "commit"}, {"oid": "e4231b139756888c0934948816f3a32d1d44f916", "url": "https://github.com/palantir/atlasdb/commit/e4231b139756888c0934948816f3a32d1d44f916", "message": "Async retrier uses direct executor for first attempt, and also for processing the result.", "committedDate": "2020-03-25T16:29:46Z", "type": "commit"}, {"oid": "b3e69be93c828a70614f6822e542c66f0d98bf88", "url": "https://github.com/palantir/atlasdb/commit/b3e69be93c828a70614f6822e542c66f0d98bf88", "message": "Happy case on the hot path does not knowingly switch threads up until the network client.", "committedDate": "2020-03-25T16:30:45Z", "type": "commit"}, {"oid": "c80c2a1706daaac8566b65b50ab97dccbbd25c56", "url": "https://github.com/palantir/atlasdb/commit/c80c2a1706daaac8566b65b50ab97dccbbd25c56", "message": "Silly bug.", "committedDate": "2020-03-25T18:15:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4MDM5NQ==", "url": "https://github.com/palantir/atlasdb/pull/4672#discussion_r398080395", "bodyText": "nit: should we remove the inner transformAsync as it should be unnecessary if we're getting from the supplier on the current thread?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Futures.transformAsync(Futures.submitAsync(supplier::get, MoreExecutors.directExecutor()),\n          \n          \n            \n                    return Futures.transformAsync(supplier.get(),", "author": "schlosna", "createdAt": "2020-03-25T18:31:26Z", "path": "leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java", "diffHunk": "@@ -53,20 +54,33 @@\n         return execute(supplier, maxAttempts);\n     }\n \n+    /*\n+    Threading model: Given the context of this class, it is likely that the first request will pass. Since this occurs\n+    in the hot path, we should probably avoid putting it on another thread to do what would be light work as we will\n+    pay for that in context switches.\n+\n+    In a similar vein to reduce context switches, when the supplier::get call returns, the processing should be fairly\n+    lightweight, so we should be able to do it in whatever thread ran/took control of the original supplier::get call,\n+    hence the usage of directExecutor.\n+\n+    If we do have to retry, then we're likely \"slow\" enough that we should give up the initial calling thread and\n+    offload the work onto a separate executor.\n+     */\n     private ListenableFuture<T> execute(Supplier<ListenableFuture<T>> supplier, int retriesRemaining) {\n-        return Futures.transformAsync(Futures.submitAsync(supplier::get, executionExecutor),\n+        return Futures.transformAsync(Futures.submitAsync(supplier::get, MoreExecutors.directExecutor()),", "originalCommit": "c80c2a1706daaac8566b65b50ab97dccbbd25c56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NzAzNA==", "url": "https://github.com/palantir/atlasdb/pull/4672#discussion_r398387034", "bodyText": "A good shout, thanks!", "author": "felixdesouza", "createdAt": "2020-03-26T08:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4MDM5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5ODYxOA==", "url": "https://github.com/palantir/atlasdb/pull/4672#discussion_r398398618", "bodyText": "Had to wrap the supplier so we don't throw but return failed futures, but I think it's fine.", "author": "felixdesouza", "createdAt": "2020-03-26T08:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4MDM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "923390da5e07553ae71b121b733493b9a87f3201", "chunk": "diff --git a/leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java b/leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java\nindex 820b55c61d..aff49dfbc3 100644\n--- a/leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java\n+++ b/leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java\n\n@@ -67,7 +67,7 @@ final class AsyncRetrier<T> {\n     offload the work onto a separate executor.\n      */\n     private ListenableFuture<T> execute(Supplier<ListenableFuture<T>> supplier, int retriesRemaining) {\n-        return Futures.transformAsync(Futures.submitAsync(supplier::get, MoreExecutors.directExecutor()),\n+        return Futures.transformAsync(supplier.get(),\n                 result -> {\n                     int newRetriesRemaining = retriesRemaining - 1;\n                     if (predicate.test(result) || newRetriesRemaining == 0) {\n"}}, {"oid": "923390da5e07553ae71b121b733493b9a87f3201", "url": "https://github.com/palantir/atlasdb/commit/923390da5e07553ae71b121b733493b9a87f3201", "message": "Update leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java\n\nCo-Authored-By: David Schlosnagle <schlosna@gmail.com>", "committedDate": "2020-03-26T08:20:30Z", "type": "commit"}, {"oid": "3f0bd08340f7b2305b56f16c7e61155171092f6e", "url": "https://github.com/palantir/atlasdb/commit/3f0bd08340f7b2305b56f16c7e61155171092f6e", "message": "Wrap supplier to catch any exceptions and convert them to failed futures.", "committedDate": "2020-03-26T08:40:37Z", "type": "commit"}, {"oid": "700fde87a484409014ac2bd3de0b67f10a0c6663", "url": "https://github.com/palantir/atlasdb/commit/700fde87a484409014ac2bd3de0b67f10a0c6663", "message": "Add generated changelog entries", "committedDate": "2020-03-26T08:40:37Z", "type": "commit"}]}