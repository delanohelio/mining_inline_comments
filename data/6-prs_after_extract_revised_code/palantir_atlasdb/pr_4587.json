{"pr_number": 4587, "pr_title": "[Timelock OOMs] Stop `PaxosQuorumChecker` cancellation", "pr_createdAt": "2020-02-19T15:57:33Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4587", "timeline": [{"oid": "4f74c2ff5f31b7f9a391ec740aabe7fea72bd82b", "url": "https://github.com/palantir/atlasdb/commit/4f74c2ff5f31b7f9a391ec740aabe7fea72bd82b", "message": "Pass BooleanSupplier everywhere to configure whether or not we should cancel remaining calls.", "committedDate": "2020-02-19T14:02:54Z", "type": "commit"}, {"oid": "f239954a04eebfff87bd792ac8582e7841a238e0", "url": "https://github.com/palantir/atlasdb/commit/f239954a04eebfff87bd792ac8582e7841a238e0", "message": "Wire the config through.", "committedDate": "2020-02-19T15:03:39Z", "type": "commit"}, {"oid": "7e1e73346ff2fdf6e5313cdc899f3746e138b506", "url": "https://github.com/palantir/atlasdb/commit/7e1e73346ff2fdf6e5313cdc899f3746e138b506", "message": "Ensure it's fully wired through.", "committedDate": "2020-02-19T15:21:44Z", "type": "commit"}, {"oid": "b9bb03dd0c4098d6d98a9124f004d17b547a9379", "url": "https://github.com/palantir/atlasdb/commit/b9bb03dd0c4098d6d98a9124f004d17b547a9379", "message": "Add generated changelog entries", "committedDate": "2020-02-19T15:21:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM3Mzg0MA==", "url": "https://github.com/palantir/atlasdb/pull/4587#discussion_r381373840", "bodyText": "nit: ok. I'd probably just not call this method if shouldCancel is false above, but this is fine.", "author": "jeremyk-91", "createdAt": "2020-02-19T16:06:45Z", "path": "leader-election-impl/src/main/java/com/palantir/paxos/PaxosQuorumChecker.java", "diffHunk": "@@ -249,9 +243,11 @@ private static boolean timedOut(Future<?> responseFuture) {\n     }\n \n     private static <SERVICE, RESPONSE extends PaxosResponse> void cancelOutstandingRequestsAfterTimeout(\n+            boolean shouldCancel,\n             List<Future<Map.Entry<SERVICE, RESPONSE>>> responseFutures) {\n+\n         boolean areAllRequestsComplete = responseFutures.stream().allMatch(Future::isDone);\n-        if (areAllRequestsComplete) {\n+        if (!shouldCancel || areAllRequestsComplete) {", "originalCommit": "b9bb03dd0c4098d6d98a9124f004d17b547a9379", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87181fdb88b13f312ddcf5aad1421a6f01abd3a6", "chunk": "diff --git a/leader-election-impl/src/main/java/com/palantir/paxos/PaxosQuorumChecker.java b/leader-election-impl/src/main/java/com/palantir/paxos/PaxosQuorumChecker.java\nindex 5add2b8d01..6307361cf6 100644\n--- a/leader-election-impl/src/main/java/com/palantir/paxos/PaxosQuorumChecker.java\n+++ b/leader-election-impl/src/main/java/com/palantir/paxos/PaxosQuorumChecker.java\n\n@@ -243,11 +245,10 @@ public final class PaxosQuorumChecker {\n     }\n \n     private static <SERVICE, RESPONSE extends PaxosResponse> void cancelOutstandingRequestsAfterTimeout(\n-            boolean shouldCancel,\n             List<Future<Map.Entry<SERVICE, RESPONSE>>> responseFutures) {\n \n         boolean areAllRequestsComplete = responseFutures.stream().allMatch(Future::isDone);\n-        if (!shouldCancel || areAllRequestsComplete) {\n+        if (areAllRequestsComplete) {\n             return;\n         }\n \n"}}, {"oid": "0c839448dc18a15d06e456a86b9025e9e40a5a60", "url": "https://github.com/palantir/atlasdb/commit/0c839448dc18a15d06e456a86b9025e9e40a5a60", "message": "No live reloading, and if we're in timelock just introduce a constant.", "committedDate": "2020-02-19T16:31:46Z", "type": "commit"}, {"oid": "87181fdb88b13f312ddcf5aad1421a6f01abd3a6", "url": "https://github.com/palantir/atlasdb/commit/87181fdb88b13f312ddcf5aad1421a6f01abd3a6", "message": "CR comments.", "committedDate": "2020-02-19T16:31:46Z", "type": "commit"}]}