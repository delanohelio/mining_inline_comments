{"pr_number": 4515, "pr_title": "[Timelock Partitioning] Part 50: Wire up multi leader paxos", "pr_createdAt": "2020-01-16T12:21:29Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4515", "timeline": [{"oid": "99b2fd06e8b2e704c84afbc365019bb5e0dfbae4", "url": "https://github.com/palantir/atlasdb/commit/99b2fd06e8b2e704c84afbc365019bb5e0dfbae4", "message": "Necessary changes to support multi leader pingers", "committedDate": "2020-01-16T13:04:06Z", "type": "commit"}, {"oid": "a07eb57ddf0eb083768576ab97778de472daf006", "url": "https://github.com/palantir/atlasdb/commit/a07eb57ddf0eb083768576ab97778de472daf006", "message": "Add config option for the paxos leader mode.", "committedDate": "2020-01-16T13:04:06Z", "type": "commit"}, {"oid": "1647fbf8c3e0b75afc70108599c21211204acad1", "url": "https://github.com/palantir/atlasdb/commit/1647fbf8c3e0b75afc70108599c21211204acad1", "message": "Wire the new stuff in.", "committedDate": "2020-01-16T13:04:06Z", "type": "commit"}, {"oid": "dc803dbf10b44b679c083c3e36594fc12f6046c5", "url": "https://github.com/palantir/atlasdb/commit/dc803dbf10b44b679c083c3e36594fc12f6046c5", "message": "Log paxos configuration when the test timelock server starts up.", "committedDate": "2020-01-16T13:04:06Z", "type": "commit"}, {"oid": "ce3255139c3009477cc16e634ac8fb4607a4d77b", "url": "https://github.com/palantir/atlasdb/commit/ce3255139c3009477cc16e634ac8fb4607a4d77b", "message": "Wire existing tests for multi leader.", "committedDate": "2020-01-16T13:04:06Z", "type": "commit"}, {"oid": "ce3255139c3009477cc16e634ac8fb4607a4d77b", "url": "https://github.com/palantir/atlasdb/commit/ce3255139c3009477cc16e634ac8fb4607a4d77b", "message": "Wire existing tests for multi leader.", "committedDate": "2020-01-16T13:04:06Z", "type": "forcePushed"}, {"oid": "f1a524f28e2154def31960992f3c4fa62b706799", "url": "https://github.com/palantir/atlasdb/commit/f1a524f28e2154def31960992f3c4fa62b706799", "message": "Checkstyle.", "committedDate": "2020-01-16T13:11:16Z", "type": "commit"}, {"oid": "97b82ac991435ce0a4aac1a4599b5eccfb0e7dd5", "url": "https://github.com/palantir/atlasdb/commit/97b82ac991435ce0a4aac1a4599b5eccfb0e7dd5", "message": "Propagate leader mode everywhere.", "committedDate": "2020-01-16T13:13:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MjgwMg==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367552802", "bodyText": "nit: renaming can reduce the diff", "author": "OStevan", "createdAt": "2020-01-16T17:29:13Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/LeadershipContextFactory.java", "diffHunk": "@@ -68,13 +68,13 @@ public NetworkClientFactories networkClientFactories() {\n     }\n \n     @Value.Derived\n-    public Duration leaderPingResponseWait() {\n-        return runtime().get().leaderPingResponseWait();\n+    public Factories.LeaderPingerFactory leaderPingerFactory() {", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MDU0Mw==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367570543", "bodyText": "what's the action here?", "author": "felixdesouza", "createdAt": "2020-01-16T18:08:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MjgwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU4NDA0NA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367584044", "bodyText": "This can be ignored the diff is probably different when compared with develop.", "author": "OStevan", "createdAt": "2020-01-16T18:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MjgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "chunk": "diff --git a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/LeadershipContextFactory.java b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/LeadershipContextFactory.java\nindex 24a817b98d..b3cd7adb33 100644\n--- a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/LeadershipContextFactory.java\n+++ b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/LeadershipContextFactory.java\n\n@@ -68,7 +68,7 @@ public abstract class LeadershipContextFactory implements\n     }\n \n     @Value.Derived\n-    public Factories.LeaderPingerFactory leaderPingerFactory() {\n+    public Factories.LeaderPingerFactoryContainer leaderPingerFactory() {\n         return leaderPingerFactoryBuilder().from(this).build();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1NzA3NA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367557074", "bodyText": "nit: Is there a specific reason why this and MultiLeaderPaxosSuite are not final?", "author": "OStevan", "createdAt": "2020-01-16T17:38:45Z", "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/SingleLeaderPaxosSuite.java", "diffHunk": "@@ -29,28 +27,32 @@\n \n import com.github.peterwippermann.junit4.parameterizedsuite.ParameterizedSuite;\n import com.google.common.collect.ImmutableSet;\n-import com.palantir.atlasdb.timelock.ImmutableTemplateVariables;\n import com.palantir.atlasdb.timelock.MultiNodePaxosTimeLockServerIntegrationTest;\n-import com.palantir.atlasdb.timelock.TemplateVariables;\n+import com.palantir.atlasdb.timelock.SingleLeaderMultiNodePaxosTimeLockIntegrationTest;\n import com.palantir.atlasdb.timelock.TestableTimelockCluster;\n+import com.palantir.timelock.config.PaxosInstallConfiguration.PaxosLeaderMode;\n \n @RunWith(ParameterizedSuite.class)\n-@Suite.SuiteClasses(MultiNodePaxosTimeLockServerIntegrationTest.class)\n-public class PaxosSuite {\n+@Suite.SuiteClasses({\n+        MultiNodePaxosTimeLockServerIntegrationTest.class,\n+        SingleLeaderMultiNodePaxosTimeLockIntegrationTest.class\n+})\n+public class SingleLeaderPaxosSuite {", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MDgwNQ==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367570805", "bodyText": "nope, accident, typically I don't remember to do it (plus it's of questionable value), and checkstyle screams at me, for some reason it's missed, will fix up", "author": "felixdesouza", "createdAt": "2020-01-16T18:09:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1NzA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "chunk": "diff --git a/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/SingleLeaderPaxosSuite.java b/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/SingleLeaderPaxosSuite.java\nindex 8829bd7b07..ab545c575f 100644\n--- a/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/SingleLeaderPaxosSuite.java\n+++ b/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/SingleLeaderPaxosSuite.java\n\n@@ -36,8 +36,8 @@ import com.palantir.timelock.config.PaxosInstallConfiguration.PaxosLeaderMode;\n @Suite.SuiteClasses({\n         MultiNodePaxosTimeLockServerIntegrationTest.class,\n         SingleLeaderMultiNodePaxosTimeLockIntegrationTest.class\n-})\n-public class SingleLeaderPaxosSuite {\n+        })\n+public final class SingleLeaderPaxosSuite {\n \n     public static final TestableTimelockCluster NON_BATCHED_TIMESTAMP_PAXOS = new TestableTimelockCluster(\n             \"non-batched paxos single leader\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1ODExOA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367558118", "bodyText": "nit: spacing", "author": "OStevan", "createdAt": "2020-01-16T17:41:05Z", "path": "timelock-server/src/testCommon/java/com/palantir/atlasdb/timelock/TimeLockServerHolder.java", "diffHunk": "@@ -108,7 +110,15 @@ private int readTimelockPort() throws IOException {\n                 .intValue();\n     }\n \n-    public int getAdminPort() {\n-        return timelockServer.getAdminPort();\n+    TimeLockInstallConfiguration installConfig() {\n+        checkTimelockPortInitialised();\n+        ObjectMapper mapper = Jackson.newObjectMapper(new YAMLFactory());\n+        try {\n+            return mapper.readValue(new File(configFilePathSupplier.get()), CombinedTimeLockServerConfiguration.class)\n+                    .install();\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n     }\n+", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MTAwMw==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367571003", "bodyText": "?", "author": "felixdesouza", "createdAt": "2020-01-16T18:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1ODExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3OTQ2MA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367579460", "bodyText": "I meant new line, but we resolved it", "author": "OStevan", "createdAt": "2020-01-16T18:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1ODExOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1ODgxMg==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367558812", "bodyText": "nit: new line", "author": "OStevan", "createdAt": "2020-01-16T17:42:41Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.paxos;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import com.google.common.collect.Maps;\n+import com.palantir.timelock.paxos.HealthCheckPinger;\n+import com.palantir.timelock.paxos.HealthCheckResponse;\n+\n+public class MultiLeaderHealthCheckPinger implements HealthCheckPinger {\n+\n+    private final BatchPingableLeader batchPingableLeader;\n+\n+    public MultiLeaderHealthCheckPinger(BatchPingableLeader batchPingableLeader) {\n+        this.batchPingableLeader = batchPingableLeader;\n+    }\n+\n+    @Override\n+    public Map<Client, HealthCheckResponse> apply(Set<Client> request) {\n+        Set<Client> results = batchPingableLeader.ping(request);\n+        return Maps.toMap(request, client -> new HealthCheckResponse(results.contains(client)));\n+    }\n+", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "chunk": "diff --git a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java\nindex beffa7cc38..113e255191 100644\n--- a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java\n+++ b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java\n\n@@ -23,7 +23,7 @@ import com.google.common.collect.Maps;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n import com.palantir.timelock.paxos.HealthCheckResponse;\n \n-public class MultiLeaderHealthCheckPinger implements HealthCheckPinger {\n+public final class MultiLeaderHealthCheckPinger implements HealthCheckPinger {\n \n     private final BatchPingableLeader batchPingableLeader;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1OTcxNA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367559714", "bodyText": "nit: final?", "author": "OStevan", "createdAt": "2020-01-16T17:44:38Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.paxos;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import com.google.common.collect.Maps;\n+import com.palantir.timelock.paxos.HealthCheckPinger;\n+import com.palantir.timelock.paxos.HealthCheckResponse;\n+\n+public class MultiLeaderHealthCheckPinger implements HealthCheckPinger {", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "chunk": "diff --git a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java\nindex beffa7cc38..113e255191 100644\n--- a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java\n+++ b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java\n\n@@ -23,7 +23,7 @@ import com.google.common.collect.Maps;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n import com.palantir.timelock.paxos.HealthCheckResponse;\n \n-public class MultiLeaderHealthCheckPinger implements HealthCheckPinger {\n+public final class MultiLeaderHealthCheckPinger implements HealthCheckPinger {\n \n     private final BatchPingableLeader batchPingableLeader;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MTEzOA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367561138", "bodyText": "nit: Maybe extracting the lambda body to a function could be useful.", "author": "OStevan", "createdAt": "2020-01-16T17:47:49Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -65,21 +64,62 @@ public static PaxosResources create(\n                 .addAdhocResources(new TimestampPaxosResource(timestampContext.components()));\n \n         if (install.useLeaderForEachClient()) {\n-            throw new UnsupportedOperationException(\"not implemented yet\");\n+            return configureLeaderForEachClient(\n+                    resourcesBuilder,\n+                    install,\n+                    metrics,\n+                    paxosRuntime,\n+                    sharedExecutor,\n+                    remoteClients);\n         } else {\n-            configureLeaderForAllClients(\n+            return configureLeaderForAllClients(\n                     resourcesBuilder,\n                     install,\n                     metrics,\n                     paxosRuntime,\n                     sharedExecutor,\n                     remoteClients);\n         }\n+    }\n+\n+    private static PaxosResources configureLeaderForEachClient(\n+            ImmutablePaxosResources.Builder resourcesBuilder,\n+            TimelockPaxosInstallationContext install,\n+            MetricsManager metrics,\n+            Supplier<PaxosRuntimeConfiguration> paxosRuntime,\n+            ExecutorService sharedExecutor,\n+            PaxosRemoteClients remoteClients) {\n+        TimelockPaxosMetrics timelockMetrics =\n+                TimelockPaxosMetrics.of(PaxosUseCase.LEADER_FOR_EACH_CLIENT, metrics.getTaggedRegistry());\n+\n+        Factories.LeaderPingHealthCheckFactory healthCheckPingersFactory = dependencies -> {", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MjA5Ng==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367572096", "bodyText": "can't be shared between single leader and multi leader I'm afraid (well it can, but the args requried and setup just don't make it worth it)", "author": "felixdesouza", "createdAt": "2020-01-16T18:12:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MTEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MzgyMQ==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367573821", "bodyText": "as a method such that I can refer to as a method reference feels pretty messy. I can however, make a class out of it instead, and I just pass a new instance of the class in to where I want to use it.", "author": "felixdesouza", "createdAt": "2020-01-16T18:16:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MTEzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MjMzOA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367562338", "bodyText": "nit: extract factory.components() to a local variable since its used multiple times?", "author": "OStevan", "createdAt": "2020-01-16T17:50:23Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -112,16 +145,18 @@ private static void configureLeaderForAllClients(\n                 .useCase(PaxosUseCase.LEADER_FOR_ALL_CLIENTS)\n                 .metrics(timelockMetrics)\n                 .networkClientFactoryBuilder(ImmutableSingleLeaderNetworkClientFactories.builder())\n-                .leaderPingerFactory(leaderPingerFactory)\n+                .leaderPingerFactoryBuilder(ImmutableSingleLeaderPingerFactory.builder())\n                 .healthCheckPingersFactory(healthCheckPingersFactory)\n                 .build();\n \n-        resourcesBuilder.leadershipContextFactory(factory);\n-        resourcesBuilder.addAdhocResources(\n-                new LeadershipResource(\n-                        factory.components().acceptor(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT),\n-                        factory.components().learner(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT)),\n-                factory.components().pingableLeader(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT));\n+        return resourcesBuilder\n+                .leadershipContextFactory(factory)\n+                .addAdhocResources(\n+                        new LeadershipResource(\n+                                factory.components().acceptor(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT),", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU3MzEyNA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367573124", "bodyText": "tried it, doesn't really add/save anything", "author": "felixdesouza", "createdAt": "2020-01-16T18:14:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MjMzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MjYwNw==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367562607", "bodyText": "nit: should this be on a new line?", "author": "OStevan", "createdAt": "2020-01-16T17:50:55Z", "path": "timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java", "diffHunk": "@@ -44,6 +45,24 @@ default File dataDirectory() {\n     @JsonProperty(\"is-new-service\")\n     boolean isNewService();\n \n+    enum PaxosLeaderMode {\n+        SINGLE_LEADER,\n+        LEADER_PER_CLIENT,\n+        AUTO_MIGRATION_MODE\n+    }\n+\n+    @JsonProperty(\"leader-mode\")\n+    @Value.Default\n+    default PaxosLeaderMode leaderMode() {\n+        return PaxosLeaderMode.SINGLE_LEADER;\n+    }\n+\n+    @Value.Check\n+    default void checkLeaderModeIsNotInAutoMigrationMode() {\n+        Preconditions.checkState(leaderMode() != PaxosLeaderMode.AUTO_MIGRATION_MODE,", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "chunk": "diff --git a/timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java b/timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java\nindex 8def083599..b06480829d 100644\n--- a/timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java\n+++ b/timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java\n\n@@ -59,7 +59,8 @@ public interface PaxosInstallConfiguration {\n \n     @Value.Check\n     default void checkLeaderModeIsNotInAutoMigrationMode() {\n-        Preconditions.checkState(leaderMode() != PaxosLeaderMode.AUTO_MIGRATION_MODE,\n+        Preconditions.checkState(\n+                leaderMode() != PaxosLeaderMode.AUTO_MIGRATION_MODE,\n                 \"Auto migration mode is not supported just yet\");\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2NTc3Mg==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367565772", "bodyText": "nit: new line", "author": "OStevan", "createdAt": "2020-01-16T17:57:36Z", "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/MultiLeaderPaxosSuite.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.suite;\n+\n+import static com.palantir.atlasdb.timelock.TemplateVariables.generateThreeNodeTimelockCluster;\n+\n+import java.util.Collection;\n+\n+import org.junit.Rule;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Suite;\n+\n+import com.github.peterwippermann.junit4.parameterizedsuite.ParameterizedSuite;\n+import com.google.common.collect.ImmutableSet;\n+import com.palantir.atlasdb.timelock.MultiNodePaxosTimeLockServerIntegrationTest;\n+import com.palantir.atlasdb.timelock.TestableTimelockCluster;\n+import com.palantir.timelock.config.PaxosInstallConfiguration.PaxosLeaderMode;\n+\n+@RunWith(ParameterizedSuite.class)\n+@Suite.SuiteClasses(MultiNodePaxosTimeLockServerIntegrationTest.class)\n+public class MultiLeaderPaxosSuite {\n+\n+    public static final TestableTimelockCluster MULTI_LEADER_PAXOS = new TestableTimelockCluster(\n+            \"batched paxos multi leader\",\n+            \"paxosMultiServer.ftl\",\n+            generateThreeNodeTimelockCluster(9086, builder ->\n+                    builder.clientPaxosBuilder(builder.clientPaxosBuilder().isUseBatchPaxos(true))\n+                            .leaderMode(PaxosLeaderMode.LEADER_PER_CLIENT)));\n+\n+    @Parameterized.Parameters(name = \"{0}\")\n+    public static Collection<TestableTimelockCluster> params() {\n+        return ImmutableSet.of(MULTI_LEADER_PAXOS);\n+    }\n+\n+    @Rule\n+    @Parameterized.Parameter\n+    public TestableTimelockCluster cluster;\n+", "originalCommit": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "chunk": "diff --git a/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/MultiLeaderPaxosSuite.java b/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/MultiLeaderPaxosSuite.java\nindex 60fdbbb696..cf55d0f677 100644\n--- a/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/MultiLeaderPaxosSuite.java\n+++ b/timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/MultiLeaderPaxosSuite.java\n\n@@ -33,7 +33,7 @@ import com.palantir.timelock.config.PaxosInstallConfiguration.PaxosLeaderMode;\n \n @RunWith(ParameterizedSuite.class)\n @Suite.SuiteClasses(MultiNodePaxosTimeLockServerIntegrationTest.class)\n-public class MultiLeaderPaxosSuite {\n+public final class MultiLeaderPaxosSuite {\n \n     public static final TestableTimelockCluster MULTI_LEADER_PAXOS = new TestableTimelockCluster(\n             \"batched paxos multi leader\",\n"}}, {"oid": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "url": "https://github.com/palantir/atlasdb/commit/90ffbad00cf6e825840f5ae5a932a8934a48033b", "message": "Nits.", "committedDate": "2020-01-16T18:27:43Z", "type": "commit"}, {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "url": "https://github.com/palantir/atlasdb/commit/4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "message": "Rebalancing.", "committedDate": "2020-01-17T12:40:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4NjIzMQ==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r368986231", "bodyText": "sanity check: This is safe, because this endpoint is currently unused right?", "author": "jeremyk-91", "createdAt": "2020-01-21T13:01:33Z", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/BatchPingableLeader.java", "diffHunk": "@@ -42,7 +43,7 @@\n      * @param clients set of clients to check remote servers leadership on\n      * @return clients for which the remote server believes that it is the leader for\n      */\n-    @GET\n+    @POST", "originalCommit": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyOTMxNA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r374629314", "bodyText": "yep, it's completely unused/unregistered, using this client, you can't even use the endpoint since GET's can't have bodies.", "author": "felixdesouza", "createdAt": "2020-02-04T11:59:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4NjIzMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5MjYyNA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r368992624", "bodyText": "I guess this is fine as this is used only in testing, but is this intentional? Seems if we want to keep this ERROR is pretty harsh", "author": "jeremyk-91", "createdAt": "2020-01-21T13:15:33Z", "path": "timelock-server/src/main/java/com/palantir/atlasdb/timelock/TimeLockServerLauncher.java", "diffHunk": "@@ -77,6 +84,10 @@ public void run(CombinedTimeLockServerConfiguration configuration, Environment e\n         MetricsManager metricsManager = MetricsManagers.of(environment.metrics(), taggedMetricRegistry);\n         Consumer<Object> registrar = component -> environment.jersey().register(component);\n \n+        log.error(\"Paxos configuration\\n{}\", environment.getObjectMapper()\n+                .writerWithDefaultPrettyPrinter()\n+                .writeValueAsString(configuration.install().paxos()));", "originalCommit": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyOTU2MA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r374629560", "bodyText": "changed to INFO", "author": "felixdesouza", "createdAt": "2020-02-04T12:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5MjYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "9711b38ca3e8a892750d6bdf067b73cd0279a311", "chunk": "diff --git a/timelock-server/src/main/java/com/palantir/atlasdb/timelock/TimeLockServerLauncher.java b/timelock-server/src/main/java/com/palantir/atlasdb/timelock/TimeLockServerLauncher.java\nindex 669e18c643..ad9770bafc 100644\n--- a/timelock-server/src/main/java/com/palantir/atlasdb/timelock/TimeLockServerLauncher.java\n+++ b/timelock-server/src/main/java/com/palantir/atlasdb/timelock/TimeLockServerLauncher.java\n\n@@ -84,7 +84,7 @@ public class TimeLockServerLauncher extends Application<CombinedTimeLockServerCo\n         MetricsManager metricsManager = MetricsManagers.of(environment.metrics(), taggedMetricRegistry);\n         Consumer<Object> registrar = component -> environment.jersey().register(component);\n \n-        log.error(\"Paxos configuration\\n{}\", environment.getObjectMapper()\n+        log.info(\"Paxos configuration\\n{}\", environment.getObjectMapper()\n                 .writerWithDefaultPrettyPrinter()\n                 .writeValueAsString(configuration.install().paxos()));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5ODIxOQ==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r368998219", "bodyText": "Feels a little hacky, but I guess this is from the previous tests.", "author": "jeremyk-91", "createdAt": "2020-01-21T13:27:10Z", "path": "timelock-server/src/testCommon/java/com/palantir/atlasdb/timelock/TemplateVariables.java", "diffHunk": "@@ -47,4 +53,18 @@ default TemplateVariables putLocalServerPortAmongstAllServerPorts() {\n     interface TimestampPaxos {\n         boolean isUseBatchPaxos();\n     }\n+\n+    static Iterable<TemplateVariables> generateThreeNodeTimelockCluster(\n+            int startingPort,\n+            UnaryOperator<ImmutableTemplateVariables.Builder> customizer) {\n+        List<Integer> allPorts = IntStream.range(startingPort, startingPort + 3).boxed().collect(Collectors.toList());", "originalCommit": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYzMDQ4NQ==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r374630485", "bodyText": "explained offline, the TemplateVariables make the config that gets used in tests, so we can define the port to whatever sequence we want, and it will generate the right config. We just happen to continue from the previous tests.", "author": "felixdesouza", "createdAt": "2020-02-04T12:02:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5ODIxOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNzA0OA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r369007048", "bodyText": "fine for now, I imagine this will get a lot more complicated with the auto migration mode", "author": "jeremyk-91", "createdAt": "2020-01-21T13:44:16Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -267,7 +302,7 @@ default Path dataDirectory() {\n \n         @Value.Derived\n         default boolean useLeaderForEachClient() {\n-            return false;\n+            return install().paxos().leaderMode() == PaxosLeaderMode.LEADER_PER_CLIENT;", "originalCommit": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4NDYxOQ==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r369184619", "bodyText": "surely this class should be something like a LeaderPingerFactoryContainer? The name is a little tricky", "author": "jeremyk-91", "createdAt": "2020-01-21T18:59:55Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java", "diffHunk": "@@ -16,17 +16,74 @@\n \n package com.palantir.atlasdb.timelock.paxos;\n \n+import java.io.Closeable;\n import java.util.List;\n \n+import org.immutables.value.Value;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Maps;\n+import com.palantir.atlasdb.timelock.paxos.NetworkClientFactories.Factory;\n import com.palantir.paxos.LeaderPinger;\n+import com.palantir.paxos.SingleLeaderPinger;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n \n public interface Factories {\n     interface LeaderPingerFactory {\n-        LeaderPinger create(Dependencies.LeaderPinger dependencies);\n+        Factory<LeaderPinger> get();", "originalCommit": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "chunk": "diff --git a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java\nindex 8699771439..c6347fea31 100644\n--- a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java\n+++ b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java\n\n@@ -29,13 +29,13 @@ import com.palantir.paxos.SingleLeaderPinger;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n \n public interface Factories {\n-    interface LeaderPingerFactory {\n+    interface LeaderPingerFactoryContainer {\n         Factory<LeaderPinger> get();\n         List<Closeable> closeables();\n \n         interface Builder {\n             Builder from(Dependencies.LeaderPinger dependencies);\n-            LeaderPingerFactory build();\n+            LeaderPingerFactoryContainer build();\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4NDc4NA==", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r369184784", "bodyText": "and this guy is a LeaderPingerFactoryFactory \ud83d\ude09 (really, just stick with Builder)", "author": "jeremyk-91", "createdAt": "2020-01-21T19:00:18Z", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java", "diffHunk": "@@ -16,17 +16,74 @@\n \n package com.palantir.atlasdb.timelock.paxos;\n \n+import java.io.Closeable;\n import java.util.List;\n \n+import org.immutables.value.Value;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Maps;\n+import com.palantir.atlasdb.timelock.paxos.NetworkClientFactories.Factory;\n import com.palantir.paxos.LeaderPinger;\n+import com.palantir.paxos.SingleLeaderPinger;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n \n public interface Factories {\n     interface LeaderPingerFactory {\n-        LeaderPinger create(Dependencies.LeaderPinger dependencies);\n+        Factory<LeaderPinger> get();\n+        List<Closeable> closeables();\n+\n+        interface Builder {\n+            Builder from(Dependencies.LeaderPinger dependencies);\n+            LeaderPingerFactory build();\n+        }", "originalCommit": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "chunk": "diff --git a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java\nindex 8699771439..c6347fea31 100644\n--- a/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java\n+++ b/timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java\n\n@@ -29,13 +29,13 @@ import com.palantir.paxos.SingleLeaderPinger;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n \n public interface Factories {\n-    interface LeaderPingerFactory {\n+    interface LeaderPingerFactoryContainer {\n         Factory<LeaderPinger> get();\n         List<Closeable> closeables();\n \n         interface Builder {\n             Builder from(Dependencies.LeaderPinger dependencies);\n-            LeaderPingerFactory build();\n+            LeaderPingerFactoryContainer build();\n         }\n     }\n \n"}}, {"oid": "3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "url": "https://github.com/palantir/atlasdb/commit/3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "message": "LeaderPingerFactoryContainer class", "committedDate": "2020-02-04T11:57:25Z", "type": "commit"}, {"oid": "9711b38ca3e8a892750d6bdf067b73cd0279a311", "url": "https://github.com/palantir/atlasdb/commit/9711b38ca3e8a892750d6bdf067b73cd0279a311", "message": "Change to info.", "committedDate": "2020-02-04T12:00:34Z", "type": "commit"}]}