{"pr_number": 5067, "pr_title": "Increase error-prone reference comparison strictness", "pr_createdAt": "2020-10-21T15:36:38Z", "pr_url": "https://github.com/palantir/atlasdb/pull/5067", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5MjQ5Mg==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r509992492", "bodyText": "(Just an observation): this replaces google's deprecated Objects.equal with the java.util.Objects one. \ud83d\udc4d", "author": "Jolyon-S", "createdAt": "2020-10-22T08:54:16Z", "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/ColumnFamilyDefinitions.java", "diffHunk": "@@ -169,7 +169,7 @@ static boolean isMatchingCf(CfDef clientSide, CfDef clusterSide) {\n                     clusterSide.compression_options.get(CassandraConstants.CFDEF_COMPRESSION_CHUNK_LENGTH_KEY));\n             return false;\n         }\n-        if (!Objects.equal(clientSide.compaction_strategy, clusterSide.compaction_strategy)) {\n+        if (!Objects.equals(clientSide.compaction_strategy, clusterSide.compaction_strategy)) {", "originalCommit": "8f1cadfd0bdb5d7f490a9666dceffed0f999e555", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE3MDUxMw==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r510170513", "bodyText": "I'll write an automated refactor from this guava method to j.u.Objects later today", "author": "carterkozak", "createdAt": "2020-10-22T13:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5MjQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzMjUzNQ==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r510232535", "bodyText": "palantir/gradle-baseline#1521", "author": "carterkozak", "createdAt": "2020-10-22T14:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5MjQ5Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NDM0Nw==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r509994347", "bodyText": "I'm not sure about this one - reading the comment where this is called:\n    // because unfortunately .equals takes into account if fields with defaults are populated or not\n    // also because compression_options after serialization / deserialization comes back as blank\n    // for the ones we set 4K chunk on... ?!\n\nMy guess is that the intention is to compare references in this first check. An extra test around this would help verify whether this refactor would break it or not.", "author": "Jolyon-S", "createdAt": "2020-10-22T08:57:00Z", "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/ColumnFamilyDefinitions.java", "diffHunk": "@@ -206,7 +206,7 @@ private static void logMismatch(\n     }\n \n     private static boolean equalsIgnoringClasspath(String class1, String class2) {\n-        if (class1 == class2) {\n+        if (Objects.equals(class1, class2)) {", "originalCommit": "8f1cadfd0bdb5d7f490a9666dceffed0f999e555", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzNDI0NA==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r510134244", "bodyText": "This change should be safe, if the strings are equal (either both null or string-wise equal), both the before and after here would end up returning true. I added a unit test that shows this and passes both before and after.\nI think that comment applies to optionsMapsFunctionallyEqual.", "author": "schlosna", "createdAt": "2020-10-22T12:51:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NDM0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1fec81f72dc8aca631989428615b466a019baea2", "chunk": "diff --git a/atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/ColumnFamilyDefinitions.java b/atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/ColumnFamilyDefinitions.java\nindex 892e61e376..fd1ed3d749 100644\n--- a/atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/ColumnFamilyDefinitions.java\n+++ b/atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/ColumnFamilyDefinitions.java\n\n@@ -205,7 +205,7 @@ final class ColumnFamilyDefinitions {\n                 SafeArg.of(\"clusterVersion\", clusterSideVersion));\n     }\n \n-    private static boolean equalsIgnoringClasspath(String class1, String class2) {\n+    static boolean equalsIgnoringClasspath(String class1, String class2) {\n         if (Objects.equals(class1, class2)) {\n             return true;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NTE4Ng==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r509995186", "bodyText": "bizarre - what's the actual diff?", "author": "Jolyon-S", "createdAt": "2020-10-22T08:58:07Z", "path": "atlasdb-commons/src/main/java/com/palantir/common/time/Clock.java", "diffHunk": "@@ -20,7 +20,7 @@\n public interface Clock {\n     /**\n      * @return The time in milliseconds. This is conventionally interpreted as the number of\n-     *         milliseconds since\u00a01970-01-01T00:00Z excluding leap seconds not included in the\n+     *         milliseconds since 1970-01-01T00:00Z excluding leap seconds not included in the", "originalCommit": "8f1cadfd0bdb5d7f490a9666dceffed0f999e555", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDExMzQ4MA==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r510113480", "bodyText": "there was a unicode non-breaking space that the javadoc compiler was complaining about that I converted to a standard ASCII space", "author": "schlosna", "createdAt": "2020-10-22T12:18:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NTE4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDExNTM0Nw==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r510115347", "bodyText": "That's hilarious - nice!", "author": "Jolyon-S", "createdAt": "2020-10-22T12:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NTE4Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NTk1MQ==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r509995951", "bodyText": "I'm curious as to why you switched these around - there is a null check directly above which ensures that we don't call .equals on a null.", "author": "Jolyon-S", "createdAt": "2020-10-22T08:59:10Z", "path": "lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java", "diffHunk": "@@ -337,7 +337,7 @@ public HeldLocksToken lockAndGetHeldLocks(String client, LockRequest request) th\n     // We're concerned about sanitizing logs at the info level and above. This method just logs at debug and info.\n     public LockResponse lockWithFullLockResponse(LockClient client, LockRequest request) throws InterruptedException {\n         com.palantir.logsafe.Preconditions.checkNotNull(client);\n-        com.palantir.logsafe.Preconditions.checkArgument(!client.equals(INTERNAL_LOCK_GRANT_CLIENT));\n+        com.palantir.logsafe.Preconditions.checkArgument(!INTERNAL_LOCK_GRANT_CLIENT.equals(client));", "originalCommit": "8f1cadfd0bdb5d7f490a9666dceffed0f999e555", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzNTA2Nw==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r510135067", "bodyText": "mostly just habit of yoda conditions", "author": "schlosna", "createdAt": "2020-10-22T12:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NTk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a9e5bd76e8fbb0bf3782863e3e4120f9d382e291", "chunk": "diff --git a/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java b/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java\nindex 5cad06f11d..4c9b58877e 100644\n--- a/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java\n+++ b/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java\n\n@@ -337,7 +337,7 @@ public final class LockServiceImpl\n     // We're concerned about sanitizing logs at the info level and above. This method just logs at debug and info.\n     public LockResponse lockWithFullLockResponse(LockClient client, LockRequest request) throws InterruptedException {\n         com.palantir.logsafe.Preconditions.checkNotNull(client);\n-        com.palantir.logsafe.Preconditions.checkArgument(!INTERNAL_LOCK_GRANT_CLIENT.equals(client));\n+        com.palantir.logsafe.Preconditions.checkArgument(!client.equals(INTERNAL_LOCK_GRANT_CLIENT));\n         Preconditions.checkArgument(\n                 request.getLockTimeout().compareTo(maxAllowedLockTimeout) <= 0,\n                 \"Requested lock timeout (%s) is greater than maximum allowed lock timeout (%s)\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk5NzkxNw==", "url": "https://github.com/palantir/atlasdb/pull/5067#discussion_r509997917", "bodyText": "It looks like the difference here is that you'll return false if the clientIds are different (where before, if I understand this correctly, just if the references are the same). Presumably the clientId is supposed to uniquely identify a client, but I haven't dug into the code to verify this.", "author": "Jolyon-S", "createdAt": "2020-10-22T09:02:03Z", "path": "lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java", "diffHunk": "@@ -907,7 +907,7 @@ public HeldLocksGrant convertToGrant(HeldLocksToken token) {\n     @Override\n     public HeldLocksToken useGrant(LockClient client, HeldLocksGrant grant) {\n         com.palantir.logsafe.Preconditions.checkNotNull(client);\n-        com.palantir.logsafe.Preconditions.checkArgument(client != INTERNAL_LOCK_GRANT_CLIENT);\n+        com.palantir.logsafe.Preconditions.checkArgument(!INTERNAL_LOCK_GRANT_CLIENT.equals(client));", "originalCommit": "8f1cadfd0bdb5d7f490a9666dceffed0f999e555", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a9e5bd76e8fbb0bf3782863e3e4120f9d382e291", "chunk": "diff --git a/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java b/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java\nindex 5cad06f11d..4c9b58877e 100644\n--- a/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java\n+++ b/lock-impl/src/main/java/com/palantir/lock/impl/LockServiceImpl.java\n\n@@ -907,7 +907,7 @@ public final class LockServiceImpl\n     @Override\n     public HeldLocksToken useGrant(LockClient client, HeldLocksGrant grant) {\n         com.palantir.logsafe.Preconditions.checkNotNull(client);\n-        com.palantir.logsafe.Preconditions.checkArgument(!INTERNAL_LOCK_GRANT_CLIENT.equals(client));\n+        com.palantir.logsafe.Preconditions.checkArgument(client != INTERNAL_LOCK_GRANT_CLIENT);\n         com.palantir.logsafe.Preconditions.checkNotNull(grant);\n         @Nullable HeldLocks<HeldLocksGrant> heldLocks = heldLocksGrantMap.remove(grant);\n         if (heldLocks == null) {\n"}}, {"oid": "1fec81f72dc8aca631989428615b466a019baea2", "url": "https://github.com/palantir/atlasdb/commit/1fec81f72dc8aca631989428615b466a019baea2", "message": "Test coverage for ColumnFamilyDefinitions.equalsIgnoringClasspath", "committedDate": "2020-10-27T14:56:14Z", "type": "forcePushed"}, {"oid": "0081b02b190bee5253df9cf4ad3feb749a2541db", "url": "https://github.com/palantir/atlasdb/commit/0081b02b190bee5253df9cf4ad3feb749a2541db", "message": "Test coverage for ColumnFamilyDefinitions.equalsIgnoringClasspath", "committedDate": "2020-10-27T15:08:37Z", "type": "forcePushed"}, {"oid": "e067e78302dab312cd31bbbf2a2b15cd7cf67e29", "url": "https://github.com/palantir/atlasdb/commit/e067e78302dab312cd31bbbf2a2b15cd7cf67e29", "message": "format after schema generation", "committedDate": "2020-10-28T13:49:39Z", "type": "forcePushed"}, {"oid": "a9e5bd76e8fbb0bf3782863e3e4120f9d382e291", "url": "https://github.com/palantir/atlasdb/commit/a9e5bd76e8fbb0bf3782863e3e4120f9d382e291", "message": "Fix non-ASCII character error\n\nResolves following error from non-breaking space in JavaDoc\n\natlasdb-commons/src/main/java/com/palantir/common/time/Clock.java:23: error: unmappable character (0xC2) for encoding US-ASCII\natlasdb-commons/src/main/java/com/palantir/common/time/Clock.java:23: error: unmappable character (0xA0) for encoding US-ASCII", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "68900a2ab88fcbef14155faaf549245ee216948a", "url": "https://github.com/palantir/atlasdb/commit/68900a2ab88fcbef14155faaf549245ee216948a", "message": "Treat ReferenceEquality as error", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "d873eb237f19fcbcc75d7032b580f2cb14970fd9", "url": "https://github.com/palantir/atlasdb/commit/d873eb237f19fcbcc75d7032b580f2cb14970fd9", "message": "Address ReferenceEquality findings", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "2b623a5d4f84261b36099f89df7bbec48dc14ec0", "url": "https://github.com/palantir/atlasdb/commit/2b623a5d4f84261b36099f89df7bbec48dc14ec0", "message": "Test coverage for ColumnFamilyDefinitions.equalsIgnoringClasspath", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "49a1ec17e76146d21aea770b8e6fbf04739d37a9", "url": "https://github.com/palantir/atlasdb/commit/49a1ec17e76146d21aea770b8e6fbf04739d37a9", "message": "Fix ReferenceEquality in generated stream store code", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "a32fc6f53a62f75c3685708814c4d440b6a87703", "url": "https://github.com/palantir/atlasdb/commit/a32fc6f53a62f75c3685708814c4d440b6a87703", "message": "StreamStoreRenderer prefers collection constructors", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "ff4ed58a5c7ad99f2ed4f5811c0b584caa8ce122", "url": "https://github.com/palantir/atlasdb/commit/ff4ed58a5c7ad99f2ed4f5811c0b584caa8ce122", "message": "Rendered stream store prefers collection constructors", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "b0a75818993b80bfcd567eff688875896454d708", "url": "https://github.com/palantir/atlasdb/commit/b0a75818993b80bfcd567eff688875896454d708", "message": "format after schema generation", "committedDate": "2020-10-30T14:25:35Z", "type": "commit"}, {"oid": "b0a75818993b80bfcd567eff688875896454d708", "url": "https://github.com/palantir/atlasdb/commit/b0a75818993b80bfcd567eff688875896454d708", "message": "format after schema generation", "committedDate": "2020-10-30T14:25:35Z", "type": "forcePushed"}, {"oid": "89fd29cd42a7262d0b37e3856ad807b8a0814d03", "url": "https://github.com/palantir/atlasdb/commit/89fd29cd42a7262d0b37e3856ad807b8a0814d03", "message": "Remove unnecessary parentheses", "committedDate": "2020-10-30T15:04:25Z", "type": "commit"}, {"oid": "d2e8e78a3e19170015275feace76483e15f7b6d6", "url": "https://github.com/palantir/atlasdb/commit/d2e8e78a3e19170015275feace76483e15f7b6d6", "message": "Merge with develop", "committedDate": "2020-11-09T17:11:05Z", "type": "commit"}]}