{"pr_number": 4770, "pr_title": "Allow invalidating SweepStrategyManager cache", "pr_createdAt": "2020-05-13T21:01:42Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4770", "timeline": [{"oid": "74656c4f5ad41ad02eaf86a202abcaa1518d172c", "url": "https://github.com/palantir/atlasdb/commit/74656c4f5ad41ad02eaf86a202abcaa1518d172c", "message": "Allow invalidating SweepStrategyManager cache\n\nUseful to change the sweep strategy on an existing table without\nbouncing the service.", "committedDate": "2020-05-13T20:59:20Z", "type": "commit"}, {"oid": "beaaf2ec3a71738aedcd1b7df7ae4aeb94f0724d", "url": "https://github.com/palantir/atlasdb/commit/beaaf2ec3a71738aedcd1b7df7ae4aeb94f0724d", "message": "Add generated changelog entries", "committedDate": "2020-05-13T20:59:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MjgxNQ==", "url": "https://github.com/palantir/atlasdb/pull/4770#discussion_r425282815", "bodyText": "/**\n   * Discards any cached values for the {@code keys}. The behavior of this operation is undefined\n   * for an entry that is being loaded (or reloaded) and is otherwise not present.\n   *\n   * @param keys the keys whose associated values are to be removed\n   * @throws NullPointerException if the specified collection is null or contains a null element\n   */\n  void invalidateAll(@NonNull Iterable<?> keys);\n\nInvalidating something that's not there looks like it could end up either way. It's a bit nasty, but should we take a read-write lock?", "author": "jeremyk-91", "createdAt": "2020-05-14T16:45:35Z", "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java", "diffHunk": "@@ -51,7 +52,17 @@ public static SweepStrategyManager createDefault(KeyValueService kvs) {\n                     return cache;\n                 });\n \n-        return tableRef -> sweepStrategySupplierLoadingCache.get().get(tableRef);\n+        return new SweepStrategyManager() {\n+            @Override\n+            public SweepStrategy get(TableReference tableRef) {\n+                return sweepStrategySupplierLoadingCache.get().get(tableRef);\n+            }\n+\n+            @Override\n+            public void invalidateCaches(Set<TableReference> tableRefs) {\n+                sweepStrategySupplierLoadingCache.get().invalidateAll(tableRefs);\n+            }", "originalCommit": "beaaf2ec3a71738aedcd1b7df7ae4aeb94f0724d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5MTg1OQ==", "url": "https://github.com/palantir/atlasdb/pull/4770#discussion_r425291859", "bodyText": "Discussed offline: The \"undefined-ness\" here just means that load and invalidate could race and end up either way. This is fine for the internal use case we have planned here.", "author": "jeremyk-91", "createdAt": "2020-05-14T16:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4MjgxNQ=="}], "type": "inlineReview", "revised_code": null}]}