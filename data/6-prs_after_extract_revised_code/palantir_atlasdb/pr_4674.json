{"pr_number": 4674, "pr_title": "[Timelock Perf] Disruptor future", "pr_createdAt": "2020-03-26T10:38:31Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4674", "timeline": [{"oid": "2dfce83484746bbd7bb0e92da9e0dc8e25f524df", "url": "https://github.com/palantir/atlasdb/commit/2dfce83484746bbd7bb0e92da9e0dc8e25f524df", "message": "DisruptorFutures now have traces for each portion.", "committedDate": "2020-03-26T10:30:16Z", "type": "commit"}, {"oid": "09bc8559c5e7493280ee5464902d718b83d44853", "url": "https://github.com/palantir/atlasdb/commit/09bc8559c5e7493280ee5464902d718b83d44853", "message": "Fix up usages everywhere.", "committedDate": "2020-03-26T10:30:17Z", "type": "commit"}, {"oid": "8d52e1a2bf8f3745c024e8ad2035f762f65207a0", "url": "https://github.com/palantir/atlasdb/commit/8d52e1a2bf8f3745c024e8ad2035f762f65207a0", "message": "Add generated changelog entries", "committedDate": "2020-03-26T10:29:31Z", "type": "commit"}, {"oid": "2890ee02f031c97abff9453eb2cd48f3a15e6966", "url": "https://github.com/palantir/atlasdb/commit/2890ee02f031c97abff9453eb2cd48f3a15e6966", "message": "Checkstyle.", "committedDate": "2020-03-26T13:35:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NjkwMA==", "url": "https://github.com/palantir/atlasdb/pull/4674#discussion_r398846900", "bodyText": "Does this need to be volatile? Specifically I'm thinking of a race condition where one thread assigns runningSpan, but another cancels the future and runs the listener: thread 2 won't see thread 1's write. Maybe this is ok if GC is sufficient to clean out 'leaked' spans", "author": "jeremyk-91", "createdAt": "2020-03-26T19:47:03Z", "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -98,19 +106,60 @@ public void close() {\n \n     private static final class DefaultBatchElement<T, R> implements BatchElement<T, R> {\n         private T argument;\n-        private SettableFuture<R> result;\n+        private DisruptorFuture<R> result;\n \n         @Override\n         public T argument() {\n             return argument;\n         }\n \n         @Override\n-        public SettableFuture<R> result() {\n+        public DisruptorFuture<R> result() {\n             return result;\n         }\n     }\n \n+    public static final class DisruptorFuture<R> extends AbstractFuture<R> {\n+\n+        private final DetachedSpan parent;\n+        private final DetachedSpan waitingSpan;\n+\n+        @Nullable\n+        private DetachedSpan runningSpan = null;", "originalCommit": "2890ee02f031c97abff9453eb2cd48f3a15e6966", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzNjgzNw==", "url": "https://github.com/palantir/atlasdb/pull/4674#discussion_r398936837", "bodyText": "nah, this is only updated in the disruptor thread, so it's safe, see the TracingEventHandler.", "author": "felixdesouza", "createdAt": "2020-03-26T22:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NjkwMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0ODk2OQ==", "url": "https://github.com/palantir/atlasdb/pull/4674#discussion_r398848969", "bodyText": "nicely done", "author": "jeremyk-91", "createdAt": "2020-03-26T19:49:50Z", "path": "atlasdb-autobatch/src/test/java/com/palantir/atlasdb/autobatch/TracingEventHandlerTest.java", "diffHunk": "@@ -16,107 +16,66 @@\n \n package com.palantir.atlasdb.autobatch;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.verify;\n-\n-import java.util.List;\n-\n import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExternalResource;\n import org.junit.runner.RunWith;\n-import org.mockito.Mock;\n import org.mockito.junit.MockitoJUnitRunner;\n \n-import com.google.common.collect.Lists;\n-import com.google.common.util.concurrent.SettableFuture;\n import com.lmax.disruptor.EventHandler;\n-import com.palantir.tracing.Observability;\n-import com.palantir.tracing.Tracer;\n-import com.palantir.tracing.api.Span;\n+import com.palantir.atlasdb.autobatch.DisruptorAutobatcher.DisruptorFuture;\n+import com.palantir.tracing.RenderTracingRule;\n+import com.palantir.tracing.Tracers;\n \n @RunWith(MockitoJUnitRunner.class)\n public class TracingEventHandlerTest {\n \n     @Rule\n-    public TraceCapturingRule traceRule = new TraceCapturingRule();\n-\n-    @Mock\n-    private EventHandler<BatchElement<Integer, Long>> delegate;\n-    private static final TestBatchElement ELEMENT = new TestBatchElement();\n-\n-    @Test\n-    public void nonFlushesDoNotHaveTraces() throws Exception {", "originalCommit": "2890ee02f031c97abff9453eb2cd48f3a15e6966", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "a9c7f89350a2d8bf7de691df3fe7f697377f5c10", "url": "https://github.com/palantir/atlasdb/commit/a9c7f89350a2d8bf7de691df3fe7f697377f5c10", "message": "Update changelog/@unreleased/pr-4674.v2.yml\n\nCo-Authored-By: Jeremy Kong <jeremykong@hotmail.com>", "committedDate": "2020-03-26T22:45:51Z", "type": "commit"}]}