{"pr_number": 4877, "pr_title": "Borrow WC variants of executor views to reduce thread count and increase reuse", "pr_createdAt": "2020-06-30T21:52:46Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4877", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2NDg1OA==", "url": "https://github.com/palantir/atlasdb/pull/4877#discussion_r448364858", "bodyText": "This executor configuration is highly suspect. At a glance I believe it will only ever have a single thread unless we manage to fill the LinkedBlockingQueue with Integer.MAX_VALUE elements.", "author": "carterkozak", "createdAt": "2020-07-01T13:31:21Z", "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/async/DefaultCassandraAsyncKeyValueServiceFactory.java", "diffHunk": "@@ -88,10 +85,7 @@ public ExecutorService visit(CqlCapableConfig cqlCapableConfig) {\n      * @return a new dynamic thread pool with a thread keep alive time of 1 minute\n      */\n     private static ExecutorService createThreadPool(int maxPoolSize) {\n-        LinkedBlockingQueue<Runnable> workQueue = new LinkedBlockingQueue<>();\n-        NamedThreadFactory threadFactory = new NamedThreadFactory(\"Atlas Cassandra Async KVS\", false);\n-\n-        return PTExecutors.newThreadPoolExecutor(0, maxPoolSize, 1, TimeUnit.MINUTES, workQueue, threadFactory);", "originalCommit": "78c8ead4ec6569a2f30e82d8e1f2688fc0d39a62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MjkzNA==", "url": "https://github.com/palantir/atlasdb/pull/4877#discussion_r449072934", "bodyText": "We looked at metrics-platform and it turns out this executor is basically unused in practice...", "author": "jeremyk-91", "createdAt": "2020-07-02T15:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2NDg1OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0a6e3ee6dfe4505c54490402e70823335cb3cd16", "url": "https://github.com/palantir/atlasdb/commit/0a6e3ee6dfe4505c54490402e70823335cb3cd16", "message": "Borrow WC variants of executor views to reduce thread count and increase reuse\n\nNote that this includes an API+ABI break for fixed-size-executor factory\nmethods which have been updated to return ExecutorService instead\nof ThreadPoolExecutor.", "committedDate": "2020-07-01T18:55:19Z", "type": "commit"}, {"oid": "8e42db57fbd49bffcf1d731bfa3ef16c02d8357b", "url": "https://github.com/palantir/atlasdb/commit/8e42db57fbd49bffcf1d731bfa3ef16c02d8357b", "message": "changelog", "committedDate": "2020-07-01T18:55:19Z", "type": "commit"}, {"oid": "8e42db57fbd49bffcf1d731bfa3ef16c02d8357b", "url": "https://github.com/palantir/atlasdb/commit/8e42db57fbd49bffcf1d731bfa3ef16c02d8357b", "message": "changelog", "committedDate": "2020-07-01T18:55:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5MjgxMQ==", "url": "https://github.com/palantir/atlasdb/pull/4877#discussion_r449092811", "bodyText": "This PR merged, though I wouldn't block on us using the alternative there. I checked for equivalence - it seems we have a bit more interrupt handling logic here.", "author": "jeremyk-91", "createdAt": "2020-07-02T15:34:51Z", "path": "commons-executors/src/main/java/com/palantir/common/concurrent/AtlasQueuedViewExecutor.java", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ */\n+\n+package com.palantir.common.concurrent;\n+\n+import java.util.ArrayDeque;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.RejectedExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Borrowed from jboss-threads. http://www.apache.org/licenses/LICENSE-2.0\n+ * https://github.com/jbossas/jboss-threads/blob/master/src/main/java/org/jboss/threads/QueuedViewExecutor.java Changes\n+ * have been contributed and merged, this may be replaced by the upstream ViewExecutor pending a release including\n+ * https://github.com/jbossas/jboss-threads/pull/85.", "originalCommit": "8e42db57fbd49bffcf1d731bfa3ef16c02d8357b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzNDI3Mg==", "url": "https://github.com/palantir/atlasdb/pull/4877#discussion_r449134272", "bodyText": "pull/86 hasn't merged quite yet, but it's much less substantial than the others. Folks on their end are busy.", "author": "carterkozak", "createdAt": "2020-07-02T16:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5MjgxMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5MzU2Mw==", "url": "https://github.com/palantir/atlasdb/pull/4877#discussion_r449093563", "bodyText": "nit: this is private so we could probably remove the unused corepoolsize parameter.", "author": "jeremyk-91", "createdAt": "2020-07-02T15:35:29Z", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/Leaders.java", "diffHunk": "@@ -239,20 +232,7 @@ public static LocalPaxosServices createInstrumentedLocalServices(\n     // TODO (jkong): Make the limits configurable.\n     // Current use cases tend to have not more than 10 (<< 100) inflight tasks under normal circumstances.\n     private static ExecutorService createExecutor(MetricsManager metricsManager, String useCase, int corePoolSize) {", "originalCommit": "8e42db57fbd49bffcf1d731bfa3ef16c02d8357b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMzEyNQ==", "url": "https://github.com/palantir/atlasdb/pull/4877#discussion_r449133125", "bodyText": "iirc it's passed through several methods and I wanted to keep the code churn to a minimum.", "author": "carterkozak", "createdAt": "2020-07-02T16:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5MzU2Mw=="}], "type": "inlineReview", "revised_code": null}]}