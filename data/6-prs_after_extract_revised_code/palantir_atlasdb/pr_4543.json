{"pr_number": 4543, "pr_title": "Better log when rolled back by someone else", "pr_createdAt": "2020-01-30T12:59:54Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4543", "timeline": [{"oid": "99a708e0e71903da3a85965b16732b72b6fbe86d", "url": "https://github.com/palantir/atlasdb/commit/99a708e0e71903da3a85965b16732b72b6fbe86d", "message": "Better log line", "committedDate": "2020-01-30T12:56:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk1Mjc3NA==", "url": "https://github.com/palantir/atlasdb/pull/4543#discussion_r372952774", "bodyText": "This will break logging again: LeasedLockToken is not loggable by our logging infra. So either get rid of the args in this logline or figure out how to collect the stuff you need in a way that's loggable.", "author": "jkozlowski", "createdAt": "2020-01-30T13:41:31Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java", "diffHunk": "@@ -2260,8 +2260,7 @@ private void handleKeyAlreadyExistsException(\n                         + \" because our locks timed out. startTs: \" + getStartTimestamp() + \".  \"\n                         + getExpiredLocksErrorString(commitLocksToken, expiredLocks), ex);\n             } else {\n-                log.debug(\"Possible bug: Someone rolled back our transaction but\"\n-                        + \" our locks were still valid; Atlas code is not allowed to do this, though others can.\",\n+                log.info(\"This transaction has been rolled back by someone else.\",\n                         SafeArg.of(\"immutableTimestampLock\", immutableTimestampLock),", "originalCommit": "99a708e0e71903da3a85965b16732b72b6fbe86d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk1MzI5Ng==", "url": "https://github.com/palantir/atlasdb/pull/4543#discussion_r372953296", "bodyText": "For this to be useful, probably startTimestamp would be pretty useful as an arg? But then again should probably be collectable by traceId", "author": "jkozlowski", "createdAt": "2020-01-30T13:42:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk1Mjc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "75a0ccb66f41405bdaf52fdae10672fa310ff1e1", "chunk": "diff --git a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\nindex 31fc6ec6c8..b24f499260 100644\n--- a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n+++ b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n\n@@ -2261,8 +2270,9 @@ public class SnapshotTransaction extends AbstractTransaction implements Constrai\n                         + getExpiredLocksErrorString(commitLocksToken, expiredLocks), ex);\n             } else {\n                 log.info(\"This transaction has been rolled back by someone else.\",\n-                        SafeArg.of(\"immutableTimestampLock\", immutableTimestampLock),\n-                        SafeArg.of(\"commitLocksToken\", commitLocksToken));\n+                        SafeArg.of(\"immutableTimestampLock\",\n+                                immutableTimestampLock.map(SnapshotTransaction::getServerTokenIfLeased)),\n+                        SafeArg.of(\"commitLocksToken\", getServerTokenIfLeased(commitLocksToken)));\n             }\n         } catch (TransactionFailedException e1) {\n             throw e1;\n"}}, {"oid": "75a0ccb66f41405bdaf52fdae10672fa310ff1e1", "url": "https://github.com/palantir/atlasdb/commit/75a0ccb66f41405bdaf52fdae10672fa310ff1e1", "message": "Get server tokens", "committedDate": "2020-01-30T15:27:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA0MzU1Ng==", "url": "https://github.com/palantir/atlasdb/pull/4543#discussion_r373043556", "bodyText": "@gmaretic would you be able to quickly test manually using an internal product to see that this logline works?", "author": "jkozlowski", "createdAt": "2020-01-30T16:10:49Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java", "diffHunk": "@@ -2260,10 +2269,10 @@ private void handleKeyAlreadyExistsException(\n                         + \" because our locks timed out. startTs: \" + getStartTimestamp() + \".  \"\n                         + getExpiredLocksErrorString(commitLocksToken, expiredLocks), ex);\n             } else {\n-                log.debug(\"Possible bug: Someone rolled back our transaction but\"\n-                        + \" our locks were still valid; Atlas code is not allowed to do this, though others can.\",\n-                        SafeArg.of(\"immutableTimestampLock\", immutableTimestampLock),\n-                        SafeArg.of(\"commitLocksToken\", commitLocksToken));\n+                log.info(\"This transaction has been rolled back by someone else.\",\n+                        SafeArg.of(\"immutableTimestampLock\",", "originalCommit": "75a0ccb66f41405bdaf52fdae10672fa310ff1e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a36366ea80a1fe1049b4dc6652e302ffbfb5c71", "chunk": "diff --git a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\nindex b24f499260..ca788a3b1a 100644\n--- a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n+++ b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n\n@@ -2270,8 +2279,9 @@ public class SnapshotTransaction extends AbstractTransaction implements Constrai\n                         + getExpiredLocksErrorString(commitLocksToken, expiredLocks), ex);\n             } else {\n                 log.info(\"This transaction has been rolled back by someone else.\",\n-                        SafeArg.of(\"immutableTimestampLock\",\n-                                immutableTimestampLock.map(SnapshotTransaction::getServerTokenIfLeased)),\n+                        SafeArg.of(\"immutableTimestampLock\", immutableTimestampLock\n+                                .map(SnapshotTransaction::getTokenIfShared)\n+                                .map(SnapshotTransaction::getServerTokenIfLeased)),\n                         SafeArg.of(\"commitLocksToken\", getServerTokenIfLeased(commitLocksToken)));\n             }\n         } catch (TransactionFailedException e1) {\n"}}, {"oid": "7a36366ea80a1fe1049b4dc6652e302ffbfb5c71", "url": "https://github.com/palantir/atlasdb/commit/7a36366ea80a1fe1049b4dc6652e302ffbfb5c71", "message": "More unwrapping, tested using ETE tests", "committedDate": "2020-01-31T13:50:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwMjk0NA==", "url": "https://github.com/palantir/atlasdb/pull/4543#discussion_r374002944", "bodyText": "At this point maybe we should just add something to the LockToken interface that is going to return a String that can be used for logging? Or maybe an Arg straight away? https://github.com/palantir/safe-logging/blob/develop/safe-logging/src/main/java/com/palantir/logsafe/SafeArg.java", "author": "jkozlowski", "createdAt": "2020-02-03T09:42:43Z", "path": "lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java", "diffHunk": "@@ -24,7 +24,7 @@\n import com.palantir.lock.v2.LockToken;\n import com.palantir.logsafe.Preconditions;\n \n-final class LockTokenShare implements LockToken {\n+public final class LockTokenShare implements LockToken {", "originalCommit": "7a36366ea80a1fe1049b4dc6652e302ffbfb5c71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25ed7a4c8a1511a95ce090c520cd112c55c24173", "chunk": "diff --git a/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java b/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java\nindex 75a2c7b564..bafaf42e24 100644\n--- a/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java\n+++ b/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java\n\n@@ -23,6 +23,7 @@ import java.util.stream.Stream;\n \n import com.palantir.lock.v2.LockToken;\n import com.palantir.logsafe.Preconditions;\n+import com.palantir.logsafe.SafeArg;\n \n public final class LockTokenShare implements LockToken {\n     private final UUID requestId;\n"}}, {"oid": "25ed7a4c8a1511a95ce090c520cd112c55c24173", "url": "https://github.com/palantir/atlasdb/commit/25ed7a4c8a1511a95ce090c520cd112c55c24173", "message": "Add toSafeArg method to LockToken", "committedDate": "2020-02-05T13:39:02Z", "type": "commit"}, {"oid": "729f37e7c394c685be2e9059426a7154da007842", "url": "https://github.com/palantir/atlasdb/commit/729f37e7c394c685be2e9059426a7154da007842", "message": "Merge branch 'develop' of github.com:palantir/atlasdb into fix/rollback-log", "committedDate": "2020-02-05T13:39:11Z", "type": "commit"}, {"oid": "a08186cbfa239d62d699d2aff0d6749d22bd4a76", "url": "https://github.com/palantir/atlasdb/commit/a08186cbfa239d62d699d2aff0d6749d22bd4a76", "message": "Test", "committedDate": "2020-02-05T14:00:50Z", "type": "commit"}, {"oid": "2f023803ed094e1c03310a147d69c281646fa3de", "url": "https://github.com/palantir/atlasdb/commit/2f023803ed094e1c03310a147d69c281646fa3de", "message": "Be better", "committedDate": "2020-02-05T16:54:53Z", "type": "commit"}, {"oid": "ecc53a576fa7da8ed662c58421cca887bed0adbd", "url": "https://github.com/palantir/atlasdb/commit/ecc53a576fa7da8ed662c58421cca887bed0adbd", "message": "Merge branch 'develop' of github.com:palantir/atlasdb into fix/rollback-log", "committedDate": "2020-02-06T09:18:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxMzEwNA==", "url": "https://github.com/palantir/atlasdb/pull/4543#discussion_r375913104", "bodyText": "These publics are not necessary anymore?", "author": "jkozlowski", "createdAt": "2020-02-06T15:44:29Z", "path": "lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java", "diffHunk": "@@ -23,8 +23,9 @@\n \n import com.palantir.lock.v2.LockToken;\n import com.palantir.logsafe.Preconditions;\n+import com.palantir.logsafe.SafeArg;\n \n-final class LockTokenShare implements LockToken {\n+public final class LockTokenShare implements LockToken {", "originalCommit": "ecc53a576fa7da8ed662c58421cca887bed0adbd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2385025966f8426b4ae8e8105c9023f4bbd39eef", "chunk": "diff --git a/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java b/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java\nindex bafaf42e24..555e3d2403 100644\n--- a/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java\n+++ b/lock-api/src/main/java/com/palantir/lock/client/LockTokenShare.java\n\n@@ -25,7 +25,7 @@ import com.palantir.lock.v2.LockToken;\n import com.palantir.logsafe.Preconditions;\n import com.palantir.logsafe.SafeArg;\n \n-public final class LockTokenShare implements LockToken {\n+final class LockTokenShare implements LockToken {\n     private final UUID requestId;\n     private final LockToken sharedLockToken;\n     private final ReferenceCounter referenceCounter;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjEyMg==", "url": "https://github.com/palantir/atlasdb/pull/4543#discussion_r375982122", "bodyText": "We should say we still have our locks, otherwise it's not clear what the args are meant to mean.", "author": "jeremyk-91", "createdAt": "2020-02-06T17:39:09Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java", "diffHunk": "@@ -2260,10 +2260,11 @@ private void handleKeyAlreadyExistsException(\n                         + \" because our locks timed out. startTs: \" + getStartTimestamp() + \".  \"\n                         + getExpiredLocksErrorString(commitLocksToken, expiredLocks), ex);\n             } else {\n-                log.debug(\"Possible bug: Someone rolled back our transaction but\"\n-                        + \" our locks were still valid; Atlas code is not allowed to do this, though others can.\",\n-                        SafeArg.of(\"immutableTimestampLock\", immutableTimestampLock),\n-                        SafeArg.of(\"commitLocksToken\", commitLocksToken));\n+                log.info(\"This transaction has been rolled back by someone else.\",", "originalCommit": "ecc53a576fa7da8ed662c58421cca887bed0adbd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2385025966f8426b4ae8e8105c9023f4bbd39eef", "chunk": "diff --git a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\nindex c40e0126ca..9a2b11b6b6 100644\n--- a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n+++ b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java\n\n@@ -2260,7 +2260,8 @@ public class SnapshotTransaction extends AbstractTransaction implements Constrai\n                         + \" because our locks timed out. startTs: \" + getStartTimestamp() + \".  \"\n                         + getExpiredLocksErrorString(commitLocksToken, expiredLocks), ex);\n             } else {\n-                log.info(\"This transaction has been rolled back by someone else.\",\n+                log.info(\"This transaction has been rolled back by someone else, even though we believe we still hold \"\n+                                + \"the locks. This is not expected to occur frequently.\",\n                         immutableTimestampLock\n                                 .map(token -> token.toSafeArg(\"immutableTimestampLock\"))\n                                 .orElseGet(() -> SafeArg.of(\"immutableTimestampLock\", null)),\n"}}, {"oid": "2385025966f8426b4ae8e8105c9023f4bbd39eef", "url": "https://github.com/palantir/atlasdb/commit/2385025966f8426b4ae8e8105c9023f4bbd39eef", "message": "Improve message, make LTS package private again", "committedDate": "2020-02-07T10:14:37Z", "type": "commit"}]}