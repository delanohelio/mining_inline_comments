{"pr_number": 4607, "pr_title": "SweepStrategyManagers only load one table metadata on cache miss", "pr_createdAt": "2020-02-26T20:38:28Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4607", "timeline": [{"oid": "111761046bf748cbeed3f63f8993571337ba2071", "url": "https://github.com/palantir/atlasdb/commit/111761046bf748cbeed3f63f8993571337ba2071", "message": "SweepStrategyManagers only load one table metadata on cache miss", "committedDate": "2020-02-26T20:36:02Z", "type": "commit"}, {"oid": "f53546830f2a9b282c457942fc5c38038e246977", "url": "https://github.com/palantir/atlasdb/commit/f53546830f2a9b282c457942fc5c38038e246977", "message": "Add generated changelog entries", "committedDate": "2020-02-26T20:36:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2ODU1Ng==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r384768556", "bodyText": "The way you wrote this, this will never return null.", "author": "tjwilson90", "createdAt": "2020-02-26T21:13:16Z", "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java", "diffHunk": "@@ -33,13 +35,15 @@ private SweepStrategyManagers() {\n     }\n \n     public static SweepStrategyManager createDefault(KeyValueService kvs) {\n-        RecomputingSupplier<Map<TableReference, SweepStrategy>> supplier =\n-                RecomputingSupplier.create(() -> getSweepStrategies(kvs));\n+        // On a cache miss, load metadata only for the relevant table. Helpful when many dynamic tables.\n+        LoadingCache<TableReference, SweepStrategy> cache = Caffeine.newBuilder()\n+                .build(tableRef -> getSweepStrategy(kvs.getMetadataForTable(tableRef)));\n         return tableRef -> {\n-            SweepStrategy strategy = supplier.get().get(tableRef);\n-            if (strategy == null) {\n-                strategy = supplier.recompute().get(tableRef);\n+            // Add all existing tables the first time this is called, to optimize for cases when mostly non-dynamic tables.\n+            if (cache.estimatedSize() == 0) {\n+                cache.putAll(getSweepStrategies(kvs));\n             }\n+            SweepStrategy strategy = cache.get(tableRef);", "originalCommit": "111761046bf748cbeed3f63f8993571337ba2071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3MzI1NA==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386473254", "bodyText": "It could be if we queried for a tableRef for a table that had already been deleted by the time Atlas initialized, right?", "author": "mswintermeyer", "createdAt": "2020-03-02T15:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2ODU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NTY0NQ==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386485645", "bodyText": "getSweepStrategy never returns null though right? Similarly TableMetadata.BYTES_HYDRATOR.hydrateFromBytes(tableMeta).getSweepStrategy().", "author": "felixdesouza", "createdAt": "2020-03-02T16:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2ODU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NzU0MA==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386487540", "bodyText": "Oh yeah.. argh, I need coffee before I deal with support tickets in the morning", "author": "mswintermeyer", "createdAt": "2020-03-02T16:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2ODU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5b64b2aac5f1872a1ef3a66563e0518e409e7f7d", "chunk": "diff --git a/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java b/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java\nindex 4e804639cf..756d86822d 100644\n--- a/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java\n+++ b/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java\n\n@@ -43,8 +43,7 @@ public class SweepStrategyManagers {\n             if (cache.estimatedSize() == 0) {\n                 cache.putAll(getSweepStrategies(kvs));\n             }\n-            SweepStrategy strategy = cache.get(tableRef);\n-            return Preconditions.checkNotNull(strategy, \"unknown table\", SafeArg.of(\"tableRef\", tableRef));\n+            return cache.get(tableRef);\n         };\n     }\n \n"}}, {"oid": "7c004bcfab6832770f69ef9a0d8fbd7ef4bc8010", "url": "https://github.com/palantir/atlasdb/commit/7c004bcfab6832770f69ef9a0d8fbd7ef4bc8010", "message": "empty commit to retrigger build flake", "committedDate": "2020-03-02T15:53:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386484316", "bodyText": "in this initial case doesn't this degrade to the version on the left on initial load? or is that an acceptable compromise?", "author": "felixdesouza", "createdAt": "2020-03-02T16:01:53Z", "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java", "diffHunk": "@@ -33,13 +35,15 @@ private SweepStrategyManagers() {\n     }\n \n     public static SweepStrategyManager createDefault(KeyValueService kvs) {\n-        RecomputingSupplier<Map<TableReference, SweepStrategy>> supplier =\n-                RecomputingSupplier.create(() -> getSweepStrategies(kvs));\n+        // On a cache miss, load metadata only for the relevant table. Helpful when many dynamic tables.\n+        LoadingCache<TableReference, SweepStrategy> cache = Caffeine.newBuilder()\n+                .build(tableRef -> getSweepStrategy(kvs.getMetadataForTable(tableRef)));\n         return tableRef -> {\n-            SweepStrategy strategy = supplier.get().get(tableRef);\n-            if (strategy == null) {\n-                strategy = supplier.recompute().get(tableRef);\n+            // Add all existing tables the first time this is called, to optimize for cases when mostly non-dynamic tables.\n+            if (cache.estimatedSize() == 0) {\n+                cache.putAll(getSweepStrategies(kvs));", "originalCommit": "f53546830f2a9b282c457942fc5c38038e246977", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ5MjY2NA==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386492664", "bodyText": "If you are asking if it's okay to load all tables a single time: Even before #4542, we loaded the sweep strategy for all tables initially, and hadn't heard complaints around perf. So my guess is this is just a problem when dynamic tables get created often, and thus now we limit loading all tables to only happen once.\nIf your concern is instead about how we no longer clear deleted table entries from the cache after seeing a new table entry: I hope that's fine.", "author": "mswintermeyer", "createdAt": "2020-03-02T16:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUxNDk4Ng==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386514986", "bodyText": "There's still a potential problem here where if loading all the sweep strategies takes a long time, you could have many threads all hit this case (as the cache size would still be 0 while the first thread is still loading).", "author": "berler", "createdAt": "2020-03-02T16:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUyMDMwNA==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386520304", "bodyText": "hmm yeah, might we want to have a Suppliers.memoize on line 42?", "author": "felixdesouza", "createdAt": "2020-03-02T16:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUyMjYyOA==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386522628", "bodyText": "If memoizing, we'd want that to happen outside of the lambda, right? (Line 42 is inside the lambda)", "author": "mswintermeyer", "createdAt": "2020-03-02T17:01:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUyNzcxOA==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386527718", "bodyText": "oop I can't read lol, but yes", "author": "felixdesouza", "createdAt": "2020-03-02T17:10:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUzMDcxMg==", "url": "https://github.com/palantir/atlasdb/pull/4607#discussion_r386530712", "bodyText": "Pushed #4625", "author": "mswintermeyer", "createdAt": "2020-03-02T17:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4NDMxNg=="}], "type": "inlineReview", "revised_code": {"commit": "5b64b2aac5f1872a1ef3a66563e0518e409e7f7d", "chunk": "diff --git a/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java b/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java\nindex 4e804639cf..756d86822d 100644\n--- a/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java\n+++ b/atlasdb-client/src/main/java/com/palantir/atlasdb/transaction/impl/SweepStrategyManagers.java\n\n@@ -43,8 +43,7 @@ public class SweepStrategyManagers {\n             if (cache.estimatedSize() == 0) {\n                 cache.putAll(getSweepStrategies(kvs));\n             }\n-            SweepStrategy strategy = cache.get(tableRef);\n-            return Preconditions.checkNotNull(strategy, \"unknown table\", SafeArg.of(\"tableRef\", tableRef));\n+            return cache.get(tableRef);\n         };\n     }\n \n"}}, {"oid": "5b64b2aac5f1872a1ef3a66563e0518e409e7f7d", "url": "https://github.com/palantir/atlasdb/commit/5b64b2aac5f1872a1ef3a66563e0518e409e7f7d", "message": "remove null check", "committedDate": "2020-03-02T16:07:38Z", "type": "commit"}, {"oid": "6081dde199ed705c9590199f50a67d1f7470c1f5", "url": "https://github.com/palantir/atlasdb/commit/6081dde199ed705c9590199f50a67d1f7470c1f5", "message": "clean up changelog", "committedDate": "2020-03-02T16:18:45Z", "type": "commit"}, {"oid": "80af1bde30dc9c8305e37aa5998832c2f17984aa", "url": "https://github.com/palantir/atlasdb/commit/80af1bde30dc9c8305e37aa5998832c2f17984aa", "message": "empty commit to retrigger build flake", "committedDate": "2020-03-02T16:30:00Z", "type": "commit"}]}