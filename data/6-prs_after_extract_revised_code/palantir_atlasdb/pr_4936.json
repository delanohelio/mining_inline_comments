{"pr_number": 4936, "pr_title": "[PD$-110002] Part 14: TargetedSweepOutcomes should be protected by the TargetedSweepMetricsPublicationFilter", "pr_createdAt": "2020-08-11T09:34:54Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4936", "timeline": [{"oid": "7dbe06dfb6bd29d92a7dbcd2376a842db16cc421", "url": "https://github.com/palantir/atlasdb/commit/7dbe06dfb6bd29d92a7dbcd2376a842db16cc421", "message": "Guard TS outcomes by the filter", "committedDate": "2020-08-11T09:29:57Z", "type": "commit"}, {"oid": "0550da3b629d867113bc073d813b10cf60754a2d", "url": "https://github.com/palantir/atlasdb/commit/0550da3b629d867113bc073d813b10cf60754a2d", "message": "Add generated changelog entries", "committedDate": "2020-08-11T09:29:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MDc1NQ==", "url": "https://github.com/palantir/atlasdb/pull/4936#discussion_r468540755", "bodyText": "can we have tests for this change?", "author": "sudiksha27", "createdAt": "2020-08-11T12:26:39Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/metrics/SweepOutcomeMetrics.java", "diffHunk": "@@ -71,15 +86,24 @@ public void registerOccurrenceOf(SweepOutcome outcome) {\n             MetricsManager manager,\n             List<SweepOutcome> outcomes,\n             Map<String, String> additionalTags,\n-            Class<?> forClass) {\n+            Class<?> forClass,\n+            Optional<MetricPublicationFilter> filter) {\n         return Suppliers.memoize(() -> {\n             Metrics metrics = ImmutableSweepOutcomeMetrics.Metrics.builder().build();\n-            outcomes.forEach(outcome -> manager.registerOrGet(forClass, AtlasDbMetricNames.SWEEP_OUTCOME,\n-                    () -> getOutcomeCount(metrics, outcome),\n-                    ImmutableMap.<String, String>builder()\n-                            .putAll(additionalTags)\n-                            .put(AtlasDbMetricNames.TAG_OUTCOME, outcome.name())\n-                            .build()));\n+            outcomes.forEach(outcome -> {\n+                ImmutableMap<String, String> tags = ImmutableMap.<String, String>builder()\n+                        .putAll(additionalTags)\n+                        .put(AtlasDbMetricNames.TAG_OUTCOME, outcome.name())\n+                        .build();\n+                filter.ifPresent(presentFilter -> manager.addMetricFilter(\n+                        forClass,\n+                        AtlasDbMetricNames.SWEEP_OUTCOME,\n+                        tags,\n+                        filter.get()));\n+                manager.registerOrGet(forClass, AtlasDbMetricNames.SWEEP_OUTCOME,\n+                        () -> getOutcomeCount(metrics, outcome),\n+                        tags);", "originalCommit": "0550da3b629d867113bc073d813b10cf60754a2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYzNDQyMQ==", "url": "https://github.com/palantir/atlasdb/pull/4936#discussion_r468634421", "bodyText": "Argh! Well spotted, I forgot to push the commit with the tests :(", "author": "jeremyk-91", "createdAt": "2020-08-11T14:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MDc1NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "92299b00a200759e58988b62e17bf39adbd4dfd2", "url": "https://github.com/palantir/atlasdb/commit/92299b00a200759e58988b62e17bf39adbd4dfd2", "message": "SweepOutcomeMetricsTest", "committedDate": "2020-08-11T14:48:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY1OTA2NA==", "url": "https://github.com/palantir/atlasdb/pull/4936#discussion_r468659064", "bodyText": "Sorry i din't understand why you need to register on SweepOutcomeMetrics at all/ with a different metrics manager?", "author": "sudiksha27", "createdAt": "2020-08-11T15:14:09Z", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/metrics/SweepOutcomeMetricsTest.java", "diffHunk": "@@ -112,4 +113,23 @@ public void targetedSweepDoesNotRegisterExcludedOutcomes() {\n                 .filter(outcome -> !SweepOutcomeMetrics.TARGETED_OUTCOMES.contains(outcome))\n                 .forEach(outcome -> assertThat(metricsManager).hasNotRegisteredTargetedOutcome(THOROUGH, outcome));\n     }\n+\n+    @Test\n+    public void canFilterOutUninterestingMetrics() {\n+        MetricsManager differentManager = MetricsManagers.createAlwaysSafeAndFilteringForTests();\n+        SweepOutcomeMetrics.registerTargeted(\n+                metricsManager,\n+                ImmutableMap.of(\"strategy\", \"thorough\"),\n+                () -> false);\n+        TargetedSweepMetrics targetedMetrics = TargetedSweepMetrics", "originalCommit": "92299b00a200759e58988b62e17bf39adbd4dfd2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca4a35ff3ab2859734beb2d4247749eea9107124", "chunk": "diff --git a/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/metrics/SweepOutcomeMetricsTest.java b/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/metrics/SweepOutcomeMetricsTest.java\nindex ab98fe8e9b..337bdd301d 100644\n--- a/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/metrics/SweepOutcomeMetricsTest.java\n+++ b/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/metrics/SweepOutcomeMetricsTest.java\n\n@@ -116,20 +116,20 @@ public class SweepOutcomeMetricsTest {\n \n     @Test\n     public void canFilterOutUninterestingMetrics() {\n-        MetricsManager differentManager = MetricsManagers.createAlwaysSafeAndFilteringForTests();\n         SweepOutcomeMetrics.registerTargeted(\n                 metricsManager,\n                 ImmutableMap.of(\"strategy\", \"thorough\"),\n                 () -> false);\n         TargetedSweepMetrics targetedMetrics = TargetedSweepMetrics\n-                .create(differentManager, mock(TimelockService.class), new InMemoryKeyValueService(true),\n+                .create(metricsManager, mock(TimelockService.class), new InMemoryKeyValueService(true),\n                         TargetedSweepMetrics.MetricsConfiguration.builder()\n                                 .millisBetweenRecomputingMetrics(Long.MAX_VALUE)\n                                 .build());\n \n         SweepOutcomeMetrics.TARGETED_OUTCOMES.forEach(outcome -> {\n             targetedMetrics.registerOccurrenceOf(ShardAndStrategy.thorough(1), outcome);\n-            assertThat(metricsManager).hasNotRegisteredTargetedOutcome(THOROUGH, outcome);\n         });\n+\n+        org.assertj.core.api.Assertions.assertThat(metricsManager.getPublishableMetrics().getMetrics()).isEmpty();\n     }\n }\n"}}, {"oid": "ca4a35ff3ab2859734beb2d4247749eea9107124", "url": "https://github.com/palantir/atlasdb/commit/ca4a35ff3ab2859734beb2d4247749eea9107124", "message": "Cleanup. Sigh", "committedDate": "2020-08-11T16:40:39Z", "type": "commit"}]}