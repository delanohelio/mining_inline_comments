{"pr_number": 5106, "pr_title": "[LW] Check the correct client versions range", "pr_createdAt": "2020-11-09T13:04:05Z", "pr_url": "https://github.com/palantir/atlasdb/pull/5106", "timeline": [{"oid": "b81c3c27bb6ee2c86c2c616c2f9ac355f3ee0e77", "url": "https://github.com/palantir/atlasdb/commit/b81c3c27bb6ee2c86c2c616c2f9ac355f3ee0e77", "message": "caught another one", "committedDate": "2020-11-09T13:02:06Z", "type": "commit"}, {"oid": "8717a3fcfd4984552b1b821a6ad2f3b04fb26e7b", "url": "https://github.com/palantir/atlasdb/commit/8717a3fcfd4984552b1b821a6ad2f3b04fb26e7b", "message": "Add generated changelog entries", "committedDate": "2020-11-09T13:02:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxNDQ2Ng==", "url": "https://github.com/palantir/atlasdb/pull/5106#discussion_r521414466", "bodyText": "...ensure that events are present for each version starting with client version (exclusive) and ending with transaction version (inclusive).", "author": "gmaretic", "createdAt": "2020-11-11T14:55:19Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLogEvents.java", "diffHunk": "@@ -53,14 +53,20 @@\n \n     default TransactionsLockWatchUpdate toTransactionsLockWatchUpdate(\n             TimestampMapping timestampMapping, Optional<LockWatchVersion> lastKnownVersion) {\n-        // If the client is at the same version as the earliest version in the timestamp mapping, then they will\n-        // only receive versions after that - and therefore the range of versions coming back from the events will not\n-        // enclose the versions in the mapping. This flag makes sure that we don't throw on this case\n-        boolean offsetStartVersion = lastKnownVersion\n-                .map(version ->\n-                        version.version() == timestampMapping.versionRange().lowerEndpoint())\n-                .orElse(false);\n-        verifyReturnedEventsEnclosesTransactionVersions(timestampMapping.versionRange(), offsetStartVersion);\n+        /*\n+         Case 1: client is behind earliest transaction. Therefore we want to ensure that there are events from", "originalCommit": "8717a3fcfd4984552b1b821a6ad2f3b04fb26e7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3a2e3ed4bb9685d80106f5f1e7b76d3dd39e2d8", "chunk": "diff --git a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLogEvents.java b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLogEvents.java\nindex a802517f65..2d398e9ea0 100644\n--- a/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLogEvents.java\n+++ b/atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLogEvents.java\n\n@@ -54,8 +54,9 @@ interface ClientLogEvents {\n     default TransactionsLockWatchUpdate toTransactionsLockWatchUpdate(\n             TimestampMapping timestampMapping, Optional<LockWatchVersion> lastKnownVersion) {\n         /*\n-         Case 1: client is behind earliest transaction. Therefore we want to ensure that there are events from\n-                 after the client version up to the latest transaction version.\n+         Case 1: client is behind earliest transaction. Therefore we want to ensure that there are events present for\n+                 each version starting with the client version (exclusive) and ending with latest transaction version\n+                 (inclusive).\n          Case 2: client is at least as up-to-date as the earliest transaction. The check here is the same as above.\n          Case 3: client is completely up-to-date. Here, we don't need to check for any versions.\n          Case 4: client has no version. Then we expect that the events returned at least enclose the versions of\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxODczMg==", "url": "https://github.com/palantir/atlasdb/pull/5106#discussion_r521418732", "bodyText": "Range.openClosed so you don't need to do +1 on the lower bound everywhere", "author": "gmaretic", "createdAt": "2020-11-11T15:01:30Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLogEvents.java", "diffHunk": "@@ -73,28 +79,23 @@ default CommitUpdate toCommitUpdate(LockWatchVersion startVersion, CommitInfo co\n             return ImmutableInvalidateAll.builder().build();\n         }\n \n+        // We want to ensure that we do not miss any versions, but we do not care about the event with the same version\n+        // as the start version.\n         verifyReturnedEventsEnclosesTransactionVersions(\n-                Range.closed(startVersion.version(), commitInfo.commitVersion().version()), true);\n+                startVersion.version() + 1, commitInfo.commitVersion().version());\n \n         LockEventVisitor eventVisitor = new LockEventVisitor(commitInfo.commitLockToken());\n         Set<LockDescriptor> locksTakenOut = new HashSet<>();\n         events().events().forEach(event -> locksTakenOut.addAll(event.accept(eventVisitor)));\n         return ImmutableInvalidateSome.builder().invalidatedLocks(locksTakenOut).build();\n     }\n \n-    default void verifyReturnedEventsEnclosesTransactionVersions(Range<Long> versionRange, boolean offsetStartVersion) {\n-        // If we offset the start version, but the range is already [x..x], we throw when creating the range.\n-        if (versionRange.lowerEndpoint().equals(versionRange.upperEndpoint()) && offsetStartVersion) {\n+    default void verifyReturnedEventsEnclosesTransactionVersions(long lowerBound, long upperBound) {\n+        if (lowerBound > upperBound) {\n             return;\n         }\n \n-        Range<Long> rangeToTest;\n-        if (offsetStartVersion) {\n-            rangeToTest = Range.closed(versionRange.lowerEndpoint() + 1, versionRange.upperEndpoint());\n-        } else {\n-            rangeToTest = versionRange;\n-        }\n-\n+        Range<Long> rangeToTest = Range.closed(lowerBound, upperBound);", "originalCommit": "8717a3fcfd4984552b1b821a6ad2f3b04fb26e7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQyMjU3OQ==", "url": "https://github.com/palantir/atlasdb/pull/5106#discussion_r521422579", "bodyText": "Though I guess you need a -1 :D", "author": "gmaretic", "createdAt": "2020-11-11T15:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxODczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ1Mzk0Mw==", "url": "https://github.com/palantir/atlasdb/pull/5106#discussion_r521453943", "bodyText": "Yeah nope, because there is one case where you need something different - probably easier at this point to just add the one.", "author": "Jolyon-S", "createdAt": "2020-11-11T15:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxODczMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "b3a2e3ed4bb9685d80106f5f1e7b76d3dd39e2d8", "url": "https://github.com/palantir/atlasdb/commit/b3a2e3ed4bb9685d80106f5f1e7b76d3dd39e2d8", "message": "literally just change a comment", "committedDate": "2020-11-11T15:51:36Z", "type": "commit"}, {"oid": "78e8ee7522a05dfce2f901c34c1dc44c7fbd621b", "url": "https://github.com/palantir/atlasdb/commit/78e8ee7522a05dfce2f901c34c1dc44c7fbd621b", "message": "Merge branch 'lw/mid-version-fix' of github.com:palantir/atlasdb into lw/mid-version-fix", "committedDate": "2020-11-11T15:51:46Z", "type": "commit"}]}