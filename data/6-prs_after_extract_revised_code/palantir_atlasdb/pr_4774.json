{"pr_number": 4774, "pr_title": "[PaxosStateLog] Implement Different Migration States", "pr_createdAt": "2020-05-14T12:52:22Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4774", "timeline": [{"oid": "9d3071306389687cd9b05f48902a1641a3b791a3", "url": "https://github.com/palantir/atlasdb/commit/9d3071306389687cd9b05f48902a1641a3b791a3", "message": "Implement different state support", "committedDate": "2020-05-13T16:07:34Z", "type": "commit"}, {"oid": "40f00c368317882a67160675e25ef35a4e0db70a", "url": "https://github.com/palantir/atlasdb/commit/40f00c368317882a67160675e25ef35a4e0db70a", "message": "Add migrated state", "committedDate": "2020-05-13T16:17:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MjY2OQ==", "url": "https://github.com/palantir/atlasdb/pull/4774#discussion_r425172669", "bodyText": "Discussed offline: Let's validate that we aren't in migrated state before doing this.", "author": "jeremyk-91", "createdAt": "2020-05-14T14:17:41Z", "path": "leader-election-impl/src/main/java/com/palantir/paxos/SqlitePaxosStateLogMigrationState.java", "diffHunk": "@@ -52,12 +53,24 @@ private void initialize() {\n         execute(Queries::createTable);\n     }\n \n-    public void finishMigration() {\n-        execute(dao -> dao.finishMigration(namespace, useCase));\n+    public void migrateToValidationState() {\n+        execute(dao -> dao.migrateToVersion(namespace, useCase, States.VALIDATION.schemaVersion));", "originalCommit": "40f00c368317882a67160675e25ef35a4e0db70a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MzE5NA==", "url": "https://github.com/palantir/atlasdb/pull/4774#discussion_r425173194", "bodyText": "nit: let's check that it's false at some point", "author": "jeremyk-91", "createdAt": "2020-05-14T14:18:25Z", "path": "leader-election-impl/src/test/java/com/palantir/paxos/FileToSqlitePaxosStateLogIntegrationTest.java", "diffHunk": "@@ -54,7 +54,7 @@ public void setup() throws IOException {\n     @Test\n     public void emptyMigrationSucceeds() {\n         migrate();", "originalCommit": "40f00c368317882a67160675e25ef35a4e0db70a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3Mzc2NQ==", "url": "https://github.com/palantir/atlasdb/pull/4774#discussion_r425173765", "bodyText": "Last 4 lines would be different if we're not allowing migrated -> validated state.", "author": "jeremyk-91", "createdAt": "2020-05-14T14:19:09Z", "path": "leader-election-impl/src/test/java/com/palantir/paxos/SqlitePaxosStateLogMigrationStateTest.java", "diffHunk": "@@ -44,43 +44,62 @@ public void setup() {\n     }\n \n     @Test\n-    public void initialStateIsNotMigrated() {\n-        assertThat(migrationState.hasAlreadyMigrated()).isFalse();\n+    public void initialStateTest() {\n+        assertThat(migrationState.hasMigratedFromInitialState()).isFalse();\n+        assertThat(migrationState.isInValidationState()).isFalse();\n+        assertThat(migrationState.isInMigratedState()).isFalse();\n+    }\n+\n+    @Test\n+    public void canSetStateToValidation() {\n+        migrationState.migrateToValidationState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isTrue();\n+        assertThat(migrationState.isInMigratedState()).isFalse();\n     }\n \n     @Test\n     public void canSetStateToMigrated() {\n-        migrationState.finishMigration();\n-        assertThat(migrationState.hasAlreadyMigrated()).isTrue();\n+        migrationState.migrateToMigratedState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isFalse();\n+        assertThat(migrationState.isInMigratedState()).isTrue();\n     }\n \n     @Test\n-    public void canSetStateToMigratedMultipleTimes() {\n-        migrationState.finishMigration();\n-        migrationState.finishMigration();\n-        migrationState.finishMigration();\n-        assertThat(migrationState.hasAlreadyMigrated()).isTrue();\n+    public void canChangeStates() {\n+        migrationState.migrateToValidationState();\n+        migrationState.migrateToMigratedState();\n+        migrationState.migrateToMigratedState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isFalse();\n+        assertThat(migrationState.isInMigratedState()).isTrue();\n+\n+        migrationState.migrateToValidationState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isTrue();\n+        assertThat(migrationState.isInMigratedState()).isFalse();", "originalCommit": "40f00c368317882a67160675e25ef35a4e0db70a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}