{"pr_number": 4959, "pr_title": "[LW] Fixes, 3: Additional logging towards fixing obscure bug", "pr_createdAt": "2020-08-21T18:01:30Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4959", "timeline": [{"oid": "0e7bb1870fed568e860f8f124a72f3c363872b7e", "url": "https://github.com/palantir/atlasdb/commit/0e7bb1870fed568e860f8f124a72f3c363872b7e", "message": "this is most vexing", "committedDate": "2020-08-21T17:59:05Z", "type": "commit"}, {"oid": "0555b3d164fddb28f37051e84119e2503879e468", "url": "https://github.com/palantir/atlasdb/commit/0555b3d164fddb28f37051e84119e2503879e468", "message": "fix test", "committedDate": "2020-08-24T13:48:06Z", "type": "commit"}, {"oid": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82", "url": "https://github.com/palantir/atlasdb/commit/4e9eb68954a7e42e9adaf30248e2ae67ad64cd82", "message": "more logging for information purposes", "committedDate": "2020-08-24T13:56:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxMTEwNg==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r475511106", "bodyText": "Unsafe arg for the events.", "author": "jkozlowski", "createdAt": "2020-08-24T10:40:46Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -152,7 +153,9 @@ private void assertEventsAreContiguousAndNoEventsMissing(List<LockWatchEvent> ev\n             Preconditions.checkNotNull(firstEvent, \"First element not preset in list of events\");\n             Preconditions.checkArgument(firstEvent.sequence() < latestVersion.get().version()\n                             || latestVersion.get().version() + 1 == firstEvent.sequence(),\n-                    \"Events missing between last snapshot and this batch of events\");\n+                    \"Events missing between last snapshot and this batch of events\",\n+                    SafeArg.of(\"latestVersionSequence\", latestVersion.get().version()),\n+                    SafeArg.of(\"firstNewVersionSequence\", firstEvent.sequence()));", "originalCommit": "0e7bb1870fed568e860f8f124a72f3c363872b7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MDIyNw==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476280227", "bodyText": "Actually, scrap that, dunno if we want actual data lying around in the logs.", "author": "jkozlowski", "createdAt": "2020-08-25T08:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxMTEwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3Njk4NA==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476276984", "bodyText": "I think you need the same change in CommitTimestampGetter?", "author": "jkozlowski", "createdAt": "2020-08-25T08:37:29Z", "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -163,12 +172,36 @@ public void close() {\n         List<StartIdentifiedAtlasDbTransactionResponse> result = new ArrayList<>();\n         while (result.size() < numberOfTransactions) {\n             try {\n+                Optional<IdentifiedVersion> requestedVersion = lockWatchEventCache.lastKnownVersion();\n                 ConjureStartTransactionsResponse response = lockLeaseService.startTransactionsWithWatches(\n-                        lockWatchEventCache.lastKnownVersion(), numberOfTransactions - result.size());\n+                        requestedVersion, numberOfTransactions - result.size());\n                 lockWatchEventCache.processStartTransactionsUpdate(\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n+\n+                if (log.isDebugEnabled()) {", "originalCommit": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3OTE1MQ==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476279151", "bodyText": "And probs extract a small method?", "author": "jkozlowski", "createdAt": "2020-08-25T08:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3Njk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "81fc8a3483ac4d5dd7cfb1066ed6b4de25b0981d", "chunk": "diff --git a/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java b/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java\nindex 2c9ee38a9a..cbfba7b5f1 100644\n--- a/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java\n+++ b/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java\n\n@@ -179,29 +177,7 @@ final class TransactionStarter implements AutoCloseable {\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n-\n-                if (log.isDebugEnabled()) {\n-                    Optional<LockWatchStateUpdate.Success> successfulUpdate = response.getLockWatchUpdate()\n-                            .accept(new LockWatchStateUpdate.Visitor<Optional<LockWatchStateUpdate.Success>>() {\n-                                @Override\n-                                public Optional<LockWatchStateUpdate.Success> visit(\n-                                        LockWatchStateUpdate.Success success) {\n-                                    return Optional.of(success);\n-                                }\n-\n-                                @Override\n-                                public Optional<LockWatchStateUpdate.Success> visit(\n-                                        LockWatchStateUpdate.Snapshot snapshot) {\n-                                    return Optional.empty();\n-                                }\n-                            });\n-\n-                    successfulUpdate.ifPresent(success ->\n-                            log.debug(\"Start transaction batch request and response\",\n-                                    SafeArg.of(\"requestedVersion\", requestedVersion),\n-                                    SafeArg.of(\"responseFirstVersion\", Iterables.getFirst(success.events(), null)),\n-                                    SafeArg.of(\"responseLatestVersion\", success.lastKnownVersion())));\n-                }\n+                LockWatchLogUtility.logTransactionEvents(requestedVersion, response.getLockWatchUpdate());\n             } catch (Throwable t) {\n                 unlock(result.stream()\n                         .map(response -> response.immutableTimestamp().getLock())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3ODM1Ng==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476278356", "bodyText": "Same here, I think you want unsafe arg for the events?", "author": "jkozlowski", "createdAt": "2020-08-25T08:39:40Z", "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -163,12 +172,36 @@ public void close() {\n         List<StartIdentifiedAtlasDbTransactionResponse> result = new ArrayList<>();\n         while (result.size() < numberOfTransactions) {\n             try {\n+                Optional<IdentifiedVersion> requestedVersion = lockWatchEventCache.lastKnownVersion();\n                 ConjureStartTransactionsResponse response = lockLeaseService.startTransactionsWithWatches(\n-                        lockWatchEventCache.lastKnownVersion(), numberOfTransactions - result.size());\n+                        requestedVersion, numberOfTransactions - result.size());\n                 lockWatchEventCache.processStartTransactionsUpdate(\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n+\n+                if (log.isDebugEnabled()) {\n+                    Optional<LockWatchStateUpdate.Success> successfulUpdate = response.getLockWatchUpdate()\n+                            .accept(new LockWatchStateUpdate.Visitor<Optional<LockWatchStateUpdate.Success>>() {\n+                                @Override\n+                                public Optional<LockWatchStateUpdate.Success> visit(\n+                                        LockWatchStateUpdate.Success success) {\n+                                    return Optional.of(success);\n+                                }\n+\n+                                @Override\n+                                public Optional<LockWatchStateUpdate.Success> visit(\n+                                        LockWatchStateUpdate.Snapshot snapshot) {\n+                                    return Optional.empty();\n+                                }\n+                            });\n+\n+                    successfulUpdate.ifPresent(success ->\n+                            log.debug(\"Start transaction batch request and response\",", "originalCommit": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MDM1Mg==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476280352", "bodyText": "Same as above.", "author": "jkozlowski", "createdAt": "2020-08-25T08:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3ODM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "81fc8a3483ac4d5dd7cfb1066ed6b4de25b0981d", "chunk": "diff --git a/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java b/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java\nindex 2c9ee38a9a..cbfba7b5f1 100644\n--- a/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java\n+++ b/lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java\n\n@@ -179,29 +177,7 @@ final class TransactionStarter implements AutoCloseable {\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n-\n-                if (log.isDebugEnabled()) {\n-                    Optional<LockWatchStateUpdate.Success> successfulUpdate = response.getLockWatchUpdate()\n-                            .accept(new LockWatchStateUpdate.Visitor<Optional<LockWatchStateUpdate.Success>>() {\n-                                @Override\n-                                public Optional<LockWatchStateUpdate.Success> visit(\n-                                        LockWatchStateUpdate.Success success) {\n-                                    return Optional.of(success);\n-                                }\n-\n-                                @Override\n-                                public Optional<LockWatchStateUpdate.Success> visit(\n-                                        LockWatchStateUpdate.Snapshot snapshot) {\n-                                    return Optional.empty();\n-                                }\n-                            });\n-\n-                    successfulUpdate.ifPresent(success ->\n-                            log.debug(\"Start transaction batch request and response\",\n-                                    SafeArg.of(\"requestedVersion\", requestedVersion),\n-                                    SafeArg.of(\"responseFirstVersion\", Iterables.getFirst(success.events(), null)),\n-                                    SafeArg.of(\"responseLatestVersion\", success.lastKnownVersion())));\n-                }\n+                LockWatchLogUtility.logTransactionEvents(requestedVersion, response.getLockWatchUpdate());\n             } catch (Throwable t) {\n                 unlock(result.stream()\n                         .map(response -> response.immutableTimestamp().getLock())\n"}}, {"oid": "81fc8a3483ac4d5dd7cfb1066ed6b4de25b0981d", "url": "https://github.com/palantir/atlasdb/commit/81fc8a3483ac4d5dd7cfb1066ed6b4de25b0981d", "message": "refactor", "committedDate": "2020-08-25T09:02:36Z", "type": "commit"}, {"oid": "2ebc33fd62e76d46cd00e977420770a6afe3c9c7", "url": "https://github.com/palantir/atlasdb/commit/2ebc33fd62e76d46cd00e977420770a6afe3c9c7", "message": "remove imports", "committedDate": "2020-08-25T09:03:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI5Njc1Mg==", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476296752", "bodyText": "This should be:\nassertThatLoggableExceptionThrownBy(() -> eventCache.processStartTransactionsUpdate(TIMESTAMPS_2,\n                LockWatchStateUpdate.success(LEADER, 5L, ImmutableList.of(UNLOCK_EVENT))))\n                .isExactlyInstanceOf(SafeIllegalArgumentException.class)\n                .hasLogMessage(\"Events missing between last snapshot and this batch of events\");", "author": "jkozlowski", "createdAt": "2020-08-25T09:05:17Z", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -298,7 +298,7 @@ public void missedEventThrows() {\n         assertThatThrownBy(() -> eventCache.processStartTransactionsUpdate(TIMESTAMPS_2,", "originalCommit": "2ebc33fd62e76d46cd00e977420770a6afe3c9c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c0f8c158f7937625542ec26e1bb6769bede9a22", "chunk": "diff --git a/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java b/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java\nindex f868981dca..00a4085ce8 100644\n--- a/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java\n+++ b/atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java\n\n@@ -295,10 +296,10 @@ public class LockWatchEventCacheIntegrationTest {\n     @Test\n     public void missedEventThrows() {\n         setupInitialState();\n-        assertThatThrownBy(() -> eventCache.processStartTransactionsUpdate(TIMESTAMPS_2,\n+        assertThatLoggableExceptionThrownBy(() -> eventCache.processStartTransactionsUpdate(TIMESTAMPS_2,\n                 LockWatchStateUpdate.success(LEADER, 5L, ImmutableList.of(UNLOCK_EVENT))))\n                 .isExactlyInstanceOf(SafeIllegalArgumentException.class)\n-                .hasMessageContaining(\"Events missing between last snapshot and this batch of events\");\n+                .hasLogMessage(\"Events missing between last snapshot and this batch of events\");\n     }\n \n     private void setupInitialState() {\n"}}, {"oid": "4c0f8c158f7937625542ec26e1bb6769bede9a22", "url": "https://github.com/palantir/atlasdb/commit/4c0f8c158f7937625542ec26e1bb6769bede9a22", "message": "fixup", "committedDate": "2020-08-25T09:06:52Z", "type": "commit"}, {"oid": "47bef632e2b4fd14aaa3d5838324c7ebea270ae4", "url": "https://github.com/palantir/atlasdb/commit/47bef632e2b4fd14aaa3d5838324c7ebea270ae4", "message": "remove unused params", "committedDate": "2020-08-25T09:19:01Z", "type": "commit"}]}