{"pr_number": 4926, "pr_title": "Fix duplicate registration of MetricPublicationFilters", "pr_createdAt": "2020-08-03T00:00:46Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4926", "timeline": [{"oid": "1aa77ecd413c9c263ea6b1b2b3d15ff18e0d48c7", "url": "https://github.com/palantir/atlasdb/commit/1aa77ecd413c9c263ea6b1b2b3d15ff18e0d48c7", "message": "Fix duplicate registration of MetricPublicationFilters\n\nSee internal ticket PG-154380", "committedDate": "2020-08-02T23:59:07Z", "type": "commit"}, {"oid": "327118def805cea867ab93558f2653c0bb858295", "url": "https://github.com/palantir/atlasdb/commit/327118def805cea867ab93558f2653c0bb858295", "message": "Add generated changelog entries", "committedDate": "2020-08-02T23:59:07Z", "type": "commit"}, {"oid": "d66e3e0ca8c6ff9bdf75602469d00a75cb2589b9", "url": "https://github.com/palantir/atlasdb/commit/d66e3e0ca8c6ff9bdf75602469d00a75cb2589b9", "message": "Add generated changelog entries", "committedDate": "2020-08-02T23:59:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyNzg5NQ==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r464927895", "bodyText": "I'll reshuffle things around a bit - this is a bit strange to keep on the API because DedupFilterHolder is private", "author": "jeremyk-91", "createdAt": "2020-08-04T09:38:42Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java", "diffHunk": "@@ -35,10 +38,10 @@\n public class MetricPublicationArbiter implements Predicate<MetricName> {\n     private static final Logger log = LoggerFactory.getLogger(MetricPublicationArbiter.class);\n \n-    private final Map<MetricName, List<MetricPublicationFilter>> singleMetricFilters;\n+    private final Map<MetricName, Set<DeduplicatingFilterHolder>> singleMetricFilters;\n \n     public MetricPublicationArbiter(\n-            Map<MetricName, List<MetricPublicationFilter>> singleMetricFilters) {\n+            Map<MetricName, Set<DeduplicatingFilterHolder>> singleMetricFilters) {", "originalCommit": "d66e3e0ca8c6ff9bdf75602469d00a75cb2589b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b8c1f53f48190e892c4041df2367126263f0e17", "chunk": "diff --git a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\nindex 93ca91367c..b38975d520 100644\n--- a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\n+++ b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\n\n@@ -40,11 +42,15 @@ public class MetricPublicationArbiter implements Predicate<MetricName> {\n \n     private final Map<MetricName, Set<DeduplicatingFilterHolder>> singleMetricFilters;\n \n-    public MetricPublicationArbiter(\n-            Map<MetricName, Set<DeduplicatingFilterHolder>> singleMetricFilters) {\n+    @VisibleForTesting\n+    MetricPublicationArbiter(Map<MetricName, Set<DeduplicatingFilterHolder>> singleMetricFilters) {\n         this.singleMetricFilters = singleMetricFilters;\n     }\n \n+    public static MetricPublicationArbiter create() {\n+        return new MetricPublicationArbiter(Maps.newConcurrentMap());\n+    }\n+\n     @Override\n     public boolean test(MetricName metricName) {\n         return Optional.ofNullable(singleMetricFilters.get(metricName))\n"}}, {"oid": "4b8c1f53f48190e892c4041df2367126263f0e17", "url": "https://github.com/palantir/atlasdb/commit/4b8c1f53f48190e892c4041df2367126263f0e17", "message": "fix tests", "committedDate": "2020-08-04T09:42:44Z", "type": "commit"}, {"oid": "45444d866b91b85ead6175ede5d31b6f2ebdec00", "url": "https://github.com/palantir/atlasdb/commit/45444d866b91b85ead6175ede5d31b6f2ebdec00", "message": "Merge branch 'bugfix/dedup-metric-pub-filters' of github.com:palantir/atlasdb into bugfix/dedup-metric-pub-filters", "committedDate": "2020-08-04T09:42:54Z", "type": "commit"}, {"oid": "42709c920c74a66733ebe092981fa74179dbccf0", "url": "https://github.com/palantir/atlasdb/commit/42709c920c74a66733ebe092981fa74179dbccf0", "message": "baseline", "committedDate": "2020-08-04T10:13:17Z", "type": "commit"}, {"oid": "5721a172a9e41f49207c79e7f60d84a551f4b8e3", "url": "https://github.com/palantir/atlasdb/commit/5721a172a9e41f49207c79e7f60d84a551f4b8e3", "message": "rules", "committedDate": "2020-08-04T12:33:01Z", "type": "commit"}, {"oid": "a9aefde2169ab7c3bac786e43b839a49604e8029", "url": "https://github.com/palantir/atlasdb/commit/a9aefde2169ab7c3bac786e43b839a49604e8029", "message": "Add generated changelog entries", "committedDate": "2020-08-04T12:33:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyMzgzNQ==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465023835", "bodyText": "nit: If you're using ImmutableSet elsewhere, the ImmutableSet javadoc recommends:\nReturns an immutable set containing {@code element}. \nPreferred over {@link Collections#singleton} for code consistency, \n{@code null} rejection, and because the return type conveys the immutability guarantee.", "author": "Jolyon-S", "createdAt": "2020-08-04T12:47:35Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java", "diffHunk": "@@ -50,12 +59,14 @@ public boolean test(MetricName metricName) {\n     }\n \n     public void registerMetricsFilter(MetricName metricName, MetricPublicationFilter filter) {\n-        singleMetricFilters.merge(metricName, ImmutableList.of(filter), (oldFilters, newFilter)\n-                -> ImmutableList.<MetricPublicationFilter>builder().addAll(oldFilters).addAll(newFilter).build());\n+        singleMetricFilters.merge(metricName,\n+                Collections.singleton(new DeduplicatingFilterHolder(filter)),", "originalCommit": "5721a172a9e41f49207c79e7f60d84a551f4b8e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c41e00448a7eef7dd2da9fc6284ddf8a9e8fd12", "chunk": "diff --git a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\nindex 3703b4d23c..53afd9b0a1 100644\n--- a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\n+++ b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\n\n@@ -60,13 +61,13 @@ public class MetricPublicationArbiter implements Predicate<MetricName> {\n \n     public void registerMetricsFilter(MetricName metricName, MetricPublicationFilter filter) {\n         singleMetricFilters.merge(metricName,\n-                Collections.singleton(new DeduplicatingFilterHolder(filter)),\n+                ImmutableSet.of(ImmutableDeduplicatingFilterHolder.of(filter)),\n                 (oldFilters, newFilter) ->\n                         ImmutableSet.<DeduplicatingFilterHolder>builder().addAll(oldFilters).addAll(newFilter).build());\n     }\n \n     private static boolean allFiltersMatch(MetricName metricName, Set<DeduplicatingFilterHolder> relevantFilters) {\n-        return relevantFilters.stream().allMatch(filter -> safeShouldPublish(metricName, filter.filter));\n+        return relevantFilters.stream().allMatch(filter -> safeShouldPublish(metricName, filter.filter()));\n     }\n \n     private static boolean safeShouldPublish(MetricName metricName, MetricPublicationFilter filter) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNTY2Nw==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465025667", "bodyText": "Is there any reason why this does not use @Value.Immutable? As far as I can tell, the equality check is very similar to the Immutables one, if not exactly equivalent.", "author": "Jolyon-S", "createdAt": "2020-08-04T12:50:42Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java", "diffHunk": "@@ -69,4 +80,41 @@ private static boolean safeShouldPublish(MetricName metricName, MetricPublicatio\n             return true;\n         }\n     }\n+\n+    /**\n+     * Most users will want to define filters without having to think about deduplicating\n+     * filters across calls (similar to how MetricsRegistry methods are all registerOrGet)\n+     * so in order to keep the existing ability to define filters with lambdas,\n+     * define a default method on {@link MetricPublicationFilter} with a reasonable deduplicator\n+     * and then wrap it here.\n+     */\n+    @VisibleForTesting\n+    static class DeduplicatingFilterHolder {", "originalCommit": "5721a172a9e41f49207c79e7f60d84a551f4b8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0MDY0Nw==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465040647", "bodyText": "Not that I'm aware of (other than this being what @dxiao had written)", "author": "jeremyk-91", "createdAt": "2020-08-04T13:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNTY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNTE3MA==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465105170", "bodyText": "no reason, it was just faster to write.", "author": "dxiao", "createdAt": "2020-08-04T14:44:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2c41e00448a7eef7dd2da9fc6284ddf8a9e8fd12", "chunk": "diff --git a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\nindex 3703b4d23c..53afd9b0a1 100644\n--- a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\n+++ b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java\n\n@@ -88,33 +89,9 @@ public class MetricPublicationArbiter implements Predicate<MetricName> {\n      * define a default method on {@link MetricPublicationFilter} with a reasonable deduplicator\n      * and then wrap it here.\n      */\n-    @VisibleForTesting\n-    static class DeduplicatingFilterHolder {\n-        @Nonnull\n-        final MetricPublicationFilter filter;\n-\n-        @VisibleForTesting\n-        DeduplicatingFilterHolder(MetricPublicationFilter filter) {\n-            this.filter = filter;\n-        }\n-\n-        @Override\n-        public boolean equals(Object other) {\n-            if (this == other) {\n-                return true;\n-            }\n-            if (other == null || getClass() != other.getClass()) {\n-                return false;\n-            }\n-\n-            DeduplicatingFilterHolder that = (DeduplicatingFilterHolder) other;\n-\n-            return filter.equals(that.filter);\n-        }\n-\n-        @Override\n-        public int hashCode() {\n-            return filter.hashCode();\n-        }\n+    @Value.Immutable\n+    interface DeduplicatingFilterHolder {\n+        @Value.Parameter\n+        MetricPublicationFilter filter();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNjU5MQ==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465026591", "bodyText": "This isn't used anywhere in AtlasDB itself - presumably it is exposed for users of Atlas?", "author": "Jolyon-S", "createdAt": "2020-08-04T12:52:16Z", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationFilter.java", "diffHunk": "@@ -23,4 +23,11 @@\n     MetricPublicationFilter NEVER_PUBLISH = () -> false;\n \n     boolean shouldPublish();\n+\n+    /**\n+     * @return A label which is used to deduplicate filters; it need only be unique across filters on a given metric.\n+     */\n+    default String getLabel() {\n+        return this.getClass().getName();", "originalCommit": "5721a172a9e41f49207c79e7f60d84a551f4b8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNTc0OQ==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465105749", "bodyText": "exposed for future proofing, more than anything else. if you want to internalize it, fine by em.", "author": "dxiao", "createdAt": "2020-08-04T14:45:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNjU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "00145a64a517cd8196982dbd1d32729f9da04b70", "chunk": "diff --git a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationFilter.java b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationFilter.java\nindex b97e32625a..db12f9c063 100644\n--- a/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationFilter.java\n+++ b/atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationFilter.java\n\n@@ -25,7 +25,7 @@ public interface MetricPublicationFilter {\n     boolean shouldPublish();\n \n     /**\n-     * @return A label which is used to deduplicate filters; it need only be unique across filters on a given metric.\n+     * A label which is used to deduplicate filters; it need only be unique across filters on a given metric.\n      */\n     default String getLabel() {\n         return this.getClass().getName();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNjk2Nw==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465026967", "bodyText": "nit: Can we extract a constant for the () -> false and () -> true calls?", "author": "Jolyon-S", "createdAt": "2020-08-04T12:52:55Z", "path": "atlasdb-api/src/test/java/com/palantir/atlasdb/metrics/MetricPublicationArbiterTest.java", "diffHunk": "@@ -43,18 +48,18 @@ public void metricsWithNoFilterAreAccepted() {\n \n     @Test\n     public void metricsWithOneFilterAreFiltered() {\n-        MetricPublicationArbiter arbiter = new MetricPublicationArbiter(ImmutableMap.of(\n-                METRIC_NAME_1, ImmutableList.of(() -> false),\n-                METRIC_NAME_2, ImmutableList.of(() -> true)));\n+        MetricPublicationArbiter arbiter = createArbiter(ImmutableMap.of(\n+                METRIC_NAME_1, ImmutableSet.of(() -> false),", "originalCommit": "5721a172a9e41f49207c79e7f60d84a551f4b8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMDQzMQ==", "url": "https://github.com/palantir/atlasdb/pull/4926#discussion_r465030431", "bodyText": "Sure, will do", "author": "jeremyk-91", "createdAt": "2020-08-04T12:58:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAyNjk2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2c41e00448a7eef7dd2da9fc6284ddf8a9e8fd12", "chunk": "diff --git a/atlasdb-api/src/test/java/com/palantir/atlasdb/metrics/MetricPublicationArbiterTest.java b/atlasdb-api/src/test/java/com/palantir/atlasdb/metrics/MetricPublicationArbiterTest.java\nindex 4a7e5b5389..839d9fc728 100644\n--- a/atlasdb-api/src/test/java/com/palantir/atlasdb/metrics/MetricPublicationArbiterTest.java\n+++ b/atlasdb-api/src/test/java/com/palantir/atlasdb/metrics/MetricPublicationArbiterTest.java\n\n@@ -49,8 +54,8 @@ public class MetricPublicationArbiterTest {\n     @Test\n     public void metricsWithOneFilterAreFiltered() {\n         MetricPublicationArbiter arbiter = createArbiter(ImmutableMap.of(\n-                METRIC_NAME_1, ImmutableSet.of(() -> false),\n-                METRIC_NAME_2, ImmutableSet.of(() -> true)));\n+                METRIC_NAME_1, ImmutableSet.of(FALSE_RETURNING_FILTER),\n+                METRIC_NAME_2, ImmutableSet.of(TRUE_RETURNING_FILTER)));\n         assertThat(arbiter.test(METRIC_NAME_1)).isFalse();\n         assertThat(arbiter.test(METRIC_NAME_2)).isTrue();\n     }\n"}}, {"oid": "2c41e00448a7eef7dd2da9fc6284ddf8a9e8fd12", "url": "https://github.com/palantir/atlasdb/commit/2c41e00448a7eef7dd2da9fc6284ddf8a9e8fd12", "message": "CR feedback", "committedDate": "2020-08-04T13:15:15Z", "type": "commit"}, {"oid": "f04e4dae5b59230987a9539fb70adec1c93b20a7", "url": "https://github.com/palantir/atlasdb/commit/f04e4dae5b59230987a9539fb70adec1c93b20a7", "message": "Merge branch 'bugfix/dedup-metric-pub-filters' of github.com:palantir/atlasdb into bugfix/dedup-metric-pub-filters", "committedDate": "2020-08-04T13:25:52Z", "type": "commit"}, {"oid": "00145a64a517cd8196982dbd1d32729f9da04b70", "url": "https://github.com/palantir/atlasdb/commit/00145a64a517cd8196982dbd1d32729f9da04b70", "message": "Small changes", "committedDate": "2020-08-04T13:44:34Z", "type": "commit"}]}