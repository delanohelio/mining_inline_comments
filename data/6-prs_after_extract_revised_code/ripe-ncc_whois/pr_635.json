{"pr_number": 635, "pr_title": "Optimised finding first managed resource.", "pr_createdAt": "2020-05-28T08:45:09Z", "pr_url": "https://github.com/RIPE-NCC/whois/pull/635", "timeline": [{"oid": "2142bc2f24febbafe6f865fa293d8033bea87b12", "url": "https://github.com/RIPE-NCC/whois/commit/2142bc2f24febbafe6f865fa293d8033bea87b12", "message": "Optimised finding first managed resource.", "committedDate": "2020-05-28T08:28:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwNzcxNA==", "url": "https://github.com/RIPE-NCC/whois/pull/635#discussion_r432307714", "bodyText": "Uppercase SQL keywords for readibility (and consistency)", "author": "eshryane", "createdAt": "2020-05-29T07:37:10Z", "path": "whois-commons/src/main/java/net/ripe/db/whois/common/dao/jdbc/JdbcManagedAttributeDao.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package net.ripe.db.whois.common.dao.jdbc;\n+\n+import net.ripe.db.whois.common.aspects.RetryFor;\n+import net.ripe.db.whois.common.dao.jdbc.domain.ObjectTypeIds;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.domain.Maintainers;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslObject;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.dao.RecoverableDataAccessException;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.sql.DataSource;\n+\n+import static net.ripe.db.whois.common.dao.jdbc.JdbcStreamingHelper.executeStreaming;\n+\n+@Repository\n+@RetryFor(RecoverableDataAccessException.class)\n+public class JdbcManagedAttributeDao {\n+\n+    private final JdbcTemplate jdbcTemplate;\n+    private final Maintainers maintainers;\n+\n+    @Autowired\n+    public JdbcManagedAttributeDao(@Qualifier(\"whoisSlaveDataSource\") final DataSource dataSource,\n+                                   final Maintainers maintainers) {\n+        this.jdbcTemplate = new JdbcTemplate(dataSource);\n+        this.maintainers = maintainers;\n+    }\n+\n+    public boolean hasManagedResource(final CIString orgId) {\n+        final int orgObjectId = jdbcTemplate.queryForObject(\n+            \"select object_id from organisation where organisation = ?\",\n+                new Object[] { orgId },\n+                Integer.class\n+        );\n+\n+        return executeStreaming(\n+                jdbcTemplate,\n+                \"select l.object \" +", "originalCommit": "2142bc2f24febbafe6f865fa293d8033bea87b12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU2OTI3NQ==", "url": "https://github.com/RIPE-NCC/whois/pull/635#discussion_r436569275", "bodyText": "Ok.", "author": "sbusk", "createdAt": "2020-06-08T09:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwNzcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "15f25215d1525a223bd0cdf4087891d1ab4c97cb", "chunk": "diff --git a/whois-commons/src/main/java/net/ripe/db/whois/common/dao/jdbc/JdbcManagedAttributeDao.java b/whois-commons/src/main/java/net/ripe/db/whois/common/dao/jdbc/JdbcManagedAttributeDao.java\nindex d98e76fda..cb0e67570 100644\n--- a/whois-commons/src/main/java/net/ripe/db/whois/common/dao/jdbc/JdbcManagedAttributeDao.java\n+++ b/whois-commons/src/main/java/net/ripe/db/whois/common/dao/jdbc/JdbcManagedAttributeDao.java\n\n@@ -33,18 +33,18 @@ public class JdbcManagedAttributeDao {\n \n     public boolean hasManagedResource(final CIString orgId) {\n         final int orgObjectId = jdbcTemplate.queryForObject(\n-            \"select object_id from organisation where organisation = ?\",\n+            \"SELECT object_id FROM organisation WHERE organisation = ?\",\n                 new Object[] { orgId },\n                 Integer.class\n         );\n \n         return executeStreaming(\n                 jdbcTemplate,\n-                \"select l.object \" +\n-                    \"from last l inner join org o on l.object_id = o.object_id \" +\n-                    \"where o.org_id = ? \" +\n-                    \"and   o.object_type in (?, ?, ?) \" +\n-                    \"and   l.sequence_id > 0\",\n+                \"SELECT l.object \" +\n+                    \"FROM   last l INNER JOIN org o ON l.object_id = o.object_id \" +\n+                    \"WHERE  o.org_id = ? \" +\n+                    \"AND    o.object_type in (?, ?, ?) \" +\n+                    \"AND    l.sequence_id > 0\",\n                 pstmt -> {\n                     pstmt.setInt(1, orgObjectId);\n                     pstmt.setInt(2, ObjectTypeIds.getId(ObjectType.INETNUM));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODQ1MQ==", "url": "https://github.com/RIPE-NCC/whois/pull/635#discussion_r432308451", "bodyText": "Inconsistent imports (some fields are imported, some are not)", "author": "eshryane", "createdAt": "2020-05-29T07:38:43Z", "path": "whois-api/src/main/java/net/ripe/db/whois/api/rest/search/ManagedAttributeSearch.java", "diffHunk": "@@ -17,24 +16,25 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.dao.DataAccessException;\n import org.springframework.stereotype.Component;\n \n import javax.annotation.Nullable;\n-import java.util.Optional;\n-import java.util.stream.Stream;\n+\n+import static net.ripe.db.whois.common.rpsl.AttributeType.ORG;", "originalCommit": "2142bc2f24febbafe6f865fa293d8033bea87b12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MTI5Nw==", "url": "https://github.com/RIPE-NCC/whois/pull/635#discussion_r436571297", "bodyText": "Done.", "author": "sbusk", "createdAt": "2020-06-08T09:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "15f25215d1525a223bd0cdf4087891d1ab4c97cb", "chunk": "diff --git a/whois-api/src/main/java/net/ripe/db/whois/api/rest/search/ManagedAttributeSearch.java b/whois-api/src/main/java/net/ripe/db/whois/api/rest/search/ManagedAttributeSearch.java\nindex 5c22ea790..f32ff5e97 100644\n--- a/whois-api/src/main/java/net/ripe/db/whois/api/rest/search/ManagedAttributeSearch.java\n+++ b/whois-api/src/main/java/net/ripe/db/whois/api/rest/search/ManagedAttributeSearch.java\n\n@@ -20,21 +20,17 @@ import org.springframework.stereotype.Component;\n \n import javax.annotation.Nullable;\n \n-import static net.ripe.db.whois.common.rpsl.AttributeType.ORG;\n-import static net.ripe.db.whois.common.rpsl.ObjectType.INET6NUM;\n-import static net.ripe.db.whois.common.rpsl.ObjectType.INETNUM;\n-\n @Component\n public class ManagedAttributeSearch {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(ManagedAttributeSearch.class);\n \n-    private static final ImmutableSet<AttributeType> ALLOCATION_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.INETNUM, AttributeType.INET6NUM, ORG, AttributeType.STATUS, AttributeType.NETNAME, AttributeType.SOURCE);\n-    private static final ImmutableSet<AttributeType> ASSIGNMENT_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.INETNUM, AttributeType.INET6NUM, ORG, AttributeType.SPONSORING_ORG, AttributeType.STATUS, AttributeType.SOURCE);\n-    private static final ImmutableSet<AttributeType> LEGACY_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.INETNUM, ORG, AttributeType.SPONSORING_ORG, AttributeType.STATUS, AttributeType.SOURCE);\n+    private static final ImmutableSet<AttributeType> ALLOCATION_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.INETNUM, AttributeType.INET6NUM, AttributeType.ORG, AttributeType.STATUS, AttributeType.NETNAME, AttributeType.SOURCE);\n+    private static final ImmutableSet<AttributeType> ASSIGNMENT_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.INETNUM, AttributeType.INET6NUM, AttributeType.ORG, AttributeType.SPONSORING_ORG, AttributeType.STATUS, AttributeType.SOURCE);\n+    private static final ImmutableSet<AttributeType> LEGACY_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.INETNUM, AttributeType.ORG, AttributeType.SPONSORING_ORG, AttributeType.STATUS, AttributeType.SOURCE);\n \n-    private static final ImmutableSet<AttributeType> ORG_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.ORGANISATION, ORG, AttributeType.ORG_NAME, AttributeType.ORG_TYPE, AttributeType.SOURCE);\n-    private static final ImmutableSet<AttributeType> AUT_NUM_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.AUT_NUM, ORG, AttributeType.SPONSORING_ORG, AttributeType.STATUS, AttributeType.SOURCE);\n+    private static final ImmutableSet<AttributeType> ORG_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.ORGANISATION, AttributeType.ORG, AttributeType.ORG_NAME, AttributeType.ORG_TYPE, AttributeType.SOURCE);\n+    private static final ImmutableSet<AttributeType> AUT_NUM_ATTRIBUTES = Sets.immutableEnumSet(AttributeType.AUT_NUM, AttributeType.ORG, AttributeType.SPONSORING_ORG, AttributeType.STATUS, AttributeType.SOURCE);\n \n     private static final ImmutableSet<InetnumStatus> INETNUM_ASSIGNMENT_STATUSES = Sets.immutableEnumSet(InetnumStatus.ASSIGNED_PI, InetnumStatus.ASSIGNED_ANYCAST);\n     private static final ImmutableSet<InetnumStatus> INETNUM_ALLOCATION_STATUSES = Sets.immutableEnumSet(InetnumStatus.ALLOCATED_PA, InetnumStatus.ALLOCATED_PI, InetnumStatus.ALLOCATED_UNSPECIFIED);\n"}}, {"oid": "15f25215d1525a223bd0cdf4087891d1ab4c97cb", "url": "https://github.com/RIPE-NCC/whois/commit/15f25215d1525a223bd0cdf4087891d1ab4c97cb", "message": "Tidy up code so it is in line with existing conventions.", "committedDate": "2020-06-08T09:35:32Z", "type": "commit"}]}