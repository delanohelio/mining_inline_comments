{"pr_number": 629, "pr_title": "poetic form should be maintained by RIPE-DBM-MNT", "pr_createdAt": "2020-04-24T10:53:07Z", "pr_url": "https://github.com/RIPE-NCC/whois/pull/629", "timeline": [{"oid": "111046b4408f64a125983f4fa7e918c56a3cf3c6", "url": "https://github.com/RIPE-NCC/whois/commit/111046b4408f64a125983f4fa7e918c56a3cf3c6", "message": "poetic form should be maintained by RIPE-DBM-MNT", "committedDate": "2020-04-24T10:42:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA==", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414539210", "bodyText": "update.getUpdatedObject().getValuesForAttribute(AttributeType.MNT_BY); is a bit cleaner?", "author": "eshryane", "createdAt": "2020-04-24T12:31:31Z", "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package net.ripe.db.whois.update.handler.validator.poem;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslAttribute;\n+import net.ripe.db.whois.update.domain.Action;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.handler.validator.BusinessRuleValidator;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static net.ripe.db.whois.common.domain.CIString.ciString;\n+\n+@Component\n+public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleValidator {\n+\n+    private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n+    private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n+\n+    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n+\n+    @Override\n+    public void validate(final PreparedUpdate update, final UpdateContext updateContext) {\n+        final List<RpslAttribute> mntByAttribute = update.getUpdatedObject().findAttributes(AttributeType.MNT_BY);", "originalCommit": "111046b4408f64a125983f4fa7e918c56a3cf3c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0NzYyMQ==", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414547621", "bodyText": "updateContext.addMessage expects RpslAttribute and this will return CIstring. Also with set I need to then use iterator.", "author": "maggarwal13", "createdAt": "2020-04-24T12:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0ODMwMg==", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414548302", "bodyText": "OK! Thanks for explaining", "author": "eshryane", "createdAt": "2020-04-24T12:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "fcc0f610a32992060850cff03cccaca64f7eb563", "chunk": "diff --git a/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java b/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java\nindex 396e21969..7ff8f5438 100644\n--- a/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java\n+++ b/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java\n\n@@ -22,12 +22,12 @@ public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleVali\n     private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n     private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n \n-    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n+    private static final CIString POETIC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n \n     @Override\n     public void validate(final PreparedUpdate update, final UpdateContext updateContext) {\n         final List<RpslAttribute> mntByAttribute = update.getUpdatedObject().findAttributes(AttributeType.MNT_BY);\n-        if (mntByAttribute.size() !=1 || !mntByAttribute.get(0).getCleanValue().equals(POETC_FORM_MAINTAINER)) {\n+        if (mntByAttribute.size() !=1 || !mntByAttribute.get(0).getCleanValue().equals(POETIC_FORM_MAINTAINER)) {\n             updateContext.addMessage(update, mntByAttribute.get(0), UpdateMessages.poeticFormRequiresDbmMaintainer());\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTU2Mw==", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414539563", "bodyText": "Typo, \"POETIC\"", "author": "eshryane", "createdAt": "2020-04-24T12:32:05Z", "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package net.ripe.db.whois.update.handler.validator.poem;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslAttribute;\n+import net.ripe.db.whois.update.domain.Action;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.handler.validator.BusinessRuleValidator;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static net.ripe.db.whois.common.domain.CIString.ciString;\n+\n+@Component\n+public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleValidator {\n+\n+    private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n+    private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n+\n+    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");", "originalCommit": "111046b4408f64a125983f4fa7e918c56a3cf3c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcc0f610a32992060850cff03cccaca64f7eb563", "chunk": "diff --git a/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java b/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java\nindex 396e21969..7ff8f5438 100644\n--- a/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java\n+++ b/whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java\n\n@@ -22,12 +22,12 @@ public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleVali\n     private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n     private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n \n-    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n+    private static final CIString POETIC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n \n     @Override\n     public void validate(final PreparedUpdate update, final UpdateContext updateContext) {\n         final List<RpslAttribute> mntByAttribute = update.getUpdatedObject().findAttributes(AttributeType.MNT_BY);\n-        if (mntByAttribute.size() !=1 || !mntByAttribute.get(0).getCleanValue().equals(POETC_FORM_MAINTAINER)) {\n+        if (mntByAttribute.size() !=1 || !mntByAttribute.get(0).getCleanValue().equals(POETIC_FORM_MAINTAINER)) {\n             updateContext.addMessage(update, mntByAttribute.get(0), UpdateMessages.poeticFormRequiresDbmMaintainer());\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0MDI2Mg==", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414540262", "bodyText": "Reorder the sentence? \"Poetic-form must only be maintained by..\"", "author": "eshryane", "createdAt": "2020-04-24T12:33:20Z", "path": "whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java", "diffHunk": "@@ -406,6 +406,10 @@ public static Message poemRequiresPublicMaintainer() {\n         return new Message(Type.ERROR, \"Poem must be maintained by 'LIM-MNT', which has a public password\");\n     }\n \n+    public static Message poeticFormRequiresDbmMaintainer() {\n+        return new Message(Type.ERROR, \"Poetic-form must be maintained by only 'RIPE-DBM-MNT'\");", "originalCommit": "111046b4408f64a125983f4fa7e918c56a3cf3c6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcc0f610a32992060850cff03cccaca64f7eb563", "chunk": "diff --git a/whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java b/whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java\nindex 797b29af6..aecf969df 100644\n--- a/whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java\n+++ b/whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java\n\n@@ -407,7 +407,7 @@ public final class UpdateMessages {\n     }\n \n     public static Message poeticFormRequiresDbmMaintainer() {\n-        return new Message(Type.ERROR, \"Poetic-form must be maintained by only 'RIPE-DBM-MNT'\");\n+        return new Message(Type.ERROR, \"Poetic-form must only be maintained by 'RIPE-DBM-MNT'\");\n     }\n \n     public static Message tooManyPasswordsSpecified() {\n"}}, {"oid": "fcc0f610a32992060850cff03cccaca64f7eb563", "url": "https://github.com/RIPE-NCC/whois/commit/fcc0f610a32992060850cff03cccaca64f7eb563", "message": "implement Ed suggestions", "committedDate": "2020-04-24T12:48:06Z", "type": "commit"}]}