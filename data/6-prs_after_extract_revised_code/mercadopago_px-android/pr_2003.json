{"pr_number": 2003, "pr_title": "[feature] one tap off methods", "pr_createdAt": "2020-01-10T14:53:19Z", "pr_url": "https://github.com/mercadopago/px-android/pull/2003", "timeline": [{"oid": "a8d6048499fbb0867450dd94098b870a461b6ea0", "url": "https://github.com/mercadopago/px-android/commit/a8d6048499fbb0867450dd94098b870a461b6ea0", "message": "added new offline methods model", "committedDate": "2019-12-10T18:33:00Z", "type": "commit"}, {"oid": "6d0743d2387b24be555ee6a35db6cfe94f8def01", "url": "https://github.com/mercadopago/px-android/commit/6d0743d2387b24be555ee6a35db6cfe94f8def01", "message": "chaanged strings by Text", "committedDate": "2019-12-16T18:08:53Z", "type": "commit"}, {"oid": "b5818e626c99d39a9b23b0883ec2854da78ce711", "url": "https://github.com/mercadopago/px-android/commit/b5818e626c99d39a9b23b0883ec2854da78ce711", "message": "Merge pull request #1978 from mercadopago/feature/model\n\n[feature] Added new offline methods model", "committedDate": "2019-12-18T16:50:27Z", "type": "commit"}, {"oid": "d8fe4cb7e3aeaad08ea1de4d9c98339f2ff27880", "url": "https://github.com/mercadopago/px-android/commit/d8fe4cb7e3aeaad08ea1de4d9c98339f2ff27880", "message": "added description and removed image url", "committedDate": "2019-12-26T17:44:39Z", "type": "commit"}, {"oid": "9b485d248b2278322c3de564c968eac7a031bd6c", "url": "https://github.com/mercadopago/px-android/commit/9b485d248b2278322c3de564c968eac7a031bd6c", "message": "Merge pull request #1993 from mercadopago/off-methods-description\n\n[enhancement] Off methods description", "committedDate": "2019-12-27T14:29:12Z", "type": "commit"}, {"oid": "a3427f0650fe67afef79e57d0460d6acf410a1e2", "url": "https://github.com/mercadopago/px-android/commit/a3427f0650fe67afef79e57d0460d6acf410a1e2", "message": "Merge branch 'master' into feature/one-tap-off-methods\n\n# Conflicts:\n#\tpx-services/src/main/java/com/mercadopago/android/px/model/ExpressMetadata.java", "committedDate": "2019-12-27T17:26:47Z", "type": "commit"}, {"oid": "bc605326e7124510cfcbcefc56574e0dd1df31ed", "url": "https://github.com/mercadopago/px-android/commit/bc605326e7124510cfcbcefc56574e0dd1df31ed", "message": "Merge branch 'master' into feature/one-tap-off-methods", "committedDate": "2020-01-10T15:05:49Z", "type": "commit"}, {"oid": "e36c864fe64951d6cba7b4450aba2ee9c932a507", "url": "https://github.com/mercadopago/px-android/commit/e36c864fe64951d6cba7b4450aba2ee9c932a507", "message": "Feature/pay with other method view (#1994)\n\n* added new offline methods model\r\n* add other methods card view", "committedDate": "2020-01-13T18:17:50Z", "type": "commit"}, {"oid": "51a90a3dd588254f5fd95f0541d6900887f1443d", "url": "https://github.com/mercadopago/px-android/commit/51a90a3dd588254f5fd95f0541d6900887f1443d", "message": "[feature] Off methods fragment selection (#1999)\n\n* added offline methods mapper\r\n* added offline items\r\n* added radio button\r\n* disabled pay button", "committedDate": "2020-01-13T18:29:32Z", "type": "commit"}, {"oid": "31e06ffd3f5e1d85961ef03cbd17496e39a73c57", "url": "https://github.com/mercadopago/px-android/commit/31e06ffd3f5e1d85961ef03cbd17496e39a73c57", "message": "Merge branch 'master' into feature/one-tap-off-methods", "committedDate": "2020-01-13T19:57:17Z", "type": "commit"}, {"oid": "033c06c770bf3fcae8c4ff27e2010a404b263362", "url": "https://github.com/mercadopago/px-android/commit/033c06c770bf3fcae8c4ff27e2010a404b263362", "message": "* Deleted unused resources", "committedDate": "2020-01-13T20:07:06Z", "type": "commit"}, {"oid": "ff030155d6e3e1b80132ecb0f643c7c5568f417f", "url": "https://github.com/mercadopago/px-android/commit/ff030155d6e3e1b80132ecb0f643c7c5568f417f", "message": "[enhancement] off method fragment and recycler (#2008)\n\n* added pay button\r\n* added payment processing\r\n* added exploding button\r\n* [feature] off methods fragment enhancements (#2007)", "committedDate": "2020-01-14T14:06:34Z", "type": "commit"}, {"oid": "1bf2197fb46eff43fd94791895f71be884a2e70a", "url": "https://github.com/mercadopago/px-android/commit/1bf2197fb46eff43fd94791895f71be884a2e70a", "message": "[enhancement] Slow animation (#2009)\n\n* enhancements on animation", "committedDate": "2020-01-14T16:41:34Z", "type": "commit"}, {"oid": "c32848338b0a0ea017240f7ceac941718168f34b", "url": "https://github.com/mercadopago/px-android/commit/c32848338b0a0ea017240f7ceac941718168f34b", "message": "* Added custom dividir drawable to DividerItemDecoration", "committedDate": "2020-01-14T16:44:56Z", "type": "commit"}, {"oid": "0a76ea149a08fed9efe17b8c25d1e93bc6b4c500", "url": "https://github.com/mercadopago/px-android/commit/0a76ea149a08fed9efe17b8c25d1e93bc6b4c500", "message": "* Added dragging capability yo off method fragment", "committedDate": "2020-01-14T18:54:39Z", "type": "commit"}, {"oid": "85e228a53f17eef3ad50c90c4ca4de64cd02ba16", "url": "https://github.com/mercadopago/px-android/commit/85e228a53f17eef3ad50c90c4ca4de64cd02ba16", "message": "Merge pull request #2010 from mercadopago/feature/draggable-fragment\n\n[feature] add dragging capability", "committedDate": "2020-01-14T18:58:09Z", "type": "commit"}, {"oid": "36ea2eb7064a8a86cee610b9df6cd10cfe51453b", "url": "https://github.com/mercadopago/px-android/commit/36ea2eb7064a8a86cee610b9df6cd10cfe51453b", "message": "changed background color", "committedDate": "2020-01-15T16:45:58Z", "type": "commit"}, {"oid": "29287d972cc43e3a802268f7e8bf7d8d6b026d32", "url": "https://github.com/mercadopago/px-android/commit/29287d972cc43e3a802268f7e8bf7d8d6b026d32", "message": "[feature] improved dragging behaviour (#2011)\n\n* Improved dragging behavior.\r\n* Added animations.\r\n* Added security integration.\r\n\r\nCo-authored-by: matiasromar <matias.romar@mercadolibre.com>", "committedDate": "2020-01-16T19:32:50Z", "type": "commit"}, {"oid": "32a3375dae034a087fc3be1fe8a60c77a9c95576", "url": "https://github.com/mercadopago/px-android/commit/32a3375dae034a087fc3be1fe8a60c77a9c95576", "message": "* Changed offline methods signature (#2014)", "committedDate": "2020-01-17T17:24:17Z", "type": "commit"}, {"oid": "64f3a86d85b7b7387b94fc0bf2fb255d0f2d46ac", "url": "https://github.com/mercadopago/px-android/commit/64f3a86d85b7b7387b94fc0bf2fb255d0f2d46ac", "message": "* Changed how to get the icon name (#2016)", "committedDate": "2020-01-17T17:48:07Z", "type": "commit"}, {"oid": "ed0d7f03681a5e0ad0e57ae68c072e8ead992db8", "url": "https://github.com/mercadopago/px-android/commit/ed0d7f03681a5e0ad0e57ae68c072e8ead992db8", "message": "merged to master", "committedDate": "2020-01-17T21:02:30Z", "type": "commit"}, {"oid": "2dc50e2cfaf30b094a7fc9abaf2e07482fbaee19", "url": "https://github.com/mercadopago/px-android/commit/2dc50e2cfaf30b094a7fc9abaf2e07482fbaee19", "message": "[feature] Compliance model (#2017)\n\n* Added model.\r\n* Added offline methods status.", "committedDate": "2020-01-21T17:48:02Z", "type": "commit"}, {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "url": "https://github.com/mercadopago/px-android/commit/9f6547ebc4067a64a1790fe58236c4af14cb06d2", "message": "[feature] KYC flow (#2020)\n\n* added KYC flow\r\n* added payment method status\r\n* removed method updateModel\r\n* added confirm event track\r\n* added track abort", "committedDate": "2020-01-24T20:19:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMxMTEyMQ==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375311121", "bodyText": "Qu\u00e9 hace esto?", "author": "jorGonzalez291292", "createdAt": "2020-02-05T15:06:38Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/base/BaseFragment.java", "diffHunk": "@@ -71,4 +72,11 @@ protected void storeModel(final M model) {\n         bundle.putParcelable(ARG_MODEL, model);\n         setArguments(bundle);\n     }\n+\n+    @NonNull\n+    @Override\n+    public Context getContext() {", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyNTAxNg==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375325016", "bodyText": "ac\u00e1 podr\u00edas hacer lo mismo que con backStackEntryCount . Tener una referencia local del fragmentmanager ya que lo estas llamando en m\u00e1s de un lado.", "author": "jorGonzalez291292", "createdAt": "2020-02-05T15:27:56Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "diffHunk": "@@ -142,18 +143,27 @@ protected void onRestoreInstanceState(final Bundle savedInstanceState) {\n \n     @Override\n     public void onBackPressed() {\n+        final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n+        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);\n+        if (fragment instanceof BackHandler) {\n+            boolean shouldHandleBack = ((BackHandler) fragment).handleBack();\n+            if(!shouldHandleBack) {\n+                return;\n+            }\n+        }\n+\n         final Fragment cardFormFragment = getSupportFragmentManager().findFragmentByTag(CardFormWithFragment.TAG);\n         if (cardFormFragment != null && cardFormFragment.getChildFragmentManager().getBackStackEntryCount() > 0) {\n             cardFormFragment.getChildFragmentManager().popBackStack();\n             return;\n         }\n-        if (getSupportFragmentManager() != null && getSupportFragmentManager().getBackStackEntryCount() > 0) {\n+        if (getSupportFragmentManager() != null && backStackEntryCount > 0) {", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89707519870b6dbe9697c39429090278916cc042", "chunk": "diff --git a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java\nindex b8761d553..e869b560d 100644\n--- a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java\n+++ b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java\n\n@@ -144,27 +145,33 @@ public class CheckoutActivity extends PXActivity<CheckoutPresenter>\n     @Override\n     public void onBackPressed() {\n         final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n-        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);\n-        if (fragment instanceof BackHandler) {\n-            boolean shouldHandleBack = ((BackHandler) fragment).handleBack();\n-            if(!shouldHandleBack) {\n+        FragmentManager fragmentManager = getSupportFragmentManager();\n+        if (fragmentManager != null) {\n+            Fragment fragment = fragmentManager.findFragmentByTag(TAG_OFFLINE_METHODS_FRAGMENT);\n+\n+            if (fragment instanceof BackHandler) {\n+                boolean shouldHandleBack = ((BackHandler) fragment).handleBack();\n+                if (!shouldHandleBack) {\n+                    return;\n+                }\n+            }\n+\n+            fragment = fragmentManager.findFragmentByTag(CardFormWithFragment.TAG);\n+            if (fragment != null && fragment.getChildFragmentManager().getBackStackEntryCount() > 0) {\n+                fragment.getChildFragmentManager().popBackStack();\n                 return;\n             }\n-        }\n \n-        final Fragment cardFormFragment = getSupportFragmentManager().findFragmentByTag(CardFormWithFragment.TAG);\n-        if (cardFormFragment != null && cardFormFragment.getChildFragmentManager().getBackStackEntryCount() > 0) {\n-            cardFormFragment.getChildFragmentManager().popBackStack();\n-            return;\n-        }\n-        if (getSupportFragmentManager() != null && backStackEntryCount > 0) {\n-            getSupportFragmentManager().popBackStack();\n-            return;\n-        }\n-        final ExpressPaymentFragment expressPaymentFragment = FragmentUtil\n-            .getFragmentByTag(getSupportFragmentManager(), TAG_ONETAP_FRAGMENT, ExpressPaymentFragment.class);\n-        if (expressPaymentFragment == null || !expressPaymentFragment.isExploding()) {\n-            super.onBackPressed();\n+            if (backStackEntryCount > 0) {\n+                fragmentManager.popBackStack();\n+                return;\n+            }\n+\n+            fragment =\n+                FragmentUtil.getFragmentByTag(fragmentManager, TAG_ONETAP_FRAGMENT, ExpressPaymentFragment.class);\n+            if (fragment == null || !((ExpressPaymentFragment) fragment).isExploding()) {\n+                super.onBackPressed();\n+            }\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM0NTE3OQ==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375345179", "bodyText": "Por qu\u00e9 corremos este evento cuando el fragmento se desatachea?\n() -> getView().showOfflineMethods(offlineMethods)", "author": "jorGonzalez291292", "createdAt": "2020-02-05T15:57:58Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -496,4 +507,29 @@ public void recoverPayment(@NonNull final PostPaymentAction postPaymentAction) {\n         cancelLoading();\n         getView().showCardFlow(paymentRepository.createPaymentRecovery());\n     }\n+\n+    @Override\n+    public void onOtherPaymentMethodClicked(@NonNull final OfflinePaymentTypesMetadata offlineMethods) {\n+        final Runnable event = () -> getView().showOfflineMethods(offlineMethods);\n+        if (otherPaymentMethodClickable) {\n+            event.run();\n+        } else {\n+            unattendedEvent = event;\n+        }\n+    }\n+\n+    @Override\n+    public void onOtherPaymentMethodClickableStateChanged(final boolean state) {\n+        otherPaymentMethodClickable = state;\n+        if (otherPaymentMethodClickable) {\n+            executeUnattendedEvent();\n+        }\n+    }\n+\n+    private void executeUnattendedEvent() {\n+        if (unattendedEvent != null) {\n+            unattendedEvent.run();", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NTk0MA==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375395940", "bodyText": "Si solo seleccionas el radioButton, no se populan los eventos (habilitar bot\u00f3n pagar, etc.). Solo cambia la vista.", "author": "jorGonzalez291292", "createdAt": "2020-02-05T17:20:53Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.mercadopago.android.px.internal.features.express.add_new_card;\n+\n+import android.support.annotation.NonNull;\n+import android.support.constraint.ConstraintLayout;\n+import android.support.v7.widget.RecyclerView;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RadioButton;\n+import com.mercadopago.android.px.R;\n+import com.mercadopago.android.px.internal.util.ViewUtils;\n+import com.mercadopago.android.px.internal.view.MPTextView;\n+\n+/* default */ final class OfflineMethodsRowHolder extends RecyclerView.ViewHolder {\n+\n+    private final MPTextView paymentTypeName;\n+    private final MPTextView paymentMethodName;\n+    private final MPTextView description;\n+    private final ImageView methodImageView;\n+    private final RadioButton radioButton;\n+    private final ConstraintLayout container;\n+\n+    /* default */ OfflineMethodsRowHolder(@NonNull final View itemView) {\n+        super(itemView);\n+        container = itemView.findViewById(R.id.offline_item_container);\n+        paymentTypeName = itemView.findViewById(R.id.payment_type_name);\n+        paymentMethodName = itemView.findViewById(R.id.payment_method_name);\n+        description = itemView.findViewById(R.id.description);\n+        methodImageView = itemView.findViewById(R.id.method_image);\n+        radioButton = itemView.findViewById(R.id.radio_button);\n+    }\n+\n+    /* default */ void populate(final OfflineMethodItem offlineItem,\n+        final OfflineMethodsAdapter.OnItemClicked onItemClicked) {\n+        if (offlineItem.isOfflinePaymentTypeItem()) {\n+            ViewUtils.loadOrHide(View.GONE, offlineItem.getName(), paymentTypeName);\n+            paymentMethodName.setVisibility(View.GONE);\n+            description.setVisibility(View.GONE);\n+            methodImageView.setVisibility(View.GONE);\n+            radioButton.setVisibility(View.GONE);\n+            container.setOnClickListener(null);\n+        } else {\n+            paymentTypeName.setVisibility(View.GONE);\n+            ViewUtils.loadOrHide(View.GONE, offlineItem.getName(), paymentMethodName);\n+            ViewUtils.loadOrHide(View.GONE, offlineItem.getDescription(), description);\n+            ViewUtils.loadOrGone(offlineItem.getIconId(), methodImageView);\n+            radioButton.setVisibility(View.VISIBLE);\n+            container.setOnClickListener(v -> onItemClicked.onClick());\n+        }\n+    }\n+\n+    /* default */ void setChecked(final boolean checked) {\n+        radioButton.setChecked(checked);", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3bd544fe6c538190d5677091037bc81672297b6", "chunk": "diff --git a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java\nindex 448a4fcdc..050e8ba57 100644\n--- a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java\n+++ b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java\n\n@@ -17,11 +17,9 @@ import com.mercadopago.android.px.internal.view.MPTextView;\n     private final MPTextView description;\n     private final ImageView methodImageView;\n     private final RadioButton radioButton;\n-    private final ConstraintLayout container;\n \n     /* default */ OfflineMethodsRowHolder(@NonNull final View itemView) {\n         super(itemView);\n-        container = itemView.findViewById(R.id.offline_item_container);\n         paymentTypeName = itemView.findViewById(R.id.payment_type_name);\n         paymentMethodName = itemView.findViewById(R.id.payment_method_name);\n         description = itemView.findViewById(R.id.description);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQyMDQxMA==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375420410", "bodyText": "IndexOutOfBoundsException: Index: 1, Size: 1\n        at java.util.ArrayList.get(ArrayList.java:437)\n        at com.mercadopago.android.px.internal.features.checkout.CheckoutActivity.onBackPressed(CheckoutActivity.java:147)\n        at\n\nCuando salgo del alta nuevo.", "author": "jorGonzalez291292", "createdAt": "2020-02-05T18:09:12Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "diffHunk": "@@ -142,18 +143,27 @@ protected void onRestoreInstanceState(final Bundle savedInstanceState) {\n \n     @Override\n     public void onBackPressed() {\n+        final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n+        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3ODY3MA==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375478670", "bodyText": "Esta l\u00f3gica hay que revisarla toda", "author": "guchito9", "createdAt": "2020-02-05T20:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQyMDQxMA=="}], "type": "inlineReview", "revised_code": {"commit": "89707519870b6dbe9697c39429090278916cc042", "chunk": "diff --git a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java\nindex b8761d553..e869b560d 100644\n--- a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java\n+++ b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java\n\n@@ -144,27 +145,33 @@ public class CheckoutActivity extends PXActivity<CheckoutPresenter>\n     @Override\n     public void onBackPressed() {\n         final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n-        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);\n-        if (fragment instanceof BackHandler) {\n-            boolean shouldHandleBack = ((BackHandler) fragment).handleBack();\n-            if(!shouldHandleBack) {\n+        FragmentManager fragmentManager = getSupportFragmentManager();\n+        if (fragmentManager != null) {\n+            Fragment fragment = fragmentManager.findFragmentByTag(TAG_OFFLINE_METHODS_FRAGMENT);\n+\n+            if (fragment instanceof BackHandler) {\n+                boolean shouldHandleBack = ((BackHandler) fragment).handleBack();\n+                if (!shouldHandleBack) {\n+                    return;\n+                }\n+            }\n+\n+            fragment = fragmentManager.findFragmentByTag(CardFormWithFragment.TAG);\n+            if (fragment != null && fragment.getChildFragmentManager().getBackStackEntryCount() > 0) {\n+                fragment.getChildFragmentManager().popBackStack();\n                 return;\n             }\n-        }\n \n-        final Fragment cardFormFragment = getSupportFragmentManager().findFragmentByTag(CardFormWithFragment.TAG);\n-        if (cardFormFragment != null && cardFormFragment.getChildFragmentManager().getBackStackEntryCount() > 0) {\n-            cardFormFragment.getChildFragmentManager().popBackStack();\n-            return;\n-        }\n-        if (getSupportFragmentManager() != null && backStackEntryCount > 0) {\n-            getSupportFragmentManager().popBackStack();\n-            return;\n-        }\n-        final ExpressPaymentFragment expressPaymentFragment = FragmentUtil\n-            .getFragmentByTag(getSupportFragmentManager(), TAG_ONETAP_FRAGMENT, ExpressPaymentFragment.class);\n-        if (expressPaymentFragment == null || !expressPaymentFragment.isExploding()) {\n-            super.onBackPressed();\n+            if (backStackEntryCount > 0) {\n+                fragmentManager.popBackStack();\n+                return;\n+            }\n+\n+            fragment =\n+                FragmentUtil.getFragmentByTag(fragmentManager, TAG_ONETAP_FRAGMENT, ExpressPaymentFragment.class);\n+            if (fragment == null || !((ExpressPaymentFragment) fragment).isExploding()) {\n+                super.onBackPressed();\n+            }\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3ODMxOQ==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375478319", "bodyText": "Por qu\u00e9 est\u00e1 en firma p\u00fablica esto?", "author": "guchito9", "createdAt": "2020-02-05T20:01:47Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/core/BackHandler.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.mercadopago.android.px.core;\n+\n+public interface BackHandler {", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4MDQwMw==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375480403", "bodyText": "Este es el nullable fake de jetbrains", "author": "guchito9", "createdAt": "2020-02-05T20:06:23Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -64,13 +65,15 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n+import org.jetbrains.annotations.Nullable;", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4MDY0Mw==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375480643", "bodyText": "Por qu\u00e9 es p\u00fablico esto?", "author": "guchito9", "createdAt": "2020-02-05T20:06:56Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -275,10 +282,14 @@ private void refreshExplodingState() {\n \n     @Override\n     public void cancel() {\n-        tracker.trackAbort();\n+        trackAbort();\n         getView().cancel();\n     }\n \n+    public void trackAbort(){", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "89707519870b6dbe9697c39429090278916cc042", "url": "https://github.com/mercadopago/px-android/commit/89707519870b6dbe9697c39429090278916cc042", "message": "chenge logic onbackpress", "committedDate": "2020-02-05T20:19:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc5MjAyNA==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375792024", "bodyText": "No se esta usando en ning\u00fan lado, hay que borrarlo.", "author": "jorGonzalez291292", "createdAt": "2020-02-06T11:53:53Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java", "diffHunk": "@@ -0,0 +1,384 @@\n+package com.mercadopago.android.px.internal.features.express.add_new_card;\n+\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.BottomSheetBehavior;\n+import android.support.design.widget.Snackbar;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.app.FragmentManager;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v7.widget.DividerItemDecoration;\n+import android.support.v7.widget.LinearLayoutManager;\n+import android.support.v7.widget.RecyclerView;\n+import android.text.Editable;\n+import android.text.SpannableStringBuilder;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.animation.Animation;\n+import android.view.animation.AnimationUtils;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+import com.mercadolibre.android.ui.widgets.MeliButton;\n+import com.mercadolibre.android.ui.widgets.MeliSnackbar;\n+import com.mercadopago.android.px.R;\n+import com.mercadopago.android.px.addons.BehaviourProvider;\n+import com.mercadopago.android.px.addons.model.SecurityValidationData;\n+import com.mercadopago.android.px.core.BackHandler;\n+import com.mercadopago.android.px.internal.base.BaseFragment;\n+import com.mercadopago.android.px.internal.di.Session;\n+import com.mercadopago.android.px.internal.features.checkout.CheckoutActivity;\n+import com.mercadopago.android.px.internal.features.explode.ExplodeDecorator;\n+import com.mercadopago.android.px.internal.features.explode.ExplodeParams;\n+import com.mercadopago.android.px.internal.features.explode.ExplodingFragment;\n+import com.mercadopago.android.px.internal.features.express.ExpressPaymentFragment;\n+import com.mercadopago.android.px.internal.features.plugins.PaymentProcessorActivity;\n+import com.mercadopago.android.px.internal.font.PxFont;\n+import com.mercadopago.android.px.internal.util.ApiUtil;\n+import com.mercadopago.android.px.internal.util.FragmentUtil;\n+import com.mercadopago.android.px.internal.util.TextUtil;\n+import com.mercadopago.android.px.internal.util.ViewUtils;\n+import com.mercadopago.android.px.internal.viewmodel.AmountLocalized;\n+import com.mercadopago.android.px.internal.viewmodel.PayButtonViewModel;\n+import com.mercadopago.android.px.model.IPaymentDescriptor;\n+import com.mercadopago.android.px.model.OfflinePaymentTypesMetadata;\n+import com.mercadopago.android.px.model.exceptions.MercadoPagoError;\n+\n+import static android.app.Activity.RESULT_OK;\n+import static android.view.View.INVISIBLE;\n+import static android.view.View.VISIBLE;\n+\n+public class OfflineMethodsFragment extends BaseFragment<OfflineMethodsPresenter, OfflinePaymentTypesMetadata>\n+    implements OfflineMethods.OffMethodsView, ExplodingFragment.ExplodingAnimationListener, BackHandler {\n+\n+    private static final String TAG_EXPLODING_FRAGMENT = \"TAG_EXPLODING_FRAGMENT\";\n+    private static final int REQ_CODE_PAYMENT_PROCESSOR = 201;\n+    private static final int REQ_CODE_BIOMETRICS = 202;\n+\n+    @Nullable /* default */ Animation fadeInAnimation;\n+    @Nullable /* default */ Animation fadeOutAnimation;\n+    /* default */ View panIndicator;\n+    private MeliButton confirmButton;\n+    private TextView totalAmountTextView;\n+    private View header;\n+\n+    private int lastSheetState = BottomSheetBehavior.STATE_EXPANDED;\n+\n+    @NonNull\n+    public static OfflineMethodsFragment getInstance(@NonNull final OfflinePaymentTypesMetadata model) {\n+        final OfflineMethodsFragment instance = new OfflineMethodsFragment();\n+        instance.storeModel(model);\n+        return instance;\n+    }\n+\n+    @Override\n+    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable final ViewGroup container,\n+        @Nullable final Bundle savedInstanceState) {\n+        return inflater.inflate(R.layout.px_fragment_offline_methods, container, false);\n+    }\n+\n+    @Override\n+    public void onResume() {\n+        super.onResume();\n+        if (presenter != null) {\n+            presenter.onViewResumed();\n+        }\n+    }\n+\n+    @Override\n+    public void onViewCreated(@NonNull final View view, @Nullable final Bundle savedInstanceState) {\n+        header = view.findViewById(R.id.header);\n+        panIndicator = view.findViewById(R.id.pan_indicator);\n+        confirmButton = view.findViewById(R.id.confirm_button);\n+        confirmButton.setState(MeliButton.State.DISABLED);\n+        confirmButton.setOnClickListener(v -> {\n+            if (ApiUtil.checkConnection(getActivity().getApplicationContext())) {\n+                presenter.startSecuredPayment();\n+            } else {\n+                presenter.manageNoConnection();\n+            }\n+        });\n+        totalAmountTextView = view.findViewById(R.id.total_amount);\n+        final ImageView closeImage = view.findViewById(R.id.image);\n+        closeImage.setOnClickListener(v -> getActivity().onBackPressed());\n+\n+        configureRecycler(view.findViewById(R.id.methods));\n+\n+        if (savedInstanceState == null) {\n+            presenter.trackOfflineMethodsView(model);\n+        }\n+\n+        presenter.updateModel();\n+    }\n+\n+    private void configureRecycler(@NonNull final RecyclerView recycler) {\n+        final LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\n+        recycler.setLayoutManager(linearLayoutManager);\n+        recycler.addOnScrollListener(new RecyclerView.OnScrollListener() {\n+            @Override\n+            public void onScrollStateChanged(@NonNull final RecyclerView recyclerView, final int newState) {\n+                super.onScrollStateChanged(recyclerView, newState);\n+                final boolean atTop = !recyclerView.canScrollVertically(-1);\n+                switch (newState) {\n+                case RecyclerView.SCROLL_STATE_DRAGGING:\n+                    if (atTop) {\n+                        panIndicator.clearAnimation();\n+                        panIndicator.startAnimation(fadeOutAnimation);\n+                    }\n+                    break;\n+                case RecyclerView.SCROLL_STATE_IDLE:\n+                    if (atTop) {\n+                        panIndicator.clearAnimation();\n+                        panIndicator.startAnimation(fadeInAnimation);\n+                    }\n+                    break;\n+                default:\n+                }\n+            }\n+\n+            @Override\n+            public void onScrolled(@NonNull final RecyclerView recyclerView, final int dx, final int dy) {\n+                super.onScrolled(recyclerView, dx, dy);\n+            }\n+        });\n+        final DividerItemDecoration decoration =\n+            new DividerItemDecoration(getContext(), linearLayoutManager.getOrientation());\n+        decoration.setDrawable(ContextCompat.getDrawable(getContext(), R.drawable.px_item_decorator_divider));\n+        recycler.addItemDecoration(decoration);\n+\n+        final OnMethodSelectedListener onMethodSelectedListener = selectedItem -> {\n+            presenter.selectMethod(selectedItem);\n+            confirmButton.setState(MeliButton.State.NORMAL);\n+        };\n+\n+        final OfflineMethodsAdapter offlineMethodsAdapter =\n+            new OfflineMethodsAdapter(new FromOfflinePaymentTypesMetadataToOfflineItems(getContext()).map(model),\n+                onMethodSelectedListener);\n+        recycler.setAdapter(offlineMethodsAdapter);\n+    }\n+\n+    @Override\n+    public void updateTotalView(@NonNull final AmountLocalized amountLocalized) {\n+        final Editable editable = new SpannableStringBuilder();\n+        editable.append(getContext().getString(R.string.px_review_summary_total));\n+        editable.append(TextUtil.SPACE);\n+        editable.append(amountLocalized.get(getContext()));\n+\n+        ViewUtils.setFontInSpannable(getContext(), PxFont.SEMI_BOLD, editable);\n+\n+        totalAmountTextView.setText(editable);\n+    }\n+\n+    @Override\n+    protected OfflineMethodsPresenter createPresenter() {\n+        final Session session = Session.getInstance();\n+        return new OfflineMethodsPresenter(session.getPaymentRepository(),\n+            session.getConfigurationModule().getPaymentSettings(),\n+            session.getAmountRepository(),\n+            session.getDiscountRepository(),\n+            session.getProductIdProvider(),\n+            model.getPaymentTypes().get(0).getId(),\n+            session.getInitRepository());\n+    }\n+\n+    @Override\n+    public void startLoadingButton(final int paymentTimeout, @NonNull final PayButtonViewModel payButtonViewModel) {\n+        final Fragment fragment = getTargetFragment();\n+        if (fragment instanceof SheetHidability) {\n+            ((SheetHidability) fragment).setSheetHidability(false);\n+        } else {\n+            throw new IllegalStateException(\"Target fragment should implement \");\n+        }\n+\n+        hideConfirmButton();\n+\n+        ViewUtils.runWhenViewIsFullyMeasured(getView(), () -> {\n+            final ExplodeParams explodeParams = ExplodingFragment.getParams(confirmButton,\n+                payButtonViewModel.getButtonProgressText(confirmButton.getContext()), paymentTimeout);\n+            final FragmentManager childFragmentManager = getChildFragmentManager();\n+            final ExplodingFragment explodingFragment = ExplodingFragment.newInstance(explodeParams);\n+            childFragmentManager.beginTransaction()\n+                .replace(R.id.exploding_frame, explodingFragment, TAG_EXPLODING_FRAGMENT)\n+                .commitNowAllowingStateLoss();\n+        });\n+    }\n+\n+    public interface SheetHidability {\n+        void setSheetHidability(boolean b);\n+    }\n+\n+    private void hideConfirmButton() {\n+        confirmButton.clearAnimation();\n+        confirmButton.setVisibility(INVISIBLE);\n+    }\n+\n+    private void showConfirmButton() {\n+        confirmButton.clearAnimation();\n+        confirmButton.setVisibility(VISIBLE);\n+    }\n+\n+    @Override\n+    public void showPaymentResult(final IPaymentDescriptor payment) {\n+        if (getActivity() != null) {\n+            ((CheckoutActivity) getActivity()).presenter.onPaymentFinished(payment);\n+        }\n+    }\n+\n+    @Override\n+    public void onAnimationFinished() {\n+        presenter.hasFinishPaymentAnimation();\n+    }\n+\n+    @Override\n+    public void finishLoading(@NonNull final ExplodeDecorator params) {\n+        final ExplodingFragment fragment =\n+            FragmentUtil.getFragmentByTag(getChildFragmentManager(), TAG_EXPLODING_FRAGMENT, ExplodingFragment.class);\n+        if (fragment != null) {\n+            fragment.finishLoading(params);\n+        } else {\n+            presenter.hasFinishPaymentAnimation();\n+        }\n+        ((ExpressPaymentFragment) getTargetFragment()).setSheetHidability(true);\n+    }\n+\n+    @Override\n+    public void cancelLoading() {\n+        showConfirmButton();\n+        final FragmentManager childFragmentManager = getChildFragmentManager();\n+        final ExplodingFragment fragment =\n+            (ExplodingFragment) childFragmentManager.findFragmentByTag(TAG_EXPLODING_FRAGMENT);\n+        if (fragment != null && fragment.isAdded() && fragment.hasFinished()) {\n+            childFragmentManager\n+                .beginTransaction()\n+                .remove(fragment)\n+                .commitNowAllowingStateLoss();\n+        }\n+    }\n+\n+    @SuppressLint(\"Range\")\n+    @Override\n+    public void showErrorSnackBar(@NonNull final MercadoPagoError error) {\n+        if (getView() != null && getActivity() != null) {\n+            MeliSnackbar.make(getView(), error.getMessage(), Snackbar.LENGTH_LONG, MeliSnackbar.SnackbarType.ERROR)\n+                .show();\n+        }\n+    }\n+\n+    @Override\n+    public void showErrorScreen(@NonNull final MercadoPagoError error) {\n+        if (getActivity() != null) {\n+            ((CheckoutActivity) getActivity()).presenter.onPaymentError(error);\n+        }\n+    }\n+\n+    @Override\n+    public void showPaymentProcessor() {\n+        PaymentProcessorActivity.start(this, REQ_CODE_PAYMENT_PROCESSOR);\n+    }\n+\n+    @Override\n+    public boolean handleBack() {\n+        if (getFragmentManager() != null && !isExploding()) {\n+            presenter.trackAbort();\n+        }\n+        return !isExploding();\n+    }\n+\n+    @Override\n+    public boolean isExploding() {\n+        return FragmentUtil.isFragmentVisible(getChildFragmentManager(), TAG_EXPLODING_FRAGMENT);\n+    }\n+\n+    public void onHideSheet() {", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3bd544fe6c538190d5677091037bc81672297b6", "chunk": "diff --git a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java\nindex fb6779b2c..d496ae465 100644\n--- a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java\n+++ b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java\n\n@@ -1,6 +1,7 @@\n package com.mercadopago.android.px.internal.features.express.add_new_card;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n import android.content.Intent;\n import android.net.Uri;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwMzAzNA==", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375803034", "bodyText": "Ac\u00e1 en ves de llamar al container, deber\u00edas usar el itemView.", "author": "jorGonzalez291292", "createdAt": "2020-02-06T12:21:30Z", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.mercadopago.android.px.internal.features.express.add_new_card;\n+\n+import android.support.annotation.NonNull;\n+import android.support.constraint.ConstraintLayout;\n+import android.support.v7.widget.RecyclerView;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RadioButton;\n+import com.mercadopago.android.px.R;\n+import com.mercadopago.android.px.internal.util.ViewUtils;\n+import com.mercadopago.android.px.internal.view.MPTextView;\n+\n+/* default */ final class OfflineMethodsRowHolder extends RecyclerView.ViewHolder {\n+\n+    private final MPTextView paymentTypeName;\n+    private final MPTextView paymentMethodName;\n+    private final MPTextView description;\n+    private final ImageView methodImageView;\n+    private final RadioButton radioButton;\n+    private final ConstraintLayout container;\n+\n+    /* default */ OfflineMethodsRowHolder(@NonNull final View itemView) {\n+        super(itemView);\n+        container = itemView.findViewById(R.id.offline_item_container);", "originalCommit": "9f6547ebc4067a64a1790fe58236c4af14cb06d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3bd544fe6c538190d5677091037bc81672297b6", "chunk": "diff --git a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java\nindex 448a4fcdc..050e8ba57 100644\n--- a/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java\n+++ b/px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java\n\n@@ -17,11 +17,9 @@ import com.mercadopago.android.px.internal.view.MPTextView;\n     private final MPTextView description;\n     private final ImageView methodImageView;\n     private final RadioButton radioButton;\n-    private final ConstraintLayout container;\n \n     /* default */ OfflineMethodsRowHolder(@NonNull final View itemView) {\n         super(itemView);\n-        container = itemView.findViewById(R.id.offline_item_container);\n         paymentTypeName = itemView.findViewById(R.id.payment_type_name);\n         paymentMethodName = itemView.findViewById(R.id.payment_method_name);\n         description = itemView.findViewById(R.id.description);\n"}}, {"oid": "b3bd544fe6c538190d5677091037bc81672297b6", "url": "https://github.com/mercadopago/px-android/commit/b3bd544fe6c538190d5677091037bc81672297b6", "message": "fix radiobutton check, refactoring", "committedDate": "2020-02-06T12:27:01Z", "type": "commit"}, {"oid": "5cc15f76f6aad0d3257f48eb313c148a99634f66", "url": "https://github.com/mercadopago/px-android/commit/5cc15f76f6aad0d3257f48eb313c148a99634f66", "message": "Added platform interceptor", "committedDate": "2020-02-06T13:05:01Z", "type": "commit"}, {"oid": "f617d4e197bcb71e2c34204eeb5722253f27c319", "url": "https://github.com/mercadopago/px-android/commit/f617d4e197bcb71e2c34204eeb5722253f27c319", "message": "Merge branch 'master' into feature/one-tap-off-methods", "committedDate": "2020-02-06T15:09:05Z", "type": "commit"}, {"oid": "85eeb13940e5dba977d40385529455f34d1bfeb3", "url": "https://github.com/mercadopago/px-android/commit/85eeb13940e5dba977d40385529455f34d1bfeb3", "message": "refactor animations", "committedDate": "2020-02-06T17:46:45Z", "type": "commit"}, {"oid": "98bf331042c90bef44b877a7b4f8ef00d1b0dc76", "url": "https://github.com/mercadopago/px-android/commit/98bf331042c90bef44b877a7b4f8ef00d1b0dc76", "message": "Merge branch 'feature/one-tap-off-methods' of https://github.com/mercadopago/px-android into feature/one-tap-off-methods", "committedDate": "2020-02-06T17:47:33Z", "type": "commit"}, {"oid": "5afd445095a66d69014cd13753bb49d68d3cc9c2", "url": "https://github.com/mercadopago/px-android/commit/5afd445095a66d69014cd13753bb49d68d3cc9c2", "message": "refactor getSupportFragmentManager in CheckoutActivity, add resources animations", "committedDate": "2020-02-06T18:09:07Z", "type": "commit"}, {"oid": "5afd445095a66d69014cd13753bb49d68d3cc9c2", "url": "https://github.com/mercadopago/px-android/commit/5afd445095a66d69014cd13753bb49d68d3cc9c2", "message": "refactor getSupportFragmentManager in CheckoutActivity, add resources animations", "committedDate": "2020-02-06T18:09:07Z", "type": "forcePushed"}]}