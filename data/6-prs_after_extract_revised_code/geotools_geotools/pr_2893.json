{"pr_number": 2893, "pr_title": "[GEOT-6557] Add support for GEOMETRY_GENERALIZATION in MBTiles store [GEOT-6558] Make MBTilesStore to remove features in mbtiles file buffer when a rendering transformation is issued", "pr_createdAt": "2020-04-21T08:24:43Z", "pr_url": "https://github.com/geotools/geotools/pull/2893", "timeline": [{"oid": "0171212a83c41c7026883defb594f169c4ff2876", "url": "https://github.com/geotools/geotools/commit/0171212a83c41c7026883defb594f169c4ff2876", "message": "[GEOT-6557] Add support for GEOMETRY_GENERALIZATION in MBTiles store", "committedDate": "2020-04-21T08:19:58Z", "type": "commit"}, {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b", "url": "https://github.com/geotools/geotools/commit/1fcc7b16f553df77154299b19ccc7fc9c295923b", "message": "fix fmt check on Java 11", "committedDate": "2020-04-21T13:40:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1ODg3NQ==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417358875", "bodyText": "The name is unclear, there is no just a single \"pixel\", and in the future, things can be more complicated, like having a buffer in meters.\nThe implementation is also asymmetric, StreamingRenderer uses the clip from the feature metadata for tile rendering already, but here a new hint has been added to delegate to the store instead. Can we wrap the collection and clip just before passing the data to the rendering transformation instead? No need for new hints in this case.\nIf the rework is considered too big, at least let's call this \"REMOVE_TILE_BUFFER\" instead.", "author": "aaime", "createdAt": "2020-04-29T14:27:51Z", "path": "modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java", "diffHunk": "@@ -688,6 +688,11 @@\n      */\n     public static final ClassKey GEOMETRY_CLIP = new ClassKey(\"org.locationtech.jts.geom.Geometry\");\n \n+    /**\n+     * Used when a rendering transformation is applied to a vector tile geometries, to lead the\n+     * store using the clip mask to remove geometries outside tiles.\n+     */\n+    public static final Key REMOVE_BUFFER_PIXEL = new Key(Boolean.class);", "originalCommit": "1fcc7b16f553df77154299b19ccc7fc9c295923b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3MjAxMQ==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417972011", "bodyText": "fixed", "author": "taba90", "createdAt": "2020-04-30T12:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1ODg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "chunk": "diff --git a/modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java b/modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java\nindex 8f8cd3346a..5999f69dc7 100644\n--- a/modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java\n+++ b/modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java\n\n@@ -688,11 +688,6 @@ public class Hints extends RenderingHints {\n      */\n     public static final ClassKey GEOMETRY_CLIP = new ClassKey(\"org.locationtech.jts.geom.Geometry\");\n \n-    /**\n-     * Used when a rendering transformation is applied to a vector tile geometries, to lead the\n-     * store using the clip mask to remove geometries outside tiles.\n-     */\n-    public static final Key REMOVE_BUFFER_PIXEL = new Key(Boolean.class);\n     ////////////////////////////////////////////////////////////////////////\n     ////////                                                        ////////\n     ////////                     Grid Coverages                     ////////\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTgwOQ==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417359809", "bodyText": "This could be easily turned into a DecoratingFeatureIterator instead, which a ClippingFeatureCollection would use.", "author": "aaime", "createdAt": "2020-04-29T14:28:58Z", "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.mbtiles;\n+\n+import java.io.IOException;\n+import java.util.NoSuchElementException;\n+import org.geotools.data.simple.SimpleFeatureReader;\n+import org.geotools.util.factory.Hints;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.simple.SimpleFeatureType;\n+import org.opengis.feature.type.GeometryDescriptor;\n+\n+/**\n+ * The class takes care to return features that intersects the geometry passed with a\n+ * Hints.GEOMETRY_CLIP, in order to avoid that features' buffer in mbtiles data gets deployed when a\n+ * rendering transformation is issued.\n+ */\n+class ClippingFeatureReader implements SimpleFeatureReader {", "originalCommit": "1fcc7b16f553df77154299b19ccc7fc9c295923b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3MTk0Ng==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417971946", "bodyText": "fixed", "author": "taba90", "createdAt": "2020-04-30T12:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTgwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "chunk": "diff --git a/modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java b/modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java\nsimilarity index 63%\nrename from modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java\nrename to modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java\nindex e76eb1c858..a0d47d2e1b 100644\n--- a/modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java\n+++ b/modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java\n\n@@ -14,41 +14,38 @@\n  *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  *    Lesser General Public License for more details.\n  */\n-package org.geotools.mbtiles;\n+package org.geotools.feature.collection;\n \n-import java.io.IOException;\n import java.util.NoSuchElementException;\n-import org.geotools.data.simple.SimpleFeatureReader;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+import org.geotools.feature.FeatureIterator;\n import org.geotools.util.factory.Hints;\n import org.locationtech.jts.geom.Geometry;\n-import org.locationtech.jts.geom.Polygon;\n import org.opengis.feature.simple.SimpleFeature;\n-import org.opengis.feature.simple.SimpleFeatureType;\n import org.opengis.feature.type.GeometryDescriptor;\n \n /**\n- * The class takes care to return features that intersects the geometry passed with a\n- * Hints.GEOMETRY_CLIP, in order to avoid that features' buffer in mbtiles data gets deployed when a\n- * rendering transformation is issued.\n+ * Decorates a SimpleFeatureIterator with one that return features if intersect the Geometry passed\n+ * with the Hint.GEOMETRY_CLIP\n  */\n-class ClippingFeatureReader implements SimpleFeatureReader {\n+public class DecoratingClippingFeatureIterator extends DecoratingSimpleFeatureIterator {\n \n-    private SimpleFeatureReader delegate;\n+    private FeatureIterator<SimpleFeature> delegate;\n \n     private SimpleFeature next;\n \n-    public ClippingFeatureReader(SimpleFeatureReader reader) {\n-        this.delegate = reader;\n+    /**\n+     * Wrap the provided FeatureIterator.\n+     *\n+     * @param iterator Iterator to be used as a delegate.\n+     */\n+    public DecoratingClippingFeatureIterator(SimpleFeatureIterator iterator) {\n+        super(iterator);\n+        this.delegate = iterator;\n     }\n \n     @Override\n-    public SimpleFeatureType getFeatureType() {\n-        return delegate.getFeatureType();\n-    }\n-\n-    @Override\n-    public SimpleFeature next()\n-            throws IOException, IllegalArgumentException, NoSuchElementException {\n+    public SimpleFeature next() throws NoSuchElementException {\n         if (next == null && !this.hasNext()) {\n             throw new NoSuchElementException();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2MDQ2NQ==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417360465", "bodyText": "Here one could advertise the existing Hints.GEOMETRY_CLIP, so that the StreamingRenderer instantiates the clipping collection only when needed.", "author": "aaime", "createdAt": "2020-04-29T14:29:45Z", "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java", "diffHunk": "@@ -68,7 +61,10 @@ public MBTilesFeatureSource(\n \n     @Override\n     protected void addHints(Set<Hints.Key> hints) {\n+\n         hints.add(Hints.GEOMETRY_SIMPLIFICATION);\n+        hints.add(Hints.GEOMETRY_GENERALIZATION);\n+        hints.add(Hints.REMOVE_BUFFER_PIXEL);", "originalCommit": "1fcc7b16f553df77154299b19ccc7fc9c295923b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3MTg4NA==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417971884", "bodyText": "fixed", "author": "taba90", "createdAt": "2020-04-30T12:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2MDQ2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "chunk": "diff --git a/modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java b/modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java\nindex c2be64d968..1d9a6c8e31 100644\n--- a/modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java\n+++ b/modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java\n\n@@ -64,7 +64,7 @@ class MBTilesFeatureSource extends ContentFeatureSource {\n \n         hints.add(Hints.GEOMETRY_SIMPLIFICATION);\n         hints.add(Hints.GEOMETRY_GENERALIZATION);\n-        hints.add(Hints.REMOVE_BUFFER_PIXEL);\n+        hints.add(Hints.GEOMETRY_CLIP);\n     }\n \n     @Override\n"}}, {"oid": "c301d0eef1b4280ceb5b43392897d13a9469f7bd", "url": "https://github.com/geotools/geotools/commit/c301d0eef1b4280ceb5b43392897d13a9469f7bd", "message": "[GEOT-6558] Make MBTilesStore to remove features in mbtiles file buffer when a rendering transformation is issued", "committedDate": "2020-04-29T20:36:58Z", "type": "commit"}, {"oid": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "url": "https://github.com/geotools/geotools/commit/67418d5f80de3539ae8ba7f40801afd274a6cac4", "message": "reviewer's feedback applied", "committedDate": "2020-04-30T11:43:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzE3OA==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743178", "bodyText": "Thanks for making this a general functionality.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class DecoratingClippingFeatureCollection extends DecoratingSimpleFeatureCollection {\n          \n          \n            \n            public class ClippingFeatureCollection extends DecoratingSimpleFeatureCollection {\n          \n      \n    \n    \n  \n\nNone of the existing decorators reminds you that it's a decorator in the name:", "author": "aaime", "createdAt": "2020-05-06T12:15:09Z", "path": "modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureCollection.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.feature.collection;\n+\n+import org.geotools.data.simple.SimpleFeatureCollection;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+\n+/**\n+ * The class decorates a SimpleFeatureCollection with one that returns features that intersect the\n+ * geometry passed with a Hints.GEOMETRY_CLIP\n+ */\n+public class DecoratingClippingFeatureCollection extends DecoratingSimpleFeatureCollection {", "originalCommit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "317fea2ad2cfe37139c24d87d9fd1dffda66c866", "chunk": "diff --git a/modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureCollection.java b/modules/library/main/src/main/java/org/geotools/feature/collection/ClippingFeatureCollection.java\nsimilarity index 84%\nrename from modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureCollection.java\nrename to modules/library/main/src/main/java/org/geotools/feature/collection/ClippingFeatureCollection.java\nindex a9aa114f83..c3c490f5c0 100644\n--- a/modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureCollection.java\n+++ b/modules/library/main/src/main/java/org/geotools/feature/collection/ClippingFeatureCollection.java\n\n@@ -23,15 +23,15 @@ import org.geotools.data.simple.SimpleFeatureIterator;\n  * The class decorates a SimpleFeatureCollection with one that returns features that intersect the\n  * geometry passed with a Hints.GEOMETRY_CLIP\n  */\n-public class DecoratingClippingFeatureCollection extends DecoratingSimpleFeatureCollection {\n+public class ClippingFeatureCollection extends DecoratingSimpleFeatureCollection {\n \n-    public DecoratingClippingFeatureCollection(SimpleFeatureCollection delegate) {\n+    public ClippingFeatureCollection(SimpleFeatureCollection delegate) {\n         super(delegate);\n     }\n \n     @Override\n     public SimpleFeatureIterator features() {\n-        return new DecoratingClippingFeatureIterator(delegate.features());\n+        return new ClippingFeatureIterator(delegate.features());\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzMzNw==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743337", "bodyText": "Same as above.", "author": "aaime", "createdAt": "2020-05-06T12:15:25Z", "path": "modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.feature.collection;\n+\n+import java.util.NoSuchElementException;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+import org.geotools.feature.FeatureIterator;\n+import org.geotools.util.factory.Hints;\n+import org.locationtech.jts.geom.Geometry;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.type.GeometryDescriptor;\n+\n+/**\n+ * Decorates a SimpleFeatureIterator with one that return features if intersect the Geometry passed\n+ * with the Hint.GEOMETRY_CLIP\n+ */\n+public class DecoratingClippingFeatureIterator extends DecoratingSimpleFeatureIterator {", "originalCommit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "317fea2ad2cfe37139c24d87d9fd1dffda66c866", "chunk": "diff --git a/modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java b/modules/library/main/src/main/java/org/geotools/feature/collection/ClippingFeatureIterator.java\nsimilarity index 93%\nrename from modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java\nrename to modules/library/main/src/main/java/org/geotools/feature/collection/ClippingFeatureIterator.java\nindex a0d47d2e1b..a040640f6b 100644\n--- a/modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java\n+++ b/modules/library/main/src/main/java/org/geotools/feature/collection/ClippingFeatureIterator.java\n\n@@ -28,7 +28,7 @@ import org.opengis.feature.type.GeometryDescriptor;\n  * Decorates a SimpleFeatureIterator with one that return features if intersect the Geometry passed\n  * with the Hint.GEOMETRY_CLIP\n  */\n-public class DecoratingClippingFeatureIterator extends DecoratingSimpleFeatureIterator {\n+public class ClippingFeatureIterator extends DecoratingSimpleFeatureIterator {\n \n     private FeatureIterator<SimpleFeature> delegate;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzUxNg==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743516", "bodyText": "Align test name while renaming main class.", "author": "aaime", "createdAt": "2020-05-06T12:15:46Z", "path": "modules/library/main/src/test/java/org/geotools/feature/collection/DecoratingClippingFeatureCollectionTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.feature.collection;\n+\n+import junit.framework.TestCase;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+import org.geotools.feature.DefaultFeatureCollection;\n+import org.geotools.feature.simple.SimpleFeatureBuilder;\n+import org.geotools.feature.simple.SimpleFeatureTypeBuilder;\n+import org.geotools.util.factory.Hints;\n+import org.junit.Test;\n+import org.locationtech.jts.geom.Coordinate;\n+import org.locationtech.jts.geom.GeometryFactory;\n+import org.locationtech.jts.geom.Point;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.simple.SimpleFeatureType;\n+\n+public class DecoratingClippingFeatureCollectionTest extends TestCase {", "originalCommit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "317fea2ad2cfe37139c24d87d9fd1dffda66c866", "chunk": "diff --git a/modules/library/main/src/test/java/org/geotools/feature/collection/DecoratingClippingFeatureCollectionTest.java b/modules/library/main/src/test/java/org/geotools/feature/collection/ClippingFeatureCollectionTest.java\nsimilarity index 90%\nrename from modules/library/main/src/test/java/org/geotools/feature/collection/DecoratingClippingFeatureCollectionTest.java\nrename to modules/library/main/src/test/java/org/geotools/feature/collection/ClippingFeatureCollectionTest.java\nindex 02536141eb..980689b55b 100644\n--- a/modules/library/main/src/test/java/org/geotools/feature/collection/DecoratingClippingFeatureCollectionTest.java\n+++ b/modules/library/main/src/test/java/org/geotools/feature/collection/ClippingFeatureCollectionTest.java\n\n@@ -29,7 +29,7 @@ import org.locationtech.jts.geom.Point;\n import org.opengis.feature.simple.SimpleFeature;\n import org.opengis.feature.simple.SimpleFeatureType;\n \n-public class DecoratingClippingFeatureCollectionTest extends TestCase {\n+public class ClippingFeatureCollectionTest extends TestCase {\n \n     DefaultFeatureCollection delegate;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzY2Mg==", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743662", "bodyText": "Nice", "author": "aaime", "createdAt": "2020-05-06T12:16:00Z", "path": "modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java", "diffHunk": "@@ -276,6 +279,12 @@ public Object applyRenderingTransformation(\n             // grab the original features\n             Query mixedQuery = DataUtilities.mixQueries(layerQuery, optimizedQuery, null);\n             originalFeatures = featureSource.getFeatures(mixedQuery);\n+            if (featureSource.getSupportedHints().contains(Hints.GEOMETRY_CLIP)\n+                    && originalFeatures instanceof SimpleFeatureCollection) {\n+                originalFeatures =", "originalCommit": "67418d5f80de3539ae8ba7f40801afd274a6cac4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "317fea2ad2cfe37139c24d87d9fd1dffda66c866", "chunk": "diff --git a/modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java b/modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java\nindex ec4c463162..35beaf4e00 100644\n--- a/modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java\n+++ b/modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java\n\n@@ -282,8 +282,7 @@ public abstract class RenderingTransformationHelper {\n             if (featureSource.getSupportedHints().contains(Hints.GEOMETRY_CLIP)\n                     && originalFeatures instanceof SimpleFeatureCollection) {\n                 originalFeatures =\n-                        new DecoratingClippingFeatureCollection(\n-                                (SimpleFeatureCollection) originalFeatures);\n+                        new ClippingFeatureCollection((SimpleFeatureCollection) originalFeatures);\n             }\n             originalFeatures =\n                     RendererUtilities.fixFeatureCollectionReferencing(originalFeatures, sourceCrs);\n"}}, {"oid": "317fea2ad2cfe37139c24d87d9fd1dffda66c866", "url": "https://github.com/geotools/geotools/commit/317fea2ad2cfe37139c24d87d9fd1dffda66c866", "message": "reviewer's feedback applied", "committedDate": "2020-05-07T05:54:20Z", "type": "commit"}, {"oid": "317fea2ad2cfe37139c24d87d9fd1dffda66c866", "url": "https://github.com/geotools/geotools/commit/317fea2ad2cfe37139c24d87d9fd1dffda66c866", "message": "reviewer's feedback applied", "committedDate": "2020-05-07T05:54:20Z", "type": "forcePushed"}]}