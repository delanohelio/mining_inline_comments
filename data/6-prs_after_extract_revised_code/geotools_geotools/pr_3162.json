{"pr_number": 3162, "pr_title": "[GEOT-6708] Rendering issue while using scientific notation of number\u2026", "pr_createdAt": "2020-09-25T09:43:08Z", "pr_url": "https://github.com/geotools/geotools/pull/3162", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwMDc2Mg==", "url": "https://github.com/geotools/geotools/pull/3162#discussion_r494900762", "bodyText": "Can we at least log to finest that this failed - otherwise you get no clue as to what went wrong with out opening the debugger up.", "author": "ianturton", "createdAt": "2020-09-25T10:36:47Z", "path": "modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java", "diffHunk": "@@ -325,6 +327,34 @@ static String toIntegral(String s) {\n         }\n     }\n \n+    /**\n+     * Clean the source handling possible edge cases.\n+     *\n+     * @return the cleaned source\n+     */\n+    static Object cleanSource(Object source) {\n+        BigDecimal bigDecimal = getBigDecimalFromScientificNotation(source);\n+        return bigDecimal != null ? bigDecimal : source;\n+    }\n+\n+    /**\n+     * @return a BigDecimal in case the source is a String in scientific notation, null\n+     *     otherwise\n+     */\n+    static BigDecimal getBigDecimalFromScientificNotation(Object source) {\n+        if (source instanceof String) {\n+            try {\n+                return ((String) source).toUpperCase().contains(\"E\")\n+                        ? new BigDecimal((String) source)\n+                        : null;\n+            } catch (NumberFormatException ex) {", "originalCommit": "96b711fae8247def8dfb0a2d52c9d8f7cdb64fa0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2985ea68605335fce16daae94c63b89c612b4b64", "chunk": "diff --git a/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java b/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java\nindex a66fea9228..2e27657ae8 100644\n--- a/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java\n+++ b/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java\n\n@@ -348,6 +354,9 @@ public class NumericConverterFactory implements ConverterFactory {\n                         ? new BigDecimal((String) source)\n                         : null;\n             } catch (NumberFormatException ex) {\n+                if (LOGGER.isLoggable(Level.FINEST)) {\n+                    LOGGER.finest(\"NumberFormatException for source=\" + source);\n+                }\n             }\n         }\n         return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwMTcyNQ==", "url": "https://github.com/geotools/geotools/pull/3162#discussion_r494901725", "bodyText": "Please add a lower case 'e' test too for peace of mind", "author": "ianturton", "createdAt": "2020-09-25T10:39:02Z", "path": "modules/library/main/src/test/java/org/geotools/data/util/NumericConverterFactoryTest.java", "diffHunk": "@@ -311,4 +311,9 @@ public void testPrimitiveTypes() throws Exception {\n         assertEquals(1, convert(\"1\", Integer.class));\n         assertEquals(Integer.valueOf(1), convert(\"1\", Integer.class));\n     }\n+\n+    public void testStringInScientificNotationToNumber() throws Exception {\n+        assertEquals(Long.valueOf(\"1103442244\"), convert(\"1.1034422448E9\", Long.class));\n+        assertEquals(Double.valueOf(\"1103442244.8\"), convert(\"1.1034422448E9\", Double.class));", "originalCommit": "96b711fae8247def8dfb0a2d52c9d8f7cdb64fa0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2985ea68605335fce16daae94c63b89c612b4b64", "chunk": "diff --git a/modules/library/main/src/test/java/org/geotools/data/util/NumericConverterFactoryTest.java b/modules/library/main/src/test/java/org/geotools/data/util/NumericConverterFactoryTest.java\nindex 31c28b5c44..eee12786b7 100644\n--- a/modules/library/main/src/test/java/org/geotools/data/util/NumericConverterFactoryTest.java\n+++ b/modules/library/main/src/test/java/org/geotools/data/util/NumericConverterFactoryTest.java\n\n@@ -315,5 +315,6 @@ public class NumericConverterFactoryTest extends TestCase {\n     public void testStringInScientificNotationToNumber() throws Exception {\n         assertEquals(Long.valueOf(\"1103442244\"), convert(\"1.1034422448E9\", Long.class));\n         assertEquals(Double.valueOf(\"1103442244.8\"), convert(\"1.1034422448E9\", Double.class));\n+        assertEquals(Double.valueOf(\"1103442244.8\"), convert(\"1.1034422448e9\", Double.class));\n     }\n }\n"}}, {"oid": "2985ea68605335fce16daae94c63b89c612b4b64", "url": "https://github.com/geotools/geotools/commit/2985ea68605335fce16daae94c63b89c612b4b64", "message": "[GEOT-6703] Rendering issue while using scientific notation of numbers inside SLD filters", "committedDate": "2020-09-25T12:20:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3OTcxMw==", "url": "https://github.com/geotools/geotools/pull/3162#discussion_r495779713", "bodyText": "Should probably clarify what the edge cases are? My guess is that the issue happens when you have a target of type Long/Integer (integral in general) and the value is using scientific notation?", "author": "aaime", "createdAt": "2020-09-28T08:43:30Z", "path": "modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java", "diffHunk": "@@ -325,6 +333,37 @@ static String toIntegral(String s) {\n         }\n     }\n \n+    /**\n+     * Clean the source handling possible edge cases.", "originalCommit": "2985ea68605335fce16daae94c63b89c612b4b64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg4Mzc1MQ==", "url": "https://github.com/geotools/geotools/pull/3162#discussion_r496883751", "bodyText": "At the moment only the case you mention justifies the presence of this extra code, and I tried to keep the change as clean as possible. Given that the computational cost is high related to the targeted cases. An alternative approach I was thinking could be make the conversion fails and then retry with a cleansed source.", "author": "alemarte", "createdAt": "2020-09-29T16:38:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3OTcxMw=="}], "type": "inlineReview", "revised_code": {"commit": "f2b8ccdc0c6bc45d8b5ebffccfc30ecfc2d1a7bf", "chunk": "diff --git a/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java b/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java\nindex 2e27657ae8..640b984825 100644\n--- a/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java\n+++ b/modules/library/main/src/main/java/org/geotools/data/util/NumericConverterFactory.java\n\n@@ -334,7 +333,11 @@ public class NumericConverterFactory implements ConverterFactory {\n     }\n \n     /**\n-     * Clean the source handling possible edge cases.\n+     * Clean the source handling possible edge cases:\n+     *\n+     * <ol>\n+     *   <li>Scientific notation conversions\n+     * </ol>\n      *\n      * @return the cleaned source\n      */\n"}}, {"oid": "f2b8ccdc0c6bc45d8b5ebffccfc30ecfc2d1a7bf", "url": "https://github.com/geotools/geotools/commit/f2b8ccdc0c6bc45d8b5ebffccfc30ecfc2d1a7bf", "message": "[GEOT-6708] Rendering issue while using scientific notation of numbers inside SLD filters", "committedDate": "2020-10-02T08:05:36Z", "type": "forcePushed"}, {"oid": "308608b0f855f1f151a326c42aed710c0e9848e5", "url": "https://github.com/geotools/geotools/commit/308608b0f855f1f151a326c42aed710c0e9848e5", "message": "[GEOT-6708] Rendering issue while using scientific notation of numbers inside SLD filters", "committedDate": "2020-10-02T08:38:05Z", "type": "forcePushed"}, {"oid": "9a8be6b56eb89ae91b1062908852f662647e1e3e", "url": "https://github.com/geotools/geotools/commit/9a8be6b56eb89ae91b1062908852f662647e1e3e", "message": "[GEOT-6708] Rendering issue while using scientific notation of numbers inside SLD filters", "committedDate": "2020-10-02T15:31:06Z", "type": "commit"}, {"oid": "9a8be6b56eb89ae91b1062908852f662647e1e3e", "url": "https://github.com/geotools/geotools/commit/9a8be6b56eb89ae91b1062908852f662647e1e3e", "message": "[GEOT-6708] Rendering issue while using scientific notation of numbers inside SLD filters", "committedDate": "2020-10-02T15:31:06Z", "type": "forcePushed"}]}