{"pr_number": 240, "pr_title": "Refactor KNNVectorFieldMapper", "pr_createdAt": "2020-10-13T03:45:00Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240", "timeline": [{"oid": "0397dd9ca6f4dc0bc086741bf1c71606e9edd64a", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/0397dd9ca6f4dc0bc086741bf1c71606e9edd64a", "message": "converting field mapper to parametrized field mapper", "committedDate": "2020-10-12T21:24:12Z", "type": "commit"}, {"oid": "1e7b40d2899559c0eebda8d23f6f6813d6fabf3d", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/1e7b40d2899559c0eebda8d23f6f6813d6fabf3d", "message": "make KNNVectorFieldMapper extend ParametrizedFieldMapper", "committedDate": "2020-10-13T03:22:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzExNw==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504217117", "bodyText": "How about reading these algo params from the indexSettings here? Idea is to lazy load these settings to ensure the settings are available to read from IndexSettings.", "author": "vamshin", "createdAt": "2020-10-13T19:53:47Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -344,6 +312,12 @@ public void parse(ParseContext context) throws IOException {\n             array[i++] = f;\n         }\n \n+        FieldType fieldType = new FieldType(Defaults.FIELD_TYPE);\n+        fieldType.putAttribute(KNNConstants.SPACE_TYPE, spaceType);\n+        fieldType.putAttribute(KNNConstants.HNSW_ALGO_M, String.valueOf(m));\n+        fieldType.putAttribute(KNNConstants.HNSW_ALGO_EF_CONSTRUCTION, String.valueOf(efConstruction));", "originalCommit": "1e7b40d2899559c0eebda8d23f6f6813d6fabf3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3NjAyNQ==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504276025", "bodyText": "This would cause index settings to be read everytime a document is indexed. I refactored to build fieldType to the KNNVectorFieldMapper constructor and read the settings from BuilderContext during Builder.build()", "author": "jmazanec15", "createdAt": "2020-10-13T21:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzExNw=="}], "type": "inlineReview", "revised_code": {"commit": "3d13caba7843db6844cc496b01f5a0044195d8a1", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java b/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\nindex c125b06..01a7f2c 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\n\n@@ -312,12 +317,6 @@ public class KNNVectorFieldMapper extends ParametrizedFieldMapper {\n             array[i++] = f;\n         }\n \n-        FieldType fieldType = new FieldType(Defaults.FIELD_TYPE);\n-        fieldType.putAttribute(KNNConstants.SPACE_TYPE, spaceType);\n-        fieldType.putAttribute(KNNConstants.HNSW_ALGO_M, String.valueOf(m));\n-        fieldType.putAttribute(KNNConstants.HNSW_ALGO_EF_CONSTRUCTION, String.valueOf(efConstruction));\n-        fieldType.freeze();\n-\n         VectorField point = new VectorField(name(), array, fieldType);\n \n         context.doc().add(point);\n"}}, {"oid": "73716cdcf1933d2883f42205c441949013ae5694", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/73716cdcf1933d2883f42205c441949013ae5694", "message": "add endline", "committedDate": "2020-10-13T20:38:09Z", "type": "commit"}, {"oid": "3d13caba7843db6844cc496b01f5a0044195d8a1", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/3d13caba7843db6844cc496b01f5a0044195d8a1", "message": "create fieldType in constructor", "committedDate": "2020-10-13T20:38:29Z", "type": "commit"}, {"oid": "147af71c1b92bca88850e922d8f29fe9f8825d2e", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/147af71c1b92bca88850e922d8f29fe9f8825d2e", "message": "refactor where algo params are retrieved from settings", "committedDate": "2020-10-13T21:36:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4NzY2Ng==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504287666", "bodyText": "Why are we storing state in Builder class? Why not get a fresh copy every time by reading from indexSettings?", "author": "vamshin", "createdAt": "2020-10-13T22:10:39Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -122,59 +131,69 @@ public Builder(String name, String spaceType, int m, int efConstruction) {\n \n         @Override\n         public KNNVectorFieldMapper build(BuilderContext context) {\n-            return new KNNVectorFieldMapper(name, new KNNVectorFieldType(buildFullName(context), meta.getValue(),\n-                    dimension.getValue()), multiFieldsBuilder.build(this, context),\n-                    ignoreMalformed(context), spaceType, m, efConstruction, copyTo.build(), this);\n-        }\n-    }\n+            if (spaceType == null) {\n+                spaceType = getSpaceType(context.indexSettings());\n+            }", "originalCommit": "147af71c1b92bca88850e922d8f29fe9f8825d2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwNjg0MA==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504306840", "bodyText": "Makes sense. Updated.", "author": "jmazanec15", "createdAt": "2020-10-13T23:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4NzY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a9f6431f1424f5c3bc7de345afc2f073ae24004d", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java b/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\nindex 930a145..a64603e 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\n\n@@ -131,21 +117,10 @@ public class KNNVectorFieldMapper extends ParametrizedFieldMapper {\n \n         @Override\n         public KNNVectorFieldMapper build(BuilderContext context) {\n-            if (spaceType == null) {\n-                spaceType = getSpaceType(context.indexSettings());\n-            }\n-\n-            if (m == null) {\n-                m = getM(context.indexSettings());\n-            }\n-\n-            if (efConstruction == null) {\n-                efConstruction = getEfConstruction(context.indexSettings());\n-            }\n-\n             return new KNNVectorFieldMapper(name, new KNNVectorFieldType(buildFullName(context), meta.getValue(),\n                     dimension.getValue()), multiFieldsBuilder.build(this, context),\n-                    ignoreMalformed(context), spaceType, m, efConstruction, copyTo.build(), this);\n+                    ignoreMalformed(context), getSpaceType(context.indexSettings()), getM(context.indexSettings()),\n+                    getEfConstruction(context.indexSettings()), copyTo.build(), this);\n         }\n \n         private String getSpaceType(Settings indexSettings) {\n"}}, {"oid": "a9f6431f1424f5c3bc7de345afc2f073ae24004d", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/a9f6431f1424f5c3bc7de345afc2f073ae24004d", "message": "remove state from builder", "committedDate": "2020-10-13T22:36:57Z", "type": "commit"}, {"oid": "ef548a52b42c989b1b5063e48df10efa77d5145a", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/ef548a52b42c989b1b5063e48df10efa77d5145a", "message": "fix typo in test case", "committedDate": "2020-10-13T22:41:31Z", "type": "commit"}]}