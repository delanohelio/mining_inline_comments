{"pr_number": 100, "pr_title": "Added validation that vector is not NaN", "pr_createdAt": "2020-04-27T19:36:15Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/100", "timeline": [{"oid": "d7b528ba542af3ead00f5a2bcc457e2920dcd93c", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/d7b528ba542af3ead00f5a2bcc457e2920dcd93c", "message": "Added validation that vector is not NaN", "committedDate": "2020-04-27T19:34:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA5NjMzNg==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/100#discussion_r416096336", "bodyText": "Should we also add check for Float.isInfinite?\nhttps://docs.oracle.com/javase/7/docs/api/java/lang/Float.html#isInfinite(float)", "author": "vamshin", "createdAt": "2020-04-27T19:40:39Z", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -250,10 +250,16 @@ public void parse(ParseContext context) throws IOException {\n         if (token == XContentParser.Token.START_ARRAY) {\n             token = context.parser().nextToken();\n             while (token != XContentParser.Token.END_ARRAY) {\n+                if (Float.isNaN(context.parser().floatValue())) {", "originalCommit": "d7b528ba542af3ead00f5a2bcc457e2920dcd93c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEwMjkyOA==", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/100#discussion_r416102928", "bodyText": "Yes I think that makes sense.", "author": "jmazanec15", "createdAt": "2020-04-27T19:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA5NjMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "2576966571e2e712e1a6f7eb4243f123c8df8706", "chunk": "diff --git a/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java b/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\nindex d12890e..6b968df 100644\n--- a/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\n+++ b/src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java\n\n@@ -246,21 +246,35 @@ public class KNNVectorFieldMapper extends FieldMapper implements ArrayValueMappe\n \n         ArrayList<Float> vector = new ArrayList<>();\n         XContentParser.Token token = context.parser().currentToken();\n-\n+        float value;\n         if (token == XContentParser.Token.START_ARRAY) {\n             token = context.parser().nextToken();\n             while (token != XContentParser.Token.END_ARRAY) {\n-                if (Float.isNaN(context.parser().floatValue())) {\n+                value = context.parser().floatValue();\n+\n+                if (Float.isNaN(value)) {\n                     throw new IllegalArgumentException(\"KNN vector values cannot be NaN\");\n                 }\n-                vector.add(context.parser().floatValue());\n+\n+                if (Float.isInfinite(value)) {\n+                    throw new IllegalArgumentException(\"KNN vector values cannot be infinity\");\n+                }\n+\n+                vector.add(value);\n                 token = context.parser().nextToken();\n             }\n         } else if (token == XContentParser.Token.VALUE_NUMBER) {\n-            if (Float.isNaN(context.parser().floatValue())) {\n+            value = context.parser().floatValue();\n+\n+            if (Float.isNaN(value)) {\n                 throw new IllegalArgumentException(\"KNN vector values cannot be NaN\");\n             }\n-            vector.add(context.parser().floatValue());\n+\n+            if (Float.isInfinite(value)) {\n+                throw new IllegalArgumentException(\"KNN vector values cannot be infinity\");\n+            }\n+\n+            vector.add(value);\n             context.parser().nextToken();\n         }\n \n"}}, {"oid": "2576966571e2e712e1a6f7eb4243f123c8df8706", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/2576966571e2e712e1a6f7eb4243f123c8df8706", "message": "added infinity check", "committedDate": "2020-04-27T19:54:31Z", "type": "commit"}]}