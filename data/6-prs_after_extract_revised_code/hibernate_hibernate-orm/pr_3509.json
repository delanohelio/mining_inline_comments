{"pr_number": 3509, "pr_title": "HHH-10282 Short-hand enum syntax support for HQL", "pr_createdAt": "2020-08-21T17:39:01Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3509", "timeline": [{"oid": "00d6a005b923c964875006fe6f705b128b0ea6e2", "url": "https://github.com/hibernate/hibernate-orm/commit/00d6a005b923c964875006fe6f705b128b0ea6e2", "message": "HHH-10282 Short-hand enum syntax support for HQL", "committedDate": "2020-11-09T14:29:28Z", "type": "commit"}, {"oid": "d5a35128ab99a05dddb8b925f49168e8b2a9725b", "url": "https://github.com/hibernate/hibernate-orm/commit/d5a35128ab99a05dddb8b925f49168e8b2a9725b", "message": "Fix issues with query splitting", "committedDate": "2020-11-09T14:29:28Z", "type": "commit"}, {"oid": "d5a35128ab99a05dddb8b925f49168e8b2a9725b", "url": "https://github.com/hibernate/hibernate-orm/commit/d5a35128ab99a05dddb8b925f49168e8b2a9725b", "message": "Fix issues with query splitting", "committedDate": "2020-11-09T14:29:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2Mjk1OQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3509#discussion_r519862959", "bodyText": "We might consider the following pattern:\nStream.of( \n\t\t\t\t\tcontext.getEntityTypesByEntityName().values().stream(),\n\t\t\t\t\tcontext.getMappedSuperclassTypeMap().values().stream(),\n\t\t\t\t\tcontext.getEmbeddableTypeSet().stream()\n\t\t\t).flatMap( Function.identity() ).forEach( ... )\n\nAs per https://www.techempower.com/blog/2016/10/19/efficient-multiple-stream-concatenation-in-java/, the flatmap approach performs better when the stream sizes are not large.", "author": "NathanQingyangXu", "createdAt": "2020-11-09T14:40:54Z", "path": "hibernate-core/src/main/java/org/hibernate/metamodel/model/domain/internal/JpaMetamodelImpl.java", "diffHunk": "@@ -493,6 +500,34 @@ public void processJpa(\n \t\t\tfor ( EmbeddableDomainType<?> embeddable : context.getEmbeddableTypeSet() ) {\n \t\t\t\tthis.jpaEmbeddableDescriptorMap.put( embeddable.getJavaType(), embeddable );\n \t\t\t}\n+\t\t\tStream.concat(\n+\t\t\t\t\tcontext.getEntityTypesByEntityName().values().stream(),\n+\t\t\t\t\tStream.concat(\n+\t\t\t\t\t\t\tcontext.getMappedSuperclassTypeMap().values().stream(),\n+\t\t\t\t\t\t\tcontext.getEmbeddableTypeSet().stream()\n+\t\t\t\t\t)\n+\t\t\t).forEach( managedDomainType -> {", "originalCommit": "d5a35128ab99a05dddb8b925f49168e8b2a9725b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3NTM5OA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3509#discussion_r519875398", "bodyText": "According to the article the suggestion is to use flatMap(Stream::concat) so I'd rather stick to this pattern.", "author": "beikov", "createdAt": "2020-11-09T14:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2Mjk1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3NjIwNQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3509#discussion_r519876205", "bodyText": "I think we could eliminate two unnecessary generics warning by making use of <T> above.", "author": "NathanQingyangXu", "createdAt": "2020-11-09T14:58:06Z", "path": "hibernate-core/src/main/java/org/hibernate/query/internal/QueryParameterBindingImpl.java", "diffHunk": "@@ -227,6 +229,15 @@ public void setBindValues(\n \t\tthis.explicitTemporalPrecision = temporalTypePrecision;\n \t}\n \n+\t@Override\n+\tpublic MappingModelExpressable getType() {\n+\t\treturn type;\n+\t}\n+\n+\t@Override\n+\tpublic void setType(MappingModelExpressable type) {\n+\t\tthis.type = type;\n+\t}", "originalCommit": "d5a35128ab99a05dddb8b925f49168e8b2a9725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg3OTk1Mw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3509#discussion_r519879953", "bodyText": "I think it would be ideal to include negation counterparts for each of the new testing cases above.", "author": "NathanQingyangXu", "createdAt": "2020-11-09T15:03:02Z", "path": "hibernate-core/src/test/java/org/hibernate/test/enums/OrdinalEnumTypeTest.java", "diffHunk": "@@ -109,6 +109,46 @@ public void testEnumAsBindParameterAndExtract() {\n \t\t} );\n \t}\n \n+\t@Test\n+\t@TestForIssue(jiraKey = \"HHH-10282\")\n+\tpublic void hqlTestEnumShortHandSyntax() {\n+\t\tdoInHibernate( this::sessionFactory, session -> {\n+\t\t\tsession.createQuery(\n+\t\t\t\t\"select id from Person where originalHairColor = BLONDE\")\n+\t\t\t\t.getResultList();\n+\t\t} );\n+\t}\n+\n+\t@Test\n+\t@TestForIssue(jiraKey = \"HHH-10282\")\n+\tpublic void hqlTestEnumQualifiedShortHandSyntax() {\n+\t\tdoInHibernate( this::sessionFactory, session -> {\n+\t\t\tsession.createQuery(\n+\t\t\t\t\t\"select id from Person where originalHairColor = HairColor.BLONDE\")\n+\t\t\t\t\t.getResultList();\n+\t\t} );\n+\t}\n+\n+\t@Test\n+\t@TestForIssue(jiraKey = \"HHH-10282\")\n+\tpublic void hqlTestEnumShortHandSyntaxInPredicate() {\n+\t\tdoInHibernate( this::sessionFactory, session -> {\n+\t\t\tsession.createQuery(\n+\t\t\t\t\t\"select id from Person where originalHairColor in (BLONDE, BROWN)\")\n+\t\t\t\t\t.getResultList();\n+\t\t} );\n+\t}\n+\n+\t@Test\n+\t@TestForIssue(jiraKey = \"HHH-10282\")\n+\tpublic void hqlTestEnumQualifiedShortHandSyntaxInPredicate() {\n+\t\tdoInHibernate( this::sessionFactory, session -> {\n+\t\t\tsession.createQuery(\n+\t\t\t\t\t\"select id from Person where originalHairColor in (HairColor.BLONDE, HairColor.BROWN)\")\n+\t\t\t\t\t.getResultList();\n+\t\t} );\n+\t}\n+", "originalCommit": "d5a35128ab99a05dddb8b925f49168e8b2a9725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg4MzU1NA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3509#discussion_r519883554", "bodyText": "I think it is one of @sebersole 's personal styles to leave out the blank line before the first element statement in a class. I prefer the above change but it is not a big deal.\nAnother style of Steve is to leave out the space delimiter between generic types as following:\nMap<K,V> map; // I would prefer Map<K, V> map\n\nBut I don't think it is a big deal and they have become my style components as well, :).", "author": "NathanQingyangXu", "createdAt": "2020-11-09T15:07:58Z", "path": "hibernate-core/src/main/java/org/hibernate/sql/exec/internal/JdbcParameterImpl.java", "diffHunk": "@@ -13,6 +13,7 @@\n  * @author Steve Ebersole\n  */\n public class JdbcParameterImpl extends AbstractJdbcParameter {\n+\n \tpublic JdbcParameterImpl(JdbcMapping jdbcMapping) {", "originalCommit": "d5a35128ab99a05dddb8b925f49168e8b2a9725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}