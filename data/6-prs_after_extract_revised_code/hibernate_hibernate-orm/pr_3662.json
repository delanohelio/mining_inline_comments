{"pr_number": 3662, "pr_title": "Work on column alias resolving", "pr_createdAt": "2020-11-24T18:15:59Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3662", "timeline": [{"oid": "e900fdd72ca3971fe47f91708732d15eed7b409a", "url": "https://github.com/hibernate/hibernate-orm/commit/e900fdd72ca3971fe47f91708732d15eed7b409a", "message": "Work on column alias resolving", "committedDate": "2021-02-12T13:10:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMwMjk1MQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3662#discussion_r576302951", "bodyText": "Are these passed columns ever used here?", "author": "sebersole", "createdAt": "2021-02-15T16:20:21Z", "path": "hibernate-core/src/main/java/org/hibernate/query/internal/FetchBuilderJpa.java", "diffHunk": "@@ -6,31 +6,46 @@\n  */\n package org.hibernate.query.internal;\n \n+import java.util.List;\n import java.util.function.BiFunction;\n \n import org.hibernate.LockMode;\n import org.hibernate.engine.FetchTiming;\n-import org.hibernate.metamodel.mapping.ModelPart;\n import org.hibernate.query.NavigablePath;\n+import org.hibernate.query.results.DomainResultCreationStateImpl;\n import org.hibernate.query.results.FetchBuilder;\n+import org.hibernate.query.results.MissingSqlSelectionException;\n+import org.hibernate.query.results.PositionalSelectionsNotAllowedException;\n+import org.hibernate.query.results.SqlSelectionImpl;\n import org.hibernate.query.results.dynamic.DynamicFetchBuilderLegacy;\n+import org.hibernate.sql.ast.tree.from.TableGroup;\n+import org.hibernate.sql.ast.tree.from.TableReference;\n import org.hibernate.sql.results.graph.DomainResultCreationState;\n import org.hibernate.sql.results.graph.Fetch;\n import org.hibernate.sql.results.graph.FetchParent;\n import org.hibernate.sql.results.graph.Fetchable;\n import org.hibernate.sql.results.graph.FetchableContainer;\n import org.hibernate.sql.results.jdbc.spi.JdbcValuesMetadata;\n \n+import static org.hibernate.query.results.ResultsHelper.impl;\n+import static org.hibernate.query.results.ResultsHelper.jdbcPositionToValuesArrayPosition;\n+import static org.hibernate.sql.ast.spi.SqlExpressionResolver.createColumnReferenceKey;\n+\n /**\n  * @author Steve Ebersole\n  */\n public class FetchBuilderJpa implements FetchBuilder {\n \tprivate final NavigablePath navigablePath;\n \tprivate final String attributePath;\n+\tprivate final List<String> columnNames;\n \n-\tpublic FetchBuilderJpa(NavigablePath navigablePath, String attributePath) {\n+\tpublic FetchBuilderJpa(\n+\t\t\tNavigablePath navigablePath,\n+\t\t\tString attributePath,\n+\t\t\tList<String> columnNames) {\n \t\tthis.navigablePath = navigablePath;\n \t\tthis.attributePath = attributePath;\n+\t\tthis.columnNames = columnNames;", "originalCommit": "e900fdd72ca3971fe47f91708732d15eed7b409a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODM5MTcxNg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3662#discussion_r578391716", "bodyText": "Should I delete FetchBuilderJpa and FetchMementoJpa? They were only used by this code section https://github.com/hibernate/hibernate-orm/pull/3662/files#diff-ef7d256eac99c70fe4b496c2b04708b3dc6f71a99d333ac1aeb18c344ef16484L398 which I changed", "author": "beikov", "createdAt": "2021-02-18T12:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMwMjk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "17e9cd2821914047aca6ee20e85f53b277710264", "chunk": "diff --git a/hibernate-core/src/main/java/org/hibernate/query/internal/FetchBuilderJpa.java b/hibernate-core/src/main/java/org/hibernate/query/internal/FetchBuilderJpa.java\ndeleted file mode 100644\nindex a4d7ba7476..0000000000\n--- a/hibernate-core/src/main/java/org/hibernate/query/internal/FetchBuilderJpa.java\n+++ /dev/null\n\n@@ -1,74 +0,0 @@\n-/*\n- * Hibernate, Relational Persistence for Idiomatic Java\n- *\n- * License: GNU Lesser General Public License (LGPL), version 2.1 or later\n- * See the lgpl.txt file in the root directory or http://www.gnu.org/licenses/lgpl-2.1.html\n- */\n-package org.hibernate.query.internal;\n-\n-import java.util.List;\n-import java.util.function.BiFunction;\n-\n-import org.hibernate.LockMode;\n-import org.hibernate.engine.FetchTiming;\n-import org.hibernate.query.NavigablePath;\n-import org.hibernate.query.results.DomainResultCreationStateImpl;\n-import org.hibernate.query.results.FetchBuilder;\n-import org.hibernate.query.results.MissingSqlSelectionException;\n-import org.hibernate.query.results.PositionalSelectionsNotAllowedException;\n-import org.hibernate.query.results.SqlSelectionImpl;\n-import org.hibernate.query.results.dynamic.DynamicFetchBuilderLegacy;\n-import org.hibernate.sql.ast.tree.from.TableGroup;\n-import org.hibernate.sql.ast.tree.from.TableReference;\n-import org.hibernate.sql.results.graph.DomainResultCreationState;\n-import org.hibernate.sql.results.graph.Fetch;\n-import org.hibernate.sql.results.graph.FetchParent;\n-import org.hibernate.sql.results.graph.Fetchable;\n-import org.hibernate.sql.results.graph.FetchableContainer;\n-import org.hibernate.sql.results.jdbc.spi.JdbcValuesMetadata;\n-\n-import static org.hibernate.query.results.ResultsHelper.impl;\n-import static org.hibernate.query.results.ResultsHelper.jdbcPositionToValuesArrayPosition;\n-import static org.hibernate.sql.ast.spi.SqlExpressionResolver.createColumnReferenceKey;\n-\n-/**\n- * @author Steve Ebersole\n- */\n-public class FetchBuilderJpa implements FetchBuilder {\n-\tprivate final NavigablePath navigablePath;\n-\tprivate final String attributePath;\n-\tprivate final List<String> columnNames;\n-\n-\tpublic FetchBuilderJpa(\n-\t\t\tNavigablePath navigablePath,\n-\t\t\tString attributePath,\n-\t\t\tList<String> columnNames) {\n-\t\tthis.navigablePath = navigablePath;\n-\t\tthis.attributePath = attributePath;\n-\t\tthis.columnNames = columnNames;\n-\t}\n-\n-\t@Override\n-\tpublic Fetch buildFetch(\n-\t\t\tFetchParent parent,\n-\t\t\tNavigablePath fetchPath,\n-\t\t\tJdbcValuesMetadata jdbcResultsMetadata,\n-\t\t\tBiFunction<String, String, DynamicFetchBuilderLegacy> legacyFetchResolver,\n-\t\t\tDomainResultCreationState domainResultCreationState) {\n-\t\tassert fetchPath.equals( navigablePath );\n-\t\tassert fetchPath.getFullPath().endsWith( attributePath );\n-\n-\t\tfinal FetchableContainer container = parent.getReferencedMappingContainer();\n-\t\tfinal Fetchable subPart = (Fetchable) container.findSubPart( fetchPath.getLocalName(), null );\n-\n-\t\treturn subPart.generateFetch(\n-\t\t\t\tparent,\n-\t\t\t\tfetchPath,\n-\t\t\t\tFetchTiming.IMMEDIATE,\n-\t\t\t\ttrue,\n-\t\t\t\tLockMode.READ,\n-\t\t\t\tnull,\n-\t\t\t\tdomainResultCreationState\n-\t\t);\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMwMzc0MQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3662#discussion_r576303741", "bodyText": "Here again, the only use of the passed columns is to pass them to FetchBuilderJpa which seems to never use them.", "author": "sebersole", "createdAt": "2021-02-15T16:21:45Z", "path": "hibernate-core/src/main/java/org/hibernate/query/internal/FetchMementoJpa.java", "diffHunk": "@@ -19,10 +20,12 @@\n \n \tprivate final NavigablePath fetchPath;\n \tprivate final String attributePath;\n+\tprivate final List<String> columnNames;\n \n-\tpublic FetchMementoJpa(NavigablePath fetchPath, String attributePath) {\n+\tpublic FetchMementoJpa(NavigablePath fetchPath, String attributePath, List<String> columnNames) {", "originalCommit": "e900fdd72ca3971fe47f91708732d15eed7b409a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17e9cd2821914047aca6ee20e85f53b277710264", "chunk": "diff --git a/hibernate-core/src/main/java/org/hibernate/query/internal/FetchMementoJpa.java b/hibernate-core/src/main/java/org/hibernate/query/internal/FetchMementoJpa.java\ndeleted file mode 100644\nindex 108b01ae0f..0000000000\n--- a/hibernate-core/src/main/java/org/hibernate/query/internal/FetchMementoJpa.java\n+++ /dev/null\n\n@@ -1,52 +0,0 @@\n-/*\n- * Hibernate, Relational Persistence for Idiomatic Java\n- *\n- * License: GNU Lesser General Public License (LGPL), version 2.1 or later\n- * See the lgpl.txt file in the root directory or http://www.gnu.org/licenses/lgpl-2.1.html\n- */\n-package org.hibernate.query.internal;\n-\n-import java.util.List;\n-import java.util.function.Consumer;\n-\n-import org.hibernate.query.NavigablePath;\n-import org.hibernate.query.named.FetchMemento;\n-import org.hibernate.query.results.FetchBuilder;\n-\n-/**\n- * @author Steve Ebersole\n- */\n-public class FetchMementoJpa implements FetchMemento {\n-\n-\tprivate final NavigablePath fetchPath;\n-\tprivate final String attributePath;\n-\tprivate final List<String> columnNames;\n-\n-\tpublic FetchMementoJpa(NavigablePath fetchPath, String attributePath, List<String> columnNames) {\n-\t\tthis.fetchPath = fetchPath;\n-\t\tthis.attributePath = attributePath;\n-\t\tthis.columnNames = columnNames;\n-\t}\n-\n-\t@Override\n-\tpublic FetchBuilder resolve(\n-\t\t\tParent parent,\n-\t\t\tConsumer<String> querySpaceConsumer,\n-\t\t\tResultSetMappingResolutionContext context) {\n-\t\tfinal String[] names = attributePath.split( \"\\\\.\" );\n-\n-\t\tNavigablePath fetchPath = parent.getNavigablePath();\n-\t\t//noinspection ForLoopReplaceableByForEach\n-\t\tfor ( int i = 0; i < names.length; i++ ) {\n-\t\t\tfetchPath = fetchPath.append( names[ i ] );\n-\t\t}\n-\n-\t\treturn new FetchBuilderJpa( fetchPath, attributePath, columnNames );\n-\t}\n-\n-\t@Override\n-\tpublic NavigablePath getNavigablePath() {\n-\t\treturn fetchPath;\n-\t}\n-\n-}\n"}}, {"oid": "17e9cd2821914047aca6ee20e85f53b277710264", "url": "https://github.com/hibernate/hibernate-orm/commit/17e9cd2821914047aca6ee20e85f53b277710264", "message": "Work on column alias resolving", "committedDate": "2021-02-23T11:45:54Z", "type": "forcePushed"}, {"oid": "42964223589d7be9a004184c18c7e2681ec55485", "url": "https://github.com/hibernate/hibernate-orm/commit/42964223589d7be9a004184c18c7e2681ec55485", "message": "Work on column alias resolving", "committedDate": "2021-02-23T11:50:31Z", "type": "commit"}, {"oid": "42964223589d7be9a004184c18c7e2681ec55485", "url": "https://github.com/hibernate/hibernate-orm/commit/42964223589d7be9a004184c18c7e2681ec55485", "message": "Work on column alias resolving", "committedDate": "2021-02-23T11:50:31Z", "type": "forcePushed"}]}