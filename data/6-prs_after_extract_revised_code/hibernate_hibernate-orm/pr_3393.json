{"pr_number": 3393, "pr_title": "wip/6.0 Replace 'AtomicInteger' with 'MutableInteger' in single thread scenario", "pr_createdAt": "2020-05-10T22:00:38Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3393", "timeline": [{"oid": "5c11778032f31aad8e75e5b262d6ef75543781ef", "url": "https://github.com/hibernate/hibernate-orm/commit/5c11778032f31aad8e75e5b262d6ef75543781ef", "message": "replace 'AtomicInteger' with 'MutableInteger' in single thread scenario", "committedDate": "2020-05-10T21:48:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUwMg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3393#discussion_r422706502", "bodyText": "I created this util class for 'long' case. Currently it is not used but it might be useful in the future.", "author": "NathanQingyangXu", "createdAt": "2020-05-10T22:01:47Z", "path": "hibernate-core/src/main/java/org/hibernate/internal/util/MutableLong.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * License: GNU Lesser General Public License (LGPL), version 2.1 or later\n+ * See the lgpl.txt file in the root directory or http://www.gnu.org/licenses/lgpl-2.1.html\n+ */\n+package org.hibernate.internal.util;\n+\n+public class MutableLong {\n+\tprivate long value;\n+\n+\tpublic MutableLong() {\n+\t}\n+\n+\tpublic MutableLong(long value) {\n+\t\tthis.value = value;\n+\t}\n+\n+\tpublic MutableLong deepCopy() {\n+\t\treturn new MutableLong( value );\n+\t}\n+\n+\tpublic long getAndIncrement() {\n+\t\treturn value++;\n+\t}\n+\n+\tpublic long incrementAndGet() {\n+\t\treturn ++value;\n+\t}\n+\n+\tpublic long get() {\n+\t\treturn value;\n+\t}\n+\n+\tpublic void set(long value) {\n+\t\tthis.value = value;\n+\t}\n+\n+\tpublic void increase() {\n+\t\t++value;\n+\t}\n+}", "originalCommit": "5c11778032f31aad8e75e5b262d6ef75543781ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}