{"pr_number": 3401, "pr_title": "Required for Hibernate Reactive for queries support", "pr_createdAt": "2020-05-15T13:06:26Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3401", "timeline": [{"oid": "6a798f7ec5b5eefb4fa7f0e7795427c238eb761e", "url": "https://github.com/hibernate/hibernate-orm/commit/6a798f7ec5b5eefb4fa7f0e7795427c238eb761e", "message": "Change scope of various private methods to protected\n\n  So that Hibernate Reactive can reuse them.", "committedDate": "2020-05-15T15:16:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426172813", "bodyText": "@DavideD I'm not a big fan of this. I think it might be better to add a getQueryPlanCache() accessor to SessionFactoryImpl and override it on the subclass.", "author": "gavinking", "createdAt": "2020-05-16T17:22:23Z", "path": "hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java", "diffHunk": "@@ -260,7 +265,7 @@ public SessionFactoryImpl(\n \t\tLOG.debugf( \"Session factory constructed with filter configurations : %s\", filters );\n \t\tLOG.debugf( \"Instantiating session factory with properties: %s\", properties );\n \n-\t\tthis.queryPlanCache = new QueryPlanCache( this );\n+\t\tthis.queryPlanCache = queryPlanCacheFunction.apply( this );", "originalCommit": "6a798f7ec5b5eefb4fa7f0e7795427c238eb761e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3NjE3Ng==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426176176", "bodyText": "(You're passing a reference to a partially-uninitialized object to an arbitrary function. The subclass constructor hasn't been called at this point.)", "author": "gavinking", "createdAt": "2020-05-16T17:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3NjYwNA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426176604", "bodyText": "And note: you're using a function ref here precisely because you want to circumvent the JVM's restriction which is designed to prevent you doing exactly what you're doing here :-)", "author": "gavinking", "createdAt": "2020-05-16T18:03:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3OTA3MA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426179070", "bodyText": "You got me :) OK, I will change it", "author": "DavideD", "createdAt": "2020-05-16T18:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a65706aaef9ccc1a5b934d1cdccd69b7baeed58e", "chunk": "diff --git a/hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java b/hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java\nindex a402ef86fc..c1cfa3bc8a 100644\n--- a/hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java\n+++ b/hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java\n\n@@ -265,7 +260,7 @@ public class SessionFactoryImpl implements SessionFactoryImplementor {\n \t\tLOG.debugf( \"Session factory constructed with filter configurations : %s\", filters );\n \t\tLOG.debugf( \"Instantiating session factory with properties: %s\", properties );\n \n-\t\tthis.queryPlanCache = queryPlanCacheFunction.apply( this );\n+\t\tthis.queryPlanCache = new QueryPlanCache( this );\n \n \t\tclass IntegratorObserver implements SessionFactoryObserver {\n \t\t\tprivate ArrayList<Integrator> integrators = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426190021", "bodyText": "Are you guys really using inheritance everywhere?  You really want to subclass all of these?  Why not just pass in functionals that can create the plan?  Then your SessionFactory (I assume you already subclass SessionFactory, Session, etc) can simply pass in a different one.\nI mean, feel free to keep subclassing everything, but personally I'd be trying to minimize what I need to subclass", "author": "sebersole", "createdAt": "2020-05-16T20:49:12Z", "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "originalCommit": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3MjgwNQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426472805", "bodyText": "@sebersole the new subclass RxHQLQueryPlan actually adds new public operations, it's not just overriding operations of HQLQueryPlan.\nOn the other hand, perhaps you're right about RxQueryPlanCache: I now notice we could probably eliminate that class and replace it by a new argument to QueryPlanCache. @DavideD do you want me to try and make that change?", "author": "gavinking", "createdAt": "2020-05-18T08:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4Mjk1NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426482955", "bodyText": "I think I can take care of it. Let me give it a go.", "author": "DavideD", "createdAt": "2020-05-18T09:15:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4NDQzNw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426484437", "bodyText": "I've almost got it done.", "author": "gavinking", "createdAt": "2020-05-18T09:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4NjYyMw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426486623", "bodyText": "@DavideD can I push to your branch?", "author": "gavinking", "createdAt": "2020-05-18T09:21:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4NzI4NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426487285", "bodyText": "You are talking about adding a function for the creation of the QueryPlanCache, isn't it? Can I add a new getHQLQueryPlan with this additional argument? Or do  need to keep the API of QueryPlanCache the same?", "author": "DavideD", "createdAt": "2020-05-18T09:22:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4Nzg3Nw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426487877", "bodyText": "OK, push it on the branch. No problem", "author": "DavideD", "createdAt": "2020-05-18T09:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MTQ1MQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426491451", "bodyText": "@DavideD do I have permission?\nAuthentication failed for 'https://github.com/DavideD/hibernate-orm.git/'", "author": "gavinking", "createdAt": "2020-05-18T09:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MjIxNA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426492214", "bodyText": "Anyway the commit is c0ca156", "author": "gavinking", "createdAt": "2020-05-18T09:30:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5NDcxNA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426494714", "bodyText": "And the corresponding change to your patch to hibernate-reactive is gavinking/hibernate-reactive@2f3d48f", "author": "gavinking", "createdAt": "2020-05-18T09:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMTA1MQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426521051", "bodyText": "I've updated both PRs. I've squashed the commits in the Hibernate Reactive one", "author": "DavideD", "createdAt": "2020-05-18T10:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "efde101ed0266359b588031074f3af301e7613b1", "chunk": "diff --git a/hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java b/hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java\nindex 0a867e6687..6a738937e4 100644\n--- a/hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java\n+++ b/hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java\n\n@@ -153,7 +159,7 @@ public class QueryPlanCache implements Serializable {\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = queryPlanCreator.createQueryPlan( queryString, shallow, enabledFilters, factory );\n \n \t\t\tif ( stats ) {\n \t\t\t\tfinal long endTime = System.nanoTime();\n"}}, {"oid": "a65706aaef9ccc1a5b934d1cdccd69b7baeed58e", "url": "https://github.com/hibernate/hibernate-orm/commit/a65706aaef9ccc1a5b934d1cdccd69b7baeed58e", "message": "HHH-14024 Allow the creation of a different QueryPlan", "committedDate": "2020-05-18T11:09:55Z", "type": "commit"}, {"oid": "eccdeebc29c2d0d9103d20f72af9fdba6d6084bf", "url": "https://github.com/hibernate/hibernate-orm/commit/eccdeebc29c2d0d9103d20f72af9fdba6d6084bf", "message": "HHH-14027 Allow the creation of a different QueryLoader", "committedDate": "2020-05-18T11:20:29Z", "type": "commit"}, {"oid": "54cdf9ea9fedaa9b56778e95df03795d9d8aac0f", "url": "https://github.com/hibernate/hibernate-orm/commit/54cdf9ea9fedaa9b56778e95df03795d9d8aac0f", "message": "HHH-14024 Allow the creation of a different QueryPlanCache", "committedDate": "2020-05-18T11:20:35Z", "type": "commit"}, {"oid": "d20cdc0e3437306e6362783f44bba39a5b7cc926", "url": "https://github.com/hibernate/hibernate-orm/commit/d20cdc0e3437306e6362783f44bba39a5b7cc926", "message": "HHH-14028 Change scope of various private methods to protected\n\n  So that Hibernate Reactive can reuse them.", "committedDate": "2020-05-18T11:21:54Z", "type": "commit"}, {"oid": "12346c4fe534e53b4ad1a31dc17627949182737e", "url": "https://github.com/hibernate/hibernate-orm/commit/12346c4fe534e53b4ad1a31dc17627949182737e", "message": "HHH-14025 Add method to return the query statements for update queries", "committedDate": "2020-05-18T11:22:01Z", "type": "commit"}, {"oid": "bde8d814550c0473c04fc67d0c134809d47c476c", "url": "https://github.com/hibernate/hibernate-orm/commit/bde8d814550c0473c04fc67d0c134809d47c476c", "message": "HHH-14026 Change scope to protected for SessionImple#verifyImmutableEntityUpdate", "committedDate": "2020-05-18T11:22:01Z", "type": "commit"}, {"oid": "efde101ed0266359b588031074f3af301e7613b1", "url": "https://github.com/hibernate/hibernate-orm/commit/efde101ed0266359b588031074f3af301e7613b1", "message": "HHH-14024 add QueryPlanCreator functional interface\n\nsimplifies customization of HQLQueryPlan instantiation", "committedDate": "2020-05-18T11:22:01Z", "type": "commit"}, {"oid": "efde101ed0266359b588031074f3af301e7613b1", "url": "https://github.com/hibernate/hibernate-orm/commit/efde101ed0266359b588031074f3af301e7613b1", "message": "HHH-14024 add QueryPlanCreator functional interface\n\nsimplifies customization of HQLQueryPlan instantiation", "committedDate": "2020-05-18T11:22:01Z", "type": "forcePushed"}]}