{"pr_number": 233, "pr_title": "Youtube stream extractor improvements by using playerResponse json", "pr_createdAt": "2020-01-06T22:20:52Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233", "timeline": [{"oid": "1ed89aad3eff72231bfec6c0d8d1fcf6b8c2c8e8", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1ed89aad3eff72231bfec6c0d8d1fcf6b8c2c8e8", "message": "Use more often playerResponse in yt stream extractor\n\nThis enhances performance and should make the extractor more reliable since it get info from a stable json structure that shouldn't be subject to many changes. Fallback html methods have been kept. In case of error the thrown exception contains the data about the playerResponse failure, that should be clearer than a NPE caused by not-found html tags.", "committedDate": "2020-01-06T19:45:57Z", "type": "commit"}, {"oid": "1689037b0115d440bce5ee5e612ab646cafa496f", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1689037b0115d440bce5ee5e612ab646cafa496f", "message": "Fix getLength() tests now that the value is rounded (not floor-ed)\n\nIn yt stream extractor", "committedDate": "2020-01-06T19:49:08Z", "type": "commit"}, {"oid": "d5ca02f3f69690b1bab065639db139747a4997b4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d5ca02f3f69690b1bab065639db139747a4997b4", "message": " Fix test failing because music channel could be Vevo\n\nIn yt stream extractor test.\nThe Vevo and the normal music channel are equivalent, so Youtube picks one of them at random, and in playerResponse the channel id is Vevo's one.", "committedDate": "2020-01-06T20:41:15Z", "type": "commit"}, {"oid": "1bb6cdee225a8544bdc87311523f4abb859efcd6", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1bb6cdee225a8544bdc87311523f4abb859efcd6", "message": "Enable commented-out test for yt stream extractor", "committedDate": "2020-01-06T20:43:24Z", "type": "commit"}, {"oid": "7ba04836ebe15268e12c5055d0919d61a8dfe1f4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/7ba04836ebe15268e12c5055d0919d61a8dfe1f4", "message": "Add tests for ratings in yt stream extractor tests", "committedDate": "2020-01-06T22:57:08Z", "type": "commit"}, {"oid": "0567c20549bd6f60ffe41514229a49b251a42937", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0567c20549bd6f60ffe41514229a49b251a42937", "message": "Merge branch 'dev' into yt-stream-ext", "committedDate": "2020-01-06T23:10:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUyNzgyMg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233#discussion_r368527822", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return thumbnails.getObject(thumbnails.size()-1).getString(\"url\");\n          \n          \n            \n                        return thumbnails.getObject(thumbnails.size() - 1).getString(\"url\");", "author": "TobiGr", "createdAt": "2020-01-20T12:42:17Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -149,34 +159,39 @@ public DateWrapper getUploadDate() throws ParsingException {\n     @Override\n     public String getThumbnailUrl() throws ParsingException {\n         assertPageFetched();\n-        // Try to get high resolution thumbnail first, if it fails, use low res from the player instead\n         try {\n-            return doc.select(\"link[itemprop=\\\"thumbnailUrl\\\"]\").first().attr(\"abs:href\");\n-        } catch (Exception ignored) {\n-            // Try other method...\n-        }\n+            JsonArray thumbnails = playerResponse.getObject(\"videoDetails\").getObject(\"thumbnail\").getArray(\"thumbnails\");\n+            // the last thumbnail is the one with the highest resolution\n+            return thumbnails.getObject(thumbnails.size()-1).getString(\"url\");", "originalCommit": "0567c20549bd6f60ffe41514229a49b251a42937", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e1100ef76c2a9cb917759374bc0bc2dddb53c47", "chunk": "diff --git a/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java b/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\nindex ef1edad3..45874906 100644\n--- a/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n+++ b/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n\n@@ -162,7 +162,7 @@ public class YoutubeStreamExtractor extends StreamExtractor {\n         try {\n             JsonArray thumbnails = playerResponse.getObject(\"videoDetails\").getObject(\"thumbnail\").getArray(\"thumbnails\");\n             // the last thumbnail is the one with the highest resolution\n-            return thumbnails.getObject(thumbnails.size()-1).getString(\"url\");\n+            return thumbnails.getObject(thumbnails.size() - 1).getString(\"url\");\n \n         } catch (Exception e) {\n             String url = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzMzg3OQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/233#discussion_r368533879", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return Math.round(Long.parseLong(durationMs)/1000.0f);\n          \n          \n            \n                            return Math.round(Long.parseLong(durationMs) / 1000f);", "author": "TobiGr", "createdAt": "2020-01-20T12:57:29Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -269,25 +284,22 @@ public int getAgeLimit() throws ParsingException {\n     public long getLength() throws ParsingException {\n         assertPageFetched();\n \n-        // try getting duration from playerargs\n-        try {\n-            String durationMs = playerResponse\n-                    .getObject(\"streamingData\")\n-                    .getArray(\"formats\")\n-                    .getObject(0)\n-                    .getString(\"approxDurationMs\");\n-            return Long.parseLong(durationMs)/1000;\n-        } catch (Exception e) {\n-        }\n-\n-        //try getting value from age gated video\n         try {\n             String duration = playerResponse\n                     .getObject(\"videoDetails\")\n                     .getString(\"lengthSeconds\");\n             return Long.parseLong(duration);\n         } catch (Exception e) {\n-            throw new ParsingException(\"Every methode to get the duration has failed: \", e);\n+            try {\n+                String durationMs = playerResponse\n+                        .getObject(\"streamingData\")\n+                        .getArray(\"formats\")\n+                        .getObject(0)\n+                        .getString(\"approxDurationMs\");\n+                return Math.round(Long.parseLong(durationMs)/1000.0f);", "originalCommit": "0567c20549bd6f60ffe41514229a49b251a42937", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1cfdc4547a41a70caa6b368b7267b68d04531e53", "chunk": "diff --git a/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java b/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\nindex ef1edad3..d0e0ff79 100644\n--- a/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n+++ b/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n\n@@ -296,7 +296,7 @@ public class YoutubeStreamExtractor extends StreamExtractor {\n                         .getArray(\"formats\")\n                         .getObject(0)\n                         .getString(\"approxDurationMs\");\n-                return Math.round(Long.parseLong(durationMs)/1000.0f);\n+                return Math.round(Long.parseLong(durationMs) / 1000f);\n             } catch (Exception ignored) {\n                 throw new ParsingException(\"Could not get duration\", e);\n             }\n"}}, {"oid": "1e1100ef76c2a9cb917759374bc0bc2dddb53c47", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1e1100ef76c2a9cb917759374bc0bc2dddb53c47", "message": "Update extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n\nCo-Authored-By: Tobias Groza <TobiGr@users.noreply.github.com>", "committedDate": "2020-01-20T21:52:36Z", "type": "commit"}, {"oid": "1cfdc4547a41a70caa6b368b7267b68d04531e53", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1cfdc4547a41a70caa6b368b7267b68d04531e53", "message": "Update extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java\n\nCo-Authored-By: Tobias Groza <TobiGr@users.noreply.github.com>", "committedDate": "2020-01-20T21:52:48Z", "type": "commit"}]}