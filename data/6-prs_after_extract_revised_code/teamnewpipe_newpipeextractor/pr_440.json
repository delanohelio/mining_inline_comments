{"pr_number": 440, "pr_title": "Fix redirect channels", "pr_createdAt": "2020-10-25T19:33:55Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjEzNzg3NQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512137875", "bodyText": "This test is now actually wrong, since the subscriber count should be ITEM_COUNT_UNKNOWN = -1, not 0, when the subscriber count is hidden, otherwise NewPipe wouldn't know it should hide the subscriber count", "author": "Stypox", "createdAt": "2020-10-26T17:22:47Z", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java", "diffHunk": "@@ -518,9 +518,8 @@ public void testFeedUrl() throws Exception {\n \n         @Test\n         public void testSubscriberCount() throws Exception {\n-            // there is no \"Subscribe\" button\n             long subscribers = extractor.getSubscriberCount();\n-            assertEquals(\"Wrong subscriber count\", -1, subscribers);\n+            assertEquals(\"Wrong subscriber count\", 0, subscribers);", "originalCommit": "852e515aa5fd36b044ab45695ae15500a6101c98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "chunk": "diff --git a/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java b/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java\nindex 02313a26..1c461fa8 100644\n--- a/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java\n+++ b/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java\n\n@@ -432,189 +432,6 @@ public class YoutubeChannelExtractorTest {\n         }\n     }\n \n-    // this channel has no \"Subscribe\" button\n-    public static class EminemVEVO implements BaseChannelExtractorTest {\n-        private static YoutubeChannelExtractor extractor;\n-\n-        @BeforeClass\n-        public static void setUp() throws Exception {\n-            NewPipe.init(DownloaderTestImpl.getInstance());\n-            extractor = (YoutubeChannelExtractor) YouTube\n-                    .getChannelExtractor(\"https://www.youtube.com/user/EminemVEVO/\");\n-            extractor.fetchPage();\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // Extractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testServiceId() {\n-            assertEquals(YouTube.getServiceId(), extractor.getServiceId());\n-        }\n-\n-        @Test\n-        public void testName() throws Exception {\n-            assertEquals(\"EminemVEVO\", extractor.getName());\n-        }\n-\n-        @Test\n-        public void testId() throws Exception {\n-            assertEquals(\"UC20vb-R_px4CguHzzBPhoyQ\", extractor.getId());\n-        }\n-\n-        @Test\n-        public void testUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/channel/UC20vb-R_px4CguHzzBPhoyQ\", extractor.getUrl());\n-        }\n-\n-        @Test\n-        public void testOriginalUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/user/EminemVEVO/\", extractor.getOriginalUrl());\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // ListExtractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testRelatedItems() throws Exception {\n-            defaultTestRelatedItems(extractor);\n-        }\n-\n-        @Test\n-        public void testMoreRelatedItems() throws Exception {\n-            defaultTestMoreItems(extractor);\n-        }\n-\n-         /*//////////////////////////////////////////////////////////////////////////\n-         // ChannelExtractor\n-         //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testDescription() throws Exception {\n-            final String description = extractor.getDescription();\n-            assertTrue(description, description.contains(\"Eminem on Vevo\"));\n-        }\n-\n-        @Test\n-        public void testAvatarUrl() throws Exception {\n-            String avatarUrl = extractor.getAvatarUrl();\n-            assertIsSecureUrl(avatarUrl);\n-            assertTrue(avatarUrl, avatarUrl.contains(\"yt3\"));\n-        }\n-\n-        @Test\n-        public void testBannerUrl() throws Exception {\n-            String bannerUrl = extractor.getBannerUrl();\n-            assertIsSecureUrl(bannerUrl);\n-            assertTrue(bannerUrl, bannerUrl.contains(\"yt3\"));\n-        }\n-\n-        @Test\n-        public void testFeedUrl() throws Exception {\n-            assertEquals(\"https://www.youtube.com/feeds/videos.xml?channel_id=UC20vb-R_px4CguHzzBPhoyQ\", extractor.getFeedUrl());\n-        }\n-\n-        @Test\n-        public void testSubscriberCount() throws Exception {\n-            long subscribers = extractor.getSubscriberCount();\n-            assertEquals(\"Wrong subscriber count\", 0, subscribers);\n-        }\n-    }\n-\n-    /**\n-     * Some VEVO channels will redirect to a new page with a new channel id.\n-     * <p>\n-     * Though, it isn't a simple redirect, but a redirect instruction embed in the response itself, this\n-     * test assure that we account for that.\n-     */\n-    public static class RedirectedChannel implements BaseChannelExtractorTest {\n-        private static YoutubeChannelExtractor extractor;\n-\n-        @BeforeClass\n-        public static void setUp() throws Exception {\n-            NewPipe.init(DownloaderTestImpl.getInstance());\n-            extractor = (YoutubeChannelExtractor) YouTube\n-                    .getChannelExtractor(\"https://www.youtube.com/channel/UCITk7Ky4iE5_xISw9IaHqpQ\");\n-            extractor.fetchPage();\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // Extractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testServiceId() {\n-            assertEquals(YouTube.getServiceId(), extractor.getServiceId());\n-        }\n-\n-        @Test\n-        public void testName() throws Exception {\n-            assertEquals(\"LordiVEVO\", extractor.getName());\n-        }\n-\n-        @Test\n-        public void testId() throws Exception {\n-            assertEquals(\"UCrxkwepj7-4Wz1wHyfzw-sQ\", extractor.getId());\n-        }\n-\n-        @Test\n-        public void testUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/channel/UCrxkwepj7-4Wz1wHyfzw-sQ\", extractor.getUrl());\n-        }\n-\n-        @Test\n-        public void testOriginalUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/channel/UCITk7Ky4iE5_xISw9IaHqpQ\", extractor.getOriginalUrl());\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // ListExtractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testRelatedItems() throws Exception {\n-            defaultTestRelatedItems(extractor);\n-        }\n-\n-        @Test\n-        public void testMoreRelatedItems() throws Exception {\n-            assertNoMoreItems(extractor);\n-        }\n-\n-         /*//////////////////////////////////////////////////////////////////////////\n-         // ChannelExtractor\n-         //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testDescription() throws Exception {\n-            assertEmpty(extractor.getDescription());\n-        }\n-\n-        @Test\n-        public void testAvatarUrl() throws Exception {\n-            String avatarUrl = extractor.getAvatarUrl();\n-            assertIsSecureUrl(avatarUrl);\n-            assertTrue(avatarUrl, avatarUrl.contains(\"yt3\"));\n-        }\n-\n-        @Test\n-        public void testBannerUrl() throws Exception {\n-            assertEmpty(extractor.getBannerUrl());\n-        }\n-\n-        @Test\n-        public void testFeedUrl() throws Exception {\n-            assertEquals(\"https://www.youtube.com/feeds/videos.xml?channel_id=UCrxkwepj7-4Wz1wHyfzw-sQ\", extractor.getFeedUrl());\n-        }\n-\n-        @Test\n-        public void testSubscriberCount() throws Exception {\n-            assertEquals(0, extractor.getSubscriberCount());\n-        }\n-    }\n-\n     public static class RandomChannel implements BaseChannelExtractorTest {\n         private static YoutubeChannelExtractor extractor;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDU5Mg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512160592", "bodyText": "why -1 and not ITEM_COUNT_UNKNOWN?", "author": "TobiGr", "createdAt": "2020-10-26T17:57:15Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeChannelExtractor.java", "diffHunk": "@@ -191,12 +190,7 @@ public long getSubscriberCount() throws ParsingException {\n                 throw new ParsingException(\"Could not get subscriber count\", e);\n             }\n         } else {\n-            // If there's no subscribe button, the channel has the subscriber count disabled\n-            if (c4TabbedHeaderRenderer.has(\"subscribeButton\")) {\n-                return 0;\n-            } else {\n-                return -1;\n-            }\n+            return -1;", "originalCommit": "5b05a142497c7737bddd291027b6c321b87d2646", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2NTIyNA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512165224", "bodyText": "That constant comes from ListExtractor, so it is not related to this, I was wrong when talking about it above", "author": "Stypox", "createdAt": "2020-10-26T18:04:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDU5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2NzA5MA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512167090", "bodyText": "so i should remove it?", "author": "B0pol", "createdAt": "2020-10-26T18:07:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDU5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "chunk": "diff --git a/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeChannelExtractor.java b/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeChannelExtractor.java\nindex bd8f9bb6..beed3e87 100644\n--- a/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeChannelExtractor.java\n+++ b/extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeChannelExtractor.java\n\n@@ -190,7 +188,7 @@ public class YoutubeChannelExtractor extends ChannelExtractor {\n                 throw new ParsingException(\"Could not get subscriber count\", e);\n             }\n         } else {\n-            return -1;\n+            return ITEM_COUNT_UNKNOWN;\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2MDY4Mg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/440#discussion_r512160682", "bodyText": "Oh, you need to rebase. While rebasing undo this.", "author": "Stypox", "createdAt": "2020-10-26T17:57:22Z", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java", "diffHunk": "@@ -518,7 +518,6 @@ public void testFeedUrl() throws Exception {\n \n         @Test\n         public void testSubscriberCount() throws Exception {\n-            // there is no \"Subscribe\" button", "originalCommit": "5b05a142497c7737bddd291027b6c321b87d2646", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "chunk": "diff --git a/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java b/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java\nindex c82253ef..1c461fa8 100644\n--- a/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java\n+++ b/extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelExtractorTest.java\n\n@@ -432,189 +432,6 @@ public class YoutubeChannelExtractorTest {\n         }\n     }\n \n-    // this channel has no \"Subscribe\" button\n-    public static class EminemVEVO implements BaseChannelExtractorTest {\n-        private static YoutubeChannelExtractor extractor;\n-\n-        @BeforeClass\n-        public static void setUp() throws Exception {\n-            NewPipe.init(DownloaderTestImpl.getInstance());\n-            extractor = (YoutubeChannelExtractor) YouTube\n-                    .getChannelExtractor(\"https://www.youtube.com/user/EminemVEVO/\");\n-            extractor.fetchPage();\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // Extractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testServiceId() {\n-            assertEquals(YouTube.getServiceId(), extractor.getServiceId());\n-        }\n-\n-        @Test\n-        public void testName() throws Exception {\n-            assertEquals(\"EminemVEVO\", extractor.getName());\n-        }\n-\n-        @Test\n-        public void testId() throws Exception {\n-            assertEquals(\"UC20vb-R_px4CguHzzBPhoyQ\", extractor.getId());\n-        }\n-\n-        @Test\n-        public void testUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/channel/UC20vb-R_px4CguHzzBPhoyQ\", extractor.getUrl());\n-        }\n-\n-        @Test\n-        public void testOriginalUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/user/EminemVEVO/\", extractor.getOriginalUrl());\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // ListExtractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testRelatedItems() throws Exception {\n-            defaultTestRelatedItems(extractor);\n-        }\n-\n-        @Test\n-        public void testMoreRelatedItems() throws Exception {\n-            defaultTestMoreItems(extractor);\n-        }\n-\n-         /*//////////////////////////////////////////////////////////////////////////\n-         // ChannelExtractor\n-         //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testDescription() throws Exception {\n-            final String description = extractor.getDescription();\n-            assertTrue(description, description.contains(\"Eminem on Vevo\"));\n-        }\n-\n-        @Test\n-        public void testAvatarUrl() throws Exception {\n-            String avatarUrl = extractor.getAvatarUrl();\n-            assertIsSecureUrl(avatarUrl);\n-            assertTrue(avatarUrl, avatarUrl.contains(\"yt3\"));\n-        }\n-\n-        @Test\n-        public void testBannerUrl() throws Exception {\n-            String bannerUrl = extractor.getBannerUrl();\n-            assertIsSecureUrl(bannerUrl);\n-            assertTrue(bannerUrl, bannerUrl.contains(\"yt3\"));\n-        }\n-\n-        @Test\n-        public void testFeedUrl() throws Exception {\n-            assertEquals(\"https://www.youtube.com/feeds/videos.xml?channel_id=UC20vb-R_px4CguHzzBPhoyQ\", extractor.getFeedUrl());\n-        }\n-\n-        @Test\n-        public void testSubscriberCount() throws Exception {\n-            long subscribers = extractor.getSubscriberCount();\n-            assertEquals(\"Wrong subscriber count\", -1, subscribers);\n-        }\n-    }\n-\n-    /**\n-     * Some VEVO channels will redirect to a new page with a new channel id.\n-     * <p>\n-     * Though, it isn't a simple redirect, but a redirect instruction embed in the response itself, this\n-     * test assure that we account for that.\n-     */\n-    public static class RedirectedChannel implements BaseChannelExtractorTest {\n-        private static YoutubeChannelExtractor extractor;\n-\n-        @BeforeClass\n-        public static void setUp() throws Exception {\n-            NewPipe.init(DownloaderTestImpl.getInstance());\n-            extractor = (YoutubeChannelExtractor) YouTube\n-                    .getChannelExtractor(\"https://www.youtube.com/channel/UCITk7Ky4iE5_xISw9IaHqpQ\");\n-            extractor.fetchPage();\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // Extractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testServiceId() {\n-            assertEquals(YouTube.getServiceId(), extractor.getServiceId());\n-        }\n-\n-        @Test\n-        public void testName() throws Exception {\n-            assertEquals(\"LordiVEVO\", extractor.getName());\n-        }\n-\n-        @Test\n-        public void testId() throws Exception {\n-            assertEquals(\"UCrxkwepj7-4Wz1wHyfzw-sQ\", extractor.getId());\n-        }\n-\n-        @Test\n-        public void testUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/channel/UCrxkwepj7-4Wz1wHyfzw-sQ\", extractor.getUrl());\n-        }\n-\n-        @Test\n-        public void testOriginalUrl() throws ParsingException {\n-            assertEquals(\"https://www.youtube.com/channel/UCITk7Ky4iE5_xISw9IaHqpQ\", extractor.getOriginalUrl());\n-        }\n-\n-        /*//////////////////////////////////////////////////////////////////////////\n-        // ListExtractor\n-        //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testRelatedItems() throws Exception {\n-            defaultTestRelatedItems(extractor);\n-        }\n-\n-        @Test\n-        public void testMoreRelatedItems() throws Exception {\n-            assertNoMoreItems(extractor);\n-        }\n-\n-         /*//////////////////////////////////////////////////////////////////////////\n-         // ChannelExtractor\n-         //////////////////////////////////////////////////////////////////////////*/\n-\n-        @Test\n-        public void testDescription() throws Exception {\n-            assertEmpty(extractor.getDescription());\n-        }\n-\n-        @Test\n-        public void testAvatarUrl() throws Exception {\n-            String avatarUrl = extractor.getAvatarUrl();\n-            assertIsSecureUrl(avatarUrl);\n-            assertTrue(avatarUrl, avatarUrl.contains(\"yt3\"));\n-        }\n-\n-        @Test\n-        public void testBannerUrl() throws Exception {\n-            assertEmpty(extractor.getBannerUrl());\n-        }\n-\n-        @Test\n-        public void testFeedUrl() throws Exception {\n-            assertEquals(\"https://www.youtube.com/feeds/videos.xml?channel_id=UCrxkwepj7-4Wz1wHyfzw-sQ\", extractor.getFeedUrl());\n-        }\n-\n-        @Test\n-        public void testSubscriberCount() throws Exception {\n-            assertEquals(-1, extractor.getSubscriberCount());\n-        }\n-    }\n-\n     public static class RandomChannel implements BaseChannelExtractorTest {\n         private static YoutubeChannelExtractor extractor;\n \n"}}, {"oid": "a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a39a2cca8261c7a6fe0286a503c3e16b8e22875d", "message": "fix redirect channels", "committedDate": "2020-10-26T18:05:19Z", "type": "commit"}, {"oid": "c1e98579603412118d022333ba5dd1ce15fbb8fa", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/c1e98579603412118d022333ba5dd1ce15fbb8fa", "message": "fix subscriber count when subscribe is disabled\n\nfixes #305", "committedDate": "2020-10-26T18:06:01Z", "type": "commit"}, {"oid": "c1e98579603412118d022333ba5dd1ce15fbb8fa", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/c1e98579603412118d022333ba5dd1ce15fbb8fa", "message": "fix subscriber count when subscribe is disabled\n\nfixes #305", "committedDate": "2020-10-26T18:06:01Z", "type": "forcePushed"}]}