{"pr_number": 313, "pr_title": "Display parent channel details", "pr_createdAt": "2020-04-13T21:31:44Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTA4OQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408061089", "bodyText": "Use {@link ChannelExtractor} instead", "author": "wb9688", "createdAt": "2020-04-14T11:22:42Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,", "originalCommit": "48b397567813a8b78a21d47e830e879b49e7036c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5ODcxNg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408398716", "bodyText": "hmm, truth is I just copied the correspond comment from getUploaderUrl. How can I use {@link ChannelExtractor}?", "author": "Royosef", "createdAt": "2020-04-14T19:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwNjk3Mw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r409006973", "bodyText": "@Royosef: Just change the whole <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a> to {@link ChannelExtractor}.", "author": "wb9688", "createdAt": "2020-04-15T17:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MTA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "fc3968f95cd0685871be8b0b4494fd60125768b0", "chunk": "diff --git a/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java b/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java\nindex c740ffd7..2cc64ab7 100644\n--- a/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java\n+++ b/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java\n\n@@ -179,37 +180,37 @@ public abstract class StreamExtractor extends Extractor {\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n     /**\n-     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * The Url to the page of the sub-channel of the stream. This must not be a homepage,\n      * but the page offered by the service the extractor handles. This url will be handled by the\n-     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,\n+     * {@link ChannelExtractor},\n      * so be sure to implement that one before you return a value here, otherwise NewPipe will crash if one selects\n      * this url.\n      *\n-     * @return the url to the page of the parent chanel of the stream or an empty String\n+     * @return the url to the page of the sub-channel of the stream or an empty String\n      * @throws ParsingException\n      */\n     @Nonnull\n-    public abstract String getParentChannelUrl() throws ParsingException;\n+    public abstract String getSubChannelUrl() throws ParsingException;\n \n     /**\n-     * The name of the parent chanel of the stream.\n+     * The name of the sub-channel of the stream.\n      * If the name is not available you can simply return an empty string.\n      *\n-     * @return the name of the parent chanel of the stream or an empty String\n+     * @return the name of the sub-channel of the stream or an empty String\n      * @throws ParsingException\n      */\n     @Nonnull\n-    public abstract String getParentChannelName() throws ParsingException;\n+    public abstract String getSubChannelName() throws ParsingException;\n \n     /**\n-     * The url to the image file/profile picture/avatar of the parent chanel of the stream.\n+     * The url to the image file/profile picture/avatar of the sub-channel of the stream.\n      * If the url is not available you can return an empty String.\n      *\n-     * @return The url of the image file of the parent chanel or an empty String\n+     * @return The url of the image file of the sub-channel or an empty String\n      * @throws ParsingException\n      */\n     @Nonnull\n-    public abstract String getParentChannelAvatarUrl() throws ParsingException;\n+    public abstract String getSubChannelAvatarUrl() throws ParsingException;\n \n     /**\n      * Get the dash mpd url. If you don't know what a dash MPD is you can read about it\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MzUzMA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408063530", "bodyText": "Should we add a getParentChannelUrl or a getSubchannelUrl here? Same thing for name and avatar URL obviously,\nImho we should add getSubchannelUrl, as currently we return the parent channel's URL, so the values returned by getChannelUrl stays the same. I want someone else's opinion here first though.\nEdit: it looks like you're returning the subchannel's URL here, so that's obviously not correct anyway.", "author": "wb9688", "createdAt": "2020-04-14T11:27:38Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java", "diffHunk": "@@ -178,6 +178,39 @@ public StreamExtractor(StreamingService service, LinkHandler linkHandler) {\n     @Nonnull\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n+    /**\n+     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * but the page offered by the service the extractor handles. This url will be handled by the\n+     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,\n+     * so be sure to implement that one before you return a value here, otherwise NewPipe will crash if one selects\n+     * this url.\n+     *\n+     * @return the url to the page of the parent chanel of the stream or an empty String\n+     * @throws ParsingException\n+     */\n+    @Nonnull\n+    public abstract String getParentChannelUrl() throws ParsingException;", "originalCommit": "48b397567813a8b78a21d47e830e879b49e7036c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5NjExNQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r408396115", "bodyText": "I'm not really sure myself what will be the right naming. In Peertube it's \"account page\" and \"channel page\", maybe we should do the same?", "author": "Royosef", "createdAt": "2020-04-14T19:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MzUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwNTgyMg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/313#discussion_r409005822", "bodyText": "@Royosef: No, just change it to getSubchannelUrl(). We aren't going to call it accounts and channels as that's unclear and only PeerTube calls it that.", "author": "wb9688", "createdAt": "2020-04-15T17:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MzUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "fc3968f95cd0685871be8b0b4494fd60125768b0", "chunk": "diff --git a/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java b/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java\nindex c740ffd7..2cc64ab7 100644\n--- a/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java\n+++ b/extractor/src/main/java/org/schabi/newpipe/extractor/stream/StreamExtractor.java\n\n@@ -179,37 +180,37 @@ public abstract class StreamExtractor extends Extractor {\n     public abstract String getUploaderAvatarUrl() throws ParsingException;\n \n     /**\n-     * The Url to the page of the parent chanel of the stream. This must not be a homepage,\n+     * The Url to the page of the sub-channel of the stream. This must not be a homepage,\n      * but the page offered by the service the extractor handles. This url will be handled by the\n-     * <a href=\"https://teamnewpipe.github.io/documentation/03_Implement_a_service/#channel\">ChannelExtractor</a>,\n+     * {@link ChannelExtractor},\n      * so be sure to implement that one before you return a value here, otherwise NewPipe will crash if one selects\n      * this url.\n      *\n-     * @return the url to the page of the parent chanel of the stream or an empty String\n+     * @return the url to the page of the sub-channel of the stream or an empty String\n      * @throws ParsingException\n      */\n     @Nonnull\n-    public abstract String getParentChannelUrl() throws ParsingException;\n+    public abstract String getSubChannelUrl() throws ParsingException;\n \n     /**\n-     * The name of the parent chanel of the stream.\n+     * The name of the sub-channel of the stream.\n      * If the name is not available you can simply return an empty string.\n      *\n-     * @return the name of the parent chanel of the stream or an empty String\n+     * @return the name of the sub-channel of the stream or an empty String\n      * @throws ParsingException\n      */\n     @Nonnull\n-    public abstract String getParentChannelName() throws ParsingException;\n+    public abstract String getSubChannelName() throws ParsingException;\n \n     /**\n-     * The url to the image file/profile picture/avatar of the parent chanel of the stream.\n+     * The url to the image file/profile picture/avatar of the sub-channel of the stream.\n      * If the url is not available you can return an empty String.\n      *\n-     * @return The url of the image file of the parent chanel or an empty String\n+     * @return The url of the image file of the sub-channel or an empty String\n      * @throws ParsingException\n      */\n     @Nonnull\n-    public abstract String getParentChannelAvatarUrl() throws ParsingException;\n+    public abstract String getSubChannelAvatarUrl() throws ParsingException;\n \n     /**\n      * Get the dash mpd url. If you don't know what a dash MPD is you can read about it\n"}}, {"oid": "fc3968f95cd0685871be8b0b4494fd60125768b0", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/fc3968f95cd0685871be8b0b4494fd60125768b0", "message": "Fix PR review\n\nRename \"ParentChannel\" to \"SubChannel\"\nAdd Tests for sub-channel info fetching", "committedDate": "2020-04-19T20:09:34Z", "type": "forcePushed"}, {"oid": "4234740baa6c3df4634620bc047cc482cac1441a", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4234740baa6c3df4634620bc047cc482cac1441a", "message": "Add parent channel info to ChannelExtractor: name, url & avatar url", "committedDate": "2020-05-07T18:20:12Z", "type": "commit"}, {"oid": "1de1f97cf1b3a269cba4137d23140df60c334d88", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/1de1f97cf1b3a269cba4137d23140df60c334d88", "message": "Add parent channel info to StreamExtractor: name, url & avatar url", "committedDate": "2020-05-07T18:20:12Z", "type": "commit"}, {"oid": "a4086617719e53b293efa1e8873799ba7714cb14", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a4086617719e53b293efa1e8873799ba7714cb14", "message": "Fix PR review\n\nRename \"ParentChannel\" to \"SubChannel\"\nAdd Tests for sub-channel info fetching", "committedDate": "2020-05-07T18:20:12Z", "type": "commit"}, {"oid": "a4086617719e53b293efa1e8873799ba7714cb14", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a4086617719e53b293efa1e8873799ba7714cb14", "message": "Fix PR review\n\nRename \"ParentChannel\" to \"SubChannel\"\nAdd Tests for sub-channel info fetching", "committedDate": "2020-05-07T18:20:12Z", "type": "forcePushed"}]}