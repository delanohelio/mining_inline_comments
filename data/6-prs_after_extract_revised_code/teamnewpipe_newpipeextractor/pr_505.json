{"pr_number": 505, "pr_title": "[media.ccc.de] Fix NPE in search results if they contain a future talk", "pr_createdAt": "2020-12-30T17:33:15Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/505", "timeline": [{"oid": "edf8dd0e9270c33229bb86d9b5f5a7d6b9d7d1c4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/edf8dd0e9270c33229bb86d9b5f5a7d6b9d7d1c4", "message": "[media.ccc.de] Fix NPE in search results if they contain a future talk", "committedDate": "2020-12-30T17:34:28Z", "type": "commit"}, {"oid": "edf8dd0e9270c33229bb86d9b5f5a7d6b9d7d1c4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/edf8dd0e9270c33229bb86d9b5f5a7d6b9d7d1c4", "message": "[media.ccc.de] Fix NPE in search results if they contain a future talk", "committedDate": "2020-12-30T17:34:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5MjkxOA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/505#discussion_r550492918", "bodyText": "This pattern should be compiled and made static final", "author": "Stypox", "createdAt": "2020-12-31T14:22:10Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCParsingHelper.java", "diffHunk": "@@ -28,9 +28,9 @@ public static OffsetDateTime parseDateFrom(final String textualUploadDate) throw\n         }\n     }\n \n-    public static boolean isLiveStreamId(final String url) {\n+    public static boolean isLiveStreamId(final String id) {\n         final String pattern = \"\\\\w+/\\\\w+\";", "originalCommit": "edf8dd0e9270c33229bb86d9b5f5a7d6b9d7d1c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDUxNTc1MA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/505#discussion_r550515750", "bodyText": "Done", "author": "TobiGr", "createdAt": "2020-12-31T16:04:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5MjkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "a896ec41b9a44074684a8ffacd005b35223d30cf", "chunk": "diff --git a/extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCParsingHelper.java b/extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCParsingHelper.java\nindex 7ea3e20c..a3aec1dd 100644\n--- a/extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCParsingHelper.java\n+++ b/extractor/src/main/java/org/schabi/newpipe/extractor/services/media_ccc/extractors/MediaCCCParsingHelper.java\n\n@@ -28,12 +29,28 @@ public final class MediaCCCParsingHelper {\n         }\n     }\n \n+    /**\n+     * Check whether an id is a live stream id\n+     * @param id the {@code id} to check\n+     * @return returns {@code true} if the {@code id} is formatted like {@code {conference_slug}/{room_slug}};\n+     *         {@code false} otherwise\n+     */\n     public static boolean isLiveStreamId(final String id) {\n-        final String pattern = \"\\\\w+/\\\\w+\";\n-        return Pattern.matches(pattern, id); // {conference_slug}/{room_slug}\n+        return LIVE_STREAM_ID_PATTERN.matcher(id).find();\n     }\n \n-    public static JsonArray getLiveStreams(final Downloader downloader, final Localization localization) throws ExtractionException {\n+    /**\n+     * Get currently available live streams from\n+     * <a href=\"https://streaming.media.ccc.de/streams/v2.json\">https://streaming.media.ccc.de/streams/v2.json</a>.\n+     * Use this method to cache requests, because they can get quite big.\n+     * TODO: implement better caching policy (max-age: 3 min)\n+     * @param downloader The downloader to use for making the request\n+     * @param localization The localization to be used. Will most likely be ignored.\n+     * @return {@link JsonArray} containing current conferences and info about their rooms and streams.\n+     * @throws ExtractionException if the data could not be fetched or the retrieved data could not be parsed to a {@link JsonArray}\n+     */\n+    public static JsonArray getLiveStreams(final Downloader downloader, final Localization localization)\n+            throws ExtractionException {\n         if (liveStreams == null) {\n             try {\n                 final String site = downloader.get(\"https://streaming.media.ccc.de/streams/v2.json\",\n"}}, {"oid": "a896ec41b9a44074684a8ffacd005b35223d30cf", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/a896ec41b9a44074684a8ffacd005b35223d30cf", "message": "[media.ccc.de] Use Pattern for getting the ive stream id", "committedDate": "2020-12-31T16:03:23Z", "type": "commit"}, {"oid": "2cbc3ccb1afbd4693bd20d6017b3e2887c9441cb", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/2cbc3ccb1afbd4693bd20d6017b3e2887c9441cb", "message": "[media.ccc.de] Fix live stream test if there are no current live streams", "committedDate": "2020-12-31T16:03:23Z", "type": "commit"}, {"oid": "2cbc3ccb1afbd4693bd20d6017b3e2887c9441cb", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/2cbc3ccb1afbd4693bd20d6017b3e2887c9441cb", "message": "[media.ccc.de] Fix live stream test if there are no current live streams", "committedDate": "2020-12-31T16:03:23Z", "type": "forcePushed"}]}