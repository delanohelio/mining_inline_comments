{"pr_number": 1681, "pr_title": "Warn for rogue syntax in proof module", "pr_createdAt": "2020-12-02T00:25:23Z", "pr_url": "https://github.com/kframework/k/pull/1681", "timeline": [{"oid": "d20608bf011a4e26294a1c69645c4af68914ae19", "url": "https://github.com/kframework/k/commit/d20608bf011a4e26294a1c69645c4af68914ae19", "message": "Warn for rogue syntax in proof module\n\nFixes: #1471", "committedDate": "2020-12-02T00:28:28Z", "type": "commit"}, {"oid": "d20608bf011a4e26294a1c69645c4af68914ae19", "url": "https://github.com/kframework/k/commit/d20608bf011a4e26294a1c69645c4af68914ae19", "message": "Warn for rogue syntax in proof module\n\nFixes: #1471", "committedDate": "2020-12-02T00:28:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1NzI1MQ==", "url": "https://github.com/kframework/k/pull/1681#discussion_r534257251", "bodyText": "There isn't some Syntax super-class you can use instead of listing all these out?\n@dwightguth should probably check that this check is being done in the correct place, output looks OK to me.", "author": "ehildenb", "createdAt": "2020-12-02T15:28:57Z", "path": "kernel/src/main/java/org/kframework/kompile/Kompile.java", "diffHunk": "@@ -313,6 +313,14 @@ public void definitionChecks(Set<Module> modules) {\n \n     // Extra checks just for the prover specification.\n     public Module proverChecks(Module specModule, Module mainDefModule) {\n+        // check rogue syntax in spec module\n+        Set<Sentence> toCheck = mutable(specModule.sentences().$minus$minus(mainDefModule.sentences()));\n+        for (Sentence s : toCheck)\n+            if (s instanceof Production || s instanceof SyntaxSort || s instanceof SyntaxLexical ||\n+                    s instanceof SyntaxPriority || s instanceof SyntaxAssociativity)", "originalCommit": "d20608bf011a4e26294a1c69645c4af68914ae19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI4ODM0Nw==", "url": "https://github.com/kframework/k/pull/1681#discussion_r534288347", "bodyText": "case class Production(klabel: Option[KLabel], params: Seq[Sort], sort: Sort, items: Seq[ProductionItem], att: Att)\n  extends Sentence with ProductionToString\n\nThey all extend Sentence directly, I had to list them all.", "author": "radumereuta", "createdAt": "2020-12-02T16:06:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1NzI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI5MTI2MA==", "url": "https://github.com/kframework/k/pull/1681#discussion_r534291260", "bodyText": "Would this message be better?\nFound syntax declaration in proof module. This can cause parsing issues since it's not visible from the main module.", "author": "radumereuta", "createdAt": "2020-12-02T16:10:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1NzI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU4NzIxNA==", "url": "https://github.com/kframework/k/pull/1681#discussion_r535587214", "bodyText": "rather than using a instanceof, you ought to be able to say sentence.isSyntax()", "author": "dwightguth", "createdAt": "2020-12-03T20:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1NzI1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7d074c9047d572d5341feeb00a7a676c50a9c202", "chunk": "diff --git a/kernel/src/main/java/org/kframework/kompile/Kompile.java b/kernel/src/main/java/org/kframework/kompile/Kompile.java\nindex 32cfb0c6f..8e2dd1920 100644\n--- a/kernel/src/main/java/org/kframework/kompile/Kompile.java\n+++ b/kernel/src/main/java/org/kframework/kompile/Kompile.java\n\n@@ -316,8 +316,7 @@ public class Kompile {\n         // check rogue syntax in spec module\n         Set<Sentence> toCheck = mutable(specModule.sentences().$minus$minus(mainDefModule.sentences()));\n         for (Sentence s : toCheck)\n-            if (s instanceof Production || s instanceof SyntaxSort || s instanceof SyntaxLexical ||\n-                    s instanceof SyntaxPriority || s instanceof SyntaxAssociativity)\n+            if (s.isSyntax())\n                 kem.registerCompilerWarning(ExceptionType.FUTURE_ERROR, errors,\n                         \"Found syntax declaration in proof module. This will not be visible from the main module.\", s);\n \n"}}, {"oid": "7d074c9047d572d5341feeb00a7a676c50a9c202", "url": "https://github.com/kframework/k/commit/7d074c9047d572d5341feeb00a7a676c50a9c202", "message": "Use isSyntax instead of instanceof", "committedDate": "2020-12-03T20:47:16Z", "type": "commit"}, {"oid": "de9f6bf5e3c70270cdbedb1cf595cc875c20f552", "url": "https://github.com/kframework/k/commit/de9f6bf5e3c70270cdbedb1cf595cc875c20f552", "message": "Merge branch 'master' into issue1471-proofSyntaxWarning", "committedDate": "2020-12-03T20:47:27Z", "type": "commit"}]}