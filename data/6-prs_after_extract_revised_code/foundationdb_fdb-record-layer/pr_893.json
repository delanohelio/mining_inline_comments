{"pr_number": 893, "pr_title": "Merge 2.8.104.28 to master", "pr_createdAt": "2020-04-06T18:58:14Z", "pr_url": "https://github.com/FoundationDB/fdb-record-layer/pull/893", "timeline": [{"oid": "d0110b2d3fba2c8f2ff700cd20fc75e72271fa78", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/d0110b2d3fba2c8f2ff700cd20fc75e72271fa78", "message": "Fixes #888: IN to OR transformation does not plan with other predicates.\n\nPR #861 added a new transformation to the RecordQueryPlanner that\nattempts to transform an IN predicate into an equivalent OR of equality\npredicates when the planner determines that it cannot implement the IN\npredicate as an IN-join because of an incompatible sort order.\n\nHowever, the equivalent OR predicate is too complex for the simple\nnormalizer normalizeAndOr() if there are other predicates on the\noriginal filter. In this case, the predicates are not normalized and so\nthe union planner is unable to produce the desired union plan.\n\nThis change adds a more sophisticated normalizer to handle this case.", "committedDate": "2020-04-03T18:48:37Z", "type": "commit"}, {"oid": "deba84fce9037bd15e45507ffd5ae7380e2ebcdd", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/deba84fce9037bd15e45507ffd5ae7380e2ebcdd", "message": "Merge pull request #889 from FoundationDB/plan-in-as-or-complex\n\nFixes #888: IN to OR transformation does not plan with other predicates.", "committedDate": "2020-04-03T21:25:11Z", "type": "commit"}, {"oid": "a2e2706f7507644c5b10a4423a9aaef3cdd5a878", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/a2e2706f7507644c5b10a4423a9aaef3cdd5a878", "message": "Release notes updated for version 2.8.102.27", "committedDate": "2020-04-03T21:27:19Z", "type": "commit"}, {"oid": "a1ec2a88d72b8fb458b43e473217de5ed83b1ddb", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/a1ec2a88d72b8fb458b43e473217de5ed83b1ddb", "message": "Merge branch 'fdb-record-layer-2.8.102' into merge-2.8.102.27-to-2.8.104", "committedDate": "2020-04-03T21:58:01Z", "type": "commit"}, {"oid": "4dbb9ceeeb0a099e4da8ac80ae1da5ed0fda8026", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/4dbb9ceeeb0a099e4da8ac80ae1da5ed0fda8026", "message": "Merge pull request #890 from nschiefer/merge-2.8.102.27-to-2.8.104\n\nMerge 2.8.102.27 to 2.8.104", "committedDate": "2020-04-03T22:13:52Z", "type": "commit"}, {"oid": "04dea3fb9dc1b71fecbef74f307e52eba9a56b38", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/04dea3fb9dc1b71fecbef74f307e52eba9a56b38", "message": "Release notes updated for version 2.8.104.28", "committedDate": "2020-04-03T22:14:17Z", "type": "commit"}, {"oid": "babfb8e5915230e10c446cd25cb2850bc2f67a6e", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/babfb8e5915230e10c446cd25cb2850bc2f67a6e", "message": "Merge branch 'fdb-record-layer-2.8.104' into merge-2.8.104.28-to-master", "committedDate": "2020-04-06T18:56:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM1MDk5Mg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/893#discussion_r404350992", "bodyText": "For master (versus patch release), do we want this to be the only definition of normalizeAndOr? Or just live with this until a more major overhaul?\nWe could also take this as a clean merge from the release branch and do that separately.", "author": "MMcM", "createdAt": "2020-04-06T19:57:42Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "diffHunk": "@@ -1284,20 +1284,49 @@ private QueryComponent normalizeAndOr(AndComponent and) {\n             QueryComponent child1 = and.getChildren().get(0);\n             QueryComponent child2 = and.getChildren().get(1);\n             if (child1 instanceof OrComponent && Query.isSingleFieldComparison(child2)) {\n-                return OrComponent.from(distributeAnd(child2, ((OrComponent)child1).getChildren()));\n+                return OrComponent.from(distributeAnd(Collections.singletonList(child2), ((OrComponent)child1).getChildren()));\n             }\n             if (child2 instanceof OrComponent && Query.isSingleFieldComparison(child1)) {\n-                return OrComponent.from(distributeAnd(child1, ((OrComponent)child2).getChildren()));\n+                return OrComponent.from(distributeAnd(Collections.singletonList(child1), ((OrComponent)child2).getChildren()));\n             }\n         }\n         return and;\n     }\n \n-    private List<QueryComponent> distributeAnd(QueryComponent component, List<QueryComponent> children) {\n+    private QueryComponent normalizeAndOrForInAsOr(@Nonnull QueryComponent component) {", "originalCommit": "babfb8e5915230e10c446cd25cb2850bc2f67a6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM1NDAyMg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/893#discussion_r404354022", "bodyText": "I'd be up for changing this in master, but I think I'd rather do a clean merge. I opened #894 to track this.", "author": "nschiefer", "createdAt": "2020-04-06T20:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM1MDk5Mg=="}], "type": "inlineReview", "revised_code": null}]}