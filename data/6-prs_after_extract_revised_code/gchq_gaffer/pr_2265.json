{"pr_number": 2265, "pr_title": "gh-2257 Set Accumulo store split points based on sampled elements from RDD's", "pr_createdAt": "2020-04-02T15:16:57Z", "pr_url": "https://github.com/gchq/Gaffer/pull/2265", "timeline": [{"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "url": "https://github.com/gchq/Gaffer/commit/2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "message": "gh-2257 Adding OperationHandlers to set Accumulo store split points based on sampled elements from JavaRDD and RDD.", "committedDate": "2020-03-28T10:49:29Z", "type": "commit"}, {"oid": "f28a835c289f498fb06a88fa3b8a675f55229cff", "url": "https://github.com/gchq/Gaffer/commit/f28a835c289f498fb06a88fa3b8a675f55229cff", "message": "Merge branch 'develop' into gh-2257-set-accumulo-stores-split-points-using-RDD", "committedDate": "2020-04-02T21:14:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMDY4MQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402600681", "bodyText": "2020", "author": "GCHQDev404", "createdAt": "2020-04-02T21:16:02Z", "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTQ0MA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402889440", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2016-2020 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "author": "d47853", "createdAt": "2020-04-03T09:49:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMDY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMjM0NA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403132344", "bodyText": "Corrected", "author": "m29827", "createdAt": "2020-04-03T16:34:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMDY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java b/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java\nindex 53f8f89682..41a2e80570 100644\n--- a/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java\n+++ b/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2016-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMTA1MQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402601051", "bodyText": "2020", "author": "GCHQDev404", "createdAt": "2020-04-02T21:16:51Z", "path": "core/operation/src/test/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPointsTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTY0NA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402889644", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2020 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "author": "d47853", "createdAt": "2020-04-03T09:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMTA1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMjYxMw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403132613", "bodyText": "Corrected", "author": "m29827", "createdAt": "2020-04-03T16:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMTA1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/operation/src/test/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPointsTest.java b/core/operation/src/test/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPointsTest.java\nindex 220bd0a4f2..aa56d3192c 100644\n--- a/core/operation/src/test/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPointsTest.java\n+++ b/core/operation/src/test/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPointsTest.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMjk2Nw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402602967", "bodyText": "2020", "author": "GCHQDev404", "createdAt": "2020-04-02T21:20:37Z", "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTY5NQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402889695", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2020 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "author": "d47853", "createdAt": "2020-04-03T09:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMjk2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMjc2OQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403132769", "bodyText": "Corrected", "author": "m29827", "createdAt": "2020-04-03T16:35:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMjk2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\nindex f36cadfa74..15ce7eeab0 100644\n--- a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n+++ b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMzQyMw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402603423", "bodyText": "isNull(numSplits)", "author": "GCHQDev404", "createdAt": "2020-04-02T21:21:39Z", "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk0Njc4MA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402946780", "bodyText": "For consistency I've kept the null checks as they were originally written prior to refactoring into this class.  Most of the code follows this pattern rather than using Objects.isNull.", "author": "m29827", "createdAt": "2020-04-03T11:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMzQyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzMTkyNA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403331924", "bodyText": "Federation is different them ;)", "author": "GCHQDev404", "createdAt": "2020-04-03T20:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMzQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\nindex f36cadfa74..15ce7eeab0 100644\n--- a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n+++ b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNTMzNw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402605337", "bodyText": "Code Complet 17.1\nMinimize the number of returns in each routine", "author": "GCHQDev404", "createdAt": "2020-04-02T21:25:35Z", "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk1NTExOQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402955119", "bodyText": "Again this is existing code refactored into this new class, I'd probably stick with this return statement here as it provides a convenient short circuit to the meat of the processing.", "author": "m29827", "createdAt": "2020-04-03T12:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNTMzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzNTE2NQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403335165", "bodyText": "I'm aware the code was pre-existing and not necessarily yours.\nMy comments where not change required.", "author": "GCHQDev404", "createdAt": "2020-04-03T21:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNTMzNw=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\nindex f36cadfa74..15ce7eeab0 100644\n--- a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n+++ b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTM1Mw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402609353", "bodyText": "one line? for (int nthCount = 0; nthCount < records.size(); nthCount++) {", "author": "GCHQDev404", "createdAt": "2020-04-02T21:34:14Z", "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());\n+\n+        final List<T> splits;\n+        if (records.size() < 2 || records.size() <= numSplits) {\n+            splits = records;\n+        } else {\n+            final LinkedHashSet<T> splitsSet = Integer.MAX_VALUE != numSplits ? new LinkedHashSet<>(numSplits) : new LinkedHashSet<>();\n+            final double outputEveryNthRecord = ((double) records.size()) / (numSplits + 1);\n+            int nthCount = 0;\n+            for (final T record : records) {\n+                nthCount++;", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4NTY3OQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402985679", "bodyText": "This is existing code refactored into a new class.  The suggested code is subtly different and would need changing to something like:\n            for (int nthCount = 1 ; nthCount <= records.size() ; nthCount++) {\n                final T record = records.get(nthCount - 1);\nto achieve the same result.\nI think this looks a little more confused, so perhaps leave it as is?", "author": "m29827", "createdAt": "2020-04-03T12:57:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTM1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NTc5Mg==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403345792", "bodyText": "I understand you didn't write the original code.\nfor (int nthCount = 0 ; nthCount < records.size()+1 ; nthCount++) {\n                final T record = records.get(nthCount);\n// 2 lines & record scope dies with for-loop\n\nint nthCount = 0;\n             for (final T record : records) {\n                 nthCount++;\n// 3 lines & record scope remains after loop has finished.\n// (but granted the method returns immediately and scope dies anyway).", "author": "GCHQDev404", "createdAt": "2020-04-03T21:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTM1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\nindex f36cadfa74..15ce7eeab0 100644\n--- a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n+++ b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTc0Nw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402609747", "bodyText": "isNull(operation.getInput())", "author": "GCHQDev404", "createdAt": "2020-04-02T21:35:03Z", "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());\n+\n+        final List<T> splits;\n+        if (records.size() < 2 || records.size() <= numSplits) {\n+            splits = records;\n+        } else {\n+            final LinkedHashSet<T> splitsSet = Integer.MAX_VALUE != numSplits ? new LinkedHashSet<>(numSplits) : new LinkedHashSet<>();\n+            final double outputEveryNthRecord = ((double) records.size()) / (numSplits + 1);\n+            int nthCount = 0;\n+            for (final T record : records) {\n+                nthCount++;\n+                if (nthCount >= (int) (outputEveryNthRecord * (splitsSet.size() + 1))) {\n+                    splitsSet.add(record);\n+                    if (numSplits == splitsSet.size()) {\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            splits = new ArrayList<>(splitsSet);\n+        }\n+\n+        return splits;\n+    }\n+\n+    protected void validate(final SampleToSplitPoints operation, final S store) throws OperationException {\n+        if (null == operation.getInput()) {", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk1NTM0MA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402955340", "bodyText": "Refactored existing code", "author": "m29827", "createdAt": "2020-04-03T12:01:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\nindex f36cadfa74..15ce7eeab0 100644\n--- a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n+++ b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402610439", "bodyText": "How big is input expected to be, pulling the iterator into memory.", "author": "GCHQDev404", "createdAt": "2020-04-02T21:36:42Z", "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5OTA3MA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402799070", "bodyText": "The code in AbstractSampleToSplitPointsHandler was refactored out of AbstractSampleElementsToSplitPointsHandler which already imposed a maximum sample limit before executing this code.\nFor the two new operations SplitStoreFromRDDOfElementsHandler and SplitStoreFromJavaRDDElementsHandler these also impose maximum sample limits before calling the operation.\nIt's possible a user might generate their own large sample, use this operation directly and blow the memory. Is that something we should guard against?", "author": "m29827", "createdAt": "2020-04-03T07:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzNjYwNQ==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403336605", "bodyText": "Not my call. My comment was more of a sense check and highlight for the reviewer.", "author": "GCHQDev404", "createdAt": "2020-04-03T21:08:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwMDM2Mw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r408000363", "bodyText": "@m29827 Yes if it's possible for a user to run this operation through the REST service, then it should be guarded against. However this can be disabled using a disableOperations.json file. There's one of these in the accumulo-rest, core-rest and hbase-rest modules (under rest-api). If you add the new operations to this list, then users will not be able to run them via the REST API.", "author": "d47853", "createdAt": "2020-04-14T09:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc2OTc4MA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r408769780", "bodyText": "@d47853 added the operation to the disabled operation lists as suggested", "author": "m29827", "createdAt": "2020-04-15T11:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\nindex f36cadfa74..15ce7eeab0 100644\n--- a/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n+++ b/core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjUzOA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402612538", "bodyText": "2020", "author": "GCHQDev404", "createdAt": "2020-04-02T21:41:30Z", "path": "core/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandlerTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTgyNw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402889827", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2020 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "author": "d47853", "createdAt": "2020-04-03T09:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjUzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzAzNg==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403133036", "bodyText": "Corrected", "author": "m29827", "createdAt": "2020-04-03T16:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/core/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandlerTest.java b/core/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandlerTest.java\nindex a843832703..414eb2dd24 100644\n--- a/core/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandlerTest.java\n+++ b/core/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandlerTest.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjcyNw==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402612727", "bodyText": "2020", "author": "GCHQDev404", "createdAt": "2020-04-02T21:41:57Z", "path": "library/spark/spark-accumulo-library/src/main/java/uk/gov/gchq/gaffer/sparkaccumulo/operation/handler/AbstractSplitStoreFromRDDOfElementsHandler.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "originalCommit": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4OTg3MA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402889870", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2020 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "author": "d47853", "createdAt": "2020-04-03T09:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzEyMg==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r403133122", "bodyText": "Corrected", "author": "m29827", "createdAt": "2020-04-03T16:36:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "7828677b084e407e6cec371a7e378c7d14ee532c", "chunk": "diff --git a/library/spark/spark-accumulo-library/src/main/java/uk/gov/gchq/gaffer/sparkaccumulo/operation/handler/AbstractSplitStoreFromRDDOfElementsHandler.java b/library/spark/spark-accumulo-library/src/main/java/uk/gov/gchq/gaffer/sparkaccumulo/operation/handler/AbstractSplitStoreFromRDDOfElementsHandler.java\nindex 86d0948e9b..0fff15f9bc 100644\n--- a/library/spark/spark-accumulo-library/src/main/java/uk/gov/gchq/gaffer/sparkaccumulo/operation/handler/AbstractSplitStoreFromRDDOfElementsHandler.java\n+++ b/library/spark/spark-accumulo-library/src/main/java/uk/gov/gchq/gaffer/sparkaccumulo/operation/handler/AbstractSplitStoreFromRDDOfElementsHandler.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2020 Crown Copyright\n+ * Copyright 2020 Crown Copyright\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"oid": "7828677b084e407e6cec371a7e378c7d14ee532c", "url": "https://github.com/gchq/Gaffer/commit/7828677b084e407e6cec371a7e378c7d14ee532c", "message": "gh-2257 Code review comments", "committedDate": "2020-04-03T12:58:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3NDg2Mg==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r407974862", "bodyText": "Just a suggestion really but this operation should probably be called GenerateSplitPointsFromSample so that it's obvious what it does and follows the the verb-oriented standard of the other operations.", "author": "d47853", "createdAt": "2020-04-14T08:56:32Z", "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.operation.impl;\n+\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import org.apache.commons.lang3.exception.CloneFailedException;\n+\n+import uk.gov.gchq.gaffer.operation.Operation;\n+import uk.gov.gchq.gaffer.operation.io.InputOutput;\n+import uk.gov.gchq.gaffer.operation.io.MultiInput;\n+import uk.gov.gchq.gaffer.operation.serialisation.TypeReferenceImpl;\n+import uk.gov.gchq.koryphe.Since;\n+import uk.gov.gchq.koryphe.Summary;\n+import uk.gov.gchq.koryphe.ValidationResult;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * <p>\n+ * The {@code SampleToSplitPoints} operation takes an {@link Iterable} sample\n+ * and generates a {@link List} of split points from that. The sample and\n+ * split points are normally UTF strings but this may differ for different\n+ * Stores.\n+ * </p>\n+ * <p>\n+ * You can manually set the number of splits using the numSplits field. If\n+ * you don't set it then the Gaffer Store should calculate a number of splits\n+ * for you.\n+ * </p>\n+ *\n+ * @param <T> the type of splits\n+ * @see SampleToSplitPoints.Builder\n+ */\n+@JsonPropertyOrder(value = {\"class\", \"input\"}, alphabetic = true)\n+@Since(\"1.12.0\")\n+@Summary(\"Generates split points from the supplied Iterable\")\n+public class SampleToSplitPoints<T> implements", "originalCommit": "7828677b084e407e6cec371a7e378c7d14ee532c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3MDEwNA==", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r408770104", "bodyText": "Good point, I've renamed the classes as suggested", "author": "m29827", "createdAt": "2020-04-15T11:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3NDg2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e2f7e2e19fc2e9e4cca85c0b015a82e66801c790", "chunk": "diff --git a/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java b/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/GenerateSplitPointsFromSample.java\nsimilarity index 79%\nrename from core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java\nrename to core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/GenerateSplitPointsFromSample.java\nindex 41a2e80570..0ccf092374 100644\n--- a/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java\n+++ b/core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/GenerateSplitPointsFromSample.java\n\n@@ -32,7 +32,7 @@ import java.util.Map;\n \n /**\n  * <p>\n- * The {@code SampleToSplitPoints} operation takes an {@link Iterable} sample\n+ * The {@code GenerateSplitPointsFromSample} operation takes an {@link Iterable} sample\n  * and generates a {@link List} of split points from that. The sample and\n  * split points are normally UTF strings but this may differ for different\n  * Stores.\n"}}, {"oid": "db947de814687c99f54c84ea056137dadd10b61c", "url": "https://github.com/gchq/Gaffer/commit/db947de814687c99f54c84ea056137dadd10b61c", "message": "Merge branch 'develop' into gh-2257-set-accumulo-stores-split-points-using-RDD", "committedDate": "2020-04-15T09:05:03Z", "type": "commit"}, {"oid": "e2f7e2e19fc2e9e4cca85c0b015a82e66801c790", "url": "https://github.com/gchq/Gaffer/commit/e2f7e2e19fc2e9e4cca85c0b015a82e66801c790", "message": "gh-2257 Code review comments:\n- Rename SampleToSplitPointsHandler -> GenerateSplitPointsFromSampleHandler.\n- Prevent direct access to GenerateSplitPointsFromSample Operation.", "committedDate": "2020-04-15T09:41:40Z", "type": "commit"}]}