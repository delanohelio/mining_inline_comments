{"pr_number": 2301, "pr_title": "gh-2295 Harmonise resource access controls for Named Operations Named Views and Federated Store Graphs.", "pr_createdAt": "2020-08-06T16:45:26Z", "pr_url": "https://github.com/gchq/Gaffer/pull/2301", "timeline": [{"oid": "c99bc7dd9ba537558ac8e2f8efb65199081b7384", "url": "https://github.com/gchq/Gaffer/commit/c99bc7dd9ba537558ac8e2f8efb65199081b7384", "message": "gh-2295 Harmonise resource access controls for Named Operations Named Views and Federated Store Graphs.", "committedDate": "2020-08-06T16:44:16Z", "type": "commit"}, {"oid": "7792ba5fa9c1bf305997b3cd3e934575d312ab1c", "url": "https://github.com/gchq/Gaffer/commit/7792ba5fa9c1bf305997b3cd3e934575d312ab1c", "message": "Merge branch 'develop' into gh-2295-harmonise-resource-access-controls\n\nConflicts:\n\tcore/operation/src/test/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperationTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/AddNamedOperationHandlerTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/AddNamedViewHandlerTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/GetAllNamedViewsHandlerTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/cache/NamedOperationCacheTest.java\n\tpom.xml\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccessAuthTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorageTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/AddGraphTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/AddGraphWithHooksTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/FederatedOperationChainValidatorTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedAddGraphHandlerTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedAddGraphWithHooksHandlerTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedRemoveGraphHandlerTest.java", "committedDate": "2020-08-07T12:19:28Z", "type": "commit"}, {"oid": "7792ba5fa9c1bf305997b3cd3e934575d312ab1c", "url": "https://github.com/gchq/Gaffer/commit/7792ba5fa9c1bf305997b3cd3e934575d312ab1c", "message": "Merge branch 'develop' into gh-2295-harmonise-resource-access-controls\n\nConflicts:\n\tcore/operation/src/test/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperationTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/AddNamedOperationHandlerTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/AddNamedViewHandlerTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/GetAllNamedViewsHandlerTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/cache/NamedOperationCacheTest.java\n\tpom.xml\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccessAuthTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorageTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/AddGraphTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/AddGraphWithHooksTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/FederatedOperationChainValidatorTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedAddGraphHandlerTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedAddGraphWithHooksHandlerTest.java\n\tstore-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedRemoveGraphHandlerTest.java", "committedDate": "2020-08-07T12:19:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY2MDM3Mw==", "url": "https://github.com/gchq/Gaffer/pull/2301#discussion_r475660373", "bodyText": "Instead of making this a BiPredicate, could we make it a Predicate which would allow use to make use of the existing Koryphe Functions and Predicates?\nThe second adminUser argument could be a class field of the predicate as it's unlikely to change.", "author": "d47853", "createdAt": "2020-08-24T14:38:21Z", "path": "core/access/src/main/java/uk/gov/gchq/gaffer/access/predicate/AccessPredicate.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.access.predicate;\n+\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+\n+import uk.gov.gchq.gaffer.user.User;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.function.BiPredicate;\n+\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, property = \"class\")\n+public abstract class AccessPredicate implements BiPredicate<User, String>, Serializable {", "originalCommit": "7792ba5fa9c1bf305997b3cd3e934575d312ab1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b3a81b5a1d504ca03a08944475762e2ce5852e6", "chunk": "diff --git a/core/access/src/main/java/uk/gov/gchq/gaffer/access/predicate/AccessPredicate.java b/core/access/src/main/java/uk/gov/gchq/gaffer/access/predicate/AccessPredicate.java\nindex 3e266e1106..39a5c9c85e 100644\n--- a/core/access/src/main/java/uk/gov/gchq/gaffer/access/predicate/AccessPredicate.java\n+++ b/core/access/src/main/java/uk/gov/gchq/gaffer/access/predicate/AccessPredicate.java\n\n@@ -16,15 +16,95 @@\n \n package uk.gov.gchq.gaffer.access.predicate;\n \n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n \n+import uk.gov.gchq.gaffer.access.predicate.user.DefaultUserPredicate;\n import uk.gov.gchq.gaffer.user.User;\n \n import java.io.Serializable;\n import java.util.List;\n+import java.util.Objects;\n import java.util.function.BiPredicate;\n+import java.util.function.Predicate;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.sort;\n+import static java.util.Collections.unmodifiableList;\n+import static java.util.Objects.isNull;\n+import static org.apache.commons.lang3.StringUtils.isNotEmpty;\n \n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, property = \"class\")\n-public abstract class AccessPredicate implements BiPredicate<User, String>, Serializable {\n-    public abstract List<String> getAuths();\n+public class AccessPredicate implements BiPredicate<User, String>, Serializable {\n+\n+    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, property = \"class\")\n+    private final Predicate<User> userPredicate;\n+    private final List<String> auths;\n+\n+    public AccessPredicate(\n+            final User creatingUser,\n+            final List<String> auths) {\n+        this(creatingUser.getUserId(), auths);\n+    }\n+\n+    public AccessPredicate(\n+            final String creatingUserId,\n+            final List<String> auths) {\n+        this(new DefaultUserPredicate(creatingUserId, auths), auths);\n+    }\n+\n+    public AccessPredicate(final Predicate<User> userPredicate) {\n+        this(userPredicate, emptyList());\n+    }\n+\n+    @JsonCreator\n+    public AccessPredicate(\n+            @JsonProperty(\"userPredicate\") final Predicate<User> userPredicate,\n+            @JsonProperty(\"auths\") final List<String> auths) {\n+        this.userPredicate = userPredicate;\n+        if (auths != null) {\n+            sort(auths);\n+            this.auths = unmodifiableList(auths);\n+        } else {\n+            this.auths = emptyList();\n+        }\n+    }\n+\n+    public List<String> getAuths() {\n+        return auths;\n+    }\n+\n+    @Override\n+    public boolean test(final User user, final String adminAuth) {\n+        return isAdministrator(user, adminAuth) || this.userPredicate.test(user);\n+    }\n+\n+    protected boolean isAdministrator(final User user, final String adminAuth) {\n+        return (!isNull(user)\n+                && isNotEmpty(adminAuth)\n+                && user.getOpAuths().contains(adminAuth));\n+    }\n+\n+    public Predicate<User> getUserPredicate() {\n+        return userPredicate;\n+    }\n+\n+    @Override\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        final AccessPredicate predicate = (AccessPredicate) o;\n+        return Objects.equals(userPredicate, predicate.userPredicate) &&\n+                Objects.equals(auths, predicate.auths);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(userPredicate, auths);\n+    }\n }\n"}}, {"oid": "9c53e40b9052e8342bfcf5090b9f98464326a082", "url": "https://github.com/gchq/Gaffer/commit/9c53e40b9052e8342bfcf5090b9f98464326a082", "message": "Merge branch 'develop' into gh-2295-harmonise-resource-access-controls\n\nConflicts:\n\tcore/operation/src/test/java/uk/gov/gchq/gaffer/named/view/AddNamedViewTest.java\n\tcore/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/named/GetAllNamedViewsHandlerTest.java", "committedDate": "2020-08-27T08:32:51Z", "type": "commit"}, {"oid": "0b3a81b5a1d504ca03a08944475762e2ce5852e6", "url": "https://github.com/gchq/Gaffer/commit/0b3a81b5a1d504ca03a08944475762e2ce5852e6", "message": "gh-2295 Code review comments: Configurable resource access using custom implementations of Predicate<User>.", "committedDate": "2020-09-02T13:41:44Z", "type": "commit"}, {"oid": "3c435d54630a4d4c7882199f18a0416378cc8365", "url": "https://github.com/gchq/Gaffer/commit/3c435d54630a4d4c7882199f18a0416378cc8365", "message": "gh-2295 Removing attempt to associate a list of auths to an AccessControlledResource.", "committedDate": "2020-09-02T16:39:34Z", "type": "commit"}, {"oid": "ebe5acea2d14b5b7ca7cc78fcbdcb8288ce70326", "url": "https://github.com/gchq/Gaffer/commit/ebe5acea2d14b5b7ca7cc78fcbdcb8288ce70326", "message": "gh-2295 Adding missing license header.", "committedDate": "2020-09-03T15:47:49Z", "type": "commit"}]}