{"pr_number": 1673, "pr_title": "[SCB-1832] Edge will lose public request headers", "pr_createdAt": "2020-03-27T11:45:11Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1673", "timeline": [{"oid": "6d40aa9edaaf0736d65cd7fffc18af6e9a94fb52", "url": "https://github.com/apache/servicecomb-java-chassis/commit/6d40aa9edaaf0736d65cd7fffc18af6e9a94fb52", "message": "[SCB-1832] Edge will lose public request headers", "committedDate": "2020-03-27T11:43:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzMzOQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399233339", "bodyText": "It seems no necessary to make this part of logic static? We know that the HttpClientFilter implementations are singleton. I guess it's better to avoid static member if possible since the two plans take the same effect.", "author": "yhs0092", "createdAt": "2020-03-27T12:37:05Z", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+\n+  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+\n+  private static boolean ENABLED = false;\n+\n+  private static List<String> PUBLIC_HEADER = new ArrayList<>();\n+\n+  static {\n+    init();\n+    ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n+        .getBackingConfigurationSource()).addConfigurationListener(event -> {\n+      if (event.getPropertyName().startsWith(KEY_HEADERS) || event.getPropertyName().startsWith(KEY_ENABLED)) {\n+        LOGGER.info(\"Public header config have been changed. Event=\" + event.getType());\n+        init();\n+      }\n+    });\n+  }", "originalCommit": "6d40aa9edaaf0736d65cd7fffc18af6e9a94fb52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNzI1MQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399237251", "bodyText": "ok", "author": "heyile", "createdAt": "2020-03-27T12:44:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "2cf138e91a361adf411eead78bf3456da73584e7", "chunk": "diff --git a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\nindex 22d4f06ad..229d12d57 100644\n--- a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\n+++ b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\n\n@@ -39,27 +39,27 @@ public class DefaultEdgeClientFilter implements HttpClientFilter {\n \n   private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n \n-  private static boolean ENABLED = false;\n+  private List<String> publicHeaders = new ArrayList<>();\n \n-  private static List<String> PUBLIC_HEADER = new ArrayList<>();\n+  private boolean enabled = false;\n \n-  static {\n+  public DefaultEdgeClientFilter() {\n     init();\n     ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n         .getBackingConfigurationSource()).addConfigurationListener(event -> {\n       if (event.getPropertyName().startsWith(KEY_HEADERS) || event.getPropertyName().startsWith(KEY_ENABLED)) {\n-        LOGGER.info(\"Public header config have been changed. Event=\" + event.getType());\n+        LOGGER.info(\"Public headers config have been changed. Event=\" + event.getType());\n         init();\n       }\n     });\n   }\n \n-  private static void init() {\n-    ENABLED = DynamicPropertyFactory.getInstance().getBooleanProperty(KEY_ENABLED, false).get();\n+  private void init() {\n+    enabled = DynamicPropertyFactory.getInstance().getBooleanProperty(KEY_ENABLED, false).get();\n     String publicHeaderStr = DynamicPropertyFactory.getInstance().getStringProperty(KEY_HEADERS, \"\").get();\n     String[] split = publicHeaderStr.split(\",\");\n     if (split.length > 0) {\n-      PUBLIC_HEADER = Arrays.asList(split);\n+      publicHeaders = Arrays.asList(split);\n     }\n   }\n \n"}}, {"oid": "2cf138e91a361adf411eead78bf3456da73584e7", "url": "https://github.com/apache/servicecomb-java-chassis/commit/2cf138e91a361adf411eead78bf3456da73584e7", "message": "[SCB-1832] Edge will lose public request headers:fixed as reviewed", "committedDate": "2020-03-27T12:50:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzQ0Ng==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399597446", "bodyText": "Naming : maybe EdgeAddHeaderClientFilter is better", "author": "liubao68", "createdAt": "2020-03-28T00:54:34Z", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {", "originalCommit": "2cf138e91a361adf411eead78bf3456da73584e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwMDYwMA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399600600", "bodyText": "done", "author": "heyile", "createdAt": "2020-03-28T01:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "chunk": "diff --git a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\nsimilarity index 88%\nrename from edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\nrename to edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\nindex 229d12d57..d461d3c47 100644\n--- a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\n+++ b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\n\n@@ -32,18 +32,18 @@ import org.slf4j.LoggerFactory;\n import com.netflix.config.ConcurrentCompositeConfiguration;\n import com.netflix.config.DynamicPropertyFactory;\n \n-public class DefaultEdgeClientFilter implements HttpClientFilter {\n-  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+public class EdgeAddHeaderClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(EdgeAddHeaderClientFilter.class);\n \n-  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+  private static final String KEY_ENABLED = \"servicecomb.edge.filter.addHeader.enabled\";\n \n-  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+  private static final String KEY_HEADERS = \"servicecomb.edge.filter.addHeader.allowedHeaders\";\n \n   private List<String> publicHeaders = new ArrayList<>();\n \n   private boolean enabled = false;\n \n-  public DefaultEdgeClientFilter() {\n+  public EdgeAddHeaderClientFilter() {\n     init();\n     ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n         .getBackingConfigurationSource()).addConfigurationListener(event -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzcyNw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399597727", "bodyText": "Sugguestion:\nservicecomb.edge.filter.addHeader.enabled\nservicecomb.edge.filter.addHeader.allowedHeaders", "author": "liubao68", "createdAt": "2020-03-28T00:56:05Z", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";", "originalCommit": "2cf138e91a361adf411eead78bf3456da73584e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzkyOA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399597928", "bodyText": "ok", "author": "heyile", "createdAt": "2020-03-28T00:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NzcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "chunk": "diff --git a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\nsimilarity index 88%\nrename from edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\nrename to edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\nindex 229d12d57..d461d3c47 100644\n--- a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\n+++ b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\n\n@@ -32,18 +32,18 @@ import org.slf4j.LoggerFactory;\n import com.netflix.config.ConcurrentCompositeConfiguration;\n import com.netflix.config.DynamicPropertyFactory;\n \n-public class DefaultEdgeClientFilter implements HttpClientFilter {\n-  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+public class EdgeAddHeaderClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(EdgeAddHeaderClientFilter.class);\n \n-  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+  private static final String KEY_ENABLED = \"servicecomb.edge.filter.addHeader.enabled\";\n \n-  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+  private static final String KEY_HEADERS = \"servicecomb.edge.filter.addHeader.allowedHeaders\";\n \n   private List<String> publicHeaders = new ArrayList<>();\n \n   private boolean enabled = false;\n \n-  public DefaultEdgeClientFilter() {\n+  public EdgeAddHeaderClientFilter() {\n     init();\n     ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n         .getBackingConfigurationSource()).addConfigurationListener(event -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5ODA1MA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399598050", "bodyText": "create a subtask to add documents for this feature.", "author": "liubao68", "createdAt": "2020-03-28T00:58:33Z", "path": "edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.edge.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.servicecomb.common.rest.filter.HttpClientFilter;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletRequestEx;\n+import org.apache.servicecomb.foundation.vertx.http.HttpServletResponseEx;\n+import org.apache.servicecomb.swagger.invocation.Response;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.DynamicPropertyFactory;\n+\n+public class DefaultEdgeClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+\n+  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+\n+  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+", "originalCommit": "2cf138e91a361adf411eead78bf3456da73584e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYwMDUyMA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1673#discussion_r399600520", "bodyText": "done\napache/servicecomb-docs#156", "author": "heyile", "createdAt": "2020-03-28T01:18:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5ODA1MA=="}], "type": "inlineReview", "revised_code": {"commit": "19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "chunk": "diff --git a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\nsimilarity index 88%\nrename from edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\nrename to edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\nindex 229d12d57..d461d3c47 100644\n--- a/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/DefaultEdgeClientFilter.java\n+++ b/edge/edge-core/src/main/java/org/apache/servicecomb/edge/core/EdgeAddHeaderClientFilter.java\n\n@@ -32,18 +32,18 @@ import org.slf4j.LoggerFactory;\n import com.netflix.config.ConcurrentCompositeConfiguration;\n import com.netflix.config.DynamicPropertyFactory;\n \n-public class DefaultEdgeClientFilter implements HttpClientFilter {\n-  private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEdgeClientFilter.class);\n+public class EdgeAddHeaderClientFilter implements HttpClientFilter {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(EdgeAddHeaderClientFilter.class);\n \n-  private static final String KEY_ENABLED = \"servicecomb.http.dispatcher.edge.public.enabled\";\n+  private static final String KEY_ENABLED = \"servicecomb.edge.filter.addHeader.enabled\";\n \n-  private static final String KEY_HEADERS = \"servicecomb.http.dispatcher.edge.public.headers\";\n+  private static final String KEY_HEADERS = \"servicecomb.edge.filter.addHeader.allowedHeaders\";\n \n   private List<String> publicHeaders = new ArrayList<>();\n \n   private boolean enabled = false;\n \n-  public DefaultEdgeClientFilter() {\n+  public EdgeAddHeaderClientFilter() {\n     init();\n     ((ConcurrentCompositeConfiguration) DynamicPropertyFactory\n         .getBackingConfigurationSource()).addConfigurationListener(event -> {\n"}}, {"oid": "19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "url": "https://github.com/apache/servicecomb-java-chassis/commit/19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "message": "[SCB-1832] Edge will lose public request headers:fixed as reviewed", "committedDate": "2020-03-28T01:10:38Z", "type": "commit"}, {"oid": "19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "url": "https://github.com/apache/servicecomb-java-chassis/commit/19d2d05ebc1c6f4eb63c51dd2b470f0c57b4e0f3", "message": "[SCB-1832] Edge will lose public request headers:fixed as reviewed", "committedDate": "2020-03-28T01:10:38Z", "type": "forcePushed"}]}