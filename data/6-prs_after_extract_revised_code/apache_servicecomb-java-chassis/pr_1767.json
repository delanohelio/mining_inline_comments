{"pr_number": 1767, "pr_title": "[SCB-1924] invocation context provide the vertx context that start the invocation", "pr_createdAt": "2020-05-20T07:29:38Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1767", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r427901534", "bodyText": "How about T transportContext ? Because vert.x or web container have different context.", "author": "liubao68", "createdAt": "2020-05-20T10:22:10Z", "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java", "diffHunk": "@@ -36,6 +38,11 @@\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n+  /**\n+   * the vertx context that start the invocation\n+   */\n+  protected Context vertxContext;", "originalCommit": "a1cf96b193dcfc7c5cd3b342c67930e0882dd40a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyMTE5NA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r427921194", "bodyText": "seems useless to record context for web container?\nand i don't know what is the context for web container, \ud83d\ude02", "author": "wujimin", "createdAt": "2020-05-20T10:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MTk0Mg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r428391942", "bodyText": "How about this ?\nInterface TransportContext\n\ninterface TransportProviderContext extends TransportContext\ninterface TransportConsumerContext extends TransportContext\n\nclass VertxTransportProviderContext implments TransportContext \n    {Context vertxContext; RoutingContext routingContext; ...}\nclass ServletTransportProviderContext implements TransportContext\n    {HttpServletRequest rquest; HttpServletResponse response;}", "author": "liubao68", "createdAt": "2020-05-21T01:09:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDEyNg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r428394126", "bodyText": "request already can be got from invocation.\nand not want publish servlet response......", "author": "wujimin", "createdAt": "2020-05-21T01:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5NDM5Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r428994393", "bodyText": "maybe useful for new Filter mechanism, let me try it.", "author": "wujimin", "createdAt": "2020-05-22T01:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxNjYwMA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r429016600", "bodyText": "OK. New filter mechanism should consider a 'global error handler'(errors thrown everywhere) .  This is a frequently asked questions and java chassis not handle it well now.", "author": "liubao68", "createdAt": "2020-05-22T02:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyODI1NQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r429028255", "bodyText": "yes, already design it.", "author": "wujimin", "createdAt": "2020-05-22T03:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzNTk1Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1767#discussion_r429035953", "bodyText": "done", "author": "wujimin", "createdAt": "2020-05-22T04:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "3f345c9f132b6b4467aa19acc332fdd6bd8c0586", "chunk": "diff --git a/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java b/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java\nindex 19238b80f..bdfc85fdb 100644\n--- a/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java\n+++ b/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/context/InvocationContext.java\n\n@@ -38,10 +36,7 @@ public class InvocationContext {\n \n   protected Map<String, Object> localContext = new HashMap<>();\n \n-  /**\n-   * the vertx context that start the invocation\n-   */\n-  protected Context vertxContext;\n+  protected TransportContext transportContext;\n \n   public InvocationContext() {\n     httpStatus = Status.OK;\n"}}, {"oid": "3f345c9f132b6b4467aa19acc332fdd6bd8c0586", "url": "https://github.com/apache/servicecomb-java-chassis/commit/3f345c9f132b6b4467aa19acc332fdd6bd8c0586", "message": "[SCB-1924] invocation context provide transport context", "committedDate": "2020-05-22T03:46:31Z", "type": "commit"}, {"oid": "3f345c9f132b6b4467aa19acc332fdd6bd8c0586", "url": "https://github.com/apache/servicecomb-java-chassis/commit/3f345c9f132b6b4467aa19acc332fdd6bd8c0586", "message": "[SCB-1924] invocation context provide transport context", "committedDate": "2020-05-22T03:46:31Z", "type": "forcePushed"}]}