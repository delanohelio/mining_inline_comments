{"pr_number": 1894, "pr_title": "[SCB-2043] flow control support custom / bug fix", "pr_createdAt": "2020-07-27T08:19:59Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1894", "timeline": [{"oid": "55aa16f90829c52e8ec0b0cea557d448656d7510", "url": "https://github.com/apache/servicecomb-java-chassis/commit/55aa16f90829c52e8ec0b0cea557d448656d7510", "message": "[SCB-2043] flow control bug fix\n\n(cherry picked from commit eed0e46cf448b0caab1b7211f9780bbd82f55a6b)", "committedDate": "2020-07-27T08:19:27Z", "type": "commit"}, {"oid": "4856844705321c95180e9f8f2bff361a82ee7d85", "url": "https://github.com/apache/servicecomb-java-chassis/commit/4856844705321c95180e9f8f2bff361a82ee7d85", "message": "[SCB-2043] flow control support custom", "committedDate": "2020-07-27T11:34:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461262652", "bodyText": "Maybe this code can be better refactored.\n\nall strategies are SPI\nany implementation have a name\nchoose the target strategy by configured name and default to 'FixedWindow'\n\nBy doing this, the strategy enum and case statements can be removed.", "author": "liubao68", "createdAt": "2020-07-28T01:25:22Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -211,6 +212,8 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n     AbstractQpsStrategy strategy;\n+    AbstractQpsStrategy customStrategy = SPIServiceUtils", "originalCommit": "4856844705321c95180e9f8f2bff361a82ee7d85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Mzc3NA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461293774", "bodyText": "new TokenBucketStrategy(globalConfigKey, limit, bucket);\nnew FixedWindowStrategy(globalConfigKey, limit);\nhas different parameters.", "author": "GuoYL123", "createdAt": "2020-07-28T03:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMzIwMw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461303203", "bodyText": "Hidden parameters in implementation and I think will work. You can think of users will custom strategies like this, how will they do it?", "author": "liubao68", "createdAt": "2020-07-28T03:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0NTQ2Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461445467", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-07-28T09:26:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6af810e2dede1a37e654b32142e0a3f9a0487677", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 606b642e2..b8a366867 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -211,26 +209,17 @@ public class QpsControllerManager {\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    AbstractQpsStrategy customStrategy = SPIServiceUtils\n-        .getTargetService(AbstractQpsStrategy.class);\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case Custom:\n-        strategy = customStrategy;\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy();\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {\n+        strategy = abstractQpsStrategy;\n+      }\n     }\n+    strategy.setKey(globalConfigKey);\n+    strategy.setQpsLimit(limit);\n+    strategy.setBucketLimit(bucket);\n     return strategy;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjE3MQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461556171", "bodyText": "strategyKey can have default value 'FixedWindow', wrong used defined value can throw exception. So here do not need new a default strategy.", "author": "liubao68", "createdAt": "2020-07-28T12:54:31Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);", "originalCommit": "e3d2ec6eb473e376325dd08879c03f173d2668d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5NTc5NQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461995795", "bodyText": "throw a Exception", "author": "GuoYL123", "createdAt": "2020-07-29T02:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjE3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6af810e2dede1a37e654b32142e0a3f9a0487677", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 984a8c20d..b8a366867 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -209,7 +209,7 @@ public class QpsControllerManager {\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy();\n     List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n         .getOrLoadSortedService(AbstractQpsStrategy.class);\n     for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjQxOQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461556419", "bodyText": "Add a break is better.", "author": "liubao68", "createdAt": "2020-07-28T12:54:54Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {\n+        strategy = abstractQpsStrategy;", "originalCommit": "e3d2ec6eb473e376325dd08879c03f173d2668d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5MjU4NA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462092584", "bodyText": "done.", "author": "GuoYL123", "createdAt": "2020-07-29T07:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "6af810e2dede1a37e654b32142e0a3f9a0487677", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 984a8c20d..b8a366867 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -209,7 +209,7 @@ public class QpsControllerManager {\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy();\n     List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n         .getOrLoadSortedService(AbstractQpsStrategy.class);\n     for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NzIwNg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461557206", "bodyText": "strategyKey  better to rename to 'strategy', it is not a key , but a value.", "author": "liubao68", "createdAt": "2020-07-28T12:56:12Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {", "originalCommit": "e3d2ec6eb473e376325dd08879c03f173d2668d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5NTY4OQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461995689", "bodyText": "already has local value 'strategy'", "author": "GuoYL123", "createdAt": "2020-07-29T02:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NzIwNg=="}], "type": "inlineReview", "revised_code": {"commit": "6af810e2dede1a37e654b32142e0a3f9a0487677", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 984a8c20d..b8a366867 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -209,7 +209,7 @@ public class QpsControllerManager {\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy();\n     List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n         .getOrLoadSortedService(AbstractQpsStrategy.class);\n     for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n"}}, {"oid": "6af810e2dede1a37e654b32142e0a3f9a0487677", "url": "https://github.com/apache/servicecomb-java-chassis/commit/6af810e2dede1a37e654b32142e0a3f9a0487677", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-29T02:00:23Z", "type": "forcePushed"}, {"oid": "47e5bbb6889dff04fea6e139f44d3ae32c44e5e0", "url": "https://github.com/apache/servicecomb-java-chassis/commit/47e5bbb6889dff04fea6e139f44d3ae32c44e5e0", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-29T02:07:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAwODczNw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462008737", "bodyText": "strategyName do not have a default value.", "author": "liubao68", "createdAt": "2020-07-29T02:59:00Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -209,22 +208,21 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   }\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n-      String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+      String strategyName) {", "originalCommit": "47e5bbb6889dff04fea6e139f44d3ae32c44e5e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5MjE5MQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462092191", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-07-29T07:23:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAwODczNw=="}], "type": "inlineReview", "revised_code": {"commit": "4cf527ed69010abcbc1985851617873ed5eafed5", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 53ba7093b..25a1ddc7c 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -209,12 +210,15 @@ public class QpsControllerManager {\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyName) {\n+    if (StringUtils.isEmpty(strategyName)) {\n+      strategyName = \"FixedWindow\";\n+    }\n     AbstractQpsStrategy strategy = null;\n     List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n         .getOrLoadSortedService(AbstractQpsStrategy.class);\n     for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n       if (abstractQpsStrategy.name().equals(strategyName)) {\n-        strategy = abstractQpsStrategy;\n+        strategy = abstractQpsStrategy.clone();\n       }\n     }\n     if (strategy == null) {\n"}}, {"oid": "4cf527ed69010abcbc1985851617873ed5eafed5", "url": "https://github.com/apache/servicecomb-java-chassis/commit/4cf527ed69010abcbc1985851617873ed5eafed5", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-29T07:20:25Z", "type": "forcePushed"}, {"oid": "dba245c150823271c45351381ed4018c02a0b9d2", "url": "https://github.com/apache/servicecomb-java-chassis/commit/dba245c150823271c45351381ed4018c02a0b9d2", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-29T07:24:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMTkxOA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462111918", "bodyText": "use commons lang3 api", "author": "liubao68", "createdAt": "2020-07-29T08:00:01Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -17,20 +17,20 @@\n \n package org.apache.servicecomb.qps;\n \n+import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n \n import org.apache.servicecomb.core.Invocation;\n import org.apache.servicecomb.foundation.common.concurrent.ConcurrentHashMapEx;\n+import org.apache.servicecomb.foundation.common.exceptions.ServiceCombException;\n+import org.apache.servicecomb.foundation.common.utils.SPIServiceUtils;\n import org.apache.servicecomb.qps.strategy.AbstractQpsStrategy;\n-import org.apache.servicecomb.qps.strategy.FixedWindowStrategy;\n-import org.apache.servicecomb.qps.strategy.LeakyBucketStrategy;\n-import org.apache.servicecomb.qps.strategy.StrategyType;\n-import org.apache.servicecomb.qps.strategy.TokenBucketStrategy;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.netflix.config.DynamicProperty;\n+import org.springframework.util.StringUtils;", "originalCommit": "dba245c150823271c45351381ed4018c02a0b9d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0OTkxOA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462149918", "bodyText": "done.", "author": "GuoYL123", "createdAt": "2020-07-29T09:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMTkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "dcf104c8754f350d6918db5de0c397b43c5a58e3", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 52594e42e..a47e65436 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -26,6 +26,7 @@ import org.apache.servicecomb.foundation.common.concurrent.ConcurrentHashMapEx;\n import org.apache.servicecomb.foundation.common.exceptions.ServiceCombException;\n import org.apache.servicecomb.foundation.common.utils.SPIServiceUtils;\n import org.apache.servicecomb.qps.strategy.AbstractQpsStrategy;\n+import org.apache.servicecomb.qps.strategy.IStrategyFactory;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n"}}, {"oid": "dcf104c8754f350d6918db5de0c397b43c5a58e3", "url": "https://github.com/apache/servicecomb-java-chassis/commit/dcf104c8754f350d6918db5de0c397b43c5a58e3", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-29T09:00:50Z", "type": "forcePushed"}, {"oid": "ce3c5f58c982bdd659da5e85b9baac87a51dee0e", "url": "https://github.com/apache/servicecomb-java-chassis/commit/ce3c5f58c982bdd659da5e85b9baac87a51dee0e", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-29T09:02:39Z", "type": "forcePushed"}, {"oid": "f62dee43e5517b3dcf80848aa50c44e6d11a7132", "url": "https://github.com/apache/servicecomb-java-chassis/commit/f62dee43e5517b3dcf80848aa50c44e6d11a7132", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-30T01:25:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzQ0Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462717447", "bodyText": "exeception message is better to include strategyName", "author": "liubao68", "createdAt": "2020-07-30T03:47:18Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -209,22 +210,25 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   }\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n-      String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n+      String strategyName) {\n+    if (StringUtils.isEmpty(strategyName)) {\n+      strategyName = \"FixedWindow\";\n+    }\n+    AbstractQpsStrategy strategy = null;\n+    List<IStrategyFactory> strategyFactories = SPIServiceUtils\n+        .getOrLoadSortedService(IStrategyFactory.class);\n+    for (IStrategyFactory strategyFactory : strategyFactories) {\n+      strategy = strategyFactory.getStrategy(strategyName);\n+      if (strategy != null) {\n         break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+      }\n+    }\n+    if (strategy == null) {\n+      throw new ServiceCombException(\"the qps strategy name is not exist , please check.\");", "originalCommit": "f62dee43e5517b3dcf80848aa50c44e6d11a7132", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMTM2OA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462821368", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-07-30T08:03:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "79e7d056dd5e373a61894d83503c8cff784eeded", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\nindex 2c0e9cf73..b52c91e72 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java\n\n@@ -218,13 +218,14 @@ public class QpsControllerManager {\n     List<IStrategyFactory> strategyFactories = SPIServiceUtils\n         .getOrLoadSortedService(IStrategyFactory.class);\n     for (IStrategyFactory strategyFactory : strategyFactories) {\n-      strategy = strategyFactory.getStrategy(strategyName);\n+      strategy = strategyFactory.createStrategy(strategyName);\n       if (strategy != null) {\n         break;\n       }\n     }\n     if (strategy == null) {\n-      throw new ServiceCombException(\"the qps strategy name is not exist , please check.\");\n+      throw new ServiceCombException(\n+          \"the qps strategy name \" + strategyName + \"is not exist , please check.\");\n     }\n     strategy.setKey(globalConfigKey);\n     strategy.setQpsLimit(limit);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzYwOA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462717608", "bodyText": "It's better to use createStrategy", "author": "liubao68", "createdAt": "2020-07-30T03:48:11Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java", "diffHunk": "@@ -14,27 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.servicecomb.qps.strategy;\n \n-import org.apache.commons.lang3.StringUtils;\n-\n-public enum StrategyType {\n-  TokenBucket,\n-  LeakyBucket,\n-  FixedWindow,\n-  SlidingWindow;\n-\n-\n-  public static StrategyType parseStrategyType(String type) {\n-    if (StringUtils.isEmpty(type)) {\n-      return StrategyType.FixedWindow;\n-    }\n+public class DefaultStrategyFactory implements IStrategyFactory {\n \n-    try {\n-      return StrategyType.valueOf(type.toUpperCase());\n-    } catch (IllegalArgumentException e) {\n-      return StrategyType.FixedWindow;\n+  public AbstractQpsStrategy getStrategy(String strategyName) {", "originalCommit": "f62dee43e5517b3dcf80848aa50c44e6d11a7132", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMTQyOA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462821428", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-07-30T08:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzYwOA=="}], "type": "inlineReview", "revised_code": {"commit": "79e7d056dd5e373a61894d83503c8cff784eeded", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java\nindex 32e07008a..79037f791 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java\n\n@@ -18,7 +18,7 @@ package org.apache.servicecomb.qps.strategy;\n \n public class DefaultStrategyFactory implements IStrategyFactory {\n \n-  public AbstractQpsStrategy getStrategy(String strategyName) {\n+  public AbstractQpsStrategy createStrategy(String strategyName) {\n     switch (strategyName) {\n       case \"TokenBucket\":\n         return new TokenBucketStrategy();\n"}}, {"oid": "79e7d056dd5e373a61894d83503c8cff784eeded", "url": "https://github.com/apache/servicecomb-java-chassis/commit/79e7d056dd5e373a61894d83503c8cff784eeded", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-30T08:03:36Z", "type": "forcePushed"}, {"oid": "2cfefd9cc87cbbc4be862b7865432b752c8df411", "url": "https://github.com/apache/servicecomb-java-chassis/commit/2cfefd9cc87cbbc4be862b7865432b752c8df411", "message": "[SCB-2043] refactory as comment", "committedDate": "2020-07-30T08:29:09Z", "type": "commit"}, {"oid": "f6fadc3efbc75a949d87303bb71ba71e26655df4", "url": "https://github.com/apache/servicecomb-java-chassis/commit/f6fadc3efbc75a949d87303bb71ba71e26655df4", "message": "[SCB-2043] add IT", "committedDate": "2020-07-30T08:29:25Z", "type": "forcePushed"}, {"oid": "09601c60a50a5f0b16c38eaec611026512722c0e", "url": "https://github.com/apache/servicecomb-java-chassis/commit/09601c60a50a5f0b16c38eaec611026512722c0e", "message": "[SCB-2043] add IT", "committedDate": "2020-07-30T09:22:10Z", "type": "forcePushed"}, {"oid": "3d9373dd00f21c318f77fb72d7fd77641ed2ed9b", "url": "https://github.com/apache/servicecomb-java-chassis/commit/3d9373dd00f21c318f77fb72d7fd77641ed2ed9b", "message": "[SCB-2043] add IT", "committedDate": "2020-07-30T09:41:29Z", "type": "commit"}, {"oid": "3d9373dd00f21c318f77fb72d7fd77641ed2ed9b", "url": "https://github.com/apache/servicecomb-java-chassis/commit/3d9373dd00f21c318f77fb72d7fd77641ed2ed9b", "message": "[SCB-2043] add IT", "committedDate": "2020-07-30T09:41:29Z", "type": "forcePushed"}]}