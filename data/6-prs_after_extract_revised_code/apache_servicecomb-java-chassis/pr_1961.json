{"pr_number": 1961, "pr_title": "[SCB-2084] ServiceComb support dtm", "pr_createdAt": "2020-09-16T08:29:37Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1961", "timeline": [{"oid": "e7df4740bc9bf79e341668f475f614ac110b14a1", "url": "https://github.com/apache/servicecomb-java-chassis/commit/e7df4740bc9bf79e341668f475f614ac110b14a1", "message": "[SCB-2084] ServiceComb support dtm", "committedDate": "2020-09-16T08:42:12Z", "type": "commit"}, {"oid": "e7df4740bc9bf79e341668f475f614ac110b14a1", "url": "https://github.com/apache/servicecomb-java-chassis/commit/e7df4740bc9bf79e341668f475f614ac110b14a1", "message": "[SCB-2084] ServiceComb support dtm", "committedDate": "2020-09-16T08:42:12Z", "type": "forcePushed"}, {"oid": "70b92f00094a3549ace49aa8efd3635a47ee0300", "url": "https://github.com/apache/servicecomb-java-chassis/commit/70b92f00094a3549ace49aa8efd3635a47ee0300", "message": "[SCB-2084] ServiceComb support dtm:add pom", "committedDate": "2020-09-16T09:03:24Z", "type": "commit"}, {"oid": "70b92f00094a3549ace49aa8efd3635a47ee0300", "url": "https://github.com/apache/servicecomb-java-chassis/commit/70b92f00094a3549ace49aa8efd3635a47ee0300", "message": "[SCB-2084] ServiceComb support dtm:add pom", "committedDate": "2020-09-16T09:03:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1MTA2NQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489851065", "bodyText": "It's better to add a log. If this happens , maybe some bug, do not hide it.", "author": "liubao68", "createdAt": "2020-09-17T01:21:54Z", "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    try {\n+      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n+      dtmContextExMethod = clazz.getMethod(\"getContextData\");\n+    } catch (Throwable e) {\n+      // ignore just warn\n+      LOG.warn(\"Failed to init method com.huawei.middleware.dtm.client.context.DTMContext#getContextData\", e);\n+    }\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception {\n+    try {\n+      if (dtmContextExMethod != null) {\n+        Object context = dtmContextExMethod.invoke(null);\n+        if (context instanceof Map) {\n+          invocation.getContext().putAll((Map<? extends String, ? extends String>) context);\n+        }\n+      }\n+    } catch (Throwable e) {\n+      // ignore", "originalCommit": "70b92f00094a3549ace49aa8efd3635a47ee0300", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5NTMzOQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489895339", "bodyText": "done", "author": "heyile", "createdAt": "2020-09-17T02:32:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1MTA2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9845969393f25c3f2ccc6068802fe53b595dd6f0", "chunk": "diff --git a/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java b/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\nindex 3607e3e75..c66d9b603 100644\n--- a/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\n+++ b/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\n\n@@ -34,12 +34,13 @@ public class DtmConsumerHandler implements Handler {\n \n   @Override\n   public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    String className = DtmConfig.INSTANCE.getDtmContextClassName();\n     try {\n-      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n-      dtmContextExMethod = clazz.getMethod(\"getContextData\");\n+      Class<?> clazz = Class.forName(className);\n+      dtmContextExMethod = clazz.getMethod(DtmConfig.DTM_EXPORT_METHOD);\n     } catch (Throwable e) {\n       // ignore just warn\n-      LOG.warn(\"Failed to init method com.huawei.middleware.dtm.client.context.DTMContext#getContextData\", e);\n+      LOG.warn(\"Failed to init method {}#{}\", className, DtmConfig.DTM_EXPORT_METHOD, e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1NDY4Ng==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489854686", "bodyText": "suggestions: class name can be configurable, so that can be easier tested and tollerate to changes.", "author": "liubao68", "createdAt": "2020-09-17T01:27:29Z", "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    try {\n+      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n+      dtmContextExMethod = clazz.getMethod(\"getContextData\");", "originalCommit": "70b92f00094a3549ace49aa8efd3635a47ee0300", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5NTQwNw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489895407", "bodyText": "done", "author": "heyile", "createdAt": "2020-09-17T02:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1NDY4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9845969393f25c3f2ccc6068802fe53b595dd6f0", "chunk": "diff --git a/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java b/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\nindex 3607e3e75..c66d9b603 100644\n--- a/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\n+++ b/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\n\n@@ -34,12 +34,13 @@ public class DtmConsumerHandler implements Handler {\n \n   @Override\n   public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    String className = DtmConfig.INSTANCE.getDtmContextClassName();\n     try {\n-      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n-      dtmContextExMethod = clazz.getMethod(\"getContextData\");\n+      Class<?> clazz = Class.forName(className);\n+      dtmContextExMethod = clazz.getMethod(DtmConfig.DTM_EXPORT_METHOD);\n     } catch (Throwable e) {\n       // ignore just warn\n-      LOG.warn(\"Failed to init method com.huawei.middleware.dtm.client.context.DTMContext#getContextData\", e);\n+      LOG.warn(\"Failed to init method {}#{}\", className, DtmConfig.DTM_EXPORT_METHOD, e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyNjM4Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r490026387", "bodyText": "callback seems useless. Implementation class is compiled and packaged with application, can not be chagned in runtime.", "author": "liubao68", "createdAt": "2020-09-17T07:23:56Z", "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.DynamicProperty;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    DynamicProperty classNameProperty = DynamicProperty.getInstance(DtmConfig.DTM_CONTEXT_CLASS_NAME_KEY);\n+    donInitMethod(classNameProperty.getString(DtmConfig.DTM_CONTEXT_DEFAULT_CLASS_NAME));\n+    classNameProperty.addCallback(() -> {\n+      donInitMethod(classNameProperty.getString());\n+      LOG.info(\"Dtm context class name update, value = [{}]\", classNameProperty.getString());\n+    });\n+  }", "originalCommit": "64e5ae0ada752fbad5129448c9c73b6d9430a765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NTk1OA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r490145958", "bodyText": "done", "author": "heyile", "createdAt": "2020-09-17T10:42:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyNjM4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9845969393f25c3f2ccc6068802fe53b595dd6f0", "chunk": "diff --git a/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java b/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\nindex eec98ea2e..c66d9b603 100644\n--- a/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\n+++ b/huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java\n\n@@ -27,8 +27,6 @@ import org.apache.servicecomb.swagger.invocation.InvocationType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.netflix.config.DynamicProperty;\n-\n public class DtmConsumerHandler implements Handler {\n   private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n \n"}}, {"oid": "9845969393f25c3f2ccc6068802fe53b595dd6f0", "url": "https://github.com/apache/servicecomb-java-chassis/commit/9845969393f25c3f2ccc6068802fe53b595dd6f0", "message": "[SCB-2084] ServiceComb support dtm: modify as review", "committedDate": "2020-09-17T10:41:01Z", "type": "commit"}, {"oid": "9845969393f25c3f2ccc6068802fe53b595dd6f0", "url": "https://github.com/apache/servicecomb-java-chassis/commit/9845969393f25c3f2ccc6068802fe53b595dd6f0", "message": "[SCB-2084] ServiceComb support dtm: modify as review", "committedDate": "2020-09-17T10:41:01Z", "type": "forcePushed"}]}