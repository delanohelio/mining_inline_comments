{"pr_number": 1885, "pr_title": "[SCB-2043] flow control support leak bucket and token bucket", "pr_createdAt": "2020-07-16T11:34:30Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/1885", "timeline": [{"oid": "ff6413195969c618219accad125528090d0550bc", "url": "https://github.com/apache/servicecomb-java-chassis/commit/ff6413195969c618219accad125528090d0550bc", "message": "[SCB-2043] flow control support leak bucket and token bucket", "committedDate": "2020-07-16T12:38:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzODgwMQ==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456238801", "bodyText": "wrong", "author": "liubao68", "createdAt": "2020-07-17T06:12:39Z", "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "diffHunk": "@@ -109,7 +109,7 @@ private boolean loadHeaders() {\n   private boolean isHaveHeadersRule() {\n     DynamicStringProperty headerStr = DynamicPropertyFactory.getInstance()\n         .getStringProperty(SERVICECOMB_ROUTER_HEADER, null);\n-    return !StringUtils.isEmpty(headerStr.get());\n+    return !StringUtils.isNotEmpty(headerStr.get());", "originalCommit": "ff6413195969c618219accad125528090d0550bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTk5Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456241997", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-07-17T06:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzODgwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "d2ec877a026fcbce90edd68e7578d20f14098b36", "chunk": "diff --git a/handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java b/handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java\nindex b8dfacb62..7e345a945 100644\n--- a/handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java\n+++ b/handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java\n\n@@ -109,7 +109,7 @@ public class RouterInvokeFilter implements HttpServerFilter {\n   private boolean isHaveHeadersRule() {\n     DynamicStringProperty headerStr = DynamicPropertyFactory.getInstance()\n         .getStringProperty(SERVICECOMB_ROUTER_HEADER, null);\n-    return !StringUtils.isNotEmpty(headerStr.get());\n+    return StringUtils.isNotEmpty(headerStr.get());\n   }\n \n   private boolean addAllHeaders(String str) {\n"}}, {"oid": "d2ec877a026fcbce90edd68e7578d20f14098b36", "url": "https://github.com/apache/servicecomb-java-chassis/commit/d2ec877a026fcbce90edd68e7578d20f14098b36", "message": "[SCB-2043] flow control support leak bucket and token bucket", "committedDate": "2020-07-17T06:19:09Z", "type": "commit"}, {"oid": "d2ec877a026fcbce90edd68e7578d20f14098b36", "url": "https://github.com/apache/servicecomb-java-chassis/commit/d2ec877a026fcbce90edd68e7578d20f14098b36", "message": "[SCB-2043] flow control support leak bucket and token bucket", "committedDate": "2020-07-17T06:19:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MzU1Mw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456253553", "bodyText": "@Date seems no use, can be removed.", "author": "liubao68", "createdAt": "2020-07-17T06:54:02Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java", "diffHunk": "@@ -14,15 +14,14 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n-package org.apache.servicecomb.qps;\n+package org.apache.servicecomb.qps.strategy;\n \n import java.util.concurrent.atomic.AtomicLong;\n \n-public class QpsController {\n-  private String key;\n-\n-  private Integer qpsLimit;\n+/**\n+ * @Date 2020/7/8", "originalCommit": "d2ec877a026fcbce90edd68e7578d20f14098b36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NzQ5OA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456297498", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-07-17T08:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MzU1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3b5ebd2057c157374352d28a8b7f598d01e887cb", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java\nindex 01b6e31a1..74bb9b5dc 100644\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java\n+++ b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java\n\n@@ -18,9 +18,6 @@ package org.apache.servicecomb.qps.strategy;\n \n import java.util.concurrent.atomic.AtomicLong;\n \n-/**\n- * @Date 2020/7/8\n- **/\n public class FixedWindowStrategy extends AbstractQpsStrategy {\n \n   // Interval begin time\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1NjQzMA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456256430", "bodyText": "Seems no used.", "author": "liubao68", "createdAt": "2020-07-17T07:01:29Z", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.qps.strategy;\n+\n+\n+/**\n+ * @Date 2020/7/8\n+ **/\n+public class SlidingWindowStrategy extends AbstractQpsStrategy {\n+\n+  public SlidingWindowStrategy(long qpsLimit, String key) {", "originalCommit": "d2ec877a026fcbce90edd68e7578d20f14098b36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NzYwMA==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456297600", "bodyText": "deleted", "author": "GuoYL123", "createdAt": "2020-07-17T08:27:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1NjQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "3b5ebd2057c157374352d28a8b7f598d01e887cb", "chunk": "diff --git a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java b/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java\ndeleted file mode 100644\nindex 4671ba2f2..000000000\n--- a/handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java\n+++ /dev/null\n\n@@ -1,34 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.servicecomb.qps.strategy;\n-\n-\n-/**\n- * @Date 2020/7/8\n- **/\n-public class SlidingWindowStrategy extends AbstractQpsStrategy {\n-\n-  public SlidingWindowStrategy(long qpsLimit, String key) {\n-    super(qpsLimit, key);\n-  }\n-\n-  @Override\n-  public boolean isLimitNewRequest() {\n-    return true;\n-  }\n-}\n"}}, {"oid": "3b5ebd2057c157374352d28a8b7f598d01e887cb", "url": "https://github.com/apache/servicecomb-java-chassis/commit/3b5ebd2057c157374352d28a8b7f598d01e887cb", "message": "[SCB-2043] modify as comment, change strategy when strategy change.", "committedDate": "2020-07-17T08:27:03Z", "type": "commit"}]}