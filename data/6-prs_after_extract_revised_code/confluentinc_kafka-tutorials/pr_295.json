{"pr_number": 295, "pr_title": "DEVX-1628: KStreams DSL choose output topic at runtime", "pr_createdAt": "2020-03-20T21:45:30Z", "pr_url": "https://github.com/confluentinc/kafka-tutorials/pull/295", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNDI3MA==", "url": "https://github.com/confluentinc/kafka-tutorials/pull/295#discussion_r399534270", "bodyText": "Sweet!  What a cool feature to learn about", "author": "rspurgeon", "createdAt": "2020-03-27T20:58:01Z", "path": "_includes/tutorials/dynamic-output-topic/kstreams/code/src/main/java/io/confluent/developer/DynamicOutputTopic.java", "diffHunk": "@@ -0,0 +1,178 @@\n+package io.confluent.developer;\n+\n+\n+import io.confluent.common.utils.TestUtils;\n+import io.confluent.developer.avro.CompletedOrder;\n+import io.confluent.developer.avro.Order;\n+import io.confluent.kafka.serializers.AbstractKafkaAvroSerDeConfig;\n+import io.confluent.kafka.serializers.KafkaAvroDeserializer;\n+import io.confluent.kafka.serializers.KafkaAvroSerializer;\n+import io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.security.SecureRandom;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.Random;\n+import java.util.concurrent.CountDownLatch;\n+import org.apache.avro.specific.SpecificRecord;\n+import org.apache.kafka.clients.admin.AdminClient;\n+import org.apache.kafka.clients.admin.NewTopic;\n+import org.apache.kafka.common.serialization.Serde;\n+import org.apache.kafka.common.serialization.Serdes;\n+import org.apache.kafka.streams.KafkaStreams;\n+import org.apache.kafka.streams.StreamsBuilder;\n+import org.apache.kafka.streams.StreamsConfig;\n+import org.apache.kafka.streams.Topology;\n+import org.apache.kafka.streams.kstream.Consumed;\n+import org.apache.kafka.streams.kstream.KStream;\n+import org.apache.kafka.streams.kstream.Produced;\n+import org.apache.kafka.streams.kstream.ValueMapper;\n+import org.apache.kafka.streams.processor.TopicNameExtractor;\n+\n+public class DynamicOutputTopic {\n+\n+    static final double FAKE_PRICE = 0.467423D;\n+\n+\tpublic Properties buildStreamsProperties(Properties envProps) {\n+        Properties props = new Properties();\n+\n+        props.put(StreamsConfig.APPLICATION_ID_CONFIG, envProps.getProperty(\"application.id\"));\n+        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, envProps.getProperty(\"bootstrap.servers\"));\n+        props.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n+        props.put(AbstractKafkaAvroSerDeConfig.SCHEMA_REGISTRY_URL_CONFIG, envProps.getProperty(\"schema.registry.url\"));\n+\n+        return props;\n+    }\n+\n+    public Topology buildTopology(Properties envProps) {\n+        final StreamsBuilder builder = new StreamsBuilder();\n+        final String orderInputTopic = envProps.getProperty(\"input.topic.name\");\n+        final String orderOutputTopic = envProps.getProperty(\"output.topic.name\");\n+        final String specialOrderOutput = envProps.getProperty(\"special.order.topic.name\");\n+\n+        final Serde<Long> longSerde = getPrimitiveAvroSerde(envProps, true);\n+        final Serde<Order> orderSerde = getSpecificAvroSerde(envProps);\n+        final Serde<CompletedOrder> completedOrderSerde = getSpecificAvroSerde(envProps);\n+\n+        final ValueMapper<Order, CompletedOrder> orderProcessingSimulator = v -> {\n+           double amount = v.getQuantity() * FAKE_PRICE;\n+           return CompletedOrder.newBuilder().setAmount(amount).setId(v.getId() + \"-\" + v.getSku()).setName(v.getName()).build();\n+        };\n+\n+        final TopicNameExtractor<Long, CompletedOrder> orderTopicNameExtractor = (key, completedOrder, recordContext) -> {", "originalCommit": "abe83b3dd07e682a5a6ce8b8a728d74df201fc14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "33046525bbc18f3712aabd785c78c9d536b8a762", "url": "https://github.com/confluentinc/kafka-tutorials/commit/33046525bbc18f3712aabd785c78c9d536b8a762", "message": "remove log file update CP versions in docker file", "committedDate": "2020-03-31T15:05:40Z", "type": "forcePushed"}, {"oid": "7e2a0d43cf21b8a807883550cfd0050cbdd860d8", "url": "https://github.com/confluentinc/kafka-tutorials/commit/7e2a0d43cf21b8a807883550cfd0050cbdd860d8", "message": "update link on index page", "committedDate": "2020-04-08T22:49:10Z", "type": "forcePushed"}, {"oid": "71d2fe2b0e7bbe3e5a74d067459e36bac9e0e48b", "url": "https://github.com/confluentinc/kafka-tutorials/commit/71d2fe2b0e7bbe3e5a74d067459e36bac9e0e48b", "message": "Initial commit for dynamic output topics", "committedDate": "2020-04-10T15:51:18Z", "type": "commit"}, {"oid": "586169e1aaea5f70fa0c6bd5181b34dc10b006fa", "url": "https://github.com/confluentinc/kafka-tutorials/commit/586169e1aaea5f70fa0c6bd5181b34dc10b006fa", "message": "Final commit for dynamic output tutorial", "committedDate": "2020-04-10T15:51:18Z", "type": "commit"}, {"oid": "61b718ca96f501282a9fb5b8d2ebd7abdb649943", "url": "https://github.com/confluentinc/kafka-tutorials/commit/61b718ca96f501282a9fb5b8d2ebd7abdb649943", "message": "updates per comments", "committedDate": "2020-04-10T15:51:18Z", "type": "commit"}, {"oid": "653568ea77694cf83451f4cf02346ecbf2283d1f", "url": "https://github.com/confluentinc/kafka-tutorials/commit/653568ea77694cf83451f4cf02346ecbf2283d1f", "message": "Apply suggestions from code review\n\nCo-Authored-By: Colin Hicks <colin.hicks@confluent.io>", "committedDate": "2020-04-10T15:51:18Z", "type": "commit"}, {"oid": "f4600303e5d6955f258ee018756206eca44b9d05", "url": "https://github.com/confluentinc/kafka-tutorials/commit/f4600303e5d6955f258ee018756206eca44b9d05", "message": "remove log file update CP versions in docker file", "committedDate": "2020-04-10T15:51:18Z", "type": "commit"}, {"oid": "5a5d8712730af8436227e026472e1decfc3d5005", "url": "https://github.com/confluentinc/kafka-tutorials/commit/5a5d8712730af8436227e026472e1decfc3d5005", "message": "update link on index page", "committedDate": "2020-04-10T15:53:16Z", "type": "commit"}, {"oid": "004ba8555eb773c4b7129497e9e1ef31bdb2166d", "url": "https://github.com/confluentinc/kafka-tutorials/commit/004ba8555eb773c4b7129497e9e1ef31bdb2166d", "message": "added command to cleanup.sh to kill any gradle procs", "committedDate": "2020-04-10T16:00:48Z", "type": "commit"}, {"oid": "004ba8555eb773c4b7129497e9e1ef31bdb2166d", "url": "https://github.com/confluentinc/kafka-tutorials/commit/004ba8555eb773c4b7129497e9e1ef31bdb2166d", "message": "added command to cleanup.sh to kill any gradle procs", "committedDate": "2020-04-10T16:00:48Z", "type": "forcePushed"}]}