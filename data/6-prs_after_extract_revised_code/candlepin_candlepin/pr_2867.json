{"pr_number": 2867, "pr_title": "ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)", "pr_createdAt": "2020-12-16T17:37:29Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2867", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI3NjQwNw==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r545276407", "bodyText": "This method is almost identical to the one above it, and could/should call into it with a null consumer argument instead. The base findStackByIds can then gate the first line (.add(Restrictions.eq(\"consumer\", consumer))) on the presence of consumer.", "author": "Ceiu", "createdAt": "2020-12-17T17:39:04Z", "path": "server/src/main/java/org/candlepin/model/EntitlementCurator.java", "diffHunk": "@@ -997,10 +976,27 @@ public Entitlement replicate(Entitlement ent) {\n             .createAlias(\"ent_pool.sourceStack\", \"ss\", org.hibernate.sql.JoinType.LEFT_OUTER_JOIN)\n             .add(Restrictions.isNull(\"ss.id\"));\n \n-        return this.cpQueryFactory.<Entitlement>buildQuery(this.currentSession(), criteria);\n+        return criteria.list();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n+    public List<Entitlement> findByStackIds(Collection<String> stackIds) {", "originalCommit": "376d6f0b24d5a391eeca6e9dd5cfb5651c6a9dd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NjAyOQ==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r548056029", "bodyText": "Done.", "author": "Januson", "createdAt": "2020-12-23T17:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI3NjQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "76ce8bf1722a2024f683597ddd7710c68462cb59", "chunk": "diff --git a/server/src/main/java/org/candlepin/model/EntitlementCurator.java b/server/src/main/java/org/candlepin/model/EntitlementCurator.java\nindex e4d95630d..429c9faff 100644\n--- a/server/src/main/java/org/candlepin/model/EntitlementCurator.java\n+++ b/server/src/main/java/org/candlepin/model/EntitlementCurator.java\n\n@@ -965,23 +963,7 @@ public class EntitlementCurator extends AbstractHibernateCurator<Entitlement> {\n      */\n     @SuppressWarnings(\"unchecked\")\n     public List<Entitlement> findByStackIds(Consumer consumer, Collection<String> stackIds) {\n-        Criteria criteria = this.currentSession().createCriteria(Entitlement.class)\n-            .add(Restrictions.eq(\"consumer\", consumer))\n-            .createAlias(\"pool\", \"ent_pool\")\n-            .createAlias(\"ent_pool.product\", \"product\")\n-            .createAlias(\"product.attributes\", \"attrs\")\n-            .add(Restrictions.eq(\"attrs.indices\", Product.Attributes.STACKING_ID))\n-            .add(CPRestrictions.in(\"attrs.elements\", stackIds))\n-            .add(Restrictions.isNull(\"ent_pool.sourceEntitlement\"))\n-            .createAlias(\"ent_pool.sourceStack\", \"ss\", org.hibernate.sql.JoinType.LEFT_OUTER_JOIN)\n-            .add(Restrictions.isNull(\"ss.id\"));\n-\n-        return criteria.list();\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public List<Entitlement> findByStackIds(Collection<String> stackIds) {\n-        if (CollectionUtils.isEmpty(stackIds)) {\n+        if (stackIds == null || stackIds.isEmpty()) {\n             return Collections.emptyList();\n         }\n         Criteria criteria = this.currentSession().createCriteria(Entitlement.class)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4MTI5NA==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r545281294", "bodyText": "There are a ton of changes here which don't add much to performance or readability, don't address the core problem, but will make rebasing/merging the looming provided products change a nightmare. This particular method wasn't touched in that, but its sister method in OwnerContentCurator has, using partitionMap. That would be preferable here.\nSee: https://github.com/candlepin/candlepin/blob/feature/move_provided_product/server/src/main/java/org/candlepin/model/OwnerContentCurator.java#L532", "author": "Ceiu", "createdAt": "2020-12-17T17:46:21Z", "path": "server/src/main/java/org/candlepin/model/OwnerProductCurator.java", "diffHunk": "@@ -568,41 +569,51 @@ public void updateOwnerProductReferences(Owner owner, Map<String, String> produc\n \n         Session session = this.currentSession();\n \n-        Map<String, Object> criteria = new HashMap<>();\n+        Map<String, Object> ownerProductCriteria = new HashMap<>();", "originalCommit": "376d6f0b24d5a391eeca6e9dd5cfb5651c6a9dd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwMDAwMQ==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r545700001", "bodyText": "This change was not related to performance. This is the place where manifest import fails with too many params. I did some renaming to better see what is happening with all those reassignments. I can revert those to to prevent conflicts but partitioning needs to stay otherwise import will fail.", "author": "Januson", "createdAt": "2020-12-18T09:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4MTI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "5a0fb2a00651500bbe7d0b05d949cf579a34d669", "chunk": "diff --git a/server/src/main/java/org/candlepin/model/OwnerProductCurator.java b/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\nindex 00863aa7a..36ee4843b 100644\n--- a/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\n+++ b/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\n\n@@ -569,50 +568,42 @@ public class OwnerProductCurator extends AbstractHibernateCurator<OwnerProduct>\n \n         Session session = this.currentSession();\n \n-        Map<String, Object> ownerProductCriteria = new HashMap<>();\n+        Map<String, Object> criteria = new HashMap<>();\n         Map<Object, Object> uuidMap = Map.class.cast(productUuidMap);\n-        ownerProductCriteria.put(\"product_uuid\", productUuidMap.keySet());\n-        ownerProductCriteria.put(\"owner_id\", owner.getId());\n+        criteria.put(\"product_uuid\", productUuidMap.keySet());\n+        criteria.put(\"owner_id\", owner.getId());\n \n         // Owner products\n-        int updatedOwnerProducts = this.bulkSQLUpdate(\n-            OwnerProduct.DB_TABLE, \"product_uuid\", uuidMap, ownerProductCriteria);\n-        log.debug(\"{} owner-product relations updated\", updatedOwnerProducts);\n+        int count = this.bulkSQLUpdate(OwnerProduct.DB_TABLE, \"product_uuid\", uuidMap, criteria);\n+\n+        log.debug(\"{} owner-product relations updated\", count);\n \n-        Map<String, Object> poolProductCriteria = new HashMap<>();\n-        poolProductCriteria.put(\"product_uuid\", productUuidMap.keySet());\n-        poolProductCriteria.put(\"owner_id\", owner.getId());\n         // pool provided and derived products\n-        int updatedPoolProducts = this.bulkSQLUpdate(\n-            Pool.DB_TABLE, \"product_uuid\", uuidMap, poolProductCriteria);\n+        count = this.bulkSQLUpdate(Pool.DB_TABLE, \"product_uuid\", uuidMap, criteria);\n \n-        Map<String, Object> derivedProductCriteria = new HashMap<>();\n-        derivedProductCriteria.put(\"owner_id\", owner.getId());\n-        derivedProductCriteria.put(\"derived_product_uuid\", productUuidMap.keySet());\n+        criteria.remove(\"product_uuid\");\n+        criteria.put(\"derived_product_uuid\", productUuidMap.keySet());\n \n-        int updatedPoolDerivedProducts = this.bulkSQLUpdate(\n-            Pool.DB_TABLE, \"derived_product_uuid\", uuidMap, derivedProductCriteria);\n+        count += this.bulkSQLUpdate(Pool.DB_TABLE, \"derived_product_uuid\", uuidMap, criteria);\n \n-        log.debug(\"{} pools updated\", updatedPoolProducts + updatedPoolDerivedProducts);\n+        log.debug(\"{} pools updated\", count);\n \n         // pool provided products\n-        List<String> poolIds = session.createSQLQuery(\"SELECT id FROM cp_pool WHERE owner_id = :ownerId\")\n+        List<String> ids = session.createSQLQuery(\"SELECT id FROM cp_pool WHERE owner_id = :ownerId\")\n             .setParameter(\"ownerId\", owner.getId())\n             .list();\n \n-        if (poolIds != null && !poolIds.isEmpty()) {\n-            for (List<String> poolIdBlock : Iterables.partition(poolIds, getBatchBlockSize())) {\n-                Map<String, Object> productCriteria = new HashMap<>();\n-                productCriteria.put(\"product_uuid\", productUuidMap.keySet());\n-                productCriteria.put(\"pool_id\", poolIdBlock);\n+        if (ids != null && !ids.isEmpty()) {\n+            for (List<String> poolIdBlock : Iterables.partition(ids, getBatchBlockSize())) {\n+                Map<String, Object> criteria2 = new HashMap<>();\n+                criteria2.put(\"product_uuid\", productUuidMap.keySet());\n+                criteria2.put(\"pool_id\", poolIdBlock);\n \n-                int updatedProvidedProducts = this.bulkSQLUpdate(\n-                    \"cp2_pool_provided_products\", \"product_uuid\", uuidMap, productCriteria);\n-                log.debug(\"{} provided products updated\", updatedProvidedProducts);\n+                count = this.bulkSQLUpdate(\"cp2_pool_provided_products\", \"product_uuid\", uuidMap, criteria2);\n+                log.debug(\"{} provided products updated\", count);\n \n-                int updatedDerivedProducts = this.bulkSQLUpdate(\n-                    \"cp2_pool_derprov_products\", \"product_uuid\", uuidMap, productCriteria);\n-                log.debug(\"{} derived provided products updated\", updatedDerivedProducts);\n+                count = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\", uuidMap, criteria2);\n+                log.debug(\"{} derived provided products updated\", count);\n             }\n         }\n         else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4MzM4Mg==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r545283382", "bodyText": "Same deal as the other version here: the methods are basically identical sans consumer bits.\nAlso, CPRestrictions should no longer be used -- it doesn't safely work around parameter limits.", "author": "Ceiu", "createdAt": "2020-12-17T17:49:19Z", "path": "server/src/main/java/org/candlepin/model/PoolCurator.java", "diffHunk": "@@ -1145,6 +1147,21 @@ public void batchDelete(Collection<Pool> pools, Collection<String> alreadyDelete\n         return (List<Pool>) getPools.list();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    public List<Pool> getSubPoolForStackIds(Collection<String> stackIds) {", "originalCommit": "376d6f0b24d5a391eeca6e9dd5cfb5651c6a9dd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMxNjcxNg==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r553316716", "bodyText": "Done.", "author": "Januson", "createdAt": "2021-01-07T13:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4MzM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "76ce8bf1722a2024f683597ddd7710c68462cb59", "chunk": "diff --git a/server/src/main/java/org/candlepin/model/PoolCurator.java b/server/src/main/java/org/candlepin/model/PoolCurator.java\nindex 8a7b49f6d..bfbb03ac1 100644\n--- a/server/src/main/java/org/candlepin/model/PoolCurator.java\n+++ b/server/src/main/java/org/candlepin/model/PoolCurator.java\n\n@@ -1136,19 +1136,6 @@ public class PoolCurator extends AbstractHibernateCurator<Pool> {\n      */\n     @SuppressWarnings({\"checkstyle:indentation\", \"unchecked\"})\n     public List<Pool> getSubPoolForStackIds(Consumer consumer, Collection<String> stackIds) {\n-        Criteria getPools = createSecureCriteria()\n-            .createAlias(\"sourceStack\", \"ss\")\n-            .add(Restrictions.eq(\"ss.sourceConsumer\", consumer))\n-            .add(Restrictions.and(\n-                Restrictions.isNotNull(\"ss.sourceStackId\"),\n-                CPRestrictions.in(\"ss.sourceStackId\", stackIds))\n-            );\n-\n-        return (List<Pool>) getPools.list();\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public List<Pool> getSubPoolForStackIds(Collection<String> stackIds) {\n         if (stackIds.isEmpty()) {\n             return Collections.emptyList();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4NTgyMA==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r545285820", "bodyText": "Where'd our scope modifiers go in this class?", "author": "Ceiu", "createdAt": "2020-12-17T17:52:56Z", "path": "server/src/test/java/org/candlepin/controller/PoolManagerFunctionalTest.java", "diffHunk": "@@ -71,25 +73,25 @@\n import java.util.Date;\n import java.util.HashMap;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.stream.Collectors;\n \n import javax.inject.Inject;\n import javax.persistence.EntityNotFoundException;\n \n \n+class PoolManagerFunctionalTest extends DatabaseTestFixture {", "originalCommit": "376d6f0b24d5a391eeca6e9dd5cfb5651c6a9dd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NjUwOA==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r548056508", "bodyText": "I tried to apply suggestion from JUnit5 to use default visibility and forgot to revert the commit. Modifiers are back now.", "author": "Januson", "createdAt": "2020-12-23T17:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4NTgyMA=="}], "type": "inlineReview", "revised_code": {"commit": "ecb24cd170f4895deb12eff1252300a6e8103fa7", "chunk": "diff --git a/server/src/test/java/org/candlepin/controller/PoolManagerFunctionalTest.java b/server/src/test/java/org/candlepin/controller/PoolManagerFunctionalTest.java\nindex 79e0c3e8d..ea90af812 100755\n--- a/server/src/test/java/org/candlepin/controller/PoolManagerFunctionalTest.java\n+++ b/server/src/test/java/org/candlepin/controller/PoolManagerFunctionalTest.java\n\n@@ -83,7 +83,7 @@ import javax.inject.Inject;\n import javax.persistence.EntityNotFoundException;\n \n \n-class PoolManagerFunctionalTest extends DatabaseTestFixture {\n+public class PoolManagerFunctionalTest extends DatabaseTestFixture {\n     private static final String PRODUCT_MONITORING = \"monitoring\";\n     private static final String PRODUCT_PROVISIONING = \"provisioning\";\n     private static final String PRODUCT_VIRT_HOST = \"virtualization_host\";\n"}}, {"oid": "ecb24cd170f4895deb12eff1252300a6e8103fa7", "url": "https://github.com/candlepin/candlepin/commit/ecb24cd170f4895deb12eff1252300a6e8103fa7", "message": "ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n - Fix too many params issue in manifest import\n - Replace batch delete of entitlements with batch delete by ids\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2020-12-18T07:54:04Z", "type": "forcePushed"}, {"oid": "76ce8bf1722a2024f683597ddd7710c68462cb59", "url": "https://github.com/candlepin/candlepin/commit/76ce8bf1722a2024f683597ddd7710c68462cb59", "message": "ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n - Fix too many params issue in manifest import\n - Replace batch delete of entitlements with batch delete by ids\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2020-12-18T12:05:00Z", "type": "forcePushed"}, {"oid": "5a0fb2a00651500bbe7d0b05d949cf579a34d669", "url": "https://github.com/candlepin/candlepin/commit/5a0fb2a00651500bbe7d0b05d949cf579a34d669", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2020-12-23T15:40:36Z", "type": "forcePushed"}, {"oid": "4053a960086e84c438cebe0e3aea91444e6b5d99", "url": "https://github.com/candlepin/candlepin/commit/4053a960086e84c438cebe0e3aea91444e6b5d99", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2020-12-23T15:50:20Z", "type": "forcePushed"}, {"oid": "0709fec2aead1bf3783e5988a3fd859e9480763d", "url": "https://github.com/candlepin/candlepin/commit/0709fec2aead1bf3783e5988a3fd859e9480763d", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2020-12-23T17:01:20Z", "type": "forcePushed"}, {"oid": "b9d62fba1e385a3de8e16361f8d0c79efe1932f0", "url": "https://github.com/candlepin/candlepin/commit/b9d62fba1e385a3de8e16361f8d0c79efe1932f0", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-05T08:20:32Z", "type": "forcePushed"}, {"oid": "96280c16ac32a44e65edc2bbd9485df6c93dfd84", "url": "https://github.com/candlepin/candlepin/commit/96280c16ac32a44e65edc2bbd9485df6c93dfd84", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-05T09:41:12Z", "type": "forcePushed"}, {"oid": "961f0c111a0fe5c659bbc1a9c821bc202a24c723", "url": "https://github.com/candlepin/candlepin/commit/961f0c111a0fe5c659bbc1a9c821bc202a24c723", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-05T11:07:34Z", "type": "forcePushed"}, {"oid": "f6c8d5608ae38dfa0a22ead5bebd3a4fc40cad21", "url": "https://github.com/candlepin/candlepin/commit/f6c8d5608ae38dfa0a22ead5bebd3a4fc40cad21", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-07T12:43:19Z", "type": "forcePushed"}, {"oid": "5ad15406a7a1e47058ef094b5bf04bb7e8a3c104", "url": "https://github.com/candlepin/candlepin/commit/5ad15406a7a1e47058ef094b5bf04bb7e8a3c104", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-07T12:59:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMzMTk2Ng==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r553331966", "bodyText": "I'm confused. Your comment says \"Replace batch delete of entitlements with batch delete by ids\", but this is unchanged (it's still deleting by entity)?", "author": "nikosmoum", "createdAt": "2021-01-07T13:39:33Z", "path": "server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java", "diffHunk": "@@ -1937,49 +1938,57 @@ public void revokeEntitlements(List<Entitlement> entsToRevoke, Set<String> alrea\n \n         log.info(\"Starting batch delete of pools\");\n         poolCurator.batchDelete(poolsToDelete, alreadyDeletedPools);\n-        for (Pool pool : poolsToDelete) {\n-            this.sink.queueEvent(this.eventFactory.poolDeleted(pool));\n-        }\n+        firePoolDeletedEvents(poolsToDelete);\n         log.info(\"Starting batch delete of entitlements\");\n         entitlementCurator.batchDelete(entsToRevoke);", "originalCommit": "5ad15406a7a1e47058ef094b5bf04bb7e8a3c104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMzODI0Mg==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r553338242", "bodyText": "That is the issue I mentioned during scrum. With delete by ids I am hitting issues with detached entities. Not sure why that happens so I removed it from PR until it is fixed.", "author": "Januson", "createdAt": "2021-01-07T13:50:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMzMTk2Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "01f304b3e020e95e1c65566eff2f9ffd1d9d85e7", "url": "https://github.com/candlepin/candlepin/commit/01f304b3e020e95e1c65566eff2f9ffd1d9d85e7", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-08T14:27:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI5MDcwMQ==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r555290701", "bodyText": "If you're going to spend the effort to abstract this out, it should go on Pool itself as a helper method there. Putting this here in CPM to be used exactly once probably isn't that helpful.", "author": "Ceiu", "createdAt": "2021-01-11T19:36:16Z", "path": "server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java", "diffHunk": "@@ -2024,63 +2029,51 @@ private void sendDeletedEvents(List<Entitlement> entsToRevoke) {\n      * @return List pool ID list\n      */\n     private List<String> getPoolIds(Collection<Pool> pools) {\n-        List<String> ids = new ArrayList<>();\n-\n-        for (Pool e : pools) {\n-            ids.add(e.getId());\n-        }\n-\n-        return ids;\n+        return pools.stream()\n+            .map(Pool::getId)\n+            .collect(Collectors.toList());\n     }\n \n     /**\n      * Filter the given entitlements so that this method returns only\n      * the entitlements that are part of some stack. Then update them\n      * accordingly\n      *\n-     * @param consumerSortedEntitlements Entitlements to be filtered\n+     * @param entsToRevoke\n      * @param alreadyDeletedPools pools to skip deletion as they have already been deleted\n      * @return Entitlements that are stacked\n      */\n-    private void filterAndUpdateStackingEntitlements(\n-        Map<Consumer, List<Entitlement>> consumerSortedEntitlements, Set<String> alreadyDeletedPools) {\n-        Map<Consumer, List<Entitlement>> stackingEntitlements = new HashMap<>();\n-\n-        for (Consumer consumer : consumerSortedEntitlements.keySet()) {\n-            List<Entitlement> ents = consumerSortedEntitlements.get(consumer);\n-            if (CollectionUtils.isNotEmpty(ents)) {\n-                for (Entitlement ent : ents) {\n-                    Pool pool = ent.getPool();\n-\n-                    if (!\"true\".equals(pool.getAttributeValue(Pool.Attributes.DERIVED_POOL)) &&\n-                        pool.getProduct().hasAttribute(Product.Attributes.STACKING_ID)) {\n-                        List<Entitlement> entList = stackingEntitlements.get(consumer);\n-                        if (entList == null) {\n-                            entList = new ArrayList<>();\n-                            stackingEntitlements.put(consumer, entList);\n-                        }\n-                        entList.add(ent);\n-                    }\n-                }\n-            }\n-        }\n+    private void updateStackingEntitlements(List<Entitlement> entsToRevoke, Set<String> alreadyDeletedPools) {\n+        Map<Consumer, List<Entitlement>> stackingEntsByConsumer = stackingEntitlementsOf(entsToRevoke);\n+        log.debug(\"Found stacking entitlements for {} consumers\", stackingEntsByConsumer.size());\n+        Set<String> allStackingIds = stackIdsOf(stackingEntsByConsumer.values());\n+        List<Pool> pools = poolCurator.getSubPoolForStackIds(null, allStackingIds);\n+        poolRules.bulkUpdatePoolsFromStack(stackingEntsByConsumer.keySet(), pools, alreadyDeletedPools, true);\n+    }\n \n-        for (Entry<Consumer, List<Entitlement>> entry : stackingEntitlements.entrySet()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Found {} stacking entitlements to delete for consumer: {}\",\n-                    entry.getValue().size(), entry.getKey());\n-            }\n+    private Map<Consumer, List<Entitlement>> stackingEntitlementsOf(List<Entitlement> entitlements) {\n+        return entitlements.stream()\n+            .filter(entitlement -> !isDerived(entitlement.getPool()))\n+            .filter(entitlement -> entitlement.getPool().isStacked())\n+            .collect(Collectors.groupingBy(Entitlement::getConsumer));\n+    }\n \n-            Set<String> stackIds = new HashSet<>();\n-            for (Entitlement ent : entry.getValue()) {\n-                stackIds.add(ent.getPool().getStackId());\n-            }\n+    private boolean isDerived(Pool pool) {", "originalCommit": "01f304b3e020e95e1c65566eff2f9ffd1d9d85e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2dc4d523f7fa0ac0e9dd91a14065948b90398b7f", "chunk": "diff --git a/server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java b/server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java\nindex 5ac1f5ae8..5d1b9a995 100644\n--- a/server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java\n+++ b/server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java\n\n@@ -2053,15 +2053,11 @@ public class CandlepinPoolManager implements PoolManager {\n \n     private Map<Consumer, List<Entitlement>> stackingEntitlementsOf(List<Entitlement> entitlements) {\n         return entitlements.stream()\n-            .filter(entitlement -> !isDerived(entitlement.getPool()))\n+            .filter(entitlement -> !entitlement.getPool().isDerived())\n             .filter(entitlement -> entitlement.getPool().isStacked())\n             .collect(Collectors.groupingBy(Entitlement::getConsumer));\n     }\n \n-    private boolean isDerived(Pool pool) {\n-        return \"true\".equals(pool.getAttributeValue(Pool.Attributes.DERIVED_POOL));\n-    }\n-\n     private Set<String> stackIdsOf(Collection<List<Entitlement>> entitlementsPerConsumer) {\n         return entitlementsPerConsumer.stream()\n             .map(this::stackIdsOf)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTM0ODY1Mg==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r555348652", "bodyText": "This will make debugging a pain. We should keep separate counts and then output the totals when we're done partitioning.", "author": "Ceiu", "createdAt": "2021-01-11T21:24:09Z", "path": "server/src/main/java/org/candlepin/model/OwnerProductCurator.java", "diffHunk": "@@ -595,15 +594,19 @@ public void updateOwnerProductReferences(Owner owner, Map<String, String> produc\n             .list();\n \n         if (ids != null && !ids.isEmpty()) {\n-            criteria.clear();\n-            criteria.put(\"product_uuid\", productUuidMap.keySet());\n-            criteria.put(\"pool_id\", ids);\n-\n-            count = this.bulkSQLUpdate(\"cp2_pool_provided_products\", \"product_uuid\", uuidMap, criteria);\n-            log.debug(\"{} provided products updated\", count);\n-\n-            count = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\", uuidMap, criteria);\n-            log.debug(\"{} derived provided products updated\", count);\n+            for (List<String> poolIdBlock : this.partition(ids, getBatchBlockSize())) {\n+                Map<String, Object> updateCriteria = new HashMap<>();\n+                updateCriteria.put(\"product_uuid\", productUuidMap.keySet());\n+                updateCriteria.put(\"pool_id\", poolIdBlock);\n+\n+                count = this.bulkSQLUpdate(\"cp2_pool_provided_products\", \"product_uuid\",", "originalCommit": "01f304b3e020e95e1c65566eff2f9ffd1d9d85e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2dc4d523f7fa0ac0e9dd91a14065948b90398b7f", "chunk": "diff --git a/server/src/main/java/org/candlepin/model/OwnerProductCurator.java b/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\nindex eac80ea7f..d84ce4b02 100644\n--- a/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\n+++ b/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\n\n@@ -599,13 +599,13 @@ public class OwnerProductCurator extends AbstractHibernateCurator<OwnerProduct>\n                 updateCriteria.put(\"product_uuid\", productUuidMap.keySet());\n                 updateCriteria.put(\"pool_id\", poolIdBlock);\n \n-                count = this.bulkSQLUpdate(\"cp2_pool_provided_products\", \"product_uuid\",\n-                    uuidMap, updateCriteria);\n-                log.debug(\"{} provided products updated\", count);\n+                int providedProductsUpdated = this.bulkSQLUpdate(\"cp2_pool_provided_products\",\n+                    \"product_uuid\", uuidMap, updateCriteria);\n+                log.debug(\"{} provided products updated\", providedProductsUpdated);\n \n-                count = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\",\n+                int derivedProductsUpdated = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\",\n                     uuidMap, updateCriteria);\n-                log.debug(\"{} derived provided products updated\", count);\n+                log.debug(\"{} derived provided products updated\", derivedProductsUpdated);\n             }\n         }\n         else {\n"}}, {"oid": "2dc4d523f7fa0ac0e9dd91a14065948b90398b7f", "url": "https://github.com/candlepin/candlepin/commit/2dc4d523f7fa0ac0e9dd91a14065948b90398b7f", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-14T11:28:18Z", "type": "forcePushed"}, {"oid": "3691e5a50ca1b00d409d1d1dae45d66e0a52659e", "url": "https://github.com/candlepin/candlepin/commit/3691e5a50ca1b00d409d1d1dae45d66e0a52659e", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-14T12:27:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI5MDA2OA==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r560290068", "bodyText": "Sorry, I guess I wasn't clear on this last time. I meant moving the output statements to outside the loop rather than a bunch of individual updates that will elongate output and require manual math during debugging.", "author": "Ceiu", "createdAt": "2021-01-19T16:03:13Z", "path": "server/src/main/java/org/candlepin/model/OwnerProductCurator.java", "diffHunk": "@@ -595,15 +594,19 @@ public void updateOwnerProductReferences(Owner owner, Map<String, String> produc\n             .list();\n \n         if (ids != null && !ids.isEmpty()) {\n-            criteria.clear();\n-            criteria.put(\"product_uuid\", productUuidMap.keySet());\n-            criteria.put(\"pool_id\", ids);\n-\n-            count = this.bulkSQLUpdate(\"cp2_pool_provided_products\", \"product_uuid\", uuidMap, criteria);\n-            log.debug(\"{} provided products updated\", count);\n-\n-            count = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\", uuidMap, criteria);\n-            log.debug(\"{} derived provided products updated\", count);\n+            for (List<String> poolIdBlock : this.partition(ids, getBatchBlockSize())) {\n+                Map<String, Object> updateCriteria = new HashMap<>();\n+                updateCriteria.put(\"product_uuid\", productUuidMap.keySet());\n+                updateCriteria.put(\"pool_id\", poolIdBlock);\n+\n+                int providedProductsUpdated = this.bulkSQLUpdate(\"cp2_pool_provided_products\",\n+                    \"product_uuid\", uuidMap, updateCriteria);\n+                log.debug(\"{} provided products updated\", providedProductsUpdated);\n+\n+                int derivedProductsUpdated = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\",\n+                    uuidMap, updateCriteria);\n+                log.debug(\"{} derived provided products updated\", derivedProductsUpdated);", "originalCommit": "3691e5a50ca1b00d409d1d1dae45d66e0a52659e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDc2NTQ2NA==", "url": "https://github.com/candlepin/candlepin/pull/2867#discussion_r560765464", "bodyText": "Done.", "author": "Januson", "createdAt": "2021-01-20T08:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI5MDA2OA=="}], "type": "inlineReview", "revised_code": {"commit": "6f9138cde59ffbb429eab5fceb08ee445561e8ad", "chunk": "diff --git a/server/src/main/java/org/candlepin/model/OwnerProductCurator.java b/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\nindex d84ce4b02..8ada395f3 100644\n--- a/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\n+++ b/server/src/main/java/org/candlepin/model/OwnerProductCurator.java\n\n@@ -594,19 +594,21 @@ public class OwnerProductCurator extends AbstractHibernateCurator<OwnerProduct>\n             .list();\n \n         if (ids != null && !ids.isEmpty()) {\n+            int providedProductsUpdated = 0;\n+            int derivedProductsUpdated = 0;\n             for (List<String> poolIdBlock : this.partition(ids, getBatchBlockSize())) {\n                 Map<String, Object> updateCriteria = new HashMap<>();\n                 updateCriteria.put(\"product_uuid\", productUuidMap.keySet());\n                 updateCriteria.put(\"pool_id\", poolIdBlock);\n \n-                int providedProductsUpdated = this.bulkSQLUpdate(\"cp2_pool_provided_products\",\n+                providedProductsUpdated += this.bulkSQLUpdate(\"cp2_pool_provided_products\",\n                     \"product_uuid\", uuidMap, updateCriteria);\n-                log.debug(\"{} provided products updated\", providedProductsUpdated);\n \n-                int derivedProductsUpdated = this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\",\n+                derivedProductsUpdated += this.bulkSQLUpdate(\"cp2_pool_derprov_products\", \"product_uuid\",\n                     uuidMap, updateCriteria);\n-                log.debug(\"{} derived provided products updated\", derivedProductsUpdated);\n             }\n+            log.debug(\"{} provided products updated\", providedProductsUpdated);\n+            log.debug(\"{} derived provided products updated\", derivedProductsUpdated);\n         }\n         else {\n             log.debug(\"0 provided products updated\");\n"}}, {"oid": "6f9138cde59ffbb429eab5fceb08ee445561e8ad", "url": "https://github.com/candlepin/candlepin/commit/6f9138cde59ffbb429eab5fceb08ee445561e8ad", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-20T08:32:33Z", "type": "forcePushed"}, {"oid": "e2e7855f1de01e317252aaaeda8aa3a634e2590a", "url": "https://github.com/candlepin/candlepin/commit/e2e7855f1de01e317252aaaeda8aa3a634e2590a", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-20T15:15:41Z", "type": "commit"}, {"oid": "e2e7855f1de01e317252aaaeda8aa3a634e2590a", "url": "https://github.com/candlepin/candlepin/commit/e2e7855f1de01e317252aaaeda8aa3a634e2590a", "message": " ENT-3286: Manifest delete takes 24 hours or more in large environment (60k consumers in owner)\n\n - Fix too many params issue in manifest import\n - Refactor updatePoolsFromStack to avoid calling deletePools n times", "committedDate": "2021-01-20T15:15:41Z", "type": "forcePushed"}]}