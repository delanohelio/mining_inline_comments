{"pr_number": 2565, "pr_title": "[F] ENT-1829: Populate provided products and derived provided products", "pr_createdAt": "2020-01-14T10:29:57Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2565", "timeline": [{"oid": "361b417644f449411fea4ba34e815acca5d3150e", "url": "https://github.com/candlepin/candlepin/commit/361b417644f449411fea4ba34e815acca5d3150e", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-14T10:45:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366415255", "bodyText": "These need to be n-tier aware translations", "author": "Ceiu", "createdAt": "2020-01-14T15:47:31Z", "path": "server/src/main/java/org/candlepin/dto/rules/v1/PoolTranslator.java", "diffHunk": "@@ -80,7 +80,8 @@ public PoolDTO populate(ModelTranslator modelTranslator, Pool source, PoolDTO de\n         // Process nested objects if we have a model translator to use to the translation...\n         if (modelTranslator != null) {\n \n-            Set<Product> products = source.getProvidedProducts();\n+            Collection<Product> products = source.getProduct() == null ? null :", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5MTQ5MQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366691491", "bodyText": "@sonalidhome @Ceiu\nDo we need to combined stacked entitlements provided products here like we are doing in other pool translators?", "author": "abhiskum", "createdAt": "2020-01-15T04:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NzQwNg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366947406", "bodyText": "@Ceiu Can you explain what you mean by \"n-tier aware\"?", "author": "nikosmoum", "createdAt": "2020-01-15T15:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0MjQyNQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368042425", "bodyText": "Based on the brief discussion I posed the other day during post-scrum, these particular bits where we copy the products to the pool DTO should be recursive and grab provided products of the provided products.", "author": "Ceiu", "createdAt": "2020-01-17T17:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4MDUxOQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368980519", "bodyText": "Updated the code to support n-tier.", "author": "sonalidhome", "createdAt": "2020-01-21T12:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2bceff3564aa3f8d037dae223e7f4d389b8e9546", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/rules/v1/PoolTranslator.java b/server/src/main/java/org/candlepin/dto/rules/v1/PoolTranslator.java\nindex a6c6fabf7..a90192ae5 100644\n--- a/server/src/main/java/org/candlepin/dto/rules/v1/PoolTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/rules/v1/PoolTranslator.java\n\n@@ -82,33 +83,34 @@ public class PoolTranslator implements ObjectTranslator<Pool, PoolDTO> {\n \n             Collection<Product> products = source.getProduct() == null ? null :\n                 source.getProduct().getProvidedProducts();\n-            if (products != null && !products.isEmpty()) {\n-                for (Product prod : products) {\n-                    if (prod != null) {\n-                        dest.addProvidedProduct(\n-                            new PoolDTO.ProvidedProductDTO(prod.getId(), prod.getName()));\n-                    }\n-                }\n-            }\n-            else {\n-                dest.setProvidedProducts(Collections.<PoolDTO.ProvidedProductDTO>emptySet());\n-            }\n+            Set<PoolDTO.ProvidedProductDTO> providedProductDTOs = new HashSet<>();\n+            addProvidedProducts(products, providedProductDTOs);\n+            dest.setProvidedProducts(providedProductDTOs);\n \n             Collection<Product> derivedProducts = source.getDerivedProduct() == null ? null :\n                 source.getDerivedProduct().getProvidedProducts();\n-            if (derivedProducts != null && !derivedProducts.isEmpty()) {\n-                for (Product derivedProd : derivedProducts) {\n-                    if (derivedProd != null) {\n-                        dest.addDerivedProvidedProduct(\n-                            new PoolDTO.ProvidedProductDTO(derivedProd.getId(), derivedProd.getName()));\n-                    }\n-                }\n-            }\n-            else {\n-                dest.setDerivedProvidedProducts(Collections.<PoolDTO.ProvidedProductDTO>emptySet());\n-            }\n+            Set<PoolDTO.ProvidedProductDTO> derivedProvidedProductDTOs = new HashSet<>();\n+            addProvidedProducts(derivedProducts, derivedProvidedProductDTOs);\n+            dest.setDerivedProvidedProducts(derivedProvidedProductDTOs);\n+\n         }\n \n         return dest;\n     }\n+\n+    private void addProvidedProducts(Collection<Product> providedProducts,\n+        Set<PoolDTO.ProvidedProductDTO> providedProductDTOs) {\n+\n+        if (providedProducts == null || providedProducts.isEmpty()) {\n+            return;\n+        }\n+\n+        for (Product product : providedProducts) {\n+            if (product != null) {\n+                providedProductDTOs.add(new PoolDTO.ProvidedProductDTO(product.getId(), product.getName()));\n+                addProvidedProducts(product.getProvidedProducts(), providedProductDTOs);\n+            }\n+        }\n+    }\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTkzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366415931", "bodyText": "Add the provided product to the product itself up on line 2208.", "author": "Ceiu", "createdAt": "2020-01-14T15:48:35Z", "path": "server/src/test/java/org/candlepin/policy/AutobindRulesTest.java", "diffHunk": "@@ -2205,7 +2209,7 @@ public void testSelectBestPoolsShouldSelectBothPoolsInStackWhenOneOfThemProvides\n         Pool MCT80 = TestUtil.createPool(owner, prodMCT80);\n         MCT80.setId(\"MCT80\");\n         MCT80.setQuantity(1L);\n-        MCT80.addProvidedProduct(product69);\n+        MCT80.getProduct().addProvidedProduct(product69);", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3OTU0Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368979542", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-01-21T12:46:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNTkzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "2bceff3564aa3f8d037dae223e7f4d389b8e9546", "chunk": "diff --git a/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java b/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java\nindex 1c36d093a..7c063a02b 100644\n--- a/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java\n+++ b/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java\n\n@@ -2206,10 +2206,10 @@ public class AutobindRulesTest {\n             null, null);\n         prodMCT80.setAttribute(Product.Attributes.STACKING_ID, \"bob\");\n         prodMCT80.setAttribute(\"multi-entitlement\", \"yes\");\n+        prodMCT80.addProvidedProduct(product69);\n         Pool MCT80 = TestUtil.createPool(owner, prodMCT80);\n         MCT80.setId(\"MCT80\");\n         MCT80.setQuantity(1L);\n-        MCT80.getProduct().addProvidedProduct(product69);\n \n         List<Pool> pools = new ArrayList<>();\n         pools.add(MCT1650);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNjYxMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r366416610", "bodyText": "Add these to the product directly during product declaration.", "author": "Ceiu", "createdAt": "2020-01-14T15:49:40Z", "path": "server/src/test/java/org/candlepin/policy/AutobindRulesTest.java", "diffHunk": "@@ -2707,14 +2711,14 @@ public void testShouldSelectPoolWhenRoleMatchesButOtherSysPurposeAttributesAndSo\n         prodMCT1650.setAttribute(Product.Attributes.RAM, \"19960912\");\n         Pool MCT1650 = TestUtil.createPool(owner, prodMCT1650);\n         MCT1650.setId(\"MCT1650\");\n-        MCT1650.addProvidedProduct(product69);\n+        MCT1650.getProduct().addProvidedProduct(product69);", "originalCommit": "361b417644f449411fea4ba34e815acca5d3150e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4MDAwNA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r368980004", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-01-21T12:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxNjYxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2bceff3564aa3f8d037dae223e7f4d389b8e9546", "chunk": "diff --git a/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java b/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java\nindex 1c36d093a..7c063a02b 100644\n--- a/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java\n+++ b/server/src/test/java/org/candlepin/policy/AutobindRulesTest.java\n\n@@ -2709,9 +2709,9 @@ public class AutobindRulesTest {\n         prodMCT1650.setAttribute(Product.Attributes.SOCKETS, \"32\");\n         prodMCT1650.setAttribute(Product.Attributes.CORES, \"32\");\n         prodMCT1650.setAttribute(Product.Attributes.RAM, \"19960912\");\n+        prodMCT1650.addProvidedProduct(product69);\n         Pool MCT1650 = TestUtil.createPool(owner, prodMCT1650);\n         MCT1650.setId(\"MCT1650\");\n-        MCT1650.getProduct().addProvidedProduct(product69);\n         MCT1650.setQuantity(1L);\n \n         Product genericProduct = createSysPurposeProduct(null, null, null, null, null);\n"}}, {"oid": "2bceff3564aa3f8d037dae223e7f4d389b8e9546", "url": "https://github.com/candlepin/candlepin/commit/2bceff3564aa3f8d037dae223e7f4d389b8e9546", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-21T12:44:57Z", "type": "forcePushed"}, {"oid": "1d7b0e41d98017aa74d78a2c8632e5bc9eb284ce", "url": "https://github.com/candlepin/candlepin/commit/1d7b0e41d98017aa74d78a2c8632e5bc9eb284ce", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-21T12:56:03Z", "type": "forcePushed"}, {"oid": "6769d650701c3a1df7541b1d586db9b5d75e802d", "url": "https://github.com/candlepin/candlepin/commit/6769d650701c3a1df7541b1d586db9b5d75e802d", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-21T14:08:55Z", "type": "forcePushed"}, {"oid": "4e00f372d913d6ff1fa5e77f1e5fbcf9bab212cc", "url": "https://github.com/candlepin/candlepin/commit/4e00f372d913d6ff1fa5e77f1e5fbcf9bab212cc", "message": "n-tier and hosted test subscription service adapter changes", "committedDate": "2020-01-22T08:27:36Z", "type": "forcePushed"}, {"oid": "811eb79246369eef97c8cf0de18fb23c96eb0c8a", "url": "https://github.com/candlepin/candlepin/commit/811eb79246369eef97c8cf0de18fb23c96eb0c8a", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-23T11:50:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370160969", "bodyText": "I don't think the new method resolveProvidedProducts is needed. We could simply use the existing resolveProduct/resolveProducts methods to lookup any existing provided products we have, assuming they were already created.\nspec tests would have to make sure that the provided products are created first, and then create a marketing product that references them.\nThe only reason the resolveBranding method was created this way was because you can't really create a branding standalone. It is an entity fully owned by a product.", "author": "nikosmoum", "createdAt": "2020-01-23T14:48:26Z", "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java", "diffHunk": "@@ -289,6 +289,8 @@ public ProductInfo createProduct(ProductInfo pinfo) {\n         pdata.setCreated(new Date());\n         pdata.setUpdated(new Date());\n         pdata.setBranding(this.resolveBranding(pinfo.getBranding()));\n+        pdata.setProvidedProducts(this.resolveProvidedProducts(pinfo.getProvidedProducts()));", "originalCommit": "811eb79246369eef97c8cf0de18fb23c96eb0c8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ5Mjg5Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370492892", "bodyText": "This was done to resolve 'verify branding info is correct in json blob' spec test. Provided product is created in non-hosted mode. When the marketing products get created in hosted mode, it doesn't recognize provided product in productMap. Hence for the solution, I added resolveProvidedProducts method.\nPossible approaches :\n\nAs suggested, modify the spec test to create provided product before marketing product in hosted.\nKeeping resolveProvidedProducts without identifying either the provided product is created in hosted or not.", "author": "sonalidhome", "createdAt": "2020-01-24T06:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2MjcyMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370562720", "bodyText": "We should use approach 1 because it is consistent with how the HostedTest adapter works so far. That test already has an if is_hosted? condition; you can use that to create the engineering product either in hosted or in normal mode.", "author": "nikosmoum", "createdAt": "2020-01-24T10:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NDIzMA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370584230", "bodyText": "Did changes as per approach 1.", "author": "sonalidhome", "createdAt": "2020-01-24T11:14:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2MDk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "56ca2d43be290fb99689d017f57876e1f00177ad", "chunk": "diff --git a/server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java b/server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java\nindex 348a77b5b..457c07792 100755\n--- a/server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java\n+++ b/server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java\n\n@@ -289,8 +289,7 @@ public class HostedTestSubscriptionServiceAdapter implements SubscriptionService\n         pdata.setCreated(new Date());\n         pdata.setUpdated(new Date());\n         pdata.setBranding(this.resolveBranding(pinfo.getBranding()));\n-        pdata.setProvidedProducts(this.resolveProvidedProducts(pinfo.getProvidedProducts()));\n-\n+        pdata.setProvidedProducts(this.resolveProducts(pinfo.getProvidedProducts()));\n \n         // Create our mappings...\n         this.productMap.put(pdata.getId(), pdata);\n"}}, {"oid": "56ca2d43be290fb99689d017f57876e1f00177ad", "url": "https://github.com/candlepin/candlepin/commit/56ca2d43be290fb99689d017f57876e1f00177ad", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-24T11:07:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODQxNA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370718414", "bodyText": "Move this block up and add it directly to the product instead of going indirectly through pool.", "author": "Ceiu", "createdAt": "2020-01-24T16:17:57Z", "path": "server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java", "diffHunk": "@@ -75,19 +79,15 @@ protected Pool initSourceObject() {\n         derivedProduct.setAttribute(Product.Attributes.STACKING_ID, \"2221\");\n         source.setDerivedProduct(derivedProduct);\n \n-        ProvidedProduct providedProd = new ProvidedProduct();\n-        providedProd.setProductId(\"provided-product-id-1\");\n-        providedProd.setProductName(\"provided-product-name-1\");\n-        Set<ProvidedProduct> providedProducts = new HashSet<>();\n-        providedProducts.add(providedProd);\n-        source.setProvidedProductDtos(providedProducts);\n+        Product providedProd = new Product();\n+        providedProd.setId(\"provided-product-id-1\");\n+        providedProd.setName(\"provided-product-name-1\");\n+        source.getProduct().addProvidedProduct(providedProd);", "originalCommit": "56ca2d43be290fb99689d017f57876e1f00177ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODU2Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r371068562", "bodyText": "Corrected the adding provided product to product.", "author": "sonalidhome", "createdAt": "2020-01-27T05:30:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODQxNA=="}], "type": "inlineReview", "revised_code": {"commit": "b6f27cc16064a69094fdad93b4192ecb26e1a76f", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java b/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java\nindex aabe79f35..0f190698c 100644\n--- a/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java\n\n@@ -66,29 +66,29 @@ public class PoolTranslatorTest extends AbstractTranslatorTest<Pool, PoolDTO, Po\n \n         source.setAttribute(Pool.Attributes.DEVELOPMENT_POOL, \"true\");\n \n+        Product providedProd = new Product();\n+        providedProd.setId(\"provided-product-id-1\");\n+        providedProd.setName(\"provided-product-name-1\");\n+\n         Product product = new Product();\n         product.setId(\"product-id-2\");\n         product.setName(\"product-name-2\");\n+        product.addProvidedProduct(providedProd);\n         source.setProduct(product);\n \n+        Product derivedProvidedProd = new Product();\n+        derivedProvidedProd.setId(\"derived-provided-product-id-1\");\n+        derivedProvidedProd.setName(\"derived-provided-product-name-1\");\n+\n         Product derivedProduct = new Product();\n         derivedProduct.setId(\"derived-product-id-2\");\n         derivedProduct.setName(\"derived-product-name-2\");\n         derivedProduct.setAttributes(new HashMap<>());\n         derivedProduct.setAttribute(Product.Attributes.ARCHITECTURE, \"POWER\");\n         derivedProduct.setAttribute(Product.Attributes.STACKING_ID, \"2221\");\n+        derivedProduct.addProvidedProduct(derivedProvidedProd);\n         source.setDerivedProduct(derivedProduct);\n \n-        Product providedProd = new Product();\n-        providedProd.setId(\"provided-product-id-1\");\n-        providedProd.setName(\"provided-product-name-1\");\n-        source.getProduct().addProvidedProduct(providedProd);\n-\n-        Product derivedProvidedProd = new Product();\n-        derivedProvidedProd.setId(\"derived-provided-product-id-1\");\n-        derivedProvidedProd.setName(\"derived-provided-product-name-1\");\n-        source.getDerivedProduct().addProvidedProduct(derivedProvidedProd);\n-\n         return source;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODUxOA==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r370718518", "bodyText": "Add this directly to the derived product instead.", "author": "Ceiu", "createdAt": "2020-01-24T16:18:09Z", "path": "server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java", "diffHunk": "@@ -75,19 +79,15 @@ protected Pool initSourceObject() {\n         derivedProduct.setAttribute(Product.Attributes.STACKING_ID, \"2221\");\n         source.setDerivedProduct(derivedProduct);\n \n-        ProvidedProduct providedProd = new ProvidedProduct();\n-        providedProd.setProductId(\"provided-product-id-1\");\n-        providedProd.setProductName(\"provided-product-name-1\");\n-        Set<ProvidedProduct> providedProducts = new HashSet<>();\n-        providedProducts.add(providedProd);\n-        source.setProvidedProductDtos(providedProducts);\n+        Product providedProd = new Product();\n+        providedProd.setId(\"provided-product-id-1\");\n+        providedProd.setName(\"provided-product-name-1\");\n+        source.getProduct().addProvidedProduct(providedProd);\n \n-        ProvidedProduct derivedProvidedProd = new ProvidedProduct();\n-        derivedProvidedProd.setProductId(\"derived-provided-product-id-1\");\n-        derivedProvidedProd.setProductName(\"derived-provided-product-name-1\");\n-        Set<ProvidedProduct> derivedProvidedProducts = new HashSet<>();\n-        derivedProvidedProducts.add(derivedProvidedProd);\n-        source.setDerivedProvidedProductDtos(derivedProvidedProducts);\n+        Product derivedProvidedProd = new Product();\n+        derivedProvidedProd.setId(\"derived-provided-product-id-1\");\n+        derivedProvidedProd.setName(\"derived-provided-product-name-1\");\n+        source.getDerivedProduct().addProvidedProduct(derivedProvidedProd);", "originalCommit": "56ca2d43be290fb99689d017f57876e1f00177ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODU3Mg==", "url": "https://github.com/candlepin/candlepin/pull/2565#discussion_r371068572", "bodyText": "Corrected the adding provided product to product.", "author": "sonalidhome", "createdAt": "2020-01-27T05:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcxODUxOA=="}], "type": "inlineReview", "revised_code": {"commit": "b6f27cc16064a69094fdad93b4192ecb26e1a76f", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java b/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java\nindex aabe79f35..0f190698c 100644\n--- a/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/rules/v1/PoolTranslatorTest.java\n\n@@ -66,29 +66,29 @@ public class PoolTranslatorTest extends AbstractTranslatorTest<Pool, PoolDTO, Po\n \n         source.setAttribute(Pool.Attributes.DEVELOPMENT_POOL, \"true\");\n \n+        Product providedProd = new Product();\n+        providedProd.setId(\"provided-product-id-1\");\n+        providedProd.setName(\"provided-product-name-1\");\n+\n         Product product = new Product();\n         product.setId(\"product-id-2\");\n         product.setName(\"product-name-2\");\n+        product.addProvidedProduct(providedProd);\n         source.setProduct(product);\n \n+        Product derivedProvidedProd = new Product();\n+        derivedProvidedProd.setId(\"derived-provided-product-id-1\");\n+        derivedProvidedProd.setName(\"derived-provided-product-name-1\");\n+\n         Product derivedProduct = new Product();\n         derivedProduct.setId(\"derived-product-id-2\");\n         derivedProduct.setName(\"derived-product-name-2\");\n         derivedProduct.setAttributes(new HashMap<>());\n         derivedProduct.setAttribute(Product.Attributes.ARCHITECTURE, \"POWER\");\n         derivedProduct.setAttribute(Product.Attributes.STACKING_ID, \"2221\");\n+        derivedProduct.addProvidedProduct(derivedProvidedProd);\n         source.setDerivedProduct(derivedProduct);\n \n-        Product providedProd = new Product();\n-        providedProd.setId(\"provided-product-id-1\");\n-        providedProd.setName(\"provided-product-name-1\");\n-        source.getProduct().addProvidedProduct(providedProd);\n-\n-        Product derivedProvidedProd = new Product();\n-        derivedProvidedProd.setId(\"derived-provided-product-id-1\");\n-        derivedProvidedProd.setName(\"derived-provided-product-name-1\");\n-        source.getDerivedProduct().addProvidedProduct(derivedProvidedProd);\n-\n         return source;\n     }\n \n"}}, {"oid": "b6f27cc16064a69094fdad93b4192ecb26e1a76f", "url": "https://github.com/candlepin/candlepin/commit/b6f27cc16064a69094fdad93b4192ecb26e1a76f", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-27T05:26:19Z", "type": "commit"}, {"oid": "b6f27cc16064a69094fdad93b4192ecb26e1a76f", "url": "https://github.com/candlepin/candlepin/commit/b6f27cc16064a69094fdad93b4192ecb26e1a76f", "message": "ENT-1829: Populate provided products and derived provided products\ninto org.candlepin.dto.rules.v1.PoolDTO from product model\n\n - Updated Translator, JUnit and rspec files.", "committedDate": "2020-01-27T05:26:19Z", "type": "forcePushed"}]}