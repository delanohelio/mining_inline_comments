{"pr_number": 2633, "pr_title": "ENT-1865:\u00a0Port RoleDTO to openapi spec", "pr_createdAt": "2020-03-05T10:48:51Z", "pr_url": "https://github.com/candlepin/candlepin/pull/2633", "timeline": [{"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b", "url": "https://github.com/candlepin/candlepin/commit/988cf578597b7b11636cc926ff2da6c9f4e88a7b", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-05T10:56:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MjU5OQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388782599", "bodyText": "You can use ArrayList constructor instead of going through stream.\nnew ArrayList<UserDTO>(users)\nSecond point. I know it was already there, but peek is intended mainly for debugging. Map would be much clearer.\n.map(e -> e.users(new ArrayList<>(users)));", "author": "Januson", "createdAt": "2020-03-06T09:00:30Z", "path": "server/src/main/java/org/candlepin/resource/UserResource.java", "diffHunk": "@@ -155,7 +156,7 @@ public UserDTO getUserInfo(@PathParam(\"username\") @Verify(User.class) String use\n             // to avoid leaking role details about other users.\n             return roles.stream()\n                 .map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class))\n-                .peek(e -> e.setUsers(users));\n+                .peek(e -> e.setUsers(users.stream().collect(Collectors.toList())));", "originalCommit": "988cf578597b7b11636cc926ff2da6c9f4e88a7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MjY5OQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388842699", "bodyText": "Updated to Map.", "author": "sonalidhome", "createdAt": "2020-03-06T11:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MjU5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "chunk": "diff --git a/server/src/main/java/org/candlepin/resource/UserResource.java b/server/src/main/java/org/candlepin/resource/UserResource.java\nindex 5967aa0bf..ea6c79224 100644\n--- a/server/src/main/java/org/candlepin/resource/UserResource.java\n+++ b/server/src/main/java/org/candlepin/resource/UserResource.java\n\n@@ -156,7 +156,7 @@ public class UserResource {\n             // to avoid leaking role details about other users.\n             return roles.stream()\n                 .map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class))\n-                .peek(e -> e.setUsers(users.stream().collect(Collectors.toList())));\n+                .map(e -> e.users(new ArrayList<>(users)));\n         }\n \n         return Stream.<RoleDTO>empty();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NDUwNQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388784505", "bodyText": "There might be a typo. Comment says that password should be allways null on the DTO but we are testing for not null.", "author": "Januson", "createdAt": "2020-03-06T09:04:45Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.User;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the UserDTOTranslator class.\n+ */\n+public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User, UserDTOTranslator> {\n+\n+    protected UserDTOTranslator translator = new UserDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator, UserDTO.class, User.class);\n+    }\n+\n+    @Override\n+    protected UserDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected UserDTO initSourceObject() {\n+        UserDTO userDTO = new UserDTO()\n+            .id(\"user_id\")\n+            .username(\"user_username\")\n+            .password(\"user_password\")\n+            .superAdmin(true);\n+\n+        return userDTO;\n+    }\n+\n+    @Override\n+    protected User initDestinationObject() {\n+        return new User();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(UserDTO source, User dest, boolean childrenGenerated) {\n+        if (source != null) {\n+            // This DTO does not have any nested objects, so we don't need to worry about the\n+            // childrenGenerated flag\n+\n+            assertEquals(source.getId(), dest.getId());\n+            assertEquals(source.getUsername(), dest.getUsername());\n+            assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n+\n+            // Under no circumstance should we be copying over the password field on translation.\n+            // This should always be null on the DTO.", "originalCommit": "988cf578597b7b11636cc926ff2da6c9f4e88a7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MjY0NA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388842644", "bodyText": "Fixed.", "author": "sonalidhome", "createdAt": "2020-03-06T11:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NDUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java\nindex bd466a78e..bf4e8469e 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java\n\n@@ -66,8 +66,6 @@ public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User,\n             assertEquals(source.getUsername(), dest.getUsername());\n             assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n \n-            // Under no circumstance should we be copying over the password field on translation.\n-            // This should always be null on the DTO.\n             assertNotNull(source.getPassword());\n             assertNotNull(dest.getPassword());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4Nzc1MA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388787750", "bodyText": "There is no need to be explicit with these type arguments. JVM can infer them so they can be omited.\nCollections.emptySet()", "author": "Januson", "createdAt": "2020-03-06T09:12:13Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override\n+    public Role translate(RoleDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public Role translate(ModelTranslator modelTranslator, RoleDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new Role()) : null;\n+    }\n+\n+    @Override\n+    public Role populate(RoleDTO source, Role destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public Role populate(ModelTranslator modelTranslator, RoleDTO source, Role destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setName(source.getName());\n+\n+        if (modelTranslator != null) {\n+            // Users\n+            List<UserDTO> users = source.getUsers();\n+\n+            if (users != null) {\n+                destination.setUsers(users.stream()\n+                    .map(modelTranslator.getStreamMapper(UserDTO.class, User.class))\n+                    .collect(Collectors.toSet()));\n+            }\n+            else {\n+                destination.setUsers(Collections.<User>emptySet());\n+            }\n+\n+            // Permissions\n+            List<PermissionBlueprintDTO> permissions = source.getPermissions();\n+\n+            if (permissions != null) {\n+                destination.setPermissions(permissions.stream()\n+                    .map(modelTranslator.getStreamMapper(PermissionBlueprintDTO.class,\n+                    PermissionBlueprint.class))\n+                    .collect(Collectors.toSet()));\n+            }\n+            else {\n+                destination.setPermissions(Collections.<PermissionBlueprint>emptySet());", "originalCommit": "988cf578597b7b11636cc926ff2da6c9f4e88a7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MjYwNw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388842607", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-06T11:04:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4Nzc1MA=="}], "type": "inlineReview", "revised_code": {"commit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java\nindex 66fc9b457..ea7f69ab5 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java\n\n@@ -72,7 +72,7 @@ public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n                     .collect(Collectors.toSet()));\n             }\n             else {\n-                destination.setUsers(Collections.<User>emptySet());\n+                destination.setUsers(Collections.emptySet());\n             }\n \n             // Permissions\n"}}, {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "url": "https://github.com/candlepin/candlepin/commit/9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-06T10:37:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMTA4NQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389611085", "bodyText": "In addition to checking these for null, now that TimestampedEntityTranslator is not extended, we need to manually also translate the created/updated fields.", "author": "nikosmoum", "createdAt": "2020-03-09T11:48:29Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java", "diffHunk": "@@ -60,17 +60,23 @@ public PermissionBlueprintDTO populate(PermissionBlueprint source, PermissionBlu\n     public PermissionBlueprintDTO populate(ModelTranslator translator, PermissionBlueprint source,\n         PermissionBlueprintDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzc2MA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391003760", "bodyText": "Added the steps to translate created/updated.", "author": "sonalidhome", "createdAt": "2020-03-11T14:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMTA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java\nindex 31d276521..be1695877 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java\n\n@@ -68,10 +70,15 @@ public class PermissionBlueprintTranslator implements\n             throw new IllegalArgumentException(\"destination is null\");\n         }\n \n+\n         PermissionType type = source.getType();\n         Access access = source.getAccess();\n \n-        dest.id(source.getId())\n+        dest.created(source.getCreated() != null ?\n+                source.getCreated().toInstant().atOffset(ZoneOffset.UTC) : null)\n+            .updated(source.getUpdated() != null ?\n+                source.getUpdated().toInstant().atOffset(ZoneOffset.UTC) : null)\n+            .id(source.getId())\n             .type(type != null ? type.name() : null)\n             .access(access != null ? access.name() : null);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMjI3Nw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389612277", "bodyText": "The created/updated fields also need to be translated here", "author": "nikosmoum", "createdAt": "2020-03-09T11:51:22Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override\n+    public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint translate(ModelTranslator modelTranslator, PermissionBlueprintDTO source) {\n+        return source != null ?\n+            this.populate(modelTranslator, source, new PermissionBlueprint()) : null;\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(ModelTranslator modelTranslator,\n+        PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzg4Mg==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391003882", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-03-11T14:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMjI3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\nindex 03f48c835..7a45bce95 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\n\n@@ -22,6 +22,8 @@ import org.candlepin.dto.ObjectTranslator;\n import org.candlepin.model.Owner;\n import org.candlepin.model.PermissionBlueprint;\n \n+import java.util.Date;\n+\n /**\n  * The PermissionBlueprintDTOTranslator provides translation\n  * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389615414", "bodyText": "A newline above this would be good for readability", "author": "nikosmoum", "createdAt": "2020-03-09T11:58:31Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwNDAwOA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391004008", "bodyText": "Added.", "author": "sonalidhome", "createdAt": "2020-03-11T14:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MDcxMw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391480713", "bodyText": "empty line should be above the @Override, not between class definition and javadoc", "author": "nikosmoum", "createdAt": "2020-03-12T09:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjIzMw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152233", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-13T10:43:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\nindex 03f48c835..7a45bce95 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\n\n@@ -22,6 +22,8 @@ import org.candlepin.dto.ObjectTranslator;\n import org.candlepin.model.Owner;\n import org.candlepin.model.PermissionBlueprint;\n \n+import java.util.Date;\n+\n /**\n  * The PermissionBlueprintDTOTranslator provides translation\n  * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTg4OQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389615889", "bodyText": "If we're no longer using a translator to translate the owner, then the owner translation should move outside of the if(translator != null) block. And since there are no other entities being translated by a translator, then that block can be removed completely.", "author": "nikosmoum", "createdAt": "2020-03-09T11:59:32Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java", "diffHunk": "@@ -72,7 +70,18 @@ public PermissionBlueprintDTO populate(ModelTranslator translator, PermissionBlu\n         dest.setAccess(source.getAccessLevel());\n \n         if (translator != null) {\n-            dest.setOwner(translator.translate(source.getOwner(), OwnerDTO.class));\n+\n+            if (source.getOwner() != null) {", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwODc1Mw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391008753", "bodyText": "Agreed, PremissionBlueprintInfo returns OwnerInfo. It does return getKey(). Hence now translated the only Key from info to DTO.", "author": "sonalidhome", "createdAt": "2020-03-11T14:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTg4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java\nindex 07da4672c..c8f2e5d5a 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java\n\n@@ -69,19 +69,8 @@ public class PermissionBlueprintInfoTranslator implements\n         dest.setType(source.getTypeName());\n         dest.setAccess(source.getAccessLevel());\n \n-        if (translator != null) {\n-\n-            if (source.getOwner() != null) {\n-                OwnerDTO owner = translator.translate(source.getOwner(), OwnerDTO.class);\n-\n-                NestedOwnerDTO ownerDTO = new NestedOwnerDTO()\n-                    .displayName(owner.getDisplayName())\n-                    .href(owner.getHref())\n-                    .id(owner.getId())\n-                    .key(owner.getKey());\n-\n-                dest.setOwner(ownerDTO);\n-            }\n+        if(source.getOwner() != null) {\n+            dest.setOwner(new NestedOwnerDTO().key(source.getOwner().getKey()));\n         }\n         else {\n             dest.setOwner(null);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389616393", "bodyText": "Same here; Newline for readabiity", "author": "nikosmoum", "createdAt": "2020-03-09T12:00:45Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwOTkxMA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391009910", "bodyText": "Added.", "author": "sonalidhome", "createdAt": "2020-03-11T14:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTQ5Ng==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391481496", "bodyText": "Same here: the space needs to be between class definition and @Override, not javadoc and class definition", "author": "nikosmoum", "createdAt": "2020-03-12T09:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjI4Nw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152287", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-13T10:43:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java\nindex ea7f69ab5..7bce6da76 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java\n\n@@ -24,11 +24,13 @@ import org.candlepin.model.User;\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n+import java.util.Set;\n import java.util.stream.Collectors;\n \n /**\n  * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n  */\n+\n public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n     @Override\n     public Role translate(RoleDTO source) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389617204", "bodyText": "Same here: newline above this for readability", "author": "nikosmoum", "createdAt": "2020-03-09T12:02:43Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMDA0Mw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391010043", "bodyText": "Added.", "author": "sonalidhome", "createdAt": "2020-03-11T14:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4ODMyMQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391488321", "bodyText": "Same here: the space needs to be between class definition and @OverRide, not javadoc and class definition", "author": "nikosmoum", "createdAt": "2020-03-12T09:18:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjM2MA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152360", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-13T10:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\nindex 76800088f..f181b93b6 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\n\n@@ -25,6 +25,7 @@ import java.util.Date;\n /**\n  * The UserDTOTranslator provides translation from UserDTO to User model objects.\n  */\n+\n public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n     @Override\n     public User translate(UserDTO source) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMDA4Mg==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389620082", "bodyText": "The User.setPassword method is already hashing the password, so here you're hashing it first before putting it as an argument, which means it will re-hash the hashed password. If you check the User class, both setPassword and setHashedPassword are setting the same field (one by hashing it first, the other without), so there is no need to call both setters. I'd remove the setPassword here, and leave the next call as is (setHashedPassword)", "author": "nikosmoum", "createdAt": "2020-03-09T12:09:20Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override\n+    public User translate(UserDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public User translate(ModelTranslator modelTranslator, UserDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new User()) : null;\n+    }\n+\n+    @Override\n+    public User populate(UserDTO source, User destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public User populate(ModelTranslator modelTranslator, UserDTO source, User destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setUsername(source.getUsername());\n+        destination.setSuperAdmin(source.getSuperAdmin());\n+        destination.setPassword(source.getPassword() != null ?\n+            Util.hash(source.getPassword()) : null);", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMDgzNg==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391010836", "bodyText": "Agreed, Updated.", "author": "sonalidhome", "createdAt": "2020-03-11T14:28:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMDA4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\nindex 76800088f..f181b93b6 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\n\n@@ -25,6 +25,7 @@ import java.util.Date;\n /**\n  * The UserDTOTranslator provides translation from UserDTO to User model objects.\n  */\n+\n public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n     @Override\n     public User translate(UserDTO source) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMjU4Nw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389622587", "bodyText": "The User class holds this field as a primitive boolean, while the DTO as a boxed Boolean object, so we should have a null check here, because setting the primitive boolean to null would cause an NPE. In case the source's value is null, we should default the destination value (false).", "author": "nikosmoum", "createdAt": "2020-03-09T12:15:12Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override\n+    public User translate(UserDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public User translate(ModelTranslator modelTranslator, UserDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new User()) : null;\n+    }\n+\n+    @Override\n+    public User populate(UserDTO source, User destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public User populate(ModelTranslator modelTranslator, UserDTO source, User destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setUsername(source.getUsername());\n+        destination.setSuperAdmin(source.getSuperAdmin());", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMTQwNw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391011407", "bodyText": "Yep, Potential NPE corrected.", "author": "sonalidhome", "createdAt": "2020-03-11T14:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMjU4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\nindex 76800088f..f181b93b6 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java\n\n@@ -25,6 +25,7 @@ import java.util.Date;\n /**\n  * The UserDTOTranslator provides translation from UserDTO to User model objects.\n  */\n+\n public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n     @Override\n     public User translate(UserDTO source) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMjk0OA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389632948", "bodyText": "If you notice the current RoleDTO, it is throwing IllegalArgumentExceptions in case during setUsers or setPermissions, in case any of the elements within those collections are null. Now that we don't have control over the setters, we can't do that, so we need another way to validate the collections. This is where the DTOValidator class comes in (it was introduced in my ActivationKeyDTO PR).\nBefore translating here, you should add a call to the DTOValidator to check those two collections as such:\nvalidator.validateCollectionElementsNotNull(dto::getUsers, update::getPermissions);", "author": "nikosmoum", "createdAt": "2020-03-09T12:37:16Z", "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -154,7 +156,7 @@ public RoleDTO createRole(@ApiParam(name = \"role\", required = true) RoleDTO dto)\n             throw new ConflictException(this.i18n.tr(\"Role already exists: {0}\", dto.getName()));\n         }\n \n-        RoleInfo role = this.userService.createRole(dto);\n+        RoleInfo role = this.userService.createRole(this.modelTranslator.translate(dto, Role.class));", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMjQwMA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391012400", "bodyText": "Added.", "author": "sonalidhome", "createdAt": "2020-03-11T14:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMjk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/resource/RoleResource.java b/server/src/main/java/org/candlepin/resource/RoleResource.java\nindex 185622754..47c4350d1 100644\n--- a/server/src/main/java/org/candlepin/resource/RoleResource.java\n+++ b/server/src/main/java/org/candlepin/resource/RoleResource.java\n\n@@ -156,6 +160,7 @@ public class RoleResource {\n             throw new ConflictException(this.i18n.tr(\"Role already exists: {0}\", dto.getName()));\n         }\n \n+        validator.validateCollectionElementsNotNull(dto::getUsers, dto::getPermissions);\n         RoleInfo role = this.userService.createRole(this.modelTranslator.translate(dto, Role.class));\n         return this.modelTranslator.translate(role, RoleDTO.class);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMzQ0Ng==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389633446", "bodyText": "Same here: before translating, use the DTOValidator to validate there are no null elements in the users and permissions collections", "author": "nikosmoum", "createdAt": "2020-03-09T12:38:25Z", "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -174,7 +176,8 @@ public RoleDTO updateRole(@PathParam(\"role_name\") String roleName,\n         // generation\n         this.fetchRoleByName(roleName);\n \n-        RoleInfo role = this.userService.updateRole(roleName, dto);\n+        RoleInfo role = this.userService.updateRole(roleName,", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMjU1MA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391012550", "bodyText": "Added.", "author": "sonalidhome", "createdAt": "2020-03-11T14:30:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMzQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/main/java/org/candlepin/resource/RoleResource.java b/server/src/main/java/org/candlepin/resource/RoleResource.java\nindex 185622754..47c4350d1 100644\n--- a/server/src/main/java/org/candlepin/resource/RoleResource.java\n+++ b/server/src/main/java/org/candlepin/resource/RoleResource.java\n\n@@ -176,6 +181,8 @@ public class RoleResource {\n         // generation\n         this.fetchRoleByName(roleName);\n \n+        validator.validateCollectionElementsNotNull(dto::getUsers, dto::getPermissions);\n+\n         RoleInfo role = this.userService.updateRole(roleName,\n             this.modelTranslator.translate(dto, Role.class));\n         return this.modelTranslator.translate(role, RoleDTO.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MjM1Mw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389642353", "bodyText": "these should all be assertEquals(<source value>, <destination value>)", "author": "nikosmoum", "createdAt": "2020-03-09T12:56:46Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.Owner;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Test suite for the NestedOwnerDTOTranslator class.\n+ */\n+public class NestedOwnerDTOTranslatorTest extends\n+    AbstractTranslatorTest<NestedOwnerDTO, Owner, NestedOwnerDTOTranslator> {\n+\n+    protected NestedOwnerDTOTranslator translator = new NestedOwnerDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator,\n+            NestedOwnerDTO.class, Owner.class);\n+    }\n+\n+    @Override\n+    protected NestedOwnerDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected NestedOwnerDTO initSourceObject() {\n+        NestedOwnerDTO owner = new NestedOwnerDTO();\n+\n+        owner.setId(\"owner_id\");\n+        owner.setKey(\"owner_key\");\n+        owner.setDisplayName(\"owner_name\");\n+\n+        return owner;\n+    }\n+\n+    @Override\n+    protected Owner initDestinationObject() {\n+        return new Owner();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(NestedOwnerDTO source, Owner dest,\n+        boolean childrenGenerated) {\n+\n+        if (source != null) {\n+            assertNotNull(dest.getId());\n+            assertEquals(source.getKey(), dest.getKey());\n+            assertNotNull(dest.getDisplayName());", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMjc5Mw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391012793", "bodyText": "Updated all.", "author": "sonalidhome", "createdAt": "2020-03-11T14:30:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MjM1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java\nindex 8d66e23d8..b04e2bb75 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java\n\n@@ -61,9 +61,9 @@ public class NestedOwnerDTOTranslatorTest extends\n         boolean childrenGenerated) {\n \n         if (source != null) {\n-            assertNotNull(dest.getId());\n+            assertEquals(source.getId(), dest.getId());\n             assertEquals(source.getKey(), dest.getKey());\n-            assertNotNull(dest.getDisplayName());\n+            assertEquals(source.getDisplayName(), dest.getDisplayName());\n         }\n         else {\n             assertNull(dest);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0ODUxOQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389648519", "bodyText": "We shouldn'e be creating any DTOs (or entities) in a translation verification test. In fact, since we moved to a manual translation of NestedOWner in PermissionBlueprintInfoTranslator, the verification should happen outside of the if (childrenGenerated) block, by a series of assertEquals calls (one for each field), and the ownerTranslatorTest field should be removed (as it is no longer needed).", "author": "nikosmoum", "createdAt": "2020-03-09T13:09:35Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java", "diffHunk": "@@ -78,7 +78,14 @@ protected void verifyOutput(PermissionBlueprintInfo source, PermissionBlueprintD\n             assertEquals(source.getAccessLevel(), dest.getAccess());\n \n             if (childrenGenerated) {\n-                this.ownerTranslatorTest.verifyOutput(source.getOwner(), dest.getOwner(), true);\n+\n+                OwnerDTO ownerDTO = new OwnerDTO();\n+                ownerDTO.setId(dest.getOwner().getId());\n+                ownerDTO.setKey(dest.getOwner().getKey());\n+                ownerDTO.setDisplayName(dest.getOwner().getDisplayName());\n+\n+                this.ownerTranslatorTest.verifyOutput(source.getOwner(),\n+                    ownerDTO, true);", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMzYxOQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391013619", "bodyText": "Corrected it.", "author": "sonalidhome", "createdAt": "2020-03-11T14:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0ODUxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java\nindex 1425ba723..675130655 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java\n\n@@ -77,18 +78,8 @@ public class PermissionBlueprintInfoTranslatorTest extends\n             assertEquals(source.getTypeName(), dest.getType());\n             assertEquals(source.getAccessLevel(), dest.getAccess());\n \n-            if (childrenGenerated) {\n-\n-                OwnerDTO ownerDTO = new OwnerDTO();\n-                ownerDTO.setId(dest.getOwner().getId());\n-                ownerDTO.setKey(dest.getOwner().getKey());\n-                ownerDTO.setDisplayName(dest.getOwner().getDisplayName());\n-\n-                this.ownerTranslatorTest.verifyOutput(source.getOwner(),\n-                    ownerDTO, true);\n-            }\n-            else {\n-                assertNull(dest.getOwner());\n+            if(source.getOwner() != null && dest.getOwner() != null) {\n+                assertEquals(source.getOwner().getKey(), dest.getOwner().getKey());\n             }\n         }\n         else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MDcxOQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389650719", "bodyText": "No need to create a new Date object and then transform it into OffsetDateTime. You can use OffsetDateTime.now() directly", "author": "nikosmoum", "createdAt": "2020-03-09T13:13:54Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMzc2NQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391013765", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-11T14:32:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MDcxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java\nindex 0de77a674..3cf57485e 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java\n\n@@ -21,10 +21,11 @@ import org.candlepin.model.PermissionBlueprint;\n import org.candlepin.model.Role;\n import org.candlepin.model.User;\n \n-import java.time.ZoneOffset;\n+import java.time.OffsetDateTime;\n import java.util.ArrayList;\n-import java.util.Date;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389652031", "bodyText": "should be assertEquals between source and dest value", "author": "nikosmoum", "createdAt": "2020-03-09T13:16:23Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));\n+\n+        return source;\n+    }\n+\n+    @Override\n+    protected Role initDestinationObject() {\n+        return new Role();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(RoleDTO source, Role dest, boolean childrenGenerated) {\n+        if (source != null) {\n+\n+            assertNotNull(dest.getId());", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMzg3OA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391013878", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-11T14:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwMDYyNQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391500625", "bodyText": "This should be assertEquals(source.getId(), dest.getId());", "author": "nikosmoum", "createdAt": "2020-03-12T09:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjQ5NA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152494", "bodyText": "Updated.", "author": "sonalidhome", "createdAt": "2020-03-13T10:43:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java\nindex 0de77a674..3cf57485e 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java\n\n@@ -21,10 +21,11 @@ import org.candlepin.model.PermissionBlueprint;\n import org.candlepin.model.Role;\n import org.candlepin.model.User;\n \n-import java.time.ZoneOffset;\n+import java.time.OffsetDateTime;\n import java.util.ArrayList;\n-import java.util.Date;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1Njk0NQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389656945", "bodyText": "Even though when translating from User to UserDTO we shouldn't be translating the password, when doing the opposite, the password should get translated and hashed. So I'd expect this kind of assertion here:\nassertEquals(Util.hash(source.getPassword()), dest.getHashedPassword())", "author": "nikosmoum", "createdAt": "2020-03-09T13:22:45Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.User;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the UserDTOTranslator class.\n+ */\n+public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User, UserDTOTranslator> {\n+\n+    protected UserDTOTranslator translator = new UserDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator, UserDTO.class, User.class);\n+    }\n+\n+    @Override\n+    protected UserDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected UserDTO initSourceObject() {\n+        UserDTO userDTO = new UserDTO()\n+            .id(\"user_id\")\n+            .username(\"user_username\")\n+            .password(\"user_password\")\n+            .superAdmin(true);\n+\n+        return userDTO;\n+    }\n+\n+    @Override\n+    protected User initDestinationObject() {\n+        return new User();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(UserDTO source, User dest, boolean childrenGenerated) {\n+        if (source != null) {\n+            // This DTO does not have any nested objects, so we don't need to worry about the\n+            // childrenGenerated flag\n+\n+            assertEquals(source.getId(), dest.getId());\n+            assertEquals(source.getUsername(), dest.getUsername());\n+            assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n+\n+            assertNotNull(source.getPassword());\n+            assertNotNull(dest.getPassword());", "originalCommit": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxNDA4NA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391014084", "bodyText": "Done.", "author": "sonalidhome", "createdAt": "2020-03-11T14:32:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1Njk0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java\nindex bf4e8469e..7ab7edfdc 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java\n\n@@ -18,9 +18,9 @@ package org.candlepin.dto.api.v1;\n import org.candlepin.dto.AbstractTranslatorTest;\n import org.candlepin.dto.ModelTranslator;\n import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n \n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n \n /**\n"}}, {"oid": "1d2345c3c85a08baf31d4f1b6165d4754e768638", "url": "https://github.com/candlepin/candlepin/commit/1d2345c3c85a08baf31d4f1b6165d4754e768638", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-11T14:01:38Z", "type": "forcePushed"}, {"oid": "c49558da7aad11bbd0019915d848738ed58417c8", "url": "https://github.com/candlepin/candlepin/commit/c49558da7aad11bbd0019915d848738ed58417c8", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-11T14:20:13Z", "type": "forcePushed"}, {"oid": "d0bc304f781ffaa842799949b15043302cb42a86", "url": "https://github.com/candlepin/candlepin/commit/d0bc304f781ffaa842799949b15043302cb42a86", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-11T14:48:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTEwOA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391481108", "bodyText": "This is setting the Updated date by getting the Created", "author": "nikosmoum", "createdAt": "2020-03-12T09:04:19Z", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+import java.util.Date;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override\n+    public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint translate(ModelTranslator modelTranslator, PermissionBlueprintDTO source) {\n+        return source != null ?\n+            this.populate(modelTranslator, source, new PermissionBlueprint()) : null;\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(ModelTranslator modelTranslator,\n+        PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);", "originalCommit": "d0bc304f781ffaa842799949b15043302cb42a86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjY4Nw==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152687", "bodyText": "Corrected now.", "author": "sonalidhome", "createdAt": "2020-03-13T10:43:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTEwOA=="}], "type": "inlineReview", "revised_code": {"commit": "1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "chunk": "diff --git a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\nindex 63a90bc62..b0c4c6c85 100644\n--- a/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\n+++ b/server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java\n\n@@ -28,9 +28,9 @@ import java.util.Date;\n  * The PermissionBlueprintDTOTranslator provides translation\n  * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n  */\n-\n public class PermissionBlueprintDTOTranslator implements\n     ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+\n     @Override\n     public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n         return this.translate(null, source);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MjY1Mg==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391492652", "bodyText": "There shouldn't be a space between class javadoc and class definition. What I meant in the other comments was that there should be space between class definition and the next thing (in that case the @Override annotation of the first method", "author": "nikosmoum", "createdAt": "2020-03-12T09:26:27Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.Owner;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Test suite for the NestedOwnerDTOTranslator class.\n+ */\n+", "originalCommit": "d0bc304f781ffaa842799949b15043302cb42a86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjgwMQ==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152801", "bodyText": "Understood, done.", "author": "sonalidhome", "createdAt": "2020-03-13T10:44:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MjY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java\nindex 7644fc2ed..b04e2bb75 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java\n\n@@ -24,7 +24,6 @@ import static org.junit.Assert.*;\n /**\n  * Test suite for the NestedOwnerDTOTranslator class.\n  */\n-\n public class NestedOwnerDTOTranslatorTest extends\n     AbstractTranslatorTest<NestedOwnerDTO, Owner, NestedOwnerDTOTranslator> {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MzM2OA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391493368", "bodyText": "Same here (and all other classes), no space between javadoc and class definition", "author": "nikosmoum", "createdAt": "2020-03-12T09:27:43Z", "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the PermissionBlueprintDTOTranslator class.\n+ */\n+", "originalCommit": "d0bc304f781ffaa842799949b15043302cb42a86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjkwOA==", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152908", "bodyText": "yep, removed.", "author": "sonalidhome", "createdAt": "2020-03-13T10:44:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MzM2OA=="}], "type": "inlineReview", "revised_code": {"commit": "1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "chunk": "diff --git a/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java b/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java\nindex 57db58fbc..423e3a2e4 100644\n--- a/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java\n+++ b/server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java\n\n@@ -27,7 +27,6 @@ import static org.junit.Assert.assertNull;\n /**\n  * Test suite for the PermissionBlueprintDTOTranslator class.\n  */\n-\n public class PermissionBlueprintDTOTranslatorTest  extends\n     AbstractTranslatorTest<PermissionBlueprintDTO,\n     PermissionBlueprint, PermissionBlueprintDTOTranslator> {\n"}}, {"oid": "1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "url": "https://github.com/candlepin/candlepin/commit/1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-13T10:40:34Z", "type": "commit"}, {"oid": "1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "url": "https://github.com/candlepin/candlepin/commit/1b3f27ce6ca24d0edbca2b9ef419e9cb679b5fb9", "message": "ENT-1865:\u00a0Port RoleDTO to openapi spec\n - Added specifications\u00a0of\u00a0PermissionBlueprintDTO,\u00a0RoleDTO\u00a0\n   and\u00a0UserDTO\u00a0in yaml file.\n - Added Translator to convert DTOs into Model Entities\n   because\u00a0newly generated DTOs do not implement Info interfaces.\n   1.\u00a0NestedOwnerDTOTranslator\n   2.\u00a0PermissionBlueprintDTOTranslator\n   3.\u00a0RoleDTOTranslator\n   4. UserDTOTranslator\n - Added test suites for above translators\n - Updated the default constructor of\u00a0PermissionBlueprint to the public\n   because\u00a0it is used to create an empty object in\u00a0PermissionBlueprintDTOTranslator.", "committedDate": "2020-03-13T10:40:34Z", "type": "forcePushed"}]}