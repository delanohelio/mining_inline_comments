{"pr_number": 878, "pr_title": "Update to introduce the quarkus qute extension", "pr_createdAt": "2020-03-12T08:07:07Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/878", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NzY0Mg==", "url": "https://github.com/apache/camel-quarkus/pull/878#discussion_r391477642", "bodyText": "Could you please switch the test to work with classpath: URI so that the it is runnable outside Camel Quarkus source tree without any additional setup?", "author": "ppalaga", "createdAt": "2020-03-12T08:57:19Z", "path": "integration-tests/qute/src/main/java/org/apache/camel/quarkus/component/qute/it/QuteRoute.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+\n+package org.apache.camel.quarkus.component.qute.it;\n+\n+import org.apache.camel.builder.RouteBuilder;\n+\n+public class QuteRoute extends RouteBuilder {\n+    @Override\n+    public void configure() throws Exception {\n+        from(\"direct:test\")\n+                .to(\"qute:file:target/classes/hello.txt\");", "originalCommit": "8129cec79b7a441a0e58a88521a2d38d77f7aaf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MDY4OA==", "url": "https://github.com/apache/camel-quarkus/pull/878#discussion_r391480688", "bodyText": "I use the qute:hello.txt but this is failing when running with the native image which can not find the resource.", "author": "zhfeng", "createdAt": "2020-03-12T09:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NzY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4NTI3OA==", "url": "https://github.com/apache/camel-quarkus/pull/878#discussion_r391485278", "bodyText": "That can be fixed, see other extensions how they do it.", "author": "ppalaga", "createdAt": "2020-03-12T09:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NzY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyODIyOA==", "url": "https://github.com/apache/camel-quarkus/pull/878#discussion_r392128228", "bodyText": "can you point it out ? I just search the extensions but could not get the hint. Thanks !", "author": "zhfeng", "createdAt": "2020-03-13T09:54:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NzY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "50b56de7c36bf1d38be8e10268c0a98e03df36f4", "chunk": "diff --git a/integration-tests/qute/src/main/java/org/apache/camel/quarkus/component/qute/it/QuteRoute.java b/integration-tests/qute/src/main/java/org/apache/camel/quarkus/component/qute/it/QuteRoute.java\nindex e35e3135b..56ed1e162 100644\n--- a/integration-tests/qute/src/main/java/org/apache/camel/quarkus/component/qute/it/QuteRoute.java\n+++ b/integration-tests/qute/src/main/java/org/apache/camel/quarkus/component/qute/it/QuteRoute.java\n\n@@ -1,25 +1,19 @@\n /*\n- * JBoss, Home of Professional Open Source.\n- * Copyright 2020, Red Hat, Inc., and individual contributors\n- * as indicated by the @author tags. See the copyright.txt file in the\n- * distribution for a full listing of individual contributors.\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n  *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU Lesser General Public License as\n- * published by the Free Software Foundation; either version 2.1 of\n- * the License, or (at your option) any later version.\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n- * This software is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with this software; if not, write to the Free\n- * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n- * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n-\n package org.apache.camel.quarkus.component.qute.it;\n \n import org.apache.camel.builder.RouteBuilder;\n"}}, {"oid": "50b56de7c36bf1d38be8e10268c0a98e03df36f4", "url": "https://github.com/apache/camel-quarkus/commit/50b56de7c36bf1d38be8e10268c0a98e03df36f4", "message": "separate the compnent codes", "committedDate": "2020-03-12T16:21:10Z", "type": "forcePushed"}, {"oid": "e1855e0935375d74953c708dea6d62ba000185c1", "url": "https://github.com/apache/camel-quarkus/commit/e1855e0935375d74953c708dea6d62ba000185c1", "message": "update to inject the qute engine inside the quarkus", "committedDate": "2020-03-16T04:26:31Z", "type": "forcePushed"}, {"oid": "b0753afb1603eb3ab007c9920c73bfb03b0288a6", "url": "https://github.com/apache/camel-quarkus/commit/b0753afb1603eb3ab007c9920c73bfb03b0288a6", "message": "Update to introduce the quarkus qute in camel extension", "committedDate": "2020-03-16T08:29:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2Mzg3NA==", "url": "https://github.com/apache/camel-quarkus/pull/878#discussion_r392863874", "bodyText": "I think quteEngine will always be null, because CDI does not work in recorders.\nBased on this comment, it looks like they instantiate \"real engine\" only at runtime: https://github.com/quarkusio/quarkus/blob/master/extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/QuteProcessor.java#L176\nActually, we could let the Quarkus Qute extension to validate our user's templates: It looks like it is enough to make sure that our templates are included in the list of TemplatePathBuildItems. As far as I could check, the Quarkus Qute extension produces those for all files under templates. So we should perhaps make it a requirement for the users to store their templates under templates. WDYT?\nIt should be documented in docs/modules/ROOT/pages/extensions/qute.adoc if we go that way. In any case, we should add a link to the Qute guide there https://quarkus.io/guides/qute\nNow, how could we set the \"real\" Qute engine to our Qute component: I think we could try to do something like the OpenTracing extension is doing https://github.com/apache/camel-quarkus/blob/master/extensions/opentracing/runtime/src/main/java/org/apache/camel/quarkus/component/opentracing/CamelOpenTracingRecorder.java#L32", "author": "ppalaga", "createdAt": "2020-03-16T08:53:27Z", "path": "extensions/qute/runtime/src/main/java/org/apache/camel/quarkus/component/qute/CamelQuteRecorder.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.qute;\n+\n+import javax.inject.Inject;\n+\n+import io.quarkus.qute.Engine;\n+import io.quarkus.runtime.RuntimeValue;\n+import io.quarkus.runtime.annotations.Recorder;\n+import org.apache.camel.component.qute.QuteComponent;\n+\n+@Recorder\n+public class CamelQuteRecorder {\n+    @Inject\n+    Engine quteEngine;", "originalCommit": "b0753afb1603eb3ab007c9920c73bfb03b0288a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NDA0Mg==", "url": "https://github.com/apache/camel-quarkus/pull/878#discussion_r392954042", "bodyText": "Good point ! Thanks @ppalaga and I will take a look at this.", "author": "zhfeng", "createdAt": "2020-03-16T11:35:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2Mzg3NA=="}], "type": "inlineReview", "revised_code": {"commit": "a6c40a14071fb747974ab3297030e818574f587b", "chunk": "diff --git a/extensions/qute/runtime/src/main/java/org/apache/camel/quarkus/component/qute/CamelQuteRecorder.java b/extensions/qute/runtime/src/main/java/org/apache/camel/quarkus/component/qute/CamelQuteRecorder.java\nindex be0576fe8..01c391b99 100644\n--- a/extensions/qute/runtime/src/main/java/org/apache/camel/quarkus/component/qute/CamelQuteRecorder.java\n+++ b/extensions/qute/runtime/src/main/java/org/apache/camel/quarkus/component/qute/CamelQuteRecorder.java\n\n@@ -16,8 +16,7 @@\n  */\n package org.apache.camel.quarkus.component.qute;\n \n-import javax.inject.Inject;\n-\n+import io.quarkus.arc.runtime.BeanContainer;\n import io.quarkus.qute.Engine;\n import io.quarkus.runtime.RuntimeValue;\n import io.quarkus.runtime.annotations.Recorder;\n"}}, {"oid": "a6c40a14071fb747974ab3297030e818574f587b", "url": "https://github.com/apache/camel-quarkus/commit/a6c40a14071fb747974ab3297030e818574f587b", "message": "Update to introduce the quarkus qute in camel extension", "committedDate": "2020-03-16T12:04:28Z", "type": "commit"}, {"oid": "a6c40a14071fb747974ab3297030e818574f587b", "url": "https://github.com/apache/camel-quarkus/commit/a6c40a14071fb747974ab3297030e818574f587b", "message": "Update to introduce the quarkus qute in camel extension", "committedDate": "2020-03-16T12:04:28Z", "type": "forcePushed"}]}