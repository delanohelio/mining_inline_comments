{"pr_number": 883, "pr_title": "Add soap dataformat quarkus extension", "pr_createdAt": "2020-03-12T13:50:22Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/883", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NDEwNg==", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391644106", "bodyText": "Could you please remove the System.out.println ?", "author": "ppalaga", "createdAt": "2020-03-12T14:06:27Z", "path": "integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.util.UUID;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@QuarkusTest\n+class SoapTest {\n+\n+    @Test\n+    public void testMarshal() {\n+        final String msg = UUID.randomUUID().toString().replace(\"-\", \"\");\n+        String resp = RestAssured.given()\n+                .contentType(ContentType.TEXT).body(msg).post(\"/soap/marshal\") //\n+                .then().statusCode(201)\n+                .extract().body().asString();\n+        assertThat(resp).contains(\"<ns3:getCustomersByName>\");\n+        assertThat(resp).contains(\"<name>\" + msg + \"</name>\");\n+        assertThat(resp).contains(\"<ns2:Envelope xmlns:ns2=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\");\n+\n+        System.out.println(resp);", "originalCommit": "a0bc750eacb52fbaa777ceb510d996d3ebe40756", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5Nzg1NQ==", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391897855", "bodyText": "The last issue from my PoV.", "author": "ppalaga", "createdAt": "2020-03-12T21:15:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NDEwNg=="}], "type": "inlineReview", "revised_code": {"commit": "1bfe8707523cae946c54ae98cb51750b11410a2a", "chunk": "diff --git a/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java b/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java\nindex 167fde74e..0d3e98a42 100644\n--- a/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java\n+++ b/integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java\n\n@@ -32,7 +32,7 @@ class SoapTest {\n     public void testMarshal() {\n         final String msg = UUID.randomUUID().toString().replace(\"-\", \"\");\n         String resp = RestAssured.given()\n-                .contentType(ContentType.TEXT).body(msg).post(\"/soap/marshal\") //\n+                .contentType(ContentType.TEXT).body(msg).post(\"/soap/marshal?soapVersion=1.1\") //\n                 .then().statusCode(201)\n                 .extract().body().asString();\n         assertThat(resp).contains(\"<ns3:getCustomersByName>\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NTM4NA==", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391645384", "bodyText": "Unless /round is doing something not covered by the above /marshal /unmarshal endpoints, I'd vote for removing it.", "author": "ppalaga", "createdAt": "2020-03-12T14:08:19Z", "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.net.URI;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.soap.it.example.GetCustomersByName;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/soap\")\n+@ApplicationScoped\n+public class SoapResource {\n+\n+    private static final Logger LOG = Logger.getLogger(SoapResource.class);\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/marshal\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshall(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/marshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshalSoap12(String message) throws Exception {\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal-soap12\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/unmarshal\")\n+    @POST\n+    @Consumes(MediaType.APPLICATION_XML)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response unmarshal(String message) throws Exception {\n+        final GetCustomersByName response = producerTemplate.requestBody(\"direct:unmarshal\", message, GetCustomersByName.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response.getName())\n+                .build();\n+    }\n+\n+    @Path(\"/unmarshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.APPLICATION_XML)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response unmarshalSoap12(String message) throws Exception {\n+        final GetCustomersByName response = producerTemplate.requestBody(\"direct:unmarshal-soap12\", message,\n+                GetCustomersByName.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response.getName())\n+                .build();\n+    }\n+\n+    @Path(\"/round\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response round(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+        final String xml = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+        LOG.infof(\"Got response from marshal: %s\", xml);\n+", "originalCommit": "a0bc750eacb52fbaa777ceb510d996d3ebe40756", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY2OTI0OQ==", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391669249", "bodyText": "I was testing if marshaled message could be also un-marshaled. I had some issues with that so I kept it there.", "author": "mmelko", "createdAt": "2020-03-12T14:42:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NTM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "1bfe8707523cae946c54ae98cb51750b11410a2a", "chunk": "diff --git a/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java b/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java\nindex 08ceffb0d..232a03910 100644\n--- a/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java\n+++ b/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java\n\n@@ -24,6 +24,7 @@ import javax.ws.rs.Consumes;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0ODE2OQ==", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391648169", "bodyText": "It looks like /marshal-soap12 and /marshal differ only in the name of the direct endpoint. Could we perhaps have just one rest endpoint with a route URI param, something like https://github.com/apache/camel-quarkus/blob/master/integration-tests/dataformat/src/main/java/org/apache/camel/quarkus/component/dataformat/it/DataformatResource.java#L43-L57\nAnd the same for unmarshal", "author": "ppalaga", "createdAt": "2020-03-12T14:12:17Z", "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.net.URI;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.soap.it.example.GetCustomersByName;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/soap\")\n+@ApplicationScoped\n+public class SoapResource {\n+\n+    private static final Logger LOG = Logger.getLogger(SoapResource.class);\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/marshal\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshall(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/marshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshalSoap12(String message) throws Exception {\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal-soap12\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }", "originalCommit": "a0bc750eacb52fbaa777ceb510d996d3ebe40756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bfe8707523cae946c54ae98cb51750b11410a2a", "chunk": "diff --git a/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java b/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java\nindex 08ceffb0d..232a03910 100644\n--- a/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java\n+++ b/integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java\n\n@@ -24,6 +24,7 @@ import javax.ws.rs.Consumes;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n \n"}}, {"oid": "1bfe8707523cae946c54ae98cb51750b11410a2a", "url": "https://github.com/apache/camel-quarkus/commit/1bfe8707523cae946c54ae98cb51750b11410a2a", "message": "Add soap dataformat quarkus extension\nfix #763", "committedDate": "2020-03-12T16:41:08Z", "type": "forcePushed"}, {"oid": "0db4448664c2def147958d3348ec5e2f4005e9af", "url": "https://github.com/apache/camel-quarkus/commit/0db4448664c2def147958d3348ec5e2f4005e9af", "message": "Add soap dataformat quarkus extension\nfix #763", "committedDate": "2020-03-13T12:25:42Z", "type": "commit"}, {"oid": "0db4448664c2def147958d3348ec5e2f4005e9af", "url": "https://github.com/apache/camel-quarkus/commit/0db4448664c2def147958d3348ec5e2f4005e9af", "message": "Add soap dataformat quarkus extension\nfix #763", "committedDate": "2020-03-13T12:25:42Z", "type": "forcePushed"}]}