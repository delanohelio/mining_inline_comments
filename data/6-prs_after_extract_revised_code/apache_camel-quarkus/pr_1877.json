{"pr_number": 1877, "pr_title": "Fix twitter itest so it initially waits when start polling tweets", "pr_createdAt": "2020-10-06T08:21:29Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1877", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMTExNQ==", "url": "https://github.com/apache/camel-quarkus/pull/1877#discussion_r500121115", "bodyText": "This will prolong the test execution by 1 min even if the message appears in the timeline much earlier. Wouldn't it be better to increase the number of retries? Or wouldn't some shorter initialDelayMs work too? like 10 seconds?", "author": "ppalaga", "createdAt": "2020-10-06T09:06:19Z", "path": "integration-tests/twitter/src/test/java/org/apache/camel/quarkus/component/twitter/CamelTwitterTest.java", "diffHunk": "@@ -80,8 +80,10 @@ public void e2e() {\n         final long sinceId = Long.parseLong(messageId) - 1;\n         /* Check that the message is seen in the timeline by the polling consumer */\n         {\n+            final int initialDelayMs = 60000;\n             final int retries = 5;\n             final int delayMs = 3000;\n+            Thread.sleep(initialDelayMs);", "originalCommit": "1839f7cc37012c143a84ad55ad93ed79837ae470", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MjM0NA==", "url": "https://github.com/apache/camel-quarkus/pull/1877#discussion_r500182344", "bodyText": "@ppalaga Yes, in ideal world, it would be much better, but with such approach it leads to\n429:Returned in API v1.1 when a request cannot be served due to the application's rate limit having been exhausted for the resource. See Rate Limiting in API v1.1.(https://dev.twitter.com/docs/rate-limiting/1.1)", "author": "llowinge", "createdAt": "2020-10-06T10:53:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEyMTExNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7807538a7c936e20bd9c4026e27afed50dae212b", "chunk": "diff --git a/integration-tests/twitter/src/test/java/org/apache/camel/quarkus/component/twitter/CamelTwitterTest.java b/integration-tests/twitter/src/test/java/org/apache/camel/quarkus/component/twitter/CamelTwitterTest.java\nindex 0df1bfef4..e51d69183 100644\n--- a/integration-tests/twitter/src/test/java/org/apache/camel/quarkus/component/twitter/CamelTwitterTest.java\n+++ b/integration-tests/twitter/src/test/java/org/apache/camel/quarkus/component/twitter/CamelTwitterTest.java\n\n@@ -40,39 +45,24 @@ public class CamelTwitterTest {\n                 .then().statusCode(201);\n \n         /* Check that the above message or a message sent by a previous run of this test was polled by the consumer. */\n-        final int initialDelayMs = 60000;\n         final int retries = 5;\n-        final int delayMs = 3000;\n-        String body = null;\n-        boolean passed = false;\n-        Thread.sleep(initialDelayMs);\n-        for (int i = 0; i < retries; i++) {\n-            body = RestAssured.get(\"/twitter/directmessage\").asString();\n-            if (body.contains(msg)) {\n-                /* test passed */\n-                passed = true;\n-                break;\n-            }\n-            if (i + 1 < retries) {\n-                try {\n-                    Thread.sleep(delayMs);\n-                } catch (InterruptedException e) {\n-                    Thread.currentThread().interrupt();\n-                }\n-            }\n-        }\n-        if (!passed) {\n-            Assertions.fail(\"Could not find a message containing \" + msg + \" in user's direct messages within ~\"\n-                    + initialDelayMs + (retries * delayMs) + \" ms; got messages: \" + body);\n-        }\n+        final int delayS = 3;\n+        Awaitility.await()\n+                .pollDelay(testTwitterDelayInitial, TimeUnit.SECONDS)\n+                .pollInterval(delayS, TimeUnit.SECONDS)\n+                .atMost(testTwitterDelayInitial + (retries * delayS), TimeUnit.SECONDS).until(() -> {\n+                    final String body = RestAssured.get(\"/twitter/directmessage\").asString();\n+                    return body.contains(msg);\n+                });\n     }\n \n     @Test\n-    public void e2e() throws InterruptedException {\n+    public void e2e() {\n \n         final String uuid = UUID.randomUUID().toString().replace(\"-\", \"\");\n         final String msg = String.format(\"Hello from camel-quarkus-twitter %s\", uuid);\n         final String expectedMessage = \") \" + msg;\n+        final String searchKeyword = \"camel-quarkus-twitter \" + uuid;\n \n         /* Post a message */\n         final String messageId = RestAssured.given().contentType(ContentType.TEXT).body(msg).post(\"/twitter/timeline\") //\n"}}, {"oid": "7807538a7c936e20bd9c4026e27afed50dae212b", "url": "https://github.com/apache/camel-quarkus/commit/7807538a7c936e20bd9c4026e27afed50dae212b", "message": "Fix twitter itest so it initially waits when start polling tweets", "committedDate": "2020-10-08T13:17:23Z", "type": "commit"}, {"oid": "7807538a7c936e20bd9c4026e27afed50dae212b", "url": "https://github.com/apache/camel-quarkus/commit/7807538a7c936e20bd9c4026e27afed50dae212b", "message": "Fix twitter itest so it initially waits when start polling tweets", "committedDate": "2020-10-08T13:17:23Z", "type": "forcePushed"}, {"oid": "7807538a7c936e20bd9c4026e27afed50dae212b", "url": "https://github.com/apache/camel-quarkus/commit/7807538a7c936e20bd9c4026e27afed50dae212b", "message": "Fix twitter itest so it initially waits when start polling tweets", "committedDate": "2020-10-08T13:17:23Z", "type": "forcePushed"}]}