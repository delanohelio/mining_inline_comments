{"pr_number": 2025, "pr_title": "Camel Avro RPC component native support #1941", "pr_createdAt": "2020-11-24T14:46:10Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/2025", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA==", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r529634094", "bodyText": "I'd vote for configuring the endpoint in the same way here and in AvroRpcRouteBuilder. I personally find the @ConfigProperty fields in AvroRpcRouteBuilder a bit better readable than Camel property expansion.", "author": "ppalaga", "createdAt": "2020-11-24T15:27:25Z", "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.avro.rpc.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestPojo;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestReflection;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.impl.TestReflectionImpl;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+\n+@Path(\"/avro-rpc\")\n+@ApplicationScoped\n+public class AvroRpcResource {\n+\n+    public static final String REFLECTIVE_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.httpServerReflection.port\";\n+    public static final String REFLECTIVE_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.nettyServerReflection.port\";\n+    public static final String SPECIFIC_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.httpServerReflection.port\";\n+    public static final String SPECIFIC_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.nettyServerReflection.port\";\n+    public static final String REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.httpTransceiverReflection.port\";\n+    public static final String REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.nettyTransceiverReflection.port\";\n+    public static final String SPECIFIC_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.httpTransceiverReflection.port\";\n+    public static final String SPECIFIC_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.nettyTransceiverReflection.port\";\n+\n+    private TestReflection httpTestReflection = new TestReflectionImpl(),\n+            nettyTestReflection = new TestReflectionImpl();\n+    private KeyValueProtocol httpKeyValue = new KeyValueProtocolImpl(),\n+            nettyKeyValue = new KeyValueProtocolImpl();\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/reflectionProducerSet\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    public void reflectionProducerSet(@QueryParam(\"protocol\") ProtocolType protocol, String name) throws Exception {\n+        Object[] request = { name };\n+        producerTemplate.requestBody(String.format(\n+                \"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",", "originalCommit": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE2NTQzMQ==", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530165431", "bodyText": "@ppalaga I'm not sure, what do you mean.\nHere is endpoint form AvroRpcResource.java\n\nString.format(\n\"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",\nprotocol,\nprotocol == ProtocolType.http ? REFLECTIVE_HTTP_SERVER_PORT_PARAM : REFLECTIVE_NETTY_SERVER_PORT_PARAM,\nTestReflection.class.getCanonicalName())\n\nHere is a route definition from 'AvroRpcRouteBuilder'\n\nfrom(String.format(\"avro:http:localhost:%d/setTestPojo?protocolClassName=%s&singleParameter=true\", httpPort,\nTestReflection.class.getCanonicalName()))\n....\n\nI don't see much difference here. May I ask you for more information?", "author": "JiriOndrusek", "createdAt": "2020-11-25T07:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE4MDk3Ng==", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530180976", "bodyText": "My point is that there's perhaps much more future readers of this code who know MicroProfile config that those who know Camel property expansion {{my.property}}. So you could do here what you do in AvroRpcRouteBuilder:\n\nAdd at the ConfigProperty fields\n\n@ConfigProperty(name = AvroRpcResource.REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM)\n    Integer httpPort;\n\n@ConfigProperty(name = AvroRpcResource.REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM)\n    Integer nettyPort;\n\n\nChange the handler\n\nproducerTemplate.requestBody(String.format(\n                \"avro:%s:localhost:%d/setName?protocolClassName=%s&singleParameter=true\",\n                protocol,\n                protocol == ProtocolType.http ? httpPort: nettyPort,\n                TestReflection.class.getCanonicalName()), request);\n\nWDYT?", "author": "ppalaga", "createdAt": "2020-11-25T08:18:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIwMjMyMw==", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530202323", "bodyText": "ok, now I understand and agree, thanks", "author": "JiriOndrusek", "createdAt": "2020-11-25T08:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIxMzI0OQ==", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530213249", "bodyText": "done", "author": "JiriOndrusek", "createdAt": "2020-11-25T09:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}], "type": "inlineReview", "revised_code": {"commit": "de0b8bc507289ed31a69a1bf095808eb0605b1a2", "chunk": "diff --git a/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java b/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java\nindex f6297f032..63d0c96cd 100644\n--- a/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java\n+++ b/integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java\n\n@@ -33,6 +33,7 @@ import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n @Path(\"/avro-rpc\")\n @ApplicationScoped\n"}}, {"oid": "9e13859fd9170b81a8f7122768ef619c8ba6fe0b", "url": "https://github.com/apache/camel-quarkus/commit/9e13859fd9170b81a8f7122768ef619c8ba6fe0b", "message": "Camel Avro RPC component native support #1941", "committedDate": "2020-11-25T08:13:08Z", "type": "forcePushed"}, {"oid": "de0b8bc507289ed31a69a1bf095808eb0605b1a2", "url": "https://github.com/apache/camel-quarkus/commit/de0b8bc507289ed31a69a1bf095808eb0605b1a2", "message": "Camel Avro RPC component native support #1941", "committedDate": "2020-11-25T09:10:47Z", "type": "forcePushed"}, {"oid": "b14a8c9ba277eaf7712859938d4dd081b5db02c1", "url": "https://github.com/apache/camel-quarkus/commit/b14a8c9ba277eaf7712859938d4dd081b5db02c1", "message": "Camel Avro RPC component native support #1941", "committedDate": "2020-11-25T10:55:05Z", "type": "commit"}, {"oid": "b14a8c9ba277eaf7712859938d4dd081b5db02c1", "url": "https://github.com/apache/camel-quarkus/commit/b14a8c9ba277eaf7712859938d4dd081b5db02c1", "message": "Camel Avro RPC component native support #1941", "committedDate": "2020-11-25T10:55:05Z", "type": "forcePushed"}]}