{"pr_number": 1793, "pr_title": "FOP native support #1642", "pr_createdAt": "2020-09-15T11:44:14Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1793", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwMzExMQ==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488603111", "bodyText": "Just curious - why do we need to index commons-logging-jboss-logging?", "author": "jamesnetherton", "createdAt": "2020-09-15T11:49:19Z", "path": "extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop.deployment;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.fop.render.RendererEventProducer;\n+import org.apache.fop.render.pdf.PDFDocumentHandlerMaker;\n+import org.apache.fop.render.pdf.extensions.PDFExtensionHandlerFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;\n+import org.jboss.jandex.IndexView;\n+\n+class FopProcessor {\n+\n+    private static final String FEATURE = \"camel-fop\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        List<String> dtos = index.getKnownClasses().stream()\n+                .map(ci -> ci.name().toString())\n+                .filter(n -> n.endsWith(\"ElementMapping\"))\n+                .sorted()\n+                .collect(Collectors.toList());\n+\n+        dtos.add(PDFExtensionHandlerFactory.class.getCanonicalName());\n+        dtos.add(PDFDocumentHandlerMaker.class.getCanonicalName());\n+        dtos.add(RendererEventProducer.class.getCanonicalName());\n+        dtos.add(IOException.class.getCanonicalName());\n+        dtos.add(Integer.class.getCanonicalName());\n+\n+        return new ReflectiveClassBuildItem(false, false, dtos.toArray(new String[dtos.size()]));\n+    }\n+\n+    @BuildStep\n+    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {\n+        indexDependency.produce(new IndexDependencyBuildItem(\"org.jboss.logging\", \"commons-logging-jboss-logging\"));", "originalCommit": "63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxMTY5Mg==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488611692", "bodyText": "Good catch. It seems to be unwanted relic from some of my test runs. I'll check it.", "author": "JiriOndrusek", "createdAt": "2020-09-15T12:04:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwMzExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxOTI4Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488619283", "bodyText": "Done", "author": "JiriOndrusek", "createdAt": "2020-09-15T12:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwMzExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "chunk": "diff --git a/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java b/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\nindex 803bd54d6..f92300ada 100644\n--- a/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\n+++ b/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\n\n@@ -25,6 +25,7 @@ import io.quarkus.deployment.annotations.BuildStep;\n import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n import io.quarkus.deployment.builditem.FeatureBuildItem;\n import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n"}}, {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "url": "https://github.com/apache/camel-quarkus/commit/9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "message": "FOP native support #1642", "committedDate": "2020-09-15T12:16:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0OTkxOQ==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488749919", "bodyText": "I have filed a follow up: #1796 Could you please pick it @JiriOndrusek ?", "author": "ppalaga", "createdAt": "2020-09-15T15:15:11Z", "path": "extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop.deployment;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.fop.render.RendererEventProducer;\n+import org.apache.fop.render.pdf.PDFDocumentHandlerMaker;\n+import org.apache.fop.render.pdf.extensions.PDFExtensionHandlerFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;\n+import org.jboss.jandex.IndexView;\n+\n+class FopProcessor {\n+\n+    private static final String FEATURE = \"camel-fop\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        List<String> dtos = index.getKnownClasses().stream()\n+                .map(ci -> ci.name().toString())\n+                .filter(n -> n.endsWith(\"ElementMapping\"))\n+                .sorted()\n+                .collect(Collectors.toList());\n+\n+        dtos.add(PDFExtensionHandlerFactory.class.getCanonicalName());\n+        dtos.add(PDFDocumentHandlerMaker.class.getCanonicalName());\n+        dtos.add(RendererEventProducer.class.getCanonicalName());\n+        dtos.add(IOException.class.getCanonicalName());\n+        dtos.add(Integer.class.getCanonicalName());\n+\n+        return new ReflectiveClassBuildItem(false, false, dtos.toArray(new String[dtos.size()]));\n+    }\n+\n+    @BuildStep\n+    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {\n+        indexDependency.produce(new IndexDependencyBuildItem(\"org.apache.xmlgraphics\", \"fop\"));\n+    }\n+\n+    @BuildStep\n+    NativeImageResourceBuildItem initResources() {\n+        return new NativeImageResourceBuildItem(\n+                \"META-INF/services/org.apache.fop.fo.ElementMapping\",\n+                \"META-INF/services/org.apache.fop.render.intermediate.IFDocumentHandler\",\n+                \"org/apache/fop/render/event-model.xml\");\n+    }\n+\n+    @BuildStep\n+    NativeImageResourceBundleBuildItem initBundles() {\n+        return new NativeImageResourceBundleBuildItem(\n+                \"com.sun.org.apache.xerces.internal.impl.msg.SAXMessages\");", "originalCommit": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNDM2Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r489234363", "bodyText": "@ppalaga I've noticed, that this bundle was used only during an exception, which was happening during my investigation. It is not necessary. I've removed it.\nBut I'd like to add this resource via #1796 into cq jaxp component, because it could help a much during implementation. (without this bundle there is another error message in log)", "author": "JiriOndrusek", "createdAt": "2020-09-16T07:50:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0OTkxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8c0f89c100ab9d29603ad8e6ef7139c598125f64", "chunk": "diff --git a/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java b/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\nindex f92300ada..d7cf3bd38 100644\n--- a/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\n+++ b/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\n\n@@ -27,7 +27,6 @@ import io.quarkus.deployment.builditem.FeatureBuildItem;\n import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n-import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n import org.apache.fop.render.RendererEventProducer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1MjA3OA==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488752078", "bodyText": "class.getCanonicalName() is not wrong here where it is called on a non-inner class. We should stick to class.getName() that is correct also for inner classes. I mean when ppl will copy-paste from here, it may not work for them in all situations.", "author": "ppalaga", "createdAt": "2020-09-15T15:17:57Z", "path": "extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop.deployment;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.fop.render.RendererEventProducer;\n+import org.apache.fop.render.pdf.PDFDocumentHandlerMaker;\n+import org.apache.fop.render.pdf.extensions.PDFExtensionHandlerFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;\n+import org.jboss.jandex.IndexView;\n+\n+class FopProcessor {\n+\n+    private static final String FEATURE = \"camel-fop\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        List<String> dtos = index.getKnownClasses().stream()\n+                .map(ci -> ci.name().toString())\n+                .filter(n -> n.endsWith(\"ElementMapping\"))\n+                .sorted()\n+                .collect(Collectors.toList());\n+\n+        dtos.add(PDFExtensionHandlerFactory.class.getCanonicalName());", "originalCommit": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzMzA4MQ==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r489233081", "bodyText": "done", "author": "JiriOndrusek", "createdAt": "2020-09-16T07:48:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1MjA3OA=="}], "type": "inlineReview", "revised_code": {"commit": "8c0f89c100ab9d29603ad8e6ef7139c598125f64", "chunk": "diff --git a/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java b/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\nindex f92300ada..d7cf3bd38 100644\n--- a/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\n+++ b/extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java\n\n@@ -27,7 +27,6 @@ import io.quarkus.deployment.builditem.FeatureBuildItem;\n import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n-import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n import org.apache.fop.render.RendererEventProducer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NjU3Mg==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488756572", "bodyText": "I appreciate the comment!", "author": "ppalaga", "createdAt": "2020-09-15T15:24:04Z", "path": "extensions/fop/runtime/src/main/java/org/apache/camel/quarkus/component/fop/PDFRendererOptionsConfigSubstitution.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop;\n+\n+import com.oracle.svm.core.annotate.Substitute;\n+import com.oracle.svm.core.annotate.TargetClass;\n+import org.apache.fop.render.pdf.PDFRendererOptionsConfig;\n+\n+@TargetClass(value = PDFRendererOptionsConfig.class)\n+final class PDFRendererOptionsConfigSubstitution {\n+\n+    @Substitute\n+    public Boolean getDisableSRGBColorSpace() {\n+        //sRGB color space has to be disabled because of https://github.com/oracle/graal/issues/2850", "originalCommit": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzNDUzMg==", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r489234532", "bodyText": "thanks", "author": "JiriOndrusek", "createdAt": "2020-09-16T07:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NjU3Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8c0f89c100ab9d29603ad8e6ef7139c598125f64", "url": "https://github.com/apache/camel-quarkus/commit/8c0f89c100ab9d29603ad8e6ef7139c598125f64", "message": "FOP native support #1642", "committedDate": "2020-09-16T07:45:21Z", "type": "commit"}, {"oid": "8c0f89c100ab9d29603ad8e6ef7139c598125f64", "url": "https://github.com/apache/camel-quarkus/commit/8c0f89c100ab9d29603ad8e6ef7139c598125f64", "message": "FOP native support #1642", "committedDate": "2020-09-16T07:45:21Z", "type": "forcePushed"}]}