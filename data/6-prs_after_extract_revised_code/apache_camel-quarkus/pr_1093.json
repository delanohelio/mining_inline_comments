{"pr_number": 1093, "pr_title": "Introducing an AWS2 support extension", "pr_createdAt": "2020-04-15T16:08:38Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1093", "timeline": [{"oid": "11692e961ba1a9d3b1b5acf69be6b1c419cb562f", "url": "https://github.com/apache/camel-quarkus/commit/11692e961ba1a9d3b1b5acf69be6b1c419cb562f", "message": "Introducing an AWS2 support extension", "committedDate": "2020-04-15T16:07:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MjM4Mg==", "url": "https://github.com/apache/camel-quarkus/pull/1093#discussion_r408972382", "bodyText": "Isn't this class path check also a good candidate to move to the new support extension?", "author": "ppalaga", "createdAt": "2020-04-15T16:24:40Z", "path": "extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java", "diffHunk": "@@ -89,12 +89,6 @@ void client(BeanRegistrationPhaseBuildItem beanRegistrationPhase,\n             BuildProducer<NativeImageProxyDefinitionBuildItem> proxyDefinition) {\n         checkClasspath(APACHE_HTTP_SERVICE, \"apache-client\");", "originalCommit": "11692e961ba1a9d3b1b5acf69be6b1c419cb562f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4MDQ5Mw==", "url": "https://github.com/apache/camel-quarkus/pull/1093#discussion_r408980493", "bodyText": "Yes, but actually it doesn't seem to work when moved to commons. So lets have a skeleton for the moment and adding more extensions and then revisit the support extension, if it's ok for all, obviously", "author": "oscerd", "createdAt": "2020-04-15T16:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MjM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ae4e2ac78961707c07b401113b1396ccca2a144f", "chunk": "diff --git a/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java b/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java\nindex 88d925790..775f938e2 100644\n--- a/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java\n+++ b/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java\n\n@@ -82,23 +74,4 @@ class Aws2S3Processor {\n         reflectiveClasses.produce(new ReflectiveClassBuildItem(true, false,\n                 String.class.getCanonicalName()));\n     }\n-\n-    @BuildStep(loadsApplicationClasses = true)\n-    void client(BeanRegistrationPhaseBuildItem beanRegistrationPhase,\n-            BuildProducer<ServiceProviderBuildItem> serviceProvider,\n-            BuildProducer<NativeImageProxyDefinitionBuildItem> proxyDefinition) {\n-        checkClasspath(APACHE_HTTP_SERVICE, \"apache-client\");\n-\n-        serviceProvider.produce(new ServiceProviderBuildItem(SdkHttpService.class.getName(), APACHE_HTTP_SERVICE));\n-\n-    }\n-\n-    private void checkClasspath(String className, String dependencyName) {\n-        try {\n-            Class.forName(className, true, Thread.currentThread().getContextClassLoader());\n-        } catch (ClassNotFoundException e) {\n-            throw new DeploymentException(\n-                    \"Missing 'software.amazon.awssdk:\" + dependencyName + \"' dependency on the classpath\");\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MjY5MQ==", "url": "https://github.com/apache/camel-quarkus/pull/1093#discussion_r408972691", "bodyText": "Similar as above: Isn't this serviceProvider also a good candidate to move to the new support extension?", "author": "ppalaga", "createdAt": "2020-04-15T16:25:09Z", "path": "extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java", "diffHunk": "@@ -89,12 +89,6 @@ void client(BeanRegistrationPhaseBuildItem beanRegistrationPhase,\n             BuildProducer<NativeImageProxyDefinitionBuildItem> proxyDefinition) {\n         checkClasspath(APACHE_HTTP_SERVICE, \"apache-client\");\n \n-        //Register Apache client as sync client\n-        proxyDefinition.produce(\n-                new NativeImageProxyDefinitionBuildItem(\"org.apache.http.conn.HttpClientConnectionManager\",\n-                        \"org.apache.http.pool.ConnPoolControl\",\n-                        \"software.amazon.awssdk.http.apache.internal.conn.Wrapped\"));\n-\n         serviceProvider.produce(new ServiceProviderBuildItem(SdkHttpService.class.getName(), APACHE_HTTP_SERVICE));", "originalCommit": "11692e961ba1a9d3b1b5acf69be6b1c419cb562f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3OTIxMg==", "url": "https://github.com/apache/camel-quarkus/pull/1093#discussion_r408979212", "bodyText": "Actually moving it there doesn't work, at least for me. I'll have to dig a bit more in this. This is the beginning.", "author": "oscerd", "createdAt": "2020-04-15T16:35:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3MjY5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae4e2ac78961707c07b401113b1396ccca2a144f", "chunk": "diff --git a/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java b/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java\nindex 88d925790..775f938e2 100644\n--- a/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java\n+++ b/extensions/aws2-s3/deployment/src/main/java/org/apache/camel/quarkus/component/aws2/s3/deployment/Aws2S3Processor.java\n\n@@ -82,23 +74,4 @@ class Aws2S3Processor {\n         reflectiveClasses.produce(new ReflectiveClassBuildItem(true, false,\n                 String.class.getCanonicalName()));\n     }\n-\n-    @BuildStep(loadsApplicationClasses = true)\n-    void client(BeanRegistrationPhaseBuildItem beanRegistrationPhase,\n-            BuildProducer<ServiceProviderBuildItem> serviceProvider,\n-            BuildProducer<NativeImageProxyDefinitionBuildItem> proxyDefinition) {\n-        checkClasspath(APACHE_HTTP_SERVICE, \"apache-client\");\n-\n-        serviceProvider.produce(new ServiceProviderBuildItem(SdkHttpService.class.getName(), APACHE_HTTP_SERVICE));\n-\n-    }\n-\n-    private void checkClasspath(String className, String dependencyName) {\n-        try {\n-            Class.forName(className, true, Thread.currentThread().getContextClassLoader());\n-        } catch (ClassNotFoundException e) {\n-            throw new DeploymentException(\n-                    \"Missing 'software.amazon.awssdk:\" + dependencyName + \"' dependency on the classpath\");\n-        }\n-    }\n }\n"}}, {"oid": "13a2a251deb2c9c5312b20f15f795037ea542813", "url": "https://github.com/apache/camel-quarkus/commit/13a2a251deb2c9c5312b20f15f795037ea542813", "message": "No need for jackson-cbor", "committedDate": "2020-04-15T16:36:09Z", "type": "commit"}, {"oid": "ae4e2ac78961707c07b401113b1396ccca2a144f", "url": "https://github.com/apache/camel-quarkus/commit/ae4e2ac78961707c07b401113b1396ccca2a144f", "message": "Lets move the checkclasspath and serviceProviderBuildItem in AWS2-commons support extension", "committedDate": "2020-04-15T16:57:13Z", "type": "commit"}]}