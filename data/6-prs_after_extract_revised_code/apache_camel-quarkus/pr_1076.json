{"pr_number": 1076, "pr_title": "Fix #984 introduce the CamelContextCustomizerBuildItem", "pr_createdAt": "2020-04-13T02:42:27Z", "pr_url": "https://github.com/apache/camel-quarkus/pull/1076", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM0MzAwNA==", "url": "https://github.com/apache/camel-quarkus/pull/1076#discussion_r407343004", "bodyText": "This need to be done before the camel contex is published so like in the method that produce the CamelContextBuildItem", "author": "lburgazzoli", "createdAt": "2020-04-13T06:43:13Z", "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/BuildProcessor.java", "diffHunk": "@@ -382,6 +382,13 @@ CamelContextBuildItem context(\n             return new CamelContextBuildItem(context);\n         }\n \n+        @Record(value = ExecutionTime.STATIC_INIT, optional = true)\n+        @BuildStep(onlyIf = Flags.ContextCustomizerEnabled.class)\n+        void customCamelContext(CamelRecorder recorder, CamelContextBuildItem context,", "originalCommit": "63bac6147e089efb6fd58e28fda8e9a727a897f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00144a326532c44b98c132eff802cc236852c817", "chunk": "diff --git a/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/BuildProcessor.java b/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/BuildProcessor.java\nindex 1aa663aa5..2a13e968a 100644\n--- a/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/BuildProcessor.java\n+++ b/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/BuildProcessor.java\n\n@@ -379,14 +380,12 @@ class BuildProcessor {\n                     CamelSupport.getCamelVersion(),\n                     config);\n \n-            return new CamelContextBuildItem(context);\n-        }\n+            customizerBuildItems.stream()\n+                    .forEach(customizer -> {\n+                        recorder.customize(context, customizer.getCamelContextCustomizer());\n+                    });\n \n-        @Record(value = ExecutionTime.STATIC_INIT, optional = true)\n-        @BuildStep(onlyIf = Flags.ContextCustomizerEnabled.class)\n-        void customCamelContext(CamelRecorder recorder, CamelContextBuildItem context,\n-                CamelContextCustomizerBuildItem camelContextCustomizerBuildItem) {\n-            recorder.customize(context.getCamelContext(), camelContextCustomizerBuildItem.getCamelContextCustomizer());\n+            return new CamelContextBuildItem(context);\n         }\n \n         @Record(ExecutionTime.RUNTIME_INIT)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM0MzE3Ng==", "url": "https://github.com/apache/camel-quarkus/pull/1076#discussion_r407343176", "bodyText": "Need to be a multi build item as you may have more than one customizer", "author": "lburgazzoli", "createdAt": "2020-04-13T06:43:48Z", "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.core.deployment;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+import io.quarkus.runtime.RuntimeValue;\n+import org.apache.camel.quarkus.core.CamelContextCustomizer;\n+\n+public class CamelContextCustomizerBuildItem extends SimpleBuildItem {", "originalCommit": "63bac6147e089efb6fd58e28fda8e9a727a897f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00144a326532c44b98c132eff802cc236852c817", "chunk": "diff --git a/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java b/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java\nindex 2bbb5fea5..513edd592 100644\n--- a/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java\n+++ b/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java\n\n@@ -16,11 +16,15 @@\n  */\n package org.apache.camel.quarkus.core.deployment;\n \n-import io.quarkus.builder.item.SimpleBuildItem;\n+import io.quarkus.builder.item.MultiBuildItem;\n import io.quarkus.runtime.RuntimeValue;\n import org.apache.camel.quarkus.core.CamelContextCustomizer;\n \n-public class CamelContextCustomizerBuildItem extends SimpleBuildItem {\n+/**\n+ * A {@link MultiBuildItem} holding the {@link CamelContextCustomizer} {@link RuntimeValue} and could be used\n+ * to customize the camel context before produce the {@link CamelContextBuildItem}\n+ */\n+public final class CamelContextCustomizerBuildItem extends MultiBuildItem {\n     private final RuntimeValue<CamelContextCustomizer> value;\n \n     public CamelContextCustomizerBuildItem(RuntimeValue<CamelContextCustomizer> value) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM0MzgzOA==", "url": "https://github.com/apache/camel-quarkus/pull/1076#discussion_r407343838", "bodyText": "This should ne marked as @FunctionalInterface or if you don\u2019t plan to add any helper method it may be replaced by a Consumer", "author": "lburgazzoli", "createdAt": "2020-04-13T06:45:56Z", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelContextCustomizer.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.camel.quarkus.core;\n+\n+import org.apache.camel.CamelContext;\n+\n+public interface CamelContextCustomizer {", "originalCommit": "63bac6147e089efb6fd58e28fda8e9a727a897f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk2MjkxOQ==", "url": "https://github.com/apache/camel-quarkus/pull/1076#discussion_r408962919", "bodyText": "yeah, I think it makes sense.", "author": "zhfeng", "createdAt": "2020-04-15T16:10:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM0MzgzOA=="}], "type": "inlineReview", "revised_code": {"commit": "00144a326532c44b98c132eff802cc236852c817", "chunk": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelContextCustomizer.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelContextCustomizer.java\nindex 7cec56987..0ab42f74f 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelContextCustomizer.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/CamelContextCustomizer.java\n\n@@ -14,11 +14,11 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.camel.quarkus.core;\n \n import org.apache.camel.CamelContext;\n \n+@FunctionalInterface\n public interface CamelContextCustomizer {\n     void customize(CamelContext context);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM0NDE0MA==", "url": "https://github.com/apache/camel-quarkus/pull/1076#discussion_r407344140", "bodyText": "Not sure we need to have a flag to enable/disable customizers", "author": "lburgazzoli", "createdAt": "2020-04-13T06:46:58Z", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/Flags.java", "diffHunk": "@@ -42,6 +42,13 @@ public boolean getAsBoolean() {\n         }\n     }\n \n+    public static final class ContextCustomizerEnabled implements BooleanSupplier {", "originalCommit": "63bac6147e089efb6fd58e28fda8e9a727a897f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00144a326532c44b98c132eff802cc236852c817", "chunk": "diff --git a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/Flags.java b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/Flags.java\nindex 7fe8a96ec..a62c51df2 100644\n--- a/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/Flags.java\n+++ b/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/Flags.java\n\n@@ -42,13 +42,6 @@ public final class Flags {\n         }\n     }\n \n-    public static final class ContextCustomizerEnabled implements BooleanSupplier {\n-        @Override\n-        public boolean getAsBoolean() {\n-            return asBoolean(\"quarkus.camel.context-customizer.enabled\", true);\n-        }\n-    }\n-\n     public static final class RuntimeCatalogEnabled implements BooleanSupplier {\n         @Override\n         public boolean getAsBoolean() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5MDkzOQ==", "url": "https://github.com/apache/camel-quarkus/pull/1076#discussion_r408190939", "bodyText": "Please add a short class level javadoc informing about the purpose of the builditem.", "author": "ppalaga", "createdAt": "2020-04-14T14:41:23Z", "path": "extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.core.deployment;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+import io.quarkus.runtime.RuntimeValue;\n+import org.apache.camel.quarkus.core.CamelContextCustomizer;\n+\n+public class CamelContextCustomizerBuildItem extends SimpleBuildItem {", "originalCommit": "63bac6147e089efb6fd58e28fda8e9a727a897f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00144a326532c44b98c132eff802cc236852c817", "chunk": "diff --git a/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java b/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java\nindex 2bbb5fea5..513edd592 100644\n--- a/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java\n+++ b/extensions-core/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/CamelContextCustomizerBuildItem.java\n\n@@ -16,11 +16,15 @@\n  */\n package org.apache.camel.quarkus.core.deployment;\n \n-import io.quarkus.builder.item.SimpleBuildItem;\n+import io.quarkus.builder.item.MultiBuildItem;\n import io.quarkus.runtime.RuntimeValue;\n import org.apache.camel.quarkus.core.CamelContextCustomizer;\n \n-public class CamelContextCustomizerBuildItem extends SimpleBuildItem {\n+/**\n+ * A {@link MultiBuildItem} holding the {@link CamelContextCustomizer} {@link RuntimeValue} and could be used\n+ * to customize the camel context before produce the {@link CamelContextBuildItem}\n+ */\n+public final class CamelContextCustomizerBuildItem extends MultiBuildItem {\n     private final RuntimeValue<CamelContextCustomizer> value;\n \n     public CamelContextCustomizerBuildItem(RuntimeValue<CamelContextCustomizer> value) {\n"}}, {"oid": "00144a326532c44b98c132eff802cc236852c817", "url": "https://github.com/apache/camel-quarkus/commit/00144a326532c44b98c132eff802cc236852c817", "message": "Fix #984 introduce the CamelContextCustomizerBuildItem", "committedDate": "2020-04-15T16:05:14Z", "type": "commit"}, {"oid": "00144a326532c44b98c132eff802cc236852c817", "url": "https://github.com/apache/camel-quarkus/commit/00144a326532c44b98c132eff802cc236852c817", "message": "Fix #984 introduce the CamelContextCustomizerBuildItem", "committedDate": "2020-04-15T16:05:14Z", "type": "forcePushed"}]}