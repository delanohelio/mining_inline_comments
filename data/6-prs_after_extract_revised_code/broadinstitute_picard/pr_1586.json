{"pr_number": 1586, "pr_title": "Added a metric to CollectAlignmentSummaryMetrics for the mean length of 3' softclips", "pr_createdAt": "2020-10-01T16:40:56Z", "pr_url": "https://github.com/broadinstitute/picard/pull/1586", "timeline": [{"oid": "14a7863636db406fd030ebe648abf431a1d6a753", "url": "https://github.com/broadinstitute/picard/commit/14a7863636db406fd030ebe648abf431a1d6a753", "message": "- spaces", "committedDate": "2020-10-01T16:41:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTMyOA==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541151328", "bodyText": "AVG_NON_ZERO_3PRIME_SOFTCLIP_LENGTH? What about the name did you want to improve?", "author": "meganshand", "createdAt": "2020-12-11T18:41:37Z", "path": "src/main/java/picard/analysis/AlignmentSummaryMetrics.java", "diffHunk": "@@ -181,4 +185,12 @@\n      * PF_ALIGNED_BASES (even though these are not aligned!)\n      */\n     public double PCT_HARDCLIP;\n+\n+    /**\n+     * The average length of the soft-clipped bases at the 3' end of reads. This could be used as an estimate for\n+     * the amount by which the insert-size must be increased in order to obtain a significant reduction in bases\n+     * lost due to reading off the end of the insert.\n+     */\n+    public double AVERAGE_NON_ZERO_3PRIME_SOFTCLIP;", "originalCommit": "14a7863636db406fd030ebe648abf431a1d6a753", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MTczMg==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541261732", "bodyText": "\ud83e\udd37 it seems long and convoluted....was hoping for something pithier (is that really a word!?!)", "author": "yfarjoun", "createdAt": "2020-12-11T20:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTMyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MjkyMQ==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541262921", "bodyText": "well then I went in the wrong direction :)", "author": "meganshand", "createdAt": "2020-12-11T20:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTMyOA=="}], "type": "inlineReview", "revised_code": {"commit": "2a30b21507a01c03b4ac563df6f9a894b5f0d46f", "chunk": "diff --git a/src/main/java/picard/analysis/AlignmentSummaryMetrics.java b/src/main/java/picard/analysis/AlignmentSummaryMetrics.java\nindex d17b89a03..3392e0f63 100644\n--- a/src/main/java/picard/analysis/AlignmentSummaryMetrics.java\n+++ b/src/main/java/picard/analysis/AlignmentSummaryMetrics.java\n\n@@ -191,6 +191,5 @@ public class AlignmentSummaryMetrics extends MultilevelMetrics {\n      * the amount by which the insert-size must be increased in order to obtain a significant reduction in bases\n      * lost due to reading off the end of the insert.\n      */\n-    public double AVERAGE_NON_ZERO_3PRIME_SOFTCLIP;\n-\n+    public double AVG_POS_3PRIME_SOFTCLIP_LENGTH;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MjgyMA==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541152820", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * returns The sum of lengths of a particular cigar operator in the provided cigar\n          \n          \n            \n                 * returns the length of the soft clip on the 3' end", "author": "meganshand", "createdAt": "2020-12-11T18:44:17Z", "path": "src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java", "diffHunk": "@@ -91,6 +92,59 @@ public void acceptRecord(final SAMRecord rec, final ReferenceSequence ref) {\n         }\n     }\n \n+    /**\n+     * returns The sum of lengths of a particular cigar operator in the provided cigar\n+     *\n+     * @param cigar The input Cigar of the read\n+     * @param op The operator that is being looked for\n+     * @return Sum of lengths of the Cigar elements in cigar that are of the operator op\n+     */\n+    static private int getTotalCigarOperatorCount(final Cigar cigar, final CigarOperator op) {\n+        return cigar.getCigarElements().stream()\n+                .filter(e -> e.getOperator().equals(op))\n+                .mapToInt(CigarElement::getLength)\n+                .reduce(Integer::sum).orElse(0);\n+    }\n+\n+\n+    /**\n+     * returns The sum of lengths of a particular cigar operator in the provided cigar", "originalCommit": "14a7863636db406fd030ebe648abf431a1d6a753", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec38d289b1dd77c9a1aac867f7def9ab0306e077", "chunk": "diff --git a/src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java b/src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java\nindex d246efd00..ddc49ed8e 100644\n--- a/src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java\n+++ b/src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java\n\n@@ -115,7 +115,7 @@ public class AlignmentSummaryMetricsCollector extends SAMRecordAndReferenceMulti\n      * @return the amount of soft-clipping that the read has on its 3' end (the later read cycles)\n      */\n     @VisibleForTesting\n-    static protected int get3PrimeSoftClippedBases(final Cigar cigar, final boolean negativeStrand) {\n+    static public int get3PrimeSoftClippedBases(final Cigar cigar, final boolean negativeStrand) {\n         List<CigarElement> cigarElements = cigar.getCigarElements();\n \n         boolean foundNonSoftClipOperator = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1OTY1MQ==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541159651", "bodyText": "Can you add another edge case here with hard and soft clips on the same read: \"2H3S10M4S5H\"?", "author": "meganshand", "createdAt": "2020-12-11T18:56:23Z", "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package picard.analysis;\n+\n+import htsjdk.samtools.Cigar;\n+import htsjdk.samtools.TextCigarCodec;\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+public class AlignmentSummaryMetricsCollectorTest {\n+\n+    @DataProvider\n+    public Object[][] get3PrimeSoftClipData() {\n+        return new Object[][]{\n+                {\"20M\", true, 0},\n+                {\"20M\", false, 0},\n+\n+                {\"2H20M\", true, 0},\n+                {\"2H20M\", false, 0},\n+\n+                {\"2S20M\", false, 0},\n+                {\"2S20M\", true, 2},\n+                {\"20M2S\", true, 0},\n+                {\"20M2S\", false, 2},\n+\n+                {\"2S20M5S\", false, 5},\n+                {\"2S20M4S\", true, 2},\n+                {\"4S20M2S\", true, 4},\n+                {\"4S20M2S\", false, 2},", "originalCommit": "14a7863636db406fd030ebe648abf431a1d6a753", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MjExNQ==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541262115", "bodyText": "\ud83d\udc4d", "author": "yfarjoun", "createdAt": "2020-12-11T20:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1OTY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ec38d289b1dd77c9a1aac867f7def9ab0306e077", "chunk": "diff --git a/src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java b/src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java\nindex 3a44bdccf..07bf4e41c 100644\n--- a/src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java\n+++ b/src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java\n\n@@ -35,4 +35,4 @@ public class AlignmentSummaryMetricsCollectorTest {\n         final int resultant5PrimeSoftclips = AlignmentSummaryMetricsCollector.get3PrimeSoftClippedBases(cigar, negativeStrand);\n         Assert.assertEquals(resultant5PrimeSoftclips, expectedSoftClips, cigarString + \"-\" + negativeStrand);\n     }\n-}\n+}\n\\ No newline at end of file\n"}}, {"oid": "ec38d289b1dd77c9a1aac867f7def9ab0306e077", "url": "https://github.com/broadinstitute/picard/commit/ec38d289b1dd77c9a1aac867f7def9ab0306e077", "message": "- Added a metric for the mean length of 3' softclips considering only those reads that have clipping on that end. This metric should provide an estimate for how much the mean insert-size should change for the amount of bases lost to soft-clipping (that which is due to the insert ending) to change significantly.\n- I'm not especially happy with the name of the metric. if someone can come up with a  better name I'd be happy to change.\n- included tests", "committedDate": "2020-12-11T21:06:01Z", "type": "commit"}, {"oid": "fcd0d65f0bce7601c96954adb765706287b08667", "url": "https://github.com/broadinstitute/picard/commit/fcd0d65f0bce7601c96954adb765706287b08667", "message": "- protecting a method", "committedDate": "2020-12-11T21:06:01Z", "type": "commit"}, {"oid": "6644d7be083d823869da45048c44d5e2e3db77c3", "url": "https://github.com/broadinstitute/picard/commit/6644d7be083d823869da45048c44d5e2e3db77c3", "message": "- spaces", "committedDate": "2020-12-11T21:06:01Z", "type": "commit"}, {"oid": "ca0f5da710cd105127fa39831a2fea8af32185d5", "url": "https://github.com/broadinstitute/picard/commit/ca0f5da710cd105127fa39831a2fea8af32185d5", "message": "Update src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java\n\nCo-authored-by: meganshand <mshand@broadinstitute.org>", "committedDate": "2020-12-11T21:06:01Z", "type": "commit"}, {"oid": "8e070b716c04a7ee7ad375acfc3a3b200d2f47b6", "url": "https://github.com/broadinstitute/picard/commit/8e070b716c04a7ee7ad375acfc3a3b200d2f47b6", "message": "- fix a bug in the definition of PCT_SOFTCLIP, PCT_HARDCLIP where the code would use the _aligned_ bases as denominator rather than the _total_ bases.\n- fixed the tests to reflect this change.", "committedDate": "2020-12-11T21:06:02Z", "type": "commit"}, {"oid": "2a30b21507a01c03b4ac563df6f9a894b5f0d46f", "url": "https://github.com/broadinstitute/picard/commit/2a30b21507a01c03b4ac563df6f9a894b5f0d46f", "message": "responding to review comments", "committedDate": "2020-12-11T21:06:02Z", "type": "commit"}, {"oid": "2a30b21507a01c03b4ac563df6f9a894b5f0d46f", "url": "https://github.com/broadinstitute/picard/commit/2a30b21507a01c03b4ac563df6f9a894b5f0d46f", "message": "responding to review comments", "committedDate": "2020-12-11T21:06:02Z", "type": "forcePushed"}, {"oid": "7f343c6b3e71d5f5785fd1b54b7462b4fa78921f", "url": "https://github.com/broadinstitute/picard/commit/7f343c6b3e71d5f5785fd1b54b7462b4fa78921f", "message": "- added a reverse \"View\" for an immutable (or any) List\n- simplified clipping counting code\n- fixed bug that would appear if there were two softclip operators in a row\n- added tests", "committedDate": "2020-12-11T21:32:47Z", "type": "commit"}, {"oid": "d67f3be613375c3e6377c1bda78e5ebb09d01cb2", "url": "https://github.com/broadinstitute/picard/commit/d67f3be613375c3e6377c1bda78e5ebb09d01cb2", "message": "one more test", "committedDate": "2020-12-11T21:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMjE0MQ==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541332141", "bodyText": "Are these legal cigar strings? Doesn't the S operator have to come at the end? I guess it doesn't matter for this test and I agree with 6 for this length (and 0 for the one below).", "author": "meganshand", "createdAt": "2020-12-11T21:51:56Z", "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "diffHunk": "@@ -22,6 +27,9 @@\n                 {\"20M2S\", true, 0},\n                 {\"20M2S\", false, 2},\n \n+                {\"20M2S4S\", false, 6},", "originalCommit": "d67f3be613375c3e6377c1bda78e5ebb09d01cb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzNjkwMg==", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541336902", "bodyText": "From the spec:\n\u2022 H can only be present as the first and/or last operation.\n\u2022 S may only have H operations between them and the ends of the CIGAR string\n\nso probably, no. but I wanted to make the code robust to this....", "author": "yfarjoun", "createdAt": "2020-12-11T21:57:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMjE0MQ=="}], "type": "inlineReview", "revised_code": null}]}