{"pr_number": 1612, "pr_title": "Yf fix il to bed sorting", "pr_createdAt": "2020-11-25T21:47:15Z", "pr_url": "https://github.com/broadinstitute/picard/pull/1612", "timeline": [{"oid": "1e3e129404ca8f8a7675814e07968fa6517c60a6", "url": "https://github.com/broadinstitute/picard/commit/1e3e129404ca8f8a7675814e07968fa6517c60a6", "message": "- IntervalListToBed was sorting the output lexicographically rather than looking at the sequence dictionary\n- added proper testing. (with non-lexicographic order...)", "committedDate": "2020-11-25T21:41:02Z", "type": "commit"}, {"oid": "dcce4531b8446832f26a976ee50d0382d7705c46", "url": "https://github.com/broadinstitute/picard/commit/dcce4531b8446832f26a976ee50d0382d7705c46", "message": "- fixed imports\n- add another unsorted output (bed)\n- remove unused code\n- fix whitespaces", "committedDate": "2020-11-25T21:44:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcwNjQ1NA==", "url": "https://github.com/broadinstitute/picard/pull/1612#discussion_r530706454", "bodyText": "Any chance you can write 1-2 lines of comments about the properties of these BED files (ex chr5/chr4 are out of karyotype order)?  That way we don't have to look at the test files to know (but can look to verify).", "author": "nh13", "createdAt": "2020-11-26T00:26:40Z", "path": "src/test/java/picard/util/IntervalListToBedTest.java", "diffHunk": "@@ -14,57 +15,41 @@\n     private static final String TEST_DATA_DIR = \"testdata/picard/util/\";\n     private final File INTERVAL_LIST = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.interval_list\");\n     private final File UNSORTED_INTERVAL_LIST = new File(TEST_DATA_DIR, \"unsorted_interval_list_to_bed_test.interval_list\");\n-    private final File BED_FILE      = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n-\n-    @Test\n-    public void testConvertToBed() throws Exception {\n-        final IntervalListToBed program = new IntervalListToBed();\n-        final File tmp = File.createTempFile(\"interval_list_to_bed_test_output\", \".bed\");\n-        tmp.deleteOnExit();\n-\n-        final String[] args = {\n-                \"INPUT=\" + INTERVAL_LIST.getAbsolutePath(),\n-                \"OUTPUT=\" + tmp.getAbsolutePath(),\n-                \"SCORE=333\"\n+    private final File BED_FILE = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n+    private final File NO_SORT_BED_FILE = new File(TEST_DATA_DIR, \"no_sort_interval_list_to_bed_test.bed\");", "originalCommit": "dcce4531b8446832f26a976ee50d0382d7705c46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9e9339cd8b5eb939bf492ea3cb1e2a860a2fd33", "chunk": "diff --git a/src/test/java/picard/util/IntervalListToBedTest.java b/src/test/java/picard/util/IntervalListToBedTest.java\nindex 12e3f2b8d..01fb08296 100644\n--- a/src/test/java/picard/util/IntervalListToBedTest.java\n+++ b/src/test/java/picard/util/IntervalListToBedTest.java\n\n@@ -13,17 +13,29 @@ import java.util.List;\n  */\n public class IntervalListToBedTest {\n     private static final String TEST_DATA_DIR = \"testdata/picard/util/\";\n+\n+    // This interval list has a dictionary with chr5 __before__ chr4 but the intervals themselves are\n+    // in \"natural order\"\n     private final File INTERVAL_LIST = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.interval_list\");\n+\n+    // this interval list has a dictionary with chr5 __before__ chr4 and in addition the intervals themselves are\n+    // in \"random\" order\n     private final File UNSORTED_INTERVAL_LIST = new File(TEST_DATA_DIR, \"unsorted_interval_list_to_bed_test.interval_list\");\n+\n+    // Since the interval-lists dictionary has the chr4 and chr5 out of karyotype order (chr4 is __after__ chr5)\n+    // this bed file has the chr4 line after the chr5 ones\n     private final File BED_FILE = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n+\n+    // This bed file is sorted in \"natural order\", since it should be the result of the \"no-sort\" conversion\n+    // of INTERVAL_LIST.\n     private final File NO_SORT_BED_FILE = new File(TEST_DATA_DIR, \"no_sort_interval_list_to_bed_test.bed\");\n \n     @DataProvider()\n     Object[][] testConvertILToBedData() {\n         return new Object[][]{\n-                {INTERVAL_LIST, BED_FILE, true},\n-                {INTERVAL_LIST, NO_SORT_BED_FILE, false},\n-                {UNSORTED_INTERVAL_LIST, BED_FILE, true},\n+                {INTERVAL_LIST, BED_FILE, true}, // sort the intervals resulting in chr5 before chr4\n+                {UNSORTED_INTERVAL_LIST, BED_FILE, true}, // sort this messy file, resulting in the same sorted result as in the previous case.\n+                {INTERVAL_LIST, NO_SORT_BED_FILE, false}, // do not sort the intervals, resulting in the original, natural order\n         };\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcwNjc2NQ==", "url": "https://github.com/broadinstitute/picard/pull/1612#discussion_r530706765", "bodyText": "some comments on what's being tested would be nice.  Even \"out-of-order gets put into karyotype order\" or \"seq dict is out of karyotype order, so sorted interval list will be too\"", "author": "nh13", "createdAt": "2020-11-26T00:27:53Z", "path": "src/test/java/picard/util/IntervalListToBedTest.java", "diffHunk": "@@ -14,57 +15,41 @@\n     private static final String TEST_DATA_DIR = \"testdata/picard/util/\";\n     private final File INTERVAL_LIST = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.interval_list\");\n     private final File UNSORTED_INTERVAL_LIST = new File(TEST_DATA_DIR, \"unsorted_interval_list_to_bed_test.interval_list\");\n-    private final File BED_FILE      = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n-\n-    @Test\n-    public void testConvertToBed() throws Exception {\n-        final IntervalListToBed program = new IntervalListToBed();\n-        final File tmp = File.createTempFile(\"interval_list_to_bed_test_output\", \".bed\");\n-        tmp.deleteOnExit();\n-\n-        final String[] args = {\n-                \"INPUT=\" + INTERVAL_LIST.getAbsolutePath(),\n-                \"OUTPUT=\" + tmp.getAbsolutePath(),\n-                \"SCORE=333\"\n+    private final File BED_FILE = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n+    private final File NO_SORT_BED_FILE = new File(TEST_DATA_DIR, \"no_sort_interval_list_to_bed_test.bed\");\n+\n+    @DataProvider()\n+    Object[][] testConvertILToBedData() {\n+        return new Object[][]{\n+                {INTERVAL_LIST, BED_FILE, true},\n+                {INTERVAL_LIST, NO_SORT_BED_FILE, false},\n+                {UNSORTED_INTERVAL_LIST, BED_FILE, true},", "originalCommit": "dcce4531b8446832f26a976ee50d0382d7705c46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9e9339cd8b5eb939bf492ea3cb1e2a860a2fd33", "chunk": "diff --git a/src/test/java/picard/util/IntervalListToBedTest.java b/src/test/java/picard/util/IntervalListToBedTest.java\nindex 12e3f2b8d..01fb08296 100644\n--- a/src/test/java/picard/util/IntervalListToBedTest.java\n+++ b/src/test/java/picard/util/IntervalListToBedTest.java\n\n@@ -13,17 +13,29 @@ import java.util.List;\n  */\n public class IntervalListToBedTest {\n     private static final String TEST_DATA_DIR = \"testdata/picard/util/\";\n+\n+    // This interval list has a dictionary with chr5 __before__ chr4 but the intervals themselves are\n+    // in \"natural order\"\n     private final File INTERVAL_LIST = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.interval_list\");\n+\n+    // this interval list has a dictionary with chr5 __before__ chr4 and in addition the intervals themselves are\n+    // in \"random\" order\n     private final File UNSORTED_INTERVAL_LIST = new File(TEST_DATA_DIR, \"unsorted_interval_list_to_bed_test.interval_list\");\n+\n+    // Since the interval-lists dictionary has the chr4 and chr5 out of karyotype order (chr4 is __after__ chr5)\n+    // this bed file has the chr4 line after the chr5 ones\n     private final File BED_FILE = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n+\n+    // This bed file is sorted in \"natural order\", since it should be the result of the \"no-sort\" conversion\n+    // of INTERVAL_LIST.\n     private final File NO_SORT_BED_FILE = new File(TEST_DATA_DIR, \"no_sort_interval_list_to_bed_test.bed\");\n \n     @DataProvider()\n     Object[][] testConvertILToBedData() {\n         return new Object[][]{\n-                {INTERVAL_LIST, BED_FILE, true},\n-                {INTERVAL_LIST, NO_SORT_BED_FILE, false},\n-                {UNSORTED_INTERVAL_LIST, BED_FILE, true},\n+                {INTERVAL_LIST, BED_FILE, true}, // sort the intervals resulting in chr5 before chr4\n+                {UNSORTED_INTERVAL_LIST, BED_FILE, true}, // sort this messy file, resulting in the same sorted result as in the previous case.\n+                {INTERVAL_LIST, NO_SORT_BED_FILE, false}, // do not sort the intervals, resulting in the original, natural order\n         };\n     }\n \n"}}, {"oid": "e9e9339cd8b5eb939bf492ea3cb1e2a860a2fd33", "url": "https://github.com/broadinstitute/picard/commit/e9e9339cd8b5eb939bf492ea3cb1e2a860a2fd33", "message": "responding to review comments", "committedDate": "2020-12-02T20:35:19Z", "type": "commit"}, {"oid": "d041cf9fb7a51a0ce13dc8d33f1d5e91fbe86f1a", "url": "https://github.com/broadinstitute/picard/commit/d041cf9fb7a51a0ce13dc8d33f1d5e91fbe86f1a", "message": "Merge branch 'master' into yf_fix_IL_to_BED_sorting", "committedDate": "2021-01-21T03:46:04Z", "type": "commit"}]}