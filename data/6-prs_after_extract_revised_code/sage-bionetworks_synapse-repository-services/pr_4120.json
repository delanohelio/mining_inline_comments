{"pr_number": 4120, "pr_title": "PLFM-6334: Added service to send SQS message", "pr_createdAt": "2020-07-02T01:57:11Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120", "timeline": [{"oid": "d2c0396a378d8d5f019793e1dd4e18b07ca90046", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/d2c0396a378d8d5f019793e1dd4e18b07ca90046", "message": "PLFM-6335: Cache the secret hash", "committedDate": "2020-07-01T20:42:30Z", "type": "commit"}, {"oid": "a43bffaf0f99e7a5a2d8b4af997a49eec860c4dd", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/a43bffaf0f99e7a5a2d8b4af997a49eec860c4dd", "message": "PLFM-6335: Added test for malicious header injection", "committedDate": "2020-07-01T21:09:57Z", "type": "commit"}, {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/9fc75c10be0ec08e1733d1ca32ef834591ae5446", "message": "PLFM-6334: Added admin service to send SQS messages", "committedDate": "2020-07-02T01:52:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyOTk2NA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449329964", "bodyText": "maybe move to try catch below and make errors more generic.", "author": "john-hill", "createdAt": "2020-07-03T01:10:52Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/sqs/SQSManagerImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.sagebionetworks.repo.manager.sqs;\r\n+\r\n+import org.sagebionetworks.StackConfiguration;\r\n+import org.sagebionetworks.repo.model.message.SQSSendMessageRequest;\r\n+import org.sagebionetworks.repo.model.message.SQSSendMessageResponse;\r\n+import org.sagebionetworks.repo.web.NotFoundException;\r\n+import org.sagebionetworks.repo.web.TemporarilyUnavailableException;\r\n+import org.sagebionetworks.util.ValidateArgument;\r\n+import org.springframework.beans.factory.annotation.Autowired;\r\n+import org.springframework.stereotype.Service;\r\n+\r\n+import com.amazonaws.AmazonClientException;\r\n+import com.amazonaws.services.sqs.AmazonSQS;\r\n+import com.amazonaws.services.sqs.model.AmazonSQSException;\r\n+import com.amazonaws.services.sqs.model.QueueDoesNotExistException;\r\n+import com.amazonaws.services.sqs.model.SendMessageResult;\r\n+\r\n+@Service\r\n+public class SQSManagerImpl implements SQSManager {\r\n+\r\n+\tprivate StackConfiguration config;\r\n+\tprivate AmazonSQS sqsClient;\r\n+\t\r\n+\t@Autowired\r\n+\tpublic SQSManagerImpl(final StackConfiguration config, final AmazonSQS sqsClient) {\r\n+\t\tthis.config = config;\r\n+\t\tthis.sqsClient = sqsClient;\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\tpublic SQSSendMessageResponse sendMessage(final SQSSendMessageRequest messageRequest) throws NotFoundException, TemporarilyUnavailableException {\r\n+\t\tValidateArgument.required(messageRequest, \"messageRequest\");\r\n+\t\tValidateArgument.requiredNotBlank(messageRequest.getQueueName(), \"messageRequest.queueName\");\r\n+\t\tValidateArgument.requiredNotBlank(messageRequest.getMessageBody(), \"messageRequest.messageBody\");\r\n+\r\n+\t\tfinal String queueName = messageRequest.getQueueName();\r\n+\t\tfinal String messageBody = messageRequest.getMessageBody();\r\n+\r\n+\t\tfinal String stackQueueUrl = getStackQueueUrl(queueName);\r", "originalCommit": "9fc75c10be0ec08e1733d1ca32ef834591ae5446", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMTYyMQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449331621", "bodyText": "Perfect!", "author": "john-hill", "createdAt": "2020-07-03T01:18:57Z", "path": "services/repository/src/main/java/org/sagebionetworks/auth/filter/StackConfigKeyAndSecretProvider.java", "diffHunk": "@@ -1,39 +1,66 @@\n package org.sagebionetworks.auth.filter;\r\n \r\n import org.sagebionetworks.StackConfiguration;\r\n+import org.sagebionetworks.securitytools.PBKDF2Utils;\r\n+import org.sagebionetworks.util.ValidateArgument;\r\n \r\n /**\r\n  * Default implementation for a {@link ServiceKeyAndSecretProvider} that grabs\r\n- * the key/secret pair from the stack configuration\r\n+ * the key/secret pair from the stack configuration and caches the hashed secrets\r\n  * \r\n  * @author Marco Marasca\r\n  *\r\n  */\r\n public class StackConfigKeyAndSecretProvider implements ServiceKeyAndSecretProvider {\r\n \r\n \tprivate String serviceName;\r\n-\tprivate String serviceKey;\r", "originalCommit": "9fc75c10be0ec08e1733d1ca32ef834591ae5446", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMzMyNw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449333327", "bodyText": "need an integration test", "author": "john-hill", "createdAt": "2020-07-03T01:27:16Z", "path": "services/repository/src/main/java/org/sagebionetworks/repo/web/controller/AdministrationController.java", "diffHunk": "@@ -324,4 +326,16 @@ IdGeneratorExport createIdGeneratorExport(@RequestParam(value = AuthorizationCon\n \t\t\tthrows NotFoundException, UnauthorizedException {\r\n \t\tserviceProvider.getPrincipalService().redactPrincipalInformation(userId, principalId);\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * Sends an message to SQS\r\n+\t * \r\n+\t * @param messageRequest The request containing the message to send and the name of the queue\r\n+\t */\r\n+\t@RequiredScope({})\r\n+\t@ResponseStatus(HttpStatus.OK)\r\n+\t@RequestMapping(value = UrlHelpers.ADMIN_SQS_MESSAGE, method = RequestMethod.POST)\r\n+\tpublic @ResponseBody SQSSendMessageResponse sendSQSMessage(@RequestBody SQSSendMessageRequest messageRequest) {\r", "originalCommit": "9fc75c10be0ec08e1733d1ca32ef834591ae5446", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}