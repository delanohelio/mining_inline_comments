{"pr_number": 4078, "pr_title": "PLFM-5337: Added worker to compute the possible view model", "pr_createdAt": "2020-06-04T00:45:47Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4078", "timeline": [{"oid": "2e5a19de5ebf0c1624ad28f0b555df74ecbeaa13", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/2e5a19de5ebf0c1624ad28f0b555df74ecbeaa13", "message": "PLFM-5337: New worker to process view column model request", "committedDate": "2020-06-03T23:17:43Z", "type": "commit"}, {"oid": "ce919f6e6430adab2eb95efe22baa589dcee0436", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/ce919f6e6430adab2eb95efe22baa589dcee0436", "message": "Move determineCauseOfReplicationFailure logic to the manager layer", "committedDate": "2020-06-04T00:44:19Z", "type": "commit"}, {"oid": "07ebb3bb7ce14f5c7ea115c00965297a9b4503f2", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/07ebb3bb7ce14f5c7ea115c00965297a9b4503f2", "message": "Fix for unstable tests with async view queries", "committedDate": "2020-06-04T04:49:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwMDA1MQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4078#discussion_r435600051", "bodyText": "I am okay with a loop", "author": "john-hill", "createdAt": "2020-06-04T23:06:50Z", "path": "integration-test/src/test/java/org/sagebionetworks/IT100TableControllerTest.java", "diffHunk": "@@ -915,14 +920,40 @@ private TableEntity createTable(List<String> columns, SynapseClient synapse) thr\n \t * @param expectedCount\r\n \t * @return\r\n \t */\r\n-\tprivate ColumnModelPage waitForColumnModelPage(ViewScope scope, String nextPageToken, int expectedCount) throws Exception{\r\n-\t\t// TODO: Should switch to async job\r\n+\tprivate ViewColumnModelResponse waitForColumnModelPage(ViewScope scope, String nextPageToken, int expectedCount) throws Exception {\r\n+\t\tViewColumnModelRequest request = new ViewColumnModelRequest();\r\n+\t\t\r\n+\t\trequest.setViewScope(scope);\r\n+\t\trequest.setNextPageToken(nextPageToken);\r\n+\r\n+\t\tAtomicReference<String> tokenContainer = new AtomicReference<>();\r\n+\t\t\r", "originalCommit": "07ebb3bb7ce14f5c7ea115c00965297a9b4503f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}