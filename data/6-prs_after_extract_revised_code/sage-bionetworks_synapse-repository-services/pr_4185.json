{"pr_number": 4185, "pr_title": "PLFM-6408", "pr_createdAt": "2020-09-01T01:32:18Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185", "timeline": [{"oid": "9ab78b889d4d04b2f96d0926587dcfc303077951", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/9ab78b889d4d04b2f96d0926587dcfc303077951", "message": "PLFM-6408: added 'expires_in' to token response", "committedDate": "2020-08-31T15:28:25Z", "type": "commit"}, {"oid": "eefd4d7d764d168db7732567992586d23f40c9e4", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/eefd4d7d764d168db7732567992586d23f40c9e4", "message": "PLFM-6408:  Authorization time is when user logged in, not when refresh token was issued", "committedDate": "2020-08-31T17:00:00Z", "type": "commit"}, {"oid": "cd85c07f894817b6eb84e4097c4ab7c187e9314c", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/cd85c07f894817b6eb84e4097c4ab7c187e9314c", "message": "PLFM-6408:  Authorization time is when user logged in, not when refresh token was issued", "committedDate": "2020-09-01T00:48:24Z", "type": "commit"}, {"oid": "40f347a913b9e510b8b54ec39e14cd76c291392e", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/40f347a913b9e510b8b54ec39e14cd76c291392e", "message": "PLFM-6408: Corrected oauth error codes returned for authorization requests", "committedDate": "2020-09-01T15:27:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0MzI2OA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481343268", "bodyText": "use this in createPersonalAccessToken() too.  Make sure there are no other references to Jwts.claims()\ncreate a new factory, e.g., ????.createClaims() that returns a ClaimsWithAuthTime().", "author": "brucehoff", "createdAt": "2020-09-01T18:22:37Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java", "diffHunk": "@@ -111,28 +110,29 @@ public String createOIDCaccessToken(\n \t\t\tString issuer,\n \t\t\tString subject, \n \t\t\tString oauthClientId,\n-\t\t\tlong now, \n+\t\t\tlong now,\n+\t\t\tlong expirationTimeSeconds,\n \t\t\tDate authTime,\n \t\t\tString refreshTokenId,\n \t\t\tString accessTokenId,\n \t\t\tList<OAuthScope> scopes,\n \t\t\tMap<OIDCClaimName, OIDCClaimsRequestDetails> oidcClaims) {\n \t\t\n-\t\tClaims claims = Jwts.claims();\n+\t\tClaimsWithAuthTime claims = new ClaimsWithAuthTime();", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "chunk": "diff --git a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java\nindex 02bd7f9868..848665f1a2 100644\n--- a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java\n+++ b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java\n\n@@ -118,11 +117,12 @@ public class OIDCTokenHelperImpl implements InitializingBean, OIDCTokenHelper {\n \t\t\tList<OAuthScope> scopes,\n \t\t\tMap<OIDCClaimName, OIDCClaimsRequestDetails> oidcClaims) {\n \t\t\n-\t\tClaimsWithAuthTime claims = new ClaimsWithAuthTime();\n+\t\tClaimsWithAuthTime claims = ClaimsWithAuthTime.newClaims();\n \t\t\n \t\tClaimsJsonUtil.addAccessClaims(scopes, oidcClaims, claims);\n \t\t\n-\t\tclaims.setIssuer(issuer)\n+\t\tclaims.setAuthTime(authTime)\n+\t\t\t.setIssuer(issuer)\n \t\t\t.setAudience(oauthClientId)\n \t\t\t.setExpiration(new Date(now+expirationTimeSeconds*1000L))\n \t\t\t.setNotBefore(new Date(now))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0NDY3NQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481344675", "bodyText": "put setAuthTime here", "author": "brucehoff", "createdAt": "2020-09-01T18:25:13Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java", "diffHunk": "@@ -111,28 +110,29 @@ public String createOIDCaccessToken(\n \t\t\tString issuer,\n \t\t\tString subject, \n \t\t\tString oauthClientId,\n-\t\t\tlong now, \n+\t\t\tlong now,\n+\t\t\tlong expirationTimeSeconds,\n \t\t\tDate authTime,\n \t\t\tString refreshTokenId,\n \t\t\tString accessTokenId,\n \t\t\tList<OAuthScope> scopes,\n \t\t\tMap<OIDCClaimName, OIDCClaimsRequestDetails> oidcClaims) {\n \t\t\n-\t\tClaims claims = Jwts.claims();\n+\t\tClaimsWithAuthTime claims = new ClaimsWithAuthTime();\n \t\t\n \t\tClaimsJsonUtil.addAccessClaims(scopes, oidcClaims, claims);\n \t\t\n \t\tclaims.setIssuer(issuer)\n \t\t\t.setAudience(oauthClientId)\n-\t\t\t.setExpiration(new Date(now+ACCESS_TOKEN_EXPIRATION_TIME_SECONDS*1000L))\n+\t\t\t.setExpiration(new Date(now+expirationTimeSeconds*1000L))", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "chunk": "diff --git a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java\nindex 02bd7f9868..848665f1a2 100644\n--- a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java\n+++ b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OIDCTokenHelperImpl.java\n\n@@ -118,11 +117,12 @@ public class OIDCTokenHelperImpl implements InitializingBean, OIDCTokenHelper {\n \t\t\tList<OAuthScope> scopes,\n \t\t\tMap<OIDCClaimName, OIDCClaimsRequestDetails> oidcClaims) {\n \t\t\n-\t\tClaimsWithAuthTime claims = new ClaimsWithAuthTime();\n+\t\tClaimsWithAuthTime claims = ClaimsWithAuthTime.newClaims();\n \t\t\n \t\tClaimsJsonUtil.addAccessClaims(scopes, oidcClaims, claims);\n \t\t\n-\t\tclaims.setIssuer(issuer)\n+\t\tclaims.setAuthTime(authTime)\n+\t\t\t.setIssuer(issuer)\n \t\t\t.setAudience(oauthClientId)\n \t\t\t.setExpiration(new Date(now+expirationTimeSeconds*1000L))\n \t\t\t.setNotBefore(new Date(now))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0NjY1Nw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481346657", "bodyText": "throw new OAuthBadRequestException(OAuthErrorCode.invalid_request, e.getMessage(), e), i.e., chain the exceptions", "author": "brucehoff", "createdAt": "2020-09-01T18:28:55Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -126,13 +128,21 @@ public void setClaimProviders(Map<OIDCClaimName, OIDCClaimProvider> claimProvide\n \t}\n \n \tpublic static void validateAuthenticationRequest(OIDCAuthorizationRequest authorizationRequest, OAuthClient client) {\n-\t\tValidateArgument.validUrl(authorizationRequest.getRedirectUri(), \"Redirect URI\");\n+\t\ttry {\n+\t\t\tValidateArgument.validUrl(authorizationRequest.getRedirectUri(), \"Redirect URI\");\n+\t\t} catch (IllegalArgumentException e) {\n+\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_request, e.getMessage());", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "chunk": "diff --git a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\nindex 2dbc9092b5..5d8420e79e 100644\n--- a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\n+++ b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\n\n@@ -131,7 +131,7 @@ public class OpenIDConnectManagerImpl implements OpenIDConnectManager {\n \t\ttry {\n \t\t\tValidateArgument.validUrl(authorizationRequest.getRedirectUri(), \"Redirect URI\");\n \t\t} catch (IllegalArgumentException e) {\n-\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_request, e.getMessage());\n+\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_request, e);\n \t\t}\n \t\tif (!client.getRedirect_uris().contains(authorizationRequest.getRedirectUri())) {\n \t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_grant, \"Redirect URI \"+authorizationRequest.getRedirectUri()+\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0OTQ5Mw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481349493", "bodyText": "convert to assertThrows", "author": "brucehoff", "createdAt": "2020-09-01T18:34:00Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java", "diffHunk": "@@ -288,8 +290,8 @@ public void testValidateAuthenticationRequest_invalidUri() {\n \t\t\t// method under test\n \t\t\tOpenIDConnectManagerImpl.validateAuthenticationRequest(authorizationRequest, client);\n \t\t\tfail(\"Exception expected.\");\n-\t\t} catch (IllegalArgumentException e) {\n-\t\t\t// as expected\n+\t\t} catch (OAuthBadRequestException e) {", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "chunk": "diff --git a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\nindex ef7e56c03a..8b9290a95b 100644\n--- a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\n+++ b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\n\n@@ -286,13 +285,12 @@ public class OpenIDConnectManagerImplUnitTest {\n \t\tauthorizationRequest.setRedirectUri(\"some invalid uri\");\n \t\tauthorizationRequest.setResponseType(OAuthResponseType.code);\n \t\t\n-\t\ttry {\n+\t\tOAuthBadRequestException ex = assertThrows(OAuthBadRequestException.class, () -> {\n \t\t\t// method under test\n \t\t\tOpenIDConnectManagerImpl.validateAuthenticationRequest(authorizationRequest, client);\n-\t\t\tfail(\"Exception expected.\");\n-\t\t} catch (OAuthBadRequestException e) {\n-\t\t\tassertEquals(OAuthErrorCode.invalid_request, e.getError());\n-\t\t}\n+\t\t});\n+\t\tassertEquals(OAuthErrorCode.invalid_request, ex.getError());\n+\t\tassertEquals(\"invalid_request Redirect URI is not a valid url: some invalid uri\", ex.getMessage());\n \t}\n \n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0OTYxMQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481349611", "bodyText": "change to assertThrows; check message too", "author": "brucehoff", "createdAt": "2020-09-01T18:34:14Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java", "diffHunk": "@@ -308,7 +310,7 @@ public void testValidateAuthenticationRequest_invalidResponseType() {\n \t\t\tOpenIDConnectManagerImpl.validateAuthenticationRequest(authorizationRequest, client);\n \t\t\tfail(\"Exception expected.\");\n \t\t} catch (OAuthBadRequestException e) {\n-\t\t\t// as expected\n+\t\t\tassertEquals(OAuthErrorCode.invalid_request, e.getError());", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "chunk": "diff --git a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\nindex ef7e56c03a..8b9290a95b 100644\n--- a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\n+++ b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\n\n@@ -305,13 +303,12 @@ public class OpenIDConnectManagerImplUnitTest {\n \t\tauthorizationRequest.setRedirectUri(REDIRCT_URIS.get(0));\n \t\tauthorizationRequest.setResponseType(null);\n \t\t\n-\t\ttry {\n+\t\tOAuthBadRequestException ex = assertThrows(OAuthBadRequestException.class, () -> {\n \t\t\t// method under test\n \t\t\tOpenIDConnectManagerImpl.validateAuthenticationRequest(authorizationRequest, client);\n-\t\t\tfail(\"Exception expected.\");\n-\t\t} catch (OAuthBadRequestException e) {\n-\t\t\tassertEquals(OAuthErrorCode.invalid_request, e.getError());\n-\t\t}\n+\t\t});\n+\t\tassertEquals(OAuthErrorCode.invalid_request, ex.getError());\n+\t\tassertEquals(\"invalid_request Missing response_type.\", ex.getMessage());\n \t}\t\n \n \tprivate static final String NONCE = UUID.randomUUID().toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MDAxNQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481350015", "bodyText": "assertThrows; check message", "author": "brucehoff", "createdAt": "2020-09-01T18:35:01Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java", "diffHunk": "@@ -443,9 +445,10 @@ public void testGetAuthenticationRequestDescription_BadRedirectURI() {\n \t\ttry {\n \t\t\t// method under test\n \t\t\topenIDConnectManagerImpl.getAuthenticationRequestDescription(authorizationRequest);\n-\t\t\tfail(\"IllegalArgumentException expected\");\n-\t\t} catch (IllegalArgumentException e) {\n+\t\t\tfail(\"OAuthBadRequestException expected\");\n+\t\t} catch (OAuthBadRequestException e) {\n \t\t\t// as expected\n+\t\t\tassertEquals(OAuthErrorCode.invalid_request, e.getError());", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "chunk": "diff --git a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\nindex ef7e56c03a..8b9290a95b 100644\n--- a/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\n+++ b/services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java\n\n@@ -442,15 +435,12 @@ public class OpenIDConnectManagerImplUnitTest {\n \t\tOIDCAuthorizationRequest authorizationRequest = createAuthorizationRequest();\n \t\tauthorizationRequest.setRedirectUri(\"some other redir uri\");\n \n-\t\ttry {\n+\t\tOAuthBadRequestException ex = assertThrows(OAuthBadRequestException.class, () -> {\n \t\t\t// method under test\n \t\t\topenIDConnectManagerImpl.getAuthenticationRequestDescription(authorizationRequest);\n-\t\t\tfail(\"OAuthBadRequestException expected\");\n-\t\t} catch (OAuthBadRequestException e) {\n-\t\t\t// as expected\n-\t\t\tassertEquals(OAuthErrorCode.invalid_request, e.getError());\n-\t\t}\n-\n+\t\t});\n+\t\tassertEquals(OAuthErrorCode.invalid_request, ex.getError());\n+\t\tassertEquals(\"invalid_request Redirect URI is not a valid url: some other redir uri\", ex.getMessage());\n \t}\n \t\n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1NTcxMQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4185#discussion_r481355711", "bodyText": "add verify() statements", "author": "brucehoff", "createdAt": "2020-09-01T18:45:48Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImplUnitTest.java", "diffHunk": "@@ -1089,11 +1100,11 @@ public void testGetTokenResponseWithRefreshToken_nullOrEmptyScope() {\n \n \t\tString expectedIdToken = \"ID-TOKEN\";\n \t\twhen(oidcTokenHelper.createOIDCIdToken(eq(OAUTH_ENDPOINT), eq(ppid), eq(OAUTH_CLIENT_ID), anyLong(),\n-\t\t\t\tisNull(), eq(initalAuthzOn), anyString(), userInfoCaptor.capture())).thenReturn(expectedIdToken);\n+\t\t\t\tisNull(), eq(authenticationTime), anyString(), userInfoCaptor.capture())).thenReturn(expectedIdToken);\n \n \t\tString expectedAccessToken = \"ACCESS-TOKEN\";\n-\t\twhen(oidcTokenHelper.createOIDCaccessToken(eq(OAUTH_ENDPOINT), eq(ppid), eq(OAUTH_CLIENT_ID), anyLong(),\n-\t\t\t\teq(initalAuthzOn), eq(expectedRefreshTokenAndId.getMetadata().getTokenId()), anyString(), scopesCaptor.capture(), claimsCaptor.capture())).thenReturn(expectedAccessToken);\n+\t\twhen(oidcTokenHelper.createOIDCaccessToken(eq(OAUTH_ENDPOINT), eq(ppid), eq(OAUTH_CLIENT_ID), anyLong(), anyLong(),\n+\t\t\t\teq(authenticationTime), eq(expectedRefreshTokenAndId.getMetadata().getTokenId()), anyString(), scopesCaptor.capture(), claimsCaptor.capture())).thenReturn(expectedAccessToken);", "originalCommit": "40f347a913b9e510b8b54ec39e14cd76c291392e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "15e92cc471912b3640c9fbcace5b4afca3ae6276", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/15e92cc471912b3640c9fbcace5b4afca3ae6276", "message": "PLFM-6408: updates from code review", "committedDate": "2020-09-01T21:59:35Z", "type": "commit"}]}