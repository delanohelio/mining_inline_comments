{"pr_number": 4104, "pr_title": "PLFM-6286", "pr_createdAt": "2020-06-22T16:25:54Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104", "timeline": [{"oid": "df03d329767b4f17c7637a971fc8a162425816d4", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/df03d329767b4f17c7637a971fc8a162425816d4", "message": "Add OAuthErrorResponse and multiple exceptions that map to it in order to return error responses that match the OAuth 2/OIDC specs", "committedDate": "2020-06-22T17:07:54Z", "type": "commit"}, {"oid": "cbd74d2a47cb9fc9783ab25eeadd92fe64fbd78d", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/cbd74d2a47cb9fc9783ab25eeadd92fe64fbd78d", "message": "Add tests for exception handlers, rename OAuthUnauthorizedException -> OAuthUnauthenticatedException", "committedDate": "2020-06-22T17:07:54Z", "type": "commit"}, {"oid": "cbd74d2a47cb9fc9783ab25eeadd92fe64fbd78d", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/cbd74d2a47cb9fc9783ab25eeadd92fe64fbd78d", "message": "Add tests for exception handlers, rename OAuthUnauthorizedException -> OAuthUnauthenticatedException", "committedDate": "2020-06-22T17:07:54Z", "type": "forcePushed"}, {"oid": "f809493e0687ac794db814da8ad643151c051528", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/f809493e0687ac794db814da8ad643151c051528", "message": "Fix test and rename-induced typo", "committedDate": "2020-06-22T19:29:16Z", "type": "commit"}, {"oid": "8c1b4a5746046eea4457e786f14deb0dd525459f", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/8c1b4a5746046eea4457e786f14deb0dd525459f", "message": "Fix wrong package", "committedDate": "2020-06-22T19:52:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyNzg4Nw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444227887", "bodyText": "I didn't change this error message because I am not sure what the proper error code should be (of the error codes in the OIDC section in the commented URL).", "author": "nickgros", "createdAt": "2020-06-23T13:34:54Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -205,14 +208,15 @@ public boolean hasUserGrantedConsent(UserInfo userInfo, OIDCAuthorizationRequest\n \tpublic OAuthAuthorizationResponse authorizeClient(UserInfo userInfo,\n \t\t\tOIDCAuthorizationRequest authorizationRequest) {\n \t\tif (AuthorizationUtils.isUserAnonymous(userInfo)) {\n+\t\t\t// Perhaps this should be an OIDC Error Code: https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n \t\t\tthrow new UnauthorizedException(\"Anonymous users may not provide access to OAuth clients.\");", "originalCommit": "8c1b4a5746046eea4457e786f14deb0dd525459f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4ODI0NQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444388245", "bodyText": "login_required", "author": "brucehoff", "createdAt": "2020-06-23T17:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyNzg4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b4efce0949766d42d8098b223717ef1dfc993faf", "chunk": "diff --git a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\nindex 937f2279c5..1499e92a22 100644\n--- a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\n+++ b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\n\n@@ -209,7 +208,7 @@ public class OpenIDConnectManagerImpl implements OpenIDConnectManager {\n \t\t\tOIDCAuthorizationRequest authorizationRequest) {\n \t\tif (AuthorizationUtils.isUserAnonymous(userInfo)) {\n \t\t\t// Perhaps this should be an OIDC Error Code: https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n-\t\t\tthrow new UnauthorizedException(\"Anonymous users may not provide access to OAuth clients.\");\n+\t\t\tthrow new OAuthUnauthenticatedException(OAuthErrorCode.login_required, \"Anonymous users may not provide access to OAuth clients.\");\n \t\t}\n \n \t\tOAuthClient client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMDQ1OQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444230459", "bodyText": "Per OAuth 2.1, using a revoked access token should result in a 403, not a 400.", "author": "nickgros", "createdAt": "2020-06-23T13:38:28Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -270,7 +274,7 @@ public String validateAccessToken(String jwtToken) {\n \t\tString userId = getUserIdFromPPID(claims.getSubject(), claims.getAudience());\n \t\tString refreshTokenId = claims.get(OIDCClaimName.refresh_token_id.name(), String.class);\n \t\tif (refreshTokenId != null && !oauthRefreshTokenManager.isRefreshTokenActive(refreshTokenId)) {\n-\t\t\tthrow new IllegalArgumentException(\"The access token has been revoked\");\n+\t\t\tthrow new OAuthUnauthenticatedException(OAuthErrorCode.invalid_token, \"The access token has been revoked\");", "originalCommit": "8c1b4a5746046eea4457e786f14deb0dd525459f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/6adaf4aa8c94471106a78afebed0a9ca3c0025e7", "message": "Error message changes in refresh token manager and service", "committedDate": "2020-06-23T13:52:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MjQxNA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444242414", "bodyText": "Why was this ISE?", "author": "nickgros", "createdAt": "2020-06-23T13:54:24Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -314,25 +318,25 @@ public OIDCTokenResponse generateTokenResponseWithAuthorizationCode(String code,\n \t\ttry {\n \t\t\tserializedAuthorizationRequest = stackEncrypter.decryptStackEncryptedAndBase64EncodedString(code);\n \t\t} catch (Exception e) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid authorization code: \"+code, e);\n+\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_grant, \"Invalid authorization code: \"+code, e);\n \t\t}\n \t\tOIDCAuthorizationRequest authorizationRequest = new OIDCAuthorizationRequest();\n \t\ttry {\n \t\t\tJSONObjectAdapter adapter = new JSONObjectAdapterImpl(serializedAuthorizationRequest);\n \t\t\tauthorizationRequest.initializeFromJSONObject(adapter);\n \t\t} catch (JSONObjectAdapterException e) {\n-\t\t\tthrow new IllegalStateException(\"Incorrectly formatted authorization code: \"+code, e);\n+\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_grant, \"Incorrectly formatted authorization code: \"+code, e);", "originalCommit": "8c1b4a5746046eea4457e786f14deb0dd525459f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b4efce0949766d42d8098b223717ef1dfc993faf", "chunk": "diff --git a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\nindex 937f2279c5..1499e92a22 100644\n--- a/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\n+++ b/services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java\n\n@@ -325,7 +324,8 @@ public class OpenIDConnectManagerImpl implements OpenIDConnectManager {\n \t\t\tJSONObjectAdapter adapter = new JSONObjectAdapterImpl(serializedAuthorizationRequest);\n \t\t\tauthorizationRequest.initializeFromJSONObject(adapter);\n \t\t} catch (JSONObjectAdapterException e) {\n-\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_grant, \"Incorrectly formatted authorization code: \"+code, e);\n+\t\t\t// This should never happen. If it does, the authz code was likely improperly encoded/decoded, which isn't the user's fault.\n+\t\t\tthrow new IllegalStateException(\"Incorrectly formatted authorization code: \"+code, e);\n \t\t}\n \n \t\t// enforce expiration of authorization code\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5MTQzNA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444391434", "bodyText": "this will go away", "author": "brucehoff", "createdAt": "2020-06-23T17:31:36Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java", "diffHunk": "@@ -242,6 +243,8 @@ public void write(JSONEntity entity, final MediaType contentType,\n \tpublic static String convertEntityToPlainText(JSONEntity entity) throws JSONObjectAdapterException {\r\n \t\tif (entity instanceof ErrorResponse) {\r\n \t\t\treturn ((ErrorResponse)entity).getReason();\r\n+\t\t} else if (entity instanceof OAuthErrorResponse) {\r", "originalCommit": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b4efce0949766d42d8098b223717ef1dfc993faf", "chunk": "diff --git a/services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java b/services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java\nindex 1416b306e8..78cba681e8 100644\n--- a/services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java\n+++ b/services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java\n\n@@ -243,8 +242,6 @@ public class JSONEntityHttpMessageConverter implements\tHttpMessageConverter<JSON\n \tpublic static String convertEntityToPlainText(JSONEntity entity) throws JSONObjectAdapterException {\n \t\tif (entity instanceof ErrorResponse) {\n \t\t\treturn ((ErrorResponse)entity).getReason();\n-\t\t} else if (entity instanceof OAuthErrorResponse) {\n-\t\t\treturn (((OAuthErrorResponse)(OAuthErrorResponse) entity).getError());\n \t\t} else {\n \t\t\treturn EntityFactory.createJSONStringForEntity(entity);\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5MjQ3MA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444392470", "bodyText": "will go away", "author": "brucehoff", "createdAt": "2020-06-23T17:33:31Z", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java", "diffHunk": "@@ -118,12 +119,20 @@ public void testErrorResponseRoundTripWithPlainTextMediaType() throws HttpMessag\n \t}\r\n \t\r\n \t@Test\r\n-\tpublic void testConvertEntityToPlainText() throws Exception {\r\n+\tpublic void testConvertErrorEntityToPlainText() throws Exception {\r\n \t\tErrorResponse error = new ErrorResponse();\r\n \t\terror.setReason(\"foo\");\r\n \t\tassertEquals(\"foo\", JSONEntityHttpMessageConverter.convertEntityToPlainText(error));\r\n \t}\r\n-\t\r\n+\r\n+\t@Test\r\n+\tpublic void testConvertOAuthErrorEntityToPlainText() throws Exception {\r\n+\t\tOAuthErrorResponse error = new OAuthErrorResponse();\r", "originalCommit": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b4efce0949766d42d8098b223717ef1dfc993faf", "chunk": "diff --git a/services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java b/services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java\nindex e3e7e692e7..57a9281b93 100644\n--- a/services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java\n+++ b/services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java\n\n@@ -119,20 +118,12 @@ public class JSONEntityHttpMessageConverterTest {\n \t}\n \t\n \t@Test\n-\tpublic void testConvertErrorEntityToPlainText() throws Exception {\n+\tpublic void testConvertEntityToPlainText() throws Exception {\n \t\tErrorResponse error = new ErrorResponse();\n \t\terror.setReason(\"foo\");\n \t\tassertEquals(\"foo\", JSONEntityHttpMessageConverter.convertEntityToPlainText(error));\n \t}\n \n-\t@Test\n-\tpublic void testConvertOAuthErrorEntityToPlainText() throws Exception {\n-\t\tOAuthErrorResponse error = new OAuthErrorResponse();\n-\t\terror.setError(\"foo\");\n-\t\tassertEquals(\"foo\", JSONEntityHttpMessageConverter.convertEntityToPlainText(error));\n-\t}\n-\n-\n \t@Test \n \tpublic void testReadToString() throws IOException{\n \t\tString value = \"This string should make a round trip!\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5MzYyMg==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444393622", "bodyText": "instead of adding a new method, just replace String reason with JSONEntity errorEntity.\nyou could then add two methods, one that turns a reason string into an ErrorResponse and another that turns OAuthErrorCode errorCode, String description into OAuthErrorResponse.  Each one then calls the common method that writes to the HttpResponse.\nBTW, only write WWW-Authenticate response header is status=401", "author": "brucehoff", "createdAt": "2020-06-23T17:35:40Z", "path": "services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java", "diffHunk": "@@ -136,4 +145,32 @@ public static void reject(HttpServletResponse resp, String reason, HttpStatus st\n \t\t}\n \t\tresp.getWriter().flush();\n \t}\n+\n+\t/**\n+\t * OAuth errors don't have the same JSON format as our regular error, so this method may be used for\n+\t * sending error responses caused by OAuth services\n+\t */\n+\tpublic static void rejectWithOAuthError(HttpServletResponse resp, OAuthErrorCode errorCode, String description, HttpStatus status) throws IOException {\n+\t\tresp.setStatus(status.value());\n+\n+\t\t// This header is required according to RFC-2612\n+\t\t// See: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2\n+\t\t//      http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.47\n+\t\t//      http://www.ietf.org/rfc/rfc2617.txt\n+\t\tresp.setContentType(\"application/json\");\n+\t\tresp.setHeader(\"WWW-Authenticate\", \"\\\"Digest\\\" your email\");", "originalCommit": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b4efce0949766d42d8098b223717ef1dfc993faf", "chunk": "diff --git a/services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java b/services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java\nindex 33115a92a7..ef8b6906ed 100644\n--- a/services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java\n+++ b/services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java\n\n@@ -132,45 +133,40 @@ public class HttpAuthUtil {\n \t\t//      http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.47\n \t\t//      http://www.ietf.org/rfc/rfc2617.txt\n \t\tresp.setContentType(\"application/json\");\n-\t\tresp.setHeader(\"WWW-Authenticate\", \"\\\"Digest\\\" your email\");\n-\t\tErrorResponse er = new ErrorResponse();\n-\t\ter.setReason(reason);\n+\t\tif (status.equals(HttpStatus.UNAUTHORIZED)) {\n+\t\t\tresp.setHeader(\"WWW-Authenticate\", \"\\\"Digest\\\" your email\");\n+\t\t}\n \t\tJSONObjectAdapter joa = new JSONObjectAdapterImpl();\n \t\ttry {\n-\t\t\ter.writeToJSONObject(joa);\n+\t\t\tresponseBody.writeToJSONObject(joa);\n \t\t\tresp.getWriter().println(joa.toJSONString());\n \t\t} catch (JSONObjectAdapterException e) {\n \t\t\t// give up here, use old method, so we at least send something back\n-\t\t\tresp.getWriter().println(\"{\\\"reason\\\": \\\"\" + reason + \"\\\"}\");\n+\t\t\tresp.getWriter().println(responseBody.toString());\n \t\t}\n \t\tresp.getWriter().flush();\n \t}\n+\t\n+\tpublic static void rejectWithErrorResponse(HttpServletResponse resp, String reason, HttpStatus status) throws IOException {\n+\t\tErrorResponse er = new ErrorResponse();\n+\t\ter.setReason(reason);\n+\t\treject(resp, er, status);\n+\t}\n \n \t/**\n \t * OAuth errors don't have the same JSON format as our regular error, so this method may be used for\n \t * sending error responses caused by OAuth services\n \t */\n \tpublic static void rejectWithOAuthError(HttpServletResponse resp, OAuthErrorCode errorCode, String description, HttpStatus status) throws IOException {\n-\t\tresp.setStatus(status.value());\n-\n-\t\t// This header is required according to RFC-2612\n-\t\t// See: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2\n-\t\t//      http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.47\n-\t\t//      http://www.ietf.org/rfc/rfc2617.txt\n-\t\tresp.setContentType(\"application/json\");\n-\t\tresp.setHeader(\"WWW-Authenticate\", \"\\\"Digest\\\" your email\");\n \t\tOAuthErrorResponse er = new OAuthErrorResponse();\n \t\ter.setError(errorCode.name());\n \t\ter.setError_description(description);\n-\t\tJSONObjectAdapter joa = new JSONObjectAdapterImpl();\n-\t\ttry {\n-\t\t\ter.writeToJSONObject(joa);\n-\t\t\tresp.getWriter().println(joa.toJSONString());\n-\t\t} catch (JSONObjectAdapterException e) {\n-\t\t\t// give up here, use old method, so we at least send something back\n-\t\t\tresp.getWriter().println(\"{\\\"error\\\": \\\"\" + errorCode + \"\\\"}\");\n+\t\tif (description != null) {\n+\t\t\ter.setReason(errorCode.name() + \". \" + description);\n+\t\t} else {\n+\t\t\ter.setReason(errorCode.name());\n \t\t}\n-\t\tresp.getWriter().flush();\n+\t\treject(resp, er, status);\n \t}\n \n }\n"}}, {"oid": "b4efce0949766d42d8098b223717ef1dfc993faf", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/b4efce0949766d42d8098b223717ef1dfc993faf", "message": "Code review changes #4104", "committedDate": "2020-06-23T19:00:42Z", "type": "commit"}, {"oid": "f860fef847355c0f228209cc0b0b1f694738f5f4", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/f860fef847355c0f228209cc0b0b1f694738f5f4", "message": "Fix tests", "committedDate": "2020-06-23T19:53:46Z", "type": "commit"}]}