{"pr_number": 4076, "pr_title": "Plfm 6209", "pr_createdAt": "2020-06-03T16:43:48Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4076", "timeline": [{"oid": "9cc6135ee862734123b8cb40f8ba7fd79972174f", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/9cc6135ee862734123b8cb40f8ba7fd79972174f", "message": "PLFM-6209 Remove dependence on deprecated method", "committedDate": "2020-06-03T00:31:11Z", "type": "commit"}, {"oid": "a4fa9a8e145b70f1697926f1020e94dba8a5ce51", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/a4fa9a8e145b70f1697926f1020e94dba8a5ce51", "message": "PLFM-6209 Remove dependence on deprecated method", "committedDate": "2020-06-03T15:57:26Z", "type": "commit"}, {"oid": "2ca1732419a620ede02d574c19bff01f4c665198", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/2ca1732419a620ede02d574c19bff01f4c665198", "message": "PLFM-6209 Remove dependence on deprecated method", "committedDate": "2020-06-03T16:41:11Z", "type": "commit"}, {"oid": "d935351fe8253bb6eb79ee1b31df98f6c35fe144", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/d935351fe8253bb6eb79ee1b31df98f6c35fe144", "message": "PLFM-6209 Remove dependence on deprecated method", "committedDate": "2020-06-04T13:57:09Z", "type": "commit"}, {"oid": "3f6c766661a7745fdb8d5e1a70c2e0741f42a70b", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/3f6c766661a7745fdb8d5e1a70c2e0741f42a70b", "message": "PLFM-6209 Remove dependence on deprecated method", "committedDate": "2020-06-04T17:48:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMDczOQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4076#discussion_r436130739", "bodyText": "can use nodeDao.getCreatedBy()", "author": "john-hill", "createdAt": "2020-06-05T19:50:03Z", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/RestrictionInformationManagerImpl.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package org.sagebionetworks.repo.manager;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.sagebionetworks.repo.model.AccessApprovalDAO;\n+import org.sagebionetworks.repo.model.AccessRequirementDAO;\n+import org.sagebionetworks.repo.model.AccessRequirementStats;\n+import org.sagebionetworks.repo.model.EntityType;\n+import org.sagebionetworks.repo.model.Node;\n+import org.sagebionetworks.repo.model.NodeDAO;\n+import org.sagebionetworks.repo.model.RestrictableObjectType;\n+import org.sagebionetworks.repo.model.RestrictionInformationRequest;\n+import org.sagebionetworks.repo.model.RestrictionInformationResponse;\n+import org.sagebionetworks.repo.model.RestrictionLevel;\n+import org.sagebionetworks.repo.model.UserInfo;\n+import org.sagebionetworks.repo.model.jdo.KeyFactory;\n+import org.sagebionetworks.util.ValidateArgument;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class RestrictionInformationManagerImpl implements RestrictionInformationManager {\n+\t@Autowired\n+\tprivate AccessRequirementDAO accessRequirementDAO;\n+\n+\t@Autowired\n+\tprivate AccessApprovalDAO accessApprovalDAO;\n+\t\n+\t@Autowired\n+\tprivate NodeDAO nodeDao;\n+\t\n+\n+\t@Override\n+\tpublic RestrictionInformationResponse getRestrictionInformation(UserInfo userInfo, RestrictionInformationRequest request) {\n+\t\tValidateArgument.required(userInfo, \"userInfo\");\n+\t\tValidateArgument.required(request, \"request\");\n+\t\tValidateArgument.required(request.getObjectId(), \"RestrictionInformationRequest.objectId\");\n+\t\tValidateArgument.required(request.getRestrictableObjectType(), \"RestrictionInformationRequest.restrictableObjectType\");\n+\t\tRestrictionInformationResponse info = new RestrictionInformationResponse();\n+\n+\t\tboolean userIsFileCreator=false;\n+\t\tif (RestrictableObjectType.ENTITY == request.getRestrictableObjectType()) {\n+\t\t\t// if the user is the owner of the entity (and the entity is a File), then she automatically \n+\t\t\t// has access to the object and therefore has no unmet access requirements\n+\t\t\tLong principalId = userInfo.getId();\n+\t\t\tNode node = nodeDao.getNode(request.getObjectId());", "originalCommit": "3f6c766661a7745fdb8d5e1a70c2e0741f42a70b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzE1MA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4076#discussion_r438213150", "bodyText": "Actually we can't!  We have to get both the creator and the entity type otherwise we will report that the owner of a Folder has no access restrictions, while they may be unable to access restricted  files in the folder (created by others).", "author": "brucehoff", "createdAt": "2020-06-10T15:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMDczOQ=="}], "type": "inlineReview", "revised_code": null}]}