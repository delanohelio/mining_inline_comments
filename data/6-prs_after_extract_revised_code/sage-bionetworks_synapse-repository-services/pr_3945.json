{"pr_number": 3945, "pr_title": "diff schema agains the list column index tables (PLFM-6058)", "pr_createdAt": "2020-02-14T02:19:09Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3945", "timeline": [{"oid": "0a17d3146b6dd83ed07b178fe600a3e869e73d1e", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/0a17d3146b6dd83ed07b178fe600a3e869e73d1e", "message": "edge case tests for list column schema change", "committedDate": "2020-02-05T03:21:00Z", "type": "commit"}, {"oid": "e2917db650b20a85155d29697dc768e2dfd49ce0", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e2917db650b20a85155d29697dc768e2dfd49ce0", "message": "low level changes for list column schema change", "committedDate": "2020-02-06T02:03:28Z", "type": "commit"}, {"oid": "51f958ccf95c9bd2e6f769c1999689e4cc63ef84", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/51f958ccf95c9bd2e6f769c1999689e4cc63ef84", "message": "change test", "committedDate": "2020-02-06T03:18:55Z", "type": "commit"}, {"oid": "92f320099a5832219aa482be55fdfd0678dee54c", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/92f320099a5832219aa482be55fdfd0678dee54c", "message": "removed unused try/catch", "committedDate": "2020-02-07T00:33:18Z", "type": "commit"}, {"oid": "674fa49601db896f5b706f500d0b3a3349b32ad1", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/674fa49601db896f5b706f500d0b3a3349b32ad1", "message": "code for diffing required changes with existing list column indexes", "committedDate": "2020-02-07T05:45:18Z", "type": "commit"}, {"oid": "16ffc4fafd4e864087fcc2bf662fba52f20db1a3", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/16ffc4fafd4e864087fcc2bf662fba52f20db1a3", "message": "alter table", "committedDate": "2020-02-08T02:49:51Z", "type": "commit"}, {"oid": "dd5cf5402a6b8c97c3e80308942861c6ea082ca1", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/dd5cf5402a6b8c97c3e80308942861c6ea082ca1", "message": "Merge branch 'develop' of github.com:Sage-Bionetworks/Synapse-Repository-Services into PLFM-6058-schema-diff", "committedDate": "2020-02-10T23:21:04Z", "type": "commit"}, {"oid": "26dd2658f6f4bf7be6790d48544a52ee11317c77", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/26dd2658f6f4bf7be6790d48544a52ee11317c77", "message": "finished altering index table", "committedDate": "2020-02-11T03:34:36Z", "type": "commit"}, {"oid": "519562e507bd63efd8c475922d5ee98a0aa25c24", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/519562e507bd63efd8c475922d5ee98a0aa25c24", "message": "can't easily do type conversions", "committedDate": "2020-02-12T05:16:54Z", "type": "commit"}, {"oid": "a68424c337ba24e81ce1e711bf2ffe1e4918111d", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/a68424c337ba24e81ce1e711bf2ffe1e4918111d", "message": "undo altertemp for index tables. addd some tests", "committedDate": "2020-02-13T02:43:27Z", "type": "commit"}, {"oid": "f5e0ac04169efc8d7e29bbac15a064d83e0cdea9", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/f5e0ac04169efc8d7e29bbac15a064d83e0cdea9", "message": "cleanup and tests", "committedDate": "2020-02-14T02:18:08Z", "type": "commit"}, {"oid": "998d585b4d9269169a52510db124649f70a38c58", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/998d585b4d9269169a52510db124649f70a38c58", "message": "fix foreign key constraint unqiueness", "committedDate": "2020-02-14T04:36:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDAyNw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3945#discussion_r379710027", "bodyText": "util to get table names", "author": "john-hill", "createdAt": "2020-02-15T02:07:12Z", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java", "diffHunk": "@@ -3365,4 +3338,91 @@ public void testCreateAndPopulateListColumnIndexTables__DefaultValue() throws Pa\n \t\t//mysql adds spaces between the commas on returned results\r\n \t\tassertEquals(\"[1, 2, 3]\", results.getRows().get(0).getValues().get(1));\r\n \t}\r\n+\r\n+\r\n+\t@Test\r\n+\tpublic void testGetMultivalueColumnIndexTableColumnIds(){\r\n+\t\tColumnModel strListColumn = new ColumnModel();\r\n+\t\tstrListColumn.setId(\"12\");\r\n+\t\tstrListColumn.setName(\"foo\");\r\n+\t\tstrListColumn.setMaximumSize(14L);\r\n+\t\tstrListColumn.setColumnType(ColumnType.STRING_LIST);\r\n+\r\n+\t\tColumnModel intColumn = new ColumnModel();\r\n+\t\tintColumn.setId(\"14\");\r\n+\t\tintColumn.setName(\"foo\");\r\n+\t\tintColumn.setColumnType(ColumnType.INTEGER);\r\n+\r\n+\t\tColumnModel intListColumn = new ColumnModel();\r\n+\t\tintListColumn.setId(\"16\");\r\n+\t\tintListColumn.setName(\"intList\");\r\n+\t\tintListColumn.setColumnType(ColumnType.INTEGER_LIST);\r\n+\t\tintListColumn.setDefaultValue(\"[1,2,3]\");\r\n+\r\n+\t\tList<ColumnModel> schema = Arrays.asList(strListColumn, intColumn, intListColumn);\r\n+\t\tcreateOrUpdateTable(schema, tableId, isView);\r\n+\r\n+\t\t//method under test\r\n+\t\tSet<Long> columnIds = tableIndexDAO.getMultivalueColumnIndexTableColumnIds(tableId);\r\n+\t\tassertEquals(Sets.newHashSet(12L,16L), columnIds);\r\n+\t}\r\n+\r\n+\t@Test\r\n+\tpublic void testGetMultivalueColumnIndexTableColumnIds__emptyList(){\r\n+\t\tColumnModel intColumn = new ColumnModel();\r\n+\t\tintColumn.setId(\"14\");\r\n+\t\tintColumn.setName(\"foo\");\r\n+\t\tintColumn.setColumnType(ColumnType.INTEGER);\r\n+\r\n+\t\tList<ColumnModel> schema = Arrays.asList(intColumn);\r\n+\t\tcreateOrUpdateTable(schema, tableId, isView);\r\n+\r\n+\t\t//method under test\r\n+\t\tSet<Long> columnIds = tableIndexDAO.getMultivalueColumnIndexTableColumnIds(tableId);\r\n+\t\tassertEquals(Collections.emptySet(), columnIds);\r\n+\t}\r\n+\r\n+\r\n+\r\n+\t@Test\r\n+\tpublic void testCreateUpdateDeleteMultivalueColumnIndexTable(){\r\n+\t\tColumnModel column = new ColumnModel();\r\n+\t\tcolumn.setColumnType(ColumnType.STRING_LIST);\r\n+\t\tcolumn.setId(\"1337\");\r\n+\t\tcolumn.setMaximumSize(50L);\r\n+\t\tcolumn.setName(\"StringList\");\r\n+\t\t// Create the table\r\n+\t\ttableIndexDAO.createTableIfDoesNotExist(tableId, isView);\r\n+\t\tboolean alterTemp = false;\r\n+\t\t//add column\r\n+\t\ttableIndexDAO.createMultivalueColumnIndexTable(tableId, column);\r\n+\r\n+\r\n+\t\t//check index table was created\r\n+\t\tassertNotNull(tableIndexDAO.getConnection().queryForObject(\"show tables like '\" + SQLUtils.getTableNameForMultiValueColumnIndex(tableId, column.getId()) + \"'\", String.class));\r", "originalCommit": "998d585b4d9269169a52510db124649f70a38c58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}