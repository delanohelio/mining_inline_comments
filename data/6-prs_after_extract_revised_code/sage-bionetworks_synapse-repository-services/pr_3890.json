{"pr_number": 3890, "pr_title": "suggest list type columns for annotations with multiple values (PLFM-6013)", "pr_createdAt": "2020-01-14T01:36:56Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890", "timeline": [{"oid": "11197923869863d23e78af910d4f428a18515367", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/11197923869863d23e78af910d4f428a18515367", "message": "suggest list type columns for annotations with multiple values", "committedDate": "2020-01-14T01:26:27Z", "type": "commit"}, {"oid": "97f5b51cce59926e85b55c67151f180e0ba9f27c", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/97f5b51cce59926e85b55c67151f180e0ba9f27c", "message": "regenerated hashCode(), equals() and toString() for ColumnAggregation", "committedDate": "2020-01-14T01:39:16Z", "type": "commit"}, {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e259094809a45fa367568fe95142fa5c27e69d8b", "message": "fix tests", "committedDate": "2020-01-14T02:06:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NjUwMw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367646503", "bodyText": "optional might work better than illegal arg for getListType();", "author": "john-hill", "createdAt": "2020-01-16T20:59:01Z", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "diffHunk": "@@ -885,9 +886,19 @@ public ColumnAggregation mapRow(ResultSet rs, int rowNum)\n \t\t\t\tColumnModel model = new ColumnModel();\r\n \t\t\t\tmodel.setName(aggregation.getColumnName());\r\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\r\n+\r\n+\t\t\t\t//check if a LIST columnType needs to be used\r\n+\t\t\t\tif(aggregation.getListSize() > 1){\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\r", "originalCommit": "e259094809a45fa367568fe95142fa5c27e69d8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY2NjgzNw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367666837", "bodyText": "Other parts of code is relying on it throwing an exception being thrown if unexpected usage of  conversion to list type occurs", "author": "zimingd", "createdAt": "2020-01-16T21:46:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NjUwMw=="}], "type": "inlineReview", "revised_code": {"commit": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "chunk": "diff --git a/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java b/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java\nindex bedd2f7871..a493eddbba 100644\n--- a/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java\n+++ b/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java\n\n@@ -888,9 +888,9 @@ public class TableIndexDAOImpl implements TableIndexDAO {\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\n \n \t\t\t\t//check if a LIST columnType needs to be used\n-\t\t\t\tif(aggregation.getListSize() > 1){\n+\t\t\t\tif(aggregation.getMaxListSize() > 1){\n \t\t\t\t\ttry {\n-\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.listType(type);\n \t\t\t\t\t} catch (IllegalArgumentException e){\n \t\t\t\t\t\t//do nothing because a list type mapping does not exist\n \t\t\t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0OTI0Mg==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367649242", "bodyText": "max(json_lenght())\nNeed  a test that would show this returns the wrong value.", "author": "john-hill", "createdAt": "2020-01-16T21:05:33Z", "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -289,10 +292,12 @@ public static Long getReservedColumnId(String columnName) {\n \r\n \tpublic static final String P_LIMIT = \"pLimit\";\r\n \t\r\n-\tpublic static final String SELECT_DISTINCT_ANNOTATION_COLUMNS_TEMPLATE = \"SELECT A.\"\r\n-\t\t\t+ ANNOTATION_REPLICATION_COL_KEY + \", GROUP_CONCAT(DISTINCT A.\"\r\n-\t\t\t+ ANNOTATION_REPLICATION_COL_TYPE + \"), MAX(LENGTH(A.\"\r\n-\t\t\t+ ANNOTATION_REPLICATION_COL_STRING_VALUE + \"))\" + \" FROM \"\r\n+\tpublic static final String SELECT_DISTINCT_ANNOTATION_COLUMNS_TEMPLATE = \"SELECT \"\r\n+\t\t\t+\"A.\" + ANNOTATION_REPLICATION_COL_KEY\r\n+\t\t\t+\", GROUP_CONCAT(DISTINCT A.\" + ANNOTATION_REPLICATION_COL_TYPE + \")\"\r\n+\t\t\t+\", MAX(\"+ANNOTATION_REPLICATION_COL_MAX_STRING_LENGTH+\")\"\r\n+\t\t\t+\", JSON_LENGTH(\"+ANNOTATION_REPLICATION_COL_STRING_LIST_VALUE+\")\"\r", "originalCommit": "e259094809a45fa367568fe95142fa5c27e69d8b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "chunk": "diff --git a/lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java b/lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java\nindex 39ec604797..1802372bcd 100644\n--- a/lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java\n+++ b/lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java\n\n@@ -296,7 +296,7 @@ public class TableConstants {\n \t\t\t+\"A.\" + ANNOTATION_REPLICATION_COL_KEY\n \t\t\t+\", GROUP_CONCAT(DISTINCT A.\" + ANNOTATION_REPLICATION_COL_TYPE + \")\"\n \t\t\t+\", MAX(\"+ANNOTATION_REPLICATION_COL_MAX_STRING_LENGTH+\")\"\n-\t\t\t+\", JSON_LENGTH(\"+ANNOTATION_REPLICATION_COL_STRING_LIST_VALUE+\")\"\n+\t\t\t+\", MAX(JSON_LENGTH(\"+ANNOTATION_REPLICATION_COL_STRING_LIST_VALUE+\"))\"\n \t\t\t+ \" FROM \"\n \t\t\t+ ENTITY_REPLICATION_TABLE + \" AS E\" + \" INNER JOIN \"\n \t\t\t+ ANNOTATION_REPLICATION_TABLE + \" AS A\" + \" ON E.\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDIwNA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367650204", "bodyText": "maxListSize", "author": "john-hill", "createdAt": "2020-01-16T21:07:52Z", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "diffHunk": "@@ -885,9 +886,19 @@ public ColumnAggregation mapRow(ResultSet rs, int rowNum)\n \t\t\t\tColumnModel model = new ColumnModel();\r\n \t\t\t\tmodel.setName(aggregation.getColumnName());\r\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\r\n+\r\n+\t\t\t\t//check if a LIST columnType needs to be used\r\n+\t\t\t\tif(aggregation.getListSize() > 1){\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\r\n+\t\t\t\t\t} catch (IllegalArgumentException e){\r\n+\t\t\t\t\t\t//do nothing because a list type mapping does not exist\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\r\n \t\t\t\tmodel.setColumnType(type);\r\n-\t\t\t\tif(ColumnType.STRING == type) {\r\n-\t\t\t\t\tmodel.setMaximumSize(aggregation.getMaxSize());\r\n+\t\t\t\tif(ColumnType.STRING == type || ColumnType.STRING_LIST==type) {\r\n+\t\t\t\t\tmodel.setMaximumSize(aggregation.getMaxStringElementSize());\r", "originalCommit": "e259094809a45fa367568fe95142fa5c27e69d8b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "chunk": "diff --git a/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java b/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java\nindex bedd2f7871..a493eddbba 100644\n--- a/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java\n+++ b/lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java\n\n@@ -888,9 +888,9 @@ public class TableIndexDAOImpl implements TableIndexDAO {\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\n \n \t\t\t\t//check if a LIST columnType needs to be used\n-\t\t\t\tif(aggregation.getListSize() > 1){\n+\t\t\t\tif(aggregation.getMaxListSize() > 1){\n \t\t\t\t\ttry {\n-\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.listType(type);\n \t\t\t\t\t} catch (IllegalArgumentException e){\n \t\t\t\t\t\t//do nothing because a list type mapping does not exist\n \t\t\t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDY2Nw==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367650667", "bodyText": "all 3s?", "author": "john-hill", "createdAt": "2020-01-16T21:08:53Z", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "diffHunk": "@@ -2625,6 +2628,8 @@ public void testWriteAnnotationDtoToPreparedStatementLongList() throws SQLExcept\n \t\tverify(mockPreparedStatement).setString(9, \"[\\\"123\\\",\\\"456\\\",\\\"789\\\"]\");\r", "originalCommit": "e259094809a45fa367568fe95142fa5c27e69d8b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "chunk": "diff --git a/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java b/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java\nindex c91dfea1c1..6b56ca7a7e 100644\n--- a/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java\n+++ b/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java\n\n@@ -2625,10 +2625,10 @@ public class SQLUtilsTest {\n \t\tverify(mockPreparedStatement).setNull(7, Types.VARCHAR);\n \t\tverify(mockPreparedStatement).setNull(8, Types.BOOLEAN);\n \n-\t\tverify(mockPreparedStatement).setString(9, \"[\\\"123\\\",\\\"456\\\",\\\"789\\\"]\");\n-\t\tverify(mockPreparedStatement).setString(10, \"[123,456,789]\");\n+\t\tverify(mockPreparedStatement).setString(9, \"[\\\"123\\\",\\\"4560\\\",\\\"789\\\"]\");\n+\t\tverify(mockPreparedStatement).setString(10, \"[123,4560,789]\");\n \t\tverify(mockPreparedStatement).setString(11, null);\n-\t\tverify(mockPreparedStatement).setLong(12, 3);\n+\t\tverify(mockPreparedStatement).setLong(12, 4);\n \n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MTg5OQ==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367651899", "bodyText": "first annotation should not be a list.", "author": "john-hill", "createdAt": "2020-01-16T21:11:55Z", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java", "diffHunk": "@@ -1839,28 +1866,84 @@ public void testCaseSensitiveAnnotationNamesPLFM_5449() {\n \t\t// call under test\r\n \t\ttableIndexDAO.addEntityData(Lists.newArrayList(file1));\r\n \t}\r\n+\r\n+\t//PLFM-6013\r\n+\t@Test\r\n+\tpublic void testGetPossibleAnnotationsForContainers_ListColumns(){\r\n+\t\t// delete all data\r\n+\t\ttableIndexDAO.deleteEntityData(Lists.newArrayList(2L,3L));\r\n+\r\n+\r\n+\t\tString annoKey = \"myAnnotation\";\r\n+\r\n+\t\t// setup some hierarchy.\r\n+\t\tEntityDTO file1 = createEntityDTO(2L, EntityType.file, 0);\r\n+\t\tfile1.setParentId(333L);\r\n+\r", "originalCommit": "e259094809a45fa367568fe95142fa5c27e69d8b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "chunk": "diff --git a/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java b/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java\nindex 069ace91ab..439ae3bc9f 100644\n--- a/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java\n+++ b/lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java\n\n@@ -1884,7 +1884,7 @@ public class TableIndexDAOImplTest {\n \t\tannotationDTO1.setKey(annoKey);\n \t\tannotationDTO1.setType(AnnotationType.STRING);\n \t\tannotationDTO1.setEntityId(2L);\n-\t\tannotationDTO1.setValue(Arrays.asList(\"123\", \"123456\"));\n+\t\tannotationDTO1.setValue(Arrays.asList(\"123\"));\n \t\tfile1.setAnnotations(Collections.singletonList(annotationDTO1));\n \n \t\tEntityDTO file2 = createEntityDTO(3L, EntityType.file, 0);\n"}}, {"oid": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "message": "fix bug in ColumnType suggestion and other code review changes", "committedDate": "2020-01-16T21:53:29Z", "type": "commit"}, {"oid": "e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e6b5f02e62e966cdc9edf3d4b626e5e11296a671", "message": "fix bug in ColumnType suggestion and other code review changes", "committedDate": "2020-01-16T21:53:29Z", "type": "forcePushed"}]}