{"pr_number": 4023, "pr_title": "temporary code: re-serialization of columnmodel w/out validation for migration (PLFM-6213)", "pr_createdAt": "2020-04-29T02:54:25Z", "pr_url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4023", "timeline": [{"oid": "e993876b32da24f3374387ad7c2e2ee392720f92", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/e993876b32da24f3374387ad7c2e2ee392720f92", "message": "temporary code for migrating column model", "committedDate": "2020-04-29T02:53:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MjA4OA==", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4023#discussion_r417042088", "bodyText": "set the id of the dto to null before computing the hash and saving it back", "author": "marcomarasca", "createdAt": "2020-04-29T03:05:10Z", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/persistence/table/DBOColumnModel.java", "diffHunk": "@@ -127,13 +140,36 @@ public MigrationType getMigratableTableType() {\n \t\t\tpublic DBOColumnModel createDatabaseObjectFromBackup(DBOColumnModel backup) {\r\n \t\t\t\t//doing this round trip will assign default value to maxListLength\r\n \t\t\t\tColumnModel columnModel = ColumnModelUtils.createDTOFromDBO(backup);\r\n+\r\n+\t\t\t\tif(ColumnTypeListMappings.isList(columnModel.getColumnType()) && columnModel.getMaximumListLength() == null){\r\n+\t\t\t\t\tcolumnModel.setMaximumListLength(ColumnConstants.MAX_ALLOWED_LIST_LENGTH);\r\n+\t\t\t\t}\r\n+\r\n \t\t\t\t// Some old column models where using a big number of enum values, we need to skip that side of the validation to avoid breaking migration\r\n-\t\t\t\tDBOColumnModel modifiedDBO = ColumnModelUtils.createDBOFromDTO(columnModel, Integer.MAX_VALUE);\r\n+\t\t\t\tDBOColumnModel modifiedDBO = createDBOFromDTO(columnModel);\r\n \t\t\t\treturn modifiedDBO;\r\n \t\t\t}\r\n \t\t};\r\n \t}\r\n \r\n+\t@TemporaryCode(author=\"ziming\", comment = \"one-time migration change. remove after stack 309\")\r\n+\tpublic static DBOColumnModel createDBOFromDTO(ColumnModel dto) {\r\n+\t\ttry {\r", "originalCommit": "e993876b32da24f3374387ad7c2e2ee392720f92", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c615ea3da6357844c1ee2cd60fa321d336dc1cf", "chunk": "diff --git a/lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/persistence/table/DBOColumnModel.java b/lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/persistence/table/DBOColumnModel.java\nindex 091b610d50..94aaf949be 100644\n--- a/lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/persistence/table/DBOColumnModel.java\n+++ b/lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/persistence/table/DBOColumnModel.java\n\n@@ -138,38 +138,25 @@ public class DBOColumnModel implements MigratableDatabaseObject<DBOColumnModel,\n \t\t\t@TemporaryCode(author=\"ziming\", comment = \"one-time migration change. remove after stack 309\")\n \t\t\t@Override\n \t\t\tpublic DBOColumnModel createDatabaseObjectFromBackup(DBOColumnModel backup) {\n-\t\t\t\t//doing this round trip will assign default value to maxListLength\n \t\t\t\tColumnModel columnModel = ColumnModelUtils.createDTOFromDBO(backup);\n \n \t\t\t\tif(ColumnTypeListMappings.isList(columnModel.getColumnType()) && columnModel.getMaximumListLength() == null){\n+\t\t\t\t\tcolumnModel.setId(null);\n \t\t\t\t\tcolumnModel.setMaximumListLength(ColumnConstants.MAX_ALLOWED_LIST_LENGTH);\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tbackup.setBytes(JDOSecondaryPropertyUtils.compressObject(X_STREAM, columnModel));\n+\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\tthrow new RuntimeException(e);\n+\t\t\t\t\t}\n+\t\t\t\t\tString hash = ColumnModelUtils.calculateHash(columnModel);\n+\t\t\t\t\tbackup.setHash(hash);\n \t\t\t\t}\n \n-\t\t\t\t// Some old column models where using a big number of enum values, we need to skip that side of the validation to avoid breaking migration\n-\t\t\t\tDBOColumnModel modifiedDBO = createDBOFromDTO(columnModel);\n-\t\t\t\treturn modifiedDBO;\n+\t\t\t\treturn backup;\n \t\t\t}\n \t\t};\n \t}\n \n-\t@TemporaryCode(author=\"ziming\", comment = \"one-time migration change. remove after stack 309\")\n-\tpublic static DBOColumnModel createDBOFromDTO(ColumnModel dto) {\n-\t\ttry {\n-\t\t\tString hash = ColumnModelUtils.calculateHash(dto);\n-\t\t\t// Create the bytes\n-\t\t\tDBOColumnModel dbo = new DBOColumnModel();\n-\t\t\tdbo.setBytes(JDOSecondaryPropertyUtils.compressObject(X_STREAM, dto));\n-\t\t\tdbo.setName(dto.getName());\n-\t\t\tdbo.setHash(hash);\n-\t\t\tif(dto.getId() != null){\n-\t\t\t\tdbo.setId(Long.parseLong(dto.getId()));\n-\t\t\t}\n-\t\t\treturn dbo;\n-\t\t} catch (IOException e) {\n-\t\t\tthrow new RuntimeException(e);\n-\t\t}\n-\t}\n-\n \t@Override\n \tpublic Class<? extends DBOColumnModel> getBackupClass() {\n \t\treturn DBOColumnModel.class;\n"}}, {"oid": "8c615ea3da6357844c1ee2cd60fa321d336dc1cf", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/8c615ea3da6357844c1ee2cd60fa321d336dc1cf", "message": "only reserailze if we are modifying a list column", "committedDate": "2020-04-29T03:16:34Z", "type": "commit"}]}