{"pr_number": 6640, "pr_title": "fix: Do not fail on rule engine call  and just log an exception", "pr_createdAt": "2020-11-12T08:47:52Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6640", "timeline": [{"oid": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "url": "https://github.com/dhis2/dhis2-core/commit/ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "message": "fix: Do not fail on rule engine call  and just log an exception", "committedDate": "2020-11-12T08:39:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521937603", "bodyText": "Just a suggestion. Instead of hiding the original exception, wouldn't it be better to use log.warn( \"message\", ex);", "author": "zubaira", "createdAt": "2020-11-12T08:53:24Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "originalCommit": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MjM3MA==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521942370", "bodyText": "Of course. Just got lost in the commit.\nThanks", "author": "enricocolasante", "createdAt": "2020-11-12T09:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\nindex 13c69a7c3c..31ff1aabc7 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n\n@@ -85,7 +85,7 @@ public class DefaultTrackerProgramRuleService\n                 try{\n                     return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n                 } catch (Exception ex) {\n-                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);\n                     return Lists.newArrayList();\n                 }\n             } ) );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0MTg2OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521941869", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");\n          \n          \n            \n                                log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);", "author": "enricocolasante", "createdAt": "2020-11-12T09:00:02Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");", "originalCommit": "ff3fb4c8793bf8c4afdcdc71aac09cf34d610033", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\nindex 13c69a7c3c..31ff1aabc7 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n\n@@ -85,7 +85,7 @@ public class DefaultTrackerProgramRuleService\n                 try{\n                     return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n                 } catch (Exception ex) {\n-                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\");\n+                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);\n                     return Lists.newArrayList();\n                 }\n             } ) );\n"}}, {"oid": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "url": "https://github.com/dhis2/dhis2-core/commit/f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "message": "Update dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "committedDate": "2020-11-12T09:00:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTMzNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945335", "bodyText": "code style ;)", "author": "luciano-fiandesio", "createdAt": "2020-11-12T09:05:50Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{", "originalCommit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "327e2d191409d987c6619195e99eabfd753eec69", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\nindex 31ff1aabc7..ded30e1ada 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n\n@@ -82,10 +82,14 @@ public class DefaultTrackerProgramRuleService\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                try{\n+                try\n+                {\n                     return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n-                } catch (Exception ex) {\n-                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);\n+                }\n+                catch ( Exception ex )\n+                {\n+                    log.warn( \"An error occured during a Program Rule engine call for enrollment. \" +\n+                        \"Please check the response payload for additional information\", e );\n                     return Lists.newArrayList();\n                 }\n             } ) );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NTYxNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521945615", "bodyText": "code style", "author": "luciano-fiandesio", "createdAt": "2020-11-12T09:06:14Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -90,9 +98,14 @@ public DefaultTrackerProgramRuleService(\n             .stream()\n             .collect( Collectors.toMap( Event::getEvent, event -> {\n                 ProgramInstance enrollment = getEnrollment( bundle, event );\n-                return programRuleEngine.evaluate( enrollment,\n-                    eventTrackerConverterService.from( bundle.getPreheat(), event ),\n-                    getEventsFromEnrollment( enrollment.getUid(), bundle, events ) );\n+                try {\n+                    return programRuleEngine.evaluate(enrollment,\n+                            eventTrackerConverterService.from(bundle.getPreheat(), event),\n+                            getEventsFromEnrollment(enrollment.getUid(), bundle, events));\n+                } catch (Exception e){", "originalCommit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "327e2d191409d987c6619195e99eabfd753eec69", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\nindex 31ff1aabc7..ded30e1ada 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n\n@@ -98,12 +102,16 @@ public class DefaultTrackerProgramRuleService\n             .stream()\n             .collect( Collectors.toMap( Event::getEvent, event -> {\n                 ProgramInstance enrollment = getEnrollment( bundle, event );\n-                try {\n-                    return programRuleEngine.evaluate(enrollment,\n-                            eventTrackerConverterService.from(bundle.getPreheat(), event),\n-                            getEventsFromEnrollment(enrollment.getUid(), bundle, events));\n-                } catch (Exception e){\n-                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", e);\n+                try\n+                {\n+                    return programRuleEngine.evaluate( enrollment,\n+                        eventTrackerConverterService.from( bundle.getPreheat(), event ),\n+                        getEventsFromEnrollment( enrollment.getUid(), bundle, events ) );\n+                }\n+                catch ( Exception e )\n+                {\n+                    log.warn( \"An error occured during a Program Rule engine call for event. \" +\n+                        \"Please check the response payload for additional information\", e );\n                     return Lists.newArrayList();\n                 }\n             } ) );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NzQ0MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6640#discussion_r521947441", "bodyText": "I'm not sure about the message: I would not reference the payload, since we are catching a generic exception. Perhaps something along the line: \"An error occured during an Program RUle engine call for enrollment ..... Please check the response payload for additional information\"", "author": "luciano-fiandesio", "createdAt": "2020-11-12T09:09:04Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java", "diffHunk": "@@ -79,7 +82,12 @@ public DefaultTrackerProgramRuleService(\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                try{\n+                    return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n+                } catch (Exception ex) {", "originalCommit": "f61fc84ebc49491afb6d526cc2955b61b8a0e86d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "327e2d191409d987c6619195e99eabfd753eec69", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\nindex 31ff1aabc7..ded30e1ada 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/DefaultTrackerProgramRuleService.java\n\n@@ -82,10 +82,14 @@ public class DefaultTrackerProgramRuleService\n             .collect( Collectors.toMap( Enrollment::getEnrollment, e -> {\n                 ProgramInstance enrollment = enrollmentTrackerConverterService.fromForRuleEngine( bundle.getPreheat(),\n                     e );\n-                try{\n+                try\n+                {\n                     return programRuleEngine.evaluate( enrollment, Sets.newHashSet() );\n-                } catch (Exception ex) {\n-                    log.warn(\"Something bad happen calling rule engine. The reason should be an invalid payload\", ex);\n+                }\n+                catch ( Exception ex )\n+                {\n+                    log.warn( \"An error occured during a Program Rule engine call for enrollment. \" +\n+                        \"Please check the response payload for additional information\", e );\n                     return Lists.newArrayList();\n                 }\n             } ) );\n"}}, {"oid": "327e2d191409d987c6619195e99eabfd753eec69", "url": "https://github.com/dhis2/dhis2-core/commit/327e2d191409d987c6619195e99eabfd753eec69", "message": "Fix tests and code review comments", "committedDate": "2020-11-12T09:35:54Z", "type": "commit"}]}