{"pr_number": 6720, "pr_title": "fix: DHIS2-9894 user assignment is checked through ProgramStage definition", "pr_createdAt": "2020-11-19T15:11:27Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6720", "timeline": [{"oid": "d3ac112b3a89ee574b9de583ae56b60ebce9b0a4", "url": "https://github.com/dhis2/dhis2-core/commit/d3ac112b3a89ee574b9de583ae56b60ebce9b0a4", "message": "fix: DHIS2-9894 user assignment is checked through ProgramStage definition", "committedDate": "2020-11-19T15:05:21Z", "type": "commit"}, {"oid": "f0e2edf11b368ebd28639b22754b49ecb2318d03", "url": "https://github.com/dhis2/dhis2-core/commit/f0e2edf11b368ebd28639b22754b49ecb2318d03", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-9894\n\n# Conflicts:\n#\tdhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "committedDate": "2020-11-19T15:10:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwMTU1MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6720#discussion_r527501551", "bodyText": "Not sure if the add warning utility method is implemented, but I think is a good moment to do so\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            reporter.addWarning( TrackerWarningReport.builder()\n          \n          \n            \n                                .warningCode( E1120 )\n          \n          \n            \n                                .trackerType( TrackerType.EVENT )\n          \n          \n            \n                                .addArg( event.getProgramStage() ) );\n          \n          \n            \n                            addWarning( reporter, E1118, event.getAssignedUser() );", "author": "enricocolasante", "createdAt": "2020-11-20T07:59:30Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "diffHunk": "@@ -49,20 +54,56 @@\n     @Override\n     public void validateEvent( ValidationErrorReporter reporter, Event event )\n     {\n-        if ( event.getAssignedUser() != null &&\n-            ( !CodeGenerator.isValidUid( event.getAssignedUser() ) ||\n-                reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n-                    event.getAssignedUser() ) == null) )\n+        if ( event.getAssignedUser() != null )\n         {\n-            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                .errorCode( E1118 )\n-                .trackerType( TrackerType.EVENT )\n-                .addArg( event.getAssignedUser() );\n+            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            {\n+                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n+                    .errorCode( E1118 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getAssignedUser() );\n \n-            reporter.addError( report );\n+                reporter.addError( report );\n+            }\n+            if ( isNotEnabledUserAssignment( reporter, event ) )\n+            {\n+                reporter.addWarning( TrackerWarningReport.builder()\n+                    .warningCode( E1120 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getProgramStage() ) );", "originalCommit": "f0e2edf11b368ebd28639b22754b49ecb2318d03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "711784a8f1ce8c6f491324f54f3cabe45c3801e4", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\nindex fa3135df4a..0180b46f15 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\n\n@@ -56,45 +52,28 @@ public class AssignedUserValidationHook\n     {\n         if ( event.getAssignedUser() != null )\n         {\n-            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            if ( isNotValidAssignedUserUid( event ) || assignedUserNotPresentInPreheat( reporter, event ) )\n             {\n-                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                    .errorCode( E1118 )\n-                    .trackerType( TrackerType.EVENT )\n-                    .addArg( event.getAssignedUser() );\n-\n-                reporter.addError( report );\n+                addError( reporter, E1118, event.getAssignedUser() );\n             }\n             if ( isNotEnabledUserAssignment( reporter, event ) )\n             {\n-                reporter.addWarning( TrackerWarningReport.builder()\n-                    .warningCode( E1120 )\n-                    .trackerType( TrackerType.EVENT )\n-                    .addArg( event.getProgramStage() ) );\n+                addWarning( reporter, E1120, event.getProgramStage() );\n             }\n         }\n     }\n \n     private Boolean isNotEnabledUserAssignment( ValidationErrorReporter reporter, Event event )\n     {\n-        /*\n-         * TODO: should we have an helper method in base class (or a dedicated service)\n-         * to easily access preheat maps ? this is hard to read\n-         */\n-\n-        Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n-            TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();\n+        Boolean userAssignmentEnabled = reporter.getValidationContext().getProgramStage( event.getProgramStage() )\n+            .isEnableUserAssignment();\n \n         return !Optional.ofNullable( userAssignmentEnabled )\n-                .orElse( false );\n+            .orElse( false );\n     }\n \n-    private boolean userNotPresentInPreheat( ValidationErrorReporter reporter, Event event )\n+    private boolean assignedUserNotPresentInPreheat(ValidationErrorReporter reporter, Event event )\n     {\n-        /*\n-         * TODO: should we have an helper method in base class (or a dedicated service)\n-         * to easily access preheat maps ? this is hard to read\n-         */\n         return reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n             event.getAssignedUser() ) == null;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwMjE4Mg==", "url": "https://github.com/dhis2/dhis2-core/pull/6720#discussion_r527502182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n          \n          \n            \n                        TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();\n          \n          \n            \n                    Boolean userAssignmentEnabled = ctx.getProgramStage( event.getProgramStage() ).isEnableUserAssignment();", "author": "enricocolasante", "createdAt": "2020-11-20T08:00:50Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "diffHunk": "@@ -49,20 +54,56 @@\n     @Override\n     public void validateEvent( ValidationErrorReporter reporter, Event event )\n     {\n-        if ( event.getAssignedUser() != null &&\n-            ( !CodeGenerator.isValidUid( event.getAssignedUser() ) ||\n-                reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n-                    event.getAssignedUser() ) == null) )\n+        if ( event.getAssignedUser() != null )\n         {\n-            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                .errorCode( E1118 )\n-                .trackerType( TrackerType.EVENT )\n-                .addArg( event.getAssignedUser() );\n+            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            {\n+                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n+                    .errorCode( E1118 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getAssignedUser() );\n \n-            reporter.addError( report );\n+                reporter.addError( report );\n+            }\n+            if ( isNotEnabledUserAssignment( reporter, event ) )\n+            {\n+                reporter.addWarning( TrackerWarningReport.builder()\n+                    .warningCode( E1120 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getProgramStage() ) );\n+            }\n         }\n     }\n \n+    private Boolean isNotEnabledUserAssignment( ValidationErrorReporter reporter, Event event )\n+    {\n+        /*\n+         * TODO: should we have an helper method in base class (or a dedicated service)\n+         * to easily access preheat maps ? this is hard to read\n+         */\n+\n+        Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n+            TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();", "originalCommit": "f0e2edf11b368ebd28639b22754b49ecb2318d03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "711784a8f1ce8c6f491324f54f3cabe45c3801e4", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\nindex fa3135df4a..0180b46f15 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\n\n@@ -56,45 +52,28 @@ public class AssignedUserValidationHook\n     {\n         if ( event.getAssignedUser() != null )\n         {\n-            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            if ( isNotValidAssignedUserUid( event ) || assignedUserNotPresentInPreheat( reporter, event ) )\n             {\n-                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                    .errorCode( E1118 )\n-                    .trackerType( TrackerType.EVENT )\n-                    .addArg( event.getAssignedUser() );\n-\n-                reporter.addError( report );\n+                addError( reporter, E1118, event.getAssignedUser() );\n             }\n             if ( isNotEnabledUserAssignment( reporter, event ) )\n             {\n-                reporter.addWarning( TrackerWarningReport.builder()\n-                    .warningCode( E1120 )\n-                    .trackerType( TrackerType.EVENT )\n-                    .addArg( event.getProgramStage() ) );\n+                addWarning( reporter, E1120, event.getProgramStage() );\n             }\n         }\n     }\n \n     private Boolean isNotEnabledUserAssignment( ValidationErrorReporter reporter, Event event )\n     {\n-        /*\n-         * TODO: should we have an helper method in base class (or a dedicated service)\n-         * to easily access preheat maps ? this is hard to read\n-         */\n-\n-        Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n-            TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();\n+        Boolean userAssignmentEnabled = reporter.getValidationContext().getProgramStage( event.getProgramStage() )\n+            .isEnableUserAssignment();\n \n         return !Optional.ofNullable( userAssignmentEnabled )\n-                .orElse( false );\n+            .orElse( false );\n     }\n \n-    private boolean userNotPresentInPreheat( ValidationErrorReporter reporter, Event event )\n+    private boolean assignedUserNotPresentInPreheat(ValidationErrorReporter reporter, Event event )\n     {\n-        /*\n-         * TODO: should we have an helper method in base class (or a dedicated service)\n-         * to easily access preheat maps ? this is hard to read\n-         */\n         return reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n             event.getAssignedUser() ) == null;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwNTI4Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/6720#discussion_r527505286", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n          \n          \n            \n                                .errorCode( E1118 )\n          \n          \n            \n                                .trackerType( TrackerType.EVENT )\n          \n          \n            \n                                .addArg( event.getAssignedUser() );\n          \n          \n            \n                            addError( reporter, E1118, event.getAssignedUser() );", "author": "enricocolasante", "createdAt": "2020-11-20T08:04:25Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java", "diffHunk": "@@ -49,20 +54,56 @@\n     @Override\n     public void validateEvent( ValidationErrorReporter reporter, Event event )\n     {\n-        if ( event.getAssignedUser() != null &&\n-            ( !CodeGenerator.isValidUid( event.getAssignedUser() ) ||\n-                reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n-                    event.getAssignedUser() ) == null) )\n+        if ( event.getAssignedUser() != null )\n         {\n-            TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                .errorCode( E1118 )\n-                .trackerType( TrackerType.EVENT )\n-                .addArg( event.getAssignedUser() );\n+            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            {\n+                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n+                    .errorCode( E1118 )\n+                    .trackerType( TrackerType.EVENT )\n+                    .addArg( event.getAssignedUser() );", "originalCommit": "f0e2edf11b368ebd28639b22754b49ecb2318d03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "711784a8f1ce8c6f491324f54f3cabe45c3801e4", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\nindex fa3135df4a..0180b46f15 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/AssignedUserValidationHook.java\n\n@@ -56,45 +52,28 @@ public class AssignedUserValidationHook\n     {\n         if ( event.getAssignedUser() != null )\n         {\n-            if ( isNotValidAssignedUserUid( event ) || userNotPresentInPreheat( reporter, event ) )\n+            if ( isNotValidAssignedUserUid( event ) || assignedUserNotPresentInPreheat( reporter, event ) )\n             {\n-                TrackerErrorReport.TrackerErrorReportBuilder report = TrackerErrorReport.builder()\n-                    .errorCode( E1118 )\n-                    .trackerType( TrackerType.EVENT )\n-                    .addArg( event.getAssignedUser() );\n-\n-                reporter.addError( report );\n+                addError( reporter, E1118, event.getAssignedUser() );\n             }\n             if ( isNotEnabledUserAssignment( reporter, event ) )\n             {\n-                reporter.addWarning( TrackerWarningReport.builder()\n-                    .warningCode( E1120 )\n-                    .trackerType( TrackerType.EVENT )\n-                    .addArg( event.getProgramStage() ) );\n+                addWarning( reporter, E1120, event.getProgramStage() );\n             }\n         }\n     }\n \n     private Boolean isNotEnabledUserAssignment( ValidationErrorReporter reporter, Event event )\n     {\n-        /*\n-         * TODO: should we have an helper method in base class (or a dedicated service)\n-         * to easily access preheat maps ? this is hard to read\n-         */\n-\n-        Boolean userAssignmentEnabled = ((ProgramStage) reporter.getValidationContext().getBundle().getPreheat().get(\n-            TrackerIdScheme.UID, ProgramStage.class, event.getProgramStage() )).isEnableUserAssignment();\n+        Boolean userAssignmentEnabled = reporter.getValidationContext().getProgramStage( event.getProgramStage() )\n+            .isEnableUserAssignment();\n \n         return !Optional.ofNullable( userAssignmentEnabled )\n-                .orElse( false );\n+            .orElse( false );\n     }\n \n-    private boolean userNotPresentInPreheat( ValidationErrorReporter reporter, Event event )\n+    private boolean assignedUserNotPresentInPreheat(ValidationErrorReporter reporter, Event event )\n     {\n-        /*\n-         * TODO: should we have an helper method in base class (or a dedicated service)\n-         * to easily access preheat maps ? this is hard to read\n-         */\n         return reporter.getValidationContext().getBundle().getPreheat().get( TrackerIdScheme.UID, User.class,\n             event.getAssignedUser() ) == null;\n     }\n"}}, {"oid": "711784a8f1ce8c6f491324f54f3cabe45c3801e4", "url": "https://github.com/dhis2/dhis2-core/commit/711784a8f1ce8c6f491324f54f3cabe45c3801e4", "message": "fix: DHIS2-9894 peer review changes", "committedDate": "2020-11-20T11:50:48Z", "type": "commit"}]}