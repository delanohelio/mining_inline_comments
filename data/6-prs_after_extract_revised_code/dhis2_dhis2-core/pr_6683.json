{"pr_number": 6683, "pr_title": "fix: invalid detection of duplicated relationships during Tracker import", "pr_createdAt": "2020-11-16T12:01:23Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6683", "timeline": [{"oid": "0ad1a930d12b580faeb9944ac5bedb19cabc92a0", "url": "https://github.com/dhis2/dhis2-core/commit/0ad1a930d12b580faeb9944ac5bedb19cabc92a0", "message": "fix: invalid detection of duplicated relationships during Tracker import\n\nThis PR introduces a new Tracker Import PreProcessor to remove duplicated relationship from the\nTracker payload (Tracker Bundle). The duplicated relationship logic is detailed here: https://jira.dhis2.org/browse/DHIS2-9965\n\nAdditionally, the Relationship validation code (`RelationshipsValidationHook`) has been improved to better report invalid relationships.\n\n- Missing \"from\" returns `4007` code and message \"Missing required relationship property: 'from'.\"\n- Missing \"to\" returns `4008` code and message \"Missing required relationship property: 'to'.\"\n- Missing \"relationshipType\" returns `4004` code and message \"Missing required relationship property: 'relationshipType'.\"\n- Invalid \"relationshipType\" returns `4009` code and message \"Relationship Type `{0}` is not valid.\" - where 0 corresponds to the relationship type uid\n- On invalid Relationship constraint (based on the Relationship Type) the system returns `4010` code and message: \"\"Relationship Type `{0}` constraint requires a {1} but a {2} was found.\"\n\nFinally, the constraint and \"self-reference\" validation only takes place if the required data validation has no errrors.\n\nREF: DHIS2-9965", "committedDate": "2020-11-16T12:00:57Z", "type": "commit"}, {"oid": "7998fc91636b2383831507741c75ad36e173db75", "url": "https://github.com/dhis2/dhis2-core/commit/7998fc91636b2383831507741c75ad36e173db75", "message": "chore: javadoc typos", "committedDate": "2020-11-16T12:04:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIxNTY0Nw==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524215647", "bodyText": "Here we use \"get\"+\"From\"/\"To\", while further down we just use \"relationshipType\", maybe we should omit the \"get\" part? Looks better in my opinion:\nrelationship.from, relationship.to, relationship.relationshiptype", "author": "stian-sandvold", "createdAt": "2020-11-16T12:25:33Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java", "diffHunk": "@@ -89,37 +87,57 @@ public void validateRelationship( ValidationErrorReporter reporter, Relationship\n             return;\n         }\n \n-        validateRelationshipType( reporter, relationship, bundle.getPreheat() );\n-        validateAutoRelationship( reporter, relationship );\n-        validateBidirectionalDuplicatedRelationships( reporter, bundle, relationship );\n+        boolean isValid = validateMandatoryData( reporter, relationship,\n+            bundle.getPreheat().getAll( TrackerIdScheme.UID, RelationshipType.class ) );\n+\n+        // No need to check additional data if there are missing information on the\n+        // Relationship\n+        if ( isValid )\n+        {\n+            validateRelationshipConstraint( reporter, relationship, bundle );\n+\n+            validateAutoRelationship( reporter, relationship );\n+\n+            // validateReferences( reporter, bundle, relationship); // TODO Enrico\n+        }\n+\n     }\n \n-    private void validateBidirectionalDuplicatedRelationships( ValidationErrorReporter reporter, TrackerBundle bundle,\n-        Relationship relationship )\n+    private void validateRelationshipConstraint( ValidationErrorReporter reporter, Relationship relationship,\n+        TrackerBundle bundle )\n     {\n-        List<Pair<RelationshipItem, RelationshipItem>> relationships =\n-            bundle.getRelationships()\n-                .stream()\n-                .map( r -> new ImmutablePair<>( r.getFrom(), r.getTo() ) )\n-                .collect( Collectors.toList() );\n+        getRelationshipType( bundle.getPreheat().getAll( TrackerIdScheme.UID, RelationshipType.class ),\n+            relationship.getRelationshipType() ).ifPresent( relationshipType -> {\n+\n+                validateRelationshipConstraint( \"from\", relationship.getFrom(), relationshipType.getFromConstraint() )\n+                    .forEach( reporter::addError );\n+                validateRelationshipConstraint( \"to\", relationship.getTo(), relationshipType.getToConstraint() )\n+                    .forEach( reporter::addError );\n \n-        List<ImmutablePair<RelationshipItem, RelationshipItem>> bidirectionalRelationship = Lists\n-            .newArrayList( relationship )\n-            .stream()\n-            .filter( Relationship::isBidirectional )\n-            .map( r -> new ImmutablePair<>( r.getTo(), r.getFrom() ) )\n-            .collect( Collectors.toList() );\n+            } );\n+    }\n \n-        relationships.addAll( bidirectionalRelationship );\n+    private boolean validateMandatoryData( ValidationErrorReporter reporter, Relationship relationship,\n+        List<RelationshipType> relationshipsTypes )\n+    {\n+        addErrorIfNull( relationship.getFrom(), reporter, E4007, \"relationship.getFrom\" );", "originalCommit": "7998fc91636b2383831507741c75ad36e173db75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1MTA3OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524251079", "bodyText": "Fixed, the argument was actually ignored. The error message is shown in the PR commit message.", "author": "luciano-fiandesio", "createdAt": "2020-11-16T13:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIxNTY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2ae54c1614a686be734a54a8b3dfeb1b7a92c7d1", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java\nindex bb18d4cd17..08267c2c4c 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java\n\n@@ -120,17 +122,24 @@ public class RelationshipsValidationHook\n     private boolean validateMandatoryData( ValidationErrorReporter reporter, Relationship relationship,\n         List<RelationshipType> relationshipsTypes )\n     {\n-        addErrorIfNull( relationship.getFrom(), reporter, E4007, \"relationship.getFrom\" );\n-        addErrorIfNull( relationship.getTo(), reporter, E4008, \"relationship.getTo\" );\n-        addErrorIf( () -> StringUtils.isEmpty( relationship.getRelationshipType() ), reporter, E4004,\n-            \"relationship.relationshipType\" );\n+        addErrorIfNull( relationship.getFrom(), reporter, E4007 );\n+        addErrorIfNull( relationship.getTo(), reporter, E4008 );\n+        addErrorIf( () -> StringUtils.isEmpty( relationship.getRelationshipType() ), reporter, E4004 );\n \n         addErrorIf( () -> !getRelationshipType( relationshipsTypes, relationship.getRelationshipType() ).isPresent(),\n             reporter, E4009,\n             relationship.getRelationshipType() );\n+        // Relationship Item \"to\" for Relationship abc is invalid: an Item can link to only one Tracker entity\n+        addErrorIf(\n+            () -> relationship.getFrom() != null && countMatches( onlyValues( relationship.getFrom() ), \"null\" ) != 2,\n+            reporter, E4001, \"from\", relationship.getRelationship() );\n+        addErrorIf(\n+            () -> relationship.getTo() != null && countMatches( onlyValues( relationship.getTo() ), \"null\" ) != 2,\n+            reporter, E4001, \"to\", relationship.getRelationship() );\n \n         final Optional<TrackerErrorReport> any = reporter.getReportList().stream()\n             .filter( r -> relationship.getRelationship().equals( r.getUid() ) ).findAny();\n+\n         return !any.isPresent();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIxOTYxMA==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524219610", "bodyText": "This is just a note, more than feedback:\nI was thinking we have to validate that wrong values are not inserted as well (IE. tei inserted, when constraint is EVENT).\nHowever, we actually ignore other values when comitting, so I say we don't add that validation, unless you think it makes sense to report sending too much data (wrong data is already covered, assuming wrong data = wrong constraint type)", "author": "stian-sandvold", "createdAt": "2020-11-16T12:29:21Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java", "diffHunk": "@@ -130,128 +148,58 @@ private void validateAutoRelationship( ValidationErrorReporter reporter, Relatio\n         }\n     }\n \n-    private void validateRelationshipType( ValidationErrorReporter reporter,\n-        Relationship relationship, TrackerPreheat preheat )\n+    private String relationshipItemValueType( RelationshipItem item )\n     {\n-        List<RelationshipType> relationshipsTypes = preheat.getAll( TrackerIdScheme.UID, RelationshipType.class );\n-        Optional<RelationshipType> optionalRelationshipType = relationshipsTypes.stream()\n-            .filter( type -> type.getUid().equals( relationship.getRelationshipType() ) ).findFirst();\n-\n-        if ( !optionalRelationshipType.isPresent() )\n-        {\n-            addError( reporter, E4004, RELATIONSHIP_TYPE );\n-            return;\n-        }\n-\n-        if ( relationship.getFrom() == null )\n+        if ( StringUtils.isNotEmpty( item.getTrackedEntity() ) )\n         {\n-            addError( reporter, E4004, \"relationship.getFrom\" );\n+            return TRACKED_ENTITY;\n         }\n-        else\n-        {\n-            optionalRelationshipType\n-                .ifPresent( relationshipType -> validateRelationshipConstraint( relationship.getFrom(),\n-                    relationshipType.getFromConstraint() )\n-                        .stream()\n-                        .forEach( reporter::addError ) );\n-        }\n-\n-        if ( relationship.getTo() == null )\n+        else if ( StringUtils.isNotEmpty( item.getEnrollment() ) )\n         {\n-            addError( reporter, E4004, \"relationship.getTo\" );\n+            return ENROLLMENT;\n         }\n-        else\n+        else if ( StringUtils.isNotEmpty( item.getEvent() ) )\n         {\n-            if ( optionalRelationshipType.isPresent() )\n-            {\n-                validateRelationshipConstraint( relationship.getTo(),\n-                    optionalRelationshipType.get().getToConstraint() )\n-                    .stream()\n-                    .forEach( reporter::addError );\n-                ;\n-            }\n+            return EVENT;\n         }\n-\n+        return null;\n     }\n \n-    private List<TrackerErrorReport.TrackerErrorReportBuilder> validateRelationshipConstraint( RelationshipItem item,\n-        RelationshipConstraint relationshipType )\n+    private List<TrackerErrorReport.TrackerErrorReportBuilder> validateRelationshipConstraint( String relSide,", "originalCommit": "7998fc91636b2383831507741c75ad36e173db75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1MjU3NQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524252575", "bodyText": "@stian-sandvold Ah, I didn't know. I'll ping you so we can discuss.", "author": "luciano-fiandesio", "createdAt": "2020-11-16T13:04:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIxOTYxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2ae54c1614a686be734a54a8b3dfeb1b7a92c7d1", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java\nindex bb18d4cd17..08267c2c4c 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/validation/hooks/RelationshipsValidationHook.java\n\n@@ -202,4 +211,9 @@ public class RelationshipsValidationHook\n \n         return result;\n     }\n+\n+    private String onlyValues( RelationshipItem item )\n+    {\n+        return item != null ? item.getTrackedEntity() + \"-\" + item.getEnrollment() + \"-\" + item.getEvent() : \"null-null-null\";\n+    }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyMTEzNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524221135", "bodyText": "Could not find RelationShipType: {0}.\"  -> can you change to relationshipType?", "author": "vilkg", "createdAt": "2020-11-16T12:30:44Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/report/TrackerErrorCode.java", "diffHunk": "@@ -145,11 +145,14 @@\n     E4000( \"Relationship: `{0}` cannot link to itself\" ),\n     E4001( \"Property `{0}` can not be set when property `{1}` is `{2}`. \" ),\n     E4002( \"Property `{0}` must be set when property `{1}` is `{2}`. \" ),\n-    E4003( \"There are duplicated relationships. \" ),\n-    E4004( \"Missing required property: 'relationshipType'.\" ),\n+    E4003( \"There are duplicated relationships.\" ),\n+    E4004( \"Missing required relationship property: 'relationshipType'.\" ),\n     E4005( \"RelationShip: `{0}`, do not exist.\" ),\n     E4006( \"Could not find RelationShipType: `{0}`.\"  ),", "originalCommit": "7998fc91636b2383831507741c75ad36e173db75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyNTk4MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524225981", "bodyText": "\ud83d\udea2", "author": "stian-sandvold", "createdAt": "2020-11-16T12:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyMTEzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1Mjg0OA==", "url": "https://github.com/dhis2/dhis2-core/pull/6683#discussion_r524252848", "bodyText": ":) gone", "author": "luciano-fiandesio", "createdAt": "2020-11-16T13:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyMTEzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ae54c1614a686be734a54a8b3dfeb1b7a92c7d1", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/report/TrackerErrorCode.java b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/report/TrackerErrorCode.java\nindex ab3f037d16..e2b3cf8b10 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/report/TrackerErrorCode.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/report/TrackerErrorCode.java\n\n@@ -143,12 +143,11 @@ public enum TrackerErrorCode\n     E1305( \"DataElement `{0}` is not part of `{1}` program stage\" ),\n \n     E4000( \"Relationship: `{0}` cannot link to itself\" ),\n-    E4001( \"Property `{0}` can not be set when property `{1}` is `{2}`. \" ),\n-    E4002( \"Property `{0}` must be set when property `{1}` is `{2}`. \" ),\n+    E4001( \"Relationship Item `{0}` for Relationship `{1}` is invalid: an Item can link only one Tracker entity.\" ),\n     E4003( \"There are duplicated relationships.\" ),\n     E4004( \"Missing required relationship property: 'relationshipType'.\" ),\n     E4005( \"RelationShip: `{0}`, do not exist.\" ),\n-    E4006( \"Could not find RelationShipType: `{0}`.\"  ),\n+    E4006( \"Could not find relationship Type: `{0}`.\"  ),\n     E4007( \"Missing required relationship property: 'from'.\"  ),\n     E4008( \"Missing required relationship property: 'to'.\"  ),\n     E4009( \"Relationship Type `{0}` is not valid.\" ),\n"}}, {"oid": "2ae54c1614a686be734a54a8b3dfeb1b7a92c7d1", "url": "https://github.com/dhis2/dhis2-core/commit/2ae54c1614a686be734a54a8b3dfeb1b7a92c7d1", "message": "fix: fixed unit tests", "committedDate": "2020-11-16T13:05:48Z", "type": "commit"}, {"oid": "cb8d1660c359b6e303794110bb9c3268484e8c19", "url": "https://github.com/dhis2/dhis2-core/commit/cb8d1660c359b6e303794110bb9c3268484e8c19", "message": "chore: removed comment", "committedDate": "2020-11-16T13:31:46Z", "type": "commit"}]}