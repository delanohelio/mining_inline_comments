{"pr_number": 5794, "pr_title": "feat: support transforming properties using DTOs", "pr_createdAt": "2020-06-28T11:37:12Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5794", "timeline": [{"oid": "0b660eaee401cf64b440fb191e67f18846ca4e73", "url": "https://github.com/dhis2/dhis2-core/commit/0b660eaee401cf64b440fb191e67f18846ca4e73", "message": "feat: adds @PropertyTransform, and PropertyTransform (interface) for pre-transforming field properties", "committedDate": "2020-06-28T11:35:53Z", "type": "commit"}, {"oid": "d8ec234f83b743214e296f594b1cc65ec643a257", "url": "https://github.com/dhis2/dhis2-core/commit/d8ec234f83b743214e296f594b1cc65ec643a257", "message": "fix: make UserDto private static", "committedDate": "2020-06-28T11:41:33Z", "type": "commit"}, {"oid": "f4a7b49507c2b77cef8963160ee45f1ef83493ec", "url": "https://github.com/dhis2/dhis2-core/commit/f4a7b49507c2b77cef8963160ee45f1ef83493ec", "message": "fix: support only User objects in UserPropertyTransformer", "committedDate": "2020-06-28T11:43:14Z", "type": "commit"}, {"oid": "342b6784a23678b514c3b379086b1042ba841a7a", "url": "https://github.com/dhis2/dhis2-core/commit/342b6784a23678b514c3b379086b1042ba841a7a", "message": "fix: rename PropertyTransform => PropertyTransformer", "committedDate": "2020-06-29T07:28:27Z", "type": "commit"}, {"oid": "6a6452f3508d78e7b5b39ebb700df6b60c70a615", "url": "https://github.com/dhis2/dhis2-core/commit/6a6452f3508d78e7b5b39ebb700df6b60c70a615", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-06-30T06:45:09Z", "type": "commit"}, {"oid": "ea71a8acc018860716c7880ff45a93cb872badeb", "url": "https://github.com/dhis2/dhis2-core/commit/ea71a8acc018860716c7880ff45a93cb872badeb", "message": "feat: adds propertyTransformer to Property class, adds PT by looking at PT annotation", "committedDate": "2020-06-30T10:44:03Z", "type": "commit"}, {"oid": "bf5b31b20b340f433e716e1efe71ae2472b0970b", "url": "https://github.com/dhis2/dhis2-core/commit/bf5b31b20b340f433e716e1efe71ae2472b0970b", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-07-06T10:52:57Z", "type": "commit"}, {"oid": "6edebd6ecb1bdb1484e2d8b7833106d170917aa8", "url": "https://github.com/dhis2/dhis2-core/commit/6edebd6ecb1bdb1484e2d8b7833106d170917aa8", "message": "fix: support propertyTransformer at property depth0", "committedDate": "2020-07-09T12:21:00Z", "type": "commit"}, {"oid": "6e180dad05505f43718da6ffb80a7517e41f5d1f", "url": "https://github.com/dhis2/dhis2-core/commit/6e180dad05505f43718da6ffb80a7517e41f5d1f", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-07-09T12:21:12Z", "type": "commit"}, {"oid": "27aae6025c2323a8a50c5e9649ab69059b49a7c3", "url": "https://github.com/dhis2/dhis2-core/commit/27aae6025c2323a8a50c5e9649ab69059b49a7c3", "message": "fix: add propertytransformer to DataElementGroup.getUser", "committedDate": "2020-07-09T12:40:17Z", "type": "commit"}, {"oid": "41604aa29aa6f7902676dc517995c5b51c54c6b1", "url": "https://github.com/dhis2/dhis2-core/commit/41604aa29aa6f7902676dc517995c5b51c54c6b1", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-07-09T21:49:35Z", "type": "commit"}, {"oid": "b6cdf40db02e6d327038302b09934b3b827a683b", "url": "https://github.com/dhis2/dhis2-core/commit/b6cdf40db02e6d327038302b09934b3b827a683b", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-07-10T08:46:11Z", "type": "commit"}, {"oid": "293e4154586c4845769423902885d291defeeb39", "url": "https://github.com/dhis2/dhis2-core/commit/293e4154586c4845769423902885d291defeeb39", "message": "feat: support deserializing using Jackson", "committedDate": "2020-07-10T11:14:52Z", "type": "commit"}, {"oid": "235a99ad0b76a90b576a3f7914bbd597c45d1de8", "url": "https://github.com/dhis2/dhis2-core/commit/235a99ad0b76a90b576a3f7914bbd597c45d1de8", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-07-27T07:00:33Z", "type": "commit"}, {"oid": "3ff673276ea33cbd6ee3626b13b05582beb7286e", "url": "https://github.com/dhis2/dhis2-core/commit/3ff673276ea33cbd6ee3626b13b05582beb7286e", "message": "fix: support uid as identifier (useful for tests)", "committedDate": "2020-07-27T09:39:57Z", "type": "commit"}, {"oid": "efb8810b69ab303b0845a88fa99a03e03eaf27b7", "url": "https://github.com/dhis2/dhis2-core/commit/efb8810b69ab303b0845a88fa99a03e03eaf27b7", "message": "fix: support code in UserDto deserializer", "committedDate": "2020-07-27T09:51:17Z", "type": "commit"}, {"oid": "e195f53f768892a5ec1a40a6842eb28f282575ce", "url": "https://github.com/dhis2/dhis2-core/commit/e195f53f768892a5ec1a40a6842eb28f282575ce", "message": "test: UserPropertyTransformer tests", "committedDate": "2020-07-28T13:18:21Z", "type": "commit"}, {"oid": "b8910bacc6286dbf508a99ef025659087d5724da", "url": "https://github.com/dhis2/dhis2-core/commit/b8910bacc6286dbf508a99ef025659087d5724da", "message": "Merge remote-tracking branch 'origin/master' into TECH-388", "committedDate": "2020-07-30T07:28:32Z", "type": "commit"}, {"oid": "4f816778582b84565656227a6b915c03d7027a5e", "url": "https://github.com/dhis2/dhis2-core/commit/4f816778582b84565656227a6b915c03d7027a5e", "message": "test: adds tests for json/xml serdes", "committedDate": "2020-07-30T09:59:26Z", "type": "commit"}, {"oid": "81f85669129a50f4453351659d58055884b4d6a1", "url": "https://github.com/dhis2/dhis2-core/commit/81f85669129a50f4453351659d58055884b4d6a1", "message": "test: adds xml/json payload asserts", "committedDate": "2020-07-30T10:23:04Z", "type": "commit"}, {"oid": "69329de64cb7c6dbc10b0dac80a6642adfc28663", "url": "https://github.com/dhis2/dhis2-core/commit/69329de64cb7c6dbc10b0dac80a6642adfc28663", "message": "chore: newline fix", "committedDate": "2020-07-30T10:25:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkxMTQxMQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5794#discussion_r462911411", "bodyText": "Would be good to have Javadocs here", "author": "luciano-fiandesio", "createdAt": "2020-07-30T10:46:14Z", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/schema/PropertyTransformer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.hisp.dhis.schema;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+/**\n+ * @author Morten Olav Hansen <mortenoh@gmail.com>\n+ */\n+@FunctionalInterface", "originalCommit": "69329de64cb7c6dbc10b0dac80a6642adfc28663", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c19f9918d225b20857a927bb57c7ae5618a95273", "chunk": "diff --git a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/schema/PropertyTransformer.java b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/schema/PropertyTransformer.java\nindex 86ac6c1e63..35cb02e948 100644\n--- a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/schema/PropertyTransformer.java\n+++ b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/schema/PropertyTransformer.java\n\n@@ -29,6 +29,15 @@ package org.hisp.dhis.schema;\n  */\n \n /**\n+ * Interface for converting from one object to another. The main use case being supporting\n+ * property transformers, these are transformers that are applied BEFORE any field filtering\n+ * takes place, and hides the original object completely.\n+ *\n+ * The main reason for using a property transformer is to either collapse an object (a deeply nested\n+ * object can be replaced with a more relevant one), or to smooth the transition when planning domain\n+ * object changes (this so the frontend can start working on the new payloads before all internals are\n+ * finished refactoring).\n+ *\n  * @author Morten Olav Hansen <mortenoh@gmail.com>\n  */\n @FunctionalInterface\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMjA1MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5794#discussion_r462922050", "bodyText": "Consider using a \"caching\" layer here to avoid using reflection, which in this specific case could happen quite often, since the User is often part of payloads.", "author": "luciano-fiandesio", "createdAt": "2020-07-30T11:08:46Z", "path": "dhis-2/dhis-services/dhis-service-node/src/main/java/org/hisp/dhis/fieldfilter/DefaultFieldFilterService.java", "diffHunk": "@@ -277,7 +285,36 @@ private AbstractNode buildNode( FieldMap fieldMap, Class<?> klass, Object object\n             Object returnValue = ReflectionUtils.invokeMethod( object, property.getGetterMethod() );\n             Class<?> propertyClass = property.getKlass();\n             Schema propertySchema = schemaService.getDynamicSchema( propertyClass );\n-            if ( returnValue != null && propertySchema.getProperties().isEmpty() && !property.isCollection() && property.getKlass().isInterface() && !property.isIdentifiableObject() )\n+\n+            if ( property.hasPropertyTransformer() )\n+            {\n+                PropertyTransformer propertyTransformer;\n+\n+                try\n+                {\n+                    propertyTransformer = property.getPropertyTransformer().newInstance();", "originalCommit": "69329de64cb7c6dbc10b0dac80a6642adfc28663", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "708bbfe5a66d554ee7f175b9c173ab2a42c166ad", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-node/src/main/java/org/hisp/dhis/fieldfilter/DefaultFieldFilterService.java b/dhis-2/dhis-services/dhis-service-node/src/main/java/org/hisp/dhis/fieldfilter/DefaultFieldFilterService.java\nindex e990ae2e41..76e27a9d4c 100644\n--- a/dhis-2/dhis-services/dhis-service-node/src/main/java/org/hisp/dhis/fieldfilter/DefaultFieldFilterService.java\n+++ b/dhis-2/dhis-services/dhis-service-node/src/main/java/org/hisp/dhis/fieldfilter/DefaultFieldFilterService.java\n\n@@ -288,19 +299,22 @@ public class DefaultFieldFilterService implements FieldFilterService\n \n             if ( property.hasPropertyTransformer() )\n             {\n-                PropertyTransformer propertyTransformer;\n+                Optional<PropertyTransformer> propertyTransformer = TRANSFORMER_CACHE.get( property.getPropertyTransformer().getName(), s -> {\n+                    try\n+                    {\n+                        return property.getPropertyTransformer().newInstance();\n+                    }\n+                    catch ( InstantiationException | IllegalAccessException e )\n+                    {\n+                        throw new RuntimeException( e );\n+                    }\n+                } );\n \n-                try\n-                {\n-                    propertyTransformer = property.getPropertyTransformer().newInstance();\n-                }\n-                catch ( InstantiationException | IllegalAccessException e )\n+                if ( propertyTransformer.isPresent() )\n                 {\n-                    throw new RuntimeException( e );\n+                    returnValue = propertyTransformer.get().transform( returnValue );\n                 }\n \n-                returnValue = propertyTransformer.transform( returnValue );\n-\n                 if ( returnValue == null )\n                 {\n                     continue;\n"}}, {"oid": "708bbfe5a66d554ee7f175b9c173ab2a42c166ad", "url": "https://github.com/dhis2/dhis2-core/commit/708bbfe5a66d554ee7f175b9c173ab2a42c166ad", "message": "fix: add caching layer to PropertyTransformer newInstance", "committedDate": "2020-07-31T09:05:03Z", "type": "commit"}, {"oid": "c19f9918d225b20857a927bb57c7ae5618a95273", "url": "https://github.com/dhis2/dhis2-core/commit/c19f9918d225b20857a927bb57c7ae5618a95273", "message": "doc: docs for PropertyTransformer", "committedDate": "2020-07-31T09:21:26Z", "type": "commit"}]}