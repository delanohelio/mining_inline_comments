{"pr_number": 5908, "pr_title": "fix: Load TEI in TrackerCapture app trigger update query", "pr_createdAt": "2020-08-10T16:41:47Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5908", "timeline": [{"oid": "cdd1ac45c3d861ce85d6a921210a0a91aebc88c2", "url": "https://github.com/dhis2/dhis2-core/commit/cdd1ac45c3d861ce85d6a921210a0a91aebc88c2", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-10T16:47:27Z", "type": "forcePushed"}, {"oid": "dff4a8282affd2f551fd8600e299506d164a6483", "url": "https://github.com/dhis2/dhis2-core/commit/dff4a8282affd2f551fd8600e299506d164a6483", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-11T02:12:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTUxOQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468325519", "bodyText": "Please add Javadoc\nI would rename this method to getAttributes and explain the ACL part in the java docs", "author": "luciano-fiandesio", "createdAt": "2020-08-11T04:53:36Z", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java", "diffHunk": "@@ -39,4 +42,6 @@\n     extends IdentifiableObjectStore<ProgramTrackedEntityAttribute>\n {\n     ProgramTrackedEntityAttribute get( Program program, TrackedEntityAttribute attribute );\n+\n+    List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user );", "originalCommit": "dff4a8282affd2f551fd8600e299506d164a6483", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODY4MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408681", "bodyText": "Fixed and added unit test", "author": "vietnguyen", "createdAt": "2020-08-11T08:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTUxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b67af0f93fe901698340b87a6f7b1541ee9f1974", "chunk": "diff --git a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java\nindex d4ead826c8..655766773e 100644\n--- a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java\n+++ b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/program/ProgramTrackedEntityAttributeStore.java\n\n@@ -43,5 +43,10 @@ public interface ProgramTrackedEntityAttributeStore\n {\n     ProgramTrackedEntityAttribute get( Program program, TrackedEntityAttribute attribute );\n \n-    List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user );\n+    /**\n+     * Get all TrackedEntityAttribute filtered by given list of Program\n+     * @param programs\n+     * @return List of TrackedEntityAttribute\n+     */\n+    List<TrackedEntityAttribute> getAttributes( List<Program> programs );\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTY0MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468325640", "bodyText": "Please add Javadoc\nI would rename this method to getAttributes and explain the ACL part in the java docs", "author": "luciano-fiandesio", "createdAt": "2020-08-11T04:54:02Z", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java", "diffHunk": "@@ -28,13 +28,14 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import org.hisp.dhis.render.type.SectionRenderingObject;\n+import org.hisp.dhis.common.IdentifiableObjectStore;\n+import org.hisp.dhis.program.ProgramTrackedEntityAttribute;\n+import org.hisp.dhis.user.User;\n \n-public class SectionRenderTypeDeserialize\n-    extends AbstractDeviceRenderTypeMapDeserializer<SectionRenderingObject>\n+import java.util.List;\n+\n+public interface TrackedEntityTypeAttributeStore\n+    extends IdentifiableObjectStore<TrackedEntityTypeAttribute>\n {\n-    public SectionRenderTypeDeserialize()\n-    {\n-        super( SectionRenderingObject::new );\n-    }\n+    List<TrackedEntityAttribute> getAttributesByTrackedEntityTypesWithDataRead( List<TrackedEntityType> trackedEntityTypes, User user );", "originalCommit": "dff4a8282affd2f551fd8600e299506d164a6483", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODU4MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408580", "bodyText": "Fixed and added unit test", "author": "vietnguyen", "createdAt": "2020-08-11T08:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNTY0MA=="}], "type": "inlineReview", "revised_code": {"commit": "b67af0f93fe901698340b87a6f7b1541ee9f1974", "chunk": "diff --git a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java\nindex 6bf2cfc949..0ebe83d112 100644\n--- a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java\n+++ b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/trackedentity/TrackedEntityTypeAttributeStore.java\n\n@@ -37,5 +37,10 @@ import java.util.List;\n public interface TrackedEntityTypeAttributeStore\n     extends IdentifiableObjectStore<TrackedEntityTypeAttribute>\n {\n-    List<TrackedEntityAttribute> getAttributesByTrackedEntityTypesWithDataRead( List<TrackedEntityType> trackedEntityTypes, User user );\n+    /**\n+     * Get all TrackedEntityAttribute filtered by given List of TrackedEntityType\n+     * @param trackedEntityTypes\n+     * @return List of TrackedEntityAttribute\n+     */\n+    List<TrackedEntityAttribute> getAttributes( List<TrackedEntityType> trackedEntityTypes );\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjM1NA==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468326354", "bodyText": "I'm not very familiar with this renderer, but this look like a drastic change. Can you comment what has been done here?", "author": "luciano-fiandesio", "createdAt": "2020-08-11T04:56:57Z", "path": "dhis-2/dhis-support/dhis-support-hibernate/src/main/java/org/hisp/dhis/hibernate/jsonb/type/JsonDeviceRenderTypeMap.java", "diffHunk": "@@ -28,38 +28,32 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JavaType;\n import org.hisp.dhis.render.DeviceRenderTypeMap;\n+import org.hisp.dhis.render.RenderDevice;\n+import org.hisp.dhis.render.type.RenderingObject;\n \n import java.io.IOException;\n+import java.util.LinkedHashMap;\n import java.util.Properties;\n \n public class JsonDeviceRenderTypeMap extends JsonBinaryType\n {\n-    private Class<? extends JsonDeserializer> deserializer;\n+    private Class<? extends RenderingObject> renderType;\n \n     @Override\n-    protected Object convertJsonToObject( String content )\n+    protected JavaType getResultingJavaType( Class<?> returnedClass )\n     {\n-        try", "originalCommit": "dff4a8282affd2f551fd8600e299506d164a6483", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODM2MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408361", "bodyText": "In an attempt to fix the issue, I have removed AbstractDeviceRenderTypeMapDeserializer which I have added to support XML deserialization of RenderType. So the content of the method JsonDeviceRenderTypeMap.convertMapToObject() is actually copied from the deserializer. Eventually even if this doesn't solve the issue, I think it reduces the complexity of the code.\nThis is covered by the test MetadataImportServiceTest.testSerializeDeviceRenderTypeMap()", "author": "vietnguyen", "createdAt": "2020-08-11T08:20:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjM1NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjU3Mg==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468326572", "bodyText": "Do we have a test for this function?", "author": "luciano-fiandesio", "createdAt": "2020-08-11T04:58:02Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java", "diffHunk": "@@ -66,4 +75,21 @@ public ProgramTrackedEntityAttribute get(Program program, TrackedEntityAttribute\n             .addPredicate( root -> builder.equal( root.get( \"program\" ), program ) )\n             .addPredicate( root -> builder.equal( root.get( \"attribute\" ), attribute ) ) );\n     }\n+\n+    @Override\n+    public List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user )", "originalCommit": "dff4a8282affd2f551fd8600e299506d164a6483", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwODQ5NA==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r468408494", "bodyText": "Added unit test", "author": "vietnguyen", "createdAt": "2020-08-11T08:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNjU3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b67af0f93fe901698340b87a6f7b1541ee9f1974", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java b/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java\nindex 29636e5e04..92cd59a3b8 100644\n--- a/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java\n+++ b/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/program/hibernate/HibernateProgramTrackedEntityAttributeStore.java\n\n@@ -77,18 +77,14 @@ public class HibernateProgramTrackedEntityAttributeStore\n     }\n \n     @Override\n-    public List<TrackedEntityAttribute> getAttributesByProgramsWithDataRead( List<Program> programs, User user )\n+    public List<TrackedEntityAttribute> getAttributes( List<Program> programs )\n     {\n-\n         CriteriaBuilder builder = getCriteriaBuilder();\n \n         CriteriaQuery<TrackedEntityAttribute> query = builder.createQuery( TrackedEntityAttribute.class );\n         Root<ProgramTrackedEntityAttribute> root = query.from( ProgramTrackedEntityAttribute.class );\n-        List<Predicate> predicates = getDataSharingPredicates( builder, user ).stream().map( p -> p.apply( root ) )\n-            .collect( Collectors.toList() );\n-        predicates.add( builder.and( root.get( \"program\" ).in( programs ) ) );\n         query.select( root.get( \"attribute\" ) );\n-        query.where( predicates.toArray( new Predicate[0]) );\n+        query.where( root.get( \"program\" ).in( programs ) );\n \n         return getSession().createQuery( query ).getResultList();\n     }\n"}}, {"oid": "b67af0f93fe901698340b87a6f7b1541ee9f1974", "url": "https://github.com/dhis2/dhis2-core/commit/b67af0f93fe901698340b87a6f7b1541ee9f1974", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-11T08:15:14Z", "type": "forcePushed"}, {"oid": "81a7fcd5e1996e1241513e3550829f24c4a61c46", "url": "https://github.com/dhis2/dhis2-core/commit/81a7fcd5e1996e1241513e3550829f24c4a61c46", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-11T09:17:05Z", "type": "forcePushed"}, {"oid": "bdd4e545789071641ebc3d5e0880aaede4ff8418", "url": "https://github.com/dhis2/dhis2-core/commit/bdd4e545789071641ebc3d5e0880aaede4ff8418", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-11T13:54:18Z", "type": "forcePushed"}, {"oid": "00e79abb0bc57a4fa7d044431e17cf5ac250d216", "url": "https://github.com/dhis2/dhis2-core/commit/00e79abb0bc57a4fa7d044431e17cf5ac250d216", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-12T08:24:23Z", "type": "commit"}, {"oid": "00e79abb0bc57a4fa7d044431e17cf5ac250d216", "url": "https://github.com/dhis2/dhis2-core/commit/00e79abb0bc57a4fa7d044431e17cf5ac250d216", "message": "fix: Load TEI in TrackerCapture app trigger update query", "committedDate": "2020-08-12T08:24:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0NTYzNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5908#discussion_r469745635", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Collectors.toList()) ));\n          \n          \n            \n                                Collectors.toList() ) ) );", "author": "stian-sandvold", "createdAt": "2020-08-13T07:17:29Z", "path": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/trackedentity/DefaultTrackedEntityAttributeService.java", "diffHunk": "@@ -283,13 +288,20 @@ else if ( trackedEntityAttribute.hasOptionSet() && !trackedEntityAttribute.isVal\n     @Transactional(readOnly = true)\n     public Set<TrackedEntityAttribute> getAllUserReadableTrackedEntityAttributes( User user, List<Program> programs, List<TrackedEntityType> trackedEntityTypes )\n     {\n-        Set<TrackedEntityAttribute> attributes;\n+        Set<TrackedEntityAttribute> attributes = new HashSet<>();\n \n-        attributes = programs.stream().filter( program -> aclService.canDataRead( user, program ) ).collect( Collectors.toList() )\n-            .stream().map( Program::getTrackedEntityAttributes ).flatMap( Collection::stream ).collect( Collectors.toSet() );\n+        if ( programs != null && !programs.isEmpty() )\n+        {\n+            attributes.addAll( programAttributeStore.getAttributes(\n+                programs.stream().filter( program -> aclService.canDataRead( user, program ) ).collect( Collectors.toList()) ) );\n+        }\n \n-        attributes.addAll( trackedEntityTypes.stream().filter( trackedEntityType -> aclService.canDataRead( user, trackedEntityType ) ).collect( Collectors.toList() )\n-            .stream().map( TrackedEntityType::getTrackedEntityAttributes ).flatMap( Collection::stream ).collect( Collectors.toSet() ) );\n+        if ( trackedEntityTypes != null && !trackedEntityTypes.isEmpty() )\n+        {\n+            attributes.addAll( entityTypeAttributeStore.getAttributes(\n+                trackedEntityTypes.stream().filter( trackedEntityType -> aclService.canDataRead( user, trackedEntityType ) ).collect(\n+                    Collectors.toList()) ));", "originalCommit": "00e79abb0bc57a4fa7d044431e17cf5ac250d216", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}