{"pr_number": 6521, "pr_title": "feat: DHIS2-8911 adding LastUpdatedBy and CreatedBy user informations in events", "pr_createdAt": "2020-10-29T11:15:31Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6521", "timeline": [{"oid": "7b0ad908da6156069f1e43665d5499d01c7f462a", "url": "https://github.com/dhis2/dhis2-core/commit/7b0ad908da6156069f1e43665d5499d01c7f462a", "message": "feat: DHIS2-8911 adding LastUpdatedBy and CreatedBy user informations in events", "committedDate": "2020-10-29T11:14:00Z", "type": "commit"}, {"oid": "fd2d1027f990dafe8cc5e034f359a07e2209c74c", "url": "https://github.com/dhis2/dhis2-core/commit/fd2d1027f990dafe8cc5e034f359a07e2209c74c", "message": "feat: DHIS2-8911 adding LastUpdatedBy and CreatedBy user informations in data values", "committedDate": "2020-10-29T16:05:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODg0NA==", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514408844", "bodyText": "Move to EventUtils class as static method", "author": "luciano-fiandesio", "createdAt": "2020-10-29T16:45:08Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -1653,24 +1688,33 @@ private void bindEventParamsForUpdate( PreparedStatement ps, ProgramStageInstanc\n         ps.setTimestamp( 8, JdbcEventSupport.toTimestamp( new Date() ) );\n         ps.setLong( 9, programStageInstance.getAttributeOptionCombo().getId() );\n         ps.setString( 10, programStageInstance.getStoredBy() );\n-        ps.setString( 11, programStageInstance.getCompletedBy() );\n-        ps.setBoolean( 12, programStageInstance.isDeleted() );\n-        ps.setString( 13, programStageInstance.getCode() );\n-        ps.setTimestamp( 14, JdbcEventSupport.toTimestamp( programStageInstance.getCreatedAtClient() ) );\n-        ps.setTimestamp( 15, JdbcEventSupport.toTimestamp( programStageInstance.getLastUpdatedAtClient() ) );\n-        ps.setObject( 16, JdbcEventSupport.toGeometry( programStageInstance.getGeometry() ) );\n+        ps.setObject( 11, userInfoToJson( programStageInstance.getLastUpdatedByUserInfo() ) );\n+        ps.setString( 12, programStageInstance.getCompletedBy() );\n+        ps.setBoolean( 13, programStageInstance.isDeleted() );\n+        ps.setString( 14, programStageInstance.getCode() );\n+        ps.setTimestamp( 15, JdbcEventSupport.toTimestamp( programStageInstance.getCreatedAtClient() ) );\n+        ps.setTimestamp( 16, JdbcEventSupport.toTimestamp( programStageInstance.getLastUpdatedAtClient() ) );\n+        ps.setObject( 17, JdbcEventSupport.toGeometry( programStageInstance.getGeometry() ) );\n \n         if ( programStageInstance.getAssignedUser() != null )\n         {\n-            ps.setLong( 17, programStageInstance.getAssignedUser().getId() );\n+            ps.setLong( 18, programStageInstance.getAssignedUser().getId() );\n         }\n         else\n         {\n-            ps.setObject( 17, null );\n+            ps.setObject( 18, null );\n         }\n \n-        ps.setObject( 18, eventDataValuesToJson( programStageInstance.getEventDataValues(), this.jsonMapper ) );\n-        ps.setString( 19, programStageInstance.getUid() );\n+        ps.setObject( 19, eventDataValuesToJson( programStageInstance.getEventDataValues(), this.jsonMapper ) );\n+        ps.setString( 20, programStageInstance.getUid() );\n+    }\n+\n+    @SneakyThrows\n+    private PGobject userInfoToJson(ProgramStageInstanceUserInfo userInfo) {", "originalCommit": "fd2d1027f990dafe8cc5e034f359a07e2209c74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyMTU3Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514421576", "bodyText": "done, thank you", "author": "gnespolino", "createdAt": "2020-10-29T17:02:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODg0NA=="}], "type": "inlineReview", "revised_code": {"commit": "ff2434b81ec0a5b08de6bcefb0688f813b3ced32", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java\nindex 0e1888da88..3d5ef66651 100644\n--- a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java\n+++ b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java\n\n@@ -1688,7 +1673,7 @@ public class JdbcEventStore implements EventStore\n         ps.setTimestamp( 8, JdbcEventSupport.toTimestamp( new Date() ) );\n         ps.setLong( 9, programStageInstance.getAttributeOptionCombo().getId() );\n         ps.setString( 10, programStageInstance.getStoredBy() );\n-        ps.setObject( 11, userInfoToJson( programStageInstance.getLastUpdatedByUserInfo() ) );\n+        ps.setObject( 11, userInfoToJson( programStageInstance.getLastUpdatedByUserInfo(), jsonMapper ) );\n         ps.setString( 12, programStageInstance.getCompletedBy() );\n         ps.setBoolean( 13, programStageInstance.isDeleted() );\n         ps.setString( 14, programStageInstance.getCode() );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODk2Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514408963", "bodyText": "Move to EventUtils class as static method", "author": "luciano-fiandesio", "createdAt": "2020-10-29T16:45:17Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -439,6 +451,23 @@ public JdbcEventStore( StatementBuilder statementBuilder, JdbcTemplate jdbcTempl\n         return events;\n     }\n \n+    private ProgramStageInstanceUserInfo jsonToUserInfo( String userInfoAsString )", "originalCommit": "fd2d1027f990dafe8cc5e034f359a07e2209c74c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0OTMzMw==", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514949333", "bodyText": "Done, thank you", "author": "gnespolino", "createdAt": "2020-10-30T08:51:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwODk2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ff2434b81ec0a5b08de6bcefb0688f813b3ced32", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java\nindex 0e1888da88..3d5ef66651 100644\n--- a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java\n+++ b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java\n\n@@ -451,23 +453,6 @@ public class JdbcEventStore implements EventStore\n         return events;\n     }\n \n-    private ProgramStageInstanceUserInfo jsonToUserInfo( String userInfoAsString )\n-    {\n-        try\n-        {\n-            if ( StringUtils.isNotEmpty( userInfoAsString ) )\n-            {\n-                return jsonMapper.readValue( userInfoAsString, ProgramStageInstanceUserInfo.class );\n-            }\n-            return null;\n-        }\n-        catch ( IOException e )\n-        {\n-            log.error( \"Parsing ProgramStageInstanceUserInfo json string failed. String value: \" + userInfoAsString );\n-            throw new IllegalArgumentException( e );\n-        }\n-    }\n-\n     public List<ProgramStageInstance> saveEvents(List<ProgramStageInstance> events )\n     {\n         try\n"}}, {"oid": "ff2434b81ec0a5b08de6bcefb0688f813b3ced32", "url": "https://github.com/dhis2/dhis2-core/commit/ff2434b81ec0a5b08de6bcefb0688f813b3ced32", "message": "feat: DHIS2-8911 cosmetic changes", "committedDate": "2020-10-29T16:59:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDg1NA==", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514444854", "bodyText": "Could we use named parameters instead of index/? based params. When there is so many variables it's very easy to mix up when it's index based...", "author": "netroms", "createdAt": "2020-10-29T17:37:11Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/JdbcEventStore.java", "diffHunk": "@@ -174,16 +183,18 @@\n         \"lastupdated, \" +               // 10\n         \"attributeoptioncomboid, \" +    // 11\n         \"storedby, \" +                  // 12\n-        \"completedby, \" +               // 13\n-        \"deleted, \" +                   // 14\n-        \"code, \" +                      // 15\n-        \"createdatclient, \" +           // 16\n-        \"lastupdatedatclient, \" +       // 17\n-        \"geometry, \" +                  // 18\n-        \"assigneduserid, \" +            // 19\n-        \"eventdatavalues) \" +           // 20\n+        \"createdbyuserinfo, \" +         // 13\n+        \"lastupdatedbyuserinfo, \" +     // 14\n+        \"completedby, \" +               // 15\n+        \"deleted, \" +                   // 16\n+        \"code, \" +                      // 17\n+        \"createdatclient, \" +           // 18\n+        \"lastupdatedatclient, \" +       // 19\n+        \"geometry, \" +                  // 20\n+        \"assigneduserid, \" +            // 21\n+        \"eventdatavalues) \" +           // 22\n         // @formatter:on\n-        \"values ( nextval('programstageinstance_sequence'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )\";\n+        \"values ( nextval('programstageinstance_sequence'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )\";\n \n     private final static String UPDATE_EVENT_SQL = \"update programstageinstance set \" +", "originalCommit": "ff2434b81ec0a5b08de6bcefb0688f813b3ced32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0OTA5Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/6521#discussion_r514949096", "bodyText": "I agree. I'm going to create a technical ticket to use constants from EventQuery instead of using hard coded column names in the code, so replacing sql parameters with named one could be included in that ticket.", "author": "gnespolino", "createdAt": "2020-10-30T08:51:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ0NDg1NA=="}], "type": "inlineReview", "revised_code": null}]}