{"pr_number": 6063, "pr_title": "fix: prevent Hibernate session errors with User object", "pr_createdAt": "2020-09-02T13:24:16Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6063", "timeline": [{"oid": "d8ef3c7180e2969cc93e2d291c55a392f73d788c", "url": "https://github.com/dhis2/dhis2-core/commit/d8ef3c7180e2969cc93e2d291c55a392f73d788c", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a TrackerUserService dedicated to fetch the User object within\na read-only Transaction: this allow to initialize the user's proxied collection.\nThe User object can now be used safely across the different Tracker layers.", "committedDate": "2020-09-02T13:32:41Z", "type": "forcePushed"}, {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417", "url": "https://github.com/dhis2/dhis2-core/commit/c234789c1964c969ddc0a87ef0c34a8987457417", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a `TrackerUserService` dedicated to fetch the `User` object within\na read-only Transaction: this allows to initialize the `User`'s proxied collections.\nThe User object can now be used safely across the different Tracker layers.", "committedDate": "2020-09-02T13:37:38Z", "type": "commit"}, {"oid": "c234789c1964c969ddc0a87ef0c34a8987457417", "url": "https://github.com/dhis2/dhis2-core/commit/c234789c1964c969ddc0a87ef0c34a8987457417", "message": "fix: prevent Hibernate session errors with User object\n\nIntroduce a `TrackerUserService` dedicated to fetch the `User` object within\na read-only Transaction: this allows to initialize the `User`'s proxied collections.\nThe User object can now be used safely across the different Tracker layers.", "committedDate": "2020-09-02T13:37:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482105317", "bodyText": "Do we really need to set the user here?\nIt should be already be set before and just passed during the conversions", "author": "enricocolasante", "createdAt": "2020-09-02T14:18:12Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/bundle/DefaultTrackerBundleService.java", "diffHunk": "@@ -189,7 +187,10 @@ public DefaultTrackerBundleService( TrackerPreheatService trackerPreheatService,\n     {\n         TrackerBundle trackerBundle = params.toTrackerBundle();\n         TrackerPreheatParams preheatParams = params.toTrackerPreheatParams();\n-        preheatParams.setUser( getUser( preheatParams.getUser(), preheatParams.getUserId() ) );\n+        if ( preheatParams.getUser() == null )", "originalCommit": "c234789c1964c969ddc0a87ef0c34a8987457417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEzMTMwMQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482131301", "bodyText": "Yes, this is why I have added the if condition. We can remove the block completely, I guess. I just didn't want to change too much of the original logic. I guess there should never be a case in which the user is null at this point of the flow?", "author": "luciano-fiandesio", "createdAt": "2020-09-02T14:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc5MjA4MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482792081", "bodyText": "From a security perspective I would personally rather like us to cast an exception here.\nThis is what I'm trying to move towards, it's much better to break fast and tell the user it's a bug and that he/she should report it.", "author": "netroms", "createdAt": "2020-09-03T08:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgyMTA5MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482821091", "bodyText": "@netroms yes, I agree. The problem for me is that it is a bit unclear ATM how the system (Tracker) should behave in regards to users. My understanding is that Tracker can import data associated to a User which is not the currently logged in User (@mortenoh can comment on this). If this is no longer the case, I think the architecture could be simplified a bit, because we can assume that the User 1) must be always present 2) we can fetch the user from the security context rather than picking it from the database. Thoughts?", "author": "luciano-fiandesio", "createdAt": "2020-09-03T09:00:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI0MDMxMg==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r484240312", "bodyText": "This logic shouldnt trigger currently since there is no way the system can start a tracker importer job itself (It has to be initiated by a user now). But we need a quick discussion to figure out how this will work with synchronization.", "author": "stian-sandvold", "createdAt": "2020-09-07T07:42:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MjU5MA==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r484282590", "bodyText": "@luciano-fiandesio yes you are right, but this also applies to the current async logic, the threaded user context is lost when we thread off (we do have some threading utils for doing threads with security context though), and it should be possible to do imports on behalf of other users.. if this is really something we need is debatable (the general idea is that the superuser can import using a lowered level of authority)", "author": "mortenoh", "createdAt": "2020-09-07T08:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTMxNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExNjQzMA==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482116430", "bodyText": "can we try HibernateUtils.initializeProxy( user );", "author": "zubaira", "createdAt": "2020-09-02T14:32:12Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerUserService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker;\n+\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.hibernate.HibernateUtils;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserCredentials;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * Specialized User Service for Tracker that executes User look-up in a read-only transaction\n+ *\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class TrackerUserService\n+{\n+    private final CurrentUserService currentUserService;\n+\n+    private final IdentifiableObjectManager manager;\n+\n+    public TrackerUserService( CurrentUserService currentUserService, IdentifiableObjectManager manager )\n+    {\n+        this.currentUserService = currentUserService;\n+        this.manager = manager;\n+    }\n+\n+    /**\n+     * Fetch a User by user uid\n+     * @param userUid a User uid\n+     * @return a User\n+     */\n+    @Transactional( readOnly = true )\n+    public User getUser( String userUid )\n+    {\n+        User user = null;\n+\n+        if ( !StringUtils.isEmpty( userUid ) )\n+        {\n+            user = manager.get( User.class, userUid );\n+        }\n+        if ( user == null )\n+        {\n+            user = currentUserService.getCurrentUser();\n+        }\n+\n+        initUser( user );\n+\n+        return user;\n+    }\n+\n+    /**\n+     * Make sure the User object has all collection initialized, since Tracker creates new threads and there is\n+     * no Hibernate Session available.\n+     */\n+    private void initUser( final User user )\n+    {\n+        if (user == null) return;\n+\n+        UserCredentials userCredentials = user.getUserCredentials();\n+        // Init all collections\n+        HibernateUtils.initializeProxy( userCredentials );\n+\n+        // Trigger additional collections which are not covered by `initializeProxy`.\n+        // This is not very \"elegant\" but it avoids opening a transaction in other parts of Tracker\n+        // just to fetch user data\n+        user.isSuper();\n+        user.getOrganisationUnits().size();", "originalCommit": "c234789c1964c969ddc0a87ef0c34a8987457417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEyOTI1OQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r482129259", "bodyText": "I tried that, it doesn't work...", "author": "luciano-fiandesio", "createdAt": "2020-09-02T14:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExNjQzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMTk1NA==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r483501954", "bodyText": "I'm wondering if this is really specific to tracker. Looks fairly generic and might be used everywhere. Could we move it to CurrentUserService or similar @luciano-fiandesio ?", "author": "larshelge", "createdAt": "2020-09-04T09:28:35Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerUserService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker;\n+\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.hibernate.HibernateUtils;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserCredentials;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * Specialized User Service for Tracker that executes User look-up in a read-only transaction\n+ *\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class TrackerUserService\n+{\n+    private final CurrentUserService currentUserService;\n+\n+    private final IdentifiableObjectManager manager;\n+\n+    public TrackerUserService( CurrentUserService currentUserService, IdentifiableObjectManager manager )\n+    {\n+        this.currentUserService = currentUserService;\n+        this.manager = manager;\n+    }\n+\n+    /**\n+     * Fetch a User by user uid\n+     * @param userUid a User uid\n+     * @return a User\n+     */\n+    @Transactional( readOnly = true )\n+    public User getUser( String userUid )", "originalCommit": "c234789c1964c969ddc0a87ef0c34a8987457417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1MTU2Mw==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r483551563", "bodyText": "I agree, I was also unsure how to design this. I don't think that CurrentUserService is the right place, because this service requires a uid (so it'n not the \"current user\"). We have a UserService which has getUser(String uid) method, but it does not initialize the collections like I have to do here. I see this PR more like a temporary fix: we discovered several design \"issues\" in the new Tracker with @stian-sandvold  and one of those is definitively the way Users are handled. Currently, without this PR, the new Tracker doesn't work AT ALL, so this is more a fix to allow the testing to proceed while we try to redesign some of the internals. Also, the whole user management is getting redesigned (User , UserCredentials) so I hope this collections initialization is no longer going to be needed.", "author": "luciano-fiandesio", "createdAt": "2020-09-04T11:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMTk1NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMjYwMA==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r483502600", "bodyText": "Maybe a little bit shaky to have very different behavior based on whether the input argument is null or not in a service method.", "author": "larshelge", "createdAt": "2020-09-04T09:29:48Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/TrackerUserService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.hisp.dhis.tracker;\n+\n+import org.hisp.dhis.common.IdentifiableObjectManager;\n+import org.hisp.dhis.hibernate.HibernateUtils;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.user.User;\n+import org.hisp.dhis.user.UserCredentials;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.StringUtils;\n+\n+/**\n+ * Specialized User Service for Tracker that executes User look-up in a read-only transaction\n+ *\n+ * @author Luciano Fiandesio\n+ */\n+@Service\n+public class TrackerUserService\n+{\n+    private final CurrentUserService currentUserService;\n+\n+    private final IdentifiableObjectManager manager;\n+\n+    public TrackerUserService( CurrentUserService currentUserService, IdentifiableObjectManager manager )\n+    {\n+        this.currentUserService = currentUserService;\n+        this.manager = manager;\n+    }\n+\n+    /**\n+     * Fetch a User by user uid\n+     * @param userUid a User uid\n+     * @return a User\n+     */\n+    @Transactional( readOnly = true )\n+    public User getUser( String userUid )\n+    {\n+        User user = null;\n+\n+        if ( !StringUtils.isEmpty( userUid ) )", "originalCommit": "c234789c1964c969ddc0a87ef0c34a8987457417", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0ODIwMw==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r483548203", "bodyText": "Yes, I agree. This is the original logic that I extracted from the existing method getUser. It goes back to the other message I left in another comment (#6063 (comment)). In general, I don't think that userId should ever be null, but this is a bit controversial. I hope that @mortenoh can comment on that,", "author": "luciano-fiandesio", "createdAt": "2020-09-04T11:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMjYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzOTMwNQ==", "url": "https://github.com/dhis2/dhis2-core/pull/6063#discussion_r484239305", "bodyText": "I think the userUid should always be currentUser. but if currentUser == null, this logic wont make a difference, so I don't think we need this logic. currentUser == null when a user did not start the process (IE. if it is a system-started job.) But as we slightly discussed, I dont believe this is a good way to handle it, but I think we can remove this specific if/else logic, since it wont make a difference (getCurrentUser will still return null, if the uid is null)", "author": "stian-sandvold", "createdAt": "2020-09-07T07:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwMjYwMA=="}], "type": "inlineReview", "revised_code": null}]}