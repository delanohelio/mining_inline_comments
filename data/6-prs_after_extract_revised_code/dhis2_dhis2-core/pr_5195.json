{"pr_number": 5195, "pr_title": "fix: Prevent invalid query when using PI as sort item", "pr_createdAt": "2020-03-28T14:03:12Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5195", "timeline": [{"oid": "b567df3a2a797e21489598f59e93a1db97085201", "url": "https://github.com/dhis2/dhis2-core/commit/b567df3a2a797e21489598f59e93a1db97085201", "message": "fix: Prevent invalid query when using PI as sort item\n\n- DHIS2-8542\n- Fix event/enrollment query generation process, by referencing a\nProgram Indicator alias (as uid) in the \"order by\" clause (instead of a column name)", "committedDate": "2020-03-28T13:59:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NzU3MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/5195#discussion_r399987571", "bodyText": "Style, a few missing spaces", "author": "Bekkalizer", "createdAt": "2020-03-30T07:44:53Z", "path": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/EventsAnalyticsManagerTest.java", "diffHunk": "@@ -272,6 +285,41 @@ public void verifyLastAggregationTypeSubquery()\n         verifyFirstOrLastAggregationTypeSubquery( AnalyticsAggregationType.LAST );\n     }\n \n+    @Test\n+    public void verifySortClauseHandlesProgramIndicators()\n+    {\n+        Program program = createProgram( 'P' );\n+        ProgramIndicator piA = createProgramIndicator( 'A', program, \".\", \".\" );\n+        piA.setUid( \"TLKx7vllb1I\" );\n+\n+        ProgramIndicator piB = createProgramIndicator( 'B', program, \".\", \".\" );\n+        piA.setUid( \"CCKx3gllb2P\" );\n+\n+        OrganisationUnit ouA = createOrganisationUnit( 'A' );\n+        Period peA = PeriodType.getPeriodFromIsoString( \"201501\" );\n+\n+        DataElement deA = createDataElement( 'A' );\n+        deA.setUid( \"ZE4cgllb2P\");\n+\n+        DataQueryParams params = DataQueryParams.newBuilder().withDataType( DataType.NUMERIC )\n+            .withTableName( \"analytics\" ).withPeriodType( QuarterlyPeriodType.NAME )\n+            .withAggregationType( AnalyticsAggregationType.fromAggregationType( AggregationType.DEFAULT ) )\n+            .addDimension( new BaseDimensionalObject( DATA_X_DIM_ID, DimensionType.PROGRAM_INDICATOR, getList( piA, piB ) ) )\n+            .addFilter( new BaseDimensionalObject( ORGUNIT_DIM_ID, DimensionType.ORGANISATION_UNIT, getList( ouA ) ) )\n+            .addDimension( new BaseDimensionalObject( PERIOD_DIM_ID, DimensionType.DATA_X, getList( peA ) ) )\n+            .addDimension( new BaseDimensionalObject( PERIOD_DIM_ID, DimensionType.PERIOD, getList( peA ) ) ).build();\n+\n+        final EventQueryParams.Builder eventQueryParamsBuilder = new EventQueryParams.Builder( params )\n+            .withProgram( program )\n+            .addAscSortItem( piA )\n+            .addDescSortItem( piB )\n+            .addAscSortItem( deA );\n+\n+        final String sql = subject.getEventsOrEnrollmentsSql( eventQueryParamsBuilder.build(), 100 );\n+\n+        assertThat(sql, containsString(\"order by \\\"\" + piA.getUid() + \"\\\" asc,ax.\\\"\" + deA.getUid() + \"\\\" asc,\\\"\" + piB.getUid() + \"\\\"\" ));", "originalCommit": "b567df3a2a797e21489598f59e93a1db97085201", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18ac3e710e878c3e5e2aa8b5446e28f43c15a641", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/EventsAnalyticsManagerTest.java b/dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/EventsAnalyticsManagerTest.java\nindex 70667419e1..71362ff809 100644\n--- a/dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/EventsAnalyticsManagerTest.java\n+++ b/dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/EventsAnalyticsManagerTest.java\n\n@@ -317,7 +324,8 @@ public class EventsAnalyticsManagerTest extends EventAnalyticsTest\n \n         final String sql = subject.getEventsOrEnrollmentsSql( eventQueryParamsBuilder.build(), 100 );\n \n-        assertThat(sql, containsString(\"order by \\\"\" + piA.getUid() + \"\\\" asc,ax.\\\"\" + deA.getUid() + \"\\\" asc,\\\"\" + piB.getUid() + \"\\\"\" ));\n+        assertThat( sql, containsString(\n+            \"order by \\\"\" + piA.getUid() + \"\\\" asc,ax.\\\"\" + deA.getUid() + \"\\\" asc,\\\"\" + piB.getUid() + \"\\\"\" ) );\n     }\n \n     private void verifyFirstOrLastAggregationTypeSubquery( AnalyticsAggregationType analyticsAggregationType )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4ODUwMw==", "url": "https://github.com/dhis2/dhis2-core/pull/5195#discussion_r399988503", "bodyText": "Concider using the SortOrder type?\ndhis-2/dhis-api/src/main/java/org/hisp/dhis/analytics/SortOrder.java", "author": "Bekkalizer", "createdAt": "2020-03-30T07:46:37Z", "path": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java", "diffHunk": "@@ -134,19 +141,29 @@ private String getSortClause( EventQueryParams params )\n \n         if ( params.isSorting() )\n         {\n-            sql += \"order by \";\n+            sql += \"order by \" + getSortColumns( params, \"asc\" ) + getSortColumns( params, \"desc\" );\n \n-            for ( DimensionalItemObject item : params.getAsc() )\n+            sql = TextUtils.removeLastComma( sql ) + \" \";\n+        }\n+\n+        return sql;\n+    }\n+\n+    private String getSortColumns(EventQueryParams params , String order) {", "originalCommit": "b567df3a2a797e21489598f59e93a1db97085201", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5Njc1OA==", "url": "https://github.com/dhis2/dhis2-core/pull/5195#discussion_r399996758", "bodyText": "Yes!", "author": "luciano-fiandesio", "createdAt": "2020-03-30T08:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4ODUwMw=="}], "type": "inlineReview", "revised_code": {"commit": "18ac3e710e878c3e5e2aa8b5446e28f43c15a641", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java b/dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java\nindex dfdbeb0f15..f644ea8bb0 100644\n--- a/dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java\n+++ b/dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java\n\n@@ -141,7 +142,7 @@ public abstract class AbstractJdbcEventAnalyticsManager\n \n         if ( params.isSorting() )\n         {\n-            sql += \"order by \" + getSortColumns( params, \"asc\" ) + getSortColumns( params, \"desc\" );\n+            sql += \"order by \" + getSortColumns( params, SortOrder.ASC ) + getSortColumns( params, SortOrder.DESC );\n \n             sql = TextUtils.removeLastComma( sql ) + \" \";\n         }\n"}}, {"oid": "18ac3e710e878c3e5e2aa8b5446e28f43c15a641", "url": "https://github.com/dhis2/dhis2-core/commit/18ac3e710e878c3e5e2aa8b5446e28f43c15a641", "message": "chore: style", "committedDate": "2020-03-30T08:00:57Z", "type": "commit"}]}