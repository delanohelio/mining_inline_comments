{"pr_number": 4726, "pr_title": "feat: Support saving jsonb auditAttributes", "pr_createdAt": "2020-01-17T04:57:42Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/4726", "timeline": [{"oid": "1a8003993d0c4381a483881901f1fc3921c2498d", "url": "https://github.com/dhis2/dhis2-core/commit/1a8003993d0c4381a483881901f1fc3921c2498d", "message": "feat: support saving jsonb auditAttributes", "committedDate": "2020-01-17T05:01:56Z", "type": "forcePushed"}, {"oid": "65f570e6309c6475cf551738679ce168aec3fdbb", "url": "https://github.com/dhis2/dhis2-core/commit/65f570e6309c6475cf551738679ce168aec3fdbb", "message": "feat: support saving jsonb auditAttributes", "committedDate": "2020-01-17T05:06:14Z", "type": "forcePushed"}, {"oid": "28630d9e348ba1fca43ac4cf1e13cbc7b6f58802", "url": "https://github.com/dhis2/dhis2-core/commit/28630d9e348ba1fca43ac4cf1e13cbc7b6f58802", "message": "feat: support saving jsonb auditAttributes", "committedDate": "2020-01-17T08:46:54Z", "type": "commit"}, {"oid": "8d6b5533c58c14bbd3f5ac6c73286fec6981c3bf", "url": "https://github.com/dhis2/dhis2-core/commit/8d6b5533c58c14bbd3f5ac6c73286fec6981c3bf", "message": "Merge remote-tracking branch 'upstream/master' into DHIS2-8123", "committedDate": "2020-01-20T07:11:39Z", "type": "commit"}, {"oid": "8d6b5533c58c14bbd3f5ac6c73286fec6981c3bf", "url": "https://github.com/dhis2/dhis2-core/commit/8d6b5533c58c14bbd3f5ac6c73286fec6981c3bf", "message": "Merge remote-tracking branch 'upstream/master' into DHIS2-8123", "committedDate": "2020-01-20T07:11:39Z", "type": "forcePushed"}, {"oid": "68d52af3b74fd7d49a8ee67a1eb019683bfa3b70", "url": "https://github.com/dhis2/dhis2-core/commit/68d52af3b74fd7d49a8ee67a1eb019683bfa3b70", "message": "feat: add cache for auditAttributes", "committedDate": "2020-01-20T11:21:40Z", "type": "commit"}, {"oid": "beea1ff70b20697f5d91c69bbec579d1dba14c27", "url": "https://github.com/dhis2/dhis2-core/commit/beea1ff70b20697f5d91c69bbec579d1dba14c27", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:02:42Z", "type": "forcePushed"}, {"oid": "795e9facdf8be6767f69fd941f1e21dd570251ad", "url": "https://github.com/dhis2/dhis2-core/commit/795e9facdf8be6767f69fd941f1e21dd570251ad", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:07:48Z", "type": "forcePushed"}, {"oid": "a39c9f2c0d082b26bf9278a2cfd2d348f1acd9b1", "url": "https://github.com/dhis2/dhis2-core/commit/a39c9f2c0d082b26bf9278a2cfd2d348f1acd9b1", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:08:41Z", "type": "forcePushed"}, {"oid": "974c8a47ced360d241c205c16d5a86bd43893251", "url": "https://github.com/dhis2/dhis2-core/commit/974c8a47ced360d241c205c16d5a86bd43893251", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:11:32Z", "type": "forcePushed"}, {"oid": "34ac172873da811b11ec8f49ac203c7e1960e8cd", "url": "https://github.com/dhis2/dhis2-core/commit/34ac172873da811b11ec8f49ac203c7e1960e8cd", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:14:21Z", "type": "forcePushed"}, {"oid": "3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "url": "https://github.com/dhis2/dhis2-core/commit/3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:51:30Z", "type": "commit"}, {"oid": "3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "url": "https://github.com/dhis2/dhis2-core/commit/3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "message": "feat: Add unit test for AnnotationUtil", "committedDate": "2020-01-21T06:51:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU1NTc3Mg==", "url": "https://github.com/dhis2/dhis2-core/pull/4726#discussion_r370555772", "bodyText": "Please, add some Javadoc to explain what is annotation is used for", "author": "luciano-fiandesio", "createdAt": "2020-01-24T10:06:23Z", "path": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/audit/AuditAttribute.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.hisp.dhis.audit;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+", "originalCommit": "3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "38258cf873b8be92877542f22ee9ce3231035f8d", "chunk": "diff --git a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/audit/AuditAttribute.java b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/audit/AuditAttribute.java\nindex a2a94f25f3..901bf444c2 100644\n--- a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/audit/AuditAttribute.java\n+++ b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/audit/AuditAttribute.java\n\n@@ -33,6 +33,13 @@ import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\n \n+/**\n+ * Indicate an attribute of a entity should be saved for auditing.\n+ * If the marked attribute is an {@link org.hisp.dhis.common.IdentifiableObject} then its UID will be extracted for saving,\n+ * otherwise the value object of the attribute will be saved.\n+ * All attributes's values will be put into {@link Audit}.attributes and saved to database as JSONB column.\n+ * The marked attribute will be ignored if it is a collection.\n+ */\n @Retention( RetentionPolicy.RUNTIME )\n @Target( { ElementType.FIELD, ElementType.METHOD } )\n public @interface AuditAttribute\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MDc3MQ==", "url": "https://github.com/dhis2/dhis2-core/pull/4726#discussion_r371640771", "bodyText": "We should probably keep this under watch and make sure we don't kick any fields out... we have quite a lot of classes, and while I'm not sure how many places we will add this attribute, we should never be in a situation where some fields are kicked out of the cache", "author": "mortenoh", "createdAt": "2020-01-28T07:24:19Z", "path": "dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java", "diffHunk": "@@ -46,9 +59,24 @@\n {\n     private final RenderService renderService;\n \n-    public DefaultAuditObjectFactory( RenderService renderService )\n+    private final CacheProvider cacheProvider;\n+\n+    private Cache<Map<Field, Method>> cachedAuditAttributeFields;\n+\n+    public DefaultAuditObjectFactory( RenderService renderService, CacheProvider cacheProvider )\n     {\n         this.renderService = renderService;\n+        this.cacheProvider = cacheProvider;\n+    }\n+\n+    @PostConstruct\n+    public void initCache()\n+    {\n+        cachedAuditAttributeFields = cacheProvider.newCacheBuilder( Field.class, Method.class )\n+            .forRegion( \"auditAttributeFields\" )\n+            .withInitialCapacity( 100 )\n+            .withMaximumSize( 500 )", "originalCommit": "3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5MzU0Nw==", "url": "https://github.com/dhis2/dhis2-core/pull/4726#discussion_r372193547", "bodyText": "increased it to 500-1000", "author": "vietnguyen", "createdAt": "2020-01-29T05:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MDc3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "38258cf873b8be92877542f22ee9ce3231035f8d", "chunk": "diff --git a/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java b/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java\nindex 331430eff3..c6ea70a895 100644\n--- a/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java\n+++ b/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java\n\n@@ -74,8 +74,8 @@ public class DefaultAuditObjectFactory implements AuditObjectFactory\n     {\n         cachedAuditAttributeFields = cacheProvider.newCacheBuilder( Field.class, Method.class )\n             .forRegion( \"auditAttributeFields\" )\n-            .withInitialCapacity( 100 )\n-            .withMaximumSize( 500 )\n+            .withInitialCapacity( 500 )\n+            .withMaximumSize( 1000 )\n             .build();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0MTAyMQ==", "url": "https://github.com/dhis2/dhis2-core/pull/4726#discussion_r371641021", "bodyText": "Could probably be collapsed to a single return? no need to split up here", "author": "mortenoh", "createdAt": "2020-01-28T07:25:17Z", "path": "dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java", "diffHunk": "@@ -67,6 +95,38 @@ public Object create( AuditScope auditScope, AuditType auditType, Object object,\n         return null;\n     }\n \n+    @Override\n+    public AuditAttributes collectAuditAttributes( Object auditObject )\n+    {\n+        AuditAttributes auditAttributes = new AuditAttributes();\n+\n+        getAuditAttributeFields( auditObject.getClass() ).entrySet().forEach( entry -> {\n+\n+            Object attributeObject = ReflectionUtils.invokeMethod( auditObject, entry.getValue() );\n+\n+            if ( !ReflectionUtils.isCollection( attributeObject ) )\n+            {\n+                if ( attributeObject instanceof IdentifiableObject )\n+                {\n+                    auditAttributes.put( entry.getKey().getName(), ( ( IdentifiableObject ) attributeObject).getUid() );\n+                }\n+                else\n+                {\n+                    auditAttributes.put( entry.getKey().getName(), attributeObject );\n+                }\n+            }\n+        } );\n+\n+        return auditAttributes;\n+    }\n+\n+    private Map<Field, Method> getAuditAttributeFields( Class<?> auditClass )\n+    {\n+        Optional<Map<Field, Method>> listFields = cachedAuditAttributeFields.get( auditClass.getName(), a -> AnnotationUtils.getAnnotatedFields( auditClass, AuditAttribute.class ) );\n+\n+        return listFields.orElse( new HashMap<>() );", "originalCommit": "3fc4fa15ae11a78bec2e92d43dae65bdbb979702", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "38258cf873b8be92877542f22ee9ce3231035f8d", "chunk": "diff --git a/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java b/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java\nindex 331430eff3..c6ea70a895 100644\n--- a/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java\n+++ b/dhis-2/dhis-support/dhis-support-artemis/src/main/java/org/hisp/dhis/artemis/audit/legacy/DefaultAuditObjectFactory.java\n\n@@ -122,9 +122,7 @@ public class DefaultAuditObjectFactory implements AuditObjectFactory\n \n     private Map<Field, Method> getAuditAttributeFields( Class<?> auditClass )\n     {\n-        Optional<Map<Field, Method>> listFields = cachedAuditAttributeFields.get( auditClass.getName(), a -> AnnotationUtils.getAnnotatedFields( auditClass, AuditAttribute.class ) );\n-\n-        return listFields.orElse( new HashMap<>() );\n+        return cachedAuditAttributeFields.get( auditClass.getName(), a -> AnnotationUtils.getAnnotatedFields( auditClass, AuditAttribute.class ) ).orElse( new HashMap<>() );\n     }\n \n     private Object handleTracker( AuditType auditType, Object object, String user )\n"}}, {"oid": "38258cf873b8be92877542f22ee9ce3231035f8d", "url": "https://github.com/dhis2/dhis2-core/commit/38258cf873b8be92877542f22ee9ce3231035f8d", "message": "feat: add java doc and clean up code.", "committedDate": "2020-01-29T05:21:16Z", "type": "commit"}, {"oid": "b9ecad71e74b9bc195e61397dd70f82c537ba307", "url": "https://github.com/dhis2/dhis2-core/commit/b9ecad71e74b9bc195e61397dd70f82c537ba307", "message": "feat: add unit test for saving auditAttributes", "committedDate": "2020-02-05T08:10:12Z", "type": "commit"}]}