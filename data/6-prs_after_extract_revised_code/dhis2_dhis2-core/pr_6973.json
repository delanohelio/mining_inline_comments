{"pr_number": 6973, "pr_title": "fix: [DHIS2-10109] Filter out program rules for data elements that are not supposed to be applied", "pr_createdAt": "2020-12-21T14:48:24Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/6973", "timeline": [{"oid": "6a461de33d9589d538e53787c42c7042b81aa6cc", "url": "https://github.com/dhis2/dhis2-core/commit/6a461de33d9589d538e53787c42c7042b81aa6cc", "message": "fix: [DHIS2-10109] Filter out program rules for data elements that are not supposed to be applied", "committedDate": "2020-12-21T14:41:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTkzNw==", "url": "https://github.com/dhis2/dhis2-core/pull/6973#discussion_r546765937", "bodyText": "Mocking data is a bit controversial, in general, it should be avoided. I guess in this case, it's not worth to change.", "author": "luciano-fiandesio", "createdAt": "2020-12-21T15:22:32Z", "path": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/ShowErrorWarningImplementerTest.java", "diffHunk": "@@ -71,173 +63,133 @@\n \n     private final static String EVALUATED_DATA = \"4.0\";\n \n-    @Autowired\n-    private ObjectBundleService objectBundleService;\n-\n-    @Autowired\n-    private ObjectBundleValidationService objectBundleValidationService;\n-\n-    @Autowired\n-    private RenderService _renderService;\n+    private final static String ACTIVE_ENROLLMENT_ID = \"ActiveEnrollmentUid\";\n \n-    @Autowired\n-    private UserService _userService;\n+    private final static String COMPLETED_ENROLLMENT_ID = \"CompletedEnrollmentUid\";\n \n-    @Autowired\n-    private TrackerBundleService trackerBundleService;\n+    private final static String ACTIVE_EVENT_ID = \"EventUid\";\n \n-    @Autowired\n-    private ProgramRuleService programRuleService;\n+    private final static String COMPLETED_EVENT_ID = \"CompletedEventUid\";\n \n-    @Autowired\n-    private ProgramRuleActionService programRuleActionService;\n+    private final static String ERROR_PREFIX = \"Error\";\n \n-    @Autowired\n-    private ShowWarningOnCompleteValidator warningOnCompleteImplementer;\n+    private final static String WARNING_PREFIX = \"Warning\";\n \n-    @Autowired\n-    private ShowErrorOnCompleteValidator errorOnCompleteImplementer;\n-\n-    @Autowired\n-    private ShowErrorValidator errorImplementer;\n-\n-    @Autowired\n-    private ShowWarningValidator warningImplementer;\n-\n-    private TrackerBundle trackerBundle;\n-\n-    @Override\n-    protected void setUpTest()\n-        throws IOException\n-    {\n-        renderService = _renderService;\n-        userService = _userService;\n+    private final static String ERROR_ON_COMPLETE_PREFIX = \"Error on complete\";\n \n-        Map<Class<? extends IdentifiableObject>, List<IdentifiableObject>> metadata = renderService\n-            .fromMetadata( new ClassPathResource( \"tracker/event_metadata.json\" ).getInputStream(), RenderFormat.JSON );\n+    private final static String WARNING_ON_COMPLETE_PREFIX = \"Warning on complete\";\n \n-        ObjectBundleParams params = new ObjectBundleParams();\n-        params.setObjectBundleMode( ObjectBundleMode.COMMIT );\n-        params.setImportStrategy( ImportStrategy.CREATE );\n-        params.setObjects( metadata );\n+    private final static String PROGRAM_STAGE_ID = \"ProrgamStageId\";\n \n-        ObjectBundle bundle = objectBundleService.create( params );\n-        ObjectBundleValidationReport validationReport = objectBundleValidationService.validate( bundle );\n-        assertTrue( validationReport.getErrorReports().isEmpty() );\n+    private final static String DATA_ELEMENT_ID = \"DataElementId\";\n \n-        objectBundleService.commit( bundle );\n+    private ShowWarningOnCompleteValidator warningOnCompleteImplementer = new ShowWarningOnCompleteValidator();\n \n-        Program program = bundle.getPreheat().get( PreheatIdentifier.UID, Program.class, \"BFcipDERJwr\" );\n+    private ShowErrorOnCompleteValidator errorOnCompleteImplementer = new ShowErrorOnCompleteValidator();\n \n-        ProgramRule programRule = createProgramRule( 'B',\n-            program );\n-        programRule.setCondition( \"true\" );\n-        programRuleService.addProgramRule( programRule );\n-        ProgramRuleAction programRuleActionError = createProgramRuleAction( 'A', programRule );\n-        programRuleActionError.setProgramRuleActionType( ProgramRuleActionType.SHOWERROR );\n+    private ShowErrorValidator errorImplementer = new ShowErrorValidator();\n \n-        programRuleActionError.setContent( CONTENT );\n-        programRuleActionError.setData( DATA );\n-        programRuleActionService.addProgramRuleAction( programRuleActionError );\n+    private ShowWarningValidator warningImplementer = new ShowWarningValidator();\n \n-        ProgramRuleAction programRuleActionErrorOnComplete = createProgramRuleAction( 'B', programRule );\n-        programRuleActionErrorOnComplete.setProgramRuleActionType( ProgramRuleActionType.ERRORONCOMPLETE );\n+    private TrackerBundle bundle;\n \n-        programRuleActionErrorOnComplete.setContent( CONTENT );\n-        programRuleActionErrorOnComplete.setData( DATA );\n-        programRuleActionService.addProgramRuleAction( programRuleActionErrorOnComplete );\n+    @Mock\n+    private TrackerPreheat preheat;", "originalCommit": "6a461de33d9589d538e53787c42c7042b81aa6cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyNDc5NA==", "url": "https://github.com/dhis2/dhis2-core/pull/6973#discussion_r547124794", "bodyText": "When we test and there is the Preheat involved is always difficult to go to the actual service to mock it.\nIn the end, we are using the Preheat as a service that give us the data from the DB in a performant way.", "author": "enricocolasante", "createdAt": "2020-12-22T07:59:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIwMTYzMg==", "url": "https://github.com/dhis2/dhis2-core/pull/6973#discussion_r547201632", "bodyText": "Sorry Enrico, I placed the cursor on the wrong place. I meant this:\n@Mock\nprivate ProgramStage programStage;", "author": "luciano-fiandesio", "createdAt": "2020-12-22T10:38:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyNDM0Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/6973#discussion_r547224346", "bodyText": "I agree, fixed", "author": "enricocolasante", "createdAt": "2020-12-22T11:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTkzNw=="}], "type": "inlineReview", "revised_code": {"commit": "d1c8333c2e0061f455c64eb74ba6e488bca5eda9", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/ShowErrorWarningImplementerTest.java b/dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/ShowErrorWarningImplementerTest.java\nindex a4bf36c2ba..4d75bc5c79 100644\n--- a/dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/ShowErrorWarningImplementerTest.java\n+++ b/dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/programrule/ShowErrorWarningImplementerTest.java\n\n@@ -96,7 +96,6 @@ public class ShowErrorWarningImplementerTest\n     @Mock\n     private TrackerPreheat preheat;\n \n-    @Mock\n     private ProgramStage programStage;\n \n     @Override\n"}}, {"oid": "d1c8333c2e0061f455c64eb74ba6e488bca5eda9", "url": "https://github.com/dhis2/dhis2-core/commit/d1c8333c2e0061f455c64eb74ba6e488bca5eda9", "message": "Fix code review comments", "committedDate": "2020-12-22T11:27:15Z", "type": "commit"}, {"oid": "2036584c67c0cb05c2de99444fda07c59f6175dd", "url": "https://github.com/dhis2/dhis2-core/commit/2036584c67c0cb05c2de99444fda07c59f6175dd", "message": "Merge remote-tracking branch 'origin/master' into DHIS2-10109", "committedDate": "2020-12-22T14:42:02Z", "type": "commit"}, {"oid": "555dfa0cc602b210c70feca098ac722e60c3a291", "url": "https://github.com/dhis2/dhis2-core/commit/555dfa0cc602b210c70feca098ac722e60c3a291", "message": "Fix code smells", "committedDate": "2020-12-22T14:46:32Z", "type": "commit"}, {"oid": "14b9ef02a22a9624f04a38fe67aae1681a63ff06", "url": "https://github.com/dhis2/dhis2-core/commit/14b9ef02a22a9624f04a38fe67aae1681a63ff06", "message": "Fix tests", "committedDate": "2020-12-22T15:27:47Z", "type": "commit"}, {"oid": "e88da4977e358cbfe2492a78a54e9a2b97028c4d", "url": "https://github.com/dhis2/dhis2-core/commit/e88da4977e358cbfe2492a78a54e9a2b97028c4d", "message": "Fix code smells", "committedDate": "2020-12-22T15:29:02Z", "type": "commit"}]}