{"pr_number": 5813, "pr_title": "feat: Introduce user lookup API [DHIS2-8749]", "pr_createdAt": "2020-07-03T06:43:55Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5813", "timeline": [{"oid": "9be2701a85c3e35f2ad48838fd69369df15f9941", "url": "https://github.com/dhis2/dhis2-core/commit/9be2701a85c3e35f2ad48838fd69369df15f9941", "message": "Add getByUuid method", "committedDate": "2020-07-02T16:18:01Z", "type": "commit"}, {"oid": "1edcaf3f579bf480a6bce1dab4b66930a0aeb5c3", "url": "https://github.com/dhis2/dhis2-core/commit/1edcaf3f579bf480a6bce1dab4b66930a0aeb5c3", "message": "Add DTO and util method", "committedDate": "2020-07-02T16:41:30Z", "type": "commit"}, {"oid": "e690864a5a6a1a14eff7e8e51fe265b3849c6f10", "url": "https://github.com/dhis2/dhis2-core/commit/e690864a5a6a1a14eff7e8e51fe265b3849c6f10", "message": "Merge branch 'master' into DHIS2-8749", "committedDate": "2020-07-02T16:41:52Z", "type": "commit"}, {"oid": "b9865a92fb1b27e7573c0391bb5066a31735ce26", "url": "https://github.com/dhis2/dhis2-core/commit/b9865a92fb1b27e7573c0391bb5066a31735ce26", "message": "Add username validation method", "committedDate": "2020-07-03T06:41:54Z", "type": "commit"}, {"oid": "3d96be00d84f61085c548d4568260166952bae63", "url": "https://github.com/dhis2/dhis2-core/commit/3d96be00d84f61085c548d4568260166952bae63", "message": "Username validation", "committedDate": "2020-07-03T06:50:00Z", "type": "commit"}, {"oid": "817a291448af3f15392a52a40678eec285647d15", "url": "https://github.com/dhis2/dhis2-core/commit/817a291448af3f15392a52a40678eec285647d15", "message": "Merge branch 'DHIS2-8749' of github.com:dhis2/dhis2-core into DHIS2-8749", "committedDate": "2020-07-03T06:50:09Z", "type": "commit"}, {"oid": "bdf82fd813bb66cf1cfeb65d5bf8011f525331d9", "url": "https://github.com/dhis2/dhis2-core/commit/bdf82fd813bb66cf1cfeb65d5bf8011f525331d9", "message": "User lookup", "committedDate": "2020-07-03T06:56:19Z", "type": "commit"}, {"oid": "d29629c69e53b4fb79728283ebf3f2279298111c", "url": "https://github.com/dhis2/dhis2-core/commit/d29629c69e53b4fb79728283ebf3f2279298111c", "message": "Query", "committedDate": "2020-07-03T07:10:57Z", "type": "commit"}, {"oid": "7c989d6d204717a2c1b8102dbab823cb3df24ffa", "url": "https://github.com/dhis2/dhis2-core/commit/7c989d6d204717a2c1b8102dbab823cb3df24ffa", "message": "Add license", "committedDate": "2020-07-03T07:12:06Z", "type": "commit"}, {"oid": "0b8f2398a146ca278fc2c9ffd3b171759ac6cb01", "url": "https://github.com/dhis2/dhis2-core/commit/0b8f2398a146ca278fc2c9ffd3b171759ac6cb01", "message": "Test", "committedDate": "2020-07-03T07:14:40Z", "type": "commit"}, {"oid": "42e4f29b53cca99a3f80d4242275ef9dda453050", "url": "https://github.com/dhis2/dhis2-core/commit/42e4f29b53cca99a3f80d4242275ef9dda453050", "message": "Comment", "committedDate": "2020-07-03T07:17:14Z", "type": "commit"}, {"oid": "9346f163b545b70aae54d9791988b8e8b7ce777d", "url": "https://github.com/dhis2/dhis2-core/commit/9346f163b545b70aae54d9791988b8e8b7ce777d", "message": "Add controller annotation", "committedDate": "2020-07-03T07:25:40Z", "type": "commit"}, {"oid": "85c988703c15e785fdecd3f1959802e08c840d1c", "url": "https://github.com/dhis2/dhis2-core/commit/85c988703c15e785fdecd3f1959802e08c840d1c", "message": "Add controller annotation", "committedDate": "2020-07-03T07:26:35Z", "type": "commit"}, {"oid": "b92813bea805505a9f587de62a99f98e926a0ee9", "url": "https://github.com/dhis2/dhis2-core/commit/b92813bea805505a9f587de62a99f98e926a0ee9", "message": "Minor", "committedDate": "2020-07-03T07:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4NTcwNw==", "url": "https://github.com/dhis2/dhis2-core/pull/5813#discussion_r453585707", "bodyText": "Add missing test?", "author": "netroms", "createdAt": "2020-07-13T11:33:31Z", "path": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/user/UserServiceTest.java", "diffHunk": "@@ -377,6 +377,28 @@ public void testGetByPhoneNumber()\n         assertEquals( userB, users.get( 0 ) );\n     }\n \n+    @Test\n+    public void testGetByIdentifier()\n+    {\n+        User userA = createUser( 'A' );\n+        User userB = createUser( 'B' );\n+        User userC = createUser( 'C' );\n+\n+        UserCredentials credentialsA = createUserCredentials( 'A', userA );\n+        UserCredentials credentialsB = createUserCredentials( 'B', userB );\n+        UserCredentials credentialsC = createUserCredentials( 'C', userC );\n+\n+        userService.addUser( userA );\n+        userService.addUser( userB );\n+        userService.addUser( userC );\n+\n+        userService.addUserCredentials( credentialsA );\n+        userService.addUserCredentials( credentialsB );\n+        userService.addUserCredentials( credentialsC );\n+\n+        //TODO Add tests", "originalCommit": "b92813bea805505a9f587de62a99f98e926a0ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwNDgxMw==", "url": "https://github.com/dhis2/dhis2-core/pull/5813#discussion_r453704813", "bodyText": "Yep will do.", "author": "larshelge", "createdAt": "2020-07-13T14:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4NTcwNw=="}], "type": "inlineReview", "revised_code": {"commit": "64a77081739aeb1634fcde6a063996998b5ca615", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/user/UserServiceTest.java b/dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/user/UserServiceTest.java\nindex c40fb2764f..cbc72ec138 100644\n--- a/dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/user/UserServiceTest.java\n+++ b/dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/user/UserServiceTest.java\n\n@@ -396,7 +401,21 @@ public class UserServiceTest\n         userService.addUserCredentials( credentialsB );\n         userService.addUserCredentials( credentialsC );\n \n-        //TODO Add tests\n+        // Match\n+\n+        assertEquals( userA, userService.getUserByIdentifier( userA.getUuid().toString() ) );\n+        assertEquals( userA, userService.getUserByIdentifier( userA.getUid() ) );\n+        assertEquals( userA, userService.getUserByIdentifier( userA.getUsername() ) );\n+\n+        assertEquals( userB, userService.getUserByIdentifier( userB.getUuid().toString() ) );\n+        assertEquals( userB, userService.getUserByIdentifier( userB.getUid() ) );\n+        assertEquals( userB, userService.getUserByIdentifier( userB.getUsername() ) );\n+\n+        // No match\n+\n+        assertNull( userService.getUserByIdentifier( \"hYg6TgAfN71\" ) );\n+        assertNull( userService.getUserByIdentifier( \"cac39761-3ef9-4774-8b1e-b96cedbc57a9\" ) );\n+        assertNull( userService.getUserByIdentifier( \"johndoe\" ) );\n     }\n \n     @Test\n"}}, {"oid": "64a77081739aeb1634fcde6a063996998b5ca615", "url": "https://github.com/dhis2/dhis2-core/commit/64a77081739aeb1634fcde6a063996998b5ca615", "message": "Add tests", "committedDate": "2020-07-14T05:53:44Z", "type": "commit"}, {"oid": "48021bd39662c84df22b5c11b63f75e298a8af50", "url": "https://github.com/dhis2/dhis2-core/commit/48021bd39662c84df22b5c11b63f75e298a8af50", "message": "Test", "committedDate": "2020-07-14T06:34:03Z", "type": "commit"}, {"oid": "c0c086fb5ea73d9807dea985a15d4dc791a6a1b8", "url": "https://github.com/dhis2/dhis2-core/commit/c0c086fb5ea73d9807dea985a15d4dc791a6a1b8", "message": "Add test", "committedDate": "2020-07-14T07:17:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3ODg2Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5813#discussion_r454178866", "bodyText": "The username string would go directly into the query from UserCredentials uc where uc.username = :username. Have we already had sql escape somewhere in the api ?\ne.g. what if username string =  (select username from users order by lastlogin desc limit 1)", "author": "vietnguyen", "createdAt": "2020-07-14T08:06:36Z", "path": "dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util/ValidationUtils.java", "diffHunk": "@@ -177,6 +179,36 @@ public static boolean urlIsValid( String url )\n         return new UrlValidator().isValid( url );\n     }\n \n+    /**\n+     * Validates whether a UUID is valid.\n+     *\n+     * @param uuid the UUID as string.\n+     * @return true if the UUID is valid, false otherwise.\n+     */\n+    public static boolean uuidIsValid( String uuid )\n+    {\n+        try\n+        {\n+            UUID.fromString( uuid );\n+            return true;\n+        }\n+        catch ( IllegalArgumentException ex )\n+        {\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Validates whether a username is valid.\n+     *\n+     * @param username the username.\n+     * @return true if the username is valid, false otherwise.\n+     */\n+    public static boolean usernameIsValid( String username )\n+    {\n+        return username != null && username.length() <= UserCredentials.USERNAME_MAX_LENGTH;", "originalCommit": "c0c086fb5ea73d9807dea985a15d4dc791a6a1b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyNjIxNg==", "url": "https://github.com/dhis2/dhis2-core/pull/5813#discussion_r454226216", "bodyText": "Good point. We retrieve user credentials in HibernateUserCredentialsStore using a Hibernate Query with named parameters, where parameters are automatically SQL-sanitized by the JDBC driver.\nhttps://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-hibernate", "author": "larshelge", "createdAt": "2020-07-14T09:28:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3ODg2Ng=="}], "type": "inlineReview", "revised_code": null}]}