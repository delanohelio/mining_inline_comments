{"pr_number": 5336, "pr_title": "Post event performance update", "pr_createdAt": "2020-04-07T17:26:59Z", "pr_url": "https://github.com/dhis2/dhis2-core/pull/5336", "timeline": [{"oid": "20044db488e56c544d7f11092ac254408fe5eae7", "url": "https://github.com/dhis2/dhis2-core/commit/20044db488e56c544d7f11092ac254408fe5eae7", "message": "refactor: Events controller", "committedDate": "2020-04-02T13:43:45Z", "type": "commit"}, {"oid": "3c97b6d9e01f9ac8ecd23b34e0b526da3f9a4c6a", "url": "https://github.com/dhis2/dhis2-core/commit/3c97b6d9e01f9ac8ecd23b34e0b526da3f9a4c6a", "message": "refactor: Validation module for events", "committedDate": "2020-04-02T13:43:45Z", "type": "commit"}, {"oid": "edfa1dae6ac7072c0861f6b3203cfcb73674ab3d", "url": "https://github.com/dhis2/dhis2-core/commit/edfa1dae6ac7072c0861f6b3203cfcb73674ab3d", "message": "wip", "committedDate": "2020-04-02T13:43:45Z", "type": "commit"}, {"oid": "262ddf3d655bb99bedcc41a858297a8ce3bf3659", "url": "https://github.com/dhis2/dhis2-core/commit/262ddf3d655bb99bedcc41a858297a8ce3bf3659", "message": "wip: resolved all data for event insert", "committedDate": "2020-04-02T15:29:51Z", "type": "commit"}, {"oid": "c9584c09ec12bddde67e4a8c0ed936953bafe4c7", "url": "https://github.com/dhis2/dhis2-core/commit/c9584c09ec12bddde67e4a8c0ed936953bafe4c7", "message": "wip: ironed out few bugs", "committedDate": "2020-04-02T20:25:09Z", "type": "commit"}, {"oid": "c4e57ffb9ce183d9089290379345a6569dae5c63", "url": "https://github.com/dhis2/dhis2-core/commit/c4e57ffb9ce183d9089290379345a6569dae5c63", "message": "wip: add cache for program hierarchy, fixed issue in cache for program stages", "committedDate": "2020-04-03T08:37:18Z", "type": "commit"}, {"oid": "c598a982e36ef266eedb5097e1835bf965835954", "url": "https://github.com/dhis2/dhis2-core/commit/c598a982e36ef266eedb5097e1835bf965835954", "message": "wip: minor optimization", "committedDate": "2020-04-03T09:33:45Z", "type": "commit"}, {"oid": "7ad7bc7ba53b71ec6b83569d460341ba22b88999", "url": "https://github.com/dhis2/dhis2-core/commit/7ad7bc7ba53b71ec6b83569d460341ba22b88999", "message": "- made validation rules only act on immutable events\n- introduced pre-processor chain to \"prepare\" data for validation", "committedDate": "2020-04-06T13:20:57Z", "type": "commit"}, {"oid": "0c2e3d32b51f38ea992601196ad04eea72c2170b", "url": "https://github.com/dhis2/dhis2-core/commit/0c2e3d32b51f38ea992601196ad04eea72c2170b", "message": "refator: Extracting validation into checkers (not compiling)", "committedDate": "2020-04-06T13:28:01Z", "type": "commit"}, {"oid": "39f11ce95a92fa03b9f56eb8e16b360a44d21b24", "url": "https://github.com/dhis2/dhis2-core/commit/39f11ce95a92fa03b9f56eb8e16b360a44d21b24", "message": "Merge branch 'POST_EVENT_PERFORMANCE' of https://github.com/dhis2/dhis2-core into POST_EVENT_PERFORMANCE_UPDATE", "committedDate": "2020-04-06T13:28:12Z", "type": "commit"}, {"oid": "c8cd0731dbf4812c01c9bb0d6114d2c14df9123c", "url": "https://github.com/dhis2/dhis2-core/commit/c8cd0731dbf4812c01c9bb0d6114d2c14df9123c", "message": "refactor: Extracting more checkers from update", "committedDate": "2020-04-06T14:03:24Z", "type": "commit"}, {"oid": "0997493f6dc5e7a98da138ea83120fa4730340fc", "url": "https://github.com/dhis2/dhis2-core/commit/0997493f6dc5e7a98da138ea83120fa4730340fc", "message": "refactored acl validation rules", "committedDate": "2020-04-06T14:36:30Z", "type": "commit"}, {"oid": "d61912e92b7a928b242ac0fbbba5ee9bd58cfba1", "url": "https://github.com/dhis2/dhis2-core/commit/d61912e92b7a928b242ac0fbbba5ee9bd58cfba1", "message": "Merge branch 'POST_EVENT_PERFORMANCE' of https://github.com/dhis2/dhis2-core into POST_EVENT_PERFORMANCE_UPDATE", "committedDate": "2020-04-06T14:42:39Z", "type": "commit"}, {"oid": "c50b1f7850b053bd4efd219ad1ff40b72c470e7e", "url": "https://github.com/dhis2/dhis2-core/commit/c50b1f7850b053bd4efd219ad1ff40b72c470e7e", "message": "refactor: Consolidating initial Checkers and raising questions", "committedDate": "2020-04-06T16:29:09Z", "type": "commit"}, {"oid": "5d246da011da931e9dfc4317034af7f045990333", "url": "https://github.com/dhis2/dhis2-core/commit/5d246da011da931e9dfc4317034af7f045990333", "message": "refactor: Events controller", "committedDate": "2020-04-07T07:33:39Z", "type": "commit"}, {"oid": "c75cd6735260c7d7827b5fc126ada6f14d7aacf3", "url": "https://github.com/dhis2/dhis2-core/commit/c75cd6735260c7d7827b5fc126ada6f14d7aacf3", "message": "refactor: Validation module for events", "committedDate": "2020-04-07T07:35:50Z", "type": "commit"}, {"oid": "5d4176efd3c4394d02daef633e0f921d5c73bbd5", "url": "https://github.com/dhis2/dhis2-core/commit/5d4176efd3c4394d02daef633e0f921d5c73bbd5", "message": "wip", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "14f44c4cc15e8ea8c5bb60fecaa2c2f43b5b4e9d", "url": "https://github.com/dhis2/dhis2-core/commit/14f44c4cc15e8ea8c5bb60fecaa2c2f43b5b4e9d", "message": "wip: resolved all data for event insert", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "bd2c9d552b22cedbf9c718f4aa7557c69d7cb0ba", "url": "https://github.com/dhis2/dhis2-core/commit/bd2c9d552b22cedbf9c718f4aa7557c69d7cb0ba", "message": "wip: ironed out few bugs", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "b77174a76a2ce92f4dd9898dbbc7bc15ada35ead", "url": "https://github.com/dhis2/dhis2-core/commit/b77174a76a2ce92f4dd9898dbbc7bc15ada35ead", "message": "wip: add cache for program hierarchy, fixed issue in cache for program stages", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "4cdd2758eef188a247af3da3b60db95799891090", "url": "https://github.com/dhis2/dhis2-core/commit/4cdd2758eef188a247af3da3b60db95799891090", "message": "wip: minor optimization", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "db9b274538008453b93f624273a1995d8a3b6be4", "url": "https://github.com/dhis2/dhis2-core/commit/db9b274538008453b93f624273a1995d8a3b6be4", "message": "- made validation rules only act on immutable events\n- introduced pre-processor chain to \"prepare\" data for validation", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "55ce1eba88954b51911c39cc76d3d8ce645b2671", "url": "https://github.com/dhis2/dhis2-core/commit/55ce1eba88954b51911c39cc76d3d8ce645b2671", "message": "refactored acl validation rules", "committedDate": "2020-04-07T07:36:10Z", "type": "commit"}, {"oid": "01565dd18cc5b81a72e94c7e83b2a3aecdaf7bf6", "url": "https://github.com/dhis2/dhis2-core/commit/01565dd18cc5b81a72e94c7e83b2a3aecdaf7bf6", "message": "comment", "committedDate": "2020-04-07T08:01:15Z", "type": "commit"}, {"oid": "6e111f63137b05e05993ad0fb2aa57750b3c2b77", "url": "https://github.com/dhis2/dhis2-core/commit/6e111f63137b05e05993ad0fb2aa57750b3c2b77", "message": "add DataValue persistence", "committedDate": "2020-04-07T14:58:55Z", "type": "commit"}, {"oid": "1371fbf8deda620952cca424a6a60969edf9018b", "url": "https://github.com/dhis2/dhis2-core/commit/1371fbf8deda620952cca424a6a60969edf9018b", "message": "Adding skeleton of pre/post processors\n\nAlso adding some config lists for events update.", "committedDate": "2020-04-07T16:49:44Z", "type": "commit"}, {"oid": "5ea3d8817e21edb0db0191fe014bec5d448a7e15", "url": "https://github.com/dhis2/dhis2-core/commit/5ea3d8817e21edb0db0191fe014bec5d448a7e15", "message": "Merging from POST_EVENT_PERFORMANCE", "committedDate": "2020-04-07T17:16:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI5NjU5Ng==", "url": "https://github.com/dhis2/dhis2-core/pull/5336#discussion_r405296596", "bodyText": "Answering some of the questions here:\nActually I'm not sure either. For instance, NEW_AND_UPDATE seems to overlap 99% CREATE_AND UPDATE.", "author": "luciano-fiandesio", "createdAt": "2020-04-08T06:53:48Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/config/ServiceConfig.java", "diffHunk": "@@ -217,4 +224,37 @@ public RetryTemplate retryTemplate()\n             ImportStrategy.CREATE_AND_UPDATE, CREATE_EVENTS_PREPROCESS,\n             ImportStrategy.NEW_AND_UPDATES, CREATE_EVENTS_PREPROCESS );\n     }\n+\n+    /**\n+     * Default validation chains for Tracker Import (update) events process.\n+     */\n+    private final static List<Class<? extends org.hisp.dhis.dxf2.events.event.validation.ValidationCheck>> UPDATE_EVENTS_CHECKS = Lists\n+        .newArrayList(\n+        // @formatter:off\n+            EventBasicCheck.class,\n+            ProgramStageInstanceBasicCheck.class,\n+            ProgramStageInstanceAclCheck.class,\n+            ProgramCheck.class,\n+            EventBaseCheck.class,\n+            ProgramStageInstanceAuthCheck.class,\n+            AttributeOptionComboCheck.class,\n+            EventGeometryCheck.class\n+        );\n+        // @formatter:on\n+\n+    // TODO: Ask what's the difference between the values in the Enum ImportStrategy?", "originalCommit": "5ea3d8817e21edb0db0191fe014bec5d448a7e15", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI5OTM1NA==", "url": "https://github.com/dhis2/dhis2-core/pull/5336#discussion_r405299354", "bodyText": "I have created some shared super-class code to get this kind of data, we can refactor later", "author": "luciano-fiandesio", "createdAt": "2020-04-08T07:00:04Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.hisp.dhis.dxf2.events.event.preProcess.update;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.event.EventStatus.ACTIVE;\n+import static org.hisp.dhis.event.EventStatus.COMPLETED;\n+import static org.hisp.dhis.event.EventStatus.SCHEDULE;\n+import static org.hisp.dhis.event.EventStatus.SKIPPED;\n+import static org.hisp.dhis.user.User.getSafeUsername;\n+import static org.hisp.dhis.user.UserCredentials.USERNAME_MAX_LENGTH;\n+import static org.hisp.dhis.util.DateUtils.parseDate;\n+import static org.springframework.util.StringUtils.isEmpty;\n+\n+import java.util.Date;\n+\n+import org.hisp.dhis.category.CategoryOptionCombo;\n+import org.hisp.dhis.dxf2.common.ImportOptions;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.event.preProcess.PreProcessor;\n+import org.hisp.dhis.dxf2.events.event.validation.ValidationContext;\n+import org.hisp.dhis.dxf2.importsummary.ImportConflict;\n+import org.hisp.dhis.dxf2.importsummary.ImportSummary;\n+import org.hisp.dhis.organisationunit.OrganisationUnit;\n+import org.hisp.dhis.program.ProgramStageInstance;\n+import org.hisp.dhis.util.DateUtils;\n+\n+public class ProgramInstanceUpdatePreProcessor\n+    implements\n+    PreProcessor\n+{\n+    @Override\n+    public void process( final Event event, final ValidationContext ctx )\n+    {\n+        final ProgramStageInstance programStageInstance = ctx.getProgramStageInstanceMap().get( event.getEvent() );\n+        final ImportOptions importOptions = ctx.getImportOptions();\n+        final OrganisationUnit organisationUnit = ctx.getOrganisationUnitMap().get( event.getUid() );\n+        final CategoryOptionCombo categoryOptionCombo = ctx.getCategoryOptionComboMap().get( event.getUid() );\n+\n+        Date dueDate = new Date();\n+        if ( event.getDueDate() != null )\n+        {\n+            dueDate = parseDate( event.getDueDate() );\n+        }\n+\n+        if ( event.getEventDate() != null )\n+        {\n+            programStageInstance.setExecutionDate( parseDate( event.getEventDate() ) );\n+        }\n+\n+        if ( categoryOptionCombo != null )\n+        {\n+            programStageInstance.setAttributeOptionCombo( categoryOptionCombo );\n+        }\n+\n+        final String storedBy = getValidUsername( event.getStoredBy(), null,\n+            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n+\n+        final String completedBy = getValidUsername( event.getCompletedBy(), null,\n+            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n+", "originalCommit": "5ea3d8817e21edb0db0191fe014bec5d448a7e15", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c89d9eef390e38b43594acdc54a899f1f3a13c", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\nindex fdbcabef15..0fd7e9330e 100644\n--- a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\n+++ b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\n\n@@ -81,9 +81,6 @@ public class ProgramInstanceUpdatePreProcessor\n         final String storedBy = getValidUsername( event.getStoredBy(), null,\n             importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n \n-        final String completedBy = getValidUsername( event.getCompletedBy(), null,\n-            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n-\n         if ( event.getStatus() == ACTIVE )\n         {\n             programStageInstance.setStatus( ACTIVE );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwMDQ5MA==", "url": "https://github.com/dhis2/dhis2-core/pull/5336#discussion_r405300490", "bodyText": "We can calculate completedBy only when is needed (if status == completed)", "author": "luciano-fiandesio", "createdAt": "2020-04-08T07:02:42Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.hisp.dhis.dxf2.events.event.preProcess.update;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.event.EventStatus.ACTIVE;\n+import static org.hisp.dhis.event.EventStatus.COMPLETED;\n+import static org.hisp.dhis.event.EventStatus.SCHEDULE;\n+import static org.hisp.dhis.event.EventStatus.SKIPPED;\n+import static org.hisp.dhis.user.User.getSafeUsername;\n+import static org.hisp.dhis.user.UserCredentials.USERNAME_MAX_LENGTH;\n+import static org.hisp.dhis.util.DateUtils.parseDate;\n+import static org.springframework.util.StringUtils.isEmpty;\n+\n+import java.util.Date;\n+\n+import org.hisp.dhis.category.CategoryOptionCombo;\n+import org.hisp.dhis.dxf2.common.ImportOptions;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.event.preProcess.PreProcessor;\n+import org.hisp.dhis.dxf2.events.event.validation.ValidationContext;\n+import org.hisp.dhis.dxf2.importsummary.ImportConflict;\n+import org.hisp.dhis.dxf2.importsummary.ImportSummary;\n+import org.hisp.dhis.organisationunit.OrganisationUnit;\n+import org.hisp.dhis.program.ProgramStageInstance;\n+import org.hisp.dhis.util.DateUtils;\n+\n+public class ProgramInstanceUpdatePreProcessor\n+    implements\n+    PreProcessor\n+{\n+    @Override\n+    public void process( final Event event, final ValidationContext ctx )\n+    {\n+        final ProgramStageInstance programStageInstance = ctx.getProgramStageInstanceMap().get( event.getEvent() );\n+        final ImportOptions importOptions = ctx.getImportOptions();\n+        final OrganisationUnit organisationUnit = ctx.getOrganisationUnitMap().get( event.getUid() );\n+        final CategoryOptionCombo categoryOptionCombo = ctx.getCategoryOptionComboMap().get( event.getUid() );\n+\n+        Date dueDate = new Date();\n+        if ( event.getDueDate() != null )\n+        {\n+            dueDate = parseDate( event.getDueDate() );\n+        }\n+\n+        if ( event.getEventDate() != null )\n+        {\n+            programStageInstance.setExecutionDate( parseDate( event.getEventDate() ) );\n+        }\n+\n+        if ( categoryOptionCombo != null )\n+        {\n+            programStageInstance.setAttributeOptionCombo( categoryOptionCombo );\n+        }\n+\n+        final String storedBy = getValidUsername( event.getStoredBy(), null,\n+            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n+\n+        final String completedBy = getValidUsername( event.getCompletedBy(), null,\n+            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n+", "originalCommit": "5ea3d8817e21edb0db0191fe014bec5d448a7e15", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c89d9eef390e38b43594acdc54a899f1f3a13c", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\nindex fdbcabef15..0fd7e9330e 100644\n--- a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\n+++ b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\n\n@@ -81,9 +81,6 @@ public class ProgramInstanceUpdatePreProcessor\n         final String storedBy = getValidUsername( event.getStoredBy(), null,\n             importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n \n-        final String completedBy = getValidUsername( event.getCompletedBy(), null,\n-            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n-\n         if ( event.getStatus() == ACTIVE )\n         {\n             programStageInstance.setStatus( ACTIVE );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwMTEwMw==", "url": "https://github.com/dhis2/dhis2-core/pull/5336#discussion_r405301103", "bodyText": "Yes exactly, I have created a shared function for this and a new Validator for the username lenght (note that this is a warning, rather than a breaking error)", "author": "luciano-fiandesio", "createdAt": "2020-04-08T07:03:57Z", "path": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.hisp.dhis.dxf2.events.event.preProcess.update;\n+\n+/*\n+ * Copyright (c) 2004-2020, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+import static org.hisp.dhis.event.EventStatus.ACTIVE;\n+import static org.hisp.dhis.event.EventStatus.COMPLETED;\n+import static org.hisp.dhis.event.EventStatus.SCHEDULE;\n+import static org.hisp.dhis.event.EventStatus.SKIPPED;\n+import static org.hisp.dhis.user.User.getSafeUsername;\n+import static org.hisp.dhis.user.UserCredentials.USERNAME_MAX_LENGTH;\n+import static org.hisp.dhis.util.DateUtils.parseDate;\n+import static org.springframework.util.StringUtils.isEmpty;\n+\n+import java.util.Date;\n+\n+import org.hisp.dhis.category.CategoryOptionCombo;\n+import org.hisp.dhis.dxf2.common.ImportOptions;\n+import org.hisp.dhis.dxf2.events.event.Event;\n+import org.hisp.dhis.dxf2.events.event.preProcess.PreProcessor;\n+import org.hisp.dhis.dxf2.events.event.validation.ValidationContext;\n+import org.hisp.dhis.dxf2.importsummary.ImportConflict;\n+import org.hisp.dhis.dxf2.importsummary.ImportSummary;\n+import org.hisp.dhis.organisationunit.OrganisationUnit;\n+import org.hisp.dhis.program.ProgramStageInstance;\n+import org.hisp.dhis.util.DateUtils;\n+\n+public class ProgramInstanceUpdatePreProcessor\n+    implements\n+    PreProcessor\n+{\n+    @Override\n+    public void process( final Event event, final ValidationContext ctx )\n+    {\n+        final ProgramStageInstance programStageInstance = ctx.getProgramStageInstanceMap().get( event.getEvent() );\n+        final ImportOptions importOptions = ctx.getImportOptions();\n+        final OrganisationUnit organisationUnit = ctx.getOrganisationUnitMap().get( event.getUid() );\n+        final CategoryOptionCombo categoryOptionCombo = ctx.getCategoryOptionComboMap().get( event.getUid() );\n+\n+        Date dueDate = new Date();\n+        if ( event.getDueDate() != null )\n+        {\n+            dueDate = parseDate( event.getDueDate() );\n+        }\n+\n+        if ( event.getEventDate() != null )\n+        {\n+            programStageInstance.setExecutionDate( parseDate( event.getEventDate() ) );\n+        }\n+\n+        if ( categoryOptionCombo != null )\n+        {\n+            programStageInstance.setAttributeOptionCombo( categoryOptionCombo );\n+        }\n+\n+        final String storedBy = getValidUsername( event.getStoredBy(), null,\n+            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n+\n+        final String completedBy = getValidUsername( event.getCompletedBy(), null,\n+            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n+\n+        if ( event.getStatus() == ACTIVE )\n+        {\n+            programStageInstance.setStatus( ACTIVE );\n+            programStageInstance.setCompletedBy( null );\n+            programStageInstance.setCompletedDate( null );\n+        }\n+        else if ( programStageInstance.getStatus() != event.getStatus() && event.getStatus() == COMPLETED )\n+        {\n+            programStageInstance.setCompletedBy( completedBy );\n+\n+            Date completedDate = new Date();\n+\n+            if ( event.getCompletedDate() != null )\n+            {\n+                completedDate = DateUtils.parseDate( event.getCompletedDate() );\n+            }\n+\n+            programStageInstance.setCompletedDate( completedDate );\n+            programStageInstance.setStatus( COMPLETED );\n+        }\n+        else if ( event.getStatus() == SKIPPED )\n+        {\n+            programStageInstance.setStatus( SKIPPED );\n+        }\n+        else if ( event.getStatus() == SCHEDULE )\n+        {\n+            programStageInstance.setStatus( SCHEDULE );\n+        }\n+\n+        programStageInstance.setStoredBy( storedBy );\n+        programStageInstance.setDueDate( dueDate );\n+        programStageInstance.setOrganisationUnit( organisationUnit );\n+        programStageInstance.setGeometry( event.getGeometry() );\n+\n+        if ( programStageInstance.getProgramStage().isEnableUserAssignment() )\n+        {\n+            programStageInstance.setAssignedUser( ctx.getAssignedUserMap().get( event.getUid() ) );\n+        }\n+    }\n+\n+    private String getValidUsername( final String userName, final ImportSummary importSummary,\n+        final String fallbackUsername )\n+    {\n+        String validUsername = userName;\n+\n+        if ( isEmpty( validUsername ) )\n+        {\n+            validUsername = getSafeUsername( fallbackUsername );\n+        }\n+        else if ( validUsername.length() > USERNAME_MAX_LENGTH )\n+        {\n+            if ( importSummary != null )\n+            {\n+                // TODO: luciano this should be moved to the new logic\n+                importSummary.getConflicts().add( new ImportConflict( \"Username\", validUsername + \" is more than \"", "originalCommit": "5ea3d8817e21edb0db0191fe014bec5d448a7e15", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4c89d9eef390e38b43594acdc54a899f1f3a13c", "chunk": "diff --git a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\nindex fdbcabef15..0fd7e9330e 100644\n--- a/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\n+++ b/dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/event/preProcess/update/ProgramInstanceUpdatePreProcessor.java\n\n@@ -81,9 +81,6 @@ public class ProgramInstanceUpdatePreProcessor\n         final String storedBy = getValidUsername( event.getStoredBy(), null,\n             importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n \n-        final String completedBy = getValidUsername( event.getCompletedBy(), null,\n-            importOptions.getUser() != null ? importOptions.getUser().getUsername() : \"[Unknown]\" );\n-\n         if ( event.getStatus() == ACTIVE )\n         {\n             programStageInstance.setStatus( ACTIVE );\n"}}, {"oid": "c4c89d9eef390e38b43594acdc54a899f1f3a13c", "url": "https://github.com/dhis2/dhis2-core/commit/c4c89d9eef390e38b43594acdc54a899f1f3a13c", "message": "fix: Extract completedBy only for COMPLETED status", "committedDate": "2020-04-08T08:07:26Z", "type": "commit"}, {"oid": "2d0c3a2fb6b956057be94b25a87376b473ad43c0", "url": "https://github.com/dhis2/dhis2-core/commit/2d0c3a2fb6b956057be94b25a87376b473ad43c0", "message": "chore: Merging parent into local", "committedDate": "2020-04-08T08:47:04Z", "type": "commit"}]}