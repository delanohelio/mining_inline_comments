{"pr_number": 430, "pr_title": "chore: making pg-wire understand python PG driver", "pr_createdAt": "2020-06-23T11:55:46Z", "pr_url": "https://github.com/questdb/questdb/pull/430", "timeline": [{"oid": "37d574589d15c265a0ea76bb435e7bd038d51112", "url": "https://github.com/questdb/questdb/commit/37d574589d15c265a0ea76bb435e7bd038d51112", "message": "fix: table list query from PSQL. Progressed python PG connectivity as far as just before executing select without from :)", "committedDate": "2020-06-22T17:52:24Z", "type": "commit"}, {"oid": "f870b4f948a716ea1c680ef312dbbba1760fbd0b", "url": "https://github.com/questdb/questdb/commit/f870b4f948a716ea1c680ef312dbbba1760fbd0b", "message": "feat: support SQL without \"from\" clause", "committedDate": "2020-06-22T17:52:24Z", "type": "commit"}, {"oid": "69f8d253037701822801b8c2f0e3564193405424", "url": "https://github.com/questdb/questdb/commit/69f8d253037701822801b8c2f0e3564193405424", "message": "chore: fixed IODispatcher tests following adding encoding. Fixed bindTcp on Windows to stash error code. Coded up 'show transaction isolation level'", "committedDate": "2020-06-22T17:52:24Z", "type": "commit"}, {"oid": "22eef53c627ef6ae9e2b6118ad69261258365a54", "url": "https://github.com/questdb/questdb/commit/22eef53c627ef6ae9e2b6118ad69261258365a54", "message": "chore: added another \"show\" statement to appease python PG driver", "committedDate": "2020-06-23T09:58:10Z", "type": "commit"}, {"oid": "4b36cf71b50d897c6babbd2f648a0c699b529551", "url": "https://github.com/questdb/questdb/commit/4b36cf71b50d897c6babbd2f648a0c699b529551", "message": "chore: speeding up keyed aggs by prefetching", "committedDate": "2020-06-23T11:51:21Z", "type": "commit"}, {"oid": "ca10b3ba056eafde9fdd5035702802b2eea19ca2", "url": "https://github.com/questdb/questdb/commit/ca10b3ba056eafde9fdd5035702802b2eea19ca2", "message": "chore: FreeBSD library", "committedDate": "2020-06-23T12:02:26Z", "type": "commit"}, {"oid": "0d142111b5ae26b7541391b7b4156dca3466fe7a", "url": "https://github.com/questdb/questdb/commit/0d142111b5ae26b7541391b7b4156dca3466fe7a", "message": "chore: add binary for Linux", "committedDate": "2020-06-23T12:06:13Z", "type": "commit"}, {"oid": "759d6185360701bb6c1d279a70a69057dadc4972", "url": "https://github.com/questdb/questdb/commit/759d6185360701bb6c1d279a70a69057dadc4972", "message": "chore: osx library", "committedDate": "2020-06-23T12:07:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3MzUwMg==", "url": "https://github.com/questdb/questdb/pull/430#discussion_r444173502", "bodyText": "do we need the comment?", "author": "jaugsburger", "createdAt": "2020-06-23T12:09:16Z", "path": "core/src/main/java/io/questdb/griffin/SqlOptimiser.java", "diffHunk": "@@ -1134,7 +1134,7 @@ private void eraseColumnPrefixInWhereClauses(QueryModel model) throws SqlExcepti\n             // is applied before join. Please see post-join-where for filters that\n             // executed in line with standard SQL behaviour.\n \n-            if (where != null) {\n+            if (where != null /*&& m.getJoinModels().size() == 1*/) {", "originalCommit": "4b36cf71b50d897c6babbd2f648a0c699b529551", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3NjE3Nw==", "url": "https://github.com/questdb/questdb/pull/430#discussion_r444176177", "bodyText": "Nope, will remove. Thanks!", "author": "bluestreak01", "createdAt": "2020-06-23T12:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3MzUwMg=="}], "type": "inlineReview", "revised_code": {"commit": "58a722876484d67edb4220bcd391554d31dad6bb", "chunk": "diff --git a/core/src/main/java/io/questdb/griffin/SqlOptimiser.java b/core/src/main/java/io/questdb/griffin/SqlOptimiser.java\nindex 5d4b093d9..34e5fb8d9 100644\n--- a/core/src/main/java/io/questdb/griffin/SqlOptimiser.java\n+++ b/core/src/main/java/io/questdb/griffin/SqlOptimiser.java\n\n@@ -1134,7 +1134,7 @@ class SqlOptimiser {\n             // is applied before join. Please see post-join-where for filters that\n             // executed in line with standard SQL behaviour.\n \n-            if (where != null /*&& m.getJoinModels().size() == 1*/) {\n+            if (where != null) {\n                 if (where.type == ExpressionNode.LITERAL) {\n                     m.setWhereClause(columnPrefixEraser.rewrite(where));\n                 } else {\n"}}, {"oid": "58a722876484d67edb4220bcd391554d31dad6bb", "url": "https://github.com/questdb/questdb/commit/58a722876484d67edb4220bcd391554d31dad6bb", "message": "fix: test & removed commented out code", "committedDate": "2020-06-23T13:01:05Z", "type": "commit"}, {"oid": "295b4b0f52af9492f247c776d11fcdb2f54b86de", "url": "https://github.com/questdb/questdb/commit/295b4b0f52af9492f247c776d11fcdb2f54b86de", "message": "chore(griffin): print rewritten SQL", "committedDate": "2020-06-23T13:22:25Z", "type": "commit"}, {"oid": "f046d178c90cdaad4b1a0686f4f8a8c6e6a718bf", "url": "https://github.com/questdb/questdb/commit/f046d178c90cdaad4b1a0686f4f8a8c6e6a718bf", "message": "fix(griffin): PG wire tests", "committedDate": "2020-06-23T14:08:19Z", "type": "commit"}]}