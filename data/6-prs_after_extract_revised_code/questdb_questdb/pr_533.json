{"pr_number": 533, "pr_title": "chore(cutlass): Change ILP TCP connection defaults to never disconnec\u2026", "pr_createdAt": "2020-08-06T14:01:30Z", "pr_url": "https://github.com/questdb/questdb/pull/533", "timeline": [{"oid": "90f81942c46ecbcc7e5ef74e0ee25ff73e81c974", "url": "https://github.com/questdb/questdb/commit/90f81942c46ecbcc7e5ef74e0ee25ff73e81c974", "message": "chore(cutlass): Change ILP TCP connection defaults to never disconnect idle peers\n update IODispatchers to ignore idleConnectionTimeout", "committedDate": "2020-08-06T13:25:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUyNjA5NQ==", "url": "https://github.com/questdb/questdb/pull/533#discussion_r466526095", "bodyText": "when configured idelConnectionTimeout is set to 0 or is negative, why don't we automatically set to Long.MIN_VALUE?. When this is the case we would not need an extra if", "author": "bluestreak01", "createdAt": "2020-08-06T16:12:14Z", "path": "core/src/main/java/io/questdb/network/IODispatcherLinux.java", "diffHunk": "@@ -158,10 +158,12 @@ protected boolean runSerially() {\n         }\n \n         // process timed out connections\n-        final long deadline = timestamp - idleConnectionTimeout;\n-        if (pending.size() > 0 && pending.get(0, M_TIMESTAMP) < deadline) {\n-            processIdleConnections(deadline);\n-            useful = true;\n+        if (idleConnectionTimeout > 0) {", "originalCommit": "90f81942c46ecbcc7e5ef74e0ee25ff73e81c974", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a79ece9cfc118403050bc01a8ff0db70392411c", "chunk": "diff --git a/core/src/main/java/io/questdb/network/IODispatcherLinux.java b/core/src/main/java/io/questdb/network/IODispatcherLinux.java\nindex 8f159b4b2..bb74a71a6 100644\n--- a/core/src/main/java/io/questdb/network/IODispatcherLinux.java\n+++ b/core/src/main/java/io/questdb/network/IODispatcherLinux.java\n\n@@ -158,12 +158,10 @@ public class IODispatcherLinux<C extends IOContext> extends AbstractIODispatcher\n         }\n \n         // process timed out connections\n-        if (idleConnectionTimeout > 0) {\n-            final long deadline = timestamp - idleConnectionTimeout;\n-            if (pending.size() > 0 && pending.get(0, M_TIMESTAMP) < deadline) {\n-                processIdleConnections(deadline);\n-                useful = true;\n-            }\n+        final long deadline = timestamp - idleConnectionTimeout;\n+        if (pending.size() > 0 && pending.get(0, M_TIMESTAMP) < deadline) {\n+            processIdleConnections(deadline);\n+            useful = true;\n         }\n \n         return processRegistrations(timestamp) || useful;\n"}}, {"oid": "7a79ece9cfc118403050bc01a8ff0db70392411c", "url": "https://github.com/questdb/questdb/commit/7a79ece9cfc118403050bc01a8ff0db70392411c", "message": "chore(cutlass): update IODispatchers to ignore idleConnectionTimeout", "committedDate": "2020-08-07T07:07:44Z", "type": "commit"}]}