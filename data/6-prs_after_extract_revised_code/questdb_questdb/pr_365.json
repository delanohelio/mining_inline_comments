{"pr_number": 365, "pr_title": "fix(griffin) - insert as select without nominating timestamp - fixed #364 #349", "pr_createdAt": "2020-06-05T15:20:47Z", "pr_url": "https://github.com/questdb/questdb/pull/365", "timeline": [{"oid": "68ef2eb599ba8d82a7d75190384746e80a3bd9fc", "url": "https://github.com/questdb/questdb/commit/68ef2eb599ba8d82a7d75190384746e80a3bd9fc", "message": "fix(griffin) - insert as select without nominating timestamp", "committedDate": "2020-06-05T14:00:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwMTY2Mw==", "url": "https://github.com/questdb/questdb/pull/365#discussion_r436301663", "bodyText": "hmm, lets consider the following:\n\nuser is inserting \"string\" into timestamp column? what do they get as an error?\nuser chose not to populate timestamp column of writer? what do they get as an error?\nuser assigned column X to timestamp column of the writer, but somehow nominated Y to be column of the cursor? what do they get as an error?", "author": "bluestreak01", "createdAt": "2020-06-06T21:22:38Z", "path": "core/src/main/java/io/questdb/griffin/SqlCompiler.java", "diffHunk": "@@ -1464,7 +1404,7 @@ private CompiledQuery insertAsSelect(ExecutionModel executionModel, SqlExecution\n             final int cursorTimestampIndex = cursorMetadata.getTimestampIndex();\n \n             // fail when target table requires chronological data and cursor cannot provide it\n-            if (writerTimestampIndex > -1 && cursorTimestampIndex == -1) {\n+            if (writerTimestampIndex > -1 && cursorTimestampIndex == -1 && cursorMetadata.getColumnType(writerTimestampIndex) != ColumnType.TIMESTAMP) {", "originalCommit": "68ef2eb599ba8d82a7d75190384746e80a3bd9fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "397fdecf30234b8edb0d5c9463346d944027736a", "chunk": "diff --git a/core/src/main/java/io/questdb/griffin/SqlCompiler.java b/core/src/main/java/io/questdb/griffin/SqlCompiler.java\nindex 49adf21b6..0b4dbcd4b 100644\n--- a/core/src/main/java/io/questdb/griffin/SqlCompiler.java\n+++ b/core/src/main/java/io/questdb/griffin/SqlCompiler.java\n\n@@ -1402,9 +1402,10 @@ public class SqlCompiler implements Closeable {\n             final RecordMetadata writerMetadata = writer.getMetadata();\n             final int writerTimestampIndex = writerMetadata.getTimestampIndex();\n             final int cursorTimestampIndex = cursorMetadata.getTimestampIndex();\n+            final int cursorColumnCount = cursorMetadata.getColumnCount();\n \n             // fail when target table requires chronological data and cursor cannot provide it\n-            if (writerTimestampIndex > -1 && cursorTimestampIndex == -1 && cursorMetadata.getColumnType(writerTimestampIndex) != ColumnType.TIMESTAMP) {\n+            if (writerTimestampIndex > -1 && cursorTimestampIndex == -1 && (cursorColumnCount <= writerTimestampIndex || cursorMetadata.getColumnType(writerTimestampIndex) != ColumnType.TIMESTAMP)) {\n                 throw SqlException.$(name.position, \"select clause must provide timestamp column\");\n             }\n \n"}}, {"oid": "397fdecf30234b8edb0d5c9463346d944027736a", "url": "https://github.com/questdb/questdb/commit/397fdecf30234b8edb0d5c9463346d944027736a", "message": "fix(griffin) - insert as select without nominating timestamp #349", "committedDate": "2020-06-08T10:24:34Z", "type": "commit"}, {"oid": "0879f70cbec7f3c3cc1d487fb898dc94d53c005a", "url": "https://github.com/questdb/questdb/commit/0879f70cbec7f3c3cc1d487fb898dc94d53c005a", "message": "fix(griffin) - insert as select without nominating timestamp #349 #365", "committedDate": "2020-06-08T14:38:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NTMwNg==", "url": "https://github.com/questdb/questdb/pull/365#discussion_r436765306", "bodyText": "could we move this to test source tree?", "author": "bluestreak01", "createdAt": "2020-06-08T14:46:43Z", "path": "core/src/main/java/io/questdb/std/StationaryMicrosClock.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*******************************************************************************\n+ *     ___                  _   ____  ____\n+ *    / _ \\ _   _  ___  ___| |_|  _ \\| __ )\n+ *   | | | | | | |/ _ \\/ __| __| | | |  _ \\\n+ *   | |_| | |_| |  __/\\__ \\ |_| |_| | |_) |\n+ *    \\__\\_\\\\__,_|\\___||___/\\__|____/|____/\n+ *\n+ *  Copyright (c) 2014-2019 Appsicle\n+ *  Copyright (c) 2019-2020 QuestDB\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ ******************************************************************************/\n+\n+package io.questdb.std;\n+\n+import io.questdb.std.microtime.MicrosecondClock;\n+\n+public class StationaryMicrosClock implements MicrosecondClock {", "originalCommit": "0879f70cbec7f3c3cc1d487fb898dc94d53c005a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47162c9b83ee2895c76a32722853345d9d99d6b7", "chunk": "diff --git a/core/src/main/java/io/questdb/std/StationaryMicrosClock.java b/core/src/test/java/io/questdb/test/tools/StationaryMicrosClock.java\nsimilarity index 97%\nrename from core/src/main/java/io/questdb/std/StationaryMicrosClock.java\nrename to core/src/test/java/io/questdb/test/tools/StationaryMicrosClock.java\nindex da2398179..2595372d3 100644\n--- a/core/src/main/java/io/questdb/std/StationaryMicrosClock.java\n+++ b/core/src/test/java/io/questdb/test/tools/StationaryMicrosClock.java\n\n@@ -22,7 +22,7 @@\n  *\n  ******************************************************************************/\n \n-package io.questdb.std;\n+package io.questdb.test.tools;\n \n import io.questdb.std.microtime.MicrosecondClock;\n \n"}}, {"oid": "47162c9b83ee2895c76a32722853345d9d99d6b7", "url": "https://github.com/questdb/questdb/commit/47162c9b83ee2895c76a32722853345d9d99d6b7", "message": "fix(griffin) - insert as select without nominating timestamp #349 #364", "committedDate": "2020-06-08T15:47:08Z", "type": "commit"}]}