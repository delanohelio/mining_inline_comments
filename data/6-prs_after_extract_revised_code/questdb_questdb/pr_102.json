{"pr_number": 102, "pr_title": "Round half even", "pr_createdAt": "2020-01-07T14:44:37Z", "pr_url": "https://github.com/questdb/questdb/pull/102", "timeline": [{"oid": "aa4b02103eac360d2796561de63a60fbf56e593d", "url": "https://github.com/questdb/questdb/commit/aa4b02103eac360d2796561de63a60fbf56e593d", "message": "feat: round_half_even() implementation", "committedDate": "2020-01-07T13:15:38Z", "type": "commit"}, {"oid": "e575f1ca42c5f7f9dc0d4ace56c53517b6297bbb", "url": "https://github.com/questdb/questdb/commit/e575f1ca42c5f7f9dc0d4ace56c53517b6297bbb", "message": "feat: adding tests", "committedDate": "2020-01-07T13:58:48Z", "type": "commit"}, {"oid": "f55ce60aff93eb064c56f43458e27e3043827b45", "url": "https://github.com/questdb/questdb/commit/f55ce60aff93eb064c56f43458e27e3043827b45", "message": "feat: removing unnecessary branches", "committedDate": "2020-01-07T14:43:03Z", "type": "commit"}, {"oid": "ce077acb798b817516a12d4f55c2fc3805106ddf", "url": "https://github.com/questdb/questdb/commit/ce077acb798b817516a12d4f55c2fc3805106ddf", "message": "feat: adding boundary tests", "committedDate": "2020-01-07T15:09:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc4MjI0MQ==", "url": "https://github.com/questdb/questdb/pull/102#discussion_r363782241", "bodyText": "to round half to even we need to add 2 to the scale.  Pow2max is 14. According to the check scale = 15 is allowed., this will fail down the line because 15+2 > 14", "author": "bluestreak01", "createdAt": "2020-01-07T14:48:19Z", "path": "core/src/main/java/io/questdb/griffin/engine/functions/math/RoundHalfEvenDoubleFunctionFactory.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*******************************************************************************\n+ *     ___                  _   ____  ____\n+ *    / _ \\ _   _  ___  ___| |_|  _ \\| __ )\n+ *   | | | | | | |/ _ \\/ __| __| | | |  _ \\\n+ *   | |_| | |_| |  __/\\__ \\ |_| |_| | |_) |\n+ *    \\__\\_\\\\__,_|\\___||___/\\__|____/|____/\n+ *\n+ *  Copyright (c) 2014-2019 Appsicle\n+ *  Copyright (c) 2019-2020 QuestDB\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ ******************************************************************************/\n+\n+package io.questdb.griffin.engine.functions.math;\n+\n+import io.questdb.cairo.CairoConfiguration;\n+import io.questdb.cairo.sql.Function;\n+import io.questdb.cairo.sql.Record;\n+import io.questdb.griffin.FunctionFactory;\n+import io.questdb.griffin.engine.functions.BinaryFunction;\n+import io.questdb.griffin.engine.functions.DoubleFunction;\n+import io.questdb.griffin.engine.functions.UnaryFunction;\n+import io.questdb.griffin.engine.functions.constants.DoubleConstant;\n+import io.questdb.std.Numbers;\n+import io.questdb.std.NumericException;\n+import io.questdb.std.ObjList;\n+\n+public class RoundHalfEvenDoubleFunctionFactory implements FunctionFactory {\n+    @Override\n+    public String getSignature() {\n+        return \"round_half_even(DI)\";\n+    }\n+\n+    @Override\n+    public Function newInstance(ObjList<Function> args, int position, CairoConfiguration configuration) {\n+        Function scale = args.getQuick(1);\n+        if (scale.isConstant()) {\n+            int scaleValue = scale.getInt(null);\n+            if (scaleValue != Numbers.INT_NaN) {\n+                if (scaleValue > -1 && scaleValue < Numbers.pow10max + 2) {", "originalCommit": "f55ce60aff93eb064c56f43458e27e3043827b45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ce077acb798b817516a12d4f55c2fc3805106ddf", "chunk": "diff --git a/core/src/main/java/io/questdb/griffin/engine/functions/math/RoundHalfEvenDoubleFunctionFactory.java b/core/src/main/java/io/questdb/griffin/engine/functions/math/RoundHalfEvenDoubleFunctionFactory.java\nindex 3ac9b37f3..df9a82b72 100644\n--- a/core/src/main/java/io/questdb/griffin/engine/functions/math/RoundHalfEvenDoubleFunctionFactory.java\n+++ b/core/src/main/java/io/questdb/griffin/engine/functions/math/RoundHalfEvenDoubleFunctionFactory.java\n\n@@ -48,7 +48,7 @@ public class RoundHalfEvenDoubleFunctionFactory implements FunctionFactory {\n         if (scale.isConstant()) {\n             int scaleValue = scale.getInt(null);\n             if (scaleValue != Numbers.INT_NaN) {\n-                if (scaleValue > -1 && scaleValue < Numbers.pow10max + 2) {\n+                if (scaleValue > -1 && scaleValue + 2 < Numbers.pow10max) {\n                     return new FuncPosConst(position, args.getQuick(0), scaleValue);\n                 }\n                 if (scaleValue < 0 && scaleValue > -Numbers.pow10max) {\n"}}]}