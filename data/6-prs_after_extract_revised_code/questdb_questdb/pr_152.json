{"pr_number": 152, "pr_title": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) ", "pr_createdAt": "2020-04-14T16:31:56Z", "pr_url": "https://github.com/questdb/questdb/pull/152", "timeline": [{"oid": "97258924db0f61b24c6d7753f9b00231c1184c8d", "url": "https://github.com/questdb/questdb/commit/97258924db0f61b24c6d7753f9b00231c1184c8d", "message": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) - First commit", "committedDate": "2020-04-14T16:30:23Z", "type": "commit"}, {"oid": "dc830c92fae423f63b075d6bfa836622edd25a00", "url": "https://github.com/questdb/questdb/commit/dc830c92fae423f63b075d6bfa836622edd25a00", "message": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) - Vanilla methods and ARM64", "committedDate": "2020-04-15T11:36:33Z", "type": "commit"}, {"oid": "45369aaa2b1752da1cd7a3fbf65e8d49d9f07676", "url": "https://github.com/questdb/questdb/commit/45369aaa2b1752da1cd7a3fbf65e8d49d9f07676", "message": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) - OSX binary", "committedDate": "2020-04-15T13:35:16Z", "type": "commit"}, {"oid": "f171aa7ad498b2f0d85d7823681fca21bc10f1e0", "url": "https://github.com/questdb/questdb/commit/f171aa7ad498b2f0d85d7823681fca21bc10f1e0", "message": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) - Power function", "committedDate": "2020-04-16T16:23:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDExNzIyNA==", "url": "https://github.com/questdb/questdb/pull/152#discussion_r410117224", "bodyText": "could we roll this line back and then we can commit C-level impls that can be integrated into SQL later", "author": "bluestreak01", "createdAt": "2020-04-17T09:51:18Z", "path": "core/src/main/java/io/questdb/cairo/TableReader.java", "diffHunk": "@@ -440,7 +440,7 @@ public double sumDouble(int columnIndex) {\n                 for (int pageIndex = 0, pageCount = column.getPageCount(); pageIndex < pageCount; pageIndex++) {\n                     long a = column.getPageAddress(pageIndex);\n                     long count = column.getPageSize(pageIndex) / Double.BYTES;\n-                    result += Vect.sumDouble(a, count);\n+                    result += Vect.sumDoubleNeumaier(a, count);", "originalCommit": "f171aa7ad498b2f0d85d7823681fca21bc10f1e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9dc32130f047474987e9fecd4a3ebbf2b7784344", "chunk": "diff --git a/core/src/main/java/io/questdb/cairo/TableReader.java b/core/src/main/java/io/questdb/cairo/TableReader.java\nindex df011b38f..1e28b5b29 100644\n--- a/core/src/main/java/io/questdb/cairo/TableReader.java\n+++ b/core/src/main/java/io/questdb/cairo/TableReader.java\n\n@@ -440,7 +440,7 @@ public class TableReader implements Closeable {\n                 for (int pageIndex = 0, pageCount = column.getPageCount(); pageIndex < pageCount; pageIndex++) {\n                     long a = column.getPageAddress(pageIndex);\n                     long count = column.getPageSize(pageIndex) / Double.BYTES;\n-                    result += Vect.sumDoubleNeumaier(a, count);\n+                    result += Vect.sumDouble(a, count);\n                 }\n             }\n         }\n"}}, {"oid": "9dc32130f047474987e9fecd4a3ebbf2b7784344", "url": "https://github.com/questdb/questdb/commit/9dc32130f047474987e9fecd4a3ebbf2b7784344", "message": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) - PR notes", "committedDate": "2020-04-17T10:47:03Z", "type": "commit"}, {"oid": "2dba951e6d113a343969b6a0dd3b725ff381922a", "url": "https://github.com/questdb/questdb/commit/2dba951e6d113a343969b6a0dd3b725ff381922a", "message": "feat(griffin) - Kahan and Neumaier double sum - Vectorised (SIMD) - OSX binary (2)", "committedDate": "2020-04-17T10:49:33Z", "type": "commit"}]}