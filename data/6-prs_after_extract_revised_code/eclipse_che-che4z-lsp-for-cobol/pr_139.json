{"pr_number": 139, "pr_title": "111 increase databus coverage", "pr_createdAt": "2020-01-13T17:10:53Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139", "timeline": [{"oid": "e3bc6149a2c85b9e81e61d09a88f474927bc414c", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/e3bc6149a2c85b9e81e61d09a88f474927bc414c", "message": "Increase model coverage for core domain", "committedDate": "2020-01-06T17:10:02Z", "type": "commit"}, {"oid": "b9c97bdefda33574fd7ed0e07d458910888f27c8", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/b9c97bdefda33574fd7ed0e07d458910888f27c8", "message": "Increase coverage for core domain module", "committedDate": "2020-01-09T16:50:39Z", "type": "commit"}, {"oid": "f45d4cfa65ddc2047eb00a8995fc3eae6c783e0f", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/f45d4cfa65ddc2047eb00a8995fc3eae6c783e0f", "message": "Merge branch '111_IncreaseDatabusCoverage' of https://github.com/eclipse/che-che4z-lsp-for-cobol into 111_IncreaseDatabusCoverage\n\n\u0001 Conflicts:\n\u0001\tcom.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/domain/CopybookStorableTest.java", "committedDate": "2020-01-09T16:53:06Z", "type": "commit"}, {"oid": "7032d21584685996188b1743a6396ea841006d47", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/7032d21584685996188b1743a6396ea841006d47", "message": "removed test class with methods merged into CopybookEventsTest", "committedDate": "2020-01-10T08:32:40Z", "type": "commit"}, {"oid": "7acb4a8de11fc2e029b6a823c981ae368b4cd297", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/7acb4a8de11fc2e029b6a823c981ae368b4cd297", "message": "rename methods for a better understanding", "committedDate": "2020-01-10T08:44:47Z", "type": "commit"}, {"oid": "f3530f5df74bb105714fade88c7fd2422b50179d", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/f3530f5df74bb105714fade88c7fd2422b50179d", "message": "re-arranged the structure of core domain module to better understanding and satisfy guice best practices requirements.", "committedDate": "2020-01-13T12:06:40Z", "type": "commit"}, {"oid": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "message": "Move Position class into a brand new package common.model to clearly identify an object shared between multiple modules.", "committedDate": "2020-01-14T08:41:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyMDQ1OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366220459", "bodyText": "Please, make this name all capitals due to the naming convention", "author": "temanbrcom", "createdAt": "2020-01-14T09:08:22Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/** */\n+package com.broadcom.lsp.domain.cobol.event;\n+\n+import com.broadcom.lsp.domain.CopybookStorableProvider;\n+import com.broadcom.lsp.domain.cobol.event.model.FetchedCopybookEvent;\n+import com.broadcom.lsp.domain.cobol.event.model.RequiredCopybookEvent;\n+import com.broadcom.lsp.domain.cobol.event.model.UnknownEvent;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+@Slf4j\n+public class CopybookEventsTest extends CopybookStorableProvider {\n+  private static final String unknownEventMessage = \"Dummy event\";", "originalCommit": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7147beec94230a0d86526ac93f84bce863707f4", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java\nindex 43a6fc83..01f6cfc8 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventsTest.java\n\n@@ -13,7 +13,7 @@ import static org.junit.Assert.assertNotEquals;\n \n @Slf4j\n public class CopybookEventsTest extends CopybookStorableProvider {\n-  private static final String unknownEventMessage = \"Dummy event\";\n+  private static final String UNKNOWN_EVENT_MESSAGE = \"Dummy event\";\n   /** Test that the RequiredCopybookEvent DTO is correclty populated */\n   @Test\n   public void requestCopybookEventTest() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyMjU5OA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366222598", "bodyText": "I think we don't really need this method due to we do not startup a DI context. If you delete it, please, do it also for the other tests in this suite.", "author": "temanbrcom", "createdAt": "2020-01-14T09:12:52Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java", "diffHunk": "@@ -78,7 +76,6 @@ public void setUp() {\n   @After\n   public void tearDown() {", "originalCommit": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7147beec94230a0d86526ac93f84bce863707f4", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java\nindex 2347b25a..0a038816 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/DataBusGetFromCacheBadTest.java\n\n@@ -73,11 +72,6 @@ public class DataBusGetFromCacheBadTest extends AbsDataBusImplTest {\n             .build());\n   }\n \n-  @After\n-  public void tearDown() {\n-    databus = null;\n-  }\n-\n   @Override\n   public void observerCallback(DataEvent adaptedDataEvent) {\n     LOG.debug(String.format(\"Received : %s\", adaptedDataEvent.getEventType().getId()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyMzM5MQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366223391", "bodyText": "Please, make this field private", "author": "temanbrcom", "createdAt": "2020-01-14T09:14:41Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain.cobol.databus.impl;\n+\n+import com.broadcom.lsp.domain.CopybookStorableProvider;\n+import com.broadcom.lsp.domain.cobol.databus.api.CopybookRepository;\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import lombok.SneakyThrows;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.NoSuchElementException;\n+\n+import static org.junit.Assert.*;\n+\n+@Slf4j\n+public class CopybookRepositoryLRUTest extends CopybookStorableProvider {\n+  CopybookRepositoryLRU repository;", "originalCommit": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7147beec94230a0d86526ac93f84bce863707f4", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java\nindex 41c7c336..c2c8ede4 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/databus/impl/CopybookRepositoryLRUTest.java\n\n@@ -29,8 +29,8 @@ import static org.junit.Assert.*;\n \n @Slf4j\n public class CopybookRepositoryLRUTest extends CopybookStorableProvider {\n-  CopybookRepositoryLRU repository;\n-  public static final int CACHE_SIZE = 2;\n+  private CopybookRepositoryLRU repository;\n+  private static final int CACHE_SIZE = 2;\n   private CopybookStorable storable = getDummyStorable();\n \n   @Before\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyNDE5Nw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366224197", "bodyText": "Please, make these names all capitals due to the naming convention. Also, do we need getters for them?", "author": "temanbrcom", "createdAt": "2020-01-14T09:16:24Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import com.broadcom.lsp.domain.cobol.event.api.CopybookObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import javax.inject.Singleton;\n+\n+@Slf4j\n+public class CopybookStorableProvider implements CopybookObserver<DataEvent> {\n+  @Getter private static final String unknownEventMessage = \"Dummy event\";", "originalCommit": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7147beec94230a0d86526ac93f84bce863707f4", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\nindex 2597c2f2..d2a69086 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\n\n@@ -16,7 +16,7 @@\n package com.broadcom.lsp.domain;\n \n import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n-import com.broadcom.lsp.domain.cobol.event.api.CopybookObserver;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyNDYwOA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366224608", "bodyText": "The default parameter value may be skipped here", "author": "temanbrcom", "createdAt": "2020-01-14T09:17:23Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.impl.*;\n+import com.broadcom.lsp.domain.cobol.event.CopybookEventSubscribersTest;\n+import com.broadcom.lsp.domain.cobol.event.CopybookEventsTest;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+\n+/** A suite to run the databus tests. */\n+@RunWith(Suite.class)\n+@Suite.SuiteClasses(\n+    value = {", "originalCommit": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7147beec94230a0d86526ac93f84bce863707f4", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java\nindex 9945db8d..aa9fe90a 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/DomainTestSuite.java\n\n@@ -23,18 +23,17 @@ import org.junit.runners.Suite;\n \n /** A suite to run the databus tests. */\n @RunWith(Suite.class)\n-@Suite.SuiteClasses(\n-    value = {\n-      CopybookEventsTest.class,\n-      CopybookEventSubscribersTest.class,\n-      CopybookRepositoryLRUTest.class,\n-      CopybookStorableTest.class,\n-      DatabusBrokerTest.class,\n-      DataBusGetFromCacheBadTest.class,\n-      DataBusGetFromCacheHappyTest.class,\n-      DataBusStoreHappyTest.class,\n-      DataBusSubscribeHappyTest.class,\n-      DataBusSubscribeBadTest.class,\n-      DataBusUnSubscribeTest.class\n-    })\n+@Suite.SuiteClasses({\n+  CopybookEventsTest.class,\n+  CopybookEventSubscribersTest.class,\n+  CopybookRepositoryLRUTest.class,\n+  CopybookStorableTest.class,\n+  DatabusBrokerTest.class,\n+  DataBusGetFromCacheBadTest.class,\n+  DataBusGetFromCacheHappyTest.class,\n+  DataBusStoreHappyTest.class,\n+  DataBusSubscribeHappyTest.class,\n+  DataBusSubscribeBadTest.class,\n+  DataBusUnSubscribeTest.class\n+})\n public class DomainTestSuite {}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyNjMxMQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366226311", "bodyText": "I don't think that CopybookObserver is a good name because the purpose of this mechanism is to allow communications between different modules and not only for the copybooks.\nFor example, I am going to use it to allow calls from the WorkspaceService to the TextDocumentService after triggering by the watcher.", "author": "temanbrcom", "createdAt": "2020-01-14T09:21:08Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/CopybookObserver.java", "diffHunk": "@@ -14,12 +14,12 @@\n  *\n  */\n \n-package com.broadcom.lsp.domain.cobol.databus.api;\n+package com.broadcom.lsp.domain.cobol.event.api;\n \n /**\n  * This interface implements the Observer pattern for the databus. It provides a callback method to\n  * perform some action if the required event is populated.\n  */\n-public interface DataBusObserver<O> {\n+public interface CopybookObserver<O> {", "originalCommit": "98ec3369b44c7c74d0edc28a99a3cda9df052ee2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b7147beec94230a0d86526ac93f84bce863707f4", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/CopybookObserver.java b/com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/EventObserver.java\nsimilarity index 94%\nrename from com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/CopybookObserver.java\nrename to com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/EventObserver.java\nindex 4f285651..0c12a3d3 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/CopybookObserver.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/main/java/com/broadcom/lsp/domain/cobol/event/api/EventObserver.java\n\n@@ -20,6 +20,6 @@ package com.broadcom.lsp.domain.cobol.event.api;\n  * This interface implements the Observer pattern for the databus. It provides a callback method to\n  * perform some action if the required event is populated.\n  */\n-public interface CopybookObserver<O> {\n+public interface EventObserver<O> {\n   void observerCallback(O adaptedDataEvent);\n }\n"}}, {"oid": "b7147beec94230a0d86526ac93f84bce863707f4", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/b7147beec94230a0d86526ac93f84bce863707f4", "message": "Apply changes required by code review stage", "committedDate": "2020-01-14T09:33:55Z", "type": "commit"}, {"oid": "6294b5da3f07c6fe528b05d0132e13dc668dd77d", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/6294b5da3f07c6fe528b05d0132e13dc668dd77d", "message": "Merge remote-tracking branch 'remotes/origin/development' into 111_IncreaseDatabusCoverage\n\n# Conflicts:\n#\tcom.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/copybook/AnalyseCopybookTask.java\n#\tcom.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserImpl.java\n#\tcom.ca.lsp.cobol/lsp-core-cobol-parser/src/main/java/com/ca/lsp/core/cobol/preprocessor/sub/document/impl/CobolSemanticParserListenerImpl.java\n#\tcom.ca.lsp.cobol/lsp-service-cobol/src/main/java/com/ca/lsp/cobol/service/delegates/validations/CobolLanguageEngineFacade.java", "committedDate": "2020-01-14T09:56:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0NzUzMA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366247530", "bodyText": "please extract this getREQCPY in a global variable in order to avoid multiple duplicate codes, same for every other getter in the class", "author": "sergiuilie", "createdAt": "2020-01-14T10:03:37Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain.cobol.event;\n+\n+import com.broadcom.lsp.domain.CopybookStorableProvider;\n+import com.broadcom.lsp.domain.cobol.event.api.CopybookEventFactory;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.impl.FetchedCopybookEventSubscriber;\n+import com.broadcom.lsp.domain.cobol.event.impl.RequiredCopybookEventSubscriber;\n+import com.broadcom.lsp.domain.cobol.event.impl.UnknownEventSubscriber;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEventType;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+@Slf4j\n+public class CopybookEventSubscribersTest extends CopybookStorableProvider {\n+  static class DatabusObserverTest implements EventObserver<DataEvent> {\n+    @Override\n+    public void observerCallback(DataEvent adaptedDataEvent) {\n+      LOG.debug(\"CALLBACK WORKS!\");\n+    }\n+  }\n+\n+  DatabusObserverTest databusObserver;\n+\n+  @Before\n+  public void initObserver() {\n+    databusObserver = new DatabusObserverTest();\n+  }\n+\n+  /** This test verify that the RequiredCopybook factory creates a new RequiredCopybook event */\n+  @Test\n+  public void testRequireSubscriberFactory() {\n+    assertEquals(getREQCPY(), getRequiredSubscriberFromFactory().getEventType().getHeader());\n+  }\n+\n+  /** This test verify that the FetchedCopybook factory creates a new FetchedCopybook event */\n+  @Test\n+  public void testFetchSubscriberFactory() {\n+    assertEquals(getFETCHEDCPY(), getFetchedSubscriberFromFactory().getEventType().getHeader());\n+  }\n+\n+  /** This test verify that the Unknown factory creates a new Unknown event */\n+  @Test\n+  public void testUnknownSubscriberFactory() {\n+    assertEquals(getUNKNOWN(), getUnknownSubscriberFromFactory().getEventType().getHeader());\n+  }\n+\n+  /** This test verify that a wrong factory isn't returned back. */\n+  @Test\n+  public void negativeTestSubscriberFactory() {\n+    assertNotEquals(getREQCPY(), getFetchedSubscriberFromFactory());", "originalCommit": "b7147beec94230a0d86526ac93f84bce863707f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63341b454951c3f05f2d1d3b1ad1a05dd6621731", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java\nindex a3431e73..30650ff3 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/cobol/event/CopybookEventSubscribersTest.java\n\n@@ -39,6 +39,9 @@ public class CopybookEventSubscribersTest extends CopybookStorableProvider {\n     }\n   }\n \n+  private static final String REQCPY = \"REQCPY\";\n+  private static final String FETCHEDCPY = \"FETCHEDCPY\";\n+  private static final String UNKNOWN = \"UNKNOWN\";\n   DatabusObserverTest databusObserver;\n \n   @Before\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODM3OA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366298378", "bodyText": "please put everything uppercase", "author": "sergiuilie", "createdAt": "2020-01-14T11:57:16Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import javax.inject.Singleton;\n+\n+@Slf4j\n+public class CopybookStorableProvider implements EventObserver<DataEvent> {\n+  @Getter private static final String copybookName = \"Test\";", "originalCommit": "b7147beec94230a0d86526ac93f84bce863707f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63341b454951c3f05f2d1d3b1ad1a05dd6621731", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\nindex d2a69086..0bad054d 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\n\n@@ -18,23 +18,19 @@ package com.broadcom.lsp.domain;\n import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n-import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n import javax.inject.Singleton;\n \n @Slf4j\n public class CopybookStorableProvider implements EventObserver<DataEvent> {\n-  @Getter private static final String copybookName = \"Test\";\n-  @Getter private static final String copybookURI = \"file:///C:/Users/test/Test.cbl\";\n-  @Getter private static final String copybookContent = \"000000 IDENTIFICATION DIVISION.\";\n-  @Getter private static final String REQCPY = \"REQCPY\";\n-  @Getter private static final String FETCHEDCPY = \"FETCHEDCPY\";\n-  @Getter private static final String UNKNOWN = \"UNKNOWN\";\n+  private static final String COPYBOOK_NAME = \"Test\";\n+  private static final String COPYBOOK_URI = \"file:///C:/Users/test/Test.cbl\";\n+  private static final String COPYBOOK_CONTENT = \"000000 IDENTIFICATION DIVISION.\";\n \n   @Singleton\n   private static CopybookStorable STORABLE_INSTANCE =\n-      new CopybookStorable(copybookName, copybookURI, copybookContent);\n+      new CopybookStorable(COPYBOOK_NAME, COPYBOOK_URI, COPYBOOK_CONTENT);\n \n   public CopybookStorable getDummyStorable() {\n     return STORABLE_INSTANCE;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODc0Mw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/139#discussion_r366298743", "bodyText": "if the field is static there is no need for \"@getter\", make the field public", "author": "sergiuilie", "createdAt": "2020-01-14T11:58:19Z", "path": "com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ *\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ * Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.domain;\n+\n+import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n+import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n+import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import javax.inject.Singleton;\n+\n+@Slf4j\n+public class CopybookStorableProvider implements EventObserver<DataEvent> {\n+  @Getter private static final String copybookName = \"Test\";\n+  @Getter private static final String copybookURI = \"file:///C:/Users/test/Test.cbl\";\n+  @Getter private static final String copybookContent = \"000000 IDENTIFICATION DIVISION.\";\n+  @Getter private static final String REQCPY = \"REQCPY\";", "originalCommit": "b7147beec94230a0d86526ac93f84bce863707f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63341b454951c3f05f2d1d3b1ad1a05dd6621731", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\nindex d2a69086..0bad054d 100644\n--- a/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\n+++ b/com.ca.lsp.cobol/lsp-core-domain/src/test/java/com/broadcom/lsp/domain/CopybookStorableProvider.java\n\n@@ -18,23 +18,19 @@ package com.broadcom.lsp.domain;\n import com.broadcom.lsp.domain.cobol.databus.model.CopybookStorable;\n import com.broadcom.lsp.domain.cobol.event.api.EventObserver;\n import com.broadcom.lsp.domain.cobol.event.model.DataEvent;\n-import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n import javax.inject.Singleton;\n \n @Slf4j\n public class CopybookStorableProvider implements EventObserver<DataEvent> {\n-  @Getter private static final String copybookName = \"Test\";\n-  @Getter private static final String copybookURI = \"file:///C:/Users/test/Test.cbl\";\n-  @Getter private static final String copybookContent = \"000000 IDENTIFICATION DIVISION.\";\n-  @Getter private static final String REQCPY = \"REQCPY\";\n-  @Getter private static final String FETCHEDCPY = \"FETCHEDCPY\";\n-  @Getter private static final String UNKNOWN = \"UNKNOWN\";\n+  private static final String COPYBOOK_NAME = \"Test\";\n+  private static final String COPYBOOK_URI = \"file:///C:/Users/test/Test.cbl\";\n+  private static final String COPYBOOK_CONTENT = \"000000 IDENTIFICATION DIVISION.\";\n \n   @Singleton\n   private static CopybookStorable STORABLE_INSTANCE =\n-      new CopybookStorable(copybookName, copybookURI, copybookContent);\n+      new CopybookStorable(COPYBOOK_NAME, COPYBOOK_URI, COPYBOOK_CONTENT);\n \n   public CopybookStorable getDummyStorable() {\n     return STORABLE_INSTANCE;\n"}}, {"oid": "63341b454951c3f05f2d1d3b1ad1a05dd6621731", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/63341b454951c3f05f2d1d3b1ad1a05dd6621731", "message": "Apply changes required by code review stage + merge conflicts for Position's package move", "committedDate": "2020-01-14T13:36:24Z", "type": "commit"}]}