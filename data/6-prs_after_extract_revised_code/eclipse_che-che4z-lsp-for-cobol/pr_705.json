{"pr_number": 705, "pr_title": "feat: Add IDMS DML support for IDMS-CONTROL section #704", "pr_createdAt": "2020-12-17T18:15:50Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/705", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY3MDM4NA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/705#discussion_r545670384", "bodyText": "This line is not aligned", "author": "temanbrcom", "createdAt": "2020-12-18T08:50:52Z", "path": "server/src/test/java/com/broadcom/lsp/cobol/usecases/TestIdmsControlSectionAll.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright (c) 2020 Broadcom.\n+ * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *    Broadcom, Inc. - initial API and implementation\n+ *\n+ */\n+package com.broadcom.lsp.cobol.usecases;\n+\n+import com.broadcom.lsp.cobol.service.delegates.validations.SourceInfoLevels;\n+import com.broadcom.lsp.cobol.usecases.engine.UseCaseEngine;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.eclipse.lsp4j.DiagnosticSeverity;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+/** These test for variations of valid IDMS-CONTROL SECTION definitions */\n+class TestIdmsControlSectionAll {\n+\n+    private static final String MESSAGE_1 = \"rule ss_names_length failed predicate: {_input.LT(1).getText().matches(\\\"16|18\\\")}?\";\n+\n+    private static final String BOILERPLATE =\n+            \"        IDENTIFICATION DIVISION. \\r\\n\"\n+                    + \"        PROGRAM-ID. test1.\\r\\n\"\n+                    + \"        ENVIRONMENT DIVISION.\\r\\n\"\n+                    + \"        IDMS-CONTROL SECTION.\\r\\n\";\n+\n+        private static final String IDMSCS_WITH_ALL_CLAUSES =", "originalCommit": "354475824eb97c281c97c47d8ad97f2321eca570", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc4NjE3OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/705#discussion_r545786179", "bodyText": "There are two important points\n\nWe need to separate IDMS grammar into different .g4 file. Application gets highly tied, please extract to different grammar files. Currently we have CICS, DB2, and will be IDMS used as extension onto Cobol\ngenerated sources committed, please revert them back  (seems already removed, OK now ;) )", "author": "asatklichov", "createdAt": "2020-12-18T11:58:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY3MDM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc5MDAwNg==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/705#discussion_r545790006", "bodyText": "IDMS is not a separate language, so it doesn't have one entry point like EXEC CICS. So the grammar would be cleaner if we don't separate the IDMS.", "author": "temanbrcom", "createdAt": "2020-12-18T12:06:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY3MDM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc5MjczNA==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/705#discussion_r545792734", "bodyText": "Then, better to put it into Cobol, not CICS", "author": "asatklichov", "createdAt": "2020-12-18T12:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY3MDM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "9049a5a071dc593b9cc0facc2c596de3d2497c5c", "chunk": "diff --git a/server/src/test/java/com/broadcom/lsp/cobol/usecases/TestIdmsControlSectionAll.java b/server/src/test/java/com/broadcom/lsp/cobol/usecases/TestIdmsControlSectionAll.java\nindex 16712a34..7e57cd83 100644\n--- a/server/src/test/java/com/broadcom/lsp/cobol/usecases/TestIdmsControlSectionAll.java\n+++ b/server/src/test/java/com/broadcom/lsp/cobol/usecases/TestIdmsControlSectionAll.java\n\n@@ -37,7 +37,7 @@ class TestIdmsControlSectionAll {\n                     + \"        ENVIRONMENT DIVISION.\\r\\n\"\n                     + \"        IDMS-CONTROL SECTION.\\r\\n\";\n \n-        private static final String IDMSCS_WITH_ALL_CLAUSES =\n+    private static final String IDMSCS_WITH_ALL_CLAUSES =\n             \"            PROTOCOL. MODE ABC\\r\\n\"\n                     + \"            SUBSCHEMA-NAMES LENGTH 18\\r\\n\"\n                     + \"            IDMS-RECORDS WITHIN WORKING-STORAGE\";\n"}}, {"oid": "9049a5a071dc593b9cc0facc2c596de3d2497c5c", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/9049a5a071dc593b9cc0facc2c596de3d2497c5c", "message": "feat: Add IDMS DML support for IDMS-CONTROL section #704\n\nSigned-off-by: Teri Schnitt <teri.schnitt@broadcom.com>", "committedDate": "2020-12-18T11:42:22Z", "type": "forcePushed"}, {"oid": "a23722a89a83f987cdcf3d1a27f178b528447115", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a23722a89a83f987cdcf3d1a27f178b528447115", "message": "feat: Add IDMS DML support for IDMS-CONTROL section #704\n\nSigned-off-by: Teri Schnitt <teri.schnitt@broadcom.com>", "committedDate": "2020-12-18T11:56:23Z", "type": "commit"}, {"oid": "a23722a89a83f987cdcf3d1a27f178b528447115", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/a23722a89a83f987cdcf3d1a27f178b528447115", "message": "feat: Add IDMS DML support for IDMS-CONTROL section #704\n\nSigned-off-by: Teri Schnitt <teri.schnitt@broadcom.com>", "committedDate": "2020-12-18T11:56:23Z", "type": "forcePushed"}]}