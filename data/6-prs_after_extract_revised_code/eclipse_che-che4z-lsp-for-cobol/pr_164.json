{"pr_number": 164, "pr_title": "Provide the document URI for the language engine", "pr_createdAt": "2020-01-29T11:29:29Z", "pr_url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/164", "timeline": [{"oid": "3c1d5f9e51a0e415c58b7ba12106d65d96c60c32", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/3c1d5f9e51a0e415c58b7ba12106d65d96c60c32", "message": "Pass a document URI to the engine to have the correct postions GH-141\nSyntax errors and semantic elements, such as variables and copybooks, contain a document URI to be shown correctly over the workspace.\nPreviously a complicated logic used here to determine the correct position in the workspace, now the current URI is passed directly.", "committedDate": "2020-01-28T15:47:35Z", "type": "commit"}, {"oid": "33932dedc1b48432b25641e2f66157fdfa4a82eb", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/33932dedc1b48432b25641e2f66157fdfa4a82eb", "message": "Send the document URi with the copybook request GH-141\nThe current document URI is required to build the dependecy graph, so it should be sent with a copybook name in the databus request.", "committedDate": "2020-01-29T11:22:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzOTM3Mw==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/164#discussion_r372339373", "bodyText": "Please put a meaningful value for the URI :)", "author": "zacanbrcom", "createdAt": "2020-01-29T11:53:34Z", "path": "com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/engine/CobolLanguageEngineTest.java", "diffHunk": "@@ -72,14 +72,14 @@ public CobolLanguageEngineTest(CobolSourceFormat format) {\n   @Test\n   public void doCheckNegative() {\n     CobolLanguageEngine engine = new CobolLanguageEngine(format);\n-    ResultWithErrors<SemanticContext> result = engine.run(NEGATIVE_TEXT);\n+    ResultWithErrors<SemanticContext> result = engine.run(\"1\", NEGATIVE_TEXT);", "originalCommit": "33932dedc1b48432b25641e2f66157fdfa4a82eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63a3b3a0513264590dccfd18b6cc4db4c9067534", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/engine/CobolLanguageEngineTest.java b/com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/engine/CobolLanguageEngineTest.java\nindex b006fec0..ca20cc5e 100644\n--- a/com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/engine/CobolLanguageEngineTest.java\n+++ b/com.ca.lsp.cobol/lsp-core-cobol-parser/src/test/java/com/ca/lsp/core/cobol/engine/CobolLanguageEngineTest.java\n\n@@ -72,14 +73,14 @@ public class CobolLanguageEngineTest {\n   @Test\n   public void doCheckNegative() {\n     CobolLanguageEngine engine = new CobolLanguageEngine(format);\n-    ResultWithErrors<SemanticContext> result = engine.run(\"1\", NEGATIVE_TEXT);\n+    ResultWithErrors<SemanticContext> result = engine.run(DOCUMENT_URI, NEGATIVE_TEXT);\n     assertEquals(11, result.getErrors().stream().filter(item -> item.getSeverity() == 1).count());\n   }\n \n   @Test\n   public void doCheckPositive() {\n     CobolLanguageEngine engine = new CobolLanguageEngine(format);\n-    ResultWithErrors<SemanticContext> result = engine.run(\"1\", POSITIVE_TEXT);\n+    ResultWithErrors<SemanticContext> result = engine.run(DOCUMENT_URI, POSITIVE_TEXT);\n     assertEquals(0, result.getErrors().stream().filter(item -> item.getSeverity() == 1).count());\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MTQ3OQ==", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/pull/164#discussion_r372341479", "bodyText": "Please provide a meaningful value for URI :)", "author": "zacanbrcom", "createdAt": "2020-01-29T11:58:39Z", "path": "com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java", "diffHunk": "@@ -154,18 +154,32 @@ public void observerCallback() {\n     AnalysisResult resultWithErrors =\n         new AnalysisResult(diagnosticsWithErrors, null, null, null, null);\n \n-    when(engine.analyze(TEXT_EXAMPLE)).thenReturn(resultNoErrors);\n-    when(engine.analyze(INCORRECT_TEXT_EXAMPLE)).thenReturn(resultWithErrors);\n+    String correctDocumentUri = \"1\";\n+    String incorrectDocumentUri = \"2\";", "originalCommit": "33932dedc1b48432b25641e2f66157fdfa4a82eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63a3b3a0513264590dccfd18b6cc4db4c9067534", "chunk": "diff --git a/com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java b/com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java\nindex 11bcc9f6..1a8016bd 100644\n--- a/com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java\n+++ b/com.ca.lsp.cobol/lsp-service-cobol/src/test/java/com/ca/lsp/cobol/service/MyTextDocumentServiceTest.java\n\n@@ -154,32 +156,29 @@ public class MyTextDocumentServiceTest extends ConfigurableTest {\n     AnalysisResult resultWithErrors =\n         new AnalysisResult(diagnosticsWithErrors, null, null, null, null);\n \n-    String correctDocumentUri = \"1\";\n-    String incorrectDocumentUri = \"2\";\n-\n-    when(engine.analyze(correctDocumentUri, TEXT_EXAMPLE)).thenReturn(resultNoErrors);\n-    when(engine.analyze(incorrectDocumentUri, INCORRECT_TEXT_EXAMPLE)).thenReturn(resultWithErrors);\n+    when(engine.analyze(DOCUMENT_URI, TEXT_EXAMPLE)).thenReturn(resultNoErrors);\n+    when(engine.analyze(DOCUMENT_WITH_ERRORS_URI, INCORRECT_TEXT_EXAMPLE))\n+        .thenReturn(resultWithErrors);\n \n     MyTextDocumentService service = verifyServiceStart(communications, engine, broker);\n \n-    verifyDidOpen(\n-        communications, engine, diagnosticsNoErrors, service, TEXT_EXAMPLE, correctDocumentUri);\n+    verifyDidOpen(communications, engine, diagnosticsNoErrors, service, TEXT_EXAMPLE, DOCUMENT_URI);\n     verifyDidOpen(\n         communications,\n         engine,\n         diagnosticsWithErrors,\n         service,\n         INCORRECT_TEXT_EXAMPLE,\n-        incorrectDocumentUri);\n+        DOCUMENT_WITH_ERRORS_URI);\n \n     service.observerCallback(new RunAnalysisEvent());\n-    verifyCallback(communications, engine, diagnosticsNoErrors, TEXT_EXAMPLE, correctDocumentUri);\n+    verifyCallback(communications, engine, diagnosticsNoErrors, TEXT_EXAMPLE, DOCUMENT_URI);\n     verifyCallback(\n         communications,\n         engine,\n         diagnosticsWithErrors,\n         INCORRECT_TEXT_EXAMPLE,\n-        incorrectDocumentUri);\n+        DOCUMENT_WITH_ERRORS_URI);\n   }\n \n   private List<Diagnostic> createDefaultDiagnostics() {\n"}}, {"oid": "63a3b3a0513264590dccfd18b6cc4db4c9067534", "url": "https://github.com/eclipse/che-che4z-lsp-for-cobol/commit/63a3b3a0513264590dccfd18b6cc4db4c9067534", "message": "Change the test document URI to make tests more descriptive #141", "committedDate": "2020-01-29T12:43:13Z", "type": "commit"}]}