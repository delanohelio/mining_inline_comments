{"pr_number": 2202, "pr_title": "Only log warning when user is missing in VCS", "pr_createdAt": "2020-10-14T18:22:02Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2202", "timeline": [{"oid": "5f21e2da6f08414a838257f32aa737664a9f3999", "url": "https://github.com/ls1intum/Artemis/commit/5f21e2da6f08414a838257f32aa737664a9f3999", "message": "Only log warning when user is missing in VCS\n\nFixes #2201", "committedDate": "2020-10-14T18:20:03Z", "type": "commit"}, {"oid": "df2a5dad84bb404d16505475de87e3ec6597299c", "url": "https://github.com/ls1intum/Artemis/commit/df2a5dad84bb404d16505475de87e3ec6597299c", "message": "Add integration test", "committedDate": "2020-10-19T22:04:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MDE2MA==", "url": "https://github.com/ls1intum/Artemis/pull/2202#discussion_r508140160", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.warn(\"Cannot delete user in GitLab. User does not exist! %s\".formatted(login));\n          \n          \n            \n                        log.warn(\"Cannot delete user in GitLab. User does not exist! {}\", login);\n          \n      \n    \n    \n  \n\nI don't know why it wasn't like that before. (This is the standard logging string format for SLF4J)", "author": "MaisiKoleni", "createdAt": "2020-10-20T00:37:26Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java", "diffHunk": "@@ -246,8 +246,8 @@ public void deleteUser(String login) {\n             final var userId = getUserId(login);\n             gitlab.getUserApi().deleteUser(userId, true);\n         }\n-        catch (NullPointerException e) {\n-            log.warn(\"Cannot delete user in GitLab. User does not exist! \" + login);\n+        catch (GitLabUserDoesNotExistException e) {\n+            log.warn(\"Cannot delete user in GitLab. User does not exist! %s\".formatted(login));", "originalCommit": "df2a5dad84bb404d16505475de87e3ec6597299c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c4219f49718c7532f67ddee1a5e6071559fcb7e", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java b/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java\nindex b4c0ddf3c4..b1477a48c2 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java\n\n@@ -247,7 +247,7 @@ public class GitLabUserManagementService implements VcsUserManagementService {\n             gitlab.getUserApi().deleteUser(userId, true);\n         }\n         catch (GitLabUserDoesNotExistException e) {\n-            log.warn(\"Cannot delete user in GitLab. User does not exist! %s\".formatted(login));\n+            log.warn(\"Cannot delete user ''{}'' in GitLab. User does not exist! \", login);\n         }\n         catch (GitLabApiException e) {\n             throw new GitLabException(String.format(\"Cannot delete user %s from GitLab!\", login), e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0MzEyMg==", "url": "https://github.com/ls1intum/Artemis/pull/2202#discussion_r508143122", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @AfterEach\n          \n          \n            \n                public void tearDown() {\n          \n          \n            \n                    database.resetDatabase();\n          \n          \n            \n                    gitlabRequestMockProvider.reset();\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @BeforeEach\n          \n          \n            \n                public void setUp() {\n          \n          \n            \n                    gitlabRequestMockProvider.enableMockingOfRequests();\n          \n          \n            \n                }\n          \n          \n            \n                @BeforeEach\n          \n          \n            \n                public void setUp() {\n          \n          \n            \n                    gitlabRequestMockProvider.enableMockingOfRequests();\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @AfterEach\n          \n          \n            \n                public void tearDown() {\n          \n          \n            \n                    database.resetDatabase();\n          \n          \n            \n                    gitlabRequestMockProvider.reset();\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nI am not sure here, this might be highly opinionated, but I think swapping @BeforeEach and @AfterEach here would make the code quicker to read.", "author": "MaisiKoleni", "createdAt": "2020-10-20T00:47:16Z", "path": "src/test/java/de/tum/in/www1/artemis/AccountResourceWithGitLabIntegrationTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+\n+import de.tum.in.www1.artemis.connector.gitlab.GitlabRequestMockProvider;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.ModelFactory;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+import de.tum.in.www1.artemis.web.rest.vm.ManagedUserVM;\n+\n+public class AccountResourceWithGitLabIntegrationTest extends AbstractSpringIntegrationJenkinsGitlabTest {\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    UserRepository userRepo;\n+\n+    @Autowired\n+    UserService userService;\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    private GitlabRequestMockProvider gitlabRequestMockProvider;\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+        gitlabRequestMockProvider.reset();\n+    }\n+\n+    @BeforeEach\n+    public void setUp() {\n+        gitlabRequestMockProvider.enableMockingOfRequests();\n+    }", "originalCommit": "df2a5dad84bb404d16505475de87e3ec6597299c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c4219f49718c7532f67ddee1a5e6071559fcb7e", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/AccountResourceWithGitLabIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/AccountResourceWithGitLabIntegrationTest.java\nindex 678c89e3d3..816d2c76f0 100644\n--- a/src/test/java/de/tum/in/www1/artemis/AccountResourceWithGitLabIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/AccountResourceWithGitLabIntegrationTest.java\n\n@@ -36,19 +36,24 @@ public class AccountResourceWithGitLabIntegrationTest extends AbstractSpringInte\n     @Autowired\n     private GitlabRequestMockProvider gitlabRequestMockProvider;\n \n+    @BeforeEach\n+    public void setUp() {\n+        gitlabRequestMockProvider.enableMockingOfRequests();\n+    }\n+\n     @AfterEach\n     public void tearDown() {\n         database.resetDatabase();\n         gitlabRequestMockProvider.reset();\n     }\n \n-    @BeforeEach\n-    public void setUp() {\n-        gitlabRequestMockProvider.enableMockingOfRequests();\n-    }\n-\n+    /**\n+     * Tests the registration of a user when an old unactivated User existed.\n+     * Also tries to verify that the inability to delete such user in GitLab does not hinder the operation.\n+     * @throws Exception on unknown failure\n+     */\n     @Test\n-    public void testUnactivatedUserIsDeletedCorrectly() throws Exception {\n+    public void testUnactivatedUserIsDeletedDespiteUnableToDeleteInGitlab() throws Exception {\n         // create unactivated user in repo\n         String testActivationKey = \"testActivationKey\";\n         User user = ModelFactory.generateActivatedUser(\"ab123cd\");\n"}}, {"oid": "4c4219f49718c7532f67ddee1a5e6071559fcb7e", "url": "https://github.com/ls1intum/Artemis/commit/4c4219f49718c7532f67ddee1a5e6071559fcb7e", "message": "Address review comments and add second test", "committedDate": "2020-10-20T07:51:56Z", "type": "commit"}, {"oid": "26144ea8ae686feef9abbd5574196cb23fd759c4", "url": "https://github.com/ls1intum/Artemis/commit/26144ea8ae686feef9abbd5574196cb23fd759c4", "message": "Address review comments and add second test", "committedDate": "2020-10-20T07:59:52Z", "type": "commit"}, {"oid": "8bd3f68bcacdfb1979fa3df99f2994d646be52b8", "url": "https://github.com/ls1intum/Artemis/commit/8bd3f68bcacdfb1979fa3df99f2994d646be52b8", "message": "Merge branch 'develop' into bugfix/register/#2201-user-deltion-also-if-not-in-vcs", "committedDate": "2020-10-20T11:28:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MzU1Ng==", "url": "https://github.com/ls1intum/Artemis/pull/2202#discussion_r508673556", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.warn(\"Cannot delete user ''{}'' in GitLab. User does not exist! \", login);\n          \n          \n            \n                        log.warn(\"Cannot delete user ''{}'' in GitLab. User does not exist!\", login);", "author": "MaisiKoleni", "createdAt": "2020-10-20T16:30:43Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java", "diffHunk": "@@ -246,8 +246,8 @@ public void deleteUser(String login) {\n             final var userId = getUserId(login);\n             gitlab.getUserApi().deleteUser(userId, true);\n         }\n-        catch (NullPointerException e) {\n-            log.warn(\"Cannot delete user in GitLab. User does not exist! \" + login);\n+        catch (GitLabUserDoesNotExistException e) {\n+            log.warn(\"Cannot delete user ''{}'' in GitLab. User does not exist! \", login);", "originalCommit": "8bd3f68bcacdfb1979fa3df99f2994d646be52b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d234a639de671faa26bdcecf93b924cfe4168e", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java b/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java\nindex b1477a48c2..ec589e9cc4 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabUserManagementService.java\n\n@@ -247,7 +247,7 @@ public class GitLabUserManagementService implements VcsUserManagementService {\n             gitlab.getUserApi().deleteUser(userId, true);\n         }\n         catch (GitLabUserDoesNotExistException e) {\n-            log.warn(\"Cannot delete user ''{}'' in GitLab. User does not exist! \", login);\n+            log.warn(\"Cannot delete user ''{}'' in GitLab. User does not exist!\", login);\n         }\n         catch (GitLabApiException e) {\n             throw new GitLabException(String.format(\"Cannot delete user %s from GitLab!\", login), e);\n"}}, {"oid": "45d234a639de671faa26bdcecf93b924cfe4168e", "url": "https://github.com/ls1intum/Artemis/commit/45d234a639de671faa26bdcecf93b924cfe4168e", "message": "Remove space", "committedDate": "2020-10-20T21:40:35Z", "type": "commit"}]}