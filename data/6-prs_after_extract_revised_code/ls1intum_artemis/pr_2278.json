{"pr_number": 2278, "pr_title": "Feature: Provide multiple templates for a programming language", "pr_createdAt": "2020-10-26T16:09:30Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2278", "timeline": [{"oid": "509c49fbce484972555649274d0ddcbbd651d22e", "url": "https://github.com/ls1intum/Artemis/commit/509c49fbce484972555649274d0ddcbbd651d22e", "message": "Add support for multiple templates.", "committedDate": "2020-10-26T13:18:15Z", "type": "commit"}, {"oid": "59875cb9ddead8d6b44741d3c297d0c855f6b53a", "url": "https://github.com/ls1intum/Artemis/commit/59875cb9ddead8d6b44741d3c297d0c855f6b53a", "message": "Fix setup process.", "committedDate": "2020-10-26T13:43:40Z", "type": "commit"}, {"oid": "f6298bf9cf63fa57cbf2a7e19e7a073a1961cb0b", "url": "https://github.com/ls1intum/Artemis/commit/f6298bf9cf63fa57cbf2a7e19e7a073a1961cb0b", "message": "Add maven template.", "committedDate": "2020-10-26T15:33:49Z", "type": "commit"}, {"oid": "fee6b62ec0e358a32965c8554e7a78f5798a2a08", "url": "https://github.com/ls1intum/Artemis/commit/fee6b62ec0e358a32965c8554e7a78f5798a2a08", "message": "Fix some tests.", "committedDate": "2020-10-26T16:00:15Z", "type": "commit"}, {"oid": "14058307bbf31263ff0f3c75a4a41545de3bff82", "url": "https://github.com/ls1intum/Artemis/commit/14058307bbf31263ff0f3c75a4a41545de3bff82", "message": "Merge branch 'develop' into feature/programming-exercises/multiple-templates", "committedDate": "2020-10-26T16:11:15Z", "type": "commit"}, {"oid": "4383f170f51f80e8b64ad043c0880f1ec03202d3", "url": "https://github.com/ls1intum/Artemis/commit/4383f170f51f80e8b64ad043c0880f1ec03202d3", "message": "Adapt warning message.", "committedDate": "2020-10-26T16:24:44Z", "type": "commit"}, {"oid": "6b797a4a86f31b7d9ebc23d7c3c9d1727013d0d7", "url": "https://github.com/ls1intum/Artemis/commit/6b797a4a86f31b7d9ebc23d7c3c9d1727013d0d7", "message": "Add missing JavaDoc.", "committedDate": "2020-10-26T16:28:32Z", "type": "commit"}, {"oid": "fa1d2af89dcdf7c0fa10e46ed8cbad202a71314e", "url": "https://github.com/ls1intum/Artemis/commit/fa1d2af89dcdf7c0fa10e46ed8cbad202a71314e", "message": "Fix client tests.", "committedDate": "2020-10-26T16:36:34Z", "type": "commit"}, {"oid": "dcf43ace9a32d191cfebba341569f38c3facefcf", "url": "https://github.com/ls1intum/Artemis/commit/dcf43ace9a32d191cfebba341569f38c3facefcf", "message": "Rename test method.", "committedDate": "2020-10-26T16:42:41Z", "type": "commit"}, {"oid": "3e19581b5f32b2b244a4d147bd1cc67403482cfa", "url": "https://github.com/ls1intum/Artemis/commit/3e19581b5f32b2b244a4d147bd1cc67403482cfa", "message": "Add missing imort.", "committedDate": "2020-10-26T17:00:46Z", "type": "commit"}, {"oid": "602e8ed9740904db94b7313bdeda7807985ac773", "url": "https://github.com/ls1intum/Artemis/commit/602e8ed9740904db94b7313bdeda7807985ac773", "message": "Change order of eclipse and maven.", "committedDate": "2020-10-26T17:04:37Z", "type": "commit"}, {"oid": "13d111323f8826fca55f9dfd77e1b7646b251a97", "url": "https://github.com/ls1intum/Artemis/commit/13d111323f8826fca55f9dfd77e1b7646b251a97", "message": "Remove duplicated classes.", "committedDate": "2020-10-27T19:56:24Z", "type": "commit"}, {"oid": "8670049a543118fa980181db9008770c17307fc4", "url": "https://github.com/ls1intum/Artemis/commit/8670049a543118fa980181db9008770c17307fc4", "message": "Merge branch 'develop' into feature/programming-exercises/multiple-templates", "committedDate": "2020-10-28T12:06:27Z", "type": "commit"}, {"oid": "0493e1b0a79ff3e6b339c4a6578affb6e53770a5", "url": "https://github.com/ls1intum/Artemis/commit/0493e1b0a79ff3e6b339c4a6578affb6e53770a5", "message": "Add comments.", "committedDate": "2020-10-28T17:27:13Z", "type": "commit"}, {"oid": "13f1ed4165185d5feb706a5b5dad6d4ab32fa23d", "url": "https://github.com/ls1intum/Artemis/commit/13f1ed4165185d5feb706a5b5dad6d4ab32fa23d", "message": "Merge branch 'feature/programming-exercises/multiple-templates' of github.com:ls1intum/ArTEMiS into feature/programming-exercises/multiple-templates", "committedDate": "2020-10-28T17:28:21Z", "type": "commit"}, {"oid": "16fcc0fb8f0d4b1b393c98be161780869e8cb58d", "url": "https://github.com/ls1intum/Artemis/commit/16fcc0fb8f0d4b1b393c98be161780869e8cb58d", "message": "Remove exception.", "committedDate": "2020-10-28T17:34:46Z", "type": "commit"}, {"oid": "07e347486f69851d6d916f827c5f014ad6867c43", "url": "https://github.com/ls1intum/Artemis/commit/07e347486f69851d6d916f827c5f014ad6867c43", "message": "Adjust formatting of pom.xml in maven template", "committedDate": "2020-10-29T14:29:42Z", "type": "commit"}, {"oid": "73707923f568ca526bd5348f1f41da35b8166a6c", "url": "https://github.com/ls1intum/Artemis/commit/73707923f568ca526bd5348f1f41da35b8166a6c", "message": "Fix indentation.", "committedDate": "2020-10-29T14:32:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzA0Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2278#discussion_r514307042", "bodyText": "Codacy found an issue: Avoid unused private methods such as 'languageTypeBuilder()'.", "author": "artemis-bot", "createdAt": "2020-10-29T14:34:57Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -115,22 +124,45 @@ public void tearDown() throws IOException {\n         solutionRepo.resetLocalRepo();\n     }\n \n+    /**\n+     * Build a combination of valid programming languages and project types.\n+     * Programming languages without project type only have one template, set null to use this one.\n+     * Programming languages with project type should be executed once per project type.\n+     * @return valid combinations of programming languages and project types.\n+     */\n+    private Stream<Arguments> languageTypeBuilder() {", "originalCommit": "07e347486f69851d6d916f827c5f014ad6867c43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzA1NA==", "url": "https://github.com/ls1intum/Artemis/pull/2278#discussion_r514307054", "bodyText": "Codacy found an issue: The instance method name 'test_template_solution' doesn't match '[a-z][a-zA-Z0-9]*'", "author": "artemis-bot", "createdAt": "2020-10-29T14:34:58Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -115,22 +124,45 @@ public void tearDown() throws IOException {\n         solutionRepo.resetLocalRepo();\n     }\n \n+    /**\n+     * Build a combination of valid programming languages and project types.\n+     * Programming languages without project type only have one template, set null to use this one.\n+     * Programming languages with project type should be executed once per project type.\n+     * @return valid combinations of programming languages and project types.\n+     */\n+    private Stream<Arguments> languageTypeBuilder() {\n+        Stream.Builder<Arguments> argumentBuilder = Stream.builder();\n+        // Add programming exercises that should be tested with Maven here\n+        List<ProgrammingLanguage> programmingLanguages = List.of(ProgrammingLanguage.JAVA, ProgrammingLanguage.KOTLIN);\n+        for (ProgrammingLanguage language : programmingLanguages) {\n+            List<ProjectType> projectTypes = programmingLanguageFeatureService.getProgrammingLanguageFeatures(language).getProjectTypes();\n+            if (projectTypes.isEmpty()) {\n+                argumentBuilder.add(Arguments.of(language, null));\n+            }\n+            for (ProjectType projectType : projectTypes) {\n+                argumentBuilder.add(Arguments.of(language, projectType));\n+            }\n+        }\n+        return argumentBuilder.build();\n+    }\n+\n     @ParameterizedTest\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    @EnumSource(value = ProgrammingLanguage.class, names = { \"KOTLIN\", \"JAVA\" }, mode = EnumSource.Mode.INCLUDE)\n-    public void runTemplateTests_exercise(ProgrammingLanguage language) throws Exception {\n-        runTests(language, exerciseRepo, TestResult.FAILED);\n+    @MethodSource(\"languageTypeBuilder\")\n+    public void test_template_exercise(ProgrammingLanguage language, ProjectType projectType) throws Exception {\n+        runTests(language, projectType, exerciseRepo, TestResult.FAILED);\n     }\n \n     @ParameterizedTest\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    @EnumSource(value = ProgrammingLanguage.class, names = { \"KOTLIN\", \"JAVA\" }, mode = EnumSource.Mode.INCLUDE)\n-    public void runTemplateTests_solution(ProgrammingLanguage language) throws Exception {\n-        runTests(language, solutionRepo, TestResult.SUCCESSFUL);\n+    @MethodSource(\"languageTypeBuilder\")\n+    public void test_template_solution(ProgrammingLanguage language, ProjectType projectType) throws Exception {", "originalCommit": "07e347486f69851d6d916f827c5f014ad6867c43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzA3MA==", "url": "https://github.com/ls1intum/Artemis/pull/2278#discussion_r514307070", "bodyText": "Codacy found an issue: The instance method name 'createProgrammingExercise_programmingLanguage_validExercise_created' doesn't match '[a-z][a-zA-Z0-9]*'", "author": "artemis-bot", "createdAt": "2020-10-29T14:34:59Z", "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -212,8 +213,10 @@ public void createProgrammingExercise_mode_validExercise_created(ExerciseMode mo\n     }\n \n     // TEST\n-    public void createProgrammingExercise_programmingLanguage_validExercise_created(ProgrammingLanguage language) throws Exception {\n+    public void createProgrammingExercise_programmingLanguage_validExercise_created(ProgrammingLanguage language, ProgrammingLanguageFeature programmingLanguageFeature)", "originalCommit": "07e347486f69851d6d916f827c5f014ad6867c43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzA4Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2278#discussion_r514307087", "bodyText": "Codacy found an issue: The instance method name 'test_template_exercise' doesn't match '[a-z][a-zA-Z0-9]*'", "author": "artemis-bot", "createdAt": "2020-10-29T14:35:00Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -115,22 +124,45 @@ public void tearDown() throws IOException {\n         solutionRepo.resetLocalRepo();\n     }\n \n+    /**\n+     * Build a combination of valid programming languages and project types.\n+     * Programming languages without project type only have one template, set null to use this one.\n+     * Programming languages with project type should be executed once per project type.\n+     * @return valid combinations of programming languages and project types.\n+     */\n+    private Stream<Arguments> languageTypeBuilder() {\n+        Stream.Builder<Arguments> argumentBuilder = Stream.builder();\n+        // Add programming exercises that should be tested with Maven here\n+        List<ProgrammingLanguage> programmingLanguages = List.of(ProgrammingLanguage.JAVA, ProgrammingLanguage.KOTLIN);\n+        for (ProgrammingLanguage language : programmingLanguages) {\n+            List<ProjectType> projectTypes = programmingLanguageFeatureService.getProgrammingLanguageFeatures(language).getProjectTypes();\n+            if (projectTypes.isEmpty()) {\n+                argumentBuilder.add(Arguments.of(language, null));\n+            }\n+            for (ProjectType projectType : projectTypes) {\n+                argumentBuilder.add(Arguments.of(language, projectType));\n+            }\n+        }\n+        return argumentBuilder.build();\n+    }\n+\n     @ParameterizedTest\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    @EnumSource(value = ProgrammingLanguage.class, names = { \"KOTLIN\", \"JAVA\" }, mode = EnumSource.Mode.INCLUDE)\n-    public void runTemplateTests_exercise(ProgrammingLanguage language) throws Exception {\n-        runTests(language, exerciseRepo, TestResult.FAILED);\n+    @MethodSource(\"languageTypeBuilder\")\n+    public void test_template_exercise(ProgrammingLanguage language, ProjectType projectType) throws Exception {", "originalCommit": "07e347486f69851d6d916f827c5f014ad6867c43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzA5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2278#discussion_r514307097", "bodyText": "Codacy found an issue: Avoid really long methods.", "author": "artemis-bot", "createdAt": "2020-10-29T14:35:00Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseService.java", "diffHunk": "@@ -320,42 +398,86 @@ private void setupTemplateAndPush(Repository repository, Resource[] resources, S\n      * @param user the user who has initiated the generation of the programming exercise\n      * @throws Exception If anything goes wrong\n      */\n-    private void setupTestTemplateAndPush(Repository repository, Resource[] resources, String prefix, String templateName, ProgrammingExercise programmingExercise, User user)\n-            throws Exception {\n+    private void setupTestTemplateAndPush(Repository repository, Resource[] resources, String prefix, Resource[] projectTypeResources, String projectTypePrefix,", "originalCommit": "07e347486f69851d6d916f827c5f014ad6867c43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzExMg==", "url": "https://github.com/ls1intum/Artemis/pull/2278#discussion_r514307112", "bodyText": "Codacy found an issue: Assigning an Object to null is a code smell.  Consider refactoring.", "author": "artemis-bot", "createdAt": "2020-10-29T14:35:01Z", "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -212,8 +213,10 @@ public void createProgrammingExercise_mode_validExercise_created(ExerciseMode mo\n     }\n \n     // TEST\n-    public void createProgrammingExercise_programmingLanguage_validExercise_created(ProgrammingLanguage language) throws Exception {\n+    public void createProgrammingExercise_programmingLanguage_validExercise_created(ProgrammingLanguage language, ProgrammingLanguageFeature programmingLanguageFeature)\n+            throws Exception {\n         exercise.setProgrammingLanguage(language);\n+        exercise.setProjectType(programmingLanguageFeature.getProjectTypes().size() > 0 ? programmingLanguageFeature.getProjectTypes().get(0) : null);", "originalCommit": "07e347486f69851d6d916f827c5f014ad6867c43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}