{"pr_number": 2107, "pr_title": "[Feature] Grading with Static Code Analysis", "pr_createdAt": "2020-09-16T20:48:17Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2107", "timeline": [{"oid": "15799da674a96cad475397a9c2a176151c9a5735", "url": "https://github.com/ls1intum/Artemis/commit/15799da674a96cad475397a9c2a176151c9a5735", "message": "add server test case for score calculation", "committedDate": "2020-10-03T15:27:53Z", "type": "commit"}, {"oid": "838a8c85816f4d94632dca2af973691ad3232b91", "url": "https://github.com/ls1intum/Artemis/commit/838a8c85816f4d94632dca2af973691ad3232b91", "message": "fix category state", "committedDate": "2020-10-03T15:39:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjAyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499182025", "bodyText": "This JavaDoc should be stored in the corresponding interface.", "author": "krusche", "createdAt": "2020-10-03T21:08:13Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java", "diffHunk": "@@ -833,6 +833,13 @@ private void addFeedbackToResult(Result result, List<BambooBuildResultNotificati\n         }\n     }\n \n+    /**", "originalCommit": "838a8c85816f4d94632dca2af973691ad3232b91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5MzQ4OA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499193488", "bodyText": "This is now removed, since it is already documented in the superclass.", "author": "schultek", "createdAt": "2020-10-04T00:33:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjAyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9dbeb02784e25a11bc41cf27272be24db21dbd35", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java b/src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java\nindex ea299af39..fa55d4114 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java\n\n@@ -833,13 +833,6 @@ public class BambooService implements ContinuousIntegrationService {\n         }\n     }\n \n-    /**\n-     * Queries Bamboo to find out if the project already exists using the project key and the project name\n-     *\n-     * @param projectKey to check if a project with this unique key already exists.\n-     * @param projectName to check if a project with the same name already exists.\n-     * @return true if the project is already existing on Bamboo.\n-     */\n     @Override\n     public String checkIfProjectExists(String projectKey, String projectName) {\n         HttpHeaders headers = HeaderUtil.createAuthorization(bambooUser, bambooPassword);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjEwMA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499182100", "bodyText": "this is unreadable and not understandable. Please do not abuse the stream API and simplify this code so that it is easier to understand!", "author": "krusche", "createdAt": "2020-10-03T21:09:20Z", "path": "src/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java", "diffHunk": "@@ -98,6 +104,26 @@ public void createDefaultCategories(ProgrammingExercise programmingExercise) {\n             originalCategory.setState(matchingCategory.getState());\n         }\n         staticCodeAnalysisCategoryRepository.saveAll(originalCategories);\n+\n+        // At least one category was updated. We use this flag to inform the instructor about outdated student results.\n+        programmingSubmissionService.setTestCasesChangedAndTriggerTestCaseUpdate(exerciseId);\n+\n         return originalCategories;\n     }\n+\n+    /**\n+     * Links the categories of an exercise with the default category mappings.\n+     * @param programmingExercise The programming exercise\n+     * @return A list of pairs of categories and their mappings.\n+     */\n+    public List<ImmutablePair<StaticCodeAnalysisCategory, List<StaticCodeAnalysisDefaultCategory.CategoryMapping>>> getCategoriesWithMappingForExercise(\n+            ProgrammingExercise programmingExercise) {\n+        var categories = findByExerciseId(programmingExercise.getId());\n+        var defaultCategories = staticCodeAnalysisDefaultConfigurations.get(programmingExercise.getProgrammingLanguage());\n+\n+        return categories.stream()", "originalCommit": "838a8c85816f4d94632dca2af973691ad3232b91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5MzQ2OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499193469", "bodyText": "I improved the code readability here.", "author": "schultek", "createdAt": "2020-10-04T00:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjEwMA=="}], "type": "inlineReview", "revised_code": {"commit": "9dbeb02784e25a11bc41cf27272be24db21dbd35", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java b/src/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java\nindex 54a921c7a..64a72ee6e 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java\n\n@@ -121,9 +120,16 @@ public class StaticCodeAnalysisService {\n         var categories = findByExerciseId(programmingExercise.getId());\n         var defaultCategories = staticCodeAnalysisDefaultConfigurations.get(programmingExercise.getProgrammingLanguage());\n \n-        return categories.stream()\n-                .map(category -> defaultCategories.stream().filter(defaultCategory -> defaultCategory.getName().equals(category.getName())).findFirst()\n-                        .map(StaticCodeAnalysisDefaultCategory::getCategoryMappings).map(mappings -> new ImmutablePair<>(category, mappings)))\n-                .filter(Optional::isPresent).map(Optional::get).collect(Collectors.toList());\n+        List<ImmutablePair<StaticCodeAnalysisCategory, List<StaticCodeAnalysisDefaultCategory.CategoryMapping>>> categoryPairsWithMapping = new ArrayList<>();\n+\n+        for (var category : categories) {\n+            var defaultCategoryMatch = defaultCategories.stream().filter(defaultCategory -> defaultCategory.getName().equals(category.getName())).findFirst();\n+            if (defaultCategoryMatch.isPresent()) {\n+                var categoryMappings = defaultCategoryMatch.get().getCategoryMappings();\n+                categoryPairsWithMapping.add(new ImmutablePair<>(category, categoryMappings));\n+            }\n+        }\n+\n+        return categoryPairsWithMapping;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjE0MA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499182140", "bodyText": "please add some inline comments what you are doing here! Otherwise the code is hard to understand!", "author": "krusche", "createdAt": "2020-10-03T21:09:57Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -318,6 +369,35 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n                 result.getFeedbacks().stream().filter(fb -> fb.getText().equals(test.getTestName())).findFirst().ifPresent(feedback -> feedback.setCredits(testPointsWithBonus));\n                 return testPointsWithBonus;\n             }).sum();\n+\n+            if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {", "originalCommit": "838a8c85816f4d94632dca2af973691ad3232b91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjE5NA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499182194", "bodyText": "I would also suggest to extract two additional methods here.\nOne takes case about the tests, the other one about static code analysis.\nThe method updateScore takes care about invoking both (the 2nd only if static code analysis is enabled)", "author": "krusche", "createdAt": "2020-10-03T21:11:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5MzQzMg==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499193432", "bodyText": "I improved the readability and separated the penalty calculation into a new function.", "author": "schultek", "createdAt": "2020-10-04T00:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "9dbeb02784e25a11bc41cf27272be24db21dbd35", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex 4eaa8a4b2..a3b5299db 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -370,39 +380,21 @@ public class ProgrammingExerciseGradingService {\n                 return testPointsWithBonus;\n             }).sum();\n \n+            // if static code analysis is enabled, reduce the points by the calculated penalty\n             if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {\n-                double codeAnalysisPenaltyPoints = staticCodeAnalysisService.findByExerciseId(programmingExercise.getId()).stream()\n-                        .filter(staticCodeAnalysisCategory -> staticCodeAnalysisCategory.getState().equals(CategoryState.GRADED)).mapToDouble(staticCodeAnalysisCategory -> {\n-                            List<Feedback> categoryFeedback = staticCodeAnalysisFeedback.stream().filter(feedback -> feedback.getText()\n-                                    .substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length()).equals(staticCodeAnalysisCategory.getName()))\n-                                    .collect(Collectors.toList());\n-                            double penaltySum = categoryFeedback.size() * staticCodeAnalysisCategory.getPenalty();\n-                            if (penaltySum > staticCodeAnalysisCategory.getMaxPenalty()) {\n-                                penaltySum = staticCodeAnalysisCategory.getMaxPenalty();\n-                            }\n-                            double perFeedbackPenalty = penaltySum / categoryFeedback.size();\n-                            // update credits of feedbacks in category\n-                            categoryFeedback.forEach(feedback -> feedback.setCredits(-perFeedbackPenalty));\n-                            return penaltySum;\n-                        }).sum();\n-\n-                // maxStaticCodeAnalysisPenalty is in percent\n-                final var maxExercisePenaltyPoints = (double) programmingExercise.getMaxStaticCodeAnalysisPenalty() / 100.0 * programmingExercise.getMaxScore();\n-                if (codeAnalysisPenaltyPoints > maxExercisePenaltyPoints) {\n-                    codeAnalysisPenaltyPoints = maxExercisePenaltyPoints;\n-                }\n+                successfulTestPoints -= calculateStaticCodeAnalysisPenalty(staticCodeAnalysisFeedback, programmingExercise);\n \n-                successfulTestPoints = successfulTestPoints - codeAnalysisPenaltyPoints;\n                 if (successfulTestPoints < 0) {\n                     successfulTestPoints = 0;\n                 }\n             }\n \n-            double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n             // The points are capped by the maximum achievable points\n+            double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n             if (successfulTestPoints > maxPoints) {\n                 successfulTestPoints = maxPoints;\n             }\n+\n             // The score is calculated as a percentage of the maximum points\n             long score = (long) (successfulTestPoints / programmingExercise.getMaxScore() * 100.0);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjIyNw==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499182227", "bodyText": "please add more inline comments", "author": "krusche", "createdAt": "2020-10-03T21:11:34Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -297,6 +310,43 @@ private void removeFeedbacksForAfterDueDateTests(Result result, Set<ProgrammingE\n             result.setHasFeedback(false);\n     }\n \n+    /**\n+     * Sets the category for each feedback and removes feedback with no or an inactive category\n+     * @param result of the build run\n+     * @param staticCodeAnalysisFeedback List of feedback objects\n+     * @param programmingExercise The current exercise\n+     * @return The filtered list of feedback objects\n+     */\n+    private List<Feedback> removeInvisibleScaFeedback(Result result, List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+        var categories = staticCodeAnalysisService.getCategoriesWithMappingForExercise(programmingExercise);\n+\n+        return staticCodeAnalysisFeedback.stream().filter(feedback -> {", "originalCommit": "838a8c85816f4d94632dca2af973691ad3232b91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjI4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499182289", "bodyText": "It's unclear why you need an ObjectMapper here", "author": "krusche", "createdAt": "2020-10-03T21:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjIyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5MzQ1NA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499193454", "bodyText": "Added comments and improved the code readability.", "author": "schultek", "createdAt": "2020-10-04T00:32:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjIyNw=="}], "type": "inlineReview", "revised_code": {"commit": "9dbeb02784e25a11bc41cf27272be24db21dbd35", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex 4eaa8a4b2..a3b5299db 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -318,31 +317,41 @@ public class ProgrammingExerciseGradingService {\n      * @return The filtered list of feedback objects\n      */\n     private List<Feedback> removeInvisibleScaFeedback(Result result, List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n-        var categories = staticCodeAnalysisService.getCategoriesWithMappingForExercise(programmingExercise);\n+        var categoryPairs = staticCodeAnalysisService.getCategoriesWithMappingForExercise(programmingExercise);\n \n         return staticCodeAnalysisFeedback.stream().filter(feedback -> {\n+            // ObjectMapper to extract the static code analysis issue from the feedback\n             ObjectMapper mapper = new ObjectMapper();\n-            Optional<StaticCodeAnalysisCategory> category;\n+            // the category for this feedback\n+            Optional<StaticCodeAnalysisCategory> category = Optional.empty();\n             try {\n+\n+                // extract the sca issue\n                 var issue = mapper.readValue(feedback.getDetailText(), StaticCodeAnalysisReportDTO.StaticCodeAnalysisIssue.class);\n \n-                category = categories.stream()\n-                        .filter(pair -> pair.right.stream()\n-                                .anyMatch(mapping -> mapping.getTool().name().equals(feedback.getReference()) && mapping.getCategory().equals(issue.getCategory())))\n-                        .map(ImmutablePair::getLeft).findFirst();\n+                // find the category for this issue\n+                for (var categoryPair : categoryPairs) {\n+                    var categoryMappings = categoryPair.right;\n+                    if (categoryMappings.stream()\n+                            .anyMatch(mapping -> mapping.getTool().name().equals(feedback.getReference()) && mapping.getCategory().equals(issue.getCategory()))) {\n+                        category = Optional.of(categoryPair.left);\n+                        break;\n+                    }\n+                }\n \n             }\n-            catch (JsonProcessingException e) {\n-                category = Optional.empty();\n+            catch (JsonProcessingException ignored) {\n             }\n \n             if (category.isEmpty() || category.get().getState().equals(CategoryState.INACTIVE)) {\n+                // remove feedback in no or inactive category\n                 result.removeFeedback(feedback);\n-                return false;\n+                return false; // filter this feedback\n             }\n             else {\n+                // add the category name to the feedback text\n                 feedback.setText(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER + category.get().getName());\n-                return true;\n+                return true; // keep this feedback\n             }\n         }).collect(Collectors.toList());\n     }\n"}}, {"oid": "9dbeb02784e25a11bc41cf27272be24db21dbd35", "url": "https://github.com/ls1intum/Artemis/commit/9dbeb02784e25a11bc41cf27272be24db21dbd35", "message": "improve code readability", "committedDate": "2020-10-04T00:31:01Z", "type": "commit"}, {"oid": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "url": "https://github.com/ls1intum/Artemis/commit/99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-10-04T00:34:02Z", "type": "commit"}, {"oid": "e3ee891e66aff739c7a15dab3b52348c9cf658d4", "url": "https://github.com/ls1intum/Artemis/commit/e3ee891e66aff739c7a15dab3b52348c9cf658d4", "message": "fix category state", "committedDate": "2020-10-05T18:41:56Z", "type": "commit"}, {"oid": "56ac76dad9939c094ec6aba02f9253862fddfcb1", "url": "https://github.com/ls1intum/Artemis/commit/56ac76dad9939c094ec6aba02f9253862fddfcb1", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-10-05T18:42:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0NzcyNg==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499847726", "bodyText": "If not graded, continue.", "author": "MaisiKoleni", "createdAt": "2020-10-05T20:17:56Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -333,6 +405,50 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n         }\n     }\n \n+    /**\n+     * Calculates the total penalty over all static code analysis issues\n+     * @param staticCodeAnalysisFeedback The list of static code analysis feedback\n+     * @param programmingExercise The current exercise\n+     * @return The sum of all penalties, capped at the maximum allowed penalty\n+     */\n+    private double calculateStaticCodeAnalysisPenalty(List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+\n+        double codeAnalysisPenaltyPoints = 0;\n+\n+        var gradedCategories = staticCodeAnalysisService.findByExerciseId(programmingExercise.getId()).stream()\n+                .filter(staticCodeAnalysisCategory -> staticCodeAnalysisCategory.getState().equals(CategoryState.GRADED)).collect(Collectors.toList());\n+\n+        for (var category : gradedCategories) {\n+", "originalCommit": "56ac76dad9939c094ec6aba02f9253862fddfcb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NTE5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499855197", "bodyText": "Done", "author": "schultek", "createdAt": "2020-10-05T20:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0NzcyNg=="}], "type": "inlineReview", "revised_code": {"commit": "5255317d0304b9733dbe6f8fca6cb8d2d73a71c2", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db..2c75cb08f 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -415,15 +415,17 @@ public class ProgrammingExerciseGradingService {\n \n         double codeAnalysisPenaltyPoints = 0;\n \n-        var gradedCategories = staticCodeAnalysisService.findByExerciseId(programmingExercise.getId()).stream()\n-                .filter(staticCodeAnalysisCategory -> staticCodeAnalysisCategory.getState().equals(CategoryState.GRADED)).collect(Collectors.toList());\n+        var feedbackByCategory = staticCodeAnalysisFeedback.stream()\n+                .collect(Collectors.groupingBy(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length())));\n \n-        for (var category : gradedCategories) {\n+        for (var category : staticCodeAnalysisService.findByExerciseId(programmingExercise.getId())) {\n+\n+            if (!category.getState().equals(CategoryState.GRADED)) {\n+                continue;\n+            }\n \n             // get all feedback in this category\n-            List<Feedback> categoryFeedback = staticCodeAnalysisFeedback.stream()\n-                    .filter(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length()).equals(category.getName()))\n-                    .collect(Collectors.toList());\n+            List<Feedback> categoryFeedback = feedbackByCategory.getOrDefault(category.getName(), List.of());\n \n             // calculate the sum of all per-feedback penalties\n             double categoryPenaltyPoints = categoryFeedback.size() * category.getPenalty();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0ODE1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499848153", "bodyText": "Consider grouping this first (Collectors.groupingBy)\nstaticCodeAnalysisFeedback.stream().collect(Collectors.groupingBy(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length())))", "author": "MaisiKoleni", "createdAt": "2020-10-05T20:18:47Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -333,6 +405,50 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n         }\n     }\n \n+    /**\n+     * Calculates the total penalty over all static code analysis issues\n+     * @param staticCodeAnalysisFeedback The list of static code analysis feedback\n+     * @param programmingExercise The current exercise\n+     * @return The sum of all penalties, capped at the maximum allowed penalty\n+     */\n+    private double calculateStaticCodeAnalysisPenalty(List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+\n+        double codeAnalysisPenaltyPoints = 0;\n+\n+        var gradedCategories = staticCodeAnalysisService.findByExerciseId(programmingExercise.getId()).stream()\n+                .filter(staticCodeAnalysisCategory -> staticCodeAnalysisCategory.getState().equals(CategoryState.GRADED)).collect(Collectors.toList());\n+\n+        for (var category : gradedCategories) {\n+\n+            // get all feedback in this category\n+            List<Feedback> categoryFeedback = staticCodeAnalysisFeedback.stream()\n+                    .filter(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length()).equals(category.getName()))\n+                    .collect(Collectors.toList());", "originalCommit": "56ac76dad9939c094ec6aba02f9253862fddfcb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NTIzMw==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499855233", "bodyText": "Done", "author": "schultek", "createdAt": "2020-10-05T20:32:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0ODE1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5255317d0304b9733dbe6f8fca6cb8d2d73a71c2", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db..2c75cb08f 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -415,15 +415,17 @@ public class ProgrammingExerciseGradingService {\n \n         double codeAnalysisPenaltyPoints = 0;\n \n-        var gradedCategories = staticCodeAnalysisService.findByExerciseId(programmingExercise.getId()).stream()\n-                .filter(staticCodeAnalysisCategory -> staticCodeAnalysisCategory.getState().equals(CategoryState.GRADED)).collect(Collectors.toList());\n+        var feedbackByCategory = staticCodeAnalysisFeedback.stream()\n+                .collect(Collectors.groupingBy(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length())));\n \n-        for (var category : gradedCategories) {\n+        for (var category : staticCodeAnalysisService.findByExerciseId(programmingExercise.getId())) {\n+\n+            if (!category.getState().equals(CategoryState.GRADED)) {\n+                continue;\n+            }\n \n             // get all feedback in this category\n-            List<Feedback> categoryFeedback = staticCodeAnalysisFeedback.stream()\n-                    .filter(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length()).equals(category.getName()))\n-                    .collect(Collectors.toList());\n+            List<Feedback> categoryFeedback = feedbackByCategory.getOrDefault(category.getName(), List.of());\n \n             // calculate the sum of all per-feedback penalties\n             double categoryPenaltyPoints = categoryFeedback.size() * category.getPenalty();\n"}}, {"oid": "5255317d0304b9733dbe6f8fca6cb8d2d73a71c2", "url": "https://github.com/ls1intum/Artemis/commit/5255317d0304b9733dbe6f8fca6cb8d2d73a71c2", "message": "apply code suggestions", "committedDate": "2020-10-05T20:31:24Z", "type": "commit"}, {"oid": "ab5357568611504c5c02e41b06c516328b640a6f", "url": "https://github.com/ls1intum/Artemis/commit/ab5357568611504c5c02e41b06c516328b640a6f", "message": "Merge branch 'feature/programming-exercise/sca-grading' of https://github.com/ls1intum/Artemis into feature/programming-exercise/sca-grading", "committedDate": "2020-10-05T20:31:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NTE5MA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499745190", "bodyText": "Should log something here.", "author": "kloessst", "createdAt": "2020-10-05T17:03:47Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -297,6 +309,53 @@ private void removeFeedbacksForAfterDueDateTests(Result result, Set<ProgrammingE\n             result.setHasFeedback(false);\n     }\n \n+    /**\n+     * Sets the category for each feedback and removes feedback with no or an inactive category\n+     * @param result of the build run\n+     * @param staticCodeAnalysisFeedback List of feedback objects\n+     * @param programmingExercise The current exercise\n+     * @return The filtered list of feedback objects\n+     */\n+    private List<Feedback> removeInvisibleScaFeedback(Result result, List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+        var categoryPairs = staticCodeAnalysisService.getCategoriesWithMappingForExercise(programmingExercise);\n+\n+        return staticCodeAnalysisFeedback.stream().filter(feedback -> {\n+            // ObjectMapper to extract the static code analysis issue from the feedback\n+            ObjectMapper mapper = new ObjectMapper();\n+            // the category for this feedback\n+            Optional<StaticCodeAnalysisCategory> category = Optional.empty();\n+            try {\n+\n+                // extract the sca issue\n+                var issue = mapper.readValue(feedback.getDetailText(), StaticCodeAnalysisReportDTO.StaticCodeAnalysisIssue.class);\n+\n+                // find the category for this issue\n+                for (var categoryPair : categoryPairs) {\n+                    var categoryMappings = categoryPair.right;\n+                    if (categoryMappings.stream()\n+                            .anyMatch(mapping -> mapping.getTool().name().equals(feedback.getReference()) && mapping.getCategory().equals(issue.getCategory()))) {\n+                        category = Optional.of(categoryPair.left);\n+                        break;\n+                    }\n+                }\n+\n+            }\n+            catch (JsonProcessingException ignored) {", "originalCommit": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db3..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -340,7 +340,8 @@ public class ProgrammingExerciseGradingService {\n                 }\n \n             }\n-            catch (JsonProcessingException ignored) {\n+            catch (JsonProcessingException exception) {\n+                log.debug(\"Error occurred parsing feedback \" + feedback + \" to static code analysis issue: \" + exception.getMessage());\n             }\n \n             if (category.isEmpty() || category.get().getState().equals(CategoryState.INACTIVE)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NTI0NA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499745244", "bodyText": "All feedback which is currently invisible will be removed and not saved in the database if I understand this right. This has the advantage that feedback doesn't need to be filtered when sending it to the client but also makes a proper re-evaluate impossible.", "author": "kloessst", "createdAt": "2020-10-05T17:03:52Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -297,6 +309,53 @@ private void removeFeedbacksForAfterDueDateTests(Result result, Set<ProgrammingE\n             result.setHasFeedback(false);\n     }\n \n+    /**\n+     * Sets the category for each feedback and removes feedback with no or an inactive category\n+     * @param result of the build run\n+     * @param staticCodeAnalysisFeedback List of feedback objects\n+     * @param programmingExercise The current exercise\n+     * @return The filtered list of feedback objects\n+     */\n+    private List<Feedback> removeInvisibleScaFeedback(Result result, List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+        var categoryPairs = staticCodeAnalysisService.getCategoriesWithMappingForExercise(programmingExercise);\n+\n+        return staticCodeAnalysisFeedback.stream().filter(feedback -> {\n+            // ObjectMapper to extract the static code analysis issue from the feedback\n+            ObjectMapper mapper = new ObjectMapper();\n+            // the category for this feedback\n+            Optional<StaticCodeAnalysisCategory> category = Optional.empty();\n+            try {\n+\n+                // extract the sca issue\n+                var issue = mapper.readValue(feedback.getDetailText(), StaticCodeAnalysisReportDTO.StaticCodeAnalysisIssue.class);\n+\n+                // find the category for this issue\n+                for (var categoryPair : categoryPairs) {\n+                    var categoryMappings = categoryPair.right;\n+                    if (categoryMappings.stream()\n+                            .anyMatch(mapping -> mapping.getTool().name().equals(feedback.getReference()) && mapping.getCategory().equals(issue.getCategory()))) {\n+                        category = Optional.of(categoryPair.left);\n+                        break;\n+                    }\n+                }\n+\n+            }\n+            catch (JsonProcessingException ignored) {\n+            }\n+\n+            if (category.isEmpty() || category.get().getState().equals(CategoryState.INACTIVE)) {\n+                // remove feedback in no or inactive category\n+                result.removeFeedback(feedback);", "originalCommit": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db3..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -340,7 +340,8 @@ public class ProgrammingExerciseGradingService {\n                 }\n \n             }\n-            catch (JsonProcessingException ignored) {\n+            catch (JsonProcessingException exception) {\n+                log.debug(\"Error occurred parsing feedback \" + feedback + \" to static code analysis issue: \" + exception.getMessage());\n             }\n \n             if (category.isEmpty() || category.get().getState().equals(CategoryState.INACTIVE)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NTQ3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499745472", "bodyText": "I think this information should be added when the feedback is generated.", "author": "kloessst", "createdAt": "2020-10-05T17:04:18Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -297,6 +309,53 @@ private void removeFeedbacksForAfterDueDateTests(Result result, Set<ProgrammingE\n             result.setHasFeedback(false);\n     }\n \n+    /**\n+     * Sets the category for each feedback and removes feedback with no or an inactive category\n+     * @param result of the build run\n+     * @param staticCodeAnalysisFeedback List of feedback objects\n+     * @param programmingExercise The current exercise\n+     * @return The filtered list of feedback objects\n+     */\n+    private List<Feedback> removeInvisibleScaFeedback(Result result, List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+        var categoryPairs = staticCodeAnalysisService.getCategoriesWithMappingForExercise(programmingExercise);\n+\n+        return staticCodeAnalysisFeedback.stream().filter(feedback -> {\n+            // ObjectMapper to extract the static code analysis issue from the feedback\n+            ObjectMapper mapper = new ObjectMapper();\n+            // the category for this feedback\n+            Optional<StaticCodeAnalysisCategory> category = Optional.empty();\n+            try {\n+\n+                // extract the sca issue\n+                var issue = mapper.readValue(feedback.getDetailText(), StaticCodeAnalysisReportDTO.StaticCodeAnalysisIssue.class);\n+\n+                // find the category for this issue\n+                for (var categoryPair : categoryPairs) {\n+                    var categoryMappings = categoryPair.right;\n+                    if (categoryMappings.stream()\n+                            .anyMatch(mapping -> mapping.getTool().name().equals(feedback.getReference()) && mapping.getCategory().equals(issue.getCategory()))) {\n+                        category = Optional.of(categoryPair.left);\n+                        break;\n+                    }\n+                }\n+\n+            }\n+            catch (JsonProcessingException ignored) {\n+            }\n+\n+            if (category.isEmpty() || category.get().getState().equals(CategoryState.INACTIVE)) {\n+                // remove feedback in no or inactive category\n+                result.removeFeedback(feedback);\n+                return false; // filter this feedback\n+            }\n+            else {\n+                // add the category name to the feedback text\n+                feedback.setText(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER + category.get().getName());", "originalCommit": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db3..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -340,7 +340,8 @@ public class ProgrammingExerciseGradingService {\n                 }\n \n             }\n-            catch (JsonProcessingException ignored) {\n+            catch (JsonProcessingException exception) {\n+                log.debug(\"Error occurred parsing feedback \" + feedback + \" to static code analysis issue: \" + exception.getMessage());\n             }\n \n             if (category.isEmpty() || category.get().getState().equals(CategoryState.INACTIVE)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0ODExMw==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499748113", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {\n          \n          \n            \n                        if (Boolean.TRUE.equals(programmingExercise.isStaticCodeAnalysisEnabled()) && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {", "author": "kloessst", "createdAt": "2020-10-05T17:09:19Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -318,11 +379,22 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n                 result.getFeedbacks().stream().filter(fb -> fb.getText().equals(test.getTestName())).findFirst().ifPresent(feedback -> feedback.setCredits(testPointsWithBonus));\n                 return testPointsWithBonus;\n             }).sum();\n-            double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n+\n+            // if static code analysis is enabled, reduce the points by the calculated penalty\n+            if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {", "originalCommit": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db3..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -381,7 +382,8 @@ public class ProgrammingExerciseGradingService {\n             }).sum();\n \n             // if static code analysis is enabled, reduce the points by the calculated penalty\n-            if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {\n+            if (Boolean.TRUE.equals(programmingExercise.isStaticCodeAnalysisEnabled())\n+                    && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(1) > 0) {\n                 successfulTestPoints -= calculateStaticCodeAnalysisPenalty(staticCodeAnalysisFeedback, programmingExercise);\n \n                 if (successfulTestPoints < 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MjQwMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499752401", "bodyText": "I don't think this condition does what is supposed to do. If programmingExercise.getMaxStaticCodeAnalysisPenalty() is null, the user does not want to apply a limit. Here 0>0 is false and the grading won't take place.", "author": "kloessst", "createdAt": "2020-10-05T17:17:01Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -318,11 +379,22 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n                 result.getFeedbacks().stream().filter(fb -> fb.getText().equals(test.getTestName())).findFirst().ifPresent(feedback -> feedback.setCredits(testPointsWithBonus));\n                 return testPointsWithBonus;\n             }).sum();\n-            double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n+\n+            // if static code analysis is enabled, reduce the points by the calculated penalty", "originalCommit": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db3..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -381,7 +382,8 @@ public class ProgrammingExerciseGradingService {\n             }).sum();\n \n             // if static code analysis is enabled, reduce the points by the calculated penalty\n-            if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {\n+            if (Boolean.TRUE.equals(programmingExercise.isStaticCodeAnalysisEnabled())\n+                    && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(1) > 0) {\n                 successfulTestPoints -= calculateStaticCodeAnalysisPenalty(staticCodeAnalysisFeedback, programmingExercise);\n \n                 if (successfulTestPoints < 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2Mjg5Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499762892", "bodyText": "I think the testCasePoints need to be capped first and then the penalty is subtracted. Imagine bonusPoints+maxPoints = 20. Temporarily, a student can get more test case points e.g. 30 in this calculation and then the subtracted penalty would not have any effect.", "author": "kloessst", "createdAt": "2020-10-05T17:36:11Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -318,11 +379,22 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n                 result.getFeedbacks().stream().filter(fb -> fb.getText().equals(test.getTestName())).findFirst().ifPresent(feedback -> feedback.setCredits(testPointsWithBonus));\n                 return testPointsWithBonus;\n             }).sum();\n-            double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n+\n+            // if static code analysis is enabled, reduce the points by the calculated penalty\n+            if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {\n+                successfulTestPoints -= calculateStaticCodeAnalysisPenalty(staticCodeAnalysisFeedback, programmingExercise);\n+\n+                if (successfulTestPoints < 0) {\n+                    successfulTestPoints = 0;\n+                }\n+            }\n+\n             // The points are capped by the maximum achievable points\n+            double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n             if (successfulTestPoints > maxPoints) {\n                 successfulTestPoints = maxPoints;\n             }", "originalCommit": "99f0f4b3d7a301a9dffb166d240002a9cb1f78db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNzI3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r500117272", "bodyText": "please fix it in this PR", "author": "krusche", "createdAt": "2020-10-06T09:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2Mjg5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyODQzNA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r500428434", "bodyText": "This is changed now.", "author": "schultek", "createdAt": "2020-10-06T16:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2Mjg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex a3b5299db3..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -381,7 +382,8 @@ public class ProgrammingExerciseGradingService {\n             }).sum();\n \n             // if static code analysis is enabled, reduce the points by the calculated penalty\n-            if (programmingExercise.isStaticCodeAnalysisEnabled() && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(0) > 0) {\n+            if (Boolean.TRUE.equals(programmingExercise.isStaticCodeAnalysisEnabled())\n+                    && Optional.ofNullable(programmingExercise.getMaxStaticCodeAnalysisPenalty()).orElse(1) > 0) {\n                 successfulTestPoints -= calculateStaticCodeAnalysisPenalty(staticCodeAnalysisFeedback, programmingExercise);\n \n                 if (successfulTestPoints < 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg4Njc4NA==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499886784", "bodyText": "I think a division by zero is possible here.", "author": "kloessst", "createdAt": "2020-10-05T21:37:52Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -333,6 +405,52 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n         }\n     }\n \n+    /**\n+     * Calculates the total penalty over all static code analysis issues\n+     * @param staticCodeAnalysisFeedback The list of static code analysis feedback\n+     * @param programmingExercise The current exercise\n+     * @return The sum of all penalties, capped at the maximum allowed penalty\n+     */\n+    private double calculateStaticCodeAnalysisPenalty(List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+\n+        double codeAnalysisPenaltyPoints = 0;\n+\n+        var feedbackByCategory = staticCodeAnalysisFeedback.stream()\n+                .collect(Collectors.groupingBy(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length())));\n+\n+        for (var category : staticCodeAnalysisService.findByExerciseId(programmingExercise.getId())) {\n+\n+            if (!category.getState().equals(CategoryState.GRADED)) {\n+                continue;\n+            }\n+\n+            // get all feedback in this category\n+            List<Feedback> categoryFeedback = feedbackByCategory.getOrDefault(category.getName(), List.of());\n+\n+            // calculate the sum of all per-feedback penalties\n+            double categoryPenaltyPoints = categoryFeedback.size() * category.getPenalty();\n+\n+            // cap at the maximum allowed penalty for this category\n+            if (categoryPenaltyPoints > category.getMaxPenalty()) {\n+                categoryPenaltyPoints = category.getMaxPenalty();\n+            }\n+\n+            // update credits of feedbacks in category\n+            double perFeedbackPenalty = categoryPenaltyPoints / categoryFeedback.size();", "originalCommit": "ab5357568611504c5c02e41b06c516328b640a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex 2c75cb08f6..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -436,16 +438,20 @@ public class ProgrammingExerciseGradingService {\n             }\n \n             // update credits of feedbacks in category\n-            double perFeedbackPenalty = categoryPenaltyPoints / categoryFeedback.size();\n-            categoryFeedback.forEach(feedback -> feedback.setCredits(-perFeedbackPenalty));\n+            if (!categoryFeedback.isEmpty()) {\n+                double perFeedbackPenalty = categoryPenaltyPoints / categoryFeedback.size();\n+                categoryFeedback.forEach(feedback -> feedback.setCredits(-perFeedbackPenalty));\n+            }\n \n             codeAnalysisPenaltyPoints += categoryPenaltyPoints;\n         }\n \n-        // cap at the maximum allowed penalty for this exercise (maxStaticCodeAnalysisPenalty is in percent)\n-        final var maxExercisePenaltyPoints = (double) programmingExercise.getMaxStaticCodeAnalysisPenalty() / 100.0 * programmingExercise.getMaxScore();\n-        if (codeAnalysisPenaltyPoints > maxExercisePenaltyPoints) {\n-            codeAnalysisPenaltyPoints = maxExercisePenaltyPoints;\n+        // cap at the maximum allowed penalty for this exercise if specified (maxStaticCodeAnalysisPenalty is in percent)\n+        if (programmingExercise.getMaxStaticCodeAnalysisPenalty() != null) {\n+            final var maxExercisePenaltyPoints = (double) programmingExercise.getMaxStaticCodeAnalysisPenalty() / 100.0 * programmingExercise.getMaxScore();\n+            if (codeAnalysisPenaltyPoints > maxExercisePenaltyPoints) {\n+                codeAnalysisPenaltyPoints = maxExercisePenaltyPoints;\n+            }\n         }\n \n         return codeAnalysisPenaltyPoints;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg4OTUzMg==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499889532", "bodyText": "I think programmingExercise.getMaxStaticCodeAnalysisPenalty() could be null and this needs to be checked.", "author": "kloessst", "createdAt": "2020-10-05T21:44:24Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -333,6 +405,52 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n         }\n     }\n \n+    /**\n+     * Calculates the total penalty over all static code analysis issues\n+     * @param staticCodeAnalysisFeedback The list of static code analysis feedback\n+     * @param programmingExercise The current exercise\n+     * @return The sum of all penalties, capped at the maximum allowed penalty\n+     */\n+    private double calculateStaticCodeAnalysisPenalty(List<Feedback> staticCodeAnalysisFeedback, ProgrammingExercise programmingExercise) {\n+\n+        double codeAnalysisPenaltyPoints = 0;\n+\n+        var feedbackByCategory = staticCodeAnalysisFeedback.stream()\n+                .collect(Collectors.groupingBy(feedback -> feedback.getText().substring(Feedback.STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER.length())));\n+\n+        for (var category : staticCodeAnalysisService.findByExerciseId(programmingExercise.getId())) {\n+\n+            if (!category.getState().equals(CategoryState.GRADED)) {\n+                continue;\n+            }\n+\n+            // get all feedback in this category\n+            List<Feedback> categoryFeedback = feedbackByCategory.getOrDefault(category.getName(), List.of());\n+\n+            // calculate the sum of all per-feedback penalties\n+            double categoryPenaltyPoints = categoryFeedback.size() * category.getPenalty();\n+\n+            // cap at the maximum allowed penalty for this category\n+            if (categoryPenaltyPoints > category.getMaxPenalty()) {\n+                categoryPenaltyPoints = category.getMaxPenalty();\n+            }\n+\n+            // update credits of feedbacks in category\n+            double perFeedbackPenalty = categoryPenaltyPoints / categoryFeedback.size();\n+            categoryFeedback.forEach(feedback -> feedback.setCredits(-perFeedbackPenalty));\n+\n+            codeAnalysisPenaltyPoints += categoryPenaltyPoints;\n+        }\n+\n+        // cap at the maximum allowed penalty for this exercise (maxStaticCodeAnalysisPenalty is in percent)\n+        final var maxExercisePenaltyPoints = (double) programmingExercise.getMaxStaticCodeAnalysisPenalty() / 100.0 * programmingExercise.getMaxScore();", "originalCommit": "ab5357568611504c5c02e41b06c516328b640a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\nindex 2c75cb08f6..0c922cd508 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n\n@@ -436,16 +438,20 @@ public class ProgrammingExerciseGradingService {\n             }\n \n             // update credits of feedbacks in category\n-            double perFeedbackPenalty = categoryPenaltyPoints / categoryFeedback.size();\n-            categoryFeedback.forEach(feedback -> feedback.setCredits(-perFeedbackPenalty));\n+            if (!categoryFeedback.isEmpty()) {\n+                double perFeedbackPenalty = categoryPenaltyPoints / categoryFeedback.size();\n+                categoryFeedback.forEach(feedback -> feedback.setCredits(-perFeedbackPenalty));\n+            }\n \n             codeAnalysisPenaltyPoints += categoryPenaltyPoints;\n         }\n \n-        // cap at the maximum allowed penalty for this exercise (maxStaticCodeAnalysisPenalty is in percent)\n-        final var maxExercisePenaltyPoints = (double) programmingExercise.getMaxStaticCodeAnalysisPenalty() / 100.0 * programmingExercise.getMaxScore();\n-        if (codeAnalysisPenaltyPoints > maxExercisePenaltyPoints) {\n-            codeAnalysisPenaltyPoints = maxExercisePenaltyPoints;\n+        // cap at the maximum allowed penalty for this exercise if specified (maxStaticCodeAnalysisPenalty is in percent)\n+        if (programmingExercise.getMaxStaticCodeAnalysisPenalty() != null) {\n+            final var maxExercisePenaltyPoints = (double) programmingExercise.getMaxStaticCodeAnalysisPenalty() / 100.0 * programmingExercise.getMaxScore();\n+            if (codeAnalysisPenaltyPoints > maxExercisePenaltyPoints) {\n+                codeAnalysisPenaltyPoints = maxExercisePenaltyPoints;\n+            }\n         }\n \n         return codeAnalysisPenaltyPoints;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkyMjkwNw==", "url": "https://github.com/ls1intum/Artemis/pull/2107#discussion_r499922907", "bodyText": "It might be possible to store the mappings in a more efficient way. For example a Map with keys Pair<Tool,Rule> and values the category names. This must only be created once at startup. This can also be done in a follow-up.", "author": "kloessst", "createdAt": "2020-10-05T23:19:30Z", "path": "src/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java", "diffHunk": "@@ -98,6 +103,33 @@ public void createDefaultCategories(ProgrammingExercise programmingExercise) {\n             originalCategory.setState(matchingCategory.getState());\n         }\n         staticCodeAnalysisCategoryRepository.saveAll(originalCategories);\n+\n+        // At least one category was updated. We use this flag to inform the instructor about outdated student results.\n+        programmingSubmissionService.setTestCasesChangedAndTriggerTestCaseUpdate(exerciseId);\n+\n         return originalCategories;\n     }\n+\n+    /**\n+     * Links the categories of an exercise with the default category mappings.\n+     * @param programmingExercise The programming exercise\n+     * @return A list of pairs of categories and their mappings.\n+     */\n+    public List<ImmutablePair<StaticCodeAnalysisCategory, List<StaticCodeAnalysisDefaultCategory.CategoryMapping>>> getCategoriesWithMappingForExercise(", "originalCommit": "ab5357568611504c5c02e41b06c516328b640a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "70ab0da9b5395f2293a1148b69ea955cdfaccab9", "url": "https://github.com/ls1intum/Artemis/commit/70ab0da9b5395f2293a1148b69ea955cdfaccab9", "message": "Code review suggestions", "committedDate": "2020-10-06T00:32:16Z", "type": "commit"}, {"oid": "8c394a89856da2d2513a6c7942bc0d75a76b32cb", "url": "https://github.com/ls1intum/Artemis/commit/8c394a89856da2d2513a6c7942bc0d75a76b32cb", "message": "Streamline client and server enum names", "committedDate": "2020-10-06T00:35:34Z", "type": "commit"}, {"oid": "e227b7090968d30b03f7985099545cc5c5a5ca1c", "url": "https://github.com/ls1intum/Artemis/commit/e227b7090968d30b03f7985099545cc5c5a5ca1c", "message": "Switch order of capping and comments", "committedDate": "2020-10-06T10:04:45Z", "type": "commit"}, {"oid": "f2ffaa8ca48c668314425be22e5fb2898ad75c96", "url": "https://github.com/ls1intum/Artemis/commit/f2ffaa8ca48c668314425be22e5fb2898ad75c96", "message": "Fix possible nullpointer", "committedDate": "2020-10-06T15:08:27Z", "type": "commit"}, {"oid": "70dadcd2c4b80fde9cd75a00f2a81d52741ab285", "url": "https://github.com/ls1intum/Artemis/commit/70dadcd2c4b80fde9cd75a00f2a81d52741ab285", "message": "Default to 100% maxPenalty if no penalty was given. Add doc.", "committedDate": "2020-10-06T16:56:03Z", "type": "commit"}, {"oid": "4082ce085e5ddb429c7d0539ba5870f84a1542d4", "url": "https://github.com/ls1intum/Artemis/commit/4082ce085e5ddb429c7d0539ba5870f84a1542d4", "message": "Add more tests and improve structure", "committedDate": "2020-10-06T17:06:15Z", "type": "commit"}, {"oid": "182f58d8f300d1d5398dde8a3fdcabc3e6b80516", "url": "https://github.com/ls1intum/Artemis/commit/182f58d8f300d1d5398dde8a3fdcabc3e6b80516", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-10-06T17:06:53Z", "type": "commit"}, {"oid": "81f2d261e648da0caa511ff3832f97ec38b19f0c", "url": "https://github.com/ls1intum/Artemis/commit/81f2d261e648da0caa511ff3832f97ec38b19f0c", "message": "Add FEEDBACK category for tests", "committedDate": "2020-10-06T17:12:29Z", "type": "commit"}, {"oid": "370fea7a538f89d2950df58fbd2dc08a20308d8b", "url": "https://github.com/ls1intum/Artemis/commit/370fea7a538f89d2950df58fbd2dc08a20308d8b", "message": "Bump expected amount of feedback by one because of new category", "committedDate": "2020-10-06T17:19:37Z", "type": "commit"}, {"oid": "e339acdf13bfd74779ba3bf0881c516dc5f7913f", "url": "https://github.com/ls1intum/Artemis/commit/e339acdf13bfd74779ba3bf0881c516dc5f7913f", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-10-06T19:55:34Z", "type": "commit"}, {"oid": "5f86e7afeb6a20d665861941af177c5dc640eace", "url": "https://github.com/ls1intum/Artemis/commit/5f86e7afeb6a20d665861941af177c5dc640eace", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-10-06T20:04:19Z", "type": "commit"}, {"oid": "d53b9066b2446c7dbe415b19f7b8c4d8633c92b7", "url": "https://github.com/ls1intum/Artemis/commit/d53b9066b2446c7dbe415b19f7b8c4d8633c92b7", "message": "add grading service and grading resource", "committedDate": "2020-09-16T15:39:33Z", "type": "commit"}, {"oid": "70998eb696a8b8010ae37059cd64d2c695267e82", "url": "https://github.com/ls1intum/Artemis/commit/70998eb696a8b8010ae37059cd64d2c695267e82", "message": "adjust tests", "committedDate": "2020-09-16T15:40:24Z", "type": "commit"}, {"oid": "8987aa85848a9396fc8ed8259e3d4a44d867388e", "url": "https://github.com/ls1intum/Artemis/commit/8987aa85848a9396fc8ed8259e3d4a44d867388e", "message": "formatting", "committedDate": "2020-09-16T15:41:16Z", "type": "commit"}, {"oid": "390a0d611d5f120aa9065f730e1af803a49379ec", "url": "https://github.com/ls1intum/Artemis/commit/390a0d611d5f120aa9065f730e1af803a49379ec", "message": "Merge branch 'develop' into enhancement/programming-exercise/improve-grading", "committedDate": "2020-09-16T15:44:02Z", "type": "commit"}, {"oid": "2547f06d8c5a939553d14c36683029fd9c2f0c65", "url": "https://github.com/ls1intum/Artemis/commit/2547f06d8c5a939553d14c36683029fd9c2f0c65", "message": "Improve toString for TestCases, StaticCodeAnalysisCategory", "committedDate": "2020-09-16T18:38:12Z", "type": "commit"}, {"oid": "a4c62a81cf93d70ab6ef254ffc51b0e80cbacc2a", "url": "https://github.com/ls1intum/Artemis/commit/a4c62a81cf93d70ab6ef254ffc51b0e80cbacc2a", "message": "Fix import for test cases and categories", "committedDate": "2020-09-16T18:49:43Z", "type": "commit"}, {"oid": "92a569d42a6ca1c4f6551f9c5d053b5c74564e10", "url": "https://github.com/ls1intum/Artemis/commit/92a569d42a6ca1c4f6551f9c5d053b5c74564e10", "message": "Refactor and improve integration tests for import", "committedDate": "2020-09-16T18:54:01Z", "type": "commit"}, {"oid": "02d36fbbc71032f7ad57117b2d95a2e45bb9a7bf", "url": "https://github.com/ls1intum/Artemis/commit/02d36fbbc71032f7ad57117b2d95a2e45bb9a7bf", "message": "rename methods", "committedDate": "2020-09-16T20:23:32Z", "type": "commit"}, {"oid": "39d89124c619747c14f7cf9d74e267b27baecd55", "url": "https://github.com/ls1intum/Artemis/commit/39d89124c619747c14f7cf9d74e267b27baecd55", "message": "Rename default category properties", "committedDate": "2020-09-16T20:34:22Z", "type": "commit"}, {"oid": "cb47b459e16cfbac782daeba4c046609720b671d", "url": "https://github.com/ls1intum/Artemis/commit/cb47b459e16cfbac782daeba4c046609720b671d", "message": "Fix integration tests", "committedDate": "2020-09-16T20:34:58Z", "type": "commit"}, {"oid": "63f819d33726a5da2485c2fed1bf426f53736bae", "url": "https://github.com/ls1intum/Artemis/commit/63f819d33726a5da2485c2fed1bf426f53736bae", "message": "Merge branch 'feature/automated-grading-page' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-16T20:41:24Z", "type": "commit"}, {"oid": "b5be4d1de1d152d5eab97b901ccd0bf27a1b29d0", "url": "https://github.com/ls1intum/Artemis/commit/b5be4d1de1d152d5eab97b901ccd0bf27a1b29d0", "message": "Merge branch 'feature/static-code-analysis-configuration-data-model' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-16T20:41:30Z", "type": "commit"}, {"oid": "0c4c0b5e75e92c93454a6f84fb7dbb0dbae77e89", "url": "https://github.com/ls1intum/Artemis/commit/0c4c0b5e75e92c93454a6f84fb7dbb0dbae77e89", "message": "Merge branch 'enhancement/programming-exercise/improve-grading' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-16T20:41:48Z", "type": "commit"}, {"oid": "0f39f006ff9b54e0a67ba93fa68d98fcdbaebe37", "url": "https://github.com/ls1intum/Artemis/commit/0f39f006ff9b54e0a67ba93fa68d98fcdbaebe37", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-16T22:06:48Z", "type": "commit"}, {"oid": "8f59337fc4ee839b6ba03d7dc6fa81c88c4dae83", "url": "https://github.com/ls1intum/Artemis/commit/8f59337fc4ee839b6ba03d7dc6fa81c88c4dae83", "message": "Improve coverage", "committedDate": "2020-09-16T22:16:26Z", "type": "commit"}, {"oid": "0386a8a13b53ce55845653251c4f4785f77ed23f", "url": "https://github.com/ls1intum/Artemis/commit/0386a8a13b53ce55845653251c4f4785f77ed23f", "message": "Improve code quality", "committedDate": "2020-09-16T22:28:46Z", "type": "commit"}, {"oid": "ee3c6542f01dab46c96e265fdaf9a1a2da3c850c", "url": "https://github.com/ls1intum/Artemis/commit/ee3c6542f01dab46c96e265fdaf9a1a2da3c850c", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-16T22:29:17Z", "type": "commit"}, {"oid": "727e84a56c791843b0446a0d67c60600aa2ab018", "url": "https://github.com/ls1intum/Artemis/commit/727e84a56c791843b0446a0d67c60600aa2ab018", "message": "Remove unused code", "committedDate": "2020-09-16T22:36:19Z", "type": "commit"}, {"oid": "b2fc4412e71084e6a0b76054cfebe4b6cf7c99c8", "url": "https://github.com/ls1intum/Artemis/commit/b2fc4412e71084e6a0b76054cfebe4b6cf7c99c8", "message": "Merge branch 'feature/static-code-analysis-configuration-data-model' of https://github.com/ls1intum/Artemis into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-16T22:37:27Z", "type": "commit"}, {"oid": "0bd9ee4a3c1bcfc7f07b80a0c74457433b4a21c9", "url": "https://github.com/ls1intum/Artemis/commit/0bd9ee4a3c1bcfc7f07b80a0c74457433b4a21c9", "message": "Use floating point numbers for penalties to allow fine grained control", "committedDate": "2020-09-17T12:50:43Z", "type": "commit"}, {"oid": "314cf861bcf4102d6de7a47d5e3ef16c232d2b70", "url": "https://github.com/ls1intum/Artemis/commit/314cf861bcf4102d6de7a47d5e3ef16c232d2b70", "message": "Max penalty for exercises should be integers", "committedDate": "2020-09-17T13:17:06Z", "type": "commit"}, {"oid": "3b87e9a8c08cdbb28d08cf8ddcac64f350608764", "url": "https://github.com/ls1intum/Artemis/commit/3b87e9a8c08cdbb28d08cf8ddcac64f350608764", "message": "add code analysis in exercise grading", "committedDate": "2020-09-17T18:08:19Z", "type": "commit"}, {"oid": "5ee37a2e3d4ffac9376bf7ba986d4bc90a7b1cb3", "url": "https://github.com/ls1intum/Artemis/commit/5ee37a2e3d4ffac9376bf7ba986d4bc90a7b1cb3", "message": "link client to sca endpoints", "committedDate": "2020-09-17T20:22:46Z", "type": "commit"}, {"oid": "e6cd58610cfaef370a36ad598cd864a3a74e6b61", "url": "https://github.com/ls1intum/Artemis/commit/e6cd58610cfaef370a36ad598cd864a3a74e6b61", "message": "adjust client tests", "committedDate": "2020-09-17T20:22:57Z", "type": "commit"}, {"oid": "1749820c39539f0916f8440420156cd3eb46ccc4", "url": "https://github.com/ls1intum/Artemis/commit/1749820c39539f0916f8440420156cd3eb46ccc4", "message": "formatting", "committedDate": "2020-09-17T20:27:28Z", "type": "commit"}, {"oid": "6bbe6350d84552e8bc51620c8d167a0d65e9fcc2", "url": "https://github.com/ls1intum/Artemis/commit/6bbe6350d84552e8bc51620c8d167a0d65e9fcc2", "message": "Create input for max static code analysis penalty", "committedDate": "2020-09-17T22:34:22Z", "type": "commit"}, {"oid": "a2617837659e31c762edef46532bf61a11fa9bc9", "url": "https://github.com/ls1intum/Artemis/commit/a2617837659e31c762edef46532bf61a11fa9bc9", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-09-17T22:41:06Z", "type": "commit"}, {"oid": "851f439904e1f9b7e85aa6182d937468f882ce95", "url": "https://github.com/ls1intum/Artemis/commit/851f439904e1f9b7e85aa6182d937468f882ce95", "message": "Show the max penalty in exercise details", "committedDate": "2020-09-17T23:04:06Z", "type": "commit"}, {"oid": "55fcd6035afa696c3b8bc54a0e5f93c0f449e518", "url": "https://github.com/ls1intum/Artemis/commit/55fcd6035afa696c3b8bc54a0e5f93c0f449e518", "message": "Fix tests", "committedDate": "2020-09-17T23:23:58Z", "type": "commit"}, {"oid": "f6fd3029f853e790dc0ec2d3339e370f4445e9b3", "url": "https://github.com/ls1intum/Artemis/commit/f6fd3029f853e790dc0ec2d3339e370f4445e9b3", "message": "java formatting", "committedDate": "2020-09-18T10:10:08Z", "type": "commit"}, {"oid": "94b96fec740fd996f1a772806485246f52498e56", "url": "https://github.com/ls1intum/Artemis/commit/94b96fec740fd996f1a772806485246f52498e56", "message": "Merge branch 'feature/static-code-analysis-configuration-data-model' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-18T10:10:55Z", "type": "commit"}, {"oid": "26b2fdda8cd908260807dc4b9c892aa0b478712a", "url": "https://github.com/ls1intum/Artemis/commit/26b2fdda8cd908260807dc4b9c892aa0b478712a", "message": "Complete default java static code configuration", "committedDate": "2020-09-18T17:22:38Z", "type": "commit"}, {"oid": "919091cc25989664048d72ebea4e3f4b76c3900a", "url": "https://github.com/ls1intum/Artemis/commit/919091cc25989664048d72ebea4e3f4b76c3900a", "message": "adjust tests and fix code issues", "committedDate": "2020-09-19T12:38:29Z", "type": "commit"}, {"oid": "06aaeb9130c110a3d6c3933674db35142c5d64e0", "url": "https://github.com/ls1intum/Artemis/commit/06aaeb9130c110a3d6c3933674db35142c5d64e0", "message": "Merge branch 'develop' into enhancement/programming-exercise/improve-grading", "committedDate": "2020-09-19T12:39:30Z", "type": "commit"}, {"oid": "5482f2aab5f2b322d0d5140ee026af113d1f55b4", "url": "https://github.com/ls1intum/Artemis/commit/5482f2aab5f2b322d0d5140ee026af113d1f55b4", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-19T19:30:38Z", "type": "commit"}, {"oid": "05586727d739480b42a57765629f0580b602d48c", "url": "https://github.com/ls1intum/Artemis/commit/05586727d739480b42a57765629f0580b602d48c", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-19T19:30:58Z", "type": "commit"}, {"oid": "dfb2667b822f08b14dc3bef2dcf65384a7f4ed0c", "url": "https://github.com/ls1intum/Artemis/commit/dfb2667b822f08b14dc3bef2dcf65384a7f4ed0c", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-20T10:48:41Z", "type": "commit"}, {"oid": "4160ac24ec0b97a949c44cb58bfbb40b0c4a7f27", "url": "https://github.com/ls1intum/Artemis/commit/4160ac24ec0b97a949c44cb58bfbb40b0c4a7f27", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-09-20T10:49:39Z", "type": "commit"}, {"oid": "260fbd3747e05414ad10d6ae159582e269cbadc5", "url": "https://github.com/ls1intum/Artemis/commit/260fbd3747e05414ad10d6ae159582e269cbadc5", "message": "Merge remote-tracking branch 'origin/feature/automated-grading-page' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-20T10:52:13Z", "type": "commit"}, {"oid": "e2fd30e56f37bb137d92ff2bebd5d4d32b42f097", "url": "https://github.com/ls1intum/Artemis/commit/e2fd30e56f37bb137d92ff2bebd5d4d32b42f097", "message": "Merge remote-tracking branch 'origin/feature/static-code-analysis-configuration-data-model' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-20T10:53:45Z", "type": "commit"}, {"oid": "28fe3bc70b0ff2626d412255b6c1390c9f2fb2ee", "url": "https://github.com/ls1intum/Artemis/commit/28fe3bc70b0ff2626d412255b6c1390c9f2fb2ee", "message": "Merge remote-tracking branch 'origin/enhancement/programming-exercise/improve-grading' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-20T10:55:23Z", "type": "commit"}, {"oid": "649258128874bb898078cffdf29b470af9a4a9ba", "url": "https://github.com/ls1intum/Artemis/commit/649258128874bb898078cffdf29b470af9a4a9ba", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-20T10:57:40Z", "type": "commit"}, {"oid": "b1dc95d4d39471aaff7e203f3e770444e17b6a4a", "url": "https://github.com/ls1intum/Artemis/commit/b1dc95d4d39471aaff7e203f3e770444e17b6a4a", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-22T08:00:38Z", "type": "commit"}, {"oid": "859f54511de107317c0374ddbcabc2358c3018bf", "url": "https://github.com/ls1intum/Artemis/commit/859f54511de107317c0374ddbcabc2358c3018bf", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-22T22:06:28Z", "type": "commit"}, {"oid": "cdb0d25855f7f7bcff7819e86457be6f29f45ee9", "url": "https://github.com/ls1intum/Artemis/commit/cdb0d25855f7f7bcff7819e86457be6f29f45ee9", "message": "use correct exercise on category creation", "committedDate": "2020-09-23T10:48:21Z", "type": "commit"}, {"oid": "b0f690e2e22f1faced1c14a41f7d69feebed9e0b", "url": "https://github.com/ls1intum/Artemis/commit/b0f690e2e22f1faced1c14a41f7d69feebed9e0b", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-23T10:48:38Z", "type": "commit"}, {"oid": "555f6bd210ae08dce08bc0cdb097bbb919d5cc3d", "url": "https://github.com/ls1intum/Artemis/commit/555f6bd210ae08dce08bc0cdb097bbb919d5cc3d", "message": "Merge branch 'feature/static-code-analysis-configuration-data-model' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-23T10:49:22Z", "type": "commit"}, {"oid": "8872132ec7f1dd68909181aefdaec9d15cbe830f", "url": "https://github.com/ls1intum/Artemis/commit/8872132ec7f1dd68909181aefdaec9d15cbe830f", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-23T11:48:23Z", "type": "commit"}, {"oid": "8cf30344582f4ad6da90a7fc4964d774ffccd296", "url": "https://github.com/ls1intum/Artemis/commit/8cf30344582f4ad6da90a7fc4964d774ffccd296", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-23T11:48:41Z", "type": "commit"}, {"oid": "ddafca43e39665463f74c1e3332220bb2d0800d8", "url": "https://github.com/ls1intum/Artemis/commit/ddafca43e39665463f74c1e3332220bb2d0800d8", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-23T11:49:06Z", "type": "commit"}, {"oid": "52b0348fccc0bd3f0d4a7b2311d220803e2f0577", "url": "https://github.com/ls1intum/Artemis/commit/52b0348fccc0bd3f0d4a7b2311d220803e2f0577", "message": "Delete dummy mappings", "committedDate": "2020-09-23T13:09:05Z", "type": "commit"}, {"oid": "135259e12b611db55e6e129f29e34b13832e0f37", "url": "https://github.com/ls1intum/Artemis/commit/135259e12b611db55e6e129f29e34b13832e0f37", "message": "Streamline category state enum", "committedDate": "2020-09-23T13:09:37Z", "type": "commit"}, {"oid": "85a2543505e20a55aad2d266daaff0b1d11772ce", "url": "https://github.com/ls1intum/Artemis/commit/85a2543505e20a55aad2d266daaff0b1d11772ce", "message": "Fix category requests", "committedDate": "2020-09-23T13:13:53Z", "type": "commit"}, {"oid": "cc86847b471cbfedf95946eff0fbb35d216212ea", "url": "https://github.com/ls1intum/Artemis/commit/cc86847b471cbfedf95946eff0fbb35d216212ea", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-23T13:56:03Z", "type": "commit"}, {"oid": "a544f9652ebf9702457e865f33a7052e747eadbd", "url": "https://github.com/ls1intum/Artemis/commit/a544f9652ebf9702457e865f33a7052e747eadbd", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-23T14:26:20Z", "type": "commit"}, {"oid": "4d72af6e212087d8ad7b83c0f8ea3be5acc27e8b", "url": "https://github.com/ls1intum/Artemis/commit/4d72af6e212087d8ad7b83c0f8ea3be5acc27e8b", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-23T16:31:14Z", "type": "commit"}, {"oid": "f44040351c26e3fb709fd9e2af4e45f0ecac75f1", "url": "https://github.com/ls1intum/Artemis/commit/f44040351c26e3fb709fd9e2af4e45f0ecac75f1", "message": "Remove unused import", "committedDate": "2020-09-23T16:40:43Z", "type": "commit"}, {"oid": "ed44b4f2979b938f4db6d3dab0fbb04e5ff11aa1", "url": "https://github.com/ls1intum/Artemis/commit/ed44b4f2979b938f4db6d3dab0fbb04e5ff11aa1", "message": "Merge branch 'feature/programming-exercise/sca-grading' of https://github.com/ls1intum/Artemis into feature/programming-exercise/sca-grading", "committedDate": "2020-09-23T16:41:00Z", "type": "commit"}, {"oid": "3aea10933bc8ca738f34d658f9031fc66a2c728d", "url": "https://github.com/ls1intum/Artemis/commit/3aea10933bc8ca738f34d658f9031fc66a2c728d", "message": "Fix duplicate in configuration", "committedDate": "2020-09-24T11:57:06Z", "type": "commit"}, {"oid": "5c7b232880858f432ee905cd69abec42d71248e7", "url": "https://github.com/ls1intum/Artemis/commit/5c7b232880858f432ee905cd69abec42d71248e7", "message": "Merge remote-tracking branch 'origin/develop' into feature/static-code-analysis-configuration-data-model\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml\n#\tsrc/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java", "committedDate": "2020-09-24T12:09:20Z", "type": "commit"}, {"oid": "ebed138ae3bf043be047bd51f131ed3cbe085bed", "url": "https://github.com/ls1intum/Artemis/commit/ebed138ae3bf043be047bd51f131ed3cbe085bed", "message": "spotless", "committedDate": "2020-09-24T12:14:58Z", "type": "commit"}, {"oid": "dde7143224e76c93627912dff1f53b303155ce3f", "url": "https://github.com/ls1intum/Artemis/commit/dde7143224e76c93627912dff1f53b303155ce3f", "message": "Merge remote-tracking branch 'origin/develop' into feature/checkstyle-and-pmd-support\n\n# Conflicts:\n#\tsrc/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java", "committedDate": "2020-09-24T12:25:58Z", "type": "commit"}, {"oid": "7828b7ef3cb81771f36354cd5e4660612e1b63ac", "url": "https://github.com/ls1intum/Artemis/commit/7828b7ef3cb81771f36354cd5e4660612e1b63ac", "message": "Fix tests after merge conflict", "committedDate": "2020-09-24T13:15:35Z", "type": "commit"}, {"oid": "7e9b1573c2ecdded392b731046c748ad20577986", "url": "https://github.com/ls1intum/Artemis/commit/7e9b1573c2ecdded392b731046c748ad20577986", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-09-24T13:21:12Z", "type": "commit"}, {"oid": "c08aa3518d17ea64f022bc6af85e92c05cc58cf6", "url": "https://github.com/ls1intum/Artemis/commit/c08aa3518d17ea64f022bc6af85e92c05cc58cf6", "message": "Improve test coverage of pipe", "committedDate": "2020-09-24T15:31:22Z", "type": "commit"}, {"oid": "bdd7a9935ee46faa4622b411a79cf8ea47e64654", "url": "https://github.com/ls1intum/Artemis/commit/bdd7a9935ee46faa4622b411a79cf8ea47e64654", "message": "Fix merge conflict", "committedDate": "2020-09-24T15:40:49Z", "type": "commit"}, {"oid": "5c6477ed578473a2c849b827164a85d0f97ea628", "url": "https://github.com/ls1intum/Artemis/commit/5c6477ed578473a2c849b827164a85d0f97ea628", "message": "Improve translation", "committedDate": "2020-09-24T15:45:40Z", "type": "commit"}, {"oid": "5df7841d36a11a7c4cd5013d056019e4baad3e71", "url": "https://github.com/ls1intum/Artemis/commit/5df7841d36a11a7c4cd5013d056019e4baad3e71", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-24T16:01:01Z", "type": "commit"}, {"oid": "af6572d1ac62b64b51e7bbd572280f54a358a39a", "url": "https://github.com/ls1intum/Artemis/commit/af6572d1ac62b64b51e7bbd572280f54a358a39a", "message": "Create validation method", "committedDate": "2020-09-24T16:35:03Z", "type": "commit"}, {"oid": "fa2f2146c1f3857216e8c5d04124df0cf44ee48a", "url": "https://github.com/ls1intum/Artemis/commit/fa2f2146c1f3857216e8c5d04124df0cf44ee48a", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-24T16:37:43Z", "type": "commit"}, {"oid": "c83e59f4145dea33ff66d559f72e08c11b9cf828", "url": "https://github.com/ls1intum/Artemis/commit/c83e59f4145dea33ff66d559f72e08c11b9cf828", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-24T16:38:14Z", "type": "commit"}, {"oid": "851a6f2e698bdf138395c1a0e0ba912b1bf05ce5", "url": "https://github.com/ls1intum/Artemis/commit/851a6f2e698bdf138395c1a0e0ba912b1bf05ce5", "message": "Merge branch 'feature/checkstyle-and-pmd-support' into feature/programming-exercise/sca-grading\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/domain/enumeration/StaticCodeAnalysisTool.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/FeedbackService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BambooService.java\n#\tsrc/main/resources/config/liquibase/master.xml\n#\tsrc/test/java/de/tum/in/www1/artemis/ResultServiceIntegrationTest.java\n#\tsrc/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java\n#\tsrc/test/java/de/tum/in/www1/artemis/util/ModelFactory.java", "committedDate": "2020-09-25T12:30:16Z", "type": "commit"}, {"oid": "f1193b9a239e3ce94dfd3a692dc3ef66b0fd0335", "url": "https://github.com/ls1intum/Artemis/commit/f1193b9a239e3ce94dfd3a692dc3ef66b0fd0335", "message": "remove unused category fields", "committedDate": "2020-09-25T12:32:50Z", "type": "commit"}, {"oid": "261bb19a5ef575aa6dccc65096e0edd34b491869", "url": "https://github.com/ls1intum/Artemis/commit/261bb19a5ef575aa6dccc65096e0edd34b491869", "message": "update javadoc", "committedDate": "2020-09-25T13:15:23Z", "type": "commit"}, {"oid": "3b1a7e2af8fa7c0fc21a56b1b946c3916c3ad3a6", "url": "https://github.com/ls1intum/Artemis/commit/3b1a7e2af8fa7c0fc21a56b1b946c3916c3ad3a6", "message": "update sca category check", "committedDate": "2020-09-25T13:22:13Z", "type": "commit"}, {"oid": "cd856726db3903938adb726e6911e9e351f1d83f", "url": "https://github.com/ls1intum/Artemis/commit/cd856726db3903938adb726e6911e9e351f1d83f", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-09-26T09:51:15Z", "type": "commit"}, {"oid": "927d357c5015a6a820937a9ee00ed4f7647ab57c", "url": "https://github.com/ls1intum/Artemis/commit/927d357c5015a6a820937a9ee00ed4f7647ab57c", "message": "adjust penalty generation", "committedDate": "2020-09-26T17:41:58Z", "type": "commit"}, {"oid": "507c2b07688cab0262e0c1ac29dc618d1c7b7341", "url": "https://github.com/ls1intum/Artemis/commit/507c2b07688cab0262e0c1ac29dc618d1c7b7341", "message": "account for sca category state", "committedDate": "2020-09-27T12:28:15Z", "type": "commit"}, {"oid": "8681fc407c41ce5ffec59ff69a9b6f1b96705173", "url": "https://github.com/ls1intum/Artemis/commit/8681fc407c41ce5ffec59ff69a9b6f1b96705173", "message": "move buttons into tab area and update status", "committedDate": "2020-09-27T15:20:47Z", "type": "commit"}, {"oid": "1547d5117970b27b9967e4ee8fa17999b4a90eaa", "url": "https://github.com/ls1intum/Artemis/commit/1547d5117970b27b9967e4ee8fa17999b4a90eaa", "message": "partly refactor hasUpdatedTestCases to hasUpdatedGradingConfig", "committedDate": "2020-09-27T15:36:53Z", "type": "commit"}, {"oid": "030e4bb6c5da787591e5b74820a38b26ac18a13c", "url": "https://github.com/ls1intum/Artemis/commit/030e4bb6c5da787591e5b74820a38b26ac18a13c", "message": "use testCasesChanged flat also for sca categories", "committedDate": "2020-09-27T15:40:36Z", "type": "commit"}, {"oid": "ba3c13ade5c1a7d13aa66b3f5684aa3433679d0f", "url": "https://github.com/ls1intum/Artemis/commit/ba3c13ade5c1a7d13aa66b3f5684aa3433679d0f", "message": "hide penalty field on ungraded category", "committedDate": "2020-09-27T15:52:32Z", "type": "commit"}, {"oid": "e7863fc68154f94823cc447c6062d5a5542ef657", "url": "https://github.com/ls1intum/Artemis/commit/e7863fc68154f94823cc447c6062d5a5542ef657", "message": "change category state handling", "committedDate": "2020-09-27T17:51:13Z", "type": "commit"}, {"oid": "806717115e6a3b5837801ed495fa89815da45c1b", "url": "https://github.com/ls1intum/Artemis/commit/806717115e6a3b5837801ed495fa89815da45c1b", "message": "update category table state messages", "committedDate": "2020-09-27T18:02:25Z", "type": "commit"}, {"oid": "bdf23d8754473b2d9ab3c78ea638b9e6abb72815", "url": "https://github.com/ls1intum/Artemis/commit/bdf23d8754473b2d9ab3c78ea638b9e6abb72815", "message": "Merge branch 'feature/static-code-analysis-configuration-data-model' into feature/programming-exercise/sca-grading", "committedDate": "2020-09-27T18:10:50Z", "type": "commit"}, {"oid": "ee840c72fe23db58c34d0d3ef8bddaa590a34172", "url": "https://github.com/ls1intum/Artemis/commit/ee840c72fe23db58c34d0d3ef8bddaa590a34172", "message": "Merge branch 'feature/automated-grading-page' into feature/programming-exercise/sca-grading\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml\n#\tsrc/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseServiceIntegrationTest.java", "committedDate": "2020-09-27T18:51:01Z", "type": "commit"}, {"oid": "8f7e433b3e9bfd8ac63c7eb24831d34eb59f33fc", "url": "https://github.com/ls1intum/Artemis/commit/8f7e433b3e9bfd8ac63c7eb24831d34eb59f33fc", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/config/Constants.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/FeedbackService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseTestCaseService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseTestCaseResource.java\n#\tsrc/main/webapp/app/entities/programming-exercise.model.ts\n#\tsrc/main/webapp/app/entities/static-code-analysis-category.model.ts\n#\tsrc/main/webapp/app/entities/static-code-analysis-issue.model.ts\n#\tsrc/main/webapp/app/exercises/programming/manage/grading/programming-exercise-configure-grading-actions.component.ts\n#\tsrc/main/webapp/app/exercises/programming/manage/grading/programming-exercise-configure-grading.component.html\n#\tsrc/main/webapp/app/exercises/programming/manage/grading/programming-exercise-configure-grading.component.ts\n#\tsrc/main/webapp/app/exercises/programming/manage/grading/programming-exercise-grading.module.ts\n#\tsrc/main/webapp/app/exercises/programming/manage/programming-exercise.component.html\n#\tsrc/main/webapp/app/exercises/programming/manage/services/programming-exercise-grading.service.ts\n#\tsrc/main/webapp/app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component.ts\n#\tsrc/main/webapp/app/exercises/shared/result/result-detail.component.ts\n#\tsrc/test/java/de/tum/in/www1/artemis/ResultServiceIntegrationTest.java\n#\tsrc/test/java/de/tum/in/www1/artemis/util/ModelFactory.java\n#\tsrc/test/javascript/spec/component/programming-exercise/programming-exercise-configure-grading.component.spec.ts\n#\tsrc/test/javascript/spec/component/programming-exercise/programming-exercise-editable-instruction.component.spec.ts\n#\tsrc/test/javascript/spec/helpers/mocks/service/mock-programming-exercise-grading.service.ts\n#\tsrc/test/javascript/spec/pipe/static-code-analysis-location-text.pipe.spec.ts", "committedDate": "2020-10-01T21:32:06Z", "type": "commit"}, {"oid": "7ce07102a5de3d796a56096600cfadbafb512c5c", "url": "https://github.com/ls1intum/Artemis/commit/7ce07102a5de3d796a56096600cfadbafb512c5c", "message": "fix merge issues", "committedDate": "2020-10-01T21:55:52Z", "type": "commit"}, {"oid": "0441039d9ffbd057d91ccfa2bc723a08c021d4e5", "url": "https://github.com/ls1intum/Artemis/commit/0441039d9ffbd057d91ccfa2bc723a08c021d4e5", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/config/StaticCodeAnalysisConfigurer.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/StaticCodeAnalysisService.java\n#\tsrc/main/resources/config/liquibase/master.xml\n#\tsrc/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.html\n#\tsrc/main/webapp/i18n/de/programmingExercise.json\n#\tsrc/main/webapp/i18n/en/programmingExercise.json\n#\tsrc/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "committedDate": "2020-10-02T13:10:20Z", "type": "commit"}, {"oid": "c9ac2ec3e96fa91b4d5da3d9f77d8d388e1c47e8", "url": "https://github.com/ls1intum/Artemis/commit/c9ac2ec3e96fa91b4d5da3d9f77d8d388e1c47e8", "message": "Merge branch 'develop' into feature/programming-exercise/sca-grading\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/FeedbackService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseGradingResource.java\n#\tsrc/main/webapp/app/exercises/programming/manage/services/programming-exercise-grading.service.ts\n#\tsrc/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java\n#\tsrc/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTestCaseServiceTest.java", "committedDate": "2020-10-03T09:02:38Z", "type": "commit"}, {"oid": "39e53009f68b13a8d649074a1afc4b2a3f5ebe02", "url": "https://github.com/ls1intum/Artemis/commit/39e53009f68b13a8d649074a1afc4b2a3f5ebe02", "message": "adjust sca max penalty", "committedDate": "2020-10-03T09:07:23Z", "type": "commit"}, {"oid": "67630cc7eeba95ee9c3c1aa1f163d267b1d2cc03", "url": "https://github.com/ls1intum/Artemis/commit/67630cc7eeba95ee9c3c1aa1f163d267b1d2cc03", "message": "code cleanup", "committedDate": "2020-10-03T09:14:02Z", "type": "commit"}, {"oid": "a0a7a7d6033612a0a249b6416b845e5bfcfeae22", "url": "https://github.com/ls1intum/Artemis/commit/a0a7a7d6033612a0a249b6416b845e5bfcfeae22", "message": "fix java tests", "committedDate": "2020-10-03T09:24:39Z", "type": "commit"}, {"oid": "3c08ef37cc407e3d1dc2d4f90a62d6a07938e6fe", "url": "https://github.com/ls1intum/Artemis/commit/3c08ef37cc407e3d1dc2d4f90a62d6a07938e6fe", "message": "fix code issues", "committedDate": "2020-10-03T09:40:05Z", "type": "commit"}, {"oid": "698e48679f989d9fb497799bfb001018a5f542a0", "url": "https://github.com/ls1intum/Artemis/commit/698e48679f989d9fb497799bfb001018a5f542a0", "message": "fix client tests", "committedDate": "2020-10-03T10:05:05Z", "type": "commit"}, {"oid": "33772ff28d4488412812ee2624112e82a40059a5", "url": "https://github.com/ls1intum/Artemis/commit/33772ff28d4488412812ee2624112e82a40059a5", "message": "fix java tests", "committedDate": "2020-10-03T10:37:05Z", "type": "commit"}, {"oid": "ba51f645e5cb36b863af1e5bacb7263d5d808643", "url": "https://github.com/ls1intum/Artemis/commit/ba51f645e5cb36b863af1e5bacb7263d5d808643", "message": "fix java tests", "committedDate": "2020-10-03T10:54:36Z", "type": "commit"}, {"oid": "e3cd84c73bc2628a02f9a1d8d55c0e0ba90214ae", "url": "https://github.com/ls1intum/Artemis/commit/e3cd84c73bc2628a02f9a1d8d55c0e0ba90214ae", "message": "adjust tests", "committedDate": "2020-10-03T11:57:15Z", "type": "commit"}, {"oid": "ca11730791f6b106a84775790c2ca8e3ffd8c561", "url": "https://github.com/ls1intum/Artemis/commit/ca11730791f6b106a84775790c2ca8e3ffd8c561", "message": "improve client test coverage", "committedDate": "2020-10-03T13:27:11Z", "type": "commit"}, {"oid": "2e3ce89ae39633a9d8e7715fc2e3893622485995", "url": "https://github.com/ls1intum/Artemis/commit/2e3ce89ae39633a9d8e7715fc2e3893622485995", "message": "fix code issues", "committedDate": "2020-10-03T13:52:19Z", "type": "commit"}, {"oid": "b99a53b76f1cf3d99a1630939fee5d2b37553e7b", "url": "https://github.com/ls1intum/Artemis/commit/b99a53b76f1cf3d99a1630939fee5d2b37553e7b", "message": "rename grading components", "committedDate": "2020-08-13T15:50:31Z", "type": "commit"}, {"oid": "6af99e02bd6a63d8026ef203fe1c9f9dfb62ac6f", "url": "https://github.com/ls1intum/Artemis/commit/6af99e02bd6a63d8026ef203fe1c9f9dfb62ac6f", "message": "create sca category model", "committedDate": "2020-08-13T17:30:19Z", "type": "commit"}, {"oid": "f40b5368b88bcf0f121ce050c8de6808b43ed7cb", "url": "https://github.com/ls1intum/Artemis/commit/f40b5368b88bcf0f121ce050c8de6808b43ed7cb", "message": "fix build", "committedDate": "2020-08-18T07:01:55Z", "type": "commit"}, {"oid": "29c3445405e1d3e91268b4f511b99fcb348204ac", "url": "https://github.com/ls1intum/Artemis/commit/29c3445405e1d3e91268b4f511b99fcb348204ac", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-08-20T11:22:53Z", "type": "commit"}, {"oid": "6403151a6ac7eb23934b5acd0b0ca5dba1b64957", "url": "https://github.com/ls1intum/Artemis/commit/6403151a6ac7eb23934b5acd0b0ca5dba1b64957", "message": "rename folder", "committedDate": "2020-08-27T09:16:05Z", "type": "commit"}, {"oid": "b1c2665374e792bbab68d1d4d48ff423565ec75d", "url": "https://github.com/ls1intum/Artemis/commit/b1c2665374e792bbab68d1d4d48ff423565ec75d", "message": "setup tabbed routing", "committedDate": "2020-08-27T11:02:31Z", "type": "commit"}, {"oid": "acfa44e55bb1dca3b22bc70695839928bb473124", "url": "https://github.com/ls1intum/Artemis/commit/acfa44e55bb1dca3b22bc70695839928bb473124", "message": "add code analysis mapping", "committedDate": "2020-08-27T11:02:54Z", "type": "commit"}, {"oid": "35085b41372324ee3ca9cad4c78fbd64e28583e8", "url": "https://github.com/ls1intum/Artemis/commit/35085b41372324ee3ca9cad4c78fbd64e28583e8", "message": "client formatting", "committedDate": "2020-08-27T11:09:58Z", "type": "commit"}, {"oid": "3a685ca31fa25b73ca3a553e124b8dac9bc3d743", "url": "https://github.com/ls1intum/Artemis/commit/3a685ca31fa25b73ca3a553e124b8dac9bc3d743", "message": "Merge branch 'develop' into feature/automated-grading-page\n\n# Conflicts:\n#\tsrc/main/webapp/app/exercises/programming/manage/test-cases/programming-exercise-manage-test-cases.component.html", "committedDate": "2020-08-27T11:15:55Z", "type": "commit"}, {"oid": "c82977a94e5070226dfbc278a4c033a7630de318", "url": "https://github.com/ls1intum/Artemis/commit/c82977a94e5070226dfbc278a4c033a7630de318", "message": "adjust routing", "committedDate": "2020-08-27T12:14:49Z", "type": "commit"}, {"oid": "6ea36abf749fae3f27796064e4591a57eb74a322", "url": "https://github.com/ls1intum/Artemis/commit/6ea36abf749fae3f27796064e4591a57eb74a322", "message": "fix routing", "committedDate": "2020-08-27T13:07:56Z", "type": "commit"}, {"oid": "a0e705ecb85a7b243e2e3a00107c176635ddef74", "url": "https://github.com/ls1intum/Artemis/commit/a0e705ecb85a7b243e2e3a00107c176635ddef74", "message": "add basic table for static code analysis categories", "committedDate": "2020-08-27T13:16:56Z", "type": "commit"}, {"oid": "3b18f27120aaa52507218dc03d4dd973dd25483a", "url": "https://github.com/ls1intum/Artemis/commit/3b18f27120aaa52507218dc03d4dd973dd25483a", "message": "skip loading when tabs change", "committedDate": "2020-08-28T13:44:23Z", "type": "commit"}, {"oid": "5c79519199c5f4cdb1a79dd2c9e8eba90ec4b4f9", "url": "https://github.com/ls1intum/Artemis/commit/5c79519199c5f4cdb1a79dd2c9e8eba90ec4b4f9", "message": "move inactive checkbox inside tab body", "committedDate": "2020-08-28T13:44:39Z", "type": "commit"}, {"oid": "e6373cb65efb09c055ef2cacea7dd6c75737a273", "url": "https://github.com/ls1intum/Artemis/commit/e6373cb65efb09c055ef2cacea7dd6c75737a273", "message": "Adapt StaticCodeAnalysisReportDTO to reflect changes in the notification plugin", "committedDate": "2020-08-29T17:02:35Z", "type": "commit"}, {"oid": "b359ea08fbeb53d7d6ae9a9e516a689f9eb9978c", "url": "https://github.com/ls1intum/Artemis/commit/b359ea08fbeb53d7d6ae9a9e516a689f9eb9978c", "message": "Save additional static code analysis feedback attributes", "committedDate": "2020-08-29T17:09:10Z", "type": "commit"}, {"oid": "6f6c14ef4023aa7340d6f1ec9eb6f8ae4180ff13", "url": "https://github.com/ls1intum/Artemis/commit/6f6c14ef4023aa7340d6f1ec9eb6f8ae4180ff13", "message": "fix typo", "committedDate": "2020-08-29T17:10:50Z", "type": "commit"}, {"oid": "6646d139d865ab77acbe1bcfd9f25f84cc1c6d04", "url": "https://github.com/ls1intum/Artemis/commit/6646d139d865ab77acbe1bcfd9f25f84cc1c6d04", "message": "Log created static code analysis feedback", "committedDate": "2020-08-29T17:33:45Z", "type": "commit"}, {"oid": "595cc3cc8bc6ec7b7c2f16e18bbdf569657469c4", "url": "https://github.com/ls1intum/Artemis/commit/595cc3cc8bc6ec7b7c2f16e18bbdf569657469c4", "message": "Add Checkstyle and PMD", "committedDate": "2020-08-29T17:38:19Z", "type": "commit"}, {"oid": "85088e3e4b272a899a24d76e20a10afd63dce636", "url": "https://github.com/ls1intum/Artemis/commit/85088e3e4b272a899a24d76e20a10afd63dce636", "message": "update category model", "committedDate": "2020-08-30T15:53:01Z", "type": "commit"}, {"oid": "4a637b8d5f20054b68445c16a624a5117458b130", "url": "https://github.com/ls1intum/Artemis/commit/4a637b8d5f20054b68445c16a624a5117458b130", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-08-30T15:53:43Z", "type": "commit"}, {"oid": "d4349604e53d140552c3fbc199f33fabfe2144ec", "url": "https://github.com/ls1intum/Artemis/commit/d4349604e53d140552c3fbc199f33fabfe2144ec", "message": "change inline editing", "committedDate": "2020-08-30T16:41:43Z", "type": "commit"}, {"oid": "63b4a8ad9e98ca8bfe64982feec3e04dc581cd6e", "url": "https://github.com/ls1intum/Artemis/commit/63b4a8ad9e98ca8bfe64982feec3e04dc581cd6e", "message": "change tab routing", "committedDate": "2020-08-30T17:18:30Z", "type": "commit"}, {"oid": "9084efe02ebfb40ef0383f258fb6f4bfdf68fdcb", "url": "https://github.com/ls1intum/Artemis/commit/9084efe02ebfb40ef0383f258fb6f4bfdf68fdcb", "message": "update category model", "committedDate": "2020-08-31T14:02:24Z", "type": "commit"}, {"oid": "00b18a41345d17fae8e00e7c0ed2c8c03a1b2489", "url": "https://github.com/ls1intum/Artemis/commit/00b18a41345d17fae8e00e7c0ed2c8c03a1b2489", "message": "add state select", "committedDate": "2020-08-31T14:02:40Z", "type": "commit"}, {"oid": "4053e6bfcfb4ead6f7265d52addd4c5841e28d8c", "url": "https://github.com/ls1intum/Artemis/commit/4053e6bfcfb4ead6f7265d52addd4c5841e28d8c", "message": "change button for exam exercises", "committedDate": "2020-08-31T14:02:55Z", "type": "commit"}, {"oid": "6438b918aa03b69430d7dc18b88fcfe13c0d053c", "url": "https://github.com/ls1intum/Artemis/commit/6438b918aa03b69430d7dc18b88fcfe13c0d053c", "message": "update button labels", "committedDate": "2020-08-31T14:03:12Z", "type": "commit"}, {"oid": "2b0869ce6b87d5ac769691e29f17248aced71a49", "url": "https://github.com/ls1intum/Artemis/commit/2b0869ce6b87d5ac769691e29f17248aced71a49", "message": "formatting", "committedDate": "2020-08-31T14:05:45Z", "type": "commit"}, {"oid": "030286a125560ca28404143151bff3a7e2fc8e0e", "url": "https://github.com/ls1intum/Artemis/commit/030286a125560ca28404143151bff3a7e2fc8e0e", "message": "Store student working directory in yml. Set it into the POM and use it to cut source paths for static code analysis", "committedDate": "2020-08-31T14:29:41Z", "type": "commit"}, {"oid": "85c93376ba36eb71c3c01fc1e1dd74e653eb70a3", "url": "https://github.com/ls1intum/Artemis/commit/85c93376ba36eb71c3c01fc1e1dd74e653eb70a3", "message": "Fix version", "committedDate": "2020-08-31T16:21:00Z", "type": "commit"}, {"oid": "0324536032b0b46776d0a873ce7f23d969ca7acd", "url": "https://github.com/ls1intum/Artemis/commit/0324536032b0b46776d0a873ce7f23d969ca7acd", "message": "Fix bug creating the feedback", "committedDate": "2020-08-31T16:36:56Z", "type": "commit"}, {"oid": "57d6a5c1bce73d35bc3138009a9a209cea9a6970", "url": "https://github.com/ls1intum/Artemis/commit/57d6a5c1bce73d35bc3138009a9a209cea9a6970", "message": "Fix checkstyle file name and use google checks", "committedDate": "2020-08-31T16:54:28Z", "type": "commit"}, {"oid": "8e37182a8f19624baca3855827ba3e7f88b8b10e", "url": "https://github.com/ls1intum/Artemis/commit/8e37182a8f19624baca3855827ba3e7f88b8b10e", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-08-31T17:02:43Z", "type": "commit"}, {"oid": "6f5e27a255b51680c419387f831816cdcf6d9946", "url": "https://github.com/ls1intum/Artemis/commit/6f5e27a255b51680c419387f831816cdcf6d9946", "message": "Handle 403 on retrieving build logs for result details component", "committedDate": "2020-08-31T22:31:23Z", "type": "commit"}, {"oid": "5c14ad1d6254dc56b810f972908097b66391fea6", "url": "https://github.com/ls1intum/Artemis/commit/5c14ad1d6254dc56b810f972908097b66391fea6", "message": "Store static code analysis issue in JSON format", "committedDate": "2020-08-31T22:57:58Z", "type": "commit"}, {"oid": "8bbc978be6ae3506bd9d0d34945e2822783fd54c", "url": "https://github.com/ls1intum/Artemis/commit/8bbc978be6ae3506bd9d0d34945e2822783fd54c", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-01T07:55:32Z", "type": "commit"}, {"oid": "7e658134e5729ea06fb74e82d67884566c2a1761", "url": "https://github.com/ls1intum/Artemis/commit/7e658134e5729ea06fb74e82d67884566c2a1761", "message": "Merge branch 'feature/checkstyle-and-pmd-support' of https://github.com/ls1intum/Artemis into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-01T08:00:38Z", "type": "commit"}, {"oid": "0fcfe9c7c0aa7b8c43155e41c476ddd31f4ee480", "url": "https://github.com/ls1intum/Artemis/commit/0fcfe9c7c0aa7b8c43155e41c476ddd31f4ee480", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-01T08:04:52Z", "type": "commit"}, {"oid": "eceb613023d222ff1c10d797a06bb7900b268fcd", "url": "https://github.com/ls1intum/Artemis/commit/eceb613023d222ff1c10d797a06bb7900b268fcd", "message": "Merge branch 'feature/checkstyle-and-pmd-support' of https://github.com/ls1intum/Artemis into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-01T08:05:17Z", "type": "commit"}, {"oid": "9335bf87fc4225a0a036a8e2303fdefe771ac1d1", "url": "https://github.com/ls1intum/Artemis/commit/9335bf87fc4225a0a036a8e2303fdefe771ac1d1", "message": "Remove first unix separator", "committedDate": "2020-09-01T08:57:09Z", "type": "commit"}, {"oid": "73e8b1c7c8d082f6ae08e9a2ac0b09967af885da", "url": "https://github.com/ls1intum/Artemis/commit/73e8b1c7c8d082f6ae08e9a2ac0b09967af885da", "message": "Use default ruleset", "committedDate": "2020-09-01T09:27:33Z", "type": "commit"}, {"oid": "7eb84d5cfe2433ebe6554d436ca831e9ec35a516", "url": "https://github.com/ls1intum/Artemis/commit/7eb84d5cfe2433ebe6554d436ca831e9ec35a516", "message": "Add issue model for client", "committedDate": "2020-09-01T09:28:42Z", "type": "commit"}, {"oid": "2dfbb83c1905959116ca0dc31c538e9755c39d5a", "url": "https://github.com/ls1intum/Artemis/commit/2dfbb83c1905959116ca0dc31c538e9755c39d5a", "message": "Do not include empty values when serializing issue", "committedDate": "2020-09-01T09:42:55Z", "type": "commit"}, {"oid": "eed88fb9d510ec8ef58cfe0fd68f7d91d33e253a", "url": "https://github.com/ls1intum/Artemis/commit/eed88fb9d510ec8ef58cfe0fd68f7d91d33e253a", "message": "Adapt tests", "committedDate": "2020-09-01T11:47:58Z", "type": "commit"}, {"oid": "db1fb5a14d2a27e35fea0ae2874e7e9232e6de4b", "url": "https://github.com/ls1intum/Artemis/commit/db1fb5a14d2a27e35fea0ae2874e7e9232e6de4b", "message": "Adapt ModelFactory", "committedDate": "2020-09-01T11:58:18Z", "type": "commit"}, {"oid": "53b32f8b77cb9fbef4047752cfb7579ce2f0970f", "url": "https://github.com/ls1intum/Artemis/commit/53b32f8b77cb9fbef4047752cfb7579ce2f0970f", "message": "change routing to param-based tab", "committedDate": "2020-09-01T12:14:15Z", "type": "commit"}, {"oid": "cd81941dcbd79340fd31517c79defa6385697081", "url": "https://github.com/ls1intum/Artemis/commit/cd81941dcbd79340fd31517c79defa6385697081", "message": "update tests", "committedDate": "2020-09-01T12:31:50Z", "type": "commit"}, {"oid": "62c0da33d9e161c85576710d7751a6547d9f412f", "url": "https://github.com/ls1intum/Artemis/commit/62c0da33d9e161c85576710d7751a6547d9f412f", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-09-01T12:32:58Z", "type": "commit"}, {"oid": "17b5d7c034731bac806ac170a02da0c8d845b591", "url": "https://github.com/ls1intum/Artemis/commit/17b5d7c034731bac806ac170a02da0c8d845b591", "message": "fix formatting", "committedDate": "2020-09-01T12:52:55Z", "type": "commit"}, {"oid": "e978c4e59cc62abfeeeb35e39981a3e82e7e1146", "url": "https://github.com/ls1intum/Artemis/commit/e978c4e59cc62abfeeeb35e39981a3e82e7e1146", "message": "Fix tests", "committedDate": "2020-09-01T13:03:44Z", "type": "commit"}, {"oid": "3b1f28e26c82528e5f1b0e65794d6e075ac76a66", "url": "https://github.com/ls1intum/Artemis/commit/3b1f28e26c82528e5f1b0e65794d6e075ac76a66", "message": "add test", "committedDate": "2020-09-01T14:08:37Z", "type": "commit"}, {"oid": "aea050e6877869126704adc0677f8b3c40a418d3", "url": "https://github.com/ls1intum/Artemis/commit/aea050e6877869126704adc0677f8b3c40a418d3", "message": "Store student working directory as a Constant", "committedDate": "2020-09-01T14:38:50Z", "type": "commit"}, {"oid": "3c654fdeaf90bd986dd16fc943f76806a3205fef", "url": "https://github.com/ls1intum/Artemis/commit/3c654fdeaf90bd986dd16fc943f76806a3205fef", "message": "Rollback property definition", "committedDate": "2020-09-01T14:39:56Z", "type": "commit"}, {"oid": "e08ebea786c36227ca050b2c4d763bc8d9d0f7ff", "url": "https://github.com/ls1intum/Artemis/commit/e08ebea786c36227ca050b2c4d763bc8d9d0f7ff", "message": "Remove unused import", "committedDate": "2020-09-01T14:43:52Z", "type": "commit"}, {"oid": "16d52a394248ce136b8b45bda7e7c196ac8acb7a", "url": "https://github.com/ls1intum/Artemis/commit/16d52a394248ce136b8b45bda7e7c196ac8acb7a", "message": "Doc and remove logging", "committedDate": "2020-09-01T16:15:34Z", "type": "commit"}, {"oid": "b38a2051ac536ab1df3566f8337b45ef14da60ea", "url": "https://github.com/ls1intum/Artemis/commit/b38a2051ac536ab1df3566f8337b45ef14da60ea", "message": "Add entities for static code analysis configuration", "committedDate": "2020-09-01T16:48:38Z", "type": "commit"}, {"oid": "c91015699b4c9626cfe5e6bad1d6491a6b4a0b4f", "url": "https://github.com/ls1intum/Artemis/commit/c91015699b4c9626cfe5e6bad1d6491a6b4a0b4f", "message": "Enhance pipe", "committedDate": "2020-09-01T19:15:34Z", "type": "commit"}, {"oid": "bfe2446866a41e7a10d2ae3b4f2ca1542acd83a8", "url": "https://github.com/ls1intum/Artemis/commit/bfe2446866a41e7a10d2ae3b4f2ca1542acd83a8", "message": "Improve wording", "committedDate": "2020-09-01T19:55:09Z", "type": "commit"}, {"oid": "f799e3afccce5667b7d02ca20f4a5fc37a173286", "url": "https://github.com/ls1intum/Artemis/commit/f799e3afccce5667b7d02ca20f4a5fc37a173286", "message": "Change generated filePath in tests", "committedDate": "2020-09-01T20:00:24Z", "type": "commit"}, {"oid": "95520c9da10e86b32bef1b11d562122ad04c2027", "url": "https://github.com/ls1intum/Artemis/commit/95520c9da10e86b32bef1b11d562122ad04c2027", "message": "Add integration test for FeedbackService", "committedDate": "2020-09-01T20:46:20Z", "type": "commit"}, {"oid": "e003cab38be15d4ee5d916b99522f00444bbe791", "url": "https://github.com/ls1intum/Artemis/commit/e003cab38be15d4ee5d916b99522f00444bbe791", "message": "Improve coverage", "committedDate": "2020-09-01T21:37:14Z", "type": "commit"}, {"oid": "9ded6267add73934fc29c3e9d53319330ff8bd09", "url": "https://github.com/ls1intum/Artemis/commit/9ded6267add73934fc29c3e9d53319330ff8bd09", "message": "Improve comment", "committedDate": "2020-09-01T21:39:54Z", "type": "commit"}, {"oid": "ac03c6c2536b0ddeaf874cd66e4731ae5488c0ec", "url": "https://github.com/ls1intum/Artemis/commit/ac03c6c2536b0ddeaf874cd66e4731ae5488c0ec", "message": "Database changes", "committedDate": "2020-09-03T12:49:23Z", "type": "commit"}, {"oid": "cb10a04f30845357e32688895d4e37afb6a2cfba", "url": "https://github.com/ls1intum/Artemis/commit/cb10a04f30845357e32688895d4e37afb6a2cfba", "message": "Database changes", "committedDate": "2020-09-03T12:53:08Z", "type": "commit"}, {"oid": "b768eff38a83dbdbd991dd326011d4909363e1d7", "url": "https://github.com/ls1intum/Artemis/commit/b768eff38a83dbdbd991dd326011d4909363e1d7", "message": "Revert \"Database changes\"\n\nThis reverts commit ac03c6c2", "committedDate": "2020-09-03T12:54:39Z", "type": "commit"}, {"oid": "7f5d90fbf5b71f667213ceecde08779ee29d7c61", "url": "https://github.com/ls1intum/Artemis/commit/7f5d90fbf5b71f667213ceecde08779ee29d7c61", "message": "Merge branch 'develop' into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-03T12:57:05Z", "type": "commit"}, {"oid": "2daedd73ea279072beb78dbdcf3517f5f68cdc36", "url": "https://github.com/ls1intum/Artemis/commit/2daedd73ea279072beb78dbdcf3517f5f68cdc36", "message": "Remove dead code", "committedDate": "2020-09-03T13:36:59Z", "type": "commit"}, {"oid": "3d829e5350a01c18175ce933e018176c48e719b9", "url": "https://github.com/ls1intum/Artemis/commit/3d829e5350a01c18175ce933e018176c48e719b9", "message": "Merge branch 'develop' into feature/checkstyle-and-pmd-support", "committedDate": "2020-09-03T13:45:35Z", "type": "commit"}, {"oid": "cb01a28704224ebbf21928d96fe4451963de61dc", "url": "https://github.com/ls1intum/Artemis/commit/cb01a28704224ebbf21928d96fe4451963de61dc", "message": "Add repo, service, repository and first integration test", "committedDate": "2020-09-03T18:06:14Z", "type": "commit"}, {"oid": "15107d5101c5982f3d21f836c8c8c1347eb893e8", "url": "https://github.com/ls1intum/Artemis/commit/15107d5101c5982f3d21f836c8c8c1347eb893e8", "message": "Merge branch 'feature/static-code-analysis-configuration-data-model' of https://github.com/ls1intum/Artemis into feature/static-code-analysis-configuration-data-model", "committedDate": "2020-09-03T18:06:38Z", "type": "commit"}, {"oid": "ea072e206559ef006a67c0a9659fe4e214e990cd", "url": "https://github.com/ls1intum/Artemis/commit/ea072e206559ef006a67c0a9659fe4e214e990cd", "message": "hide tabs when sca is disabled", "committedDate": "2020-09-03T20:21:12Z", "type": "commit"}, {"oid": "c208bf1e0d860bbbf8b30aa6129b01ece7d60d38", "url": "https://github.com/ls1intum/Artemis/commit/c208bf1e0d860bbbf8b30aa6129b01ece7d60d38", "message": "remove extra loading icon", "committedDate": "2020-09-03T20:22:31Z", "type": "commit"}, {"oid": "34f3f5307b1031735a02357565faa85074b236ce", "url": "https://github.com/ls1intum/Artemis/commit/34f3f5307b1031735a02357565faa85074b236ce", "message": "Merge branch 'develop' into feature/automated-grading-page", "committedDate": "2020-09-03T20:24:14Z", "type": "commit"}, {"oid": "6b1a0cbb67207969766d828a799acdb4f07debce", "url": "https://github.com/ls1intum/Artemis/commit/6b1a0cbb67207969766d828a799acdb4f07debce", "message": "fix type issue", "committedDate": "2020-09-03T22:09:42Z", "type": "commit"}, {"oid": "8224efc016840a116fac8e98410d6be7ab8beeee", "url": "https://github.com/ls1intum/Artemis/commit/8224efc016840a116fac8e98410d6be7ab8beeee", "message": "fix tests", "committedDate": "2020-09-03T22:15:26Z", "type": "commit"}, {"oid": "e484d486cdc77151e8a64f4fd512321c4d768a1b", "url": "https://github.com/ls1intum/Artemis/commit/e484d486cdc77151e8a64f4fd512321c4d768a1b", "message": "fix tests", "committedDate": "2020-09-04T21:48:11Z", "type": "commit"}, {"oid": "d1eaaa38185e04f3d642d56c53c4b0919d79966b", "url": "https://github.com/ls1intum/Artemis/commit/d1eaaa38185e04f3d642d56c53c4b0919d79966b", "message": "Fix format", "committedDate": "2020-09-07T11:17:30Z", "type": "commit"}, {"oid": "171c5102c02ab0a1d2692ec097861fc19ce62931", "url": "https://github.com/ls1intum/Artemis/commit/171c5102c02ab0a1d2692ec097861fc19ce62931", "message": "Remove unused var", "committedDate": "2020-09-07T11:17:56Z", "type": "commit"}, {"oid": "0e8cc6073beb0ba05be672748be080f69388c6c5", "url": "https://github.com/ls1intum/Artemis/commit/0e8cc6073beb0ba05be672748be080f69388c6c5", "message": "Fix codacy issue", "committedDate": "2020-09-07T11:19:00Z", "type": "commit"}, {"oid": "4de5e2b5fa9ab02fece9031e6c536957c9d19e27", "url": "https://github.com/ls1intum/Artemis/commit/4de5e2b5fa9ab02fece9031e6c536957c9d19e27", "message": "Implement update of static code analysis categories", "committedDate": "2020-09-07T13:58:32Z", "type": "commit"}, {"oid": "1464eb5a87498ffb78d0a380ec99b89e668f54c2", "url": "https://github.com/ls1intum/Artemis/commit/1464eb5a87498ffb78d0a380ec99b89e668f54c2", "message": "Refactor and extend static code analysis setting validation", "committedDate": "2020-09-07T17:49:48Z", "type": "commit"}, {"oid": "b6c26bbc02ee29152907665843701cdcd6dbaf32", "url": "https://github.com/ls1intum/Artemis/commit/b6c26bbc02ee29152907665843701cdcd6dbaf32", "message": "Fix comment", "committedDate": "2020-09-07T17:50:40Z", "type": "commit"}, {"oid": "85c9b5afe478faf544d93a64cda68452d316ceea", "url": "https://github.com/ls1intum/Artemis/commit/85c9b5afe478faf544d93a64cda68452d316ceea", "message": "Adjust tests", "committedDate": "2020-09-08T15:37:09Z", "type": "commit"}, {"oid": "85496c80ed1f17f2690fd03b488dc13ebd0f8ca7", "url": "https://github.com/ls1intum/Artemis/commit/85496c80ed1f17f2690fd03b488dc13ebd0f8ca7", "message": "Add bonus pint integration test", "committedDate": "2020-09-08T16:26:47Z", "type": "commit"}, {"oid": "3985ab2cd1e4a869d495bd98560243d7439bf453", "url": "https://github.com/ls1intum/Artemis/commit/3985ab2cd1e4a869d495bd98560243d7439bf453", "message": "Fix test", "committedDate": "2020-09-09T09:57:09Z", "type": "commit"}, {"oid": "e1197ad2dc588667e18fd0c9ca24d4bf73d8fa5f", "url": "https://github.com/ls1intum/Artemis/commit/e1197ad2dc588667e18fd0c9ca24d4bf73d8fa5f", "message": "Fix tests", "committedDate": "2020-09-09T11:10:50Z", "type": "commit"}, {"oid": "ec8dd0c079740d5fcb82130cb6d1fe1a0e25f599", "url": "https://github.com/ls1intum/Artemis/commit/ec8dd0c079740d5fcb82130cb6d1fe1a0e25f599", "message": "Validate static code analysis settings", "committedDate": "2020-09-09T12:20:19Z", "type": "commit"}, {"oid": "fa7efca0f4ae6db28414c89bcf3093e95ed2bc3d", "url": "https://github.com/ls1intum/Artemis/commit/fa7efca0f4ae6db28414c89bcf3093e95ed2bc3d", "message": "Add category mapping as JSON", "committedDate": "2020-09-09T18:29:19Z", "type": "commit"}, {"oid": "e06d38962159248434f21bca5bf65e0c3053b2a2", "url": "https://github.com/ls1intum/Artemis/commit/e06d38962159248434f21bca5bf65e0c3053b2a2", "message": "Read in the default configuration for static code analysis on application startup", "committedDate": "2020-09-14T12:29:00Z", "type": "commit"}, {"oid": "1bf32ff29d2236f6168f79e2cb1850ede7ddbfa1", "url": "https://github.com/ls1intum/Artemis/commit/1bf32ff29d2236f6168f79e2cb1850ede7ddbfa1", "message": "Fix json file", "committedDate": "2020-09-14T13:09:46Z", "type": "commit"}, {"oid": "c5306d3f6e20d8ed8a44070ed71d72abbd3a6b8e", "url": "https://github.com/ls1intum/Artemis/commit/c5306d3f6e20d8ed8a44070ed71d72abbd3a6b8e", "message": "D", "committedDate": "2020-09-14T15:47:03Z", "type": "commit"}, {"oid": "10d7c27839b4428782c22bb3a81a6db630e042b1", "url": "https://github.com/ls1intum/Artemis/commit/10d7c27839b4428782c22bb3a81a6db630e042b1", "message": "improve feedback generation in bamboo service", "committedDate": "2020-09-15T09:52:31Z", "type": "commit"}, {"oid": "67ed57602e16bc282457f7f16856edc9725e333d", "url": "https://github.com/ls1intum/Artemis/commit/67ed57602e16bc282457f7f16856edc9725e333d", "message": "Add integration realistic integration test with static code analysis", "committedDate": "2020-09-15T10:43:01Z", "type": "commit"}, {"oid": "237b39f84d6f10f1dec8a43772c0ceb0e0cdc4ac", "url": "https://github.com/ls1intum/Artemis/commit/237b39f84d6f10f1dec8a43772c0ceb0e0cdc4ac", "message": "More integration tests for update functionality", "committedDate": "2020-09-15T12:10:31Z", "type": "commit"}, {"oid": "09b1122ab70fc0c0f365b45296d900ca2784c33d", "url": "https://github.com/ls1intum/Artemis/commit/09b1122ab70fc0c0f365b45296d900ca2784c33d", "message": "Add more integration tests", "committedDate": "2020-09-15T19:43:31Z", "type": "commit"}, {"oid": "a937254601fba6c24815d3ce01ce951315bded40", "url": "https://github.com/ls1intum/Artemis/commit/a937254601fba6c24815d3ce01ce951315bded40", "message": "Copy categories on import", "committedDate": "2020-09-16T10:45:00Z", "type": "commit"}, {"oid": "86676d3dd2c53b77029f9f93aeb27f11a3137d3d", "url": "https://github.com/ls1intum/Artemis/commit/86676d3dd2c53b77029f9f93aeb27f11a3137d3d", "message": "fix feedback generation in jenkins service", "committedDate": "2020-09-16T12:17:58Z", "type": "commit"}, {"oid": "06a3f3a113cd923d4974c62694ab069ab47d11e5", "url": "https://github.com/ls1intum/Artemis/commit/06a3f3a113cd923d4974c62694ab069ab47d11e5", "message": "remove non-functional retrieveLatestResult methods in CIServices", "committedDate": "2020-09-16T12:19:21Z", "type": "commit"}, {"oid": "dcf4ab6c9017b531e8b0e08a058ec1ad2a3176eb", "url": "https://github.com/ls1intum/Artemis/commit/dcf4ab6c9017b531e8b0e08a058ec1ad2a3176eb", "message": "rename onBuildCompleted method", "committedDate": "2020-09-16T12:19:38Z", "type": "commit"}, {"oid": "d51480812d09b58ab8b079e26fb684f888aea14e", "url": "https://github.com/ls1intum/Artemis/commit/d51480812d09b58ab8b079e26fb684f888aea14e", "message": "remove unused method in JenkinsService", "committedDate": "2020-09-16T12:21:08Z", "type": "commit"}]}