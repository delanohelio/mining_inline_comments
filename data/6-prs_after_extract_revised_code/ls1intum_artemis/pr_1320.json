{"pr_number": 1320, "pr_title": "Store Apollon Diagrams per course", "pr_createdAt": "2020-04-18T20:44:35Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1320", "timeline": [{"oid": "79ec002561d5068e6ff85772c6d45969d38379da", "url": "https://github.com/ls1intum/Artemis/commit/79ec002561d5068e6ff85772c6d45969d38379da", "message": "Add course id to apollon diagram model", "committedDate": "2020-04-18T20:41:20Z", "type": "commit"}, {"oid": "7c9bbe24f25b25683272661d56ef8f75302f49fc", "url": "https://github.com/ls1intum/Artemis/commit/7c9bbe24f25b25683272661d56ef8f75302f49fc", "message": "changed database model for apollon diagrams to include courseId", "committedDate": "2020-04-26T10:09:31Z", "type": "commit"}, {"oid": "19443b465e0044d356c7471376aa15956668abe7", "url": "https://github.com/ls1intum/Artemis/commit/19443b465e0044d356c7471376aa15956668abe7", "message": "changed route + assign courseId to new diagram", "committedDate": "2020-04-26T10:10:49Z", "type": "commit"}, {"oid": "c782de5b451a012f7d1b32fa67e928a53f2d40fd", "url": "https://github.com/ls1intum/Artemis/commit/c782de5b451a012f7d1b32fa67e928a53f2d40fd", "message": "changed query for diagrams", "committedDate": "2020-04-27T15:26:34Z", "type": "commit"}, {"oid": "c21880a55bf07274aa9d4c3e2333350b789306da", "url": "https://github.com/ls1intum/Artemis/commit/c21880a55bf07274aa9d4c3e2333350b789306da", "message": "clean up", "committedDate": "2020-04-27T15:27:52Z", "type": "commit"}, {"oid": "4148b40a2cbbbc37d92152550a76473195a5cab8", "url": "https://github.com/ls1intum/Artemis/commit/4148b40a2cbbbc37d92152550a76473195a5cab8", "message": "open button fix", "committedDate": "2020-04-27T20:36:52Z", "type": "commit"}, {"oid": "e529672a1c0658ae0b0a25ca359f5d03e762be84", "url": "https://github.com/ls1intum/Artemis/commit/e529672a1c0658ae0b0a25ca359f5d03e762be84", "message": "show old diagrams", "committedDate": "2020-05-01T15:12:52Z", "type": "commit"}, {"oid": "840df21b57615110532ccf011b49576e928cc069", "url": "https://github.com/ls1intum/Artemis/commit/840df21b57615110532ccf011b49576e928cc069", "message": "translate courseID column", "committedDate": "2020-05-01T15:19:10Z", "type": "commit"}, {"oid": "e4005ffa5f2692ebe2faa9034c8e220e73451b14", "url": "https://github.com/ls1intum/Artemis/commit/e4005ffa5f2692ebe2faa9034c8e220e73451b14", "message": "prettier", "committedDate": "2020-05-02T16:30:57Z", "type": "commit"}, {"oid": "6c0e7aadf1632812b54208f4686763569936f7bf", "url": "https://github.com/ls1intum/Artemis/commit/6c0e7aadf1632812b54208f4686763569936f7bf", "message": "test fix", "committedDate": "2020-05-02T16:48:12Z", "type": "commit"}, {"oid": "2153f53cf88c8da55229ffe2dafe104e404b5b4b", "url": "https://github.com/ls1intum/Artemis/commit/2153f53cf88c8da55229ffe2dafe104e404b5b4b", "message": "jetzt aber", "committedDate": "2020-05-02T16:56:06Z", "type": "commit"}, {"oid": "025d327cfec0d1865d9ec8afe7331d4dacc46023", "url": "https://github.com/ls1intum/Artemis/commit/025d327cfec0d1865d9ec8afe7331d4dacc46023", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-02T17:13:08Z", "type": "commit"}, {"oid": "2c971a7654bcb7920305f9c6391615bf88d14cf8", "url": "https://github.com/ls1intum/Artemis/commit/2c971a7654bcb7920305f9c6391615bf88d14cf8", "message": "comments + clean up", "committedDate": "2020-05-02T20:21:10Z", "type": "commit"}, {"oid": "ee5ceb59977995d30d3b8174346887ae09ed66fd", "url": "https://github.com/ls1intum/Artemis/commit/ee5ceb59977995d30d3b8174346887ae09ed66fd", "message": "test", "committedDate": "2020-05-02T20:21:21Z", "type": "commit"}, {"oid": "422790321969f28fe94bbd3b8d640eeee011c981", "url": "https://github.com/ls1intum/Artemis/commit/422790321969f28fe94bbd3b8d640eeee011c981", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-03T19:43:12Z", "type": "commit"}, {"oid": "8fc67b12faad7f5e674f4589596628cee6e455b9", "url": "https://github.com/ls1intum/Artemis/commit/8fc67b12faad7f5e674f4589596628cee6e455b9", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-04T16:51:26Z", "type": "commit"}, {"oid": "af0eee09bf94f2f41dcc25e6be8b2ef287f4daf4", "url": "https://github.com/ls1intum/Artemis/commit/af0eee09bf94f2f41dcc25e6be8b2ef287f4daf4", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-04T19:29:23Z", "type": "commit"}, {"oid": "0500386b0afd4a667d99ccc6a96174e436337644", "url": "https://github.com/ls1intum/Artemis/commit/0500386b0afd4a667d99ccc6a96174e436337644", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-04T21:54:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4ODA2OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419788069", "bodyText": "I think the native query is not necessary here. List<ApollonDiagram> findDiagramsByCourse(Long courseId); should be enough and the JPA implementation will do all the magic.\nE.g. compare to implementation in TutorLeaderboardComplaintsViewRepository.java.", "author": "sascha11110", "createdAt": "2020-05-04T23:32:14Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java", "diffHunk": "@@ -12,4 +15,6 @@\n @Repository\n public interface ApollonDiagramRepository extends JpaRepository<ApollonDiagram, Long> {\n \n+    @Query(\"SELECT a FROM ApollonDiagram a WHERE a.courseId = :#{#courseId} OR a.courseId is null\")", "originalCommit": "0500386b0afd4a667d99ccc6a96174e436337644", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd00d9e6d59cb6c208e7f425093387f0a1323ef7", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java b/src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java\nindex 11789003b..a343b4241 100644\n--- a/src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java\n+++ b/src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java\n\n@@ -15,6 +14,5 @@ import de.tum.in.www1.artemis.domain.modeling.ApollonDiagram;\n @Repository\n public interface ApollonDiagramRepository extends JpaRepository<ApollonDiagram, Long> {\n \n-    @Query(\"SELECT a FROM ApollonDiagram a WHERE a.courseId = :#{#courseId} OR a.courseId is null\")\n-    List<ApollonDiagram> findDiagramsByCourse(Long courseId);\n+    List<ApollonDiagram> findDiagramsByCourseId(Long courseId);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4ODk2MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419788961", "bodyText": "Typo", "author": "sascha11110", "createdAt": "2020-05-04T23:35:18Z", "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetDiagramsByCourse() throws Exception {\n+        apollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(apollonDiagram);\n+        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newApollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newApollonDiagram);\n+        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newerApollonDiagram.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newerApollonDiagram);\n+        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();", "originalCommit": "0500386b0afd4a667d99ccc6a96174e436337644", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a2c7a3b9bcb79cea689c959069b912dd7f5adc1", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\nindex 55434dc29..50cf860fd 100644\n--- a/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\n\n@@ -95,28 +95,27 @@ public class ApollonDiagramResourceIntegrationTest extends AbstractSpringIntegra\n     public void testGetDiagramsByCourse() throws Exception {\n         apollonDiagram.setCourseId((long) 1);\n         apollonDiagramRepository.save(apollonDiagram);\n-        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n-        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n-\n-        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n-        newApollonDiagram.setCourseId((long) 1);\n-        apollonDiagramRepository.save(newApollonDiagram);\n-        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n-\n-        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n-        newerApollonDiagram.setCourseId((long) 2);\n-        apollonDiagramRepository.save(newerApollonDiagram);\n-        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updateder response has length 2\").isEqualTo(2);\n-\n-        updatedResponse = request.get(\"/api/apollon-diagrams/list/2\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updateder response has length 1\").isEqualTo(1);\n-\n+        List<ApollonDiagram> responseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(responseCourse1.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(responseCourse1.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newDiagramCourse1 = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newDiagramCourse1.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newDiagramCourse1);\n+        List<ApollonDiagram> updatedResponseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponseCourse1.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponseCourse1.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newDiagramCourse2 = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newDiagramCourse2.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newDiagramCourse2);\n+        updatedResponseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponseCourse1.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponseCourse1.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        List<ApollonDiagram> responseCourse2 = request.get(\"/api/apollon-diagrams/list/2\", HttpStatus.OK, List.class);\n+        assertThat(responseCourse2.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(responseCourse2.size()).as(\"updated response has length 1\").isEqualTo(1);\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTAwNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419789005", "bodyText": "Typo", "author": "sascha11110", "createdAt": "2020-05-04T23:35:27Z", "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetDiagramsByCourse() throws Exception {\n+        apollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(apollonDiagram);\n+        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newApollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newApollonDiagram);\n+        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newerApollonDiagram.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newerApollonDiagram);\n+        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n+        assertThat(updatedResponse.size()).as(\"updateder response has length 2\").isEqualTo(2);", "originalCommit": "0500386b0afd4a667d99ccc6a96174e436337644", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a2c7a3b9bcb79cea689c959069b912dd7f5adc1", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\nindex 55434dc29..50cf860fd 100644\n--- a/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\n\n@@ -95,28 +95,27 @@ public class ApollonDiagramResourceIntegrationTest extends AbstractSpringIntegra\n     public void testGetDiagramsByCourse() throws Exception {\n         apollonDiagram.setCourseId((long) 1);\n         apollonDiagramRepository.save(apollonDiagram);\n-        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n-        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n-\n-        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n-        newApollonDiagram.setCourseId((long) 1);\n-        apollonDiagramRepository.save(newApollonDiagram);\n-        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n-\n-        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n-        newerApollonDiagram.setCourseId((long) 2);\n-        apollonDiagramRepository.save(newerApollonDiagram);\n-        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updateder response has length 2\").isEqualTo(2);\n-\n-        updatedResponse = request.get(\"/api/apollon-diagrams/list/2\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updateder response has length 1\").isEqualTo(1);\n-\n+        List<ApollonDiagram> responseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(responseCourse1.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(responseCourse1.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newDiagramCourse1 = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newDiagramCourse1.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newDiagramCourse1);\n+        List<ApollonDiagram> updatedResponseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponseCourse1.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponseCourse1.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newDiagramCourse2 = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newDiagramCourse2.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newDiagramCourse2);\n+        updatedResponseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponseCourse1.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponseCourse1.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        List<ApollonDiagram> responseCourse2 = request.get(\"/api/apollon-diagrams/list/2\", HttpStatus.OK, List.class);\n+        assertThat(responseCourse2.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(responseCourse2.size()).as(\"updated response has length 1\").isEqualTo(1);\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTU5MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419789591", "bodyText": "In general you might test here that the evaluation of the courseId actually works. E.g. add two diagrams with different courses to the repository and test that only the one with the matching course is returned.", "author": "sascha11110", "createdAt": "2020-05-04T23:37:35Z", "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test", "originalCommit": "0500386b0afd4a667d99ccc6a96174e436337644", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4NTI3Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419985276", "bodyText": "As discussed.", "author": "sjagla27", "createdAt": "2020-05-05T09:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9a2c7a3b9bcb79cea689c959069b912dd7f5adc1", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\nindex 55434dc29..50cf860fd 100644\n--- a/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java\n\n@@ -95,28 +95,27 @@ public class ApollonDiagramResourceIntegrationTest extends AbstractSpringIntegra\n     public void testGetDiagramsByCourse() throws Exception {\n         apollonDiagram.setCourseId((long) 1);\n         apollonDiagramRepository.save(apollonDiagram);\n-        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n-        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n-\n-        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n-        newApollonDiagram.setCourseId((long) 1);\n-        apollonDiagramRepository.save(newApollonDiagram);\n-        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n-\n-        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n-        newerApollonDiagram.setCourseId((long) 2);\n-        apollonDiagramRepository.save(newerApollonDiagram);\n-        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updateder response has length 2\").isEqualTo(2);\n-\n-        updatedResponse = request.get(\"/api/apollon-diagrams/list/2\", HttpStatus.OK, List.class);\n-        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n-        assertThat(updatedResponse.size()).as(\"updateder response has length 1\").isEqualTo(1);\n-\n+        List<ApollonDiagram> responseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(responseCourse1.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(responseCourse1.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newDiagramCourse1 = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newDiagramCourse1.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newDiagramCourse1);\n+        List<ApollonDiagram> updatedResponseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponseCourse1.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponseCourse1.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newDiagramCourse2 = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newDiagramCourse2.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newDiagramCourse2);\n+        updatedResponseCourse1 = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponseCourse1.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponseCourse1.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        List<ApollonDiagram> responseCourse2 = request.get(\"/api/apollon-diagrams/list/2\", HttpStatus.OK, List.class);\n+        assertThat(responseCourse2.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(responseCourse2.size()).as(\"updated response has length 1\").isEqualTo(1);\n     }\n \n     @Test\n"}}, {"oid": "9a2c7a3b9bcb79cea689c959069b912dd7f5adc1", "url": "https://github.com/ls1intum/Artemis/commit/9a2c7a3b9bcb79cea689c959069b912dd7f5adc1", "message": "test easier to read", "committedDate": "2020-05-05T09:41:57Z", "type": "commit"}, {"oid": "dd00d9e6d59cb6c208e7f425093387f0a1323ef7", "url": "https://github.com/ls1intum/Artemis/commit/dd00d9e6d59cb6c208e7f425093387f0a1323ef7", "message": "better query", "committedDate": "2020-05-05T10:06:13Z", "type": "commit"}, {"oid": "e3e94775f42447739102f6eb4c4bae6daf018a00", "url": "https://github.com/ls1intum/Artemis/commit/e3e94775f42447739102f6eb4c4bae6daf018a00", "message": "code style", "committedDate": "2020-05-05T10:09:40Z", "type": "commit"}, {"oid": "9e3a4643139d8f3dbac2a5291924cb43982a2351", "url": "https://github.com/ls1intum/Artemis/commit/9e3a4643139d8f3dbac2a5291924cb43982a2351", "message": "if i could type", "committedDate": "2020-05-05T10:16:14Z", "type": "commit"}, {"oid": "5275f4237a635f3a58daaaeda4750555c593ea48", "url": "https://github.com/ls1intum/Artemis/commit/5275f4237a635f3a58daaaeda4750555c593ea48", "message": "quiz generation in course context", "committedDate": "2020-05-10T19:15:35Z", "type": "commit"}, {"oid": "5545cbab540aa9888bdec45ce2daaf987d53621c", "url": "https://github.com/ls1intum/Artemis/commit/5545cbab540aa9888bdec45ce2daaf987d53621c", "message": "quiz exercise generation ready", "committedDate": "2020-05-10T19:16:17Z", "type": "commit"}, {"oid": "d75e3fd6d56c77a87297dc845568362545b6429d", "url": "https://github.com/ls1intum/Artemis/commit/d75e3fd6d56c77a87297dc845568362545b6429d", "message": "comment", "committedDate": "2020-05-10T21:39:37Z", "type": "commit"}, {"oid": "d75e3fd6d56c77a87297dc845568362545b6429d", "url": "https://github.com/ls1intum/Artemis/commit/d75e3fd6d56c77a87297dc845568362545b6429d", "message": "comment", "committedDate": "2020-05-10T21:39:37Z", "type": "forcePushed"}, {"oid": "7d970b1ed27a0622f8c3fe16bdfdddf562b02219", "url": "https://github.com/ls1intum/Artemis/commit/7d970b1ed27a0622f8c3fe16bdfdddf562b02219", "message": "server side security", "committedDate": "2020-05-11T15:15:02Z", "type": "commit"}, {"oid": "407491b84671f84d980619445e9554e581397403", "url": "https://github.com/ls1intum/Artemis/commit/407491b84671f84d980619445e9554e581397403", "message": "code style", "committedDate": "2020-05-11T16:07:45Z", "type": "commit"}, {"oid": "86bf641eeeac37c8a653c2f0dcab6f3606b69c0a", "url": "https://github.com/ls1intum/Artemis/commit/86bf641eeeac37c8a653c2f0dcab6f3606b69c0a", "message": "diagrams without courseId not shown anymore", "committedDate": "2020-05-11T16:16:19Z", "type": "commit"}, {"oid": "148a71a096d3e3a0cb2ccbd757085a67ee20d53b", "url": "https://github.com/ls1intum/Artemis/commit/148a71a096d3e3a0cb2ccbd757085a67ee20d53b", "message": "style", "committedDate": "2020-05-11T16:17:27Z", "type": "commit"}, {"oid": "0e696d739325cf8531d81ca28a80ab585a51af00", "url": "https://github.com/ls1intum/Artemis/commit/0e696d739325cf8531d81ca28a80ab585a51af00", "message": "revert", "committedDate": "2020-05-11T17:29:12Z", "type": "commit"}, {"oid": "91940c5172fcb55dfe23de2c154a154f3e6aa0c0", "url": "https://github.com/ls1intum/Artemis/commit/91940c5172fcb55dfe23de2c154a154f3e6aa0c0", "message": "courseId null entfernt", "committedDate": "2020-05-11T17:31:08Z", "type": "commit"}, {"oid": "555e11009fc478e5e7a16cbb5d116522c9e6f44c", "url": "https://github.com/ls1intum/Artemis/commit/555e11009fc478e5e7a16cbb5d116522c9e6f44c", "message": "client security", "committedDate": "2020-05-11T17:37:49Z", "type": "commit"}, {"oid": "0b0a7469ee6eb146461a2dd5d7adbe2e556be755", "url": "https://github.com/ls1intum/Artemis/commit/0b0a7469ee6eb146461a2dd5d7adbe2e556be755", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-11T20:38:09Z", "type": "commit"}, {"oid": "848386407b4d53769be28547ed90f440b5c87404", "url": "https://github.com/ls1intum/Artemis/commit/848386407b4d53769be28547ed90f440b5c87404", "message": "Test cases", "committedDate": "2020-05-11T22:31:29Z", "type": "commit"}, {"oid": "967d90f0d5453f20044281dc8f2835308b60871c", "url": "https://github.com/ls1intum/Artemis/commit/967d90f0d5453f20044281dc8f2835308b60871c", "message": "tests?", "committedDate": "2020-05-12T11:27:46Z", "type": "commit"}, {"oid": "fe385c311179ab840ef03801f6c7c37253d26b4c", "url": "https://github.com/ls1intum/Artemis/commit/fe385c311179ab840ef03801f6c7c37253d26b4c", "message": "test fixes", "committedDate": "2020-05-12T12:15:46Z", "type": "commit"}, {"oid": "0477faac13cc30f2e9930a60beac4216e7b2c951", "url": "https://github.com/ls1intum/Artemis/commit/0477faac13cc30f2e9930a60beac4216e7b2c951", "message": "API changes + test adjustments", "committedDate": "2020-05-12T13:48:20Z", "type": "commit"}, {"oid": "b5f3b7eba97eb42b99f6a12ec77771b17a8ee54d", "url": "https://github.com/ls1intum/Artemis/commit/b5f3b7eba97eb42b99f6a12ec77771b17a8ee54d", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-12T14:03:50Z", "type": "commit"}, {"oid": "cf6d72d884009bd2f9b46e7a140a4b05566300d8", "url": "https://github.com/ls1intum/Artemis/commit/cf6d72d884009bd2f9b46e7a140a4b05566300d8", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-13T14:28:55Z", "type": "commit"}, {"oid": "db55e35328221d83f6438bf4426219d3adec342d", "url": "https://github.com/ls1intum/Artemis/commit/db55e35328221d83f6438bf4426219d3adec342d", "message": "removed unused import", "committedDate": "2020-05-14T13:37:11Z", "type": "commit"}, {"oid": "bf042d0161576c25d060e2199cfd20c4ad355d24", "url": "https://github.com/ls1intum/Artemis/commit/bf042d0161576c25d060e2199cfd20c4ad355d24", "message": "Merge remote-tracking branch 'origin/feature/apollon-diagram/link-to-course' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-14T13:37:32Z", "type": "commit"}, {"oid": "b38f504d71b6c9d7cbf6404aeb188a8e2c073c06", "url": "https://github.com/ls1intum/Artemis/commit/b38f504d71b6c9d7cbf6404aeb188a8e2c073c06", "message": "Merge branch 'develop' into feature/apollon-diagram/link-to-course", "committedDate": "2020-05-18T18:54:22Z", "type": "commit"}]}