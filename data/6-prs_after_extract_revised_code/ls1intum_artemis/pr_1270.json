{"pr_number": 1270, "pr_title": "Chore/test coverage/student question", "pr_createdAt": "2020-03-09T16:47:24Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1270", "timeline": [{"oid": "ac7e3b63dd5fd1be0e04af66ccba6c05aafe8114", "url": "https://github.com/ls1intum/Artemis/commit/ac7e3b63dd5fd1be0e04af66ccba6c05aafe8114", "message": "Added StudentQuestionIntegrationTest.java with several testcases", "committedDate": "2020-03-06T19:06:50Z", "type": "commit"}, {"oid": "f62abfadd4077d3e6bf4729cd842c5e553629375", "url": "https://github.com/ls1intum/Artemis/commit/f62abfadd4077d3e6bf4729cd842c5e553629375", "message": "Added StudentQuestionAnswerIntegrationTest.java and several testcases", "committedDate": "2020-03-06T20:12:04Z", "type": "commit"}, {"oid": "b8b1fabe24cb1313014cc7a0740b0d7dba3bcb08", "url": "https://github.com/ls1intum/Artemis/commit/b8b1fabe24cb1313014cc7a0740b0d7dba3bcb08", "message": "Added deletion of StudentQuestions at tear down", "committedDate": "2020-03-07T11:05:16Z", "type": "commit"}, {"oid": "e6fe01c14849d1ba27a0a951f05c3db6c885848f", "url": "https://github.com/ls1intum/Artemis/commit/e6fe01c14849d1ba27a0a951f05c3db6c885848f", "message": "remove unnecessary rest calls in tests", "committedDate": "2020-03-09T12:35:32Z", "type": "commit"}, {"oid": "ef74566a28d892f47e0873473089b7bdd760906e", "url": "https://github.com/ls1intum/Artemis/commit/ef74566a28d892f47e0873473089b7bdd760906e", "message": "fix java code style", "committedDate": "2020-03-09T12:49:51Z", "type": "commit"}, {"oid": "465370663aeaf1e5c4ee03e5afbe873234d83290", "url": "https://github.com/ls1intum/Artemis/commit/465370663aeaf1e5c4ee03e5afbe873234d83290", "message": "rework initalization", "committedDate": "2020-03-09T15:34:46Z", "type": "commit"}, {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595", "url": "https://github.com/ls1intum/Artemis/commit/9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595", "message": "fixed tests", "committedDate": "2020-03-09T16:30:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyODYyNA==", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389828624", "bodyText": "Can a student edit the answer to a question? If not could you please cover this case.", "author": "HanyaElhashemy", "createdAt": "2020-03-09T17:02:07Z", "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.ExerciseRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionAnswerRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionRepository;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionAnswerIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionAnswerRepository studentQuestionAnswerRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestionAnswer() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        StudentQuestionAnswer studentQuestionAnswer = new StudentQuestionAnswer();\n+        studentQuestionAnswer.setAuthor(database.getUserByLogin(\"tutor1\"));\n+        studentQuestionAnswer.setAnswerText(\"Test Answer\");\n+        studentQuestionAnswer.setAnswerDate(ZonedDateTime.now());\n+        studentQuestionAnswer.setQuestion(studentQuestion);\n+        StudentQuestionAnswer response = request.postWithResponseBody(\"/api/student-question-answers\", studentQuestionAnswer, StudentQuestionAnswer.class, HttpStatus.CREATED);\n+\n+        // trying to create same studentQuestionAnswer again --> bad request\n+        request.postWithResponseBody(\"/api/student-question-answers\", response, StudentQuestionAnswer.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionAnswer() throws Exception {\n+        StudentQuestionAnswer studentQuestionAnswer = createStudentQuestionAnswerOnServer();", "originalCommit": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4MTM2MA==", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389881360", "bodyText": "Good point! Yes, currently everyone can edit the answers. Anyway I added a testcase to cover it, since it makes sense to test with different users.", "author": "clemenszuck", "createdAt": "2020-03-09T18:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyODYyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1MTMzOA==", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r390151338", "bodyText": "Students should only be able to edit and delete their own answers. They should NOT be able to edit and delete answers of other users.\nTutors and instructors should be able to edit and delete answers of other users.\nPlease implement this logic in the tests and let them fail if the server logic is not implemented correctly, then we should fix it!", "author": "krusche", "createdAt": "2020-03-10T08:20:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyODYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "de58f2d7e8fe8e4d246321d52ea7bc0f5574967d", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java\nindex c17670a48..3a8faaea1 100644\n--- a/src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java\n\n@@ -71,7 +71,7 @@ public class StudentQuestionAnswerIntegrationTest extends AbstractSpringIntegrat\n \n     @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    public void editStudentQuestionAnswer() throws Exception {\n+    public void editStudentQuestionAnswer_asInstructor() throws Exception {\n         StudentQuestionAnswer studentQuestionAnswer = createStudentQuestionAnswerOnServer();\n \n         studentQuestionAnswer.setAuthor(database.getUserByLogin(\"tutor2\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMjkyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389832925", "bodyText": "Can another student edit this student's question?", "author": "HanyaElhashemy", "createdAt": "2020-03-09T17:09:07Z", "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Attachment;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Lecture;\n+import de.tum.in.www1.artemis.domain.StudentQuestion;\n+import de.tum.in.www1.artemis.repository.*;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.ModelFactory;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    LectureRepository lectureRepo;\n+\n+    @Autowired\n+    AttachmentRepository attachmentRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = new StudentQuestion();\n+        studentQuestion.setQuestionText(\"Test Student Question 1\");\n+        studentQuestion.setVisibleForStudents(true);\n+\n+        StudentQuestion createdStudentQuestion = request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.CREATED);\n+\n+        assertThat(createdStudentQuestion).isNotNull();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createExistingStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestion() throws Exception {", "originalCommit": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4MTcxNw==", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389881717", "bodyText": "Same as with the answers, everyone can edit it, but I still added an additional case for it.", "author": "clemenszuck", "createdAt": "2020-03-09T18:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMjkyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1MTQ4MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r390151481", "bodyText": "Students should only be able to edit and delete their own questions. They should NOT be able to edit and delete questions of other users.\nTutors and instructors should be able to edit and delete questions of other users.\nPlease implement this logic in the tests and let them fail if the server logic is not implemented correctly, then we should fix it!", "author": "krusche", "createdAt": "2020-03-10T08:21:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMjkyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "de58f2d7e8fe8e4d246321d52ea7bc0f5574967d", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java\nindex 722c95c00..5f19e943c 100644\n--- a/src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java\n\n@@ -81,7 +81,20 @@ public class StudentQuestionIntegrationTest extends AbstractSpringIntegrationTes\n \n     @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    public void editStudentQuestion() throws Exception {\n+    public void editStudentQuestion_asInstructor() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVisibleForStudents(false);\n+        studentQuestion.setQuestionText(\"New Test Student Question\");\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getQuestionText().equals(\"New Test Student Question\"));\n+        assertThat(updatedStudentQuestion.isVisibleForStudents()).isFalse();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student3\", roles = \"USER\")\n+    public void editStudentQuestion_asStudent() throws Exception {\n         StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n \n         studentQuestion.setVisibleForStudents(false);\n"}}, {"oid": "de58f2d7e8fe8e4d246321d52ea7bc0f5574967d", "url": "https://github.com/ls1intum/Artemis/commit/de58f2d7e8fe8e4d246321d52ea7bc0f5574967d", "message": "Added additional testcases as student", "committedDate": "2020-03-09T18:25:35Z", "type": "commit"}, {"oid": "ee06776bd633fa81004e7a86169bf5d96cb057ce", "url": "https://github.com/ls1intum/Artemis/commit/ee06776bd633fa81004e7a86169bf5d96cb057ce", "message": "Adjusted tests to test for desired logic", "committedDate": "2020-03-12T09:45:37Z", "type": "commit"}, {"oid": "33151e43bc47bdc42b6ffa1a55d9a2deae395345", "url": "https://github.com/ls1intum/Artemis/commit/33151e43bc47bdc42b6ffa1a55d9a2deae395345", "message": "fix java code style", "committedDate": "2020-03-12T09:49:24Z", "type": "commit"}, {"oid": "6235923e0c8e0b2ca1499634e65c33e2a2644576", "url": "https://github.com/ls1intum/Artemis/commit/6235923e0c8e0b2ca1499634e65c33e2a2644576", "message": "Merge remote-tracking branch 'origin/develop' into chore/test-coverage/student-question", "committedDate": "2020-03-12T09:51:31Z", "type": "commit"}, {"oid": "5b2620a347aa9d02f8b8c2c06ee378a10de508f0", "url": "https://github.com/ls1intum/Artemis/commit/5b2620a347aa9d02f8b8c2c06ee378a10de508f0", "message": "Fix Permission check in StudentQuestionResource:updateStudentQuestion\n\nSigned-off-by: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T11:08:34Z", "type": "commit"}, {"oid": "d080fef1b782092ec960209d887ca4e25e1ae894", "url": "https://github.com/ls1intum/Artemis/commit/d080fef1b782092ec960209d887ca4e25e1ae894", "message": "Fix Permission check in StudentQuestionAnswerResource:updateStudentQuestionAnswer\n\nSigned-off-by: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T11:15:15Z", "type": "commit"}, {"oid": "78a38b55d5c57bd8bbc9f46b1338c7eae72a325f", "url": "https://github.com/ls1intum/Artemis/commit/78a38b55d5c57bd8bbc9f46b1338c7eae72a325f", "message": "Add missing JavaDoc\n\nSigned-off-by: Jan Philip Bernius <janphilip.bernius@tum.de>", "committedDate": "2020-03-13T11:21:27Z", "type": "commit"}]}