{"pr_number": 1937, "pr_title": "Fix missing scheduling for manually assessed programming exercises", "pr_createdAt": "2020-07-20T03:54:21Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1937", "timeline": [{"oid": "be9aa0a87be4e8c181471a5ffad4271e540e2069", "url": "https://github.com/ls1intum/Artemis/commit/be9aa0a87be4e8c181471a5ffad4271e540e2069", "message": "Add repository method to get manual assessed exercises due before a date", "committedDate": "2020-07-20T02:52:01Z", "type": "commit"}, {"oid": "9733ab99ec83eb8c038d60739a26d0952d4f7ebe", "url": "https://github.com/ls1intum/Artemis/commit/9733ab99ec83eb8c038d60739a26d0952d4f7ebe", "message": "Fix and refactor problematic code for programming exercise scheduling", "committedDate": "2020-07-20T03:21:40Z", "type": "commit"}, {"oid": "df417a669b0226382f1b2f871c129d8fcb6e39bf", "url": "https://github.com/ls1intum/Artemis/commit/df417a669b0226382f1b2f871c129d8fcb6e39bf", "message": "Remove TODO and update JavaDoc", "committedDate": "2020-07-20T03:32:48Z", "type": "commit"}, {"oid": "340a27110b404d09aa408aa0d5b6bbe47757e506", "url": "https://github.com/ls1intum/Artemis/commit/340a27110b404d09aa408aa0d5b6bbe47757e506", "message": "Fix HQL query", "committedDate": "2020-07-20T03:47:29Z", "type": "commit"}, {"oid": "a7e5697799707a82bcaab699e5876f34f529bc28", "url": "https://github.com/ls1intum/Artemis/commit/a7e5697799707a82bcaab699e5876f34f529bc28", "message": "Merge branch 'develop' into bugfix/programming-exercise/schedule-manual-assessed", "committedDate": "2020-07-21T09:46:28Z", "type": "commit"}, {"oid": "2727b002f693f793a6d03494a9d27a4b4f5b461a", "url": "https://github.com/ls1intum/Artemis/commit/2727b002f693f793a6d03494a9d27a4b4f5b461a", "message": "Add test for manual assessed programming exercise scheduling", "committedDate": "2020-07-21T12:29:25Z", "type": "commit"}, {"oid": "5d995a9cc210e410cea7280735234562689f3bb0", "url": "https://github.com/ls1intum/Artemis/commit/5d995a9cc210e410cea7280735234562689f3bb0", "message": "Merge branch 'develop' into bugfix/programming-exercise/schedule-manual-assessed", "committedDate": "2020-07-21T15:43:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODY0Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458278643", "bodyText": "The method name states the we filter by manual assessment, but we filter by <> 'AUTOMATIC'. Is there a reason why don't filter by  = 'MANUAL'?", "author": "sleiss", "createdAt": "2020-07-21T17:46:27Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -91,6 +91,15 @@\n     @Query(\"select pe from ProgrammingExercise pe where pe.buildAndTestStudentSubmissionsAfterDueDate > :#{#dateTime}\")\n     List<ProgrammingExercise> findAllByBuildAndTestStudentSubmissionsAfterDueDateAfterDate(@Param(\"dateTime\") ZonedDateTime dateTime);\n \n+    /**\n+     * Returns the programming exercises that have manual assessment enabled and a due date higher than the provided date.\n+     *\n+     * @param dateTime ZonedDateTime object.\n+     * @return List<ProgrammingExercise> (can be empty)\n+     */\n+    @Query(\"select pe from ProgrammingExercise pe where pe.assessmentType <> 'AUTOMATIC' and pe.dueDate > :#{#dateTime}\")\n+    List<ProgrammingExercise> findAllByManualAssessmentAndDueDateAfterDate(@Param(\"dateTime\") ZonedDateTime dateTime);", "originalCommit": "5d995a9cc210e410cea7280735234562689f3bb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNTI5NA==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458305294", "bodyText": "Because we use SEMI_AUTOMATIC for that currently. I wanted to be safe here and return all exercises that involve some sort of manual assessment. As far as I can see, MANUAL is unused currently for the programming exercises.", "author": "MaisiKoleni", "createdAt": "2020-07-21T18:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3OTUzMA==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458379530", "bodyText": "Thanks, seems reasonable.", "author": "sleiss", "createdAt": "2020-07-21T20:50:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODY0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3OTA3Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458379077", "bodyText": "Could you please add brackets to this and the following if statement?", "author": "sleiss", "createdAt": "2020-07-21T20:49:44Z", "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java", "diffHunk": "@@ -89,25 +95,38 @@ public void scheduleRunningExercisesOnStartup() {\n     }\n \n     /**\n-     * Will cancel a scheduled task if the buildAndTestAfterDueDate is null or has passed already.\n+     * Will cancel or reschedule tasks for updated programming exercises\n      *\n-     * // TODO: the method name and logic is really hard to understand, we should improve this\n      * @param exercise ProgrammingExercise\n      */\n     @Override\n-    public void scheduleExerciseIfRequired(ProgrammingExercise exercise) {\n-        // TODO: also take exercises with manual assessments into account here and deal better with exams\n-        if (!isExamExercise(exercise)\n-                && (exercise.getBuildAndTestStudentSubmissionsAfterDueDate() == null || exercise.getBuildAndTestStudentSubmissionsAfterDueDate().isBefore(ZonedDateTime.now()))) {\n-            // this only cancels a schedule, but does not schedule one\n-            scheduleService.cancelScheduledTaskForLifecycle(exercise, ExerciseLifecycle.DUE);\n-            scheduleService.cancelScheduledTaskForLifecycle(exercise, ExerciseLifecycle.BUILD_AND_TEST_AFTER_DUE_DATE);\n+    public void updateScheduling(ProgrammingExercise exercise) {\n+        if (!needsToBeScheduled(exercise)) {\n+            // If a programming exercise got changed so that any scheduling becomes unnecessary, we need to cancel all scheduled tasks\n+            cancelAllScheduledTasks(exercise);\n             return;\n         }\n-        // exam exercises are always scheduled, course exercises are only scheduled if buildAndTestStudentSubmissionsAfterDueDate is set and in the future\n         scheduleExercise(exercise);\n     }\n \n+    private static boolean needsToBeScheduled(ProgrammingExercise exercise) {\n+        // Exam exercises need to be scheduled\n+        if (isExamExercise(exercise))", "originalCommit": "5d995a9cc210e410cea7280735234562689f3bb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQxMTYwMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458411601", "bodyText": "Yes. Strange that the style tests passed then.", "author": "MaisiKoleni", "createdAt": "2020-07-21T21:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3OTA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "36d8f5a3816ce58a589cd20cc33fa59b7ac9efcb", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java b/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\nindex 878d9b0b08..79cab7ec2d 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\n\n@@ -111,11 +111,13 @@ public class ProgrammingExerciseScheduleService implements IExerciseScheduleServ\n \n     private static boolean needsToBeScheduled(ProgrammingExercise exercise) {\n         // Exam exercises need to be scheduled\n-        if (isExamExercise(exercise))\n+        if (isExamExercise(exercise)) {\n             return true;\n+        }\n         // Manual assessed programming exercises as well\n-        if (exercise.getAssessmentType() != AssessmentType.AUTOMATIC)\n+        if (exercise.getAssessmentType() != AssessmentType.AUTOMATIC) {\n             return true;\n+        }\n         // If tests are run after due date and that due date lies in the future, we need to schedule that as well\n         return exercise.getBuildAndTestStudentSubmissionsAfterDueDate() != null && ZonedDateTime.now().isBefore(exercise.getBuildAndTestStudentSubmissionsAfterDueDate());\n     }\n"}}, {"oid": "36d8f5a3816ce58a589cd20cc33fa59b7ac9efcb", "url": "https://github.com/ls1intum/Artemis/commit/36d8f5a3816ce58a589cd20cc33fa59b7ac9efcb", "message": "Add brackets to if statements", "committedDate": "2020-07-21T21:54:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkyNDM3OA==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458924378", "bodyText": "I'm a bit confused, this if clause will lock all programming exercises with a due date in the future but the comment says \"For exercises with buildAndTestAfterDueDate or manual assessment\"", "author": "kloessst", "createdAt": "2020-07-22T16:29:25Z", "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java", "diffHunk": "@@ -123,11 +144,24 @@ private void scheduleExercise(ProgrammingExercise exercise) {\n     }\n \n     private void scheduleCourseExercise(ProgrammingExercise exercise) {\n-        // TODO: there is small logic error here. When build and run test date is after the due date, the lock operation might be executed even if it is not necessary.\n-        scheduleService.scheduleTask(exercise, ExerciseLifecycle.DUE, lockAllStudentRepositories(exercise));\n-        scheduleService.scheduleTask(exercise, ExerciseLifecycle.BUILD_AND_TEST_AFTER_DUE_DATE, buildAndTestRunnableForExercise(exercise));\n-        log.debug(\"Scheduled build and test for student submissions after due date for Programming Exercise \\\"\" + exercise.getTitle() + \"\\\" (#\" + exercise.getId() + \") for \"\n-                + exercise.getBuildAndTestStudentSubmissionsAfterDueDate() + \".\");\n+        // For exercises with buildAndTestAfterDueDate or manual assessment\n+        if (exercise.getDueDate() != null && ZonedDateTime.now().isBefore(exercise.getDueDate())) {", "originalCommit": "36d8f5a3816ce58a589cd20cc33fa59b7ac9efcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1ODIwNA==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458958204", "bodyText": "This is because needsToBeScheduled will only schedule those course exercises. I can improve the comment, though.", "author": "MaisiKoleni", "createdAt": "2020-07-22T17:22:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkyNDM3OA=="}], "type": "inlineReview", "revised_code": {"commit": "9440b7eacb806cdc5b0f83aa24ca1fac5e5ab7a3", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java b/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\nindex 79cab7ec2d..1699492c0a 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\n\n@@ -144,7 +144,7 @@ public class ProgrammingExerciseScheduleService implements IExerciseScheduleServ\n     }\n \n     private void scheduleCourseExercise(ProgrammingExercise exercise) {\n-        // For exercises with buildAndTestAfterDueDate or manual assessment\n+        // For any course exercise that needsToBeScheduled (buildAndTestAfterDueDate and/or manual assessment)\n         if (exercise.getDueDate() != null && ZonedDateTime.now().isBefore(exercise.getDueDate())) {\n             scheduleService.scheduleTask(exercise, ExerciseLifecycle.DUE, lockAllStudentRepositories(exercise));\n             log.debug(\"Scheduled lock student repositories after due date for Programming Exercise \\\"\" + exercise.getTitle() + \"\\\" (#\" + exercise.getId() + \") for \"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1OTQxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458959411", "bodyText": "@kloessst would that be better?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // For exercises with buildAndTestAfterDueDate or manual assessment\n          \n          \n            \n                    // For any course exercise that needsToBeScheduled (buildAndTestAfterDueDate and/or manual assessment)", "author": "MaisiKoleni", "createdAt": "2020-07-22T17:24:58Z", "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java", "diffHunk": "@@ -123,11 +144,24 @@ private void scheduleExercise(ProgrammingExercise exercise) {\n     }\n \n     private void scheduleCourseExercise(ProgrammingExercise exercise) {\n-        // TODO: there is small logic error here. When build and run test date is after the due date, the lock operation might be executed even if it is not necessary.\n-        scheduleService.scheduleTask(exercise, ExerciseLifecycle.DUE, lockAllStudentRepositories(exercise));\n-        scheduleService.scheduleTask(exercise, ExerciseLifecycle.BUILD_AND_TEST_AFTER_DUE_DATE, buildAndTestRunnableForExercise(exercise));\n-        log.debug(\"Scheduled build and test for student submissions after due date for Programming Exercise \\\"\" + exercise.getTitle() + \"\\\" (#\" + exercise.getId() + \") for \"\n-                + exercise.getBuildAndTestStudentSubmissionsAfterDueDate() + \".\");\n+        // For exercises with buildAndTestAfterDueDate or manual assessment", "originalCommit": "36d8f5a3816ce58a589cd20cc33fa59b7ac9efcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5Nzc3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r458997772", "bodyText": "That's good. Just wasn't clear for me.", "author": "kloessst", "createdAt": "2020-07-22T18:29:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1OTQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9440b7eacb806cdc5b0f83aa24ca1fac5e5ab7a3", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java b/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\nindex 79cab7ec2d..1699492c0a 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/scheduled/ProgrammingExerciseScheduleService.java\n\n@@ -144,7 +144,7 @@ public class ProgrammingExerciseScheduleService implements IExerciseScheduleServ\n     }\n \n     private void scheduleCourseExercise(ProgrammingExercise exercise) {\n-        // For exercises with buildAndTestAfterDueDate or manual assessment\n+        // For any course exercise that needsToBeScheduled (buildAndTestAfterDueDate and/or manual assessment)\n         if (exercise.getDueDate() != null && ZonedDateTime.now().isBefore(exercise.getDueDate())) {\n             scheduleService.scheduleTask(exercise, ExerciseLifecycle.DUE, lockAllStudentRepositories(exercise));\n             log.debug(\"Scheduled lock student repositories after due date for Programming Exercise \\\"\" + exercise.getTitle() + \"\\\" (#\" + exercise.getId() + \") for \"\n"}}, {"oid": "9440b7eacb806cdc5b0f83aa24ca1fac5e5ab7a3", "url": "https://github.com/ls1intum/Artemis/commit/9440b7eacb806cdc5b0f83aa24ca1fac5e5ab7a3", "message": "Clarify comment", "committedDate": "2020-07-22T18:32:09Z", "type": "commit"}, {"oid": "5cd3203c2000114cc4e5313856db95ebd1039e76", "url": "https://github.com/ls1intum/Artemis/commit/5cd3203c2000114cc4e5313856db95ebd1039e76", "message": "Merge branch 'develop' into bugfix/programming-exercise/schedule-manual-assessed", "committedDate": "2020-07-22T18:37:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA0OTEzNw==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r459049137", "bodyText": "This Query will return nothing if pe.dueDate is null. Just to confirm @MaisiKoleni , that this is the intended behaviour?", "author": "stefanwaldhauser", "createdAt": "2020-07-22T20:01:18Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseRepository.java", "diffHunk": "@@ -91,6 +91,15 @@\n     @Query(\"select pe from ProgrammingExercise pe where pe.buildAndTestStudentSubmissionsAfterDueDate > :#{#dateTime}\")\n     List<ProgrammingExercise> findAllByBuildAndTestStudentSubmissionsAfterDueDateAfterDate(@Param(\"dateTime\") ZonedDateTime dateTime);\n \n+    /**\n+     * Returns the programming exercises that have manual assessment enabled and a due date higher than the provided date.\n+     *\n+     * @param dateTime ZonedDateTime object.\n+     * @return List<ProgrammingExercise> (can be empty)\n+     */\n+    @Query(\"select pe from ProgrammingExercise pe where pe.assessmentType <> 'AUTOMATIC' and pe.dueDate > :#{#dateTime}\")", "originalCommit": "5cd3203c2000114cc4e5313856db95ebd1039e76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA1MDY5Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1937#discussion_r459050696", "bodyText": "Yes, programming exercises without due date don't have a due date higher that the passed due date and don't need to be scheduled.", "author": "MaisiKoleni", "createdAt": "2020-07-22T20:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA0OTEzNw=="}], "type": "inlineReview", "revised_code": null}]}