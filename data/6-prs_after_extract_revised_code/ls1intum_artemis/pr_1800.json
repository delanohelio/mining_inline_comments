{"pr_number": 1800, "pr_title": "Make summary available for instructors", "pr_createdAt": "2020-07-03T12:02:09Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1800", "timeline": [{"oid": "4a7625fe4b30d99db32c09360a73dfc7f2990a94", "url": "https://github.com/ls1intum/Artemis/commit/4a7625fe4b30d99db32c09360a73dfc7f2990a94", "message": "other texts for instructor view", "committedDate": "2020-07-03T11:02:20Z", "type": "commit"}, {"oid": "79d3e446e13642a0f749b691071a69128e6fa526", "url": "https://github.com/ls1intum/Artemis/commit/79d3e446e13642a0f749b691071a69128e6fa526", "message": "summary component and route", "committedDate": "2020-07-03T11:47:25Z", "type": "commit"}, {"oid": "4c2bb5a384b0aa0d4ce69bd86ce1e520ad40ffd4", "url": "https://github.com/ls1intum/Artemis/commit/4c2bb5a384b0aa0d4ce69bd86ce1e520ad40ffd4", "message": "prettier", "committedDate": "2020-07-03T12:01:21Z", "type": "commit"}, {"oid": "d34c80dda6fbf12dac8b6fcc02c4df5e9e5fd114", "url": "https://github.com/ls1intum/Artemis/commit/d34c80dda6fbf12dac8b6fcc02c4df5e9e5fd114", "message": "adapt get request", "committedDate": "2020-07-03T12:17:30Z", "type": "commit"}, {"oid": "9b17ae6a46bbf9a923cb2268427953a4b9a6bb0e", "url": "https://github.com/ls1intum/Artemis/commit/9b17ae6a46bbf9a923cb2268427953a4b9a6bb0e", "message": "Merge branch 'develop' into exam/manage/summary", "committedDate": "2020-07-03T12:20:30Z", "type": "commit"}, {"oid": "0fd863c25b712ddf22da452f61956398e76d6c4f", "url": "https://github.com/ls1intum/Artemis/commit/0fd863c25b712ddf22da452f61956398e76d6c4f", "message": "spotless", "committedDate": "2020-07-03T12:22:32Z", "type": "commit"}, {"oid": "d00cd6f8d654dcdb75b4b4e544f5506c3378ccdc", "url": "https://github.com/ls1intum/Artemis/commit/d00cd6f8d654dcdb75b4b4e544f5506c3378ccdc", "message": "dont filter exercises", "committedDate": "2020-07-03T18:33:53Z", "type": "commit"}, {"oid": "820170adbf6cf95d18ccacef71dce0b3c33fa809", "url": "https://github.com/ls1intum/Artemis/commit/820170adbf6cf95d18ccacef71dce0b3c33fa809", "message": "refactor into own module", "committedDate": "2020-07-03T18:56:16Z", "type": "commit"}, {"oid": "1b08c9eeeda812361ac5f9f6b2752cb3bd1d2296", "url": "https://github.com/ls1intum/Artemis/commit/1b08c9eeeda812361ac5f9f6b2752cb3bd1d2296", "message": "add different instructor check", "committedDate": "2020-07-03T19:32:51Z", "type": "commit"}, {"oid": "45cd86deba949d4a6e07b72bb032e65c8376974b", "url": "https://github.com/ls1intum/Artemis/commit/45cd86deba949d4a6e07b72bb032e65c8376974b", "message": "remove duplicate", "committedDate": "2020-07-04T19:01:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODE5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1800#discussion_r449798197", "bodyText": "Might want to declare List<Exercise> exercises = studentExam.getExercises() here to avoid multiple database accesses fetching the list several times (lines 77, 78, 83, 90, 93) if that is not specifically intended", "author": "balazs-czopf", "createdAt": "2020-07-04T19:14:35Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -71,7 +71,31 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n     public ResponseEntity<StudentExam> getStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @PathVariable Long studentExamId) {\n         log.debug(\"REST request to get student exam : {}\", studentExamId);\n         Optional<ResponseEntity<StudentExam>> accessFailure = examAccessService.checkCourseAndExamAndStudentExamAccess(courseId, examId, studentExamId);\n-        return accessFailure.orElseGet(() -> ResponseEntity.ok(studentExamService.findOneWithExercises(studentExamId)));\n+\n+        StudentExam studentExam = studentExamService.findOneWithExercises(studentExamId);\n+        // we reload the quiz exercise because we also need the quiz questions and it is not possible to load them in a generic way with the entity graph used in", "originalCommit": "1b08c9eeeda812361ac5f9f6b2752cb3bd1d2296", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwNTQyMA==", "url": "https://github.com/ls1intum/Artemis/pull/1800#discussion_r449805420", "bodyText": "there is no database access, all exercises are already fetched.", "author": "krusche", "createdAt": "2020-07-04T21:04:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b5b9588cc2362eacad8f75561db23c1a1ad2b66b", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 11403d5e8c..aaf5567298 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -73,16 +76,8 @@ public class StudentExamResource {\n         Optional<ResponseEntity<StudentExam>> accessFailure = examAccessService.checkCourseAndExamAndStudentExamAccess(courseId, examId, studentExamId);\n \n         StudentExam studentExam = studentExamService.findOneWithExercises(studentExamId);\n-        // we reload the quiz exercise because we also need the quiz questions and it is not possible to load them in a generic way with the entity graph used in\n-        for (int i = 0; i < studentExam.getExercises().size(); i++) {\n-            var exercise = studentExam.getExercises().get(i);\n-            if (exercise instanceof QuizExercise) {\n-                // reload and replace the quiz exercise\n-                var quizExercise = quizExerciseService.findOneWithQuestions(exercise.getId());\n-                quizExercise.filterForStudentsDuringQuiz();\n-                studentExam.getExercises().set(i, quizExercise);\n-            }\n-        }\n+\n+        loadExercisesForStudentExam(studentExam);\n \n         // fetch participations, submissions and results for these exercises, note: exams only contain individual exercises for now\n         // fetching all participations at once is more effective\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwNTUyNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1800#discussion_r449805525", "bodyText": "If I see this correctly, some of this code is duplicated.\nI suggest that you try to extract methods for the duplicated parts", "author": "krusche", "createdAt": "2020-07-04T21:05:29Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -71,7 +71,31 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n     public ResponseEntity<StudentExam> getStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @PathVariable Long studentExamId) {\n         log.debug(\"REST request to get student exam : {}\", studentExamId);\n         Optional<ResponseEntity<StudentExam>> accessFailure = examAccessService.checkCourseAndExamAndStudentExamAccess(courseId, examId, studentExamId);\n-        return accessFailure.orElseGet(() -> ResponseEntity.ok(studentExamService.findOneWithExercises(studentExamId)));\n+\n+        StudentExam studentExam = studentExamService.findOneWithExercises(studentExamId);\n+        // we reload the quiz exercise because we also need the quiz questions and it is not possible to load them in a generic way with the entity graph used in\n+        for (int i = 0; i < studentExam.getExercises().size(); i++) {", "originalCommit": "45cd86deba949d4a6e07b72bb032e65c8376974b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5b9588cc2362eacad8f75561db23c1a1ad2b66b", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 11403d5e8c..aaf5567298 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -73,16 +76,8 @@ public class StudentExamResource {\n         Optional<ResponseEntity<StudentExam>> accessFailure = examAccessService.checkCourseAndExamAndStudentExamAccess(courseId, examId, studentExamId);\n \n         StudentExam studentExam = studentExamService.findOneWithExercises(studentExamId);\n-        // we reload the quiz exercise because we also need the quiz questions and it is not possible to load them in a generic way with the entity graph used in\n-        for (int i = 0; i < studentExam.getExercises().size(); i++) {\n-            var exercise = studentExam.getExercises().get(i);\n-            if (exercise instanceof QuizExercise) {\n-                // reload and replace the quiz exercise\n-                var quizExercise = quizExerciseService.findOneWithQuestions(exercise.getId());\n-                quizExercise.filterForStudentsDuringQuiz();\n-                studentExam.getExercises().set(i, quizExercise);\n-            }\n-        }\n+\n+        loadExercisesForStudentExam(studentExam);\n \n         // fetch participations, submissions and results for these exercises, note: exams only contain individual exercises for now\n         // fetching all participations at once is more effective\n"}}, {"oid": "1a4a4390d9d6205d9a1b3d92d9cc47eda5ac79bb", "url": "https://github.com/ls1intum/Artemis/commit/1a4a4390d9d6205d9a1b3d92d9cc47eda5ac79bb", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into exam/manage/summary\n\n# Conflicts:\n#\tsrc/main/webapp/app/exam/manage/exam-management.route.ts", "committedDate": "2020-07-05T11:37:17Z", "type": "commit"}, {"oid": "b5b9588cc2362eacad8f75561db23c1a1ad2b66b", "url": "https://github.com/ls1intum/Artemis/commit/b5b9588cc2362eacad8f75561db23c1a1ad2b66b", "message": "extract duplicate", "committedDate": "2020-07-05T11:59:44Z", "type": "commit"}, {"oid": "000c3b60d7b0e22163625597db6e3179a203310f", "url": "https://github.com/ls1intum/Artemis/commit/000c3b60d7b0e22163625597db6e3179a203310f", "message": "Merge branch 'develop' into exam/manage/summary", "committedDate": "2020-07-05T18:46:23Z", "type": "commit"}, {"oid": "4f3e61f3027c50842b89741524115af3c4211b9d", "url": "https://github.com/ls1intum/Artemis/commit/4f3e61f3027c50842b89741524115af3c4211b9d", "message": "small code improvements\n\nisAtLeastInstructor is already available in the course", "committedDate": "2020-07-05T18:56:20Z", "type": "commit"}, {"oid": "e9fab194b889e2c2c8f0ed1c7ef559dd11e02125", "url": "https://github.com/ls1intum/Artemis/commit/e9fab194b889e2c2c8f0ed1c7ef559dd11e02125", "message": "fix some issues in the summary and in student details view\n\nmostly type script errors\nprogramming summary does not need a submission\nadded some additional checks in case the submission is not available", "committedDate": "2020-07-05T19:36:35Z", "type": "commit"}, {"oid": "15460803ff2bd713b52b2044447af916793435f5", "url": "https://github.com/ls1intum/Artemis/commit/15460803ff2bd713b52b2044447af916793435f5", "message": "Merge branch 'develop' into exam/manage/summary", "committedDate": "2020-07-05T19:36:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNDIxOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1800#discussion_r449914219", "bodyText": "I think it would be better to return directly when an accessFailure occurs. This makes sense not only with regard to the procedure, but also because the access service checks whether the studentExam exists at all.", "author": "sascha11110", "createdAt": "2020-07-05T20:11:22Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -80,7 +80,23 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n     public ResponseEntity<StudentExam> getStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @PathVariable Long studentExamId) {\n         log.debug(\"REST request to get student exam : {}\", studentExamId);\n         Optional<ResponseEntity<StudentExam>> accessFailure = examAccessService.checkCourseAndExamAndStudentExamAccess(courseId, examId, studentExamId);\n-        return accessFailure.orElseGet(() -> ResponseEntity.ok(studentExamService.findOneWithExercises(studentExamId)));\n+\n+        StudentExam studentExam = studentExamService.findOneWithExercises(studentExamId);\n+\n+        loadExercisesForStudentExam(studentExam);\n+\n+        // fetch participations, submissions and results for these exercises, note: exams only contain individual exercises for now\n+        // fetching all participations at once is more effective\n+        List<StudentParticipation> participations = participationService.findByStudentIdAndIndividualExercisesWithEagerSubmissionsResult(studentExam.getUser().getId(),\n+                studentExam.getExercises());\n+\n+        // connect the exercises and student participations correctly and make sure all relevant associations are available\n+        for (Exercise exercise : studentExam.getExercises()) {\n+            // add participation with submission and result to each exercise\n+            filterForExam(exercise, participations);\n+        }\n+\n+        return accessFailure.orElseGet(() -> ResponseEntity.ok(studentExam));", "originalCommit": "15460803ff2bd713b52b2044447af916793435f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNTQxNA==", "url": "https://github.com/ls1intum/Artemis/pull/1800#discussion_r449915414", "bodyText": "fixed", "author": "krusche", "createdAt": "2020-07-05T20:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNDIxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "0f7caece66da2a66a7f8f6215a492c6ece6126c7", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 2aba1e63a0..17f8a70114 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -80,6 +80,9 @@ public class StudentExamResource {\n     public ResponseEntity<StudentExam> getStudentExam(@PathVariable Long courseId, @PathVariable Long examId, @PathVariable Long studentExamId) {\n         log.debug(\"REST request to get student exam : {}\", studentExamId);\n         Optional<ResponseEntity<StudentExam>> accessFailure = examAccessService.checkCourseAndExamAndStudentExamAccess(courseId, examId, studentExamId);\n+        if (accessFailure.isPresent()) {\n+            return accessFailure.get();\n+        }\n \n         StudentExam studentExam = studentExamService.findOneWithExercises(studentExamId);\n \n"}}, {"oid": "0f7caece66da2a66a7f8f6215a492c6ece6126c7", "url": "https://github.com/ls1intum/Artemis/commit/0f7caece66da2a66a7f8f6215a492c6ece6126c7", "message": "address review requests", "committedDate": "2020-07-05T20:25:20Z", "type": "commit"}, {"oid": "2c7fa283c20fbfff64bebdc2038af4653c98d581", "url": "https://github.com/ls1intum/Artemis/commit/2c7fa283c20fbfff64bebdc2038af4653c98d581", "message": "Merge branch 'develop' into exam/manage/summary", "committedDate": "2020-07-05T20:27:18Z", "type": "commit"}]}