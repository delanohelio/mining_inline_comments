{"pr_number": 1821, "pr_title": "[Exam] Bugfix tutor dashboard", "pr_createdAt": "2020-07-06T11:45:29Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1821", "timeline": [{"oid": "2e505aaf68d0dd1039093c7feb77e6e17801bba3", "url": "https://github.com/ls1intum/Artemis/commit/2e505aaf68d0dd1039093c7feb77e6e17801bba3", "message": "modify strings to denote modeling exercises", "committedDate": "2020-07-06T09:50:43Z", "type": "commit"}, {"oid": "06d03f6d56a56ba3ec4c8668741621c46bd98fc2", "url": "https://github.com/ls1intum/Artemis/commit/06d03f6d56a56ba3ec4c8668741621c46bd98fc2", "message": "fix example submission navigate back", "committedDate": "2020-07-06T11:31:59Z", "type": "commit"}, {"oid": "8a0dbe493a534387db9b1004633dad6e5f2cd73c", "url": "https://github.com/ls1intum/Artemis/commit/8a0dbe493a534387db9b1004633dad6e5f2cd73c", "message": "fix example solution navigation back link (modeling exercises)", "committedDate": "2020-07-06T11:41:02Z", "type": "commit"}, {"oid": "8d20932a36aa0491aeea02afee8959a5830c10f4", "url": "https://github.com/ls1intum/Artemis/commit/8d20932a36aa0491aeea02afee8959a5830c10f4", "message": "add authority to exam tutor dashboard button", "committedDate": "2020-07-06T13:34:42Z", "type": "commit"}, {"oid": "583a7da4dd838d881715811ab8c2767f74bb51c9", "url": "https://github.com/ls1intum/Artemis/commit/583a7da4dd838d881715811ab8c2767f74bb51c9", "message": "enable tutors to access the exam management", "committedDate": "2020-07-06T14:21:28Z", "type": "commit"}, {"oid": "1e5000eb4dd49eeff4c49d78aa9972707f7f6fde", "url": "https://github.com/ls1intum/Artemis/commit/1e5000eb4dd49eeff4c49d78aa9972707f7f6fde", "message": "enable tutors to access the exam management", "committedDate": "2020-07-06T15:22:50Z", "type": "commit"}, {"oid": "7cd867e279de3173817964d2faec0707c5f16c5b", "url": "https://github.com/ls1intum/Artemis/commit/7cd867e279de3173817964d2faec0707c5f16c5b", "message": "fix another dashboard route", "committedDate": "2020-07-06T15:36:54Z", "type": "commit"}, {"oid": "4222aafb155a9539f738a5ddf4cbc8ead2c9d4e7", "url": "https://github.com/ls1intum/Artemis/commit/4222aafb155a9539f738a5ddf4cbc8ead2c9d4e7", "message": "modify authority on server side", "committedDate": "2020-07-06T16:18:35Z", "type": "commit"}, {"oid": "d7607b95511ff401086fd5bdd76f93f6ba12ed74", "url": "https://github.com/ls1intum/Artemis/commit/d7607b95511ff401086fd5bdd76f93f6ba12ed74", "message": "fix yet another route (text exercise example submission)", "committedDate": "2020-07-06T16:34:46Z", "type": "commit"}, {"oid": "9d495806563545919514263b8547dec4e07f7060", "url": "https://github.com/ls1intum/Artemis/commit/9d495806563545919514263b8547dec4e07f7060", "message": "change dashboard authority logic server side", "committedDate": "2020-07-06T17:15:42Z", "type": "commit"}, {"oid": "8763d88910340db26091f096b7e8dc7559c3540d", "url": "https://github.com/ls1intum/Artemis/commit/8763d88910340db26091f096b7e8dc7559c3540d", "message": "remove redundant test cases", "committedDate": "2020-07-06T19:56:59Z", "type": "commit"}, {"oid": "ad3e033f7e9c225a44e66d6f6635ed64d47bfe87", "url": "https://github.com/ls1intum/Artemis/commit/ad3e033f7e9c225a44e66d6f6635ed64d47bfe87", "message": "Merge branch 'develop' into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-06T21:21:14Z", "type": "commit"}, {"oid": "a25cf3725ce532f9a7f3f9d38e5dda10db186e6d", "url": "https://github.com/ls1intum/Artemis/commit/a25cf3725ce532f9a7f3f9d38e5dda10db186e6d", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T07:51:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NzI2OA==", "url": "https://github.com/ls1intum/Artemis/pull/1821#discussion_r450677268", "bodyText": "We should do this via an additional flag in the method to prevent side-effects on other requests", "author": "sascha11110", "createdAt": "2020-07-07T07:55:34Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ExamAccessService.java", "diffHunk": "@@ -94,7 +94,7 @@ public ExamAccessService(ExamRepository examRepository, ExerciseGroupRepository\n      */\n     public <T> Optional<ResponseEntity<T>> checkCourseAccess(Long courseId) {\n         Course course = courseService.findOne(courseId);\n-        if (!authorizationCheckService.isAtLeastInstructorInCourse(course, null)) {\n+        if (!authorizationCheckService.isAtLeastTeachingAssistantInCourse(course, null)) {", "originalCommit": "a25cf3725ce532f9a7f3f9d38e5dda10db186e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ace384ab1155b4caa253dff341a5e7e7a8549ef0", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ExamAccessService.java b/src/main/java/de/tum/in/www1/artemis/service/ExamAccessService.java\nindex 4ea04a0d8a..252d683a1c 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ExamAccessService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ExamAccessService.java\n\n@@ -86,13 +86,28 @@ public class ExamAccessService {\n     }\n \n     /**\n-     * Checks if the current user is allowed to manage exams of the given course\n+     * Checks if the current user is allowed to manage exams of the given course.\n      *\n      * @param courseId  The id of the course\n      * @param <T>       The type of the return type of the requesting route so that the response can be returned there\n      * @return an optional with a typed ResponseEntity. If it is empty all checks passed\n      */\n-    public <T> Optional<ResponseEntity<T>> checkCourseAccess(Long courseId) {\n+    public <T> Optional<ResponseEntity<T>> checkCourseAccessForInstructor(Long courseId) {\n+        Course course = courseService.findOne(courseId);\n+        if (!authorizationCheckService.isAtLeastInstructorInCourse(course, null)) {\n+            return Optional.of(forbidden());\n+        }\n+        return Optional.empty();\n+    }\n+\n+    /**\n+     * Checks if the current user is allowed to access the exam as teaching assistant.\n+     *\n+     * @param courseId  The id of the course\n+     * @param <T>       The type of the return type of the requesting route so that the response can be returned there\n+     * @return an optional with a typed ResponseEntity. If it is empty all checks passed\n+     */\n+    public <T> Optional<ResponseEntity<T>> checkCourseAccessForTeachingAssistant(Long courseId) {\n         Course course = courseService.findOne(courseId);\n         if (!authorizationCheckService.isAtLeastTeachingAssistantInCourse(course, null)) {\n             return Optional.of(forbidden());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NzY2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1821#discussion_r450677662", "bodyText": "Possible NPE here", "author": "sascha11110", "createdAt": "2020-07-07T07:56:22Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java", "diffHunk": "@@ -106,7 +107,7 @@ public ExerciseResource(ExerciseService exerciseService, ParticipationService pa\n         User user = userService.getUserWithGroupsAndAuthorities();\n         Exercise exercise = exerciseService.findOneWithCategoriesAndTeamAssignmentConfig(exerciseId);\n \n-        if (exercise.hasExerciseGroup()) {\n+        if (exercise.hasExerciseGroup() && (exercise.getDueDate().isAfter(ZonedDateTime.now())) || exercise.getDueDate() == null) {", "originalCommit": "a25cf3725ce532f9a7f3f9d38e5dda10db186e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe352c1c71d6288e1e3515d2ca0ac729ffcb6a4d", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java\nindex 623002ea8c..daa7dc3c0e 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java\n\n@@ -107,7 +107,7 @@ public class ExerciseResource {\n         User user = userService.getUserWithGroupsAndAuthorities();\n         Exercise exercise = exerciseService.findOneWithCategoriesAndTeamAssignmentConfig(exerciseId);\n \n-        if (exercise.hasExerciseGroup() && (exercise.getDueDate().isAfter(ZonedDateTime.now())) || exercise.getDueDate() == null) {\n+        if (exercise.hasExerciseGroup() && (exercise.getDueDate() == null || exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now()))) {\n             // Exam Exercise\n             if (!authCheckService.isAtLeastInstructorForExercise(exercise, user)) {\n                 return forbidden();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4MDI1NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1821#discussion_r450680255", "bodyText": "Add explicit test case", "author": "sascha11110", "createdAt": "2020-07-07T08:01:08Z", "path": "src/test/java/de/tum/in/www1/artemis/ExerciseIntegrationTest.java", "diffHunk": "@@ -206,12 +206,6 @@ public void testGetExamExercise_asStudent_forbidden() throws Exception {\n         getExamExercise();\n     }\n \n-    @Test\n-    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n-    public void testGetExamExercise_asTutor_forbidden() throws Exception {\n-        getExamExercise();\n-    }\n-", "originalCommit": "a25cf3725ce532f9a7f3f9d38e5dda10db186e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4MDg2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1821#discussion_r450680862", "bodyText": "Possibly not all of the routes should be open to tutors", "author": "sascha11110", "createdAt": "2020-07-07T08:02:15Z", "path": "src/test/java/de/tum/in/www1/artemis/service/ExamAccessServiceTest.java", "diffHunk": "@@ -114,29 +114,6 @@ public void testCheckCourseAccess_asStudent() {\n         assertThat(accessFailureCourseAndExamAndStudentExam.get()).isEqualTo(forbidden());\n     }\n \n-    @Test\n-    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n-    public void testCheckCourseAccess_asTutor() {\n-        // checkCourseAccess\n-        Optional<ResponseEntity<Exam>> accessFailureCourse = examAccessService.checkCourseAccess(course1.getId());\n-        assertThat(accessFailureCourse.isPresent()).isTrue();\n-        assertThat(accessFailureCourse.get()).isEqualTo(forbidden());\n-        // checkCourseAndExamAccess\n-        Optional<ResponseEntity<Exam>> accessFailureCourseAndExam = examAccessService.checkCourseAndExamAccess(course1.getId(), exam1.getId());\n-        assertThat(accessFailureCourseAndExam.isPresent()).isTrue();\n-        assertThat(accessFailureCourseAndExam.get()).isEqualTo(forbidden());\n-        // checkCourseAndExamAndExerciseGroupAccess\n-        Optional<ResponseEntity<Exam>> accessFailureCourseAndExamAndExerciseGroup = examAccessService.checkCourseAndExamAndExerciseGroupAccess(course1.getId(), exam1.getId(),\n-                exerciseGroup1.getId());\n-        assertThat(accessFailureCourseAndExamAndExerciseGroup.isPresent()).isTrue();\n-        assertThat(accessFailureCourseAndExamAndExerciseGroup.get()).isEqualTo(forbidden());\n-        // checkCourseAndExamAndStudentExamAccess\n-        Optional<ResponseEntity<Exam>> accessFailureCourseAndExamAndStudentExam = examAccessService.checkCourseAndExamAndStudentExamAccess(course1.getId(), exam1.getId(),\n-                studentExam1.getId());\n-        assertThat(accessFailureCourseAndExamAndStudentExam.isPresent()).isTrue();\n-        assertThat(accessFailureCourseAndExamAndStudentExam.get()).isEqualTo(forbidden());\n-    }\n-", "originalCommit": "a25cf3725ce532f9a7f3f9d38e5dda10db186e6d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25345d3d8d0e6da3506ab649e8402697ddf5aa7b", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/service/ExamAccessServiceTest.java b/src/test/java/de/tum/in/www1/artemis/service/ExamAccessServiceTest.java\nindex 88597fd157..a481462e3d 100644\n--- a/src/test/java/de/tum/in/www1/artemis/service/ExamAccessServiceTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/service/ExamAccessServiceTest.java\n\n@@ -114,15 +114,40 @@ public class ExamAccessServiceTest extends AbstractSpringIntegrationBambooBitbuc\n         assertThat(accessFailureCourseAndExamAndStudentExam.get()).isEqualTo(forbidden());\n     }\n \n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testCheckCourseAccess_asTutor() {\n+        // checkCourseAccess\n+        Optional<ResponseEntity<Exam>> accessFailureCourse = examAccessService.checkCourseAccessForInstructor(course1.getId());\n+        assertThat(accessFailureCourse.isPresent()).isTrue();\n+        assertThat(accessFailureCourse.get()).isEqualTo(forbidden());\n+        // checkCourseAndExamAccess\n+        Optional<ResponseEntity<Exam>> accessFailureCourseAndExam = examAccessService.checkCourseAndExamAccessForInstructor(course1.getId(), exam1.getId());\n+        assertThat(accessFailureCourseAndExam.isPresent()).isTrue();\n+        assertThat(accessFailureCourseAndExam.get()).isEqualTo(forbidden());\n+        // checkCourseAndExamAndExerciseGroupAccess\n+        Optional<ResponseEntity<Exam>> accessFailureCourseAndExamAndExerciseGroup = examAccessService.checkCourseAndExamAndExerciseGroupAccess(course1.getId(), exam1.getId(),\n+                exerciseGroup1.getId());\n+        assertThat(accessFailureCourseAndExamAndExerciseGroup.isPresent()).isTrue();\n+        assertThat(accessFailureCourseAndExamAndExerciseGroup.get()).isEqualTo(forbidden());\n+        // checkCourseAndExamAndStudentExamAccess\n+        Optional<ResponseEntity<Exam>> accessFailureCourseAndExamAndStudentExam = examAccessService.checkCourseAndExamAndStudentExamAccess(course1.getId(), exam1.getId(),\n+                studentExam1.getId());\n+        assertThat(accessFailureCourseAndExamAndStudentExam.isPresent()).isTrue();\n+        assertThat(accessFailureCourseAndExamAndStudentExam.get()).isEqualTo(forbidden());\n+    }\n+\n+    // TODO: also test checkCourseAndExamAccessForInstructor() and checkCourseAndExamAccessForTeachingAssistant()\n+\n     @Test\n     @WithMockUser(username = \"instructor2\", roles = \"INSTRUCTOR\")\n     public void testCheckCourseAccess_asInstructorWithoutCourseAccess() {\n         // checkCourseAccess\n-        Optional<ResponseEntity<Exam>> accessFailureCourse = examAccessService.checkCourseAccess(course1.getId());\n+        Optional<ResponseEntity<Exam>> accessFailureCourse = examAccessService.checkCourseAccessForInstructor(course1.getId());\n         assertThat(accessFailureCourse.isPresent()).isTrue();\n         assertThat(accessFailureCourse.get()).isEqualTo(forbidden());\n         // checkCourseAndExamAccess\n-        Optional<ResponseEntity<Exam>> accessFailureCourseAndExam = examAccessService.checkCourseAndExamAccess(course1.getId(), exam1.getId());\n+        Optional<ResponseEntity<Exam>> accessFailureCourseAndExam = examAccessService.checkCourseAndExamAccessForInstructor(course1.getId(), exam1.getId());\n         assertThat(accessFailureCourseAndExam.isPresent()).isTrue();\n         assertThat(accessFailureCourseAndExam.get()).isEqualTo(forbidden());\n         // checkCourseAndExamAndExerciseGroupAccess\n"}}, {"oid": "58ce2d56d23e8dccc311b10e4714250cc0ef3541", "url": "https://github.com/ls1intum/Artemis/commit/58ce2d56d23e8dccc311b10e4714250cc0ef3541", "message": "route access for client", "committedDate": "2020-07-07T08:09:37Z", "type": "commit"}, {"oid": "c24bda3c2f392542094945d5bc09914f4f65f68d", "url": "https://github.com/ls1intum/Artemis/commit/c24bda3c2f392542094945d5bc09914f4f65f68d", "message": "add ta to rest route", "committedDate": "2020-07-07T08:14:58Z", "type": "commit"}, {"oid": "5090054a5282b25f18517e395749f370c67e141e", "url": "https://github.com/ls1intum/Artemis/commit/5090054a5282b25f18517e395749f370c67e141e", "message": "add ta access to button", "committedDate": "2020-07-07T08:26:09Z", "type": "commit"}, {"oid": "2513d71185c4b859a8fe3fc819e59b278060f9ac", "url": "https://github.com/ls1intum/Artemis/commit/2513d71185c4b859a8fe3fc819e59b278060f9ac", "message": "add ta access to button check", "committedDate": "2020-07-07T08:30:34Z", "type": "commit"}, {"oid": "001f0bf5fd68f370604f6109e298abccea504694", "url": "https://github.com/ls1intum/Artemis/commit/001f0bf5fd68f370604f6109e298abccea504694", "message": "add await for consistency", "committedDate": "2020-07-07T08:39:07Z", "type": "commit"}, {"oid": "25345d3d8d0e6da3506ab649e8402697ddf5aa7b", "url": "https://github.com/ls1intum/Artemis/commit/25345d3d8d0e6da3506ab649e8402697ddf5aa7b", "message": "Revert changes in ExamServiceTest", "committedDate": "2020-07-07T09:17:26Z", "type": "commit"}, {"oid": "ace384ab1155b4caa253dff341a5e7e7a8549ef0", "url": "https://github.com/ls1intum/Artemis/commit/ace384ab1155b4caa253dff341a5e7e7a8549ef0", "message": "Add check methods for teaching assistants and instructors", "committedDate": "2020-07-07T09:27:53Z", "type": "commit"}, {"oid": "b9a7f5bafa29ab422f54f60f310a2f0428d23dfc", "url": "https://github.com/ls1intum/Artemis/commit/b9a7f5bafa29ab422f54f60f310a2f0428d23dfc", "message": "update programing exercise isAtleastInstructor and isAtLeastTutor sets", "committedDate": "2020-07-07T09:31:36Z", "type": "commit"}, {"oid": "73da6efd573ee6a5551eceaf641020d59ba0ba69", "url": "https://github.com/ls1intum/Artemis/commit/73da6efd573ee6a5551eceaf641020d59ba0ba69", "message": "Merge branch 'bugfix/exam-mode/tutor-dashboard' of github.com:ls1intum/Artemis into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T09:32:11Z", "type": "commit"}, {"oid": "30eefbd3d4842183b930665c667a6d475813298d", "url": "https://github.com/ls1intum/Artemis/commit/30eefbd3d4842183b930665c667a6d475813298d", "message": "load isTutor & isInstructor for scores page", "committedDate": "2020-07-07T09:56:32Z", "type": "commit"}, {"oid": "02a7a85a23b326c49512b7ddf6cf10c613f00eab", "url": "https://github.com/ls1intum/Artemis/commit/02a7a85a23b326c49512b7ddf6cf10c613f00eab", "message": "Extend ExamAccessServiceTest for new methods", "committedDate": "2020-07-07T10:46:21Z", "type": "commit"}, {"oid": "a3f9599b0f348b8b427fe4d5cc1e32b4e93c6d75", "url": "https://github.com/ls1intum/Artemis/commit/a3f9599b0f348b8b427fe4d5cc1e32b4e93c6d75", "message": "Merge branch 'develop' into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T10:47:03Z", "type": "commit"}, {"oid": "fe352c1c71d6288e1e3515d2ca0ac729ffcb6a4d", "url": "https://github.com/ls1intum/Artemis/commit/fe352c1c71d6288e1e3515d2ca0ac729ffcb6a4d", "message": "Prevent NPE", "committedDate": "2020-07-07T10:48:13Z", "type": "commit"}, {"oid": "ef1fb4d090dec17356d0d5a67e10ea5f872e1e84", "url": "https://github.com/ls1intum/Artemis/commit/ef1fb4d090dec17356d0d5a67e10ea5f872e1e84", "message": "Merge remote-tracking branch 'origin/bugfix/exam-mode/tutor-dashboard' into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T10:48:29Z", "type": "commit"}, {"oid": "eace26ed583129e911ceea46d8794c2526f3b2dd", "url": "https://github.com/ls1intum/Artemis/commit/eace26ed583129e911ceea46d8794c2526f3b2dd", "message": "Open get exams for course route for teaching assistants", "committedDate": "2020-07-07T11:27:38Z", "type": "commit"}, {"oid": "2f0ffc5d67476f9a08315dc45989db18698beb95", "url": "https://github.com/ls1intum/Artemis/commit/2f0ffc5d67476f9a08315dc45989db18698beb95", "message": "Fix ExamIntegrationTest", "committedDate": "2020-07-07T11:46:16Z", "type": "commit"}, {"oid": "40223e5a4aea75eedb2939a62da950fb9e3173ac", "url": "https://github.com/ls1intum/Artemis/commit/40223e5a4aea75eedb2939a62da950fb9e3173ac", "message": "Adjust teaching assistant access check logic", "committedDate": "2020-07-07T11:59:37Z", "type": "commit"}, {"oid": "73365db642830289055aaff6f3b1bc9ee18f739f", "url": "https://github.com/ls1intum/Artemis/commit/73365db642830289055aaff6f3b1bc9ee18f739f", "message": "adjust exam dashboard title", "committedDate": "2020-07-07T12:09:49Z", "type": "commit"}, {"oid": "70795853f248569a3e3f7a6bee0e814e509cecda", "url": "https://github.com/ls1intum/Artemis/commit/70795853f248569a3e3f7a6bee0e814e509cecda", "message": "Merge branch 'bugfix/exam-mode/tutor-dashboard' of https://github.com/ls1intum/Artemis into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T12:11:18Z", "type": "commit"}, {"oid": "f9d177bc42354f84e68a60810b225fc858ac1b90", "url": "https://github.com/ls1intum/Artemis/commit/f9d177bc42354f84e68a60810b225fc858ac1b90", "message": "Merge branch 'develop' into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T12:12:44Z", "type": "commit"}, {"oid": "8838994be1fd2688ac6555f2d8684fb9cdb4a481", "url": "https://github.com/ls1intum/Artemis/commit/8838994be1fd2688ac6555f2d8684fb9cdb4a481", "message": "fix console error", "committedDate": "2020-07-07T13:02:39Z", "type": "commit"}, {"oid": "dd482d0f5b984e162ac92ecc66b3e0b9312ec569", "url": "https://github.com/ls1intum/Artemis/commit/dd482d0f5b984e162ac92ecc66b3e0b9312ec569", "message": "Merge branch 'bugfix/exam-mode/tutor-dashboard' of https://github.com/ls1intum/Artemis into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T13:03:40Z", "type": "commit"}, {"oid": "66949b97ae6fc779af19b8ede29af1da0c60ae71", "url": "https://github.com/ls1intum/Artemis/commit/66949b97ae6fc779af19b8ede29af1da0c60ae71", "message": "Merge branch 'develop' into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T14:04:32Z", "type": "commit"}, {"oid": "407d460f789fc2a8c6e87d5d15a1b3a755e79eb2", "url": "https://github.com/ls1intum/Artemis/commit/407d460f789fc2a8c6e87d5d15a1b3a755e79eb2", "message": "fix null im url", "committedDate": "2020-07-07T14:12:15Z", "type": "commit"}, {"oid": "af3b7d57c821fbad730bb0cca01f86d16c248d2f", "url": "https://github.com/ls1intum/Artemis/commit/af3b7d57c821fbad730bb0cca01f86d16c248d2f", "message": "Merge branch 'develop' into bugfix/exam-mode/tutor-dashboard", "committedDate": "2020-07-07T14:22:58Z", "type": "commit"}]}