{"pr_number": 1170, "pr_title": "Models for team-based exercises", "pr_createdAt": "2020-01-06T16:50:51Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1170", "timeline": [{"oid": "24a03ec1b38b07e0459e4bbd692177c3ff24e540", "url": "https://github.com/ls1intum/Artemis/commit/24a03ec1b38b07e0459e4bbd692177c3ff24e540", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-17T14:41:35Z", "type": "commit"}, {"oid": "4899cb6127f792aaacd452495d2d7cfe440095c3", "url": "https://github.com/ls1intum/Artemis/commit/4899cb6127f792aaacd452495d2d7cfe440095c3", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models\n\n# Conflicts:\n#\tsrc/main/webapp/app/app.module.ts\n#\tsrc/main/webapp/app/entities/exercise/exercise.model.ts\n#\tsrc/main/webapp/app/entities/file-upload-exercise/file-upload-exercise.module.ts\n#\tsrc/main/webapp/app/entities/modeling-exercise/modeling-exercise.module.ts\n#\tsrc/main/webapp/app/entities/participation/index.ts\n#\tsrc/main/webapp/app/entities/participation/participation.model.ts\n#\tsrc/main/webapp/app/entities/programming-exercise/programming-exercise.module.ts\n#\tsrc/main/webapp/app/entities/text-exercise/text-exercise.module.ts\n#\tsrc/main/webapp/app/shared/alert/alert-error.component.ts", "committedDate": "2020-02-18T09:11:15Z", "type": "commit"}, {"oid": "095c9e11cb7ef013b26cfdf1b6653cbe0c4e95c8", "url": "https://github.com/ls1intum/Artemis/commit/095c9e11cb7ef013b26cfdf1b6653cbe0c4e95c8", "message": "Fix imports (consequence of index.ts removal)", "committedDate": "2020-02-18T09:27:57Z", "type": "commit"}, {"oid": "bae24f4e98840992601adf2d90b74b6ebf44c385", "url": "https://github.com/ls1intum/Artemis/commit/bae24f4e98840992601adf2d90b74b6ebf44c385", "message": "Converted shortName needs to be queried, do not use distinctUntilChanged since it messes with the validation", "committedDate": "2020-02-18T09:39:09Z", "type": "commit"}, {"oid": "b99f579b8236644449937f37f8050cceb2852fee", "url": "https://github.com/ls1intum/Artemis/commit/b99f579b8236644449937f37f8050cceb2852fee", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-18T10:03:16Z", "type": "commit"}, {"oid": "3ce7ab0bbe9293a07f9d11d77ffe3b6a401c857f", "url": "https://github.com/ls1intum/Artemis/commit/3ce7ab0bbe9293a07f9d11d77ffe3b6a401c857f", "message": "Handle empty team", "committedDate": "2020-02-18T10:49:38Z", "type": "commit"}, {"oid": "0b6edcee6dbb1be8a07f5f3976799e46d161ae87", "url": "https://github.com/ls1intum/Artemis/commit/0b6edcee6dbb1be8a07f5f3976799e46d161ae87", "message": "Remove inheritance for Team", "committedDate": "2020-02-18T11:59:01Z", "type": "commit"}, {"oid": "3d1720f2b73612450883e3c1c53f4158c35456d1", "url": "https://github.com/ls1intum/Artemis/commit/3d1720f2b73612450883e3c1c53f4158c35456d1", "message": "Remove not needed methods from Participation", "committedDate": "2020-02-18T12:07:08Z", "type": "commit"}, {"oid": "6f82afd9757a0acde92915f9526e4ee245381cbc", "url": "https://github.com/ls1intum/Artemis/commit/6f82afd9757a0acde92915f9526e4ee245381cbc", "message": "Add todos", "committedDate": "2020-02-18T12:24:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU2NjYxMw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380566613", "bodyText": "You can use primitive bool here", "author": "maxr96", "createdAt": "2020-02-18T09:55:57Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "diffHunk": "@@ -441,6 +504,10 @@ public Boolean isEnded() {\n         return ZonedDateTime.now().isAfter(getDueDate());\n     }\n \n+    public Boolean isTeamMode() {", "originalCommit": "bae24f4e98840992601adf2d90b74b6ebf44c385", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1NjY5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380756697", "bodyText": "Done", "author": "madwau", "createdAt": "2020-02-18T15:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU2NjYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "34bd453ccea9ada315c0f54de16759cd8772b70f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java b/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\nindex a259b40a9a..d657fc6f4c 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\n\n@@ -504,7 +509,7 @@ public abstract class Exercise implements Serializable {\n         return ZonedDateTime.now().isAfter(getDueDate());\n     }\n \n-    public Boolean isTeamMode() {\n+    public boolean isTeamMode() {\n         return mode == ExerciseMode.TEAM;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU3Mzc4NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380573785", "bodyText": "I believe this should not be necessary.", "author": "maxr96", "createdAt": "2020-02-18T10:08:23Z", "path": "src/main/java/de/tum/in/www1/artemis/repository/TeamRepository.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.Team;\n+\n+/**\n+ * Spring Data repository for the Team entity.\n+ */\n+@SuppressWarnings(\"unused\")", "originalCommit": "b99f579b8236644449937f37f8050cceb2852fee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1Njg0Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380756843", "bodyText": "Removed", "author": "madwau", "createdAt": "2020-02-18T15:45:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU3Mzc4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "34bd453ccea9ada315c0f54de16759cd8772b70f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/repository/TeamRepository.java b/src/main/java/de/tum/in/www1/artemis/repository/TeamRepository.java\nindex 89be14c74a..8460a2bfa1 100644\n--- a/src/main/java/de/tum/in/www1/artemis/repository/TeamRepository.java\n+++ b/src/main/java/de/tum/in/www1/artemis/repository/TeamRepository.java\n\n@@ -13,7 +13,6 @@ import de.tum.in.www1.artemis.domain.Team;\n /**\n  * Spring Data repository for the Team entity.\n  */\n-@SuppressWarnings(\"unused\")\n @Repository\n public interface TeamRepository extends JpaRepository<Team, Long> {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU3OTUxNA==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380579514", "bodyText": "PUT mapping should have an id that you refer to https://restfulapi.net/resource-naming/", "author": "maxr96", "createdAt": "2020-02-18T10:18:45Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java", "diffHunk": "@@ -0,0 +1,188 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.forbidden;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.Team;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.TeamRepository;\n+import de.tum.in.www1.artemis.service.*;\n+import de.tum.in.www1.artemis.web.rest.errors.BadRequestAlertException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Teams.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class TeamResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(TeamResource.class);\n+\n+    public static final String ENTITY_NAME = \"team\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final TeamRepository teamRepository;\n+\n+    private final TeamService teamService;\n+\n+    private final ExerciseService exerciseService;\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final UserService userService;\n+\n+    public TeamResource(TeamRepository teamRepository, TeamService teamService, ExerciseService exerciseService, UserService userService,\n+            AuthorizationCheckService authCheckService) {\n+        this.teamRepository = teamRepository;\n+        this.teamService = teamService;\n+        this.exerciseService = exerciseService;\n+        this.userService = userService;\n+        this.authCheckService = authCheckService;\n+    }\n+\n+    /**\n+     * POST /exercises/{exerciseId}/teams : Create a new team for an exercise.\n+     *\n+     * @param team the team to create\n+     * @param exerciseId the exercise id for which to create a team\n+     * @return the ResponseEntity with status 201 (Created) and with body the new team, or with status 400 (Bad Request) if the team already has an ID\n+     * @throws URISyntaxException if the Location URI syntax is incorrect\n+     */\n+    @PostMapping(\"/exercises/{exerciseId}/teams\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Team> createTeam(@RequestBody Team team, @PathVariable Long exerciseId) throws URISyntaxException {\n+        log.debug(\"REST request to save Team : {}\", team);\n+        if (team.getId() != null) {\n+            throw new BadRequestAlertException(\"A new team cannot already have an ID\", ENTITY_NAME, \"idexists\");\n+        }\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        Exercise exercise = exerciseService.findOne(exerciseId);\n+        if (!authCheckService.isAtLeastTeachingAssistantForExercise(exercise, user)) {\n+            return forbidden();\n+        }\n+        Team result = teamService.save(exercise, team);\n+        return ResponseEntity.created(new URI(\"/api/teams/\" + result.getId()))\n+                .headers(HeaderUtil.createEntityCreationAlert(applicationName, true, ENTITY_NAME, result.getId().toString())).body(result);\n+    }\n+\n+    /**\n+     * PUT /teams : Updates an existing team.\n+     *\n+     * @param team the team to update\n+     * @return the ResponseEntity with status 200 (OK) and with body the updated team, or with status 400 (Bad Request) if the team is not valid, or with status 500 (Internal\n+     * Server Error) if the team couldn't be updated\n+     * @throws URISyntaxException if the Location URI syntax is incorrect\n+     */\n+    @PutMapping(\"/teams\")", "originalCommit": "b99f579b8236644449937f37f8050cceb2852fee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1Njk0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380756945", "bodyText": "Changed", "author": "madwau", "createdAt": "2020-02-18T15:45:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU3OTUxNA=="}], "type": "inlineReview", "revised_code": {"commit": "6f82afd9757a0acde92915f9526e4ee245381cbc", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java\nindex b94c4d9397..57211d12fd 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java\n\n@@ -88,6 +88,7 @@ public class TeamResource {\n      * Server Error) if the team couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n+    // TODO: Martin Wauligmann - Move to exercise scope\n     @PutMapping(\"/teams\")\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<Team> updateTeam(@RequestBody Team team) throws URISyntaxException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU4NTk3MA==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380585970", "bodyText": "You can change all path variables to primitive types, as they can't be null anyways.", "author": "maxr96", "createdAt": "2020-02-18T10:30:13Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java", "diffHunk": "@@ -0,0 +1,188 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import static de.tum.in.www1.artemis.web.rest.util.ResponseUtil.forbidden;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.Team;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.TeamRepository;\n+import de.tum.in.www1.artemis.service.*;\n+import de.tum.in.www1.artemis.web.rest.errors.BadRequestAlertException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Teams.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class TeamResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(TeamResource.class);\n+\n+    public static final String ENTITY_NAME = \"team\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final TeamRepository teamRepository;\n+\n+    private final TeamService teamService;\n+\n+    private final ExerciseService exerciseService;\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final UserService userService;\n+\n+    public TeamResource(TeamRepository teamRepository, TeamService teamService, ExerciseService exerciseService, UserService userService,\n+            AuthorizationCheckService authCheckService) {\n+        this.teamRepository = teamRepository;\n+        this.teamService = teamService;\n+        this.exerciseService = exerciseService;\n+        this.userService = userService;\n+        this.authCheckService = authCheckService;\n+    }\n+\n+    /**\n+     * POST /exercises/{exerciseId}/teams : Create a new team for an exercise.\n+     *\n+     * @param team the team to create\n+     * @param exerciseId the exercise id for which to create a team\n+     * @return the ResponseEntity with status 201 (Created) and with body the new team, or with status 400 (Bad Request) if the team already has an ID\n+     * @throws URISyntaxException if the Location URI syntax is incorrect\n+     */\n+    @PostMapping(\"/exercises/{exerciseId}/teams\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Team> createTeam(@RequestBody Team team, @PathVariable Long exerciseId) throws URISyntaxException {", "originalCommit": "b99f579b8236644449937f37f8050cceb2852fee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc1NzA1NA==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r380757054", "bodyText": "Changed", "author": "madwau", "createdAt": "2020-02-18T15:45:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU4NTk3MA=="}], "type": "inlineReview", "revised_code": {"commit": "6f82afd9757a0acde92915f9526e4ee245381cbc", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java\nindex b94c4d9397..57211d12fd 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/TeamResource.java\n\n@@ -88,6 +88,7 @@ public class TeamResource {\n      * Server Error) if the team couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n+    // TODO: Martin Wauligmann - Move to exercise scope\n     @PutMapping(\"/teams\")\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<Team> updateTeam(@RequestBody Team team) throws URISyntaxException {\n"}}, {"oid": "1f9002a18d8aad8fff06c581cedaa6a8205da063", "url": "https://github.com/ls1intum/Artemis/commit/1f9002a18d8aad8fff06c581cedaa6a8205da063", "message": "Implement discussed changes (move team onto StudentParticipation + TODOs)", "committedDate": "2020-02-18T15:09:40Z", "type": "commit"}, {"oid": "a92d495c7930ca72a68dcca4afbd3f37e3a13707", "url": "https://github.com/ls1intum/Artemis/commit/a92d495c7930ca72a68dcca4afbd3f37e3a13707", "message": "Fix JavaDoc", "committedDate": "2020-02-18T15:14:15Z", "type": "commit"}, {"oid": "bb95c3b4900e2642a882c6ebebee4e7d7938218f", "url": "https://github.com/ls1intum/Artemis/commit/bb95c3b4900e2642a882c6ebebee4e7d7938218f", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models", "committedDate": "2020-02-18T15:14:41Z", "type": "commit"}, {"oid": "dd10ff257c0bfb4fe9ec445dafb415e5a9b7bcd6", "url": "https://github.com/ls1intum/Artemis/commit/dd10ff257c0bfb4fe9ec445dafb415e5a9b7bcd6", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models\n\n# Conflicts:\n#\tsrc/main/webapp/app/app.module.ts", "committedDate": "2020-02-18T15:19:46Z", "type": "commit"}, {"oid": "fc4b95ce602d24258b937b4fd8d5f2c42d72e80e", "url": "https://github.com/ls1intum/Artemis/commit/fc4b95ce602d24258b937b4fd8d5f2c42d72e80e", "message": "Ignore participant on StudentParticipation in json", "committedDate": "2020-02-18T15:22:11Z", "type": "commit"}, {"oid": "34bd453ccea9ada315c0f54de16759cd8772b70f", "url": "https://github.com/ls1intum/Artemis/commit/34bd453ccea9ada315c0f54de16759cd8772b70f", "message": "Maksym's feedback", "committedDate": "2020-02-18T15:43:12Z", "type": "commit"}, {"oid": "b5a69b088d0aae3578c8f9ddd72cf949f374d4d1", "url": "https://github.com/ls1intum/Artemis/commit/b5a69b088d0aae3578c8f9ddd72cf949f374d4d1", "message": "Small fixes (from testing)", "committedDate": "2020-02-18T16:34:12Z", "type": "commit"}, {"oid": "6850d5461c5f90ecacf7dab9b466d8fe988fbab2", "url": "https://github.com/ls1intum/Artemis/commit/6850d5461c5f90ecacf7dab9b466d8fe988fbab2", "message": "Small style fix", "committedDate": "2020-02-18T16:42:31Z", "type": "commit"}, {"oid": "6eaf9bc2a54a8c82fb86a578be27f87bb2b26b38", "url": "https://github.com/ls1intum/Artemis/commit/6eaf9bc2a54a8c82fb86a578be27f87bb2b26b38", "message": "Null checks", "committedDate": "2020-02-18T16:49:40Z", "type": "commit"}, {"oid": "88c9b35e3439206acf3a32eba4ae112465766de5", "url": "https://github.com/ls1intum/Artemis/commit/88c9b35e3439206acf3a32eba4ae112465766de5", "message": "Server tests for Teams", "committedDate": "2020-02-18T21:37:06Z", "type": "commit"}, {"oid": "638d844e70bd11db10630b8d70a12069178df324", "url": "https://github.com/ls1intum/Artemis/commit/638d844e70bd11db10630b8d70a12069178df324", "message": "Add mode to exercise", "committedDate": "2020-01-06T16:51:45Z", "type": "commit"}, {"oid": "5d2f115ae6d2e1899a9e20b24227487b9ca521f0", "url": "https://github.com/ls1intum/Artemis/commit/5d2f115ae6d2e1899a9e20b24227487b9ca521f0", "message": "Add liquibase changelog", "committedDate": "2020-01-06T16:52:00Z", "type": "commit"}, {"oid": "5235c398e139865f5703bca90a29161ff9fd5610", "url": "https://github.com/ls1intum/Artemis/commit/5235c398e139865f5703bca90a29161ff9fd5610", "message": "- add enum field \"teamScope\" (EXERCISE, COURSE) to exercise\n- add models Team and TeamParticipation", "committedDate": "2020-01-06T16:52:01Z", "type": "commit"}, {"oid": "924f36eb1b095407bfb8402f249a1b231d29f069", "url": "https://github.com/ls1intum/Artemis/commit/924f36eb1b095407bfb8402f249a1b231d29f069", "message": "- add team_id column to participation table", "committedDate": "2020-01-06T16:52:01Z", "type": "commit"}, {"oid": "924f36eb1b095407bfb8402f249a1b231d29f069", "url": "https://github.com/ls1intum/Artemis/commit/924f36eb1b095407bfb8402f249a1b231d29f069", "message": "- add team_id column to participation table", "committedDate": "2020-01-06T16:52:01Z", "type": "forcePushed"}, {"oid": "b172f699a582760a852d39b5233c85c7576bf2c1", "url": "https://github.com/ls1intum/Artemis/commit/b172f699a582760a852d39b5233c85c7576bf2c1", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models\n\n# Conflicts:\n#\tsrc/test/java/de/tum/in/www1/artemis/util/ModelFactory.java", "committedDate": "2020-01-06T17:02:33Z", "type": "commit"}, {"oid": "c627ee774ee927d96b380ef00fbd04450e5c9593", "url": "https://github.com/ls1intum/Artemis/commit/c627ee774ee927d96b380ef00fbd04450e5c9593", "message": "Move TeamParticipation to correct location", "committedDate": "2020-01-06T17:13:57Z", "type": "commit"}, {"oid": "04f42c73fabf6dda5aa7a3342cc4571655b6aab7", "url": "https://github.com/ls1intum/Artemis/commit/04f42c73fabf6dda5aa7a3342cc4571655b6aab7", "message": "Further model development (artemis.jh still needs adaptations to these changes)", "committedDate": "2020-01-07T00:11:57Z", "type": "commit"}, {"oid": "ce61366ae8f7995b784970927818f893a5b3c449", "url": "https://github.com/ls1intum/Artemis/commit/ce61366ae8f7995b784970927818f893a5b3c449", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-01-12T14:40:42Z", "type": "commit"}, {"oid": "ab33f293954c4eb8a38106ea9716023645f93d97", "url": "https://github.com/ls1intum/Artemis/commit/ab33f293954c4eb8a38106ea9716023645f93d97", "message": "Update artemis.jh", "committedDate": "2020-01-12T14:45:03Z", "type": "commit"}, {"oid": "3b6f116e30748353c5f05793dd32699b416cffff", "url": "https://github.com/ls1intum/Artemis/commit/3b6f116e30748353c5f05793dd32699b416cffff", "message": "Add team scope to toString method", "committedDate": "2020-01-12T14:46:46Z", "type": "commit"}, {"oid": "a983cc125a2850a8c5b9f874a752a80b6e4fa65c", "url": "https://github.com/ls1intum/Artemis/commit/a983cc125a2850a8c5b9f874a752a80b6e4fa65c", "message": "Remove wrong/redundant uc", "committedDate": "2020-01-12T15:03:55Z", "type": "commit"}, {"oid": "2539887cc11467189f0f2e29462788ac21193b3b", "url": "https://github.com/ls1intum/Artemis/commit/2539887cc11467189f0f2e29462788ac21193b3b", "message": "Add missing fks", "committedDate": "2020-01-12T15:21:40Z", "type": "commit"}, {"oid": "daa26f0788d2787d51409dd478126fcefcb002af", "url": "https://github.com/ls1intum/Artemis/commit/daa26f0788d2787d51409dd478126fcefcb002af", "message": "Fix spotless java", "committedDate": "2020-01-12T15:31:32Z", "type": "commit"}, {"oid": "ff1516701f33217dee6c09a32cd8229b53ebd109", "url": "https://github.com/ls1intum/Artemis/commit/ff1516701f33217dee6c09a32cd8229b53ebd109", "message": "Add fields \"mode\" and \"teamScope\" to programming exercise update component", "committedDate": "2020-01-12T16:30:23Z", "type": "commit"}, {"oid": "b1b65598de3f04ad0beda40fbcf45efd30e629d9", "url": "https://github.com/ls1intum/Artemis/commit/b1b65598de3f04ad0beda40fbcf45efd30e629d9", "message": "Add explanatory tooltips", "committedDate": "2020-01-12T16:47:38Z", "type": "commit"}, {"oid": "640bbd7313e9d5925c45fbbb668939e84d662618", "url": "https://github.com/ls1intum/Artemis/commit/640bbd7313e9d5925c45fbbb668939e84d662618", "message": "Team checks for setupProgrammingExercise", "committedDate": "2020-01-12T17:23:10Z", "type": "commit"}, {"oid": "7815f13985ba9252b6ed8d4d1fb132c734759e98", "url": "https://github.com/ls1intum/Artemis/commit/7815f13985ba9252b6ed8d4d1fb132c734759e98", "message": "Make TeamStudent an AbstractAuditingEntity (to be able to tell when a student has join a team and to be able to tell who assigned them into a team if a user did that)", "committedDate": "2020-01-12T18:48:10Z", "type": "commit"}, {"oid": "945b190af7e3c1eec2d790a292bf43907f22fbf1", "url": "https://github.com/ls1intum/Artemis/commit/945b190af7e3c1eec2d790a292bf43907f22fbf1", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-01-12T22:41:57Z", "type": "commit"}, {"oid": "7acdfbc216ffaaf9daee93841b68db2a8e473bff", "url": "https://github.com/ls1intum/Artemis/commit/7acdfbc216ffaaf9daee93841b68db2a8e473bff", "message": "Add missing class", "committedDate": "2020-01-12T23:07:56Z", "type": "commit"}, {"oid": "ad9e8e6e62203e4afd8de09d74d8bef8325bf6db", "url": "https://github.com/ls1intum/Artemis/commit/ad9e8e6e62203e4afd8de09d74d8bef8325bf6db", "message": "Merge remote-tracking branch 'origin/feature/team-based-exercises/models' into feature/team-based-exercises/models", "committedDate": "2020-01-12T23:08:17Z", "type": "commit"}, {"oid": "6df0ec43b5f05e27a4dec2bcac6be02f17e94b33", "url": "https://github.com/ls1intum/Artemis/commit/6df0ec43b5f05e27a4dec2bcac6be02f17e94b33", "message": "Add missing field", "committedDate": "2020-01-13T01:38:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjA2OA==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368236068", "bodyText": "This and methods below are completely duplicated from StudentParticipation class. Can we avoid this?", "author": "maxr96", "createdAt": "2020-01-18T16:43:50Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/participation/TeamParticipation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package de.tum.in.www1.artemis.domain.participation;\n+\n+import java.util.Optional;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.Hibernate;\n+\n+import com.fasterxml.jackson.annotation.JsonView;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.modeling.ModelingSubmission;\n+import de.tum.in.www1.artemis.domain.team.Team;\n+import de.tum.in.www1.artemis.domain.view.QuizView;\n+\n+@Entity\n+@DiscriminatorValue(value = \"TP\")\n+public class TeamParticipation extends Participation {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Column(name = \"presentation_score\")\n+    private Integer presentationScore;\n+\n+    @ManyToOne\n+    @JsonView(QuizView.Before.class)\n+    private Team team;\n+\n+    public Integer getPresentationScore() {\n+        return presentationScore;\n+    }\n+\n+    public TeamParticipation presentationScore(Integer presentationScore) {\n+        this.presentationScore = presentationScore;\n+        return this;\n+    }\n+\n+    public void setPresentationScore(Integer presentationScore) {\n+        this.presentationScore = presentationScore;\n+    }\n+\n+    public Team getTeam() {\n+        return team;\n+    }\n+\n+    public Participation team(Team team) {\n+        this.team = team;\n+        return this;\n+    }\n+\n+    public void setTeam(Team team) {\n+        this.team = team;\n+    }\n+\n+    public Exercise getExercise() {\n+        return exercise;\n+    }\n+\n+    public TeamParticipation exercise(Exercise exercise) {\n+        this.exercise = exercise;\n+        return this;\n+    }\n+\n+    public void setExercise(Exercise exercise) {\n+        this.exercise = exercise;\n+    }\n+\n+    /**\n+     * Removes the team from the participation, can be invoked to make sure that sensitive information is not sent to the client. E.g. tutors should not see information about\n+     * the team.\n+     */\n+    public void filterSensitiveInformation() {\n+        setTeam(null);\n+    }\n+\n+    private <T extends Submission> Optional<T> findLatestSubmissionOfType(Class<T> submissionType) {", "originalCommit": "6df0ec43b5f05e27a4dec2bcac6be02f17e94b33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYwNzg1OA==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368607858", "bodyText": "I was able to avoid the duplication by introducing a new abstract class ParticipantParticipation.\nThe name seems a bit forced but I couldn't think of anything better that would capture the essence of both StudentParticipation and TeamParticipation but does not include e.g. TutorParticipation. Alternatives that I dismissed were UserParticipation (would include TutorParticipation, StudentsParticipation (too similar to StudentParticipation, could cause confusion), BaseStudentParticipation, AbstractStudentParticipation (the last two would be feasible in my opinion but this kind of naming scheme isn't really used in the codebase so far). Let me know if you have a better idea regarding the naming.\nParticipantParticipation includes all the shared code while the subclasses implement the differences.", "author": "madwau", "createdAt": "2020-01-20T15:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNjA2OA=="}], "type": "inlineReview", "revised_code": {"commit": "24a03ec1b38b07e0459e4bbd692177c3ff24e540", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/participation/TeamParticipation.java b/src/main/java/de/tum/in/www1/artemis/domain/participation/TeamParticipation.java\nindex 61394e3b2b..32f6cbe601 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/participation/TeamParticipation.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/participation/TeamParticipation.java\n\n@@ -1,16 +1,10 @@\n package de.tum.in.www1.artemis.domain.participation;\n \n-import java.util.Optional;\n-\n import javax.persistence.*;\n \n-import org.hibernate.Hibernate;\n-\n import com.fasterxml.jackson.annotation.JsonView;\n \n import de.tum.in.www1.artemis.domain.*;\n-import de.tum.in.www1.artemis.domain.modeling.ModelingSubmission;\n-import de.tum.in.www1.artemis.domain.team.Team;\n import de.tum.in.www1.artemis.domain.view.QuizView;\n \n @Entity\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODQxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368238411", "bodyText": "I guess here you can set the default value, so you will not have to set in the test helper classes. Also as far as I understand it can't be set to null.", "author": "maxr96", "createdAt": "2020-01-18T17:32:43Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "diffHunk": "@@ -96,6 +94,14 @@\n     @Column(name = \"difficulty\")\n     private DifficultyLevel difficulty;\n \n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"mode\")\n+    private ExerciseMode mode;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"team_scope\")\n+    private TeamScope teamScope;", "originalCommit": "6df0ec43b5f05e27a4dec2bcac6be02f17e94b33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MjgyMw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368242823", "bodyText": "This is no longer relevant since the field has been removed (Stephan and I discussed that teams will always exist on an exercise scope for now. This might be extended back again at a later point).", "author": "madwau", "createdAt": "2020-01-18T19:00:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "24a03ec1b38b07e0459e4bbd692177c3ff24e540", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java b/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\nindex c3e2225b18..a259b40a9a 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\n\n@@ -98,9 +98,15 @@ public abstract class Exercise implements Serializable {\n     @Column(name = \"mode\")\n     private ExerciseMode mode;\n \n-    @Enumerated(EnumType.STRING)\n-    @Column(name = \"team_scope\")\n-    private TeamScope teamScope;\n+    @OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+    @JsonIgnoreProperties(\"exercise\")\n+    private TeamAssignmentConfig teamAssignmentConfig;\n+\n+    @OneToMany(mappedBy = \"exercise\", cascade = CascadeType.REMOVE, orphanRemoval = true, fetch = FetchType.LAZY)\n+    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+    @JsonIgnoreProperties(\"exercise\")\n+    private Set<Team> teams = new HashSet<>();\n \n     @Nullable\n     @Column(name = \"presentation_score_enabled\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODc0Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368238742", "bodyText": "All the methods below copy the ones from ProgrammingExerciseStudentParticipation. Can you move them out to a separate class and use them in both classes?", "author": "maxr96", "createdAt": "2020-01-18T17:40:11Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/participation/ProgrammingExerciseTeamParticipation.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package de.tum.in.www1.artemis.domain.participation;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+\n+import javax.persistence.Column;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonView;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.view.QuizView;\n+\n+@Entity\n+@DiscriminatorValue(value = \"PETP\")\n+public class ProgrammingExerciseTeamParticipation extends TeamParticipation implements ProgrammingExerciseParticipation {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Column(name = \"repository_url\")\n+    @JsonView(QuizView.Before.class)\n+    private String repositoryUrl;\n+\n+    @Column(name = \"build_plan_id\")\n+    @JsonView(QuizView.Before.class)\n+    private String buildPlanId;\n+\n+    public String getRepositoryUrl() {\n+        return repositoryUrl;\n+    }\n+\n+    public Participation repositoryUrl(String repositoryUrl) {\n+        this.repositoryUrl = repositoryUrl;\n+        return this;\n+    }\n+\n+    public void setRepositoryUrl(String repositoryUrl) {\n+        this.repositoryUrl = repositoryUrl;\n+    }\n+\n+    public String getBuildPlanId() {\n+        return buildPlanId;\n+    }\n+\n+    public Participation buildPlanId(String buildPlanId) {\n+        this.buildPlanId = buildPlanId;\n+        return this;\n+    }\n+\n+    public void setBuildPlanId(String buildPlanId) {\n+        this.buildPlanId = buildPlanId;\n+    }\n+\n+    /**\n+     * @return the repository URL as an URL Object\n+     */\n+    @JsonIgnore\n+    public URL getRepositoryUrlAsUrl() {", "originalCommit": "6df0ec43b5f05e27a4dec2bcac6be02f17e94b33", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYxMzE3NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368613175", "bodyText": "I think in this case we'll have to bite the bullet and live with the code duplication since multiple inheritance is not really supported in Java. If we were to extract out the shared code into a new abstract class ProgrammingExerciseParticipantParticipation, the class ProgrammingExerciseStudentParticipation would need to inherit from both the new class and from StudentParticipation (the case for ProgrammingExerciseTeamParticipation is analogous).\nWe actually already have this exact case in the current codebase: It is \"solved\" by having the interface ProgrammingExerciseParticipation that gets implemented by ProgrammingExerciseStudentParticipation, SolutionProgrammingExerciseParticipation and TemplateProgrammingExerciseParticipation. These three classes all pretty much duplicate the same code. Consistency is enforced via the interface but the code duplication can't really be avoided unfortunately :/", "author": "madwau", "createdAt": "2020-01-20T15:43:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2NTA2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368765062", "bodyText": "Yes, but we could still solve this problem. Java has default interface methods, which were originally introduced in order to provide backwards compatibility when adding new methods to interfaces. Normally, one should use an abstract class in most cases for default implementations. However, since we already have this interesting \"ProgrammingExerciseParticipation interface solution\" here, you could move all of this code into default methods in the interface.", "author": "ungaralex", "createdAt": "2020-01-21T00:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMjQ5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r369022497", "bodyText": "By all of this code do you mean getRepositoryUrlAsUrl? I think most of the other code can't be moved since default methods in interfaces can't access instance variables.", "author": "madwau", "createdAt": "2020-01-21T14:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzODc0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1f9002a18d8aad8fff06c581cedaa6a8205da063", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/participation/ProgrammingExerciseTeamParticipation.java b/src/main/java/de/tum/in/www1/artemis/domain/participation/ProgrammingExerciseTeamParticipation.java\ndeleted file mode 100644\nindex 2ff3d550c5..0000000000\n--- a/src/main/java/de/tum/in/www1/artemis/domain/participation/ProgrammingExerciseTeamParticipation.java\n+++ /dev/null\n\n@@ -1,105 +0,0 @@\n-package de.tum.in.www1.artemis.domain.participation;\n-\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-\n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonView;\n-\n-import de.tum.in.www1.artemis.domain.Exercise;\n-import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n-import de.tum.in.www1.artemis.domain.view.QuizView;\n-\n-@Entity\n-@DiscriminatorValue(value = \"PETP\")\n-public class ProgrammingExerciseTeamParticipation extends TeamParticipation implements ProgrammingExerciseParticipation {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    @Column(name = \"repository_url\")\n-    @JsonView(QuizView.Before.class)\n-    private String repositoryUrl;\n-\n-    @Column(name = \"build_plan_id\")\n-    @JsonView(QuizView.Before.class)\n-    private String buildPlanId;\n-\n-    public String getRepositoryUrl() {\n-        return repositoryUrl;\n-    }\n-\n-    public Participation repositoryUrl(String repositoryUrl) {\n-        this.repositoryUrl = repositoryUrl;\n-        return this;\n-    }\n-\n-    public void setRepositoryUrl(String repositoryUrl) {\n-        this.repositoryUrl = repositoryUrl;\n-    }\n-\n-    public String getBuildPlanId() {\n-        return buildPlanId;\n-    }\n-\n-    public Participation buildPlanId(String buildPlanId) {\n-        this.buildPlanId = buildPlanId;\n-        return this;\n-    }\n-\n-    public void setBuildPlanId(String buildPlanId) {\n-        this.buildPlanId = buildPlanId;\n-    }\n-\n-    /**\n-     * @return the repository URL as an URL Object\n-     */\n-    @JsonIgnore\n-    public URL getRepositoryUrlAsUrl() {\n-        if (repositoryUrl == null) {\n-            return null;\n-        }\n-\n-        try {\n-            return new URL(repositoryUrl);\n-        }\n-        catch (MalformedURLException e) {\n-            e.printStackTrace();\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    @JsonIgnore\n-    // TODO: this is a helper method to avoid casts in other classes that want to access the underlying exercise\n-    public ProgrammingExercise getProgrammingExercise() {\n-        Exercise exercise = getExercise();\n-        if (exercise instanceof ProgrammingExercise) { // this should always be the case except exercise is null\n-            return (ProgrammingExercise) exercise;\n-        }\n-        else {\n-            return null;\n-        }\n-    }\n-\n-    @Override\n-    public void setProgrammingExercise(ProgrammingExercise programmingExercise) {\n-        setExercise(programmingExercise);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"Participation{\" + \"id=\" + getId() + \", repositoryUrl='\" + getRepositoryUrl() + \"'\" + \", buildPlanId='\" + getBuildPlanId() + \"'\" + \", initializationState='\"\n-                + getInitializationState() + \"'\" + \", initializationDate='\" + getInitializationDate() + \"'\" + \", presentationScore=\" + getPresentationScore() + \"}\";\n-    }\n-\n-    @Override\n-    public Participation copyParticipationId() {\n-        var participation = new ProgrammingExerciseTeamParticipation();\n-        participation.setId(getId());\n-        return participation;\n-    }\n-}\n"}}, {"oid": "b531a7670017bd474b30b6472529292e5c51a857", "url": "https://github.com/ls1intum/Artemis/commit/b531a7670017bd474b30b6472529292e5c51a857", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-01-18T18:12:44Z", "type": "commit"}, {"oid": "88a955b83382e3af7632e2dcd3aaa35491b28afd", "url": "https://github.com/ls1intum/Artemis/commit/88a955b83382e3af7632e2dcd3aaa35491b28afd", "message": "Simplification: remove teamScope", "committedDate": "2020-01-18T18:15:18Z", "type": "commit"}, {"oid": "8f4a02ecca88e46ef1532982447078137ebc7895", "url": "https://github.com/ls1intum/Artemis/commit/8f4a02ecca88e46ef1532982447078137ebc7895", "message": "Simplification: simply models as discussed with Stephan", "committedDate": "2020-01-18T18:29:25Z", "type": "commit"}, {"oid": "56b77e5815311ffed1eb7610c39371e812803d9b", "url": "https://github.com/ls1intum/Artemis/commit/56b77e5815311ffed1eb7610c39371e812803d9b", "message": "Code sharing in new abstract class ParticipantParticipation", "committedDate": "2020-01-20T15:24:31Z", "type": "commit"}, {"oid": "48196fd83f66af44ff215330df6e833a896e78d8", "url": "https://github.com/ls1intum/Artemis/commit/48196fd83f66af44ff215330df6e833a896e78d8", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-01-20T15:44:00Z", "type": "commit"}, {"oid": "eb4b2f4eee84070651ba44872e28ef3ff952a491", "url": "https://github.com/ls1intum/Artemis/commit/eb4b2f4eee84070651ba44872e28ef3ff952a491", "message": "Cast to StudentParticipation (TeamParticipation will be considered later)", "committedDate": "2020-01-20T15:49:58Z", "type": "commit"}, {"oid": "017d843fd116d8a26a0fec6b1dc8426964262083", "url": "https://github.com/ls1intum/Artemis/commit/017d843fd116d8a26a0fec6b1dc8426964262083", "message": "Merge remote-tracking branch 'origin/feature/team-based-exercises/models' into feature/team-based-exercises/models", "committedDate": "2020-01-20T15:50:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYyNjA4Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368626083", "bodyText": "Can there be any other exercise modes besides team or individual in the future. Otherwise, we might only need a boolean here.", "author": "ungaralex", "createdAt": "2020-01-20T16:08:51Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "diffHunk": "@@ -96,6 +94,10 @@\n     @Column(name = \"difficulty\")\n     private DifficultyLevel difficulty;\n \n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"mode\")\n+    private ExerciseMode mode;", "originalCommit": "017d843fd116d8a26a0fec6b1dc8426964262083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4NzU0Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368987542", "bodyText": "I could imagine a couple of other exercises modes that might come up in the future, so I picked an enum to be on the safe side, also since the downside is pretty low in my opinion.\nPossible (but probably far out) scenarios for other exercise modes:\n\nsupervised (each student or team gets a tutor assigned as a mentor)\npublic (students work individually but submissions can be seen by everyone)", "author": "madwau", "createdAt": "2020-01-21T13:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYyNjA4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "24a03ec1b38b07e0459e4bbd692177c3ff24e540", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java b/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\nindex 86dbbfea33..a259b40a9a 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/Exercise.java\n\n@@ -98,6 +98,16 @@ public abstract class Exercise implements Serializable {\n     @Column(name = \"mode\")\n     private ExerciseMode mode;\n \n+    @OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+    @JsonIgnoreProperties(\"exercise\")\n+    private TeamAssignmentConfig teamAssignmentConfig;\n+\n+    @OneToMany(mappedBy = \"exercise\", cascade = CascadeType.REMOVE, orphanRemoval = true, fetch = FetchType.LAZY)\n+    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+    @JsonIgnoreProperties(\"exercise\")\n+    private Set<Team> teams = new HashSet<>();\n+\n     @Nullable\n     @Column(name = \"presentation_score_enabled\")\n     private Boolean presentationScoreEnabled = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2MjMyMg==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368762322", "bodyText": "I think you should make this a bidirectional relation, so that you can easily fetch all teams for a user. So, in User.java:\n@ManyToMany(mappedBy = \"students\")\n@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\nprivate Set<Team> teams;", "author": "ungaralex", "createdAt": "2020-01-21T00:00:43Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/Team.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+/**\n+ * A Team of students.\n+ */\n+@Entity\n+@Table(name = \"team\")\n+@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\n+@DiscriminatorColumn(name = \"discriminator\", discriminatorType = DiscriminatorType.STRING)\n+@DiscriminatorValue(value = \"T\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Team implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"name\")\n+    private String name;\n+\n+    @Column(name = \"image\")\n+    private String image;\n+\n+    @ManyToOne\n+    private Exercise exercise;\n+\n+    @ManyToMany\n+    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+    @JoinTable(name = \"team_student\", joinColumns = @JoinColumn(name = \"team_id\", referencedColumnName = \"id\"), inverseJoinColumns = @JoinColumn(name = \"student_id\", referencedColumnName = \"id\"))\n+    private Set<User> students = new HashSet<>();", "originalCommit": "017d843fd116d8a26a0fec6b1dc8426964262083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3ODUzMw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368978533", "bodyText": "I thought about this but I couldn't think of a use case for now where we would want to access all teams for a user, especially across exercises and courses. I think it's enough if I add that direction once the need arises.", "author": "madwau", "createdAt": "2020-01-21T12:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2MjMyMg=="}], "type": "inlineReview", "revised_code": {"commit": "24a03ec1b38b07e0459e4bbd692177c3ff24e540", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/Team.java b/src/main/java/de/tum/in/www1/artemis/domain/Team.java\nindex bb44b83132..41074f67e3 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/Team.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/Team.java\n\n@@ -10,6 +10,7 @@ import javax.persistence.*;\n import org.hibernate.annotations.Cache;\n import org.hibernate.annotations.CacheConcurrencyStrategy;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonInclude;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5ODg0NA==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r368998844", "bodyText": "get rid of it", "author": "krusche", "createdAt": "2020-01-21T13:28:25Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/participation/ParticipantParticipation.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package de.tum.in.www1.artemis.domain.participation;\n+\n+import java.util.Optional;\n+\n+import javax.persistence.Column;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.hibernate.Hibernate;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.modeling.ModelingSubmission;\n+\n+@Entity\n+@DiscriminatorValue(value = \"PP\")\n+public abstract class ParticipantParticipation extends Participation {", "originalCommit": "017d843fd116d8a26a0fec6b1dc8426964262083", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMTQ3Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1170#discussion_r369021473", "bodyText": "I got rid of ParticipantParticipation and moved the findLatest methods up from StudentParticipation into Participation.", "author": "madwau", "createdAt": "2020-01-21T14:10:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5ODg0NA=="}], "type": "inlineReview", "revised_code": {"commit": "24a03ec1b38b07e0459e4bbd692177c3ff24e540", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/participation/ParticipantParticipation.java b/src/main/java/de/tum/in/www1/artemis/domain/participation/ParticipantParticipation.java\ndeleted file mode 100644\nindex e449343a62..0000000000\n--- a/src/main/java/de/tum/in/www1/artemis/domain/participation/ParticipantParticipation.java\n+++ /dev/null\n\n@@ -1,108 +0,0 @@\n-package de.tum.in.www1.artemis.domain.participation;\n-\n-import java.util.Optional;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-\n-import org.hibernate.Hibernate;\n-\n-import de.tum.in.www1.artemis.domain.*;\n-import de.tum.in.www1.artemis.domain.modeling.ModelingSubmission;\n-\n-@Entity\n-@DiscriminatorValue(value = \"PP\")\n-public abstract class ParticipantParticipation extends Participation {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    @Column(name = \"presentation_score\")\n-    protected Integer presentationScore;\n-\n-    public Integer getPresentationScore() {\n-        return presentationScore;\n-    }\n-\n-    public ParticipantParticipation presentationScore(Integer presentationScore) {\n-        this.presentationScore = presentationScore;\n-        return this;\n-    }\n-\n-    public void setPresentationScore(Integer presentationScore) {\n-        this.presentationScore = presentationScore;\n-    }\n-\n-    public Exercise getExercise() {\n-        return exercise;\n-    }\n-\n-    public ParticipantParticipation exercise(Exercise exercise) {\n-        this.exercise = exercise;\n-        return this;\n-    }\n-\n-    public void setExercise(Exercise exercise) {\n-        this.exercise = exercise;\n-    }\n-\n-    /**\n-     * Removes the participant(s) from the participation, can be invoked to make sure that sensitive information is not sent to the client.\n-     * E.g. tutors should not see information about the student(s).\n-     */\n-    public abstract void filterSensitiveInformation();\n-\n-    private <T extends Submission> Optional<T> findLatestSubmissionOfType(Class<T> submissionType) {\n-        Optional<Submission> optionalSubmission = findLatestSubmission();\n-        if (optionalSubmission.isEmpty()) {\n-            return Optional.empty();\n-        }\n-\n-        Submission submission = optionalSubmission.get();\n-        // This unproxy is necessary to retrieve the right type of submission (e.g. TextSubmission) to be able to\n-        // compare it with the `submissionType` argument\n-        submission = (Submission) Hibernate.unproxy(submission);\n-\n-        if (submissionType.isInstance(submission)) {\n-            return Optional.of(submissionType.cast(submission));\n-        }\n-        else {\n-            return Optional.empty();\n-        }\n-    }\n-\n-    /**\n-     * Same functionality as findLatestSubmission() with the difference that this function only returns the found submission, if it is a modeling submission.\n-     *\n-     * @return the latest modeling submission or null\n-     */\n-    public Optional<ModelingSubmission> findLatestModelingSubmission() {\n-        return findLatestSubmissionOfType(ModelingSubmission.class);\n-    }\n-\n-    /**\n-     * Same functionality as findLatestSubmission() with the difference that this function only returns the found submission, if it is a text submission.\n-     *\n-     * @return the latest text submission or null\n-     */\n-    public Optional<TextSubmission> findLatestTextSubmission() {\n-        return findLatestSubmissionOfType(TextSubmission.class);\n-    }\n-\n-    /**\n-     * Same functionality as findLatestSubmission() with the difference that this function only returns the found submission, if it is a file upload submission.\n-     *\n-     * @return the latest file upload submission or null\n-     */\n-    public Optional<FileUploadSubmission> findLatestFileUploadSubmission() {\n-        return findLatestSubmissionOfType(FileUploadSubmission.class);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"ParticipantParticipation{\" + \"id=\" + getId() + \", presentationScore=\" + presentationScore + '}';\n-    }\n-\n-    @Override\n-    public abstract Participation copyParticipationId();\n-}\n"}}, {"oid": "e7ff6d2f75e3f74e3953490224402badd5836c92", "url": "https://github.com/ls1intum/Artemis/commit/e7ff6d2f75e3f74e3953490224402badd5836c92", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models", "committedDate": "2020-01-21T13:56:31Z", "type": "commit"}, {"oid": "dc89940ec3bb3f69fa360d73533dec296994aad6", "url": "https://github.com/ls1intum/Artemis/commit/dc89940ec3bb3f69fa360d73533dec296994aad6", "message": "Get rid of ParticipantParticipation, move shared methods from StudentParticipation into Participation", "committedDate": "2020-01-21T14:08:44Z", "type": "commit"}, {"oid": "57c80d940f1511323a3d3ddf3913737117b65eb5", "url": "https://github.com/ls1intum/Artemis/commit/57c80d940f1511323a3d3ddf3913737117b65eb5", "message": "Casts not needed anymore", "committedDate": "2020-01-21T14:15:41Z", "type": "commit"}, {"oid": "903b8ac88a45b9927117cbe430a306d999880c78", "url": "https://github.com/ls1intum/Artemis/commit/903b8ac88a45b9927117cbe430a306d999880c78", "message": "Add new frontend entities (consequences of that are WIP)", "committedDate": "2020-01-21T14:46:21Z", "type": "commit"}, {"oid": "bdbf3f27050a76be1a37306474f62277de6a02eb", "url": "https://github.com/ls1intum/Artemis/commit/bdbf3f27050a76be1a37306474f62277de6a02eb", "message": "Fix name collision", "committedDate": "2020-01-21T16:35:58Z", "type": "commit"}, {"oid": "bd4da4e61ad2f2585c5d73196f4d49b161a1461a", "url": "https://github.com/ls1intum/Artemis/commit/bd4da4e61ad2f2585c5d73196f4d49b161a1461a", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models", "committedDate": "2020-01-21T16:36:30Z", "type": "commit"}, {"oid": "52645be277c204d376210991777f2008a0273199", "url": "https://github.com/ls1intum/Artemis/commit/52645be277c204d376210991777f2008a0273199", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml", "committedDate": "2020-01-27T20:13:30Z", "type": "commit"}, {"oid": "c51af27daf9f7da002f984b1debda9d2fce938c8", "url": "https://github.com/ls1intum/Artemis/commit/c51af27daf9f7da002f984b1debda9d2fce938c8", "message": "Update changelog timestamp", "committedDate": "2020-01-27T20:16:51Z", "type": "commit"}, {"oid": "41ebc07a93063660a3f2fd3ec6629bdb3e8e2635", "url": "https://github.com/ls1intum/Artemis/commit/41ebc07a93063660a3f2fd3ec6629bdb3e8e2635", "message": "Fix user import", "committedDate": "2020-01-27T20:22:53Z", "type": "commit"}, {"oid": "20fb2658346c4122c955a48ddcbdf1a290ff3ea1", "url": "https://github.com/ls1intum/Artemis/commit/20fb2658346c4122c955a48ddcbdf1a290ff3ea1", "message": "Merge remote-tracking branch 'origin/develop' into feature/team-based-exercises/models\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml", "committedDate": "2020-02-02T17:38:18Z", "type": "commit"}, {"oid": "19aeac1b4dfea8fd4708db5bb4cae1aca528aa0d", "url": "https://github.com/ls1intum/Artemis/commit/19aeac1b4dfea8fd4708db5bb4cae1aca528aa0d", "message": "Update changelog timestamp", "committedDate": "2020-02-02T17:40:29Z", "type": "commit"}, {"oid": "55e9a860a6ddfcf624b5d08b7f1b424ef96b880c", "url": "https://github.com/ls1intum/Artemis/commit/55e9a860a6ddfcf624b5d08b7f1b424ef96b880c", "message": "Merge branch 'feature/team-based-exercises/create-programming-exercise' into feature/team-based-exercises/models\n\n# Conflicts:\n#\tsrc/main/webapp/app/entities/exercise/exercise.model.ts", "committedDate": "2020-02-02T17:45:10Z", "type": "commit"}, {"oid": "11490e864ce1a88c03335aab9490c9e737e452c0", "url": "https://github.com/ls1intum/Artemis/commit/11490e864ce1a88c03335aab9490c9e737e452c0", "message": "Remove team scope", "committedDate": "2020-02-02T17:55:51Z", "type": "commit"}, {"oid": "83894cbe689cefb5153bf3d65bb0726cbeeae005", "url": "https://github.com/ls1intum/Artemis/commit/83894cbe689cefb5153bf3d65bb0726cbeeae005", "message": "Add TeamAssignmentConfig", "committedDate": "2020-02-02T19:20:15Z", "type": "commit"}, {"oid": "83678b47d45ad3720231404b15843a92693d264d", "url": "https://github.com/ls1intum/Artemis/commit/83678b47d45ad3720231404b15843a92693d264d", "message": "Frontend entity for team assignment config", "committedDate": "2020-02-02T19:26:35Z", "type": "commit"}, {"oid": "bb5f4a3fa74450cb63821fe53da3fdb919f096db", "url": "https://github.com/ls1intum/Artemis/commit/bb5f4a3fa74450cb63821fe53da3fdb919f096db", "message": "Form with team assignment config fields", "committedDate": "2020-02-02T21:44:13Z", "type": "commit"}, {"oid": "6289a5d818c11aaa8eb1bada55336e7e12eaafa7", "url": "https://github.com/ls1intum/Artemis/commit/6289a5d818c11aaa8eb1bada55336e7e12eaafa7", "message": "Styling", "committedDate": "2020-02-02T22:05:38Z", "type": "commit"}, {"oid": "320cf11c89f1b2ab24d5f37f2f6999c2e8090a9a", "url": "https://github.com/ls1intum/Artemis/commit/320cf11c89f1b2ab24d5f37f2f6999c2e8090a9a", "message": "Factor out into own component for reuse", "committedDate": "2020-02-02T22:16:22Z", "type": "commit"}, {"oid": "1de62905e36c1d76dabf73983bbc732d5150e35c", "url": "https://github.com/ls1intum/Artemis/commit/1de62905e36c1d76dabf73983bbc732d5150e35c", "message": "Ensure proper range for team size input", "committedDate": "2020-02-03T13:02:10Z", "type": "commit"}, {"oid": "536cc83143bb23fca8a005693d2e879e2b6b1b9c", "url": "https://github.com/ls1intum/Artemis/commit/536cc83143bb23fca8a005693d2e879e2b6b1b9c", "message": "Improve team config state handling + integrate new component into all exercise types (except for quiz exercises where team mode does not make sense)", "committedDate": "2020-02-03T13:57:23Z", "type": "commit"}, {"oid": "73702ca22ff3167d471d9f1affe84d45720fa6e7", "url": "https://github.com/ls1intum/Artemis/commit/73702ca22ff3167d471d9f1affe84d45720fa6e7", "message": "Casecade all, fix validator", "committedDate": "2020-02-03T14:31:48Z", "type": "commit"}, {"oid": "0a8ca812d2f0085b8731c48c4657010507f4ca35", "url": "https://github.com/ls1intum/Artemis/commit/0a8ca812d2f0085b8731c48c4657010507f4ca35", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-03T14:32:50Z", "type": "commit"}, {"oid": "7feb83207deb177c5275b7116103b820908dbe8f", "url": "https://github.com/ls1intum/Artemis/commit/7feb83207deb177c5275b7116103b820908dbe8f", "message": "Fix mode picker emit, cascade persist config", "committedDate": "2020-02-03T16:34:59Z", "type": "commit"}, {"oid": "4b4076ed9e8f06f8ae1ef2d8efa1d5eb89e81cfd", "url": "https://github.com/ls1intum/Artemis/commit/4b4076ed9e8f06f8ae1ef2d8efa1d5eb89e81cfd", "message": "Keep existing config id in state", "committedDate": "2020-02-03T16:54:19Z", "type": "commit"}, {"oid": "4cf67c0302b5fa773dc581f76b02aa0d0254d652", "url": "https://github.com/ls1intum/Artemis/commit/4cf67c0302b5fa773dc581f76b02aa0d0254d652", "message": "add todo", "committedDate": "2020-02-03T16:57:24Z", "type": "commit"}, {"oid": "d94b727f31e661ab418cc09e4ad595a3c0ef7eaa", "url": "https://github.com/ls1intum/Artemis/commit/d94b727f31e661ab418cc09e4ad595a3c0ef7eaa", "message": "Team Resource, Service, Repository (basic setup)", "committedDate": "2020-02-03T18:16:52Z", "type": "commit"}, {"oid": "a208b3df6e1a81aa20f13f036a829057134d361d", "url": "https://github.com/ls1intum/Artemis/commit/a208b3df6e1a81aa20f13f036a829057134d361d", "message": "Team Service in frontend", "committedDate": "2020-02-03T18:21:47Z", "type": "commit"}, {"oid": "01cd57db8dae05c3dc4576e878946bfae04d59a3", "url": "https://github.com/ls1intum/Artemis/commit/01cd57db8dae05c3dc4576e878946bfae04d59a3", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-03T18:22:12Z", "type": "commit"}, {"oid": "a033cfbb3991bd632ef055cd59c39a87e0f9a60c", "url": "https://github.com/ls1intum/Artemis/commit/a033cfbb3991bd632ef055cd59c39a87e0f9a60c", "message": "Add boolean helper teamMode", "committedDate": "2020-02-03T19:17:00Z", "type": "commit"}, {"oid": "c98994eae0319cc0375129af2fca9c4d8d395b03", "url": "https://github.com/ls1intum/Artemis/commit/c98994eae0319cc0375129af2fca9c4d8d395b03", "message": "Include teams button for all relevant exercise types, add route exercise/:exerciseId/teams", "committedDate": "2020-02-03T19:50:30Z", "type": "commit"}, {"oid": "2fda689d445828b1f31479be266add8d31766bc9", "url": "https://github.com/ls1intum/Artemis/commit/2fda689d445828b1f31479be266add8d31766bc9", "message": "Missing css class", "committedDate": "2020-02-03T20:00:22Z", "type": "commit"}, {"oid": "c8a40428a128f318aace7faad0f6cc0f3951ab5e", "url": "https://github.com/ls1intum/Artemis/commit/c8a40428a128f318aace7faad0f6cc0f3951ab5e", "message": "Basic data table for teams", "committedDate": "2020-02-03T20:34:21Z", "type": "commit"}, {"oid": "2244b38f50c4a556488131f522c7e550f1d722bd", "url": "https://github.com/ls1intum/Artemis/commit/2244b38f50c4a556488131f522c7e550f1d722bd", "message": "Team create dialog", "committedDate": "2020-02-03T21:18:10Z", "type": "commit"}, {"oid": "3527875ec08a5167dee1a4a5eb32d5676f134c3b", "url": "https://github.com/ls1intum/Artemis/commit/3527875ec08a5167dee1a4a5eb32d5676f134c3b", "message": "Update team", "committedDate": "2020-02-03T22:24:40Z", "type": "commit"}, {"oid": "128d7578337a01dc7ea52247359428ff092620f7", "url": "https://github.com/ls1intum/Artemis/commit/128d7578337a01dc7ea52247359428ff092620f7", "message": "Label text", "committedDate": "2020-02-03T22:49:42Z", "type": "commit"}, {"oid": "3eecc07c2b969bba75ea75ced5bb6dd92d674f6d", "url": "https://github.com/ls1intum/Artemis/commit/3eecc07c2b969bba75ea75ced5bb6dd92d674f6d", "message": "Simple refresh for now", "committedDate": "2020-02-03T23:04:14Z", "type": "commit"}, {"oid": "97832155b7170ec1c7d746752de32bf74b8f6254", "url": "https://github.com/ls1intum/Artemis/commit/97832155b7170ec1c7d746752de32bf74b8f6254", "message": "Student search (WIP)", "committedDate": "2020-02-04T00:24:33Z", "type": "commit"}, {"oid": "58eb31c9b9c89d0a84cdebed54b48644f2e25d79", "url": "https://github.com/ls1intum/Artemis/commit/58eb31c9b9c89d0a84cdebed54b48644f2e25d79", "message": "Add selected users to team", "committedDate": "2020-02-04T00:38:54Z", "type": "commit"}, {"oid": "d801f2279b0321dabf1d09456b1970c6e05d885b", "url": "https://github.com/ls1intum/Artemis/commit/d801f2279b0321dabf1d09456b1970c6e05d885b", "message": "Selecting students works", "committedDate": "2020-02-04T01:00:33Z", "type": "commit"}, {"oid": "d47872b4d07d17dc8ce1b67aedf8dc92115bee5b", "url": "https://github.com/ls1intum/Artemis/commit/d47872b4d07d17dc8ce1b67aedf8dc92115bee5b", "message": "Fix put", "committedDate": "2020-02-04T01:06:42Z", "type": "commit"}, {"oid": "603aaea2dd0548da033595569aa48def5171cabd", "url": "https://github.com/ls1intum/Artemis/commit/603aaea2dd0548da033595569aa48def5171cabd", "message": "Polishing", "committedDate": "2020-02-04T01:46:59Z", "type": "commit"}, {"oid": "6693856328c7f046a1d9b51cea35168cebb83bdc", "url": "https://github.com/ls1intum/Artemis/commit/6693856328c7f046a1d9b51cea35168cebb83bdc", "message": "Switch from Formula to getter", "committedDate": "2020-02-04T17:03:14Z", "type": "commit"}, {"oid": "12947cf354319b2d5849b356c60ee23a73df7594", "url": "https://github.com/ls1intum/Artemis/commit/12947cf354319b2d5849b356c60ee23a73df7594", "message": "Pending team in modal, clean up request data", "committedDate": "2020-02-04T17:43:14Z", "type": "commit"}, {"oid": "165d4d1b177756bdce5ab2c108680645d8ef7f95", "url": "https://github.com/ls1intum/Artemis/commit/165d4d1b177756bdce5ab2c108680645d8ef7f95", "message": "State update", "committedDate": "2020-02-04T18:28:54Z", "type": "commit"}, {"oid": "f37293932e5cc718be26801ce12807e846a460ed", "url": "https://github.com/ls1intum/Artemis/commit/f37293932e5cc718be26801ce12807e846a460ed", "message": "Polish UX", "committedDate": "2020-02-04T19:23:40Z", "type": "commit"}, {"oid": "b8667788bfc9258e23cc8de7de089f9bda4c0280", "url": "https://github.com/ls1intum/Artemis/commit/b8667788bfc9258e23cc8de7de089f9bda4c0280", "message": "Allow searching by login or name", "committedDate": "2020-02-04T20:10:51Z", "type": "commit"}, {"oid": "bcd1c104dfc08ed726cbaceb7f18564de574993b", "url": "https://github.com/ls1intum/Artemis/commit/bcd1c104dfc08ed726cbaceb7f18564de574993b", "message": "Styling table", "committedDate": "2020-02-04T20:22:37Z", "type": "commit"}, {"oid": "60a5b55ef0308b412336afbc0f911ed51d82ca15", "url": "https://github.com/ls1intum/Artemis/commit/60a5b55ef0308b412336afbc0f911ed51d82ca15", "message": "Name ellipsis", "committedDate": "2020-02-04T20:49:43Z", "type": "commit"}, {"oid": "998f1ba3a3356b04ba2fea6c74feb214dc1d2141", "url": "https://github.com/ls1intum/Artemis/commit/998f1ba3a3356b04ba2fea6c74feb214dc1d2141", "message": "Property isAssignedToTeam", "committedDate": "2020-02-05T16:33:51Z", "type": "commit"}, {"oid": "e333c4bd46c337229b0e3c258d2623c5bc3c88e2", "url": "https://github.com/ls1intum/Artemis/commit/e333c4bd46c337229b0e3c258d2623c5bc3c88e2", "message": "Show student already assigned error in update dialog", "committedDate": "2020-02-09T22:39:45Z", "type": "commit"}, {"oid": "6a3fd47bee5aaf2ed41d439dcdd3c5da711a5f07", "url": "https://github.com/ls1intum/Artemis/commit/6a3fd47bee5aaf2ed41d439dcdd3c5da711a5f07", "message": "Allow multiple conflicts", "committedDate": "2020-02-09T23:11:18Z", "type": "commit"}, {"oid": "f09ea61c5febb3cffceba03da75a300341a9a673", "url": "https://github.com/ls1intum/Artemis/commit/f09ea61c5febb3cffceba03da75a300341a9a673", "message": "Title", "committedDate": "2020-02-09T23:38:50Z", "type": "commit"}, {"oid": "0e09b8d94ee75e79aa9d87529ff13f69d50b26fb", "url": "https://github.com/ls1intum/Artemis/commit/0e09b8d94ee75e79aa9d87529ff13f69d50b26fb", "message": "Remove fetch", "committedDate": "2020-02-09T23:59:41Z", "type": "commit"}, {"oid": "e3461afdcfd68f97b9866e9d5a78165a5791d9eb", "url": "https://github.com/ls1intum/Artemis/commit/e3461afdcfd68f97b9866e9d5a78165a5791d9eb", "message": "Style", "committedDate": "2020-02-10T00:04:42Z", "type": "commit"}, {"oid": "8cefa9122560c16e13ace7dc07dc03d7ff71e649", "url": "https://github.com/ls1intum/Artemis/commit/8cefa9122560c16e13ace7dc07dc03d7ff71e649", "message": "Disable unavailable users", "committedDate": "2020-02-10T00:55:38Z", "type": "commit"}, {"oid": "36cd3f90665a0e8ec258342f089614ed8b176775", "url": "https://github.com/ls1intum/Artemis/commit/36cd3f90665a0e8ec258342f089614ed8b176775", "message": "Prevent adding same user multiple times", "committedDate": "2020-02-10T21:07:11Z", "type": "commit"}, {"oid": "f880019a3176e110db9b1010dba41adbe1a41dd4", "url": "https://github.com/ls1intum/Artemis/commit/f880019a3176e110db9b1010dba41adbe1a41dd4", "message": "Only show team settings for admin role", "committedDate": "2020-02-10T21:30:04Z", "type": "commit"}, {"oid": "47d77babf31074dcd846f49c6d60fd88e60397f0", "url": "https://github.com/ls1intum/Artemis/commit/47d77babf31074dcd846f49c6d60fd88e60397f0", "message": "Move foreign key to exercise table (instead of team assignment config table)", "committedDate": "2020-02-10T21:56:27Z", "type": "commit"}, {"oid": "1c7be0edfc5cc51a763b57ba7f270ec259a78107", "url": "https://github.com/ls1intum/Artemis/commit/1c7be0edfc5cc51a763b57ba7f270ec259a78107", "message": "Warn against deviating from team size recommendation", "committedDate": "2020-02-10T23:05:04Z", "type": "commit"}, {"oid": "cc03b84f93f4e70829e186bcbae0e0b076ca4000", "url": "https://github.com/ls1intum/Artemis/commit/cc03b84f93f4e70829e186bcbae0e0b076ca4000", "message": "Tooltip placement", "committedDate": "2020-02-10T23:09:42Z", "type": "commit"}, {"oid": "eec3e1a8cdec36f8049d227fb77c3666c40111ed", "url": "https://github.com/ls1intum/Artemis/commit/eec3e1a8cdec36f8049d227fb77c3666c40111ed", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-11T00:02:00Z", "type": "commit"}, {"oid": "bc98695bd841ca81f5e5d9545a2622d7764e68bb", "url": "https://github.com/ls1intum/Artemis/commit/bc98695bd841ca81f5e5d9545a2622d7764e68bb", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-11T14:58:59Z", "type": "commit"}, {"oid": "3c96e40886517ab0a6f42bf2568882728dd6ca36", "url": "https://github.com/ls1intum/Artemis/commit/3c96e40886517ab0a6f42bf2568882728dd6ca36", "message": "Merge branch 'develop' into feature/team-based-exercises/models", "committedDate": "2020-02-16T16:16:32Z", "type": "commit"}, {"oid": "9694c2d779f55a2737b4ba94097f41efc92a62b1", "url": "https://github.com/ls1intum/Artemis/commit/9694c2d779f55a2737b4ba94097f41efc92a62b1", "message": "Add short name to team", "committedDate": "2020-02-16T17:33:36Z", "type": "commit"}, {"oid": "d7c83c346f82ceb12470691e781bd03ec24ffb81", "url": "https://github.com/ls1intum/Artemis/commit/d7c83c346f82ceb12470691e781bd03ec24ffb81", "message": "Short name of team must be unique", "committedDate": "2020-02-16T17:42:21Z", "type": "commit"}, {"oid": "a99eaa7b97d5ac1ad2119ac1fb524f3c30fff26b", "url": "https://github.com/ls1intum/Artemis/commit/a99eaa7b97d5ac1ad2119ac1fb524f3c30fff26b", "message": "Short name finish up", "committedDate": "2020-02-16T18:26:57Z", "type": "commit"}, {"oid": "462be429923446b5443ba72a3ce7635cb125e983", "url": "https://github.com/ls1intum/Artemis/commit/462be429923446b5443ba72a3ce7635cb125e983", "message": "Short name validation", "committedDate": "2020-02-16T20:28:54Z", "type": "commit"}, {"oid": "20917dcd57abca072e7042c156b68661443d54bf", "url": "https://github.com/ls1intum/Artemis/commit/20917dcd57abca072e7042c156b68661443d54bf", "message": "Use switchMap", "committedDate": "2020-02-16T23:47:37Z", "type": "commit"}]}