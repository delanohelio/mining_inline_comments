{"pr_number": 2440, "pr_title": "Allow to set timeout for jenkins pipelines", "pr_createdAt": "2020-11-20T23:37:43Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2440", "timeline": [{"oid": "a7e9fc2b4d7107ad49fa9dabc9574e298fa8bf93", "url": "https://github.com/ls1intum/Artemis/commit/a7e9fc2b4d7107ad49fa9dabc9574e298fa8bf93", "message": "Allow to set timeout for jenkins pipelines\n\nFixes #2434", "committedDate": "2020-11-20T23:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNTg4Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2440#discussion_r528025887", "bodyText": "That code was duplicated 3 times and it was not readable in terms of what thing was replaced by what", "author": "1-alex98", "createdAt": "2020-11-20T23:38:38Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/DefaultJenkinsBuildPlanCreator.java", "diffHunk": "@@ -1,33 +0,0 @@\n-package de.tum.in.www1.artemis.service.connectors.jenkins;\n-\n-import java.net.URL;\n-import java.util.Map;\n-\n-import org.springframework.context.annotation.Lazy;\n-import org.springframework.context.annotation.Profile;\n-import org.springframework.stereotype.Component;\n-\n-import de.tum.in.www1.artemis.ResourceLoaderService;\n-import de.tum.in.www1.artemis.config.Constants;\n-import de.tum.in.www1.artemis.domain.enumeration.ProgrammingLanguage;\n-\n-@Profile(\"jenkins\")\n-@Component\n-public class DefaultJenkinsBuildPlanCreator extends AbstractJenkinsBuildPlanCreator {\n-\n-    public DefaultJenkinsBuildPlanCreator(ResourceLoaderService resourceLoaderService, @Lazy JenkinsService jenkinsService) {\n-        super(resourceLoaderService, jenkinsService);\n-    }\n-\n-    @Override\n-    public String getPipelineScript(ProgrammingLanguage programmingLanguage, URL testRepositoryURL, URL assignmentRepositoryURL, boolean isStaticCodeAnalysisEnabled) {\n-        final var resourcePath = new String[] { \"templates\", \"jenkins\", programmingLanguage.name().toLowerCase(), \"Jenkinsfile\" };\n-\n-        final var replacements = Map.of(REPLACE_TEST_REPO, testRepositoryURL.toString(), REPLACE_ASSIGNMENT_REPO, assignmentRepositoryURL.toString(), REPLACE_GIT_CREDENTIALS,\n-                gitCredentialsKey, REPLACE_ASSIGNMENT_CHECKOUT_PATH, Constants.ASSIGNMENT_CHECKOUT_PATH, REPLACE_TESTS_CHECKOUT_PATH, Constants.TESTS_CHECKOUT_PATH,\n-                REPLACE_ARTEMIS_NOTIFICATION_URL, artemisNotificationUrl, REPLACE_NOTIFICATIONS_TOKEN, ARTEMIS_AUTHENTICATION_TOKEN_KEY, REPLACE_DOCKER_IMAGE_NAME,", "originalCommit": "a7e9fc2b4d7107ad49fa9dabc9574e298fa8bf93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNjAzOA==", "url": "https://github.com/ls1intum/Artemis/pull/2440#discussion_r528026038", "bodyText": "Only set what is really different here", "author": "1-alex98", "createdAt": "2020-11-20T23:39:11Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JavaJenkinsBuildPlanCreator.java", "diffHunk": "@@ -23,25 +22,19 @@ public JavaJenkinsBuildPlanCreator(ResourceLoaderService resourceLoaderService,\n     }\n \n     @Override\n-    public String getPipelineScript(ProgrammingLanguage programmingLanguage, URL testRepositoryURL, URL assignmentRepositoryURL, boolean isStaticCodeAnalysisEnabled) {\n+    protected String[] getResourcePath(ProgrammingLanguage programmingLanguage, URL testRepositoryURL, URL assignmentRepositoryURL, boolean isStaticCodeAnalysisEnabled) {\n         final var buildPlan = isStaticCodeAnalysisEnabled ? \"Jenkinsfile-staticCodeAnalysis\" : \"Jenkinsfile\";\n-        final var resourcePath = new String[] { \"templates\", \"jenkins\", \"java\", buildPlan };\n+        return new String[] { \"templates\", \"jenkins\", \"java\", buildPlan };\n+    }\n \n-        Map<String, String> replacements;\n-        if (isStaticCodeAnalysisEnabled) {\n+    @Override\n+    protected Map<String, String> getReplacements(ProgrammingLanguage programmingLanguage, URL testRepositoryURL, URL assignmentRepositoryURL, boolean isStaticCodeAnalysisEnabled) {\n+        Map<String, String> replacements = super.getReplacements(programmingLanguage, testRepositoryURL, assignmentRepositoryURL, isStaticCodeAnalysisEnabled);\n+        if(isStaticCodeAnalysisEnabled){\n             String staticCodeAnalysisScript = createStaticCodeAnalysisScript();\n-            replacements = Map.of(REPLACE_TEST_REPO, testRepositoryURL.toString(), REPLACE_ASSIGNMENT_REPO, assignmentRepositoryURL.toString(), REPLACE_GIT_CREDENTIALS,\n-                    gitCredentialsKey, REPLACE_ASSIGNMENT_CHECKOUT_PATH, Constants.ASSIGNMENT_CHECKOUT_PATH, REPLACE_ARTEMIS_NOTIFICATION_URL, artemisNotificationUrl,\n-                    REPLACE_NOTIFICATIONS_TOKEN, ARTEMIS_AUTHENTICATION_TOKEN_KEY, REPLACE_STATIC_CODE_ANALYSIS_SCRIPT, staticCodeAnalysisScript, REPLACE_DOCKER_IMAGE_NAME,\n-                    jenkinsService.getDockerImageName(ProgrammingLanguage.JAVA));\n+            replacements.put(REPLACE_STATIC_CODE_ANALYSIS_SCRIPT, staticCodeAnalysisScript);", "originalCommit": "a7e9fc2b4d7107ad49fa9dabc9574e298fa8bf93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91ee8331f8eb96c03bb792112dc2373481af9b14", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JavaJenkinsBuildPlanCreator.java b/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JavaJenkinsBuildPlanCreator.java\nindex 743500d39a..448767d9ec 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JavaJenkinsBuildPlanCreator.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JavaJenkinsBuildPlanCreator.java\n\n@@ -28,9 +28,10 @@ public class JavaJenkinsBuildPlanCreator extends BaseJenkinsBuildPlanCreator {\n     }\n \n     @Override\n-    protected Map<String, String> getReplacements(ProgrammingLanguage programmingLanguage, URL testRepositoryURL, URL assignmentRepositoryURL, boolean isStaticCodeAnalysisEnabled) {\n+    protected Map<String, String> getReplacements(ProgrammingLanguage programmingLanguage, URL testRepositoryURL, URL assignmentRepositoryURL,\n+            boolean isStaticCodeAnalysisEnabled) {\n         Map<String, String> replacements = super.getReplacements(programmingLanguage, testRepositoryURL, assignmentRepositoryURL, isStaticCodeAnalysisEnabled);\n-        if(isStaticCodeAnalysisEnabled){\n+        if (isStaticCodeAnalysisEnabled) {\n             String staticCodeAnalysisScript = createStaticCodeAnalysisScript();\n             replacements.put(REPLACE_STATIC_CODE_ANALYSIS_SCRIPT, staticCodeAnalysisScript);\n         }\n"}}, {"oid": "97d16243912fe323c083ee6e157006a6e967efdf", "url": "https://github.com/ls1intum/Artemis/commit/97d16243912fe323c083ee6e157006a6e967efdf", "message": "Merge branch 'develop' into feature/jenkins/#2434-jenkins-timeout", "committedDate": "2020-11-23T23:58:36Z", "type": "commit"}, {"oid": "5d174761fff545710c54bfac282fa8b87e12493a", "url": "https://github.com/ls1intum/Artemis/commit/5d174761fff545710c54bfac282fa8b87e12493a", "message": "Merge branch 'develop' into feature/jenkins/#2434-jenkins-timeout", "committedDate": "2020-11-24T15:58:23Z", "type": "commit"}, {"oid": "91ee8331f8eb96c03bb792112dc2373481af9b14", "url": "https://github.com/ls1intum/Artemis/commit/91ee8331f8eb96c03bb792112dc2373481af9b14", "message": "Fix codacy issues", "committedDate": "2020-11-24T16:09:37Z", "type": "commit"}]}