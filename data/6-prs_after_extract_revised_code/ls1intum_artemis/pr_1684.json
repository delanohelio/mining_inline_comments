{"pr_number": 1684, "pr_title": "Generate participations for all exercises in student exams", "pr_createdAt": "2020-06-19T09:58:14Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1684", "timeline": [{"oid": "c93e10ae5f63127f3056063dcd54442b344447d9", "url": "https://github.com/ls1intum/Artemis/commit/c93e10ae5f63127f3056063dcd54442b344447d9", "message": "Created REST Endpoint for generating the participations", "committedDate": "2020-06-19T09:56:53Z", "type": "commit"}, {"oid": "a96b8569adeb1400d987297b12cfc71c5369fea4", "url": "https://github.com/ls1intum/Artemis/commit/a96b8569adeb1400d987297b12cfc71c5369fea4", "message": "Implemented method to pre-start all exercises for student exams", "committedDate": "2020-06-19T12:16:06Z", "type": "commit"}, {"oid": "7038cbdae4e91a09c3227370d2bf591e49fdac7b", "url": "https://github.com/ls1intum/Artemis/commit/7038cbdae4e91a09c3227370d2bf591e49fdac7b", "message": "Moved to exam", "committedDate": "2020-06-19T13:35:53Z", "type": "commit"}, {"oid": "277723a7e145bc52baa1214061a60382dd3fe5d4", "url": "https://github.com/ls1intum/Artemis/commit/277723a7e145bc52baa1214061a60382dd3fe5d4", "message": "Wrote Integration Test", "committedDate": "2020-06-19T14:02:45Z", "type": "commit"}, {"oid": "b853195cafbd9a7897aace37e95e5c12570e0bee", "url": "https://github.com/ls1intum/Artemis/commit/b853195cafbd9a7897aace37e95e5c12570e0bee", "message": "Implemented StartExercise Functionality in the frontend", "committedDate": "2020-06-20T09:46:45Z", "type": "commit"}, {"oid": "e8a18f054d12695ae071a0e209de165c379206d8", "url": "https://github.com/ls1intum/Artemis/commit/e8a18f054d12695ae071a0e209de165c379206d8", "message": "added student participation to findByExamId", "committedDate": "2020-06-20T10:05:45Z", "type": "commit"}, {"oid": "e2dd4cb36e4857d882fb9aeb5ee5d274cbf6ff5d", "url": "https://github.com/ls1intum/Artemis/commit/e2dd4cb36e4857d882fb9aeb5ee5d274cbf6ff5d", "message": "Implemented reloading after generating student exams / starting exercises", "committedDate": "2020-06-20T10:06:22Z", "type": "commit"}, {"oid": "019868cafc7606ab608d26b4e20da90bb3dfd60e", "url": "https://github.com/ls1intum/Artemis/commit/019868cafc7606ab608d26b4e20da90bb3dfd60e", "message": "Added more integration tests", "committedDate": "2020-06-20T10:45:51Z", "type": "commit"}, {"oid": "9d3ddb2b73b3647b6ed2d8d58323d7cfd404c2ee", "url": "https://github.com/ls1intum/Artemis/commit/9d3ddb2b73b3647b6ed2d8d58323d7cfd404c2ee", "message": "Merge branch 'develop' into exam-mode/variants/participation", "committedDate": "2020-06-20T10:49:43Z", "type": "commit"}, {"oid": "cf6667120e20adcdf9238d80a1e23f26e19adb19", "url": "https://github.com/ls1intum/Artemis/commit/cf6667120e20adcdf9238d80a1e23f26e19adb19", "message": "Fixed merged conflict", "committedDate": "2020-06-20T10:51:33Z", "type": "commit"}, {"oid": "f6e6ba18a09ee439b661bc1dd1e63ea14564e374", "url": "https://github.com/ls1intum/Artemis/commit/f6e6ba18a09ee439b661bc1dd1e63ea14564e374", "message": "Added missing javadoc", "committedDate": "2020-06-20T10:59:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIwNjMxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443206311", "bodyText": "do we only support java atm? I know that @anditurdiu was working on programming exercises in other languages which will come at some point in the future (if not already there). Should the programming language also be configurable?", "author": "TobiasPr", "createdAt": "2020-06-21T10:41:58Z", "path": "src/test/java/de/tum/in/www1/artemis/util/ModelFactory.java", "diffHunk": "@@ -71,6 +71,17 @@ public static ProgrammingExercise generateProgrammingExercise(ZonedDateTime rele\n         return programmingExercise;\n     }\n \n+    public static ProgrammingExercise generateProgrammingExerciseForExam(ZonedDateTime releaseDate, ZonedDateTime dueDate, ExerciseGroup exerciseGroup) {\n+        ProgrammingExercise programmingExercise = new ProgrammingExercise();\n+        programmingExercise = (ProgrammingExercise) populateExerciseForExam(programmingExercise, releaseDate, dueDate, null, exerciseGroup);\n+        programmingExercise.generateAndSetProjectKey();\n+        programmingExercise.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+        programmingExercise.setProgrammingLanguage(ProgrammingLanguage.JAVA);", "originalCommit": "f6e6ba18a09ee439b661bc1dd1e63ea14564e374", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwMjA2NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443402065", "bodyText": "this is only a test case", "author": "krusche", "createdAt": "2020-06-22T08:37:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIwNjMxMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNTM5OA==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443405398", "bodyText": "comment is wrong", "author": "krusche", "createdAt": "2020-06-22T08:43:52Z", "path": "src/test/java/de/tum/in/www1/artemis/ExamIntegrationTest.java", "diffHunk": "@@ -167,6 +171,90 @@ public void testRegisterUsersInExam() throws Exception {\n         }\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testStartExercisesWithTextExercise() throws Exception {\n+        // registering users\n+        var student1 = database.getUserByLogin(\"student1\");\n+        var student2 = database.getUserByLogin(\"student2\");\n+        var registeredUsers = Set.of(student1, student2);\n+        exam2.setRegisteredUsers(registeredUsers);\n+        // setting dates\n+        exam2.setStartDate(ZonedDateTime.now().plusHours(2));\n+        exam2.setEndDate(ZonedDateTime.now().plusHours(3));\n+        exam2.setVisibleDate(ZonedDateTime.now().plusHours(1));\n+\n+        // creating exercise\n+        TextExercise textExercise = ModelFactory.generateTextExerciseForExam(exam2.getStartDate(), exam2.getEndDate(), exam2.getEndDate().plusWeeks(2),\n+                exam2.getExerciseGroups().get(0));\n+        exam2.getExerciseGroups().get(0).addExercise(textExercise);\n+        exerciseGroupRepository.save(exam2.getExerciseGroups().get(0));\n+        textExercise = exerciseRepo.save(textExercise);\n+\n+        // creating student exams\n+        for (User user : registeredUsers) {\n+            StudentExam studentExam = new StudentExam();\n+            studentExam.addExercise(textExercise);\n+            studentExam.setUser(user);\n+            exam2.addStudentExam(studentExam);\n+            studentExamRepository.save(studentExam);\n+        }\n+\n+        exam2 = examRepository.save(exam2);\n+\n+        // invoke generate student exams", "originalCommit": "f6e6ba18a09ee439b661bc1dd1e63ea14564e374", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "54ae1691c96e9ae5a0765382aec4405ff57490be", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/ExamIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/ExamIntegrationTest.java\nindex 1d51acc8e..4603a6eae 100644\n--- a/src/test/java/de/tum/in/www1/artemis/ExamIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/ExamIntegrationTest.java\n\n@@ -174,6 +174,9 @@ public class ExamIntegrationTest extends AbstractSpringIntegrationBambooBitbucke\n     @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n     public void testStartExercisesWithTextExercise() throws Exception {\n+\n+        // TODO IMPORTANT test more complex exam configurations (mixed exercise type, more variants and more registered students)\n+\n         // registering users\n         var student1 = database.getUserByLogin(\"student1\");\n         var student2 = database.getUserByLogin(\"student2\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNjQ0MQ==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443406441", "bodyText": "Please do not use Transactional here and rather use a query such as\nstudentExamRepository.findWithExercisesAndParticipationsByExamId\nThen make sure that only the participations for the user of the student exam is loaded, otherwise your \"isEmpty()\" check does not make any sense later on", "author": "krusche", "createdAt": "2020-06-22T08:45:41Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ExamService.java", "diffHunk": "@@ -297,4 +302,24 @@ private Exercise selectRandomExercise(SecureRandom random, ExerciseGroup exercis\n         int randomIndex = random.nextInt(exercises.size());\n         return exercises.get(randomIndex);\n     }\n+\n+    /**\n+     * Starts all the exercises of all the student exams of an exam\n+     *\n+     * @param examId exam to which the student exams belong\n+     * @return list of generated participations\n+     */\n+    @Transactional", "originalCommit": "f6e6ba18a09ee439b661bc1dd1e63ea14564e374", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ3MzcxMw==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443473713", "bodyText": "I'll add comments and we have to improve this later on, but as others need this functionality for testing, we'll merge this now", "author": "krusche", "createdAt": "2020-06-22T10:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNjQ0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "54ae1691c96e9ae5a0765382aec4405ff57490be", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ExamService.java b/src/main/java/de/tum/in/www1/artemis/service/ExamService.java\nindex 48e9b39f3..c63fce085 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ExamService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ExamService.java\n\n@@ -310,14 +310,24 @@ public class ExamService {\n      * @return list of generated participations\n      */\n     @Transactional\n+    // TODO IMPORTANT: do not use transactional here, but instead load the exam with all exercises, participations and submissions, in case they exist\n     public List<Participation> startExercises(Long examId) {\n         List<StudentExam> studentExams = studentExamRepository.findByExamId(examId);\n         List<Participation> generatedParticipations = new ArrayList<>();\n \n         for (StudentExam studentExam : studentExams) {\n             User student = studentExam.getUser();\n-            studentExam.getExercises().stream().filter(exercise -> exercise.getStudentParticipations().isEmpty())\n-                    .forEach(exercise -> generatedParticipations.add(participationService.startExercise(exercise, student)));\n+            for (Exercise exercise : studentExam.getExercises()) {\n+                if (exercise.getStudentParticipations().stream().noneMatch(studentParticipation -> studentParticipation.getParticipant().equals(student))) {\n+                    try {\n+                        var participation = participationService.startExercise(exercise, student);\n+                        generatedParticipations.add(participation);\n+                    }\n+                    catch (Exception ex) {\n+                        log.warn(\"Start exercise for student exam {} and exercise {} and student {}\", studentExam.getId(), exercise.getId(), student.getId());\n+                    }\n+                }\n+            }\n         }\n \n         return generatedParticipations;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNjc4OA==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443406788", "bodyText": "exercise.getStudentParticipations().isEmpty() is problematic here, because it might include participations of other users than the user specified in the studentExam", "author": "krusche", "createdAt": "2020-06-22T08:46:13Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ExamService.java", "diffHunk": "@@ -297,4 +302,24 @@ private Exercise selectRandomExercise(SecureRandom random, ExerciseGroup exercis\n         int randomIndex = random.nextInt(exercises.size());\n         return exercises.get(randomIndex);\n     }\n+\n+    /**\n+     * Starts all the exercises of all the student exams of an exam\n+     *\n+     * @param examId exam to which the student exams belong\n+     * @return list of generated participations\n+     */\n+    @Transactional\n+    public List<Participation> startExercises(Long examId) {\n+        List<StudentExam> studentExams = studentExamRepository.findByExamId(examId);\n+        List<Participation> generatedParticipations = new ArrayList<>();\n+\n+        for (StudentExam studentExam : studentExams) {\n+            User student = studentExam.getUser();\n+            studentExam.getExercises().stream().filter(exercise -> exercise.getStudentParticipations().isEmpty())", "originalCommit": "f6e6ba18a09ee439b661bc1dd1e63ea14564e374", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ3Mzc0MA==", "url": "https://github.com/ls1intum/Artemis/pull/1684#discussion_r443473740", "bodyText": "I'll add comments and we have to improve this later on, but as others need this functionality for testing, we'll merge this now", "author": "krusche", "createdAt": "2020-06-22T10:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwNjc4OA=="}], "type": "inlineReview", "revised_code": {"commit": "54ae1691c96e9ae5a0765382aec4405ff57490be", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/ExamService.java b/src/main/java/de/tum/in/www1/artemis/service/ExamService.java\nindex 48e9b39f3..c63fce085 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/ExamService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/ExamService.java\n\n@@ -310,14 +310,24 @@ public class ExamService {\n      * @return list of generated participations\n      */\n     @Transactional\n+    // TODO IMPORTANT: do not use transactional here, but instead load the exam with all exercises, participations and submissions, in case they exist\n     public List<Participation> startExercises(Long examId) {\n         List<StudentExam> studentExams = studentExamRepository.findByExamId(examId);\n         List<Participation> generatedParticipations = new ArrayList<>();\n \n         for (StudentExam studentExam : studentExams) {\n             User student = studentExam.getUser();\n-            studentExam.getExercises().stream().filter(exercise -> exercise.getStudentParticipations().isEmpty())\n-                    .forEach(exercise -> generatedParticipations.add(participationService.startExercise(exercise, student)));\n+            for (Exercise exercise : studentExam.getExercises()) {\n+                if (exercise.getStudentParticipations().stream().noneMatch(studentParticipation -> studentParticipation.getParticipant().equals(student))) {\n+                    try {\n+                        var participation = participationService.startExercise(exercise, student);\n+                        generatedParticipations.add(participation);\n+                    }\n+                    catch (Exception ex) {\n+                        log.warn(\"Start exercise for student exam {} and exercise {} and student {}\", studentExam.getId(), exercise.getId(), student.getId());\n+                    }\n+                }\n+            }\n         }\n \n         return generatedParticipations;\n"}}, {"oid": "54ae1691c96e9ae5a0765382aec4405ff57490be", "url": "https://github.com/ls1intum/Artemis/commit/54ae1691c96e9ae5a0765382aec4405ff57490be", "message": "fix PR comments", "committedDate": "2020-06-22T11:04:46Z", "type": "commit"}, {"oid": "ebbca9a0dbe0539969ce560fabbef8c6e56c678a", "url": "https://github.com/ls1intum/Artemis/commit/ebbca9a0dbe0539969ce560fabbef8c6e56c678a", "message": "revert change", "committedDate": "2020-06-22T11:06:52Z", "type": "commit"}, {"oid": "85b3a08ed9c7c7df8771c24ca81c8ba7e229c875", "url": "https://github.com/ls1intum/Artemis/commit/85b3a08ed9c7c7df8771c24ca81c8ba7e229c875", "message": "Merge branch 'develop' into exam-mode/variants/participation", "committedDate": "2020-06-22T11:07:17Z", "type": "commit"}]}