{"pr_number": 2216, "pr_title": "Add option to checkout solution repository for Haskell exercises.", "pr_createdAt": "2020-10-16T11:32:43Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2216", "timeline": [{"oid": "c9c7d149d40b33efa1f08b1998f2538e2a1e3f24", "url": "https://github.com/ls1intum/Artemis/commit/c9c7d149d40b33efa1f08b1998f2538e2a1e3f24", "message": "Add option to checkout solution repository for Haskell exercises.", "committedDate": "2020-10-16T11:32:15Z", "type": "commit"}, {"oid": "443a50984e61fc22c0d2ba3822b609f5b1eea0ba", "url": "https://github.com/ls1intum/Artemis/commit/443a50984e61fc22c0d2ba3822b609f5b1eea0ba", "message": "Add test case.", "committedDate": "2020-10-16T11:43:11Z", "type": "commit"}, {"oid": "f65a67c1731644ef56d0fcb0c52cf6fd06d807fd", "url": "https://github.com/ls1intum/Artemis/commit/f65a67c1731644ef56d0fcb0c52cf6fd06d807fd", "message": "Fix error message.", "committedDate": "2020-10-16T11:55:00Z", "type": "commit"}, {"oid": "946925846cce0d606517a730871b1b9f540cb52c", "url": "https://github.com/ls1intum/Artemis/commit/946925846cce0d606517a730871b1b9f540cb52c", "message": "Remove trigger of base repository when solution repository is updated.", "committedDate": "2020-10-16T12:09:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MDYwOQ==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r506770609", "bodyText": "does this mean the solution repo is checked out twice in the SOLUTION build plan?", "author": "krusche", "createdAt": "2020-10-17T00:22:42Z", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseService.java", "diffHunk": "@@ -174,9 +174,9 @@ private void setupBuildPlansForNewExercise(ProgrammingExercise programmingExerci\n         String projectKey = programmingExercise.getProjectKey();\n         continuousIntegrationService.get().createProjectForExercise(programmingExercise);\n         // template build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl, solutionRepoUrl);\n         // solution build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl, solutionRepoUrl);", "originalCommit": "946925846cce0d606517a730871b1b9f540cb52c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk2NzkzOQ==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r506967939", "bodyText": "@krusche Yes: Once as assignment and once as solution. I believe this is useful as otherwise the solution would require special tests.", "author": "sleiss", "createdAt": "2020-10-17T18:00:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MDYwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2MTg3OQ==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507561879", "bodyText": "ok", "author": "krusche", "createdAt": "2020-10-19T08:25:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MDYwOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2MzY4Mw==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507563683", "bodyText": "can we improve this test using the programming language as enum parameter so that all programming languages except Haskell are tested to produce a bad request? (this would then also include future programming languages", "author": "krusche", "createdAt": "2020-10-19T08:28:09Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java", "diffHunk": "@@ -742,6 +742,16 @@ public void createProgrammingExercise_bambooProjectWithSameTitleAlreadyExists_ba\n         request.post(ROOT + SETUP, programmingExercise, HttpStatus.BAD_REQUEST);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createProgrammingExercise_checkoutSolutionRepositoryProgrammingLanguageNotSupported_badRequest() throws Exception {", "originalCommit": "946925846cce0d606517a730871b1b9f540cb52c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3NTU5MA==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507975590", "bodyText": "I've changed it to a @ParameterizedTest that uses all ProgrammingLanguages except HASKELL. This is also safe for the future as the test excludes HASKELL (as opposed to including all other programming languages).", "author": "sleiss", "createdAt": "2020-10-19T18:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2MzY4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "63d05a82cbfa5f87eef6633f7b4f604ac47689e8", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java\nindex 9eaf0790b..9d4821f06 100644\n--- a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java\n\n@@ -742,13 +744,16 @@ class ProgrammingExerciseIntegrationTest extends AbstractSpringIntegrationBamboo\n         request.post(ROOT + SETUP, programmingExercise, HttpStatus.BAD_REQUEST);\n     }\n \n-    @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n-    public void createProgrammingExercise_checkoutSolutionRepositoryProgrammingLanguageNotSupported_badRequest() throws Exception {\n+    @ParameterizedTest\n+    // It should fail for all ProgrammingExercises except Haskell\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"HASKELL\" }, mode = EnumSource.Mode.EXCLUDE)\n+    public void createProgrammingExercise_checkoutSolutionRepositoryProgrammingLanguageNotSupported_badRequest(ProgrammingLanguage programmingLanguage) throws Exception {\n         programmingExercise.setId(null);\n         programmingExercise.setTitle(\"New title\");\n         programmingExercise.setShortName(\"NewShortname\");\n-        programmingExercise.setCheckoutSolutionRepository(true); // JAVA is not supported for checking out the solution repository\n+        programmingExercise.setProgrammingLanguage(programmingLanguage);\n+        programmingExercise.setCheckoutSolutionRepository(true);\n         request.post(ROOT + SETUP, programmingExercise, HttpStatus.BAD_REQUEST);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDUzNQ==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507564535", "bodyText": "Can you please document the property and its default value here? thanks!", "author": "krusche", "createdAt": "2020-10-19T08:29:24Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java", "diffHunk": "@@ -99,6 +99,10 @@\n     @Transient\n     private boolean isLocalSimulationTransient;\n \n+    @Transient\n+    @JsonProperty\n+    private boolean checkoutSolutionRepository = false;", "originalCommit": "946925846cce0d606517a730871b1b9f540cb52c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODg5Nw==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507978897", "bodyText": "I've added documentation.", "author": "sleiss", "createdAt": "2020-10-19T18:36:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "59e377126d5b3f2afc3bf7493f748ee0d070c4c8", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java b/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java\nindex 55cf0f8bc..08652bb1e 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java\n\n@@ -99,6 +99,12 @@ public class ProgrammingExercise extends Exercise {\n     @Transient\n     private boolean isLocalSimulationTransient;\n \n+    /**\n+     * This boolean flag determines whether the solution repository should be checked out during the build (additional to the student's submission).\n+     * This property is only used when creating the exercise (the client sets this value when POSTing the new exercise to the server).\n+     * It is not persisted as this setting can not be changed afterwards.\n+     * This is currently only supported for HASKELL on BAMBOO, thus the default value is false.\n+     */\n     @Transient\n     @JsonProperty\n     private boolean checkoutSolutionRepository = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDkzMw==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507564933", "bodyText": "please add a hint that this is only used for special cases", "author": "krusche", "createdAt": "2020-10-19T08:29:59Z", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -28,12 +28,13 @@\n     /**\n      * Creates the base build plan for the given programming exercise\n      *\n-     * @param exercise          a programming exercise with the required information to create the base build plan\n-     * @param planKey           the key of the plan\n-     * @param repositoryURL     the URL of the assignment repository (used to separate between exercise and solution)\n-     * @param testRepositoryURL the URL of the test repository\n+     * @param exercise              a programming exercise with the required information to create the base build plan\n+     * @param planKey               the key of the plan\n+     * @param repositoryURL         the URL of the assignment repository (used to separate between exercise and solution)\n+     * @param testRepositoryURL     the URL of the test repository\n+     * @param solutionRepositoryURL the URL of the solution repository", "originalCommit": "946925846cce0d606517a730871b1b9f540cb52c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODg0MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507978841", "bodyText": "I've added documentation.", "author": "sleiss", "createdAt": "2020-10-19T18:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "59e377126d5b3f2afc3bf7493f748ee0d070c4c8", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java b/src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java\nindex 0432ba26f..837e1fbd1 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java\n\n@@ -32,7 +32,7 @@ public interface ContinuousIntegrationService {\n      * @param planKey               the key of the plan\n      * @param repositoryURL         the URL of the assignment repository (used to separate between exercise and solution)\n      * @param testRepositoryURL     the URL of the test repository\n-     * @param solutionRepositoryURL the URL of the solution repository\n+     * @param solutionRepositoryURL the URL of the solution repository. Only used for HASKELL exercises with checkoutSolutionRepository=true. Otherwise ignored.\n      */\n     void createBuildPlanForExercise(ProgrammingExercise exercise, String planKey, URL repositoryURL, URL testRepositoryURL, URL solutionRepositoryURL);\n \n"}}, {"oid": "1d377e645336a1d4372d23c3b4cd803e490ea672", "url": "https://github.com/ls1intum/Artemis/commit/1d377e645336a1d4372d23c3b4cd803e490ea672", "message": "Merge branch 'develop' into feature/haskell-checkout-solution-repository", "committedDate": "2020-10-19T08:48:19Z", "type": "commit"}, {"oid": "63d05a82cbfa5f87eef6633f7b4f604ac47689e8", "url": "https://github.com/ls1intum/Artemis/commit/63d05a82cbfa5f87eef6633f7b4f604ac47689e8", "message": "Use ParameterizedTest to ensure only Haskell is supported.", "committedDate": "2020-10-19T18:29:38Z", "type": "commit"}, {"oid": "59e377126d5b3f2afc3bf7493f748ee0d070c4c8", "url": "https://github.com/ls1intum/Artemis/commit/59e377126d5b3f2afc3bf7493f748ee0d070c4c8", "message": "Add documentation.", "committedDate": "2020-10-19T18:36:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MDg5OA==", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507980898", "bodyText": "Codacy found an issue: These nested if statements could be combined", "author": "artemis-bot", "createdAt": "2020-10-19T18:40:28Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -321,6 +321,15 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n             }\n         }\n \n+        // Check if checkout solution repository is enabled\n+        if (programmingExercise.getCheckoutSolutionRepository()) {\n+            if (programmingExercise.getProgrammingLanguage() != ProgrammingLanguage.HASKELL) {", "originalCommit": "59e377126d5b3f2afc3bf7493f748ee0d070c4c8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}