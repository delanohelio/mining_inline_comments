{"pr_number": 1935, "pr_title": "Lock student exam repositories upon early submit", "pr_createdAt": "2020-07-19T22:09:30Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1935", "timeline": [{"oid": "10ad5402f8ee36d78cf5560aadf700ca919b8889", "url": "https://github.com/ls1intum/Artemis/commit/10ad5402f8ee36d78cf5560aadf700ca919b8889", "message": "Move lock and unlock to ProgrammingExerciseParticipationServiceService", "committedDate": "2020-07-19T21:27:28Z", "type": "commit"}, {"oid": "4427a40e2c258dd235d5c7b33844de2a054b55f4", "url": "https://github.com/ls1intum/Artemis/commit/4427a40e2c258dd235d5c7b33844de2a054b55f4", "message": "Lock student repositories upon manual submit", "committedDate": "2020-07-19T21:34:37Z", "type": "commit"}, {"oid": "25c2238c4e7ac3975a581d7ffe668cd7549bc52b", "url": "https://github.com/ls1intum/Artemis/commit/25c2238c4e7ac3975a581d7ffe668cd7549bc52b", "message": "Only lock repositories if submitted manually before the end date", "committedDate": "2020-07-19T21:40:35Z", "type": "commit"}, {"oid": "5b91abd251327cd157becf70f21fa2d1095dce53", "url": "https://github.com/ls1intum/Artemis/commit/5b91abd251327cd157becf70f21fa2d1095dce53", "message": "Remove reference to VersionControlService", "committedDate": "2020-07-20T02:40:25Z", "type": "commit"}, {"oid": "e1802500ac2a7d5af3057cb291fe010df778296c", "url": "https://github.com/ls1intum/Artemis/commit/e1802500ac2a7d5af3057cb291fe010df778296c", "message": "Merge branch 'develop' into bugfix/exam/lock-repository-early-submit", "committedDate": "2020-07-21T09:20:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzMzgxOQ==", "url": "https://github.com/ls1intum/Artemis/pull/1935#discussion_r458133819", "bodyText": "can you please:\n\nextract a method for the whole new code block\nmove the invocation of the new method after the line studentExamRepository.save(studentExam);\nPut another try catch statement around the invocation of the new method? So that really no (even currently unthinkable) exception can lead to problems here?", "author": "krusche", "createdAt": "2020-07-21T14:19:40Z", "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java", "diffHunk": "@@ -202,6 +207,24 @@ else if (exercise instanceof ModelingExercise) {\n             }\n         }\n \n+        // Only lock programming exercises when the student submitted early. Otherwise, the lock operations were already scheduled/executed.\n+        if (ZonedDateTime.now().isBefore(examEndDate)) {", "originalCommit": "e1802500ac2a7d5af3057cb291fe010df778296c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d24297049f266cbceda170d23fb313024d1cda35", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java b/src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java\nindex e506fa8d47..a6ccf16eef 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java\n\n@@ -207,15 +207,31 @@ public class StudentExamService {\n             }\n         }\n \n+        // if everything worked -> set studentExam to submitted and set submission date\n+        studentExam.setSubmitted(true);\n+        studentExam.setSubmissionDate(ZonedDateTime.now());\n+        studentExamRepository.save(studentExam);\n+        \n+        try {\n+            lockStudentRepositories(currentUser, existingStudentExam, examEndDate);\n+        }\n+        catch (Exception e) {\n+            log.error(\"lockStudentRepositories threw an exception\", e);\n+        }\n+\n+        return ResponseEntity.ok(studentExam);\n+    }\n+\n+    private void lockStudentRepositories(User currentUser, StudentExam existingStudentExam, ZonedDateTime examEndDate) {\n         // Only lock programming exercises when the student submitted early. Otherwise, the lock operations were already scheduled/executed.\n-        if (ZonedDateTime.now().isBefore(examEndDate)) {\n+        if (examEndDate != null && ZonedDateTime.now().isBefore(examEndDate)) {\n             // Use the programming exercises in the DB to lock the repositories (for safety)\n             for (Exercise exercise : existingStudentExam.getExercises()) {\n                 if (exercise instanceof ProgrammingExercise) {\n                     ProgrammingExercise programmingExercise = (ProgrammingExercise) exercise;\n+                    try {\n                     ProgrammingExerciseStudentParticipation participation = programmingExerciseParticipationService.findStudentParticipationByExerciseAndStudentId(exercise,\n                             currentUser.getLogin());\n-                    try {\n                         programmingExerciseParticipationService.lockStudentRepository(programmingExercise, participation);\n                     }\n                     catch (Exception e) {\n"}}, {"oid": "d24297049f266cbceda170d23fb313024d1cda35", "url": "https://github.com/ls1intum/Artemis/commit/d24297049f266cbceda170d23fb313024d1cda35", "message": "Make student repository locking more robust", "committedDate": "2020-07-21T14:39:57Z", "type": "commit"}, {"oid": "c3744d51d67d4a30f4181e467ac4bec6a73fda4e", "url": "https://github.com/ls1intum/Artemis/commit/c3744d51d67d4a30f4181e467ac4bec6a73fda4e", "message": "Fix formatting", "committedDate": "2020-07-21T14:54:20Z", "type": "commit"}]}