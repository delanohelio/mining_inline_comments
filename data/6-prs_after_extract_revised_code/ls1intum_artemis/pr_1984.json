{"pr_number": 1984, "pr_title": "Do not create a new Exam Session when viewing the Summary", "pr_createdAt": "2020-07-28T21:05:09Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1984", "timeline": [{"oid": "abad1355e77121f0138762fc213f170ff0238be5", "url": "https://github.com/ls1intum/Artemis/commit/abad1355e77121f0138762fc213f170ff0238be5", "message": "Do not create a new Exam Session when viewing the Summary", "committedDate": "2020-07-28T20:58:17Z", "type": "commit"}, {"oid": "1407114b655ad63b7152260f4f6045807a543f28", "url": "https://github.com/ls1intum/Artemis/commit/1407114b655ad63b7152260f4f6045807a543f28", "message": "Merge branch 'exam/view-summary-no-session' into feature/result-display", "committedDate": "2020-07-29T15:52:36Z", "type": "commit"}, {"oid": "b5b25ed17ff78d967184bbbee52613d25cbc75d4", "url": "https://github.com/ls1intum/Artemis/commit/b5b25ed17ff78d967184bbbee52613d25cbc75d4", "message": "Add two handy methods to get the individual end date of a student exam", "committedDate": "2020-07-29T18:02:04Z", "type": "commit"}, {"oid": "c4df043e7acc538bc85f8652bacb5b930e1249b8", "url": "https://github.com/ls1intum/Artemis/commit/c4df043e7acc538bc85f8652bacb5b930e1249b8", "message": "Add new checks for exam review", "committedDate": "2020-07-29T18:03:16Z", "type": "commit"}, {"oid": "a10b282bab6879f8fd43663a38927bb2f2a14594", "url": "https://github.com/ls1intum/Artemis/commit/a10b282bab6879f8fd43663a38927bb2f2a14594", "message": "Refactor other method and avoid duplication", "committedDate": "2020-07-29T18:23:07Z", "type": "commit"}, {"oid": "526940251cfeb789180fe5a088df7324e04f0616", "url": "https://github.com/ls1intum/Artemis/commit/526940251cfeb789180fe5a088df7324e04f0616", "message": "Always allow instructors to see everything and refactor code a bit", "committedDate": "2020-07-29T18:39:49Z", "type": "commit"}, {"oid": "07b63581b855fc949fb7fc6f051e1f6005beaf50", "url": "https://github.com/ls1intum/Artemis/commit/07b63581b855fc949fb7fc6f051e1f6005beaf50", "message": "Get the user upfront and avoid many database queries", "committedDate": "2020-07-29T18:43:44Z", "type": "commit"}, {"oid": "a6b661687e362cfbc814bd72f232983db917cbbf", "url": "https://github.com/ls1intum/Artemis/commit/a6b661687e362cfbc814bd72f232983db917cbbf", "message": "Fix a missing possible improvement", "committedDate": "2020-07-29T19:05:51Z", "type": "commit"}, {"oid": "d1936cb7663c5b44c77ca263a44589329066e55d", "url": "https://github.com/ls1intum/Artemis/commit/d1936cb7663c5b44c77ca263a44589329066e55d", "message": "fix modeling exercise assement access & remove the score in points of the quiz submission\nInstructors should always be able to see the assessment if an assessment is available\nSmall refactorings", "committedDate": "2020-07-30T11:02:21Z", "type": "commit"}, {"oid": "a1d724eeeb0fdd15e64b5c39a0e694f129dfe656", "url": "https://github.com/ls1intum/Artemis/commit/a1d724eeeb0fdd15e64b5c39a0e694f129dfe656", "message": "Refactor code and improve documentation", "committedDate": "2020-07-30T12:09:27Z", "type": "commit"}, {"oid": "818e303ae0f63772623db399be46adc78c54be11", "url": "https://github.com/ls1intum/Artemis/commit/818e303ae0f63772623db399be46adc78c54be11", "message": "fix silly mistake xD", "committedDate": "2020-07-30T13:01:19Z", "type": "commit"}, {"oid": "299051088da8713b304eeb87f98040ca0dfbed30", "url": "https://github.com/ls1intum/Artemis/commit/299051088da8713b304eeb87f98040ca0dfbed30", "message": "Refactor quiz filtering for exam", "committedDate": "2020-07-30T14:01:34Z", "type": "commit"}, {"oid": "e8dbb9af1fae915ba2136090722cbb670fb3d888", "url": "https://github.com/ls1intum/Artemis/commit/e8dbb9af1fae915ba2136090722cbb670fb3d888", "message": "add integrationTest", "committedDate": "2020-07-30T15:23:56Z", "type": "commit"}, {"oid": "516e7e81f8c64b7f14ddab4dc8a9b927493716c9", "url": "https://github.com/ls1intum/Artemis/commit/516e7e81f8c64b7f14ddab4dc8a9b927493716c9", "message": "improve integration test", "committedDate": "2020-07-30T16:46:08Z", "type": "commit"}, {"oid": "9b2cc1b6551fde08d4070f7c44145199570cd356", "url": "https://github.com/ls1intum/Artemis/commit/9b2cc1b6551fde08d4070f7c44145199570cd356", "message": "code cleanup", "committedDate": "2020-07-30T17:21:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MjU5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463192595", "bodyText": "Unless this is needed in the webapp, we should mark this with @JsonIgnore. I think otherwise, Jackson will serialize this.", "author": "kloessst", "createdAt": "2020-07-30T18:32:20Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java", "diffHunk": "@@ -161,8 +161,34 @@ public Boolean isEnded() {\n         if (this.getExam() == null || this.getExam().getStartDate() == null || this.getWorkingTime() == null) {\n             return null;\n         }\n-        var individualEndDate = this.getExam().getStartDate().plusSeconds(this.getWorkingTime());\n-        return ZonedDateTime.now().isAfter(individualEndDate);\n+        return ZonedDateTime.now().isAfter(getIndividualEndDate());\n+    }\n+\n+    /**\n+     * Returns the individual exam end date taking the working time of this student exam into account\n+     *  \n+     * @return the ZonedDateTime that marks the exam end for this student (excluding grace period)\n+     */\n+    public ZonedDateTime getIndividualEndDate() {", "originalCommit": "9b2cc1b6551fde08d4070f7c44145199570cd356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjUyMg==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463236522", "bodyText": "See 41c7643", "author": "anditurdiu", "createdAt": "2020-07-30T19:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MjU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "41c76431d8ad0de45243cda006ac76eea2415b8f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java b/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java\nindex fd79bbe091..f760e74937 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java\n\n@@ -166,18 +167,20 @@ public class StudentExam implements Serializable {\n \n     /**\n      * Returns the individual exam end date taking the working time of this student exam into account\n-     *  \n+     *\n      * @return the ZonedDateTime that marks the exam end for this student (excluding grace period)\n      */\n+    @JsonIgnore\n     public ZonedDateTime getIndividualEndDate() {\n         return exam.getStartDate().plusSeconds(workingTime);\n     }\n \n     /**\n      * Returns the individual exam end date taking the working time of this student exam into account and the grace period set for this exam\n-     *  \n+     *\n      * @return the ZonedDateTime that marks the exam end for this student, including the exam's grace period\n      */\n+    @JsonIgnore\n     public ZonedDateTime getIndividualEndDateWithGracePeriod() {\n         int gracePeriodInSeconds = Objects.requireNonNullElse(exam.getGracePeriod(), 0);\n         return exam.getStartDate().plusSeconds(workingTime + gracePeriodInSeconds);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MjY0Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463192647", "bodyText": "Unless this is needed in the webapp, we should mark this with @JsonIgnore. I think otherwise, Jackson will serialize this.", "author": "kloessst", "createdAt": "2020-07-30T18:32:27Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java", "diffHunk": "@@ -161,8 +161,34 @@ public Boolean isEnded() {\n         if (this.getExam() == null || this.getExam().getStartDate() == null || this.getWorkingTime() == null) {\n             return null;\n         }\n-        var individualEndDate = this.getExam().getStartDate().plusSeconds(this.getWorkingTime());\n-        return ZonedDateTime.now().isAfter(individualEndDate);\n+        return ZonedDateTime.now().isAfter(getIndividualEndDate());\n+    }\n+\n+    /**\n+     * Returns the individual exam end date taking the working time of this student exam into account\n+     *  \n+     * @return the ZonedDateTime that marks the exam end for this student (excluding grace period)\n+     */\n+    public ZonedDateTime getIndividualEndDate() {\n+        return exam.getStartDate().plusSeconds(workingTime);\n+    }\n+\n+    /**\n+     * Returns the individual exam end date taking the working time of this student exam into account and the grace period set for this exam\n+     *  \n+     * @return the ZonedDateTime that marks the exam end for this student, including the exam's grace period\n+     */\n+    public ZonedDateTime getIndividualEndDateWithGracePeriod() {", "originalCommit": "9b2cc1b6551fde08d4070f7c44145199570cd356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjQ5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463236495", "bodyText": "See 41c7643", "author": "anditurdiu", "createdAt": "2020-07-30T19:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MjY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "41c76431d8ad0de45243cda006ac76eea2415b8f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java b/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java\nindex fd79bbe091..f760e74937 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/exam/StudentExam.java\n\n@@ -166,18 +167,20 @@ public class StudentExam implements Serializable {\n \n     /**\n      * Returns the individual exam end date taking the working time of this student exam into account\n-     *  \n+     *\n      * @return the ZonedDateTime that marks the exam end for this student (excluding grace period)\n      */\n+    @JsonIgnore\n     public ZonedDateTime getIndividualEndDate() {\n         return exam.getStartDate().plusSeconds(workingTime);\n     }\n \n     /**\n      * Returns the individual exam end date taking the working time of this student exam into account and the grace period set for this exam\n-     *  \n+     *\n      * @return the ZonedDateTime that marks the exam end for this student, including the exam's grace period\n      */\n+    @JsonIgnore\n     public ZonedDateTime getIndividualEndDateWithGracePeriod() {\n         int gracePeriodInSeconds = Objects.requireNonNullElse(exam.getGracePeriod(), 0);\n         return exam.getStartDate().plusSeconds(workingTime + gracePeriodInSeconds);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MzQzNA==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463193434", "bodyText": "I think there is a @link missing", "author": "kloessst", "createdAt": "2020-07-30T18:34:01Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizSubmission.java", "diffHunk": "@@ -68,6 +69,21 @@ public QuizSubmission removeSubmittedAnswers(SubmittedAnswer submittedAnswer) {\n         return this;\n     }\n \n+    /**\n+     * Filters the sensitive quiz submission information for exams, if the results are not published or the user is not an instructor\n+     * It sets the {@link QuizSubmission#setScoreInPoints(Double)} & {SubmittedAnswer#setScoreInPoints(Double)} to null for every submitted answer.", "originalCommit": "9b2cc1b6551fde08d4070f7c44145199570cd356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjQ1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463236453", "bodyText": "See 41c7643", "author": "anditurdiu", "createdAt": "2020-07-30T19:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5MzQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "41c76431d8ad0de45243cda006ac76eea2415b8f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizSubmission.java b/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizSubmission.java\nindex 6e2d5fed8b..520279b4e0 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizSubmission.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/quiz/QuizSubmission.java\n\n@@ -71,7 +71,7 @@ public class QuizSubmission extends Submission implements Serializable {\n \n     /**\n      * Filters the sensitive quiz submission information for exams, if the results are not published or the user is not an instructor\n-     * It sets the {@link QuizSubmission#setScoreInPoints(Double)} & {SubmittedAnswer#setScoreInPoints(Double)} to null for every submitted answer.\n+     * It sets the {@link QuizSubmission#setScoreInPoints(Double)} & {@link SubmittedAnswer#setScoreInPoints(Double)} to null for every submitted answer.\n      * Additionally it calls {@link SubmittedAnswer#filterOutCorrectAnswers()} dynamically for the correct question type.\n      * @param examResultsPublished flag indicating if the results are published, see {@link Exam#resultsPublished()}\n      * @param isAtLeastInstructor flag indicating if the user has instructor privileges\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463197184", "bodyText": "I don't see where this is used.", "author": "kloessst", "createdAt": "2020-07-30T18:41:09Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -93,10 +98,13 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n         List<StudentParticipation> participations = participationService.findByStudentIdAndIndividualExercisesWithEagerSubmissionsResult(studentExam.getUser().getId(),\n                 studentExam.getExercises());\n \n+        // fetch user here to avoid fetching the user for each exercise individually\n+        User currentUser = userService.getUserWithGroupsAndAuthorities();", "originalCommit": "9b2cc1b6551fde08d4070f7c44145199570cd356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxODk1MA==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463218950", "bodyText": "This is used in line 217 for example :)", "author": "fde312", "createdAt": "2020-07-30T19:22:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMDc4NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463220785", "bodyText": "You are right, it is not used in this method.", "author": "fde312", "createdAt": "2020-07-30T19:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMTc5NA==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463221794", "bodyText": "Isn't 217 another method? I don't see where currentUser is passed to another method. Maybe I'm blind :)", "author": "kloessst", "createdAt": "2020-07-30T19:28:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjU2OA==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463222568", "bodyText": "But 217 is another method^^", "author": "MaisiKoleni", "createdAt": "2020-07-30T19:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyMjg1Nw==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463222857", "bodyText": "jupe, my bad :D", "author": "fde312", "createdAt": "2020-07-30T19:30:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyNDc2Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463224766", "bodyText": "(Sorry didn't see Stefan's comment, GitHub should add auto-refresh for that)", "author": "MaisiKoleni", "createdAt": "2020-07-30T19:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjQxNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463236415", "bodyText": "See 41c7643", "author": "anditurdiu", "createdAt": "2020-07-30T19:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE5NzE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "41c76431d8ad0de45243cda006ac76eea2415b8f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 678a467cf7..4aa785b068 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -98,9 +98,6 @@ public class StudentExamResource {\n         List<StudentParticipation> participations = participationService.findByStudentIdAndIndividualExercisesWithEagerSubmissionsResult(studentExam.getUser().getId(),\n                 studentExam.getExercises());\n \n-        // fetch user here to avoid fetching the user for each exercise individually\n-        User currentUser = userService.getUserWithGroupsAndAuthorities();\n-\n         // connect the exercises and student participations correctly and make sure all relevant associations are available\n         for (Exercise exercise : studentExam.getExercises()) {\n             // add participation with submission and result to each exercise\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMTQzMA==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463211430", "bodyText": "Is it intended that students who haven't submitted their solution, can use this call after their exam ended? This wasn't possible before.", "author": "kloessst", "createdAt": "2020-07-30T19:08:18Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -240,13 +234,83 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n     }\n \n     /**\n-     * Find the participation in participations that belongs to the given exercise that includes the exercise data\n+     * GET /courses/{courseId}/exams/{examId}/studentExams/summary : Find a student exam for the summary.\n+     * This will be used to display the summary of the exam. The student exam will be returned with the exercises\n+     * and with the student participation and with the submissions.\n+     *\n+     * @param courseId  the course to which the student exam belongs to\n+     * @param examId    the exam to which the student exam belongs to\n+     * @return the ResponseEntity with status 200 (OK) and with the found student exam as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/exams/{examId}/studentExams/summary\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<StudentExam> getStudentExamForSummary(@PathVariable Long courseId, @PathVariable Long examId) {\n+        long start = System.currentTimeMillis();\n+        User currentUser = userService.getUserWithGroupsAndAuthorities();\n+        log.debug(\"REST request to get the student exam of user {} for exam {}\", currentUser.getLogin(), examId);\n+\n+        Optional<ResponseEntity<StudentExam>> courseAndExamAccessFailure = studentExamAccessService.checkCourseAndExamAccess(courseId, examId, currentUser);\n+        if (courseAndExamAccessFailure.isPresent()) {\n+            return courseAndExamAccessFailure.get();\n+        }\n+\n+        // 1st: load the studentExam with all associated exercises\n+        Optional<StudentExam> optionalStudentExam = studentExamRepository.findWithExercisesByUserIdAndExamId(currentUser.getId(), examId);\n+        if (optionalStudentExam.isEmpty()) {\n+            return notFound();\n+        }\n+        var studentExam = optionalStudentExam.get();\n+\n+        // check that the studentExam is over, otherwise /studentExams/conduction should be used\n+        if (!studentExam.isSubmitted() && !studentExam.isEnded()) {", "originalCommit": "9b2cc1b6551fde08d4070f7c44145199570cd356", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41c76431d8ad0de45243cda006ac76eea2415b8f", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 678a467cf7..4aa785b068 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -261,8 +258,8 @@ public class StudentExamResource {\n         }\n         var studentExam = optionalStudentExam.get();\n \n-        // check that the studentExam is over, otherwise /studentExams/conduction should be used\n-        if (!studentExam.isSubmitted() && !studentExam.isEnded()) {\n+        // check that the studentExam is over and that it has been submitted, otherwise /studentExams/conduction should be used\n+        if (!studentExam.isSubmitted() || !studentExam.isEnded()) {\n             return forbidden();\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMjc5Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463212796", "bodyText": "This sentence sounds weird :)", "author": "kloessst", "createdAt": "2020-07-30T19:10:58Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -291,17 +349,44 @@ public void filterForExam(StudentExam studentExam, Exercise exercise, List<Stude\n     }\n \n     /**\n-     * we also need the quiz questions and it is not possible to load them in a generic way with the entity graph used\n+     * Helper method which attaches the result to its participation.\n+     * For direct automatic feedback during the exam conduction for {@link ProgrammingExercise, we need to attach the results.\n+     * We also attach the result if the results are already published for the exam. See {@link StudentExamResource#areResultsPublishedYet(StudentExam)}\n+     * @param studentExam the given studentExam\n+     * @param participation the given participation of the student\n+     * @param latestSubmission the latest\n+     * @param isAtLeastInstructor\n+     */\n+    private void setResultIfNecessary(StudentExam studentExam, StudentParticipation participation, boolean isAtLeastInstructor) {\n+        // Only set the result during the exam (direct automatic feedback) or after publishing the results\n+        boolean studentAllowedToSeeResult = (studentExam.getExam().isStarted() && !studentExam.isEnded()) || studentExam.areResultsPublishedYet();\n+        Optional<Submission> latestSubmission = participation.findLatestSubmission();\n+\n+        if ((studentAllowedToSeeResult || isAtLeastInstructor) && latestSubmission.isPresent()) {\n+            // Set the latest result into the participation as the client expects it there for programming exercises\n+            Result result = latestSubmission.get().getResult();\n+            if (result != null) {\n+                participation.setResults(Set.of(result));\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Helper method to load the quiz questions.\n+     * It is not possible to load them in a generic way with the entity graph used", "originalCommit": "9b2cc1b6551fde08d4070f7c44145199570cd356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNTk4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463235989", "bodyText": "See 6d6270a", "author": "anditurdiu", "createdAt": "2020-07-30T19:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMjc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6d6270a751b9ee1fa362a832a54a72c747ce1f42", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 678a467cf7..0906ae1aa6 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -372,8 +369,8 @@ public class StudentExamResource {\n     }\n \n     /**\n-     * Helper method to load the quiz questions.\n-     * It is not possible to load them in a generic way with the entity graph used\n+     * Loads the quiz questions as is not possible to load them in a generic way with the entity graph used.\n+     * See {@link ParticipationService#findByStudentIdAndIndividualExercisesWithEagerSubmissionsResult}\n      *\n      * @param studentExam the studentExam for which to load exercises\n      */\n"}}, {"oid": "41c76431d8ad0de45243cda006ac76eea2415b8f", "url": "https://github.com/ls1intum/Artemis/commit/41c76431d8ad0de45243cda006ac76eea2415b8f", "message": "implement stefans suggestions", "committedDate": "2020-07-30T19:25:00Z", "type": "commit"}, {"oid": "6d6270a751b9ee1fa362a832a54a72c747ce1f42", "url": "https://github.com/ls1intum/Artemis/commit/6d6270a751b9ee1fa362a832a54a72c747ce1f42", "message": "fix documentation", "committedDate": "2020-07-30T19:36:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyNTkwMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463225901", "bodyText": "I think this still isn't right. Scenario hand-in early: isSubmitted = true & isEnded = false. This would lead to forbidden(). Couldn't we just use isSubmitted? If the student handed in his exam then his exam is definitely over.", "author": "kloessst", "createdAt": "2020-07-30T19:36:24Z", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java", "diffHunk": "@@ -261,8 +258,8 @@ public StudentExamResource(ExamAccessService examAccessService, StudentExamServi\n         }\n         var studentExam = optionalStudentExam.get();\n \n-        // check that the studentExam is over, otherwise /studentExams/conduction should be used\n-        if (!studentExam.isSubmitted() && !studentExam.isEnded()) {\n+        // check that the studentExam is over and that it has been submitted, otherwise /studentExams/conduction should be used\n+        if (!studentExam.isSubmitted() || !studentExam.isEnded()) {", "originalCommit": "41c76431d8ad0de45243cda006ac76eea2415b8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNTQzNg==", "url": "https://github.com/ls1intum/Artemis/pull/1984#discussion_r463235436", "bodyText": "See 8519b5d", "author": "anditurdiu", "createdAt": "2020-07-30T19:54:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIyNTkwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8519b5daed57c256e4c2b7e5d31fe23fb64073d0", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\nindex 4aa785b068..efe388f028 100644\n--- a/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n+++ b/src/main/java/de/tum/in/www1/artemis/web/rest/StudentExamResource.java\n\n@@ -258,8 +258,8 @@ public class StudentExamResource {\n         }\n         var studentExam = optionalStudentExam.get();\n \n-        // check that the studentExam is over and that it has been submitted, otherwise /studentExams/conduction should be used\n-        if (!studentExam.isSubmitted() || !studentExam.isEnded()) {\n+        // check that the studentExam has been submitted, otherwise /studentExams/conduction should be used\n+        if (!studentExam.isSubmitted()) {\n             return forbidden();\n         }\n \n"}}, {"oid": "7e54c5bd48961820269edf2d9011be3f3f5fa1d4", "url": "https://github.com/ls1intum/Artemis/commit/7e54c5bd48961820269edf2d9011be3f3f5fa1d4", "message": "Small style and documentation improvements", "committedDate": "2020-07-30T19:41:08Z", "type": "commit"}, {"oid": "bfa4c550b6c21c1086ca5edb2e1ec34294b0d50a", "url": "https://github.com/ls1intum/Artemis/commit/bfa4c550b6c21c1086ca5edb2e1ec34294b0d50a", "message": "Fix integration test & add anotherOne", "committedDate": "2020-07-30T19:48:33Z", "type": "commit"}, {"oid": "4f87da736b3b85f0aa1d90da592cc9b0b7cee947", "url": "https://github.com/ls1intum/Artemis/commit/4f87da736b3b85f0aa1d90da592cc9b0b7cee947", "message": "Merge branch 'exam/view-summary-no-session' of github.com:ls1intum/Artemis into exam/view-summary-no-session", "committedDate": "2020-07-30T19:49:04Z", "type": "commit"}, {"oid": "8519b5daed57c256e4c2b7e5d31fe23fb64073d0", "url": "https://github.com/ls1intum/Artemis/commit/8519b5daed57c256e4c2b7e5d31fe23fb64073d0", "message": "Fix forbidden\ngradlew spotless Apply", "committedDate": "2020-07-30T19:53:26Z", "type": "commit"}, {"oid": "9a47809bc040ad91c153ed2248ad19128d28d54c", "url": "https://github.com/ls1intum/Artemis/commit/9a47809bc040ad91c153ed2248ad19128d28d54c", "message": "Extract submission generation code into method and avoid duplication", "committedDate": "2020-07-30T19:58:53Z", "type": "commit"}, {"oid": "492eadccf1ea6cc9d28a5aea78318b2a27ba92ac", "url": "https://github.com/ls1intum/Artemis/commit/492eadccf1ea6cc9d28a5aea78318b2a27ba92ac", "message": "Merge branch 'develop' into exam/view-summary-no-session", "committedDate": "2020-07-30T20:41:31Z", "type": "commit"}]}