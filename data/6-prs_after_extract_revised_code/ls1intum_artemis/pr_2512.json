{"pr_number": 2512, "pr_title": "[Feature] Add SCA to Swift programming exercises", "pr_createdAt": "2020-12-07T16:31:02Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/2512", "timeline": [{"oid": "567a672e92b09123fde98a6b79f1ff95fe81563d", "url": "https://github.com/ls1intum/Artemis/commit/567a672e92b09123fde98a6b79f1ff95fe81563d", "message": "add correct swift documentation", "committedDate": "2020-11-23T10:27:52Z", "type": "commit"}, {"oid": "2db34d0bd825e2beef52bfdd53cc73b6198a7be1", "url": "https://github.com/ls1intum/Artemis/commit/2db34d0bd825e2beef52bfdd53cc73b6198a7be1", "message": "add swiftlint file", "committedDate": "2020-11-23T12:41:09Z", "type": "commit"}, {"oid": "28d7409ad6e653d4aefa2b3c5b55b45d3c453098", "url": "https://github.com/ls1intum/Artemis/commit/28d7409ad6e653d4aefa2b3c5b55b45d3c453098", "message": "make script more stable and add missing yaml dependency", "committedDate": "2020-11-23T16:19:51Z", "type": "commit"}, {"oid": "e32b266c74d3f058aa65f89dfac1f3cda5452180", "url": "https://github.com/ls1intum/Artemis/commit/e32b266c74d3f058aa65f89dfac1f3cda5452180", "message": "add reporter to swiftlint", "committedDate": "2020-11-25T12:07:38Z", "type": "commit"}, {"oid": "335745d351e38ec489b4a124ed5797a509b57e55", "url": "https://github.com/ls1intum/Artemis/commit/335745d351e38ec489b4a124ed5797a509b57e55", "message": "add todo for gitservice", "committedDate": "2020-11-27T07:58:34Z", "type": "commit"}, {"oid": "5e84220a4253c3cc725c6a3a0ccb481623f9ebf7", "url": "https://github.com/ls1intum/Artemis/commit/5e84220a4253c3cc725c6a3a0ccb481623f9ebf7", "message": "add todos", "committedDate": "2020-11-27T07:59:06Z", "type": "commit"}, {"oid": "50d68c305e690154c851f96f6ae72b5a099f684a", "url": "https://github.com/ls1intum/Artemis/commit/50d68c305e690154c851f96f6ae72b5a099f684a", "message": "add sca for swift", "committedDate": "2020-11-30T14:39:09Z", "type": "commit"}, {"oid": "62a66ea67373894f240d8920bfc7c2b773b71c8a", "url": "https://github.com/ls1intum/Artemis/commit/62a66ea67373894f240d8920bfc7c2b773b71c8a", "message": "adding artifacts and correct docker for swift", "committedDate": "2020-11-30T15:35:38Z", "type": "commit"}, {"oid": "fe01a4ed1209c17e5f3158044ce29ee48c6b96cd", "url": "https://github.com/ls1intum/Artemis/commit/fe01a4ed1209c17e5f3158044ce29ee48c6b96cd", "message": "add test category", "committedDate": "2020-11-30T17:43:20Z", "type": "commit"}, {"oid": "464bc28a4e1341e6fce2fb6b330e299e89bc11cf", "url": "https://github.com/ls1intum/Artemis/commit/464bc28a4e1341e6fce2fb6b330e299e89bc11cf", "message": "fix ModelFactory", "committedDate": "2020-11-30T18:19:53Z", "type": "commit"}, {"oid": "4ed40999efb75792ab955e6c4d19b71807c9d3c8", "url": "https://github.com/ls1intum/Artemis/commit/4ed40999efb75792ab955e6c4d19b71807c9d3c8", "message": "fix swift scripts", "committedDate": "2020-12-01T11:45:02Z", "type": "commit"}, {"oid": "e2b3b21a3df1ad11849890ffdd42ca62c4d95ea5", "url": "https://github.com/ls1intum/Artemis/commit/e2b3b21a3df1ad11849890ffdd42ca62c4d95ea5", "message": "add todos + swiftLint categories", "committedDate": "2020-12-06T12:40:06Z", "type": "commit"}, {"oid": "20451ad0880a2b3edf2db0a50c759c3779b1cdd8", "url": "https://github.com/ls1intum/Artemis/commit/20451ad0880a2b3edf2db0a50c759c3779b1cdd8", "message": "adapt sca script", "committedDate": "2020-12-07T15:24:07Z", "type": "commit"}, {"oid": "e30cdc98f6c850ce4de62aa95471c14f002dfb7d", "url": "https://github.com/ls1intum/Artemis/commit/e30cdc98f6c850ce4de62aa95471c14f002dfb7d", "message": "update dockerfile to install swift+swiftlint locally on bamboo", "committedDate": "2020-12-07T15:34:48Z", "type": "commit"}, {"oid": "b861405178eff90a67f4811abf6087ce4f3e418b", "url": "https://github.com/ls1intum/Artemis/commit/b861405178eff90a67f4811abf6087ce4f3e418b", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-07T15:44:56Z", "type": "commit"}, {"oid": "3c93f50ab0bf7c782fd51467093dfa0fa294eb82", "url": "https://github.com/ls1intum/Artemis/commit/3c93f50ab0bf7c782fd51467093dfa0fa294eb82", "message": "add sca support to jenkins build plan creator", "committedDate": "2020-12-07T15:46:26Z", "type": "commit"}, {"oid": "d16c663c1034a7bd0c594f4622af6f929eff37be", "url": "https://github.com/ls1intum/Artemis/commit/d16c663c1034a7bd0c594f4622af6f929eff37be", "message": "remove todos", "committedDate": "2020-12-07T16:59:09Z", "type": "commit"}, {"oid": "723feb674a56dcf50dfd899e61beedaa7addb256", "url": "https://github.com/ls1intum/Artemis/commit/723feb674a56dcf50dfd899e61beedaa7addb256", "message": "comment GitService - show hidden files", "committedDate": "2020-12-07T17:51:17Z", "type": "commit"}, {"oid": "e53ce3fc1b089feee6f8486391e98894df508ed2", "url": "https://github.com/ls1intum/Artemis/commit/e53ce3fc1b089feee6f8486391e98894df508ed2", "message": "adapt test case", "committedDate": "2020-12-07T18:05:58Z", "type": "commit"}, {"oid": "dddb6b3cc917b52a248e0f0f72dea3494ea3b7f1", "url": "https://github.com/ls1intum/Artemis/commit/dddb6b3cc917b52a248e0f0f72dea3494ea3b7f1", "message": "use the same docker container for swift and swiftlint", "committedDate": "2020-12-08T08:35:09Z", "type": "commit"}, {"oid": "60534c147a7ae95f8b40a1334479b40dc386d186", "url": "https://github.com/ls1intum/Artemis/commit/60534c147a7ae95f8b40a1334479b40dc386d186", "message": "use better standards for dockerfile", "committedDate": "2020-12-08T09:59:53Z", "type": "commit"}, {"oid": "4af099bddfc64aecd29da7faed0695c212c9b0f9", "url": "https://github.com/ls1intum/Artemis/commit/4af099bddfc64aecd29da7faed0695c212c9b0f9", "message": "add to docs", "committedDate": "2020-12-08T10:56:57Z", "type": "commit"}, {"oid": "0f7b429def748e42cbb6b646e19cac8a274e19d6", "url": "https://github.com/ls1intum/Artemis/commit/0f7b429def748e42cbb6b646e19cac8a274e19d6", "message": "fix swiflint config", "committedDate": "2020-12-08T15:44:30Z", "type": "commit"}, {"oid": "c9bf330dc1e341b8890fedb3a586e30f6ca77aee", "url": "https://github.com/ls1intum/Artemis/commit/c9bf330dc1e341b8890fedb3a586e30f6ca77aee", "message": "fix build log output", "committedDate": "2020-12-08T15:46:12Z", "type": "commit"}, {"oid": "63e725b790824ba90322b6fba2e0f84bd39c7be9", "url": "https://github.com/ls1intum/Artemis/commit/63e725b790824ba90322b6fba2e0f84bd39c7be9", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-08T15:46:28Z", "type": "commit"}, {"oid": "1150bbc197db6683273b27a2ee8ce75c55f49252", "url": "https://github.com/ls1intum/Artemis/commit/1150bbc197db6683273b27a2ee8ce75c55f49252", "message": "make dockerfile more robust to changes", "committedDate": "2020-12-13T12:25:52Z", "type": "commit"}, {"oid": "6e8e5d9c6ed5309ff6725ef7586bd4fc063b5f77", "url": "https://github.com/ls1intum/Artemis/commit/6e8e5d9c6ed5309ff6725ef7586bd4fc063b5f77", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-13T12:26:10Z", "type": "commit"}, {"oid": "3672dbc5a25b8c1dfc299d0f77e8de9846b340bb", "url": "https://github.com/ls1intum/Artemis/commit/3672dbc5a25b8c1dfc299d0f77e8de9846b340bb", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-15T16:03:31Z", "type": "commit"}, {"oid": "ed8dcfbe9783ee328ada73bb2f515c89d2ae7b10", "url": "https://github.com/ls1intum/Artemis/commit/ed8dcfbe9783ee328ada73bb2f515c89d2ae7b10", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-22T17:00:37Z", "type": "commit"}, {"oid": "aaa31211df404b200cee43efdb3beec75f1c8ea0", "url": "https://github.com/ls1intum/Artemis/commit/aaa31211df404b200cee43efdb3beec75f1c8ea0", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-22T18:45:22Z", "type": "commit"}, {"oid": "a558728ff1496afe639fe4198e6574b9cfcb5cf4", "url": "https://github.com/ls1intum/Artemis/commit/a558728ff1496afe639fe4198e6574b9cfcb5cf4", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-28T13:31:12Z", "type": "commit"}, {"oid": "945c26229cc7aa5e84a07a72e654b06a9869ace1", "url": "https://github.com/ls1intum/Artemis/commit/945c26229cc7aa5e84a07a72e654b06a9869ace1", "message": "adding separate Dockerfile for Swift Dependencies", "committedDate": "2020-12-28T14:37:08Z", "type": "commit"}, {"oid": "4a662be9f571d4244cb2e6fd2f3593d38f811609", "url": "https://github.com/ls1intum/Artemis/commit/4a662be9f571d4244cb2e6fd2f3593d38f811609", "message": "add more testcases", "committedDate": "2020-12-28T18:00:37Z", "type": "commit"}, {"oid": "61941aa45dd893e9da01f380fa212c95ed9870cb", "url": "https://github.com/ls1intum/Artemis/commit/61941aa45dd893e9da01f380fa212c95ed9870cb", "message": "add sca client tests", "committedDate": "2020-12-29T09:55:47Z", "type": "commit"}, {"oid": "7723636d4c898674f538a397834964499ebfc9ff", "url": "https://github.com/ls1intum/Artemis/commit/7723636d4c898674f538a397834964499ebfc9ff", "message": "update databaseUtilService to use a defined prog. language", "committedDate": "2020-12-29T10:52:39Z", "type": "commit"}, {"oid": "9df59a0302516438e5a565498ad944bde8840df4", "url": "https://github.com/ls1intum/Artemis/commit/9df59a0302516438e5a565498ad944bde8840df4", "message": "add check for\ntestCreateDefaultCategoriesForSwift", "committedDate": "2020-12-29T10:53:39Z", "type": "commit"}, {"oid": "7ba70493ee189198b19c33e60dadbfe1657d06e3", "url": "https://github.com/ls1intum/Artemis/commit/7ba70493ee189198b19c33e60dadbfe1657d06e3", "message": "revert check", "committedDate": "2020-12-29T12:05:10Z", "type": "commit"}, {"oid": "dff00bf1fb08d65ae96ff633e0b4e8914f02ee9d", "url": "https://github.com/ls1intum/Artemis/commit/dff00bf1fb08d65ae96ff633e0b4e8914f02ee9d", "message": "add parameterized sca tests for swift", "committedDate": "2020-12-30T14:10:04Z", "type": "commit"}, {"oid": "03ab3f462fe21bd6b33dd2b9f5cf4ff4c0416b2e", "url": "https://github.com/ls1intum/Artemis/commit/03ab3f462fe21bd6b33dd2b9f5cf4ff4c0416b2e", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-30T14:16:47Z", "type": "commit"}, {"oid": "a90b17708940dedc12ff08ede983ab4c538fdf4f", "url": "https://github.com/ls1intum/Artemis/commit/a90b17708940dedc12ff08ede983ab4c538fdf4f", "message": "fix test case for jenkins", "committedDate": "2020-12-31T09:31:18Z", "type": "commit"}, {"oid": "55211bc4ac127fd03a6906374de4afc14b87e858", "url": "https://github.com/ls1intum/Artemis/commit/55211bc4ac127fd03a6906374de4afc14b87e858", "message": "Merge branch 'develop' into feature/programming-exercise/swiftlint", "committedDate": "2020-12-31T09:31:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjU0MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550486541", "bodyText": "please add swift here as well", "author": "krusche", "createdAt": "2020-12-31T13:46:13Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java", "diffHunk": "@@ -38,20 +39,24 @@ void tearDown() {\n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult() {\n+        programmingExerciseResultTestService.setup();\n         var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n         programmingExerciseResultTestService.shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult(notification);\n     }\n \n-    @Test\n+    @ParameterizedTest\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" })", "originalCommit": "55211bc4ac127fd03a6906374de4afc14b87e858", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg4MjU0NA==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550882544", "bodyText": "resolved in bb13122 e7d6a4a", "author": "derLalla", "createdAt": "2021-01-02T13:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjU0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "bb131224aa3583ecda43327127046d7f590db25b", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java\nindex 779345320..e254acbd6 100644\n--- a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java\n\n@@ -40,24 +40,24 @@ class ProgrammingExerciseResultJenkinsIntegrationTest extends AbstractSpringInte\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult() {\n         programmingExerciseResultTestService.setup();\n-        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n+        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of(), ProgrammingLanguage.JAVA);\n         programmingExerciseResultTestService.shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult(notification);\n     }\n \n     @ParameterizedTest\n-    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" })\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" }) // TODO: add Swift if it is available for Jenkins\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(ProgrammingLanguage programmingLanguage) {\n         programmingExerciseResultTestService.setupForProgrammingLanguage(programmingLanguage);\n-        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of());\n-        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, ProgrammingLanguage.JAVA);\n+        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of(), programmingLanguage);\n+        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, programmingLanguage);\n     }\n \n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldGenerateNewManualResultIfManualAssessmentExists() {\n         programmingExerciseResultTestService.setup();\n-        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n+        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of(), ProgrammingLanguage.JAVA);\n         programmingExerciseResultTestService.shouldGenerateNewManualResultIfManualAssessmentExists(notification);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjYwMw==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550486603", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, ProgrammingLanguage.JAVA);\n          \n          \n            \n                    programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, programmingLanguage);", "author": "krusche", "createdAt": "2020-12-31T13:46:31Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java", "diffHunk": "@@ -38,20 +39,24 @@ void tearDown() {\n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult() {\n+        programmingExerciseResultTestService.setup();\n         var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n         programmingExerciseResultTestService.shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult(notification);\n     }\n \n-    @Test\n+    @ParameterizedTest\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" })\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n-    public void shouldStoreFeedbackForResultWithStaticCodeAnalysisReport() {\n+    public void shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(ProgrammingLanguage programmingLanguage) {\n+        programmingExerciseResultTestService.setupForProgrammingLanguage(programmingLanguage);\n         var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of());\n-        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification);\n+        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, ProgrammingLanguage.JAVA);", "originalCommit": "55211bc4ac127fd03a6906374de4afc14b87e858", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg4MjUxOA==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550882518", "bodyText": "resolved in bb13122 e7d6a4a", "author": "derLalla", "createdAt": "2021-01-02T13:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "bb131224aa3583ecda43327127046d7f590db25b", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java\nindex 779345320..e254acbd6 100644\n--- a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultJenkinsIntegrationTest.java\n\n@@ -40,24 +40,24 @@ class ProgrammingExerciseResultJenkinsIntegrationTest extends AbstractSpringInte\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult() {\n         programmingExerciseResultTestService.setup();\n-        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n+        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of(), ProgrammingLanguage.JAVA);\n         programmingExerciseResultTestService.shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult(notification);\n     }\n \n     @ParameterizedTest\n-    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" })\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" }) // TODO: add Swift if it is available for Jenkins\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(ProgrammingLanguage programmingLanguage) {\n         programmingExerciseResultTestService.setupForProgrammingLanguage(programmingLanguage);\n-        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of());\n-        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, ProgrammingLanguage.JAVA);\n+        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of(), programmingLanguage);\n+        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, programmingLanguage);\n     }\n \n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldGenerateNewManualResultIfManualAssessmentExists() {\n         programmingExerciseResultTestService.setup();\n-        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n+        var notification = ModelFactory.generateTestResultDTO(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of(), ProgrammingLanguage.JAVA);\n         programmingExerciseResultTestService.shouldGenerateNewManualResultIfManualAssessmentExists(notification);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4Njc5MQ==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550486791", "bodyText": "why do you move the setup method to here?\nThe setup method should be called in the setup method above and not in each test case!", "author": "krusche", "createdAt": "2020-12-31T13:47:36Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java", "diffHunk": "@@ -38,27 +40,42 @@ void tearDown() {\n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult() {\n+        programmingExerciseResultTestService.setup();\n         var notification = ModelFactory.generateBambooBuildResult(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n         programmingExerciseResultTestService.shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult(notification);\n     }\n \n-    @Test\n+    @ParameterizedTest\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\", \"SWIFT\" })\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n-    public void shouldStoreFeedbackForResultWithStaticCodeAnalysisReport() {\n-        var notification = ModelFactory.generateBambooBuildResultWithStaticCodeAnalysisReport(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of());\n-        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification);\n+    public void shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(ProgrammingLanguage programmingLanguage) {\n+        programmingExerciseResultTestService.setupForProgrammingLanguage(programmingLanguage);\n+        var notification = ModelFactory.generateBambooBuildResultWithStaticCodeAnalysisReport(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\"), List.of(), programmingLanguage);\n+        var scaReports = notification.getBuild().getJobs().get(0).getStaticCodeAnalysisReports();\n+        if (programmingLanguage == ProgrammingLanguage.SWIFT) {\n+            // SwiftLint has only one category at the moment\n+            assertThat(scaReports.size()).isEqualTo(1);\n+            assertThat(scaReports.get(0).getIssues().get(0).getCategory()).isEqualTo(\"swiftLint\");\n+        }\n+        else if (programmingLanguage == ProgrammingLanguage.JAVA) {\n+            assertThat(scaReports.size()).isEqualTo(4);\n+            scaReports.get(0).getIssues().forEach(issue -> assertThat(issue.getCategory()).isNotNull());\n+        }\n+        programmingExerciseResultTestService.shouldStoreFeedbackForResultWithStaticCodeAnalysisReport(notification, programmingLanguage);\n     }\n \n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldStoreBuildLogsForSubmission() {\n+        programmingExerciseResultTestService.setup();", "originalCommit": "55211bc4ac127fd03a6906374de4afc14b87e858", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg3NjgyNA==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550876824", "bodyText": "the setup method always creates a Java exercise, so we would need a parameterized @beforeeach method, which always initializes the correct programming language exercise.\nTherefore I needed to split the setup() method into setup() and setupForProgrammingLanguage(programmingLanguage).\nOtherwise, each time the testcase is non-Java, we would create an exercise with Java and an exercise for the specified prog. language.", "author": "derLalla", "createdAt": "2021-01-02T12:23:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4Njc5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg4MjM5NQ==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550882395", "bodyText": "resolved in ba1458f", "author": "derLalla", "createdAt": "2021-01-02T13:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4Njc5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ba1458f587a5d5b3c9c465d0ab19e1c675d5d3f0", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java\nindex f05eef305..d5cb41f21 100644\n--- a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java\n\n@@ -40,7 +42,6 @@ class ProgrammingExerciseResultBambooIntegrationTest extends AbstractSpringInteg\n     @Test\n     @WithMockUser(value = \"student1\", roles = \"USER\")\n     public void shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult() {\n-        programmingExerciseResultTestService.setup();\n         var notification = ModelFactory.generateBambooBuildResult(Constants.ASSIGNMENT_REPO_NAME, List.of(\"test1\", \"test2\", \"test4\"), List.of());\n         programmingExerciseResultTestService.shouldUpdateTestCasesAndResultScoreFromSolutionParticipationResult(notification);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjgxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550486811", "bodyText": "please revert this change and keep the setup method here!", "author": "krusche", "createdAt": "2020-12-31T13:47:50Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java", "diffHunk": "@@ -24,8 +28,6 @@\n \n     @BeforeEach\n     void setup() {\n-        programmingExerciseResultTestService.setup();", "originalCommit": "55211bc4ac127fd03a6906374de4afc14b87e858", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg4MjM5MA==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550882390", "bodyText": "done in ba1458f", "author": "derLalla", "createdAt": "2021-01-02T13:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjgxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ba1458f587a5d5b3c9c465d0ab19e1c675d5d3f0", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java\nindex f05eef305..d5cb41f21 100644\n--- a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseResultBambooIntegrationTest.java\n\n@@ -28,6 +28,8 @@ class ProgrammingExerciseResultBambooIntegrationTest extends AbstractSpringInteg\n \n     @BeforeEach\n     void setup() {\n+        programmingExerciseResultTestService.setup();\n+\n         String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";\n         doReturn(ObjectId.fromString(dummyHash)).when(gitService).getLastCommitHash(ArgumentMatchers.any());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjkzOQ==", "url": "https://github.com/ls1intum/Artemis/pull/2512#discussion_r550486939", "bodyText": "why is Swift still missing here? Please add it!", "author": "krusche", "createdAt": "2020-12-31T13:48:29Z", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGitlabJenkinsIntegrationTest.java", "diffHunk": "@@ -73,10 +73,13 @@ public void createProgrammingExercise_validExercise_bonusPointsIsNull() throws E\n         programmingExerciseTestService.createProgrammingExercise_validExercise_bonusPointsIsNull();\n     }\n \n-    @Test\n+    // TODO: Add template for Swift\n+    @ParameterizedTest\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" })", "originalCommit": "55211bc4ac127fd03a6906374de4afc14b87e858", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7d6a4a26d64212388c73f080885f6d0cf7345f3", "chunk": "diff --git a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGitlabJenkinsIntegrationTest.java b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGitlabJenkinsIntegrationTest.java\nindex e8fbb79c2..fbcda03e2 100644\n--- a/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGitlabJenkinsIntegrationTest.java\n+++ b/src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGitlabJenkinsIntegrationTest.java\n\n@@ -73,9 +73,8 @@ class ProgrammingExerciseGitlabJenkinsIntegrationTest extends AbstractSpringInte\n         programmingExerciseTestService.createProgrammingExercise_validExercise_bonusPointsIsNull();\n     }\n \n-    // TODO: Add template for Swift\n     @ParameterizedTest\n-    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" })\n+    @EnumSource(value = ProgrammingLanguage.class, names = { \"JAVA\" }) // TODO: add Swift when available for Jenkins\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n     public void createProgrammingExercise_validExercise_withStaticCodeAnalysis(ProgrammingLanguage language) throws Exception {\n         programmingExerciseTestService.createProgrammingExercise_validExercise_withStaticCodeAnalysis(language,\n"}}, {"oid": "bb131224aa3583ecda43327127046d7f590db25b", "url": "https://github.com/ls1intum/Artemis/commit/bb131224aa3583ecda43327127046d7f590db25b", "message": "parameterize jenkins testcase", "committedDate": "2021-01-02T12:14:24Z", "type": "commit"}, {"oid": "e7d6a4a26d64212388c73f080885f6d0cf7345f3", "url": "https://github.com/ls1intum/Artemis/commit/e7d6a4a26d64212388c73f080885f6d0cf7345f3", "message": "add comment for Swift Jenkins testcase", "committedDate": "2021-01-02T12:31:36Z", "type": "commit"}, {"oid": "ba1458f587a5d5b3c9c465d0ab19e1c675d5d3f0", "url": "https://github.com/ls1intum/Artemis/commit/ba1458f587a5d5b3c9c465d0ab19e1c675d5d3f0", "message": "revert changes to setup() method", "committedDate": "2021-01-02T13:07:45Z", "type": "commit"}, {"oid": "e3fa9e24307c67dc5da80cc6d331dd1a94360b67", "url": "https://github.com/ls1intum/Artemis/commit/e3fa9e24307c67dc5da80cc6d331dd1a94360b67", "message": "increase coverage of file-upload-assessment.component", "committedDate": "2021-01-02T15:05:05Z", "type": "commit"}, {"oid": "cccafde4ea70888ce5adac76b507947f11e4e52b", "url": "https://github.com/ls1intum/Artemis/commit/cccafde4ea70888ce5adac76b507947f11e4e52b", "message": "Revert \"increase coverage of file-upload-assessment.component\"\n\nThis reverts commit e3fa9e24307c67dc5da80cc6d331dd1a94360b67.", "committedDate": "2021-01-02T15:08:47Z", "type": "commit"}]}