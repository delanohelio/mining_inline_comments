{"pr_number": 1360, "pr_title": "Refactorings notifications", "pr_createdAt": "2020-04-28T00:01:23Z", "pr_url": "https://github.com/ls1intum/Artemis/pull/1360", "timeline": [{"oid": "b3194bd3cac812218ba047d268715822ff7747d3", "url": "https://github.com/ls1intum/Artemis/commit/b3194bd3cac812218ba047d268715822ff7747d3", "message": "Move all notification domain classes to own sub-package", "committedDate": "2020-04-25T20:48:15Z", "type": "commit"}, {"oid": "fa58edd32ed938fe9a614f411b529a0c9dd6f018", "url": "https://github.com/ls1intum/Artemis/commit/fa58edd32ed938fe9a614f411b529a0c9dd6f018", "message": "Smaller formatting improvements", "committedDate": "2020-04-25T21:34:42Z", "type": "commit"}, {"oid": "d8c355cacb64258d25252d5ede371df8ee229123", "url": "https://github.com/ls1intum/Artemis/commit/d8c355cacb64258d25252d5ede371df8ee229123", "message": "Add priority and outdated field to Notification", "committedDate": "2020-04-26T10:37:13Z", "type": "commit"}, {"oid": "f956828165d6020a26c1bb9b1808d2707b94a49e", "url": "https://github.com/ls1intum/Artemis/commit/f956828165d6020a26c1bb9b1808d2707b94a49e", "message": "Add SingleUserNotificationFactory", "committedDate": "2020-04-27T08:49:22Z", "type": "commit"}, {"oid": "af39920360c7da3f480b09e72c7d5c1c603830fc", "url": "https://github.com/ls1intum/Artemis/commit/af39920360c7da3f480b09e72c7d5c1c603830fc", "message": "Add GroupNotificationRepository", "committedDate": "2020-04-27T10:44:46Z", "type": "commit"}, {"oid": "7bcf7258b6aeb8f8948ea03f9952c4ebe403b8c5", "url": "https://github.com/ls1intum/Artemis/commit/7bcf7258b6aeb8f8948ea03f9952c4ebe403b8c5", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-02T20:13:01Z", "type": "commit"}, {"oid": "864894352082faf0a46b4b381764a888202bd00e", "url": "https://github.com/ls1intum/Artemis/commit/864894352082faf0a46b4b381764a888202bd00e", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-03T14:31:33Z", "type": "commit"}, {"oid": "db9f541b9a63aeb9782430368a05133f0ee8878d", "url": "https://github.com/ls1intum/Artemis/commit/db9f541b9a63aeb9782430368a05133f0ee8878d", "message": "Rename notification-management to system-notification-management: Folder", "committedDate": "2020-05-03T14:39:01Z", "type": "commit"}, {"oid": "19ca152b681c770a8429c31018d14497218bcd17", "url": "https://github.com/ls1intum/Artemis/commit/19ca152b681c770a8429c31018d14497218bcd17", "message": "Rename notification-management to system-notification-management: Files", "committedDate": "2020-05-03T16:04:58Z", "type": "commit"}, {"oid": "298ae83f91ed52660d93b0f58bd82587bdaa9af3", "url": "https://github.com/ls1intum/Artemis/commit/298ae83f91ed52660d93b0f58bd82587bdaa9af3", "message": "Rename notification-management to system-notification-management: Routing", "committedDate": "2020-05-03T16:26:41Z", "type": "commit"}, {"oid": "6ef68110ad85714600a3bdf7141ae1c0ca19a98f", "url": "https://github.com/ls1intum/Artemis/commit/6ef68110ad85714600a3bdf7141ae1c0ca19a98f", "message": "Rename notification-management to system-notification-management: global translation strings", "committedDate": "2020-05-03T17:07:36Z", "type": "commit"}, {"oid": "82e155d96ad2f72b8961c2c3e6494aa794020ef8", "url": "https://github.com/ls1intum/Artemis/commit/82e155d96ad2f72b8961c2c3e6494aa794020ef8", "message": "Move notification translation strings to own file", "committedDate": "2020-05-03T17:41:18Z", "type": "commit"}, {"oid": "6d78eb95c8d554be02eb28af6451511335bed185", "url": "https://github.com/ls1intum/Artemis/commit/6d78eb95c8d554be02eb28af6451511335bed185", "message": "Rename notification-management to system-notification-management: adjust translation strings", "committedDate": "2020-05-03T18:09:29Z", "type": "commit"}, {"oid": "bfb04683b44c72c0252aee8a8fef527e9e5b49c9", "url": "https://github.com/ls1intum/Artemis/commit/bfb04683b44c72c0252aee8a8fef527e9e5b49c9", "message": "Adjust created, updated and deleted message", "committedDate": "2020-05-03T21:08:37Z", "type": "commit"}, {"oid": "8d6b5bb967766dfda1a86096927af1e0fa334324", "url": "https://github.com/ls1intum/Artemis/commit/8d6b5bb967766dfda1a86096927af1e0fa334324", "message": "Rename notification-management to system-notification-management: route variables", "committedDate": "2020-05-03T21:17:01Z", "type": "commit"}, {"oid": "bf3c9fb7542afd5cf471dd79e766cf896764beab", "url": "https://github.com/ls1intum/Artemis/commit/bf3c9fb7542afd5cf471dd79e766cf896764beab", "message": "Rename notification-management to system-notification-management: class identifiers", "committedDate": "2020-05-03T21:25:10Z", "type": "commit"}, {"oid": "c36d84a22a3f827eec4634ce6a3e0b32ff7fe202", "url": "https://github.com/ls1intum/Artemis/commit/c36d84a22a3f827eec4634ce6a3e0b32ff7fe202", "message": "Use notification title in delete dialog", "committedDate": "2020-05-03T21:28:26Z", "type": "commit"}, {"oid": "55420d033be2c7901d647af43317ac8b0e379ff3", "url": "https://github.com/ls1intum/Artemis/commit/55420d033be2c7901d647af43317ac8b0e379ff3", "message": "Format expire date on detail page", "committedDate": "2020-05-03T21:29:49Z", "type": "commit"}, {"oid": "847f34298fb2555861a0cffd5166a2a9f24bfcc8", "url": "https://github.com/ls1intum/Artemis/commit/847f34298fb2555861a0cffd5166a2a9f24bfcc8", "message": "Set default value for systemNotificationType select field", "committedDate": "2020-05-03T23:29:38Z", "type": "commit"}, {"oid": "06fd9c53e20be89972aeff74ead2e4e7d2bbefcb", "url": "https://github.com/ls1intum/Artemis/commit/06fd9c53e20be89972aeff74ead2e4e7d2bbefcb", "message": "Rename notification-management to system-notification-management: change location of created, update and delete messages", "committedDate": "2020-05-03T23:55:16Z", "type": "commit"}, {"oid": "3e59dcb8955d6607b66b05606fa8e3f23f6f2746", "url": "https://github.com/ls1intum/Artemis/commit/3e59dcb8955d6607b66b05606fa8e3f23f6f2746", "message": "Rename notification-management to system-notification-management: delete translation files for notificationManagement", "committedDate": "2020-05-04T00:02:19Z", "type": "commit"}, {"oid": "ab55ebdf2803652917677636465e613da662158c", "url": "https://github.com/ls1intum/Artemis/commit/ab55ebdf2803652917677636465e613da662158c", "message": "Remove predefined value", "committedDate": "2020-05-04T01:05:40Z", "type": "commit"}, {"oid": "58d705033cb9159588cdba380e56c12e8a15c70b", "url": "https://github.com/ls1intum/Artemis/commit/58d705033cb9159588cdba380e56c12e8a15c70b", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-04T09:39:58Z", "type": "commit"}, {"oid": "1060b47765df5e69aef4a79e0da2a661775dc726", "url": "https://github.com/ls1intum/Artemis/commit/1060b47765df5e69aef4a79e0da2a661775dc726", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-04T14:07:27Z", "type": "commit"}, {"oid": "0919b25e5807ec13713a3c45488aaf777caea05d", "url": "https://github.com/ls1intum/Artemis/commit/0919b25e5807ec13713a3c45488aaf777caea05d", "message": "Use class identifiers instead of implicit null check to distinguish notification types", "committedDate": "2020-05-04T15:34:25Z", "type": "commit"}, {"oid": "099becb61762883d760094cc38317b683fc3e40f", "url": "https://github.com/ls1intum/Artemis/commit/099becb61762883d760094cc38317b683fc3e40f", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-04T17:09:37Z", "type": "commit"}, {"oid": "424517bb054876de882d7e3a4ec467a0829272ed", "url": "https://github.com/ls1intum/Artemis/commit/424517bb054876de882d7e3a4ec467a0829272ed", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-04T19:29:31Z", "type": "commit"}, {"oid": "11f4f67c0f061986bdf48951627da893cca63e92", "url": "https://github.com/ls1intum/Artemis/commit/11f4f67c0f061986bdf48951627da893cca63e92", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-04T21:54:06Z", "type": "commit"}, {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "url": "https://github.com/ls1intum/Artemis/commit/38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-05T12:01:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1Nzg3Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420057872", "bodyText": "Maybe include notificationType in the error message so it's clear which notification type is unsupported and caused the error.", "author": "madwau", "createdAt": "2020-05-05T12:06:18Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param attachment for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Attachment attachment, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.ATTACHMENT_CHANGE) {\n+            title = \"Attachment updated\";\n+            text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");", "originalCommit": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczMzIyOA==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420733228", "bodyText": "Good point, I will add it!", "author": "sascha11110", "createdAt": "2020-05-06T11:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1Nzg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0a389268e5f20ba89ade933cc0f60b88e38b2580", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\nindex 57d9f17d76..d9e4e4c332 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n\n@@ -22,7 +22,7 @@ public class GroupNotificationFactory {\n             text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n         }\n         else {\n-            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType: \" + notificationType);\n         }\n \n         Course course = attachment.getLecture().getCourse();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1ODU4Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420058583", "bodyText": "This comment doesn't really add much value since it's just the method name. I'd say leave it out or expand more.", "author": "madwau", "createdAt": "2020-05-05T12:07:41Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param attachment for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Attachment attachment, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.ATTACHMENT_CHANGE) {\n+            title = \"Attachment updated\";\n+            text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+        }\n+\n+        Course course = attachment.getLecture().getCourse();\n+        GroupNotification notification = new GroupNotification(course, title, text, author, groupNotificationType);\n+\n+        // Set target", "originalCommit": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDczMzg1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420733853", "bodyText": "I will remove it :-)", "author": "sascha11110", "createdAt": "2020-05-06T11:57:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1ODU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0a389268e5f20ba89ade933cc0f60b88e38b2580", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\nindex 57d9f17d76..d9e4e4c332 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n\n@@ -22,7 +22,7 @@ public class GroupNotificationFactory {\n             text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n         }\n         else {\n-            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType: \" + notificationType);\n         }\n \n         Course course = attachment.getLecture().getCourse();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1OTQxMQ==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420059411", "bodyText": "This seems like a good opportunity for a switch statement.", "author": "madwau", "createdAt": "2020-05-05T12:09:20Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param attachment for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Attachment attachment, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.ATTACHMENT_CHANGE) {\n+            title = \"Attachment updated\";\n+            text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+        }\n+\n+        Course course = attachment.getLecture().getCourse();\n+        GroupNotification notification = new GroupNotification(course, title, text, author, groupNotificationType);\n+\n+        // Set target\n+        notification.setTarget(notification.getAttachmentUpdated(attachment.getLecture()));\n+\n+        return notification;\n+    }\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param exercise for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Exercise exercise, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.EXERCISE_CREATED) {", "originalCommit": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxNzc1Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420817753", "bodyText": "Normally I prefer if-else over switch statements in Java but the new enhanced switch statements or really nice (multiple values possible, no break in every case needed). I will adjust my implementation :-)", "author": "sascha11110", "createdAt": "2020-05-06T14:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1OTQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "0a389268e5f20ba89ade933cc0f60b88e38b2580", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\nindex 57d9f17d76..d9e4e4c332 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n\n@@ -22,7 +22,7 @@ public class GroupNotificationFactory {\n             text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n         }\n         else {\n-            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType: \" + notificationType);\n         }\n \n         Course course = attachment.getLecture().getCourse();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Mjg2Mg==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420062862", "bodyText": "I think this would be easier to parse mentally:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n          \n          \n            \n                    if (attachment.getReleaseDate() != null && attachment.getReleaseDate().isAfter(ZonedDateTime.now())) {", "author": "madwau", "createdAt": "2020-05-05T12:15:51Z", "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {", "originalCommit": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc1NzM4OQ==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420757389", "bodyText": "Definitely!", "author": "sascha11110", "createdAt": "2020-05-06T12:39:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Mjg2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "85d2cc655659b2be93b3c57d5f7f3f19607f3151", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\nindex d343db11ae..224673fb9c 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n\n@@ -35,7 +35,7 @@ public class GroupNotificationService {\n      */\n     public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n         // Do not send a notification before the release date of the attachment.\n-        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+        if (attachment.getReleaseDate() != null && attachment.getReleaseDate().isAfter(ZonedDateTime.now())) {\n             return;\n         }\n         // Create and send the notification.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Mzg0Mw==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420063843", "bodyText": "Could this be removed now or are there difficulties associated with removing it?", "author": "madwau", "createdAt": "2020-05-05T12:17:43Z", "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+            return;\n+        }\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(attachment, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.ATTACHMENT_CHANGE));\n     }\n \n-    private GroupNotification createAttachmentUpdatedGroupNotification(Attachment attachment, String notificationText) {\n-        Course course = attachment.getLecture().getCourse();\n-        String title = \"Attachment \" + attachment.getName() + \" updated\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(course, title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getAttachmentUpdated(attachment.getLecture()));\n-        return groupNotification;\n+    /**\n+     * Notify students groups about an exercise opened for practice.\n+     *\n+     * @param exercise that has been opened for practice\n+     */\n+    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_PRACTICE));\n     }\n \n+    /**\n+     * Notify student groups about an exercise started.\n+     *\n+     * @param exercise that has been started\n+     */\n     public void notifyStudentGroupAboutExerciseStart(Exercise exercise) {\n-        String title = \"Exercise started\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" just started.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExerciseVisibility(Exercise exercise) {\n-        String title = \"New exercise available\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now available.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n-        String title = \"Exercise open for practice\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now open for practice.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_STARTED));\n     }\n \n     /**\n-     * Notify student group about an exercise update\n+     * Notify student groups about an exercise update.\n      *\n      * @param exercise that has been updated\n-     * @param notificationText that should be displayed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client", "originalCommit": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5NDM2NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420794365", "bodyText": "Forgot to work on that. Actually, we need to keep the notification text as there is an option to set a custom notification message when updating an attachment or an exercise.", "author": "sascha11110", "createdAt": "2020-05-06T13:35:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Mzg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "85d2cc655659b2be93b3c57d5f7f3f19607f3151", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\nindex d343db11ae..224673fb9c 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n\n@@ -35,7 +35,7 @@ public class GroupNotificationService {\n      */\n     public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n         // Do not send a notification before the release date of the attachment.\n-        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+        if (attachment.getReleaseDate() != null && attachment.getReleaseDate().isAfter(ZonedDateTime.now())) {\n             return;\n         }\n         // Create and send the notification.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2NTY3NA==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420065674", "bodyText": "Who is this question directed at? Maybe it'd be better to clarify the question since the TODO adds more confusion than it alleviates, I feel.", "author": "madwau", "createdAt": "2020-05-05T12:20:50Z", "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+            return;\n+        }\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(attachment, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.ATTACHMENT_CHANGE));\n     }\n \n-    private GroupNotification createAttachmentUpdatedGroupNotification(Attachment attachment, String notificationText) {\n-        Course course = attachment.getLecture().getCourse();\n-        String title = \"Attachment \" + attachment.getName() + \" updated\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(course, title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getAttachmentUpdated(attachment.getLecture()));\n-        return groupNotification;\n+    /**\n+     * Notify students groups about an exercise opened for practice.\n+     *\n+     * @param exercise that has been opened for practice\n+     */\n+    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_PRACTICE));\n     }\n \n+    /**\n+     * Notify student groups about an exercise started.\n+     *\n+     * @param exercise that has been started\n+     */\n     public void notifyStudentGroupAboutExerciseStart(Exercise exercise) {\n-        String title = \"Exercise started\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" just started.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExerciseVisibility(Exercise exercise) {\n-        String title = \"New exercise available\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now available.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n-        String title = \"Exercise open for practice\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now open for practice.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_STARTED));\n     }\n \n     /**\n-     * Notify student group about an exercise update\n+     * Notify student groups about an exercise update.\n      *\n      * @param exercise that has been updated\n-     * @param notificationText that should be displayed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n      */\n     public void notifyStudentGroupAboutExerciseUpdate(Exercise exercise, String notificationText) {\n+        // Do not send a notification before the release date of the exercise.\n         if (exercise.getReleaseDate() != null && exercise.getReleaseDate().isAfter(ZonedDateTime.now())) {\n             return;\n         }\n-        String title = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" updated\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyInstructorGroupAboutExerciseUpdate(Exercise exercise, String notificationText) {\n-        String title = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" updated\";\n-        notifyInstructorGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    private void notifyInstructorGroupAboutExerciseChange(Exercise exercise, String title, String notificationText) {\n-        GroupNotification groupNotification = createExerciseUpdatedGroupNotificationForInstructors(exercise, title, notificationText);\n-        saveAndSendGroupNotification(groupNotification);\n-    }\n-\n-    private void notifyStudentGroupAboutExerciseChange(Exercise exercise, String title, String notificationText) {\n-        GroupNotification groupNotification = createExerciseUpdatedGroupNotificationForStudents(exercise, title, notificationText);\n-        saveAndSendGroupNotification(groupNotification);\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_UPDATED));\n     }\n \n     /**\n-     * Notify tutor group about the creation of an exercise\n+     * Notify tutor groups about the creation of an exercise.\n      *\n      * @param exercise that has been created\n      */\n     public void notifyTutorGroupAboutExerciseCreated(Exercise exercise) {\n-        GroupNotification groupNotification = createExerciseCreatedGroupNotificationForTutors(exercise);\n-        saveAndSendGroupNotification(groupNotification);\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.TA, NotificationType.EXERCISE_CREATED));\n+    }\n+\n+    /**\n+     * Notify instructor groups about an exercise update.\n+     *\n+     * @param exercise that has been updated\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyInstructorGroupAboutExerciseUpdate(Exercise exercise, String notificationText) {\n+        // TODO: why null for author?", "originalCommit": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc1OTcwNQ==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420759705", "bodyText": "I forgot this and the previous TODO. Was somehow a reminder for myself. I will resolve both todos.", "author": "sascha11110", "createdAt": "2020-05-06T12:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2NTY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "85d2cc655659b2be93b3c57d5f7f3f19607f3151", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\nindex d343db11ae..224673fb9c 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n\n@@ -35,7 +35,7 @@ public class GroupNotificationService {\n      */\n     public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n         // Do not send a notification before the release date of the attachment.\n-        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+        if (attachment.getReleaseDate() != null && attachment.getReleaseDate().isAfter(ZonedDateTime.now())) {\n             return;\n         }\n         // Create and send the notification.\n"}}, {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367", "url": "https://github.com/ls1intum/Artemis/commit/19cb53c263d8735e7a9cb43527d872ae53987367", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-05T12:31:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MDQxMw==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420250413", "bodyText": "I am wondering whether this could be prevented entirely if instead of having the NotificationType Enum, you would add subclasses for each Type and use their constructors?\nMaybe a bit over the top. What does everyone think?", "author": "jpbernius", "createdAt": "2020-05-05T16:40:20Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {", "originalCommit": "19cb53c263d8735e7a9cb43527d872ae53987367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3Nzg0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420777845", "bodyText": "I'm actually planning that as a part of the upcoming outdated mechanism for the different notification types (e.g. newAnswerForExercise, exerciseUpdate, ...). But I think for now this is a little bit out of scope for this PR :-)", "author": "sascha11110", "createdAt": "2020-05-06T13:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MDQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MDc2Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420790766", "bodyText": "Sure, just an idea.  :D", "author": "jpbernius", "createdAt": "2020-05-06T13:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MDQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "0a389268e5f20ba89ade933cc0f60b88e38b2580", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\nindex 57d9f17d76..d9e4e4c332 100644\n--- a/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n+++ b/src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java\n\n@@ -22,7 +22,7 @@ public class GroupNotificationFactory {\n             text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n         }\n         else {\n-            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType: \" + notificationType);\n         }\n \n         Course course = attachment.getLecture().getCourse();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MTI0NQ==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420251245", "bodyText": "\ud83d\udc4d", "author": "jpbernius", "createdAt": "2020-05-05T16:41:38Z", "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/Notification.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package de.tum.in.www1.artemis.domain;\n+package de.tum.in.www1.artemis.domain.notification;", "originalCommit": "19cb53c263d8735e7a9cb43527d872ae53987367", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MzY2Ng==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420253666", "bodyText": "Maybe add a static import for GroupNotificationFactory.createNotification?", "author": "jpbernius", "createdAt": "2020-05-05T16:45:28Z", "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+            return;\n+        }\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(attachment, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.ATTACHMENT_CHANGE));", "originalCommit": "19cb53c263d8735e7a9cb43527d872ae53987367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MDkxMg==", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420770912", "bodyText": "Didn't know that this possibility exists in Java. I will add it :-)", "author": "sascha11110", "createdAt": "2020-05-06T13:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MzY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "85d2cc655659b2be93b3c57d5f7f3f19607f3151", "chunk": "diff --git a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\nindex d343db11ae..224673fb9c 100644\n--- a/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n+++ b/src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java\n\n@@ -35,7 +35,7 @@ public class GroupNotificationService {\n      */\n     public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n         // Do not send a notification before the release date of the attachment.\n-        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+        if (attachment.getReleaseDate() != null && attachment.getReleaseDate().isAfter(ZonedDateTime.now())) {\n             return;\n         }\n         // Create and send the notification.\n"}}, {"oid": "7ca72bb596101f7b2e546047dbd87e5252a1c4ec", "url": "https://github.com/ls1intum/Artemis/commit/7ca72bb596101f7b2e546047dbd87e5252a1c4ec", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-06T11:11:42Z", "type": "commit"}, {"oid": "0a389268e5f20ba89ade933cc0f60b88e38b2580", "url": "https://github.com/ls1intum/Artemis/commit/0a389268e5f20ba89ade933cc0f60b88e38b2580", "message": "Add notificationType to unsupported notification type exception", "committedDate": "2020-05-06T11:56:07Z", "type": "commit"}, {"oid": "d51510f71c695268a74f479e781a94705f5c286a", "url": "https://github.com/ls1intum/Artemis/commit/d51510f71c695268a74f479e781a94705f5c286a", "message": "Remove set target comment", "committedDate": "2020-05-06T11:57:31Z", "type": "commit"}, {"oid": "21405c6a751ade0285a23c554e2ba20cb97536fc", "url": "https://github.com/ls1intum/Artemis/commit/21405c6a751ade0285a23c554e2ba20cb97536fc", "message": "Fix odd line break", "committedDate": "2020-05-06T12:16:09Z", "type": "commit"}, {"oid": "ba24a22be07ce8dc8973a814f4eb3c9d3aabcfd6", "url": "https://github.com/ls1intum/Artemis/commit/ba24a22be07ce8dc8973a814f4eb3c9d3aabcfd6", "message": "Translation string \"Expire date\" -> \"Expiration date\"", "committedDate": "2020-05-06T12:17:07Z", "type": "commit"}, {"oid": "5edeae133869a33ecabfb13cd915bfdea9a69d21", "url": "https://github.com/ls1intum/Artemis/commit/5edeae133869a33ecabfb13cd915bfdea9a69d21", "message": "Change system-notification-management component selectors", "committedDate": "2020-05-06T12:22:12Z", "type": "commit"}, {"oid": "28c5c6552da3c56363e1c4679275473f47115bc5", "url": "https://github.com/ls1intum/Artemis/commit/28c5c6552da3c56363e1c4679275473f47115bc5", "message": "Component naming: Mgmt to Management", "committedDate": "2020-05-06T12:31:10Z", "type": "commit"}, {"oid": "b50bd816798d9372bf3ad7bfd18993d284d8bdeb", "url": "https://github.com/ls1intum/Artemis/commit/b50bd816798d9372bf3ad7bfd18993d284d8bdeb", "message": "Change date format", "committedDate": "2020-05-06T12:36:11Z", "type": "commit"}, {"oid": "85d2cc655659b2be93b3c57d5f7f3f19607f3151", "url": "https://github.com/ls1intum/Artemis/commit/85d2cc655659b2be93b3c57d5f7f3f19607f3151", "message": "Adjust release date evaluation", "committedDate": "2020-05-06T12:39:59Z", "type": "commit"}, {"oid": "bf20e9a5d4ec6d05916d7c5545409186b95dbf2d", "url": "https://github.com/ls1intum/Artemis/commit/bf20e9a5d4ec6d05916d7c5545409186b95dbf2d", "message": "Also pass author to notifyTutorAndInstructorGroupAboutNewQuestionForExercise notification", "committedDate": "2020-05-06T12:43:20Z", "type": "commit"}, {"oid": "6bb4732108f33f939747e619ce46cf403eed775e", "url": "https://github.com/ls1intum/Artemis/commit/6bb4732108f33f939747e619ce46cf403eed775e", "message": "Add static import for createNotification method", "committedDate": "2020-05-06T13:02:52Z", "type": "commit"}, {"oid": "f5afa6134e3314be5486716bfccad673264a2dc6", "url": "https://github.com/ls1intum/Artemis/commit/f5afa6134e3314be5486716bfccad673264a2dc6", "message": "Move system notification management routes into a single array", "committedDate": "2020-05-06T13:18:58Z", "type": "commit"}, {"oid": "b6e4d482970521f0a07db116820c7d0fcae6071d", "url": "https://github.com/ls1intum/Artemis/commit/b6e4d482970521f0a07db116820c7d0fcae6071d", "message": "Remove unnecessary Route import", "committedDate": "2020-05-06T13:30:50Z", "type": "commit"}, {"oid": "889df619a05d79609d57c27b50b1a089461e43ac", "url": "https://github.com/ls1intum/Artemis/commit/889df619a05d79609d57c27b50b1a089461e43ac", "message": "Add custom notificationText to GroupNotificationFactory", "committedDate": "2020-05-06T13:42:09Z", "type": "commit"}, {"oid": "8f5b7f3c281e5acdce18485d6eabbce6c23d478d", "url": "https://github.com/ls1intum/Artemis/commit/8f5b7f3c281e5acdce18485d6eabbce6c23d478d", "message": "Add colon to system notification only when notification.text exists", "committedDate": "2020-05-06T14:34:51Z", "type": "commit"}, {"oid": "5def38bb9c1da2c54a8bffc517adc49da29d4ea4", "url": "https://github.com/ls1intum/Artemis/commit/5def38bb9c1da2c54a8bffc517adc49da29d4ea4", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-06T18:22:06Z", "type": "commit"}, {"oid": "1d986e1aa82335f80c5d5d29943e405ce8c66f6a", "url": "https://github.com/ls1intum/Artemis/commit/1d986e1aa82335f80c5d5d29943e405ce8c66f6a", "message": "Use switch statements instead of if-else", "committedDate": "2020-05-06T18:39:48Z", "type": "commit"}, {"oid": "247dd3228a015942b9406f5f822710a339cc033a", "url": "https://github.com/ls1intum/Artemis/commit/247dd3228a015942b9406f5f822710a339cc033a", "message": "Switch to older switch statement syntax as spotless' removeUnusedImports does not support enhanced switch statements", "committedDate": "2020-05-06T19:01:23Z", "type": "commit"}, {"oid": "544c8be67c4f8dc59f289ee86d7bd918e82a15b9", "url": "https://github.com/ls1intum/Artemis/commit/544c8be67c4f8dc59f289ee86d7bd918e82a15b9", "message": "Fix failing test cases", "committedDate": "2020-05-06T20:21:44Z", "type": "commit"}, {"oid": "a61639f0a480b169c1bce2cc0ef2a68b7441ae66", "url": "https://github.com/ls1intum/Artemis/commit/a61639f0a480b169c1bce2cc0ef2a68b7441ae66", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-07T12:42:14Z", "type": "commit"}, {"oid": "3be2ea02423f023ccb638bb5ca687e0e735e9fc7", "url": "https://github.com/ls1intum/Artemis/commit/3be2ea02423f023ccb638bb5ca687e0e735e9fc7", "message": "Merge branch 'develop' into enhancement/notifications/refactorings", "committedDate": "2020-05-09T11:36:19Z", "type": "commit"}, {"oid": "02c9daa595e5d782d458a7dda5d2c5450a92715f", "url": "https://github.com/ls1intum/Artemis/commit/02c9daa595e5d782d458a7dda5d2c5450a92715f", "message": "Apply Java code style", "committedDate": "2020-05-09T11:58:17Z", "type": "commit"}]}