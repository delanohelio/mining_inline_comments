{"pr_number": 1134, "pr_title": "KYLIN-4396 Close FileReader in SaveDictStep", "pr_createdAt": "2020-03-02T15:53:28Z", "pr_url": "https://github.com/apache/kylin/pull/1134", "timeline": [{"oid": "892a2c2805d33de19c5e9b53cebbd39d1b71415f", "url": "https://github.com/apache/kylin/commit/892a2c2805d33de19c5e9b53cebbd39d1b71415f", "message": "Update sonar secure.", "committedDate": "2020-03-03T08:31:48Z", "type": "forcePushed"}, {"oid": "3b498893db71a3582116d0e4fad1f56bf661ed72", "url": "https://github.com/apache/kylin/commit/3b498893db71a3582116d0e4fad1f56bf661ed72", "message": "Update sonar secure.", "committedDate": "2020-03-03T09:45:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4OTA4OQ==", "url": "https://github.com/apache/kylin/pull/1134#discussion_r387089089", "bodyText": "Will it be more safe to put it into a \"finally\" block?", "author": "shaofengshi", "createdAt": "2020-03-03T15:16:33Z", "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "diffHunk": "@@ -136,6 +136,7 @@ public boolean accept(Path path) {\n                         logger.error(\"dictionary of column {} not found! \", colRef.getName());\n                     }\n                 }\n+                reader.close();", "originalCommit": "9f0029d7edfed1080947a38ba131daacae8eca50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwNzQ0Nw==", "url": "https://github.com/apache/kylin/pull/1134#discussion_r387407447", "bodyText": "Thank you!", "author": "hit-lacus", "createdAt": "2020-03-04T01:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4OTA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "cc063ed03ede38fe7022af6aa16bec7cffb5fe9d", "chunk": "diff --git a/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java b/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java\nindex 2b997f4f5..23d610eff 100644\n--- a/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java\n+++ b/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java\n\n@@ -108,35 +108,34 @@ public class SaveDictStep extends AbstractExecutable {\n                 }\n             });\n \n-            SequenceFile.Reader reader;\n             for (FileStatus file : files) {\n-                reader = new SequenceFile.Reader(fs, file.getPath(), conf);\n-                Text colName = new Text();\n-                Text dictInfo = new Text();\n-                while (reader.next(colName, dictInfo)) {\n-                    TblColRef colRef = colRefMap.get(colName.toString());\n-                    if (colRef == null) {\n-                        throw new IllegalArgumentException(\"Invalid column name \" + colName\n-                                + \" or it need not build dictionary!\");\n-                    }\n-                    DictionaryInfo dictionaryInfo = serializer.deserialize(new DataInputStream(\n-                            new ByteArrayInputStream(dictInfo.getBytes())));\n-\n-                    Dictionary dict = dictionaryInfo.getDictionaryObject();\n-                    if (dict != null) {\n-                        dictionaryInfo = dictManager.trySaveNewDict(dict, dictionaryInfo);\n-                        cubeSeg.putDictResPath(colRef, dictionaryInfo.getResourcePath());\n-                        if (cubeSeg.getRowkeyStats() != null) {\n-                            cubeSeg.getRowkeyStats().add(\n-                                    new Object[] { colRef.getName(), dict.getSize(), dict.getSizeOfId() });\n+                try(SequenceFile.Reader reader = new SequenceFile.Reader(fs, file.getPath(), conf)) {\n+                    Text colName = new Text();\n+                    Text dictInfo = new Text();\n+                    while (reader.next(colName, dictInfo)) {\n+                        TblColRef colRef = colRefMap.get(colName.toString());\n+                        if (colRef == null) {\n+                            throw new IllegalArgumentException(\"Invalid column name \" + colName\n+                                    + \" or it need not build dictionary!\");\n+                        }\n+                        DictionaryInfo dictionaryInfo = serializer.deserialize(new DataInputStream(\n+                                new ByteArrayInputStream(dictInfo.getBytes())));\n+\n+                        Dictionary dict = dictionaryInfo.getDictionaryObject();\n+                        if (dict != null) {\n+                            dictionaryInfo = dictManager.trySaveNewDict(dict, dictionaryInfo);\n+                            cubeSeg.putDictResPath(colRef, dictionaryInfo.getResourcePath());\n+                            if (cubeSeg.getRowkeyStats() != null) {\n+                                cubeSeg.getRowkeyStats().add(\n+                                        new Object[]{colRef.getName(), dict.getSize(), dict.getSizeOfId()});\n+                            } else {\n+                                logger.error(\"rowkey_stats field not found!\");\n+                            }\n                         } else {\n-                            logger.error(\"rowkey_stats field not found!\");\n+                            logger.error(\"dictionary of column {} not found! \", colRef.getName());\n                         }\n-                    } else {\n-                        logger.error(\"dictionary of column {} not found! \", colRef.getName());\n                     }\n                 }\n-                reader.close();\n             }\n             CubeUpdate cubeBuilder = new CubeUpdate(cubeForUpdate);\n             cubeBuilder.setToUpdateSegs(cubeSeg);\n"}}, {"oid": "cc063ed03ede38fe7022af6aa16bec7cffb5fe9d", "url": "https://github.com/apache/kylin/commit/cc063ed03ede38fe7022af6aa16bec7cffb5fe9d", "message": "KYLIN-4396 Close FileReader in SaveDictStep", "committedDate": "2020-03-04T01:51:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzNzc1NQ==", "url": "https://github.com/apache/kylin/pull/1134#discussion_r387437755", "bodyText": "The code format here is not well. Please format it...", "author": "shaofengshi", "createdAt": "2020-03-04T03:59:59Z", "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "diffHunk": "@@ -108,32 +108,32 @@ public boolean accept(Path path) {\n                 }\n             });\n \n-            SequenceFile.Reader reader;\n             for (FileStatus file : files) {\n-                reader = new SequenceFile.Reader(fs, file.getPath(), conf);\n-                Text colName = new Text();\n-                Text dictInfo = new Text();\n-                while (reader.next(colName, dictInfo)) {\n-                    TblColRef colRef = colRefMap.get(colName.toString());\n-                    if (colRef == null) {\n-                        throw new IllegalArgumentException(\"Invalid column name \" + colName\n-                                + \" or it need not build dictionary!\");\n-                    }\n-                    DictionaryInfo dictionaryInfo = serializer.deserialize(new DataInputStream(\n-                            new ByteArrayInputStream(dictInfo.getBytes())));\n-\n-                    Dictionary dict = dictionaryInfo.getDictionaryObject();\n-                    if (dict != null) {\n-                        dictionaryInfo = dictManager.trySaveNewDict(dict, dictionaryInfo);\n-                        cubeSeg.putDictResPath(colRef, dictionaryInfo.getResourcePath());\n-                        if (cubeSeg.getRowkeyStats() != null) {\n-                            cubeSeg.getRowkeyStats().add(\n-                                    new Object[] { colRef.getName(), dict.getSize(), dict.getSizeOfId() });\n+                try(SequenceFile.Reader reader = new SequenceFile.Reader(fs, file.getPath(), conf)) {", "originalCommit": "cc063ed03ede38fe7022af6aa16bec7cffb5fe9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4MjQ2MA==", "url": "https://github.com/apache/kylin/pull/1134#discussion_r388682460", "bodyText": "Thank you, I have updated.", "author": "hit-lacus", "createdAt": "2020-03-06T02:25:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzNzc1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ebe9c3817ce75af07dbcf8eb2c33e60f3a6aee9a", "chunk": "diff --git a/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java b/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java\nindex 23d610eff..ae2fbe4ea 100644\n--- a/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java\n+++ b/engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java\n\n@@ -109,7 +109,7 @@ public class SaveDictStep extends AbstractExecutable {\n             });\n \n             for (FileStatus file : files) {\n-                try(SequenceFile.Reader reader = new SequenceFile.Reader(fs, file.getPath(), conf)) {\n+                try (SequenceFile.Reader reader = new SequenceFile.Reader(fs, file.getPath(), conf)) {\n                     Text colName = new Text();\n                     Text dictInfo = new Text();\n                     while (reader.next(colName, dictInfo)) {\n"}}, {"oid": "ebe9c3817ce75af07dbcf8eb2c33e60f3a6aee9a", "url": "https://github.com/apache/kylin/commit/ebe9c3817ce75af07dbcf8eb2c33e60f3a6aee9a", "message": "KYLIN-4396 Close FileReader in SaveDictStep", "committedDate": "2020-03-06T01:40:18Z", "type": "commit"}, {"oid": "ebe9c3817ce75af07dbcf8eb2c33e60f3a6aee9a", "url": "https://github.com/apache/kylin/commit/ebe9c3817ce75af07dbcf8eb2c33e60f3a6aee9a", "message": "KYLIN-4396 Close FileReader in SaveDictStep", "committedDate": "2020-03-06T01:40:18Z", "type": "forcePushed"}]}