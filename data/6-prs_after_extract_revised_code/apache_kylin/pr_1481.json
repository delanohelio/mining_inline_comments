{"pr_number": 1481, "pr_title": "KYLIN-4813 Refactor spark build log", "pr_createdAt": "2020-11-18T01:23:31Z", "pr_url": "https://github.com/apache/kylin/pull/1481", "timeline": [{"oid": "c439b9b8f93850753a124c810ba4cfc7ce6193ee", "url": "https://github.com/apache/kylin/commit/c439b9b8f93850753a124c810ba4cfc7ce6193ee", "message": "KYLIN-4817 Refactor spark build log", "committedDate": "2020-11-18T01:24:05Z", "type": "forcePushed"}, {"oid": "a4a49d13f834c78047e26721e3661853243763e3", "url": "https://github.com/apache/kylin/commit/a4a49d13f834c78047e26721e3661853243763e3", "message": "KYLIN-4813 Refactor spark build log", "committedDate": "2020-11-18T03:02:34Z", "type": "forcePushed"}, {"oid": "f1042da2b992d771dfe210c2bcd2913564e5123b", "url": "https://github.com/apache/kylin/commit/f1042da2b992d771dfe210c2bcd2913564e5123b", "message": "KYLIN-4813 Refactor spark build log", "committedDate": "2020-11-18T03:42:07Z", "type": "forcePushed"}, {"oid": "e3005aafa8c4364d4fb0be4d8cd2a19e651a7e56", "url": "https://github.com/apache/kylin/commit/e3005aafa8c4364d4fb0be4d8cd2a19e651a7e56", "message": "KYLIN-4813 Refactor spark build log", "committedDate": "2020-11-18T06:55:03Z", "type": "commit"}, {"oid": "e3005aafa8c4364d4fb0be4d8cd2a19e651a7e56", "url": "https://github.com/apache/kylin/commit/e3005aafa8c4364d4fb0be4d8cd2a19e651a7e56", "message": "KYLIN-4813 Refactor spark build log", "committedDate": "2020-11-18T06:55:03Z", "type": "forcePushed"}, {"oid": "79e50ff5242e84d2537bd850eba31774596a6571", "url": "https://github.com/apache/kylin/commit/79e50ff5242e84d2537bd850eba31774596a6571", "message": "Add spark executor log4j", "committedDate": "2020-11-19T02:26:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU1MjkzOQ==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r526552939", "bodyText": "remove this blank line.", "author": "zzcclp", "createdAt": "2020-11-19T02:32:28Z", "path": "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java", "diffHunk": "@@ -2803,10 +2822,15 @@ public boolean isSparkEngineEnabled() {\n         return Boolean.parseBoolean(getOptional(\"kylin.query.spark-engine.enabled\", \"true\"));\n     }\n \n-    public String getLogSparkPropertiesFile() {\n-        return getLogPropertyFile(\"kylin-parquet-log4j.properties\");\n+    public String getLogSparkDriverPropertiesFile() {\n+        return getLogPropertyFile(\"spark-driver-log4j.properties\");\n+    }\n+\n+    public String getLogSparkExecutorPropertiesFile() {\n+        return getLogPropertyFile(\"spark-executor-log4j.properties\");\n     }\n \n+", "originalCommit": "79e50ff5242e84d2537bd850eba31774596a6571", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3MzUxMQ==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r526573511", "bodyText": "Before combine project with stepId, please check if it is vaild and remove any illegal character.", "author": "hit-lacus", "createdAt": "2020-11-19T03:37:49Z", "path": "server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java", "diffHunk": "@@ -160,17 +168,41 @@ public JobInstance get(@PathVariable String jobId) {\n      * @return\n      * @throws IOException\n      */\n+\n     @RequestMapping(value = \"/{jobId}/steps/{stepId}/output\", method = { RequestMethod.GET }, produces = {\n             \"application/json\" })\n     @ResponseBody\n     public Map<String, String> getStepOutput(@PathVariable String jobId, @PathVariable String stepId) {\n         Map<String, String> result = new HashMap<String, String>();\n         result.put(\"jobId\", jobId);\n         result.put(\"stepId\", String.valueOf(stepId));\n-        result.put(\"cmd_output\", jobService.getExecutableManager().getOutput(stepId).getVerboseMsg());\n+        result.put(\"cmd_output\", jobService.getJobOutput(jobId, stepId));\n         return result;\n     }\n \n+    /**\n+     * Download a job step output from hdfs\n+     * @param jobId\n+     * @param stepId\n+     * @param project\n+     * @param response\n+     * @return\n+     */\n+    @RequestMapping(value = \"/{job_id:.+}/steps/{step_id:.+}/log\", method = { RequestMethod.GET }, produces = { \"application/json\" })\n+    @ResponseBody\n+    public EnvelopeResponse<String> downloadLogFile(@PathVariable(\"job_id\") String jobId,\n+                                                    @PathVariable(\"step_id\") String stepId, @RequestParam(value = \"project\") String project,\n+                                                    HttpServletResponse response) throws IOException {\n+        checkRequiredArg(\"job_id\", jobId);\n+        checkRequiredArg(\"step_id\", stepId);\n+        checkRequiredArg(\"project\", project);\n+        String downloadFilename = String.format(Locale.ROOT, \"%s_%s.log\", project, stepId);", "originalCommit": "79e50ff5242e84d2537bd850eba31774596a6571", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3Mzc1MA==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r526573750", "bodyText": "Please check report from LGTM or search \"HTTP Response Splitting\" for background.", "author": "hit-lacus", "createdAt": "2020-11-19T03:38:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3MzUxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4f92f6f2c8ceb95971138ac489e5792ce84bf44e", "chunk": "diff --git a/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java b/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java\nindex c28362c84..cd63ac74b 100644\n--- a/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java\n+++ b/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java\n\n@@ -164,29 +166,20 @@ public class JobController extends BasicController {\n \n     /**\n      * Get a job step output\n-     * \n-     * @return\n-     * @throws IOException\n      */\n-\n     @RequestMapping(value = \"/{jobId}/steps/{stepId}/output\", method = { RequestMethod.GET }, produces = {\n             \"application/json\" })\n     @ResponseBody\n     public Map<String, String> getStepOutput(@PathVariable String jobId, @PathVariable String stepId) {\n-        Map<String, String> result = new HashMap<String, String>();\n+        Map<String, String> result = new HashMap<>();\n         result.put(\"jobId\", jobId);\n         result.put(\"stepId\", String.valueOf(stepId));\n-        result.put(\"cmd_output\", jobService.getJobOutput(jobId, stepId));\n+        result.put(\"cmd_output\", jobService.getJobStepOutput(jobId, stepId));\n         return result;\n     }\n \n     /**\n-     * Download a job step output from hdfs\n-     * @param jobId\n-     * @param stepId\n-     * @param project\n-     * @param response\n-     * @return\n+     * Download a step output(Spark driver log) from hdfs\n      */\n     @RequestMapping(value = \"/{job_id:.+}/steps/{step_id:.+}/log\", method = { RequestMethod.GET }, produces = { \"application/json\" })\n     @ResponseBody\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NTE3Nw==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r526665177", "bodyText": "What does kylin.log.spark-driver-properties-file means?", "author": "hit-lacus", "createdAt": "2020-11-19T08:10:41Z", "path": "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java", "diffHunk": "@@ -258,6 +258,9 @@ final public void setProperty(String key, String value) {\n \n     final protected void reloadKylinConfig(Properties properties) {\n         this.properties = BCC.check(properties);\n+        setProperty(\"kylin.metadata.url.identifier\", getMetadataUrlPrefix());\n+        setProperty(\"kylin.log.spark-driver-properties-file\", getLogSparkDriverPropertiesFile());", "originalCommit": "79e50ff5242e84d2537bd850eba31774596a6571", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d87f319d9257268f4f0bbe10fb141f4c3c02d72e", "chunk": "diff --git a/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java b/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java\nindex 2f302bb11..8df5aa9ef 100644\n--- a/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java\n+++ b/core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java\n\n@@ -259,7 +266,6 @@ public abstract class KylinConfigBase implements Serializable {\n     final protected void reloadKylinConfig(Properties properties) {\n         this.properties = BCC.check(properties);\n         setProperty(\"kylin.metadata.url.identifier\", getMetadataUrlPrefix());\n-        setProperty(\"kylin.log.spark-driver-properties-file\", getLogSparkDriverPropertiesFile());\n         setProperty(\"kylin.log.spark-executor-properties-file\", getLogSparkExecutorPropertiesFile());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUyMDM1Mg==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r527520352", "bodyText": "I can not understand here.", "author": "hit-lacus", "createdAt": "2020-11-20T08:27:30Z", "path": "core-job/src/main/java/org/apache/kylin/job/execution/AbstractExecutable.java", "diffHunk": "@@ -587,7 +596,7 @@ private static boolean isRetryableException(String exceptionName) {\n \n     public final String getProject() {\n         if (project == null) {\n-            throw new IllegalStateException(\"project is not set for abstract executable \" + getId());\n+            logger.error(\"project is not set for abstract executable \" + getId());", "originalCommit": "79e50ff5242e84d2537bd850eba31774596a6571", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69a44abb886bd38ebda501c5e44c9633fad5577f", "chunk": "diff --git a/core-job/src/main/java/org/apache/kylin/job/execution/AbstractExecutable.java b/core-job/src/main/java/org/apache/kylin/job/execution/AbstractExecutable.java\nindex d815e5bdb..a2fe7e5a4 100644\n--- a/core-job/src/main/java/org/apache/kylin/job/execution/AbstractExecutable.java\n+++ b/core-job/src/main/java/org/apache/kylin/job/execution/AbstractExecutable.java\n\n@@ -596,7 +596,7 @@ public abstract class AbstractExecutable implements Executable, Idempotent {\n \n     public final String getProject() {\n         if (project == null) {\n-            logger.error(\"project is not set for abstract executable \" + getId());\n+            throw new IllegalStateException(\"project is not set for abstract executable \" + getId());\n         }\n         return project;\n     }\n"}}, {"oid": "4f92f6f2c8ceb95971138ac489e5792ce84bf44e", "url": "https://github.com/apache/kylin/commit/4f92f6f2c8ceb95971138ac489e5792ce84bf44e", "message": "KYLIN-4813 Fix several bugs for executor-side log collection\n\n- add --files to upload user-defined log4j properties\n- fix ClassName error\n- fix executor.extraJavaOptions be overwrote in Driver side\n- fix security issue (HTTP response splitting)\n- code style etc.", "committedDate": "2020-11-22T14:04:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ3NjA0MQ==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r528476041", "bodyText": "Modify to new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault()) .", "author": "hit-lacus", "createdAt": "2020-11-23T05:18:28Z", "path": "kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/common/logging/SparkExecutorHdfsAppender.java", "diffHunk": "@@ -0,0 +1,260 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.engine.spark.common.logging;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.security.UserGroupInformation;\n+import org.apache.log4j.helpers.LogLog;\n+import org.apache.log4j.spi.LoggingEvent;\n+import org.apache.spark.SparkEnv;\n+import org.apache.spark.deploy.yarn.YarnSparkHadoopUtil;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.UUID;\n+\n+public class SparkExecutorHdfsAppender extends AbstractHdfsLogAppender {\n+\n+    private static final long A_DAY_MILLIS = 24 * 60 * 60 * 1000L;\n+    private static final long A_HOUR_MILLIS = 60 * 60 * 1000L;\n+    private SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");", "originalCommit": "4f92f6f2c8ceb95971138ac489e5792ce84bf44e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69a44abb886bd38ebda501c5e44c9633fad5577f", "chunk": "diff --git a/kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/common/logging/SparkExecutorHdfsAppender.java b/kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/common/logging/SparkExecutorHdfsAppender.java\nindex b24165d07..4a7602212 100644\n--- a/kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/common/logging/SparkExecutorHdfsAppender.java\n+++ b/kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/common/logging/SparkExecutorHdfsAppender.java\n\n@@ -1,21 +1,3 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.apache.kylin.engine.spark.common.logging;\n \n import com.google.common.annotations.VisibleForTesting;\n"}}, {"oid": "69a44abb886bd38ebda501c5e44c9633fad5577f", "url": "https://github.com/apache/kylin/commit/69a44abb886bd38ebda501c5e44c9633fad5577f", "message": "KYLIN-4813 Add spark executor log4j\n\nKYLIN-4813 Minor fix", "committedDate": "2020-11-23T08:00:16Z", "type": "commit"}, {"oid": "76ea908a8074a6c85f2e39e38f187390fb15c74e", "url": "https://github.com/apache/kylin/commit/76ea908a8074a6c85f2e39e38f187390fb15c74e", "message": "KYLIN-4813 Fix several bugs for executor-side log collection\n\n- add --files to upload user-defined log4j properties\n- fix ClassName error\n- fix executor.extraJavaOptions be overwrote in Driver side\n- fix security issue (HTTP response splitting)\n- code style etc.", "committedDate": "2020-11-23T08:00:38Z", "type": "commit"}, {"oid": "034dfad6d6e18e275ea2e1a3a3034c7b3c782553", "url": "https://github.com/apache/kylin/commit/034dfad6d6e18e275ea2e1a3a3034c7b3c782553", "message": "KYLIN-4813 Add download all log link in front-end", "committedDate": "2020-11-23T08:00:50Z", "type": "forcePushed"}, {"oid": "1cc1720e1df4ba4f1ec103ee35c4ea00fde5ce1d", "url": "https://github.com/apache/kylin/commit/1cc1720e1df4ba4f1ec103ee35c4ea00fde5ce1d", "message": "KYLIN-4813 Add download all log link in front-end", "committedDate": "2020-11-23T08:12:47Z", "type": "commit"}, {"oid": "1cc1720e1df4ba4f1ec103ee35c4ea00fde5ce1d", "url": "https://github.com/apache/kylin/commit/1cc1720e1df4ba4f1ec103ee35c4ea00fde5ce1d", "message": "KYLIN-4813 Add download all log link in front-end", "committedDate": "2020-11-23T08:12:47Z", "type": "forcePushed"}, {"oid": "d87f319d9257268f4f0bbe10fb141f4c3c02d72e", "url": "https://github.com/apache/kylin/commit/d87f319d9257268f4f0bbe10fb141f4c3c02d72e", "message": "KYLIN-4813 Some adjustments for executor-side log collection", "committedDate": "2020-11-25T01:48:00Z", "type": "commit"}, {"oid": "d87f319d9257268f4f0bbe10fb141f4c3c02d72e", "url": "https://github.com/apache/kylin/commit/d87f319d9257268f4f0bbe10fb141f4c3c02d72e", "message": "KYLIN-4813 Some adjustments for executor-side log collection", "committedDate": "2020-11-25T01:48:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0MzQxOA==", "url": "https://github.com/apache/kylin/pull/1481#discussion_r530943418", "bodyText": "Totally useless comment!", "author": "hit-lacus", "createdAt": "2020-11-26T10:54:50Z", "path": "server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java", "diffHunk": "@@ -198,6 +201,22 @@ public JobInstance get(@PathVariable String jobId) {\n         return new EnvelopeResponse<>(ResponseCode.CODE_SUCCESS, \"\", \"\");\n     }\n \n+    /**\n+     * RPC Call\n+     *\n+     * @param sparkJobUpdateRequest", "originalCommit": "1b5490d236ee811971f2520852ef92fa84b06046", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68df8945f3a064aab424c129dd04c4fdceb62788", "chunk": "diff --git a/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java b/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java\nindex 4f06b11f0..6b60326aa 100644\n--- a/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java\n+++ b/server-base/src/main/java/org/apache/kylin/rest/controller/JobController.java\n\n@@ -203,9 +203,6 @@ public class JobController extends BasicController {\n \n     /**\n      * RPC Call\n-     *\n-     * @param sparkJobUpdateRequest\n-     * @return\n      */\n     @PutMapping(value = \"/spark\")\n     @ResponseBody\n"}}, {"oid": "68df8945f3a064aab424c129dd04c4fdceb62788", "url": "https://github.com/apache/kylin/commit/68df8945f3a064aab424c129dd04c4fdceb62788", "message": "KYLIN-4825 Add yarn tracking url on job step page", "committedDate": "2020-11-26T11:04:10Z", "type": "commit"}, {"oid": "68df8945f3a064aab424c129dd04c4fdceb62788", "url": "https://github.com/apache/kylin/commit/68df8945f3a064aab424c129dd04c4fdceb62788", "message": "KYLIN-4825 Add yarn tracking url on job step page", "committedDate": "2020-11-26T11:04:10Z", "type": "forcePushed"}]}