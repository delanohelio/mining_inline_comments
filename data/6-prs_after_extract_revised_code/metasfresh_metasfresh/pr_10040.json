{"pr_number": 10040, "pr_title": "Automatically set `HU.BestBeforeDate` and `HU.LotNr` attributes during Manfacturing", "pr_createdAt": "2020-09-30T12:58:49Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10040", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMDU3Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498010576", "bodyText": "introduce IHUAttributesBL.isAutomaticallySetLotNumber() and isAutomaticallySetBestBeforeDate().\navoid having public sysconfig names.", "author": "teosarca", "createdAt": "2020-10-01T06:30:08Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/attribute/HUAttributeConstants.java", "diffHunk": "@@ -87,4 +77,7 @@ public static String sqlBestBeforeDate(final String huIdColumnName)\n \t\tCheck.assumeNotEmpty(huIdColumnName, \"huIdColumnName is not empty\");\n \t\treturn \"\\\"de.metas.handlingunits\\\".huBestBeforeDate(\" + huIdColumnName + \")\";\n \t}\n+\n+\tpublic static final String SYSCONFIG_AutomaticallySetLotNumber = \"de.metas.handlingunits.attributes.AutomaticallySetLotNumber\";\n+\tpublic static final String SYSCONFIG_AutomaticallySetBestBeforeDate = \"de.metas.handlingunits.attributes.AutomaticallySetBestBeforeDate\";", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzMTk0Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498031946", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMDU3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/attribute/HUAttributeConstants.java b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/attribute/HUAttributeConstants.java\nindex 078cea8b98..981c6d503f 100644\n--- a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/attribute/HUAttributeConstants.java\n+++ b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/attribute/HUAttributeConstants.java\n\n@@ -77,7 +88,4 @@ public final class HUAttributeConstants\n \t\tCheck.assumeNotEmpty(huIdColumnName, \"huIdColumnName is not empty\");\n \t\treturn \"\\\"de.metas.handlingunits\\\".huBestBeforeDate(\" + huIdColumnName + \")\";\n \t}\n-\n-\tpublic static final String SYSCONFIG_AutomaticallySetLotNumber = \"de.metas.handlingunits.attributes.AutomaticallySetLotNumber\";\n-\tpublic static final String SYSCONFIG_AutomaticallySetBestBeforeDate = \"de.metas.handlingunits.attributes.AutomaticallySetBestBeforeDate\";\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTM4NA==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498011384", "bodyText": "introduce a new method, e.g. updateAttributes(hu...) which calls both methods.", "author": "teosarca", "createdAt": "2020-10-01T06:32:18Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java", "diffHunk": "@@ -334,17 +338,8 @@ private void updateReceivedHUs(\n \t\t\t{\n \t\t\t\tfinal IAttributeStorage huAttributes = huAttributeStorageFactory.getAttributeStorage(hu);\n \n-\t\t\t\tif (lotNumber != null\n-\t\t\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))\n-\t\t\t\t{\n-\t\t\t\t\thuAttributes.setValue(AttributeConstants.ATTR_LotNumber, lotNumber);\n-\t\t\t\t}\n-\n-\t\t\t\tif (bestBeforeDate != null\n-\t\t\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_BestBeforeDate))\n-\t\t\t\t{\n-\t\t\t\t\thuAttributes.setValue(AttributeConstants.ATTR_BestBeforeDate, bestBeforeDate);\n-\t\t\t\t}\n+\t\t\t\tsetLotNumberAttribute(hu, huAttributes);\n+\t\t\t\tsetBestBeforeDateAttribute(huAttributes);", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzNjExNg==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498036116", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\nindex 2b60530c5d..994e455b6e 100644\n--- a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\n+++ b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\n\n@@ -321,62 +310,17 @@ import lombok.Value;\n \t\t\t\t.build();\n \t}\n \n-\tprivate void updateReceivedHUs(\n-\t\t\tfinal IHUContext huContext,\n-\t\t\tfinal Collection<I_M_HU> hus)\n+\tprivate void updateReceivedHUs(final Collection<I_M_HU> hus)\n \t{\n \t\t//\n \t\t// Modify the HU Attributes based on the attributes already existing from issuing (task 08177)\n \t\tppOrderProductAttributeBL.updateHUAttributes(hus, getPpOrderId());\n \n-\t\tif (lotNumber != null\n-\t\t\t\t|| bestBeforeDate != null)\n-\t\t{\n-\t\t\tfinal IAttributeStorageFactory huAttributeStorageFactory = huContext.getHUAttributeStorageFactory();\n-\n-\t\t\tfor (final I_M_HU hu : hus)\n-\t\t\t{\n-\t\t\t\tfinal IAttributeStorage huAttributes = huAttributeStorageFactory.getAttributeStorage(hu);\n-\n-\t\t\t\tsetLotNumberAttribute(hu, huAttributes);\n-\t\t\t\tsetBestBeforeDateAttribute(huAttributes);\n-\n-\t\t\t\thuAttributes.saveChangesIfNeeded();\n-\t\t\t}\n-\t\t}\n-\n \t\t//\n \t\t// Assign HUs to PP_Order/PP_Order_BOMLine\n \t\tsetAssignedHUs(hus);\n \t}\n \n-\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n-\t{\n-\t\tfinal String lotNumberToSet;\n-\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))\n-\t\t{\n-\t\t\tlotNumberToSet = CoalesceUtil.coalesce(lotNumber, hu.getValue());\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tlotNumberToSet = lotNumber;\n-\t\t}\n-\n-\t\tif (huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))\n-\t\t{\n-\t\t\thuAttributes.setValue(AttributeConstants.ATTR_LotNumber, lotNumberToSet);\n-\t\t}\n-\t}\n-\n-\tprivate void setBestBeforeDateAttribute(final IAttributeStorage huAttributes)\n-\t{\n-\t\tif (bestBeforeDate != null\n-\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_BestBeforeDate))\n-\t\t{\n-\t\t\thuAttributes.setValue(AttributeConstants.ATTR_BestBeforeDate, bestBeforeDate);\n-\t\t}\n-\t}\n-\n \t@Override\n \tpublic final IPPOrderReceiptHUProducer movementDate(@NonNull final ZonedDateTime movementDate)\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTQ3NA==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498011474", "bodyText": "use IHUAttributesBL.isAuto....", "author": "teosarca", "createdAt": "2020-10-01T06:32:34Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java", "diffHunk": "@@ -355,6 +350,33 @@ private void updateReceivedHUs(\n \t\tsetAssignedHUs(hus);\n \t}\n \n+\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n+\t{\n+\t\tfinal String lotNumberToSet;\n+\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzNjM0Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498036346", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:26:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\nindex 2b60530c5d..994e455b6e 100644\n--- a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\n+++ b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\n\n@@ -321,62 +310,17 @@ import lombok.Value;\n \t\t\t\t.build();\n \t}\n \n-\tprivate void updateReceivedHUs(\n-\t\t\tfinal IHUContext huContext,\n-\t\t\tfinal Collection<I_M_HU> hus)\n+\tprivate void updateReceivedHUs(final Collection<I_M_HU> hus)\n \t{\n \t\t//\n \t\t// Modify the HU Attributes based on the attributes already existing from issuing (task 08177)\n \t\tppOrderProductAttributeBL.updateHUAttributes(hus, getPpOrderId());\n \n-\t\tif (lotNumber != null\n-\t\t\t\t|| bestBeforeDate != null)\n-\t\t{\n-\t\t\tfinal IAttributeStorageFactory huAttributeStorageFactory = huContext.getHUAttributeStorageFactory();\n-\n-\t\t\tfor (final I_M_HU hu : hus)\n-\t\t\t{\n-\t\t\t\tfinal IAttributeStorage huAttributes = huAttributeStorageFactory.getAttributeStorage(hu);\n-\n-\t\t\t\tsetLotNumberAttribute(hu, huAttributes);\n-\t\t\t\tsetBestBeforeDateAttribute(huAttributes);\n-\n-\t\t\t\thuAttributes.saveChangesIfNeeded();\n-\t\t\t}\n-\t\t}\n-\n \t\t//\n \t\t// Assign HUs to PP_Order/PP_Order_BOMLine\n \t\tsetAssignedHUs(hus);\n \t}\n \n-\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n-\t{\n-\t\tfinal String lotNumberToSet;\n-\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))\n-\t\t{\n-\t\t\tlotNumberToSet = CoalesceUtil.coalesce(lotNumber, hu.getValue());\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tlotNumberToSet = lotNumber;\n-\t\t}\n-\n-\t\tif (huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))\n-\t\t{\n-\t\t\thuAttributes.setValue(AttributeConstants.ATTR_LotNumber, lotNumberToSet);\n-\t\t}\n-\t}\n-\n-\tprivate void setBestBeforeDateAttribute(final IAttributeStorage huAttributes)\n-\t{\n-\t\tif (bestBeforeDate != null\n-\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_BestBeforeDate))\n-\t\t{\n-\t\t\thuAttributes.setValue(AttributeConstants.ATTR_BestBeforeDate, bestBeforeDate);\n-\t\t}\n-\t}\n-\n \t@Override\n \tpublic final IPPOrderReceiptHUProducer movementDate(@NonNull final ZonedDateTime movementDate)\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMjA5NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498012095", "bodyText": "minor: move this as first check", "author": "teosarca", "createdAt": "2020-10-01T06:34:26Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java", "diffHunk": "@@ -355,6 +350,33 @@ private void updateReceivedHUs(\n \t\tsetAssignedHUs(hus);\n \t}\n \n+\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n+\t{\n+\t\tfinal String lotNumberToSet;\n+\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))\n+\t\t{\n+\t\t\tlotNumberToSet = CoalesceUtil.coalesce(lotNumber, hu.getValue());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tlotNumberToSet = lotNumber;\n+\t\t}\n+\n+\t\tif (huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzNjcyOA==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498036728", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:27:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMjA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\nindex 2b60530c5d..994e455b6e 100644\n--- a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\n+++ b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java\n\n@@ -321,62 +310,17 @@ import lombok.Value;\n \t\t\t\t.build();\n \t}\n \n-\tprivate void updateReceivedHUs(\n-\t\t\tfinal IHUContext huContext,\n-\t\t\tfinal Collection<I_M_HU> hus)\n+\tprivate void updateReceivedHUs(final Collection<I_M_HU> hus)\n \t{\n \t\t//\n \t\t// Modify the HU Attributes based on the attributes already existing from issuing (task 08177)\n \t\tppOrderProductAttributeBL.updateHUAttributes(hus, getPpOrderId());\n \n-\t\tif (lotNumber != null\n-\t\t\t\t|| bestBeforeDate != null)\n-\t\t{\n-\t\t\tfinal IAttributeStorageFactory huAttributeStorageFactory = huContext.getHUAttributeStorageFactory();\n-\n-\t\t\tfor (final I_M_HU hu : hus)\n-\t\t\t{\n-\t\t\t\tfinal IAttributeStorage huAttributes = huAttributeStorageFactory.getAttributeStorage(hu);\n-\n-\t\t\t\tsetLotNumberAttribute(hu, huAttributes);\n-\t\t\t\tsetBestBeforeDateAttribute(huAttributes);\n-\n-\t\t\t\thuAttributes.saveChangesIfNeeded();\n-\t\t\t}\n-\t\t}\n-\n \t\t//\n \t\t// Assign HUs to PP_Order/PP_Order_BOMLine\n \t\tsetAssignedHUs(hus);\n \t}\n \n-\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n-\t{\n-\t\tfinal String lotNumberToSet;\n-\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))\n-\t\t{\n-\t\t\tlotNumberToSet = CoalesceUtil.coalesce(lotNumber, hu.getValue());\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tlotNumberToSet = lotNumber;\n-\t\t}\n-\n-\t\tif (huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))\n-\t\t{\n-\t\t\thuAttributes.setValue(AttributeConstants.ATTR_LotNumber, lotNumberToSet);\n-\t\t}\n-\t}\n-\n-\tprivate void setBestBeforeDateAttribute(final IAttributeStorage huAttributes)\n-\t{\n-\t\tif (bestBeforeDate != null\n-\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_BestBeforeDate))\n-\t\t{\n-\t\t\thuAttributes.setValue(AttributeConstants.ATTR_BestBeforeDate, bestBeforeDate);\n-\t\t}\n-\t}\n-\n \t@Override\n \tpublic final IPPOrderReceiptHUProducer movementDate(@NonNull final ZonedDateTime movementDate)\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzQ2Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498013467", "bodyText": "introduce only one method which calls both", "author": "teosarca", "createdAt": "2020-10-01T06:37:54Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveCUs.java", "diffHunk": "@@ -206,6 +205,10 @@ private I_M_HU createPlanningVHU(final I_M_ReceiptSchedule receiptSchedule)\n \t\t\tthrow new HUException(\"One and only one VHU was expected but we got: \" + hus);\n \t\t}\n \t\tfinal I_M_HU vhu = hus.get(0);\n+\n+\t\tsetAttributeBBD(vhu, receiptSchedule);\n+\t\tsetAttributeLotNumber(vhu);", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzODQwMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498038401", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzQ2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveCUs.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveCUs.java\nindex 614ce2f49e..b00aab5121 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveCUs.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveCUs.java\n\n@@ -205,10 +206,6 @@ public class WEBUI_M_ReceiptSchedule_ReceiveCUs extends ReceiptScheduleBasedProc\n \t\t\tthrow new HUException(\"One and only one VHU was expected but we got: \" + hus);\n \t\t}\n \t\tfinal I_M_HU vhu = hus.get(0);\n-\n-\t\tsetAttributeBBD(vhu, receiptSchedule);\n-\t\tsetAttributeLotNumber(vhu);\n-\n \t\tInterfaceWrapperHelper.setTrxName(vhu, ITrx.TRXNAME_None);\n \t\treturn vhu;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzYwOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498013609", "bodyText": "introduce one method which calls both", "author": "teosarca", "createdAt": "2020-10-01T06:38:20Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveHUs_Base.java", "diffHunk": "@@ -148,6 +149,11 @@ protected final String doIt() throws Exception\n \t\t//\n \t\t// Generate the HUs\n \t\tfinal List<I_M_HU> hus = huGenerator.generateWithinOwnTransaction();\n+\n+\t\thus.forEach(hu -> {\n+\t\t\tsetAttributeBBD(hu, receiptSchedule);", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzODQ0OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498038449", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveHUs_Base.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveHUs_Base.java\nindex c96e68e8e1..6a9bffa164 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveHUs_Base.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveHUs_Base.java\n\n@@ -149,11 +148,6 @@ import de.metas.util.Services;\n \t\t//\n \t\t// Generate the HUs\n \t\tfinal List<I_M_HU> hus = huGenerator.generateWithinOwnTransaction();\n-\n-\t\thus.forEach(hu -> {\n-\t\t\tsetAttributeBBD(hu, receiptSchedule);\n-\t\t\tsetAttributeLotNumber(hu);\n-\t\t});\n \t\topenHUsToReceive(hus);\n \n \t\treturn MSG_OK;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzkwNw==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498013907", "bodyText": "use IHUAttributeBL.isAuto...", "author": "teosarca", "createdAt": "2020-10-01T06:39:06Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java", "diffHunk": "@@ -228,7 +232,32 @@ protected void postProcess(boolean success)\n \t\tgetViewsRepo().notifyRecordChanged(I_PP_Order.Table_Name, ppOrderLinesView.getPpOrderId().getRepoId());\n \t}\n \n-\tprivate final IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n+\t@Nullable\n+\tLocalDate computeBestBeforeDate()\n+\t{\n+\t\tif (sysConfigBL.getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetBestBeforeDate, false))", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA0MTA1Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498041056", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzkwNw=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java\nindex c557229f98..48f9a574d4 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java\n\n@@ -232,32 +228,7 @@ public class WEBUI_PP_Order_Receipt\n \t\tgetViewsRepo().notifyRecordChanged(I_PP_Order.Table_Name, ppOrderLinesView.getPpOrderId().getRepoId());\n \t}\n \n-\t@Nullable\n-\tLocalDate computeBestBeforeDate()\n-\t{\n-\t\tif (sysConfigBL.getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetBestBeforeDate, false))\n-\t\t{\n-\t\t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n-\t\t\tfinal I_PP_Order ppOrderPO = huPPOrderBL.getById(row.getOrderId());\n-\t\t\tfinal LocalDate datePromised = TimeUtil.asLocalDate(ppOrderPO.getDatePromised());\n-\n-\t\t\tfinal ProductId productId = row.getProductId();\n-\t\t\tfinal int guaranteeDaysMin = productDAO.getProductGuaranteeDaysMinFallbackProductCategory(productId);\n-\n-\t\t\tif (guaranteeDaysMin <= 0)\n-\t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\treturn datePromised.plusDays(guaranteeDaysMin);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tprivate IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n+\tprivate final IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n \t{\n \t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxNDM3Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498014372", "bodyText": "eager make this check", "author": "teosarca", "createdAt": "2020-10-01T06:40:14Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java", "diffHunk": "@@ -228,7 +232,32 @@ protected void postProcess(boolean success)\n \t\tgetViewsRepo().notifyRecordChanged(I_PP_Order.Table_Name, ppOrderLinesView.getPpOrderId().getRepoId());\n \t}\n \n-\tprivate final IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n+\t@Nullable\n+\tLocalDate computeBestBeforeDate()\n+\t{\n+\t\tif (sysConfigBL.getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetBestBeforeDate, false))\n+\t\t{\n+\t\t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n+\t\t\tfinal I_PP_Order ppOrderPO = huPPOrderBL.getById(row.getOrderId());\n+\t\t\tfinal LocalDate datePromised = TimeUtil.asLocalDate(ppOrderPO.getDatePromised());\n+\n+\t\t\tfinal ProductId productId = row.getProductId();\n+\t\t\tfinal int guaranteeDaysMin = productDAO.getProductGuaranteeDaysMinFallbackProductCategory(productId);\n+\n+\t\t\tif (guaranteeDaysMin <= 0)", "originalCommit": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA0MjE1Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498042157", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-10-01T07:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxNDM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7a5073962ec1781d66469463fc533553b4907ac7", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java\nindex c557229f98..48f9a574d4 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java\n\n@@ -232,32 +228,7 @@ public class WEBUI_PP_Order_Receipt\n \t\tgetViewsRepo().notifyRecordChanged(I_PP_Order.Table_Name, ppOrderLinesView.getPpOrderId().getRepoId());\n \t}\n \n-\t@Nullable\n-\tLocalDate computeBestBeforeDate()\n-\t{\n-\t\tif (sysConfigBL.getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetBestBeforeDate, false))\n-\t\t{\n-\t\t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n-\t\t\tfinal I_PP_Order ppOrderPO = huPPOrderBL.getById(row.getOrderId());\n-\t\t\tfinal LocalDate datePromised = TimeUtil.asLocalDate(ppOrderPO.getDatePromised());\n-\n-\t\t\tfinal ProductId productId = row.getProductId();\n-\t\t\tfinal int guaranteeDaysMin = productDAO.getProductGuaranteeDaysMinFallbackProductCategory(productId);\n-\n-\t\t\tif (guaranteeDaysMin <= 0)\n-\t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\treturn datePromised.plusDays(guaranteeDaysMin);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tprivate IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n+\tprivate final IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n \t{\n \t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n \n"}}, {"oid": "30b45641323925a0a24d6e4bf87bf4e070255ed6", "url": "https://github.com/metasfresh/metasfresh/commit/30b45641323925a0a24d6e4bf87bf4e070255ed6", "message": "Add sysconfigs\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T06:49:31Z", "type": "forcePushed"}, {"oid": "7a5073962ec1781d66469463fc533553b4907ac7", "url": "https://github.com/metasfresh/metasfresh/commit/7a5073962ec1781d66469463fc533553b4907ac7", "message": "Add `IProductDAO.getProductGuaranteeDaysMinFallbackProductCategory`\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "fa4ef525bd48e791052b36a5858c363b501de62f", "url": "https://github.com/metasfresh/metasfresh/commit/fa4ef525bd48e791052b36a5858c363b501de62f", "message": "Refactoring + cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "7fd38df733fb062d8cb5fbb1716c0b29eb0d94ee", "url": "https://github.com/metasfresh/metasfresh/commit/7fd38df733fb062d8cb5fbb1716c0b29eb0d94ee", "message": "Fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "ab14c96d43882f0bdc4c5b9b5dacf17241cf9870", "url": "https://github.com/metasfresh/metasfresh/commit/ab14c96d43882f0bdc4c5b9b5dacf17241cf9870", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "fcb9c9b4e2b3310fb5deac836cd0ff5c1edb580c", "url": "https://github.com/metasfresh/metasfresh/commit/fcb9c9b4e2b3310fb5deac836cd0ff5c1edb580c", "message": "Set BBD to HU\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "9aec31c901e1e80cc16f4005d9d1808a94ace95e", "url": "https://github.com/metasfresh/metasfresh/commit/9aec31c901e1e80cc16f4005d9d1808a94ace95e", "message": "Set LotNr attribute to HU\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "100e6d8dd0e849d770bf8b396c347edf39e713da", "url": "https://github.com/metasfresh/metasfresh/commit/100e6d8dd0e849d770bf8b396c347edf39e713da", "message": "Indentation\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:39Z", "type": "commit"}, {"oid": "beb64c781bf46e4c340ff4be2520c8a297175dfa", "url": "https://github.com/metasfresh/metasfresh/commit/beb64c781bf46e4c340ff4be2520c8a297175dfa", "message": "Add 2 sysconfigs for automatically setting BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "6a2cfc2a57a66fbf19676f50fc824239a042b715", "url": "https://github.com/metasfresh/metasfresh/commit/6a2cfc2a57a66fbf19676f50fc824239a042b715", "message": "Receiving flow: add functions for automatically setting BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "982e961bab1a147ab357cd8ca2fffb5b6a754a9b", "url": "https://github.com/metasfresh/metasfresh/commit/982e961bab1a147ab357cd8ca2fffb5b6a754a9b", "message": "Receiving flow: set BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "e2490193ac9d5d4a9639f05e142f7744de49d53e", "url": "https://github.com/metasfresh/metasfresh/commit/e2490193ac9d5d4a9639f05e142f7744de49d53e", "message": "Manufacturing flow: set BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "42d22b2497187e913c4156bf77526fdd1c84e414", "url": "https://github.com/metasfresh/metasfresh/commit/42d22b2497187e913c4156bf77526fdd1c84e414", "message": "Bugfix\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "e47cf87d024503305144b8a1f53ea90a6e130769", "url": "https://github.com/metasfresh/metasfresh/commit/e47cf87d024503305144b8a1f53ea90a6e130769", "message": "Add sysconfigs\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "url": "https://github.com/metasfresh/metasfresh/commit/ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "message": "Fixes after \ud83c\udf52 / copy\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "commit"}, {"oid": "ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "url": "https://github.com/metasfresh/metasfresh/commit/ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "message": "Fixes after \ud83c\udf52 / copy\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:09:40Z", "type": "forcePushed"}, {"oid": "b38883b8533a36ef8da74882c4dad6147907cc21", "url": "https://github.com/metasfresh/metasfresh/commit/b38883b8533a36ef8da74882c4dad6147907cc21", "message": "Cleanup and refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/10022", "committedDate": "2020-10-01T07:38:00Z", "type": "commit"}]}