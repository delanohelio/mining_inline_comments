{"pr_number": 6953, "pr_title": "Gh6945 2 prefer delivery days for any partner but closer to the promised date.", "pr_createdAt": "2020-07-02T16:35:59Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6953", "timeline": [{"oid": "92ee2c611662f8e4751dfb5d0f1a13f379d37b6d", "url": "https://github.com/metasfresh/metasfresh/commit/92ee2c611662f8e4751dfb5d0f1a13f379d37b6d", "message": "#6945 tour in order:  improvements\n\nhttps://github.com/metasfresh/metasfresh/issues/6945", "committedDate": "2020-07-02T10:19:41Z", "type": "commit"}, {"oid": "6bad1e5a4e12544127183d33d4473aba4daad442", "url": "https://github.com/metasfresh/metasfresh/commit/6bad1e5a4e12544127183d33d4473aba4daad442", "message": "#6945 OrgId in phonecall line and schedule\n\nhttps://github.com/metasfresh/metasfresh/issues/6945", "committedDate": "2020-07-02T11:39:31Z", "type": "commit"}, {"oid": "984ef314de540245d145572a02839aa60308a1cc", "url": "https://github.com/metasfresh/metasfresh/commit/984ef314de540245d145572a02839aa60308a1cc", "message": "#6945 make sure the timezone is the one from the schedule's org\n\nhttps://github.com/metasfresh/metasfresh/issues/6945", "committedDate": "2020-07-02T11:40:36Z", "type": "commit"}, {"oid": "0500039fff3a1b4145bb1d5392aa1c11fa9f6585", "url": "https://github.com/metasfresh/metasfresh/commit/0500039fff3a1b4145bb1d5392aa1c11fa9f6585", "message": "#6945 prefer delivery days with no specifica partner but closer to the promised date.\n\nhttps://github.com/metasfresh/metasfresh/issues/6945", "committedDate": "2020-07-02T16:35:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDI1OA==", "url": "https://github.com/metasfresh/metasfresh/pull/6953#discussion_r449184258", "bodyText": "what if params.getBPartnerLocationId() is null?", "author": "teosarca", "createdAt": "2020-07-02T18:00:07Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/api/impl/DeliveryDayDAO.java", "diffHunk": "@@ -74,7 +74,7 @@\n \t\t\t\t.addOnlyActiveRecordsFilter()\n \t\t\t\t//\n \t\t\t\t// for given BP & Location\n-\t\t\t\t.addInArrayFilter(I_M_DeliveryDay.COLUMNNAME_C_BPartner_ID , null, params.getBPartnerLocationId().getBpartnerId())\n+\t\t\t\t.addInArrayFilter(I_M_DeliveryDay.COLUMNNAME_C_BPartner_ID, null, params.getBPartnerLocationId().getBpartnerId())", "originalCommit": "0500039fff3a1b4145bb1d5392aa1c11fa9f6585", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0MjU1OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6953#discussion_r449442559", "bodyText": "true. Fixed", "author": "metas-rc", "createdAt": "2020-07-03T08:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDI1OA=="}], "type": "inlineReview", "revised_code": {"commit": "329014b4da7de4fec2bc595a2d808d0d31858ed1", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/api/impl/DeliveryDayDAO.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/api/impl/DeliveryDayDAO.java\nindex c5ff6d3526..0fb21553e4 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/api/impl/DeliveryDayDAO.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/api/impl/DeliveryDayDAO.java\n\n@@ -74,8 +80,8 @@ public class DeliveryDayDAO implements IDeliveryDayDAO\n \t\t\t\t.addOnlyActiveRecordsFilter()\n \t\t\t\t//\n \t\t\t\t// for given BP & Location\n-\t\t\t\t.addInArrayFilter(I_M_DeliveryDay.COLUMNNAME_C_BPartner_ID, null, params.getBPartnerLocationId().getBpartnerId())\n-\t\t\t\t.addInArrayFilter(I_M_DeliveryDay.COLUMNNAME_C_BPartner_Location_ID, null, params.getBPartnerLocationId())\n+\t\t\t\t.addInArrayFilter(I_M_DeliveryDay.COLUMNNAME_C_BPartner_ID, null, partnerId)\n+\t\t\t\t.addInArrayFilter(I_M_DeliveryDay.COLUMNNAME_C_BPartner_Location_ID, null, partnerLocationId)\n \t\t\t\t//\n \t\t\t\t// DeliveryDateTimeMax <= given DeliveryDate\n \t\t\t\t.addCompareFilter(I_M_DeliveryDay.COLUMNNAME_DeliveryDateTimeMax, Operator.LESS_OR_EQUAL, params.getDeliveryDate())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTA3OA==", "url": "https://github.com/metasfresh/metasfresh/pull/6953#discussion_r449185078", "bodyText": "make it private", "author": "teosarca", "createdAt": "2020-07-02T18:01:43Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/model/validator/C_Order.java", "diffHunk": "@@ -44,6 +43,8 @@\n @Interceptor(I_C_Order.class)\n public class C_Order\n {\n+\tfinal IOrderDeliveryDayBL orderDeliveryDayBL = Services.get(IOrderDeliveryDayBL.class);", "originalCommit": "0500039fff3a1b4145bb1d5392aa1c11fa9f6585", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "329014b4da7de4fec2bc595a2d808d0d31858ed1", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/model/validator/C_Order.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/model/validator/C_Order.java\nindex f02cb05d81..164fb52833 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/model/validator/C_Order.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/tourplanning/model/validator/C_Order.java\n\n@@ -43,7 +43,7 @@ import de.metas.util.Services;\n @Interceptor(I_C_Order.class)\n public class C_Order\n {\n-\tfinal IOrderDeliveryDayBL orderDeliveryDayBL = Services.get(IOrderDeliveryDayBL.class);\n+\tprivate final IOrderDeliveryDayBL orderDeliveryDayBL = Services.get(IOrderDeliveryDayBL.class);\n \n \t@Init\n \tpublic void setupCallouts()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTc1OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6953#discussion_r449185759", "bodyText": "what's the purpose of this test? (i.e. what it tests)\nwhat's the relation with SystemTime class?", "author": "teosarca", "createdAt": "2020-07-02T18:03:14Z", "path": "backend/de.metas.util/src/test/java/de/metas/util/time/SystemTimeTest.java", "diffHunk": "@@ -80,5 +84,23 @@ public void test_asZonedDateTimeAtStartOfDay()\n \t\tassertThat(dayTS.getSecond()).isEqualTo(0);\n \t\tassertThat(dayTS.getNano()).isEqualTo(0);\n \t}\n+\t\n+\t@Test\n+\tpublic void test_2359()", "originalCommit": "0500039fff3a1b4145bb1d5392aa1c11fa9f6585", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0NTUxNA==", "url": "https://github.com/metasfresh/metasfresh/pull/6953#discussion_r449445514", "bodyText": "As per my concept, I wanted to make sure that particular line\nfinal ZonedDateTime todayEndOfDay = SystemTime.asLocalDate().atTime(LocalTime.MAX).atZone(SystemTime.zoneId());\nis retrieving the date with hour 23:59.\nTrue, it doesn't actually test SystemTime. I'll just take it out. It's not such a relevant test. I suppose LocalTime.MAX won't change over time.", "author": "metas-rc", "createdAt": "2020-07-03T08:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "329014b4da7de4fec2bc595a2d808d0d31858ed1", "chunk": "diff --git a/backend/de.metas.util/src/test/java/de/metas/util/time/SystemTimeTest.java b/backend/de.metas.util/src/test/java/de/metas/util/time/SystemTimeTest.java\nindex 7bb013be8a..385390ead3 100644\n--- a/backend/de.metas.util/src/test/java/de/metas/util/time/SystemTimeTest.java\n+++ b/backend/de.metas.util/src/test/java/de/metas/util/time/SystemTimeTest.java\n\n@@ -84,23 +83,5 @@ public class SystemTimeTest\n \t\tassertThat(dayTS.getSecond()).isEqualTo(0);\n \t\tassertThat(dayTS.getNano()).isEqualTo(0);\n \t}\n-\t\n-\t@Test\n-\tpublic void test_2359()\n-\t{\n-\t\tSystemTime.setTimeSource(\n-\t\t\t\tFixedTimeSource.ofZonedDateTime(LocalDate.of(2020, Month.JULY, 1)\n-\t\t\t\t\t\t.atTime(LocalTime.of(18, 12))\n-\t\t\t\t\t\t.atZone(ZoneId.of(\"UTC+2\"))));\n-\t\t\n-\t\tfinal ZonedDateTime todayEndOfDay = SystemTime.asLocalDate().atTime(LocalTime.MAX).atZone(SystemTime.zoneId());\n-\t\t\n-\t\tassertThat(todayEndOfDay.getYear()).isEqualTo(2020);\n-\t\tassertThat(todayEndOfDay.getMonth()).isEqualTo(Month.JULY);\n-\t\tassertThat(todayEndOfDay.getDayOfMonth()).isEqualTo(1);\n-\t\tassertThat(todayEndOfDay.getHour()).isEqualTo(23);\n-\t\tassertThat(todayEndOfDay.getMinute()).isEqualTo(59);\n-\t\tassertThat(todayEndOfDay.getSecond()).isEqualTo(59);\n-\t}\n \n }\n"}}, {"oid": "329014b4da7de4fec2bc595a2d808d0d31858ed1", "url": "https://github.com/metasfresh/metasfresh/commit/329014b4da7de4fec2bc595a2d808d0d31858ed1", "message": "#6945 repairments and cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/6945", "committedDate": "2020-07-03T08:19:22Z", "type": "commit"}, {"oid": "f4fa94f53a900db67f73ac4961ff815f841991ef", "url": "https://github.com/metasfresh/metasfresh/commit/f4fa94f53a900db67f73ac4961ff815f841991ef", "message": "Merge branch 'invisible_croissant_uat' into gh6945_2", "committedDate": "2020-07-03T11:39:45Z", "type": "commit"}]}