{"pr_number": 10331, "pr_title": "Propagate the salespartner-ID to the C_Order", "pr_createdAt": "2020-11-30T09:47:15Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10331", "timeline": [{"oid": "fa5bd93a9d4bc45feb3edd5767c68909bcac71b3", "url": "https://github.com/metasfresh/metasfresh/commit/fa5bd93a9d4bc45feb3edd5767c68909bcac71b3", "message": "Propagate the salespartner-ID to the C_Order\n\n#10330", "committedDate": "2020-11-30T09:44:06Z", "type": "commit"}, {"oid": "7fc4543feaacaed8139d843d9cf6b459ff84aebd", "url": "https://github.com/metasfresh/metasfresh/commit/7fc4543feaacaed8139d843d9cf6b459ff84aebd", "message": "found and hopefully fixed the actual problem\n\n#10330", "committedDate": "2020-11-30T13:12:57Z", "type": "commit"}, {"oid": "cd52ff8e2fb119914eb2523c85a9f8a3fb99a08c", "url": "https://github.com/metasfresh/metasfresh/commit/cd52ff8e2fb119914eb2523c85a9f8a3fb99a08c", "message": "attempt to update master data as well\n\n#10330", "committedDate": "2020-11-30T13:58:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMTMzMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10331#discussion_r532801331", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// then don't override the sales partner from the BPartners' mater data, but assume that the sales partner shall remain the way it is.\n          \n          \n            \n            \t\t// then don't override the sales-partner-id from the BPartners' mater data, but assume that the sales-partner-id shall remain the way it was set on the new record.\n          \n          \n            \n            \t\t// This implies that the master data might be updated on thid C_Order's after-new modelinterceptor method", "author": "metas-ts", "createdAt": "2020-11-30T18:15:00Z", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java", "diffHunk": "@@ -62,8 +63,21 @@ public C_Order(\n \t\tServices.get(IProgramaticCalloutProvider.class).registerAnnotatedCallout(this);\n \t}\n \n+\t@ModelChange(\n+\t\t\ttimings = { ModelValidator.TYPE_BEFORE_NEW, ModelValidator.TYPE_BEFORE_CHANGE },\n+\t\t\tifColumnsChanged = { I_C_Order.COLUMNNAME_C_BPartner_ID, I_C_Order.COLUMNNAME_Bill_BPartner_ID })\n+\tpublic void updateSalesPartnerFromCustomer(@NonNull final I_C_Order orderRecord, @NonNull final ModelChangeType type)\n+\t{\n+\t\t// if on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,\n+\t\t// then don't override the sales partner from the BPartners' mater data, but assume that the sales partner shall remain the way it is.", "originalCommit": "cd52ff8e2fb119914eb2523c85a9f8a3fb99a08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c99c864fba852476d2f24484d838ba16516410eb", "chunk": "diff --git a/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java b/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java\nindex 7f076e30d8..33a571dccf 100644\n--- a/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java\n+++ b/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java\n\n@@ -68,8 +68,9 @@ public class C_Order\n \t\t\tifColumnsChanged = { I_C_Order.COLUMNNAME_C_BPartner_ID, I_C_Order.COLUMNNAME_Bill_BPartner_ID })\n \tpublic void updateSalesPartnerFromCustomer(@NonNull final I_C_Order orderRecord, @NonNull final ModelChangeType type)\n \t{\n-\t\t// if on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,\n-\t\t// then don't override the sales partner from the BPartners' mater data, but assume that the sales partner shall remain the way it is.\n+\t\t// If on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,\n+\t\t// then don't override the sales-partner-id from the BPartners' mater data, but assume that the sales-partner-id shall remain the way it was set on the new record.\n+\t\t// This implies that the master data might be updated on thid C_Order's after-new modelinterceptor method\n \t\tfinal boolean currentPartnerCodeShallPrevail = type.isNew() && Check.isNotBlank(orderRecord.getSalesPartnerCode());\n \t\tif (!currentPartnerCodeShallPrevail)\n \t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMTQyNg==", "url": "https://github.com/metasfresh/metasfresh/pull/10331#discussion_r532801426", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// if on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,\n          \n          \n            \n            \t\t// If on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,", "author": "metas-ts", "createdAt": "2020-11-30T18:15:08Z", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java", "diffHunk": "@@ -62,8 +63,21 @@ public C_Order(\n \t\tServices.get(IProgramaticCalloutProvider.class).registerAnnotatedCallout(this);\n \t}\n \n+\t@ModelChange(\n+\t\t\ttimings = { ModelValidator.TYPE_BEFORE_NEW, ModelValidator.TYPE_BEFORE_CHANGE },\n+\t\t\tifColumnsChanged = { I_C_Order.COLUMNNAME_C_BPartner_ID, I_C_Order.COLUMNNAME_Bill_BPartner_ID })\n+\tpublic void updateSalesPartnerFromCustomer(@NonNull final I_C_Order orderRecord, @NonNull final ModelChangeType type)\n+\t{\n+\t\t// if on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,", "originalCommit": "cd52ff8e2fb119914eb2523c85a9f8a3fb99a08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c99c864fba852476d2f24484d838ba16516410eb", "chunk": "diff --git a/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java b/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java\nindex 7f076e30d8..33a571dccf 100644\n--- a/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java\n+++ b/backend/de.metas.contracts/src/main/java/de/metas/contracts/commission/salesrep/interceptor/C_Order.java\n\n@@ -68,8 +68,9 @@ public class C_Order\n \t\t\tifColumnsChanged = { I_C_Order.COLUMNNAME_C_BPartner_ID, I_C_Order.COLUMNNAME_Bill_BPartner_ID })\n \tpublic void updateSalesPartnerFromCustomer(@NonNull final I_C_Order orderRecord, @NonNull final ModelChangeType type)\n \t{\n-\t\t// if on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,\n-\t\t// then don't override the sales partner from the BPartners' mater data, but assume that the sales partner shall remain the way it is.\n+\t\t// If on a new C_Order record both SalesPartnerCode and the BPartner-IDs were set at the same time,\n+\t\t// then don't override the sales-partner-id from the BPartners' mater data, but assume that the sales-partner-id shall remain the way it was set on the new record.\n+\t\t// This implies that the master data might be updated on thid C_Order's after-new modelinterceptor method\n \t\tfinal boolean currentPartnerCodeShallPrevail = type.isNew() && Check.isNotBlank(orderRecord.getSalesPartnerCode());\n \t\tif (!currentPartnerCodeShallPrevail)\n \t\t{\n"}}, {"oid": "c99c864fba852476d2f24484d838ba16516410eb", "url": "https://github.com/metasfresh/metasfresh/commit/c99c864fba852476d2f24484d838ba16516410eb", "message": "Apply suggestions from code review\r\n\r\n#10330", "committedDate": "2020-11-30T18:16:11Z", "type": "commit"}]}