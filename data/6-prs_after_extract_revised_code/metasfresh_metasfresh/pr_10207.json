{"pr_number": 10207, "pr_title": "async/bounce cache invalidation and websocket events", "pr_createdAt": "2020-11-10T20:08:27Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10207", "timeline": [{"oid": "33d5dc90a38b55faaebc8234f9dbdc78c099a173", "url": "https://github.com/metasfresh/metasfresh/commit/33d5dc90a38b55faaebc8234f9dbdc78c099a173", "message": "cleanup", "committedDate": "2020-11-10T20:02:20Z", "type": "commit"}, {"oid": "05de1253da1377fabf61bd8d98495edb96dd69b1", "url": "https://github.com/metasfresh/metasfresh/commit/05de1253da1377fabf61bd8d98495edb96dd69b1", "message": "minor", "committedDate": "2020-11-10T20:02:37Z", "type": "commit"}, {"oid": "c6bd7f5f22634a81961101de104e08331eb8bb2f", "url": "https://github.com/metasfresh/metasfresh/commit/c6bd7f5f22634a81961101de104e08331eb8bb2f", "message": "intoduce and use debouncer", "committedDate": "2020-11-10T20:07:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNTQyMw==", "url": "https://github.com/metasfresh/metasfresh/pull/10207#discussion_r521125423", "bodyText": "Imho we shouldn't drop this method alltogether..if we have getXXXValue() methods for a certain type, i think we should have them for all ConfigurationLevels", "author": "metas-ts", "createdAt": "2020-11-11T05:43:15Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java-legacy/org/compiere/model/MSysConfig.java", "diffHunk": "@@ -399,74 +241,19 @@ public static int getIntValue(String Name, int defaultValue, int AD_Client_ID, i\n \t\t{\n \t\t\treturn Integer.parseInt(s);\n \t\t}\n-\t\tcatch (NumberFormatException e)\n+\t\tcatch (final NumberFormatException e)\n \t\t{\n \t\t\ts_log.error(\"getIntValue (\" + Name + \") = \" + s, e);\n \t\t}\n \t\treturn defaultValue;\n \t}\n \n-\t/**\n-\t * Get system configuration property of type double\n-\t *\n-\t * @param Name\n-\t * @param defaultValue\n-\t * @param Client ID\n-\t * @param Organization ID\n-\t * @return double\n-\t */\n-\tpublic static double getDoubleValue(String Name, double defaultValue, int AD_Client_ID, int AD_Org_ID)\n-\t{\n-\t\tString s = getValue(Name, AD_Client_ID, AD_Org_ID);\n-\t\tif (s == null || s.length() == 0)\n-\t\t\treturn defaultValue;\n-\t\t//\n-\t\ttry\n-\t\t{\n-\t\t\treturn Double.parseDouble(s);\n-\t\t}\n-\t\tcatch (NumberFormatException e)\n-\t\t{\n-\t\t\ts_log.error(\"getDoubleValue (\" + Name + \") = \" + s, e);\n-\t\t}\n-\t\treturn defaultValue;\n-\t}\n-\n-\t/**\n-\t * Get system configuration property of type boolean\n-\t *\n-\t * @param Name\n-\t * @param defaultValue\n-\t * @param Client ID\n-\t * @param Organization ID\n-\t * @return boolean\n-\t */\n-\tpublic static boolean getBooleanValue(String Name, boolean defaultValue, int AD_Client_ID, int AD_Org_ID)", "originalCommit": "c6bd7f5f22634a81961101de104e08331eb8bb2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5NDgwMw==", "url": "https://github.com/metasfresh/metasfresh/pull/10207#discussion_r521194803", "bodyText": "basically, the user shall never use MSysConfig. They shall use ISysConfigBL/ISysConfigDAO.\nI started to clean it up to see how many dependencies we still have.", "author": "teosarca", "createdAt": "2020-11-11T08:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNTQyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNzgyNQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10207#discussion_r521127825", "bodyText": "pls move it up", "author": "metas-ts", "createdAt": "2020-11-11T05:51:46Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/view/event/JSONViewChanges.java", "diffHunk": "@@ -85,33 +67,29 @@ else if (changedRowIds.isEmpty())\n \t\t\tthis.changedIds = changedRowIds.toJsonSet();\n \t\t}\n \t\theaderPropertiesChanged = changes.isHeaderPropertiesChanged() ? true : null;\n-\t}\n \n-\t@Override\n-\tpublic String toString()\n-\t{\n-\t\treturn MoreObjects.toStringHelper(this)\n-\t\t\t\t.omitNullValues()\n-\t\t\t\t.add(\"viewId\", viewId)\n-\t\t\t\t.add(\"windowId\", windowId)\n-\t\t\t\t.add(\"fullyChanged\", fullyChanged)\n-\t\t\t\t.add(\"headerPropertiesChanged\", headerPropertiesChanged)\n-\t\t\t\t.add(\"changedIds\", changedIds)\n-\t\t\t\t.toString();\n-\t}\n-\n-\tpublic String getViewId()\n-\t{\n-\t\treturn viewId;\n-\t}\n-\n-\tpublic WindowId getWindowId()\n-\t{\n-\t\treturn windowId;\n-\t}\n-\n-\tpublic Boolean getFullyChanged()\n-\t{\n-\t\treturn fullyChanged;\n+\t\twebsocketEndpoint = WebsocketTopicNames.buildViewNotificationsTopicName(viewId);\n \t}\n }\n+\n+/*\n+ * #%L", "originalCommit": "c6bd7f5f22634a81961101de104e08331eb8bb2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0MTg4Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/10207#discussion_r521241882", "bodyText": "done", "author": "teosarca", "createdAt": "2020-11-11T09:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNzgyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "bb60a6adddbf22da2ee7d88e4ecaf4ae9356d844", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/view/event/JSONViewChanges.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/view/event/JSONViewChanges.java\nindex 4579896d2e..5a14675228 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/view/event/JSONViewChanges.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/view/event/JSONViewChanges.java\n\n@@ -72,24 +94,3 @@ public class JSONViewChanges implements WebsocketEndpointAware\n \t}\n }\n \n-/*\n- * #%L\n- * metasfresh-webui-api\n- * %%\n- * Copyright (C) 2017 metas GmbH\n- * %%\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as\n- * published by the Free Software Foundation, either version 2 of the\n- * License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public\n- * License along with this program. If not, see\n- * <http://www.gnu.org/licenses/gpl-2.0.html>.\n- * #L%\n- */\n"}}, {"oid": "bb60a6adddbf22da2ee7d88e4ecaf4ae9356d844", "url": "https://github.com/metasfresh/metasfresh/commit/bb60a6adddbf22da2ee7d88e4ecaf4ae9356d844", "message": "added copyright; minor cleanup", "committedDate": "2020-11-11T09:38:03Z", "type": "commit"}]}