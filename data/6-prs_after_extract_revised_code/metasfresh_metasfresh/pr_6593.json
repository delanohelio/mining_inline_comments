{"pr_number": 6593, "pr_title": "Gh6566 2 customer retention: repair logic, refactoring, test", "pr_createdAt": "2020-05-06T12:30:00Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6593", "timeline": [{"oid": "75ba36f924acc468419664208fa7b0a992cbe234", "url": "https://github.com/metasfresh/metasfresh/commit/75ba36f924acc468419664208fa7b0a992cbe234", "message": "#6566 customer retention logic refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-05T12:44:40Z", "type": "commit"}, {"oid": "930f7e8853ddccaf1468de809e406a4220582adb", "url": "https://github.com/metasfresh/metasfresh/commit/930f7e8853ddccaf1468de809e406a4220582adb", "message": "#6566 improve logic, cleanup, test\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-06T12:07:33Z", "type": "commit"}, {"oid": "94133edcc936aa7779966a165806d47d3c9b8137", "url": "https://github.com/metasfresh/metasfresh/commit/94133edcc936aa7779966a165806d47d3c9b8137", "message": "#6566 Repair customer retentino logic, refactoring, test\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-06T12:29:14Z", "type": "commit"}, {"oid": "b5a3e1b7bec62b31e85af9075b7b58177d956e13", "url": "https://github.com/metasfresh/metasfresh/commit/b5a3e1b7bec62b31e85af9075b7b58177d956e13", "message": "Merge branch 'master' into gh6566_2", "committedDate": "2020-05-06T12:30:22Z", "type": "commit"}, {"oid": "22bfa134f063ec463408db546c77eb53922592c4", "url": "https://github.com/metasfresh/metasfresh/commit/22bfa134f063ec463408db546c77eb53922592c4", "message": "#6566 merge the 2 processes in only 1 process\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-06T14:54:42Z", "type": "commit"}, {"oid": "3f8a6936272e81cfcaa3cbdd550b731cc8d4c6cd", "url": "https://github.com/metasfresh/metasfresh/commit/3f8a6936272e81cfcaa3cbdd550b731cc8d4c6cd", "message": "Revert \"#6566 merge the 2 processes in only 1 process\"\n\nThis reverts commit 22bfa134f063ec463408db546c77eb53922592c4.", "committedDate": "2020-05-06T14:56:37Z", "type": "commit"}, {"oid": "651e95ee38c33dcd5b840652ca4d80ab6ec33198", "url": "https://github.com/metasfresh/metasfresh/commit/651e95ee38c33dcd5b840652ca4d80ab6ec33198", "message": "#6566 merge the 2 processes into a a createUpdate process\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-06T14:57:32Z", "type": "commit"}, {"oid": "271ef62473ee98d8fdcccce8ff8dc37b6cafcf0f", "url": "https://github.com/metasfresh/metasfresh/commit/271ef62473ee98d8fdcccce8ff8dc37b6cafcf0f", "message": "Merge branch 'gh6566_2' of https://github.com/metasfresh/metasfresh into gh6566_2", "committedDate": "2020-05-06T14:58:00Z", "type": "commit"}, {"oid": "3d9e33ef2419cae7acf963eea56e946ee5938752", "url": "https://github.com/metasfresh/metasfresh/commit/3d9e33ef2419cae7acf963eea56e946ee5938752", "message": "#6566 repair customerRetentionId repoIdAware\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-06T15:49:39Z", "type": "commit"}, {"oid": "dfc2900ec42e52da88c383e73e29dae208535c4f", "url": "https://github.com/metasfresh/metasfresh/commit/dfc2900ec42e52da88c383e73e29dae208535c4f", "message": "fix typo in method name\n\n#6566", "committedDate": "2020-05-07T09:47:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4MDM2NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6593#discussion_r421380365", "bodyText": "pls add @NonNull at least to public methods like this one", "author": "metas-ts", "createdAt": "2020-05-07T09:49:21Z", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java", "diffHunk": "@@ -64,13 +68,18 @@\n \tprivate final IInvoiceDAO invoiceDAO = Services.get(IInvoiceDAO.class);\n \tprivate final IContractsDAO contractsDAO = Services.get(IContractsDAO.class);\n \tprivate final ContractInvoiceService contractInvoiceService;\n-\t\n+\n+\tpublic I_C_Customer_Retention getById(final CustomerRetentionId customerRetentionId)", "originalCommit": "dfc2900ec42e52da88c383e73e29dae208535c4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTQxNg==", "url": "https://github.com/metasfresh/metasfresh/pull/6593#discussion_r421409416", "bodyText": "Done.", "author": "metas-rc", "createdAt": "2020-05-07T10:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4MDM2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b0f2f9e70d5749491b31e6446d2a07b9b5ebe0b7", "chunk": "diff --git a/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java b/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java\nindex 33025c33f7..5ffe679a2e 100644\n--- a/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java\n+++ b/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java\n\n@@ -69,7 +69,7 @@ public class CustomerRetentionRepository\n \tprivate final IContractsDAO contractsDAO = Services.get(IContractsDAO.class);\n \tprivate final ContractInvoiceService contractInvoiceService;\n \n-\tpublic I_C_Customer_Retention getById(final CustomerRetentionId customerRetentionId)\n+\tpublic I_C_Customer_Retention getById(@NonNull final CustomerRetentionId customerRetentionId)\n \t{\n \t\treturn load(customerRetentionId.getRepoId(), I_C_Customer_Retention.class);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4MTA4Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/6593#discussion_r421381086", "bodyText": "please add a comment or better an Check.assumeNotNull here to make it explicit the you made sure elsewhere this won't be null\nPS: if you need to rely on something outside this class, such as the model interceptors, i suggest to invoke that getCreate createUpdate method instead..", "author": "metas-ts", "createdAt": "2020-05-07T09:50:37Z", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java", "diffHunk": "@@ -80,134 +89,111 @@ public I_C_Customer_Retention createNewCustomerRetention(@NonNull final BPartner\n \n \t\tsave(customerRetention);\n \n-\t\treturn customerRetention;\n+\t\treturn CustomerRetentionId.ofRepoId(customerRetention.getC_Customer_Retention_ID());\n \t}\n \n-\tpublic void setNewCustomer(@NonNull final BPartnerId bpartnerId)\n+\t@VisibleForTesting\n+\tvoid setNewCustomer(@NonNull final CustomerRetentionId customerRetentionId)\n \t{\n-\t\tI_C_Customer_Retention customerRetention = retrieveCustomerRetention(bpartnerId);\n-\n-\t\tif (customerRetention == null)\n-\t\t{\n-\t\t\tcustomerRetention = createNewCustomerRetention(bpartnerId);\n-\t\t}\n+\t\tfinal I_C_Customer_Retention customerRetention = getById(customerRetentionId);\n ", "originalCommit": "dfc2900ec42e52da88c383e73e29dae208535c4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTY0MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6593#discussion_r421409641", "bodyText": "Check.assumeNotNull done.", "author": "metas-rc", "createdAt": "2020-05-07T10:42:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4MTA4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b0f2f9e70d5749491b31e6446d2a07b9b5ebe0b7", "chunk": "diff --git a/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java b/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java\nindex 33025c33f7..5ffe679a2e 100644\n--- a/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java\n+++ b/backend/de.metas.contracts/src/main/java/de/metas/contracts/impl/CustomerRetentionRepository.java\n\n@@ -97,6 +97,7 @@ public class CustomerRetentionRepository\n \t{\n \t\tfinal I_C_Customer_Retention customerRetention = getById(customerRetentionId);\n \n+\t\tCheck.assumeNotNull(customerRetention, \"Customer retention must not be null\");\n \t\tcustomerRetention.setCustomerRetention(X_C_Customer_Retention.CUSTOMERRETENTION_Neukunde);\n \t\tsave(customerRetention);\n \t}\n"}}, {"oid": "e98617ae6782f8d139191b190d117e3973016047", "url": "https://github.com/metasfresh/metasfresh/commit/e98617ae6782f8d139191b190d117e3973016047", "message": "Merge branch 'master' into gh6566_2", "committedDate": "2020-05-07T10:06:02Z", "type": "commit"}, {"oid": "b0f2f9e70d5749491b31e6446d2a07b9b5ebe0b7", "url": "https://github.com/metasfresh/metasfresh/commit/b0f2f9e70d5749491b31e6446d2a07b9b5ebe0b7", "message": "#6566 nullchecks\n\nhttps://github.com/metasfresh/metasfresh/issues/6566", "committedDate": "2020-05-07T10:43:02Z", "type": "commit"}, {"oid": "41482e2e72fdb770890c73e033d208fdf7cbd4ac", "url": "https://github.com/metasfresh/metasfresh/commit/41482e2e72fdb770890c73e033d208fdf7cbd4ac", "message": "Merge branch 'master' into gh6566_2", "committedDate": "2020-05-07T10:44:02Z", "type": "commit"}]}