{"pr_number": 6989, "pr_title": "Automatically mark received HUs carrying BOM components as source HUs.", "pr_createdAt": "2020-07-09T10:26:57Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6989", "timeline": [{"oid": "3873e202c5da929ca615409f12ee1db2835b4de5", "url": "https://github.com/metasfresh/metasfresh/commit/3873e202c5da929ca615409f12ee1db2835b4de5", "message": "Automatically mark received HUs carrying BOM components as source HUs.\nhttps://github.com/metasfresh/metasfresh/issues/6987", "committedDate": "2020-07-09T10:01:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzOTk5NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6989#discussion_r452139995", "bodyText": "tbh the \"static\" makes be a bit nervous..", "author": "metas-ts", "createdAt": "2020-07-09T11:08:21Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/inout/impl/ReceiptInOutLineHUAssignmentListener.java", "diffHunk": "@@ -54,6 +58,7 @@\n public final class ReceiptInOutLineHUAssignmentListener extends HUAssignmentListenerAdapter\n {\n \tpublic static final transient ReceiptInOutLineHUAssignmentListener instance = new ReceiptInOutLineHUAssignmentListener();\n+\tprivate static final SourceHUsService sourceHuService = SpringContextHolder.instance.getBean(SourceHUsService.class);", "originalCommit": "3873e202c5da929ca615409f12ee1db2835b4de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0NDk3NA==", "url": "https://github.com/metasfresh/metasfresh/pull/6989#discussion_r452144974", "bodyText": "yeah, right.. dropping it", "author": "pvpurcarcosmin", "createdAt": "2020-07-09T11:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzOTk5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "3abce2c56e94534138502308a26470e267caea16", "chunk": "diff --git a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/inout/impl/ReceiptInOutLineHUAssignmentListener.java b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/inout/impl/ReceiptInOutLineHUAssignmentListener.java\nindex fd53cb1b74..1cd6e42d41 100644\n--- a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/inout/impl/ReceiptInOutLineHUAssignmentListener.java\n+++ b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/inout/impl/ReceiptInOutLineHUAssignmentListener.java\n\n@@ -58,7 +57,7 @@ import java.util.Properties;\n public final class ReceiptInOutLineHUAssignmentListener extends HUAssignmentListenerAdapter\n {\n \tpublic static final transient ReceiptInOutLineHUAssignmentListener instance = new ReceiptInOutLineHUAssignmentListener();\n-\tprivate static final SourceHUsService sourceHuService = SpringContextHolder.instance.getBean(SourceHUsService.class);\n+\tprivate final SourceHUsService sourceHuService = SourceHUsService.get();\n \n \tprivate ReceiptInOutLineHUAssignmentListener()\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0MjU1Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/6989#discussion_r452142557", "bodyText": "I think this should be clearer.\nIf nothing else, pls add some javadoc here; or improve the method name and e.g. extract product.isBOM() into a variable notAComponent\nThink of a dev wondering why tf it doesn't want to mark a bom-product.", "author": "metas-ts", "createdAt": "2020-07-09T11:14:11Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/sourcehu/SourceHUsService.java", "diffHunk": "@@ -210,6 +214,25 @@ public boolean isSourceHu(final HuId huId)\n \t\treturn Services.get(ISourceHuDAO.class).isSourceHu(huId);\n \t}\n \n+\tpublic void addSourceHUMarkerIfRequired(@NonNull final HuId huId, @NonNull final ProductId productId, @NonNull final WarehouseId warehouseId)", "originalCommit": "3873e202c5da929ca615409f12ee1db2835b4de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0MzIwMw==", "url": "https://github.com/metasfresh/metasfresh/pull/6989#discussion_r452143203", "bodyText": "PS: also check out the failing test at https://jenkins.metasfresh.com/job/metasfresh/job/gh6987/1/testReport/", "author": "metas-ts", "createdAt": "2020-07-09T11:15:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0MjU1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3abce2c56e94534138502308a26470e267caea16", "chunk": "diff --git a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/sourcehu/SourceHUsService.java b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/sourcehu/SourceHUsService.java\nindex 1ae68dd286..3d01ecb4f2 100644\n--- a/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/sourcehu/SourceHUsService.java\n+++ b/backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/sourcehu/SourceHUsService.java\n\n@@ -214,7 +214,15 @@ public class SourceHUsService\n \t\treturn Services.get(ISourceHuDAO.class).isSourceHu(huId);\n \t}\n \n-\tpublic void addSourceHUMarkerIfRequired(@NonNull final HuId huId, @NonNull final ProductId productId, @NonNull final WarehouseId warehouseId)\n+\t/**\n+\t *  Creates a M_Source_HU record for the given HU, if it caries component products and the target warehouse has\n+\t *  the org.compiere.model.I_M_Warehouse#isReceiveAsSourceHU() flag.\n+\t *\n+\t * @param huId\t\t\ttarget HU id\n+\t * @param productId\t\ttarget product Id\n+\t * @param warehouseId   target warehouse ID\n+\t */\n+\tpublic void addSourceHUMarkerIfCaringComponents(@NonNull final HuId huId, @NonNull final ProductId productId, @NonNull final WarehouseId warehouseId)\n \t{\n \t\tfinal I_M_Warehouse warehouse = warehousesRepo.getById(warehouseId);\n \n"}}, {"oid": "3abce2c56e94534138502308a26470e267caea16", "url": "https://github.com/metasfresh/metasfresh/commit/3abce2c56e94534138502308a26470e267caea16", "message": "suggested changes\nhttps://github.com/metasfresh/metasfresh/issues/6987", "committedDate": "2020-07-09T11:24:44Z", "type": "commit"}, {"oid": "6cf8cad3e0f645f31367701a842b5ee64e4669f3", "url": "https://github.com/metasfresh/metasfresh/commit/6cf8cad3e0f645f31367701a842b5ee64e4669f3", "message": "set warehouse in test\nhttps://github.com/metasfresh/metasfresh/issues/6987", "committedDate": "2020-07-09T11:30:24Z", "type": "commit"}, {"oid": "c0b8d2a3cc3c6af0c9e1f1a483300032cb00e46e", "url": "https://github.com/metasfresh/metasfresh/commit/c0b8d2a3cc3c6af0c9e1f1a483300032cb00e46e", "message": "small naming fix\nhttps://github.com/metasfresh/metasfresh/issues/6987", "committedDate": "2020-07-09T11:56:47Z", "type": "commit"}]}