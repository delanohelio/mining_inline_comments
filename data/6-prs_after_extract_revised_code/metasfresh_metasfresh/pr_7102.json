{"pr_number": 7102, "pr_title": "picking terminal details", "pr_createdAt": "2020-08-05T10:26:02Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7102", "timeline": [{"oid": "1d7a35dcdda278ed34f422b625a3e556127452eb", "url": "https://github.com/metasfresh/metasfresh/commit/1d7a35dcdda278ed34f422b625a3e556127452eb", "message": "picking terminal details\nrefs: https://github.com/metasfresh/metasfresh/issues/7101", "committedDate": "2020-08-05T10:24:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4MjQwNw==", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465682407", "bodyText": "why not moving this class to PickingSlotViewFactory and make it private?", "author": "teosarca", "createdAt": "2020-08-05T12:14:35Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java", "diffHunk": "@@ -71,4 +75,18 @@ private PickingSlotRepoQuery(\n \t\tthis.onlyNotClosedOrNotRackSystem = onlyNotClosedOrNotRackSystem != null ? onlyNotClosedOrNotRackSystem : true;\n \t\tthis.pickingSlotBarcode = pickingSlotBarcode;\n \t}\n+\n+\t@Value\n+\t@Builder\n+\tpublic static class CreatePickingSlotRepoQueryReq", "originalCommit": "1d7a35dcdda278ed34f422b625a3e556127452eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4ODAzMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465688031", "bodyText": "yeah, sure, why not", "author": "pvpurcarcosmin", "createdAt": "2020-08-05T12:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4MjQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "73d6b68efb25548619ab412053eee288d659278b", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java\nindex 2ab06f2b53..2ee7a593c5 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java\n\n@@ -75,18 +74,4 @@ public class PickingSlotRepoQuery\n \t\tthis.onlyNotClosedOrNotRackSystem = onlyNotClosedOrNotRackSystem != null ? onlyNotClosedOrNotRackSystem : true;\n \t\tthis.pickingSlotBarcode = pickingSlotBarcode;\n \t}\n-\n-\t@Value\n-\t@Builder\n-\tpublic static class CreatePickingSlotRepoQueryReq\n-\t{\n-\t\tDocumentFilterList filters;\n-\n-\t\t@NonNull\n-\t\tShipmentScheduleId currentShipmentScheduleId;\n-\n-\t\tSet<ShipmentScheduleId> allShipmentScheduleIds;\n-\n-\t\tboolean includeAllShipmentSchedules;\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4MzQ4MA==", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465683480", "bodyText": "pls document why we need to invalidate its parent view too (packageable view)?", "author": "teosarca", "createdAt": "2020-08-05T12:16:39Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java", "diffHunk": "@@ -175,14 +172,21 @@ public void closeById(@NonNull final ViewId pickingSlotViewId, @NonNull final Vi\n \t}\n \n \t@Override\n-\tpublic void invalidateView(ViewId pickingSlotViewId)\n+\tpublic void invalidateView(final ViewId pickingSlotViewId)\n \t{\n \t\tfinal PickingSlotView pickingSlotView = getOrCreatePickingSlotView(pickingSlotViewId, false/* create */);\n \t\tif (pickingSlotView == null)\n \t\t{\n \t\t\treturn;\n \t\t}\n \n+\t\tfinal PackageableView packageableView = getPackageableViewByPickingSlotViewId(pickingSlotViewId);", "originalCommit": "1d7a35dcdda278ed34f422b625a3e556127452eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "73d6b68efb25548619ab412053eee288d659278b", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java\nindex 7f4bdf880f..5fed5bfa22 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java\n\n@@ -184,6 +184,8 @@ public class PickingSlotViewsIndexStorage implements IViewsIndexStorage\n \n \t\tif (packageableView != null)\n \t\t{\n+\t\t\t//we have to invalidate all the related pickingSlotViews in order to make sure the\n+\t\t\t//changes available in UI when selecting different `packageableRows`\n \t\t\tpackageableView.invalidatePickingSlotViews();\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NTM1Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465685356", "bodyText": "i think this error message applies only for productIds.size() != 1.\nFor the other part of the OR we need a different error message.", "author": "teosarca", "createdAt": "2020-08-05T12:20:17Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/process/WEBUI_Picking_PickQtyToExistingHU.java", "diffHunk": "@@ -134,20 +130,24 @@ public Object getParameterDefaultValue(@NonNull final IProcessDefaultParameter p\n \tprotected void validatePickingToHU()\n \t{\n \t\tfinal PickingSlotRow pickingSlotRow = getSingleSelectedRow();\n-\n \t\tfinal I_M_HU hu = handlingUnitsBL.getById(pickingSlotRow.getHuId());\n \n-\t\tif (handlingUnitsBL.isVirtual(hu))\n+\t\tif (!handlingUnitsBL.isVirtual(hu))\n \t\t{\n-\t\t\tthrow new AdempiereException(msgBL.getTranslatableMsgText(MSG_WEBUI_PICKING_TO_EXISTING_CUS_NOT_ALLOWED));\n+\t\t\treturn;\n \t\t}\n \n-\t\tfinal OrderId orderIdOfThePickedHU = extractCorrespondingOrderId(pickingSlotRow.getHuId());\n-\t\tfinal OrderId orderIdOfTheCurrentSchedule = OrderId.ofRepoIdOrNull(getCurrentShipmentSchedule().getC_Order_ID());\n+\t\tfinal ImmutableSet<ProductId> productIds = handlingUnitsBL.getStorageFactory().streamHUProductStorages(ImmutableList.of(hu))\n+\t\t\t\t.map(IProductStorage::getProductId)\n+\t\t\t\t.collect(ImmutableSet.toImmutableSet());\n+\n+\t\tfinal I_M_ShipmentSchedule selectedShipmentSchedule = getCurrentShipmentSchedule();\n \n-\t\tif (!orderIdOfThePickedHU.equals(orderIdOfTheCurrentSchedule))\n+\t\tif (productIds.size() != 1 || !productIds.contains(ProductId.ofRepoId(selectedShipmentSchedule.getM_Product_ID())))\n \t\t{\n-\t\t\tthrow new AdempiereException(msgBL.getTranslatableMsgText(MSG_WEBUI_PICKING_TO_THE_SAME_HU_FOR_MULTIPLE_ORDERS_NOT_ALLOWED));\n+\t\t\tthrow new AdempiereException(\"VHUs cannot have multiple product storages!\")", "originalCommit": "1d7a35dcdda278ed34f422b625a3e556127452eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "73d6b68efb25548619ab412053eee288d659278b", "url": "https://github.com/metasfresh/metasfresh/commit/73d6b68efb25548619ab412053eee288d659278b", "message": "sugg changes\nrefs: https://github.com/metasfresh/metasfresh/issues/7101", "committedDate": "2020-08-05T12:41:57Z", "type": "commit"}, {"oid": "fd4fae09aebac12fc5f5323dce2b568bb02e0981", "url": "https://github.com/metasfresh/metasfresh/commit/fd4fae09aebac12fc5f5323dce2b568bb02e0981", "message": "test fix\nrefs: https://github.com/metasfresh/metasfresh/issues/7101", "committedDate": "2020-08-05T13:03:56Z", "type": "commit"}]}