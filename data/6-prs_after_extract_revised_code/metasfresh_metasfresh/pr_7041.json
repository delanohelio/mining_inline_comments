{"pr_number": 7041, "pr_title": "#6714 esr reconciliation + refactoring", "pr_createdAt": "2020-07-22T07:20:03Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7041", "timeline": [{"oid": "61fe3c22b61c7bb7f744638dccfbfc498ed942cc", "url": "https://github.com/metasfresh/metasfresh/commit/61fe3c22b61c7bb7f744638dccfbfc498ed942cc", "message": "#6714 esr reconciliation + refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/6714", "committedDate": "2020-07-21T15:49:36Z", "type": "commit"}, {"oid": "e0a07d72f3705589396618a7688933a96be8dbb0", "url": "https://github.com/metasfresh/metasfresh/commit/e0a07d72f3705589396618a7688933a96be8dbb0", "message": "#6714 update script ids\n\nhttps://github.com/metasfresh/metasfresh/issues/6714", "committedDate": "2020-07-22T07:26:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1OTYxOA==", "url": "https://github.com/metasfresh/metasfresh/pull/7041#discussion_r458859618", "bodyText": "could we run into multiple esrImportLines having the same C_Payment_ID? or are we ruling this out, e.g. with aunique contraint?\n(or maybe the answer is in the code above?)", "author": "metas-ts", "createdAt": "2020-07-22T15:00:51Z", "path": "backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java", "diffHunk": "@@ -1282,8 +1316,10 @@ public void linkBankStatementLinesByPaymentIds(@NonNull final Map<PaymentId, Ban\n \n \t\tfinal Set<PaymentId> paymentIds = bankStatementLineRefIdIndexByPaymentId.keySet();\n \n+\t\tfinal List<I_ESR_ImportLine> esrImportLines = esrImportDAO.retrieveLines(paymentIds);\n+\n \t\tfinal ImmutableMap<PaymentId, I_ESR_ImportLine> paySelectionLinesByPaymentId = Maps.uniqueIndex(\n-\t\t\t\tesrImportDAO.retrieveLines(paymentIds),\n+\t\t\t\tesrImportLines,\n \t\t\t\tesrImportLine -> PaymentId.ofRepoId(esrImportLine.getC_Payment_ID()));", "originalCommit": "e0a07d72f3705589396618a7688933a96be8dbb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMyNDA5OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7041#discussion_r459324099", "bodyText": "Yes, there's a unique index:\n-- DROP INDEX public.esr_importline_payment_uq;\n\nCREATE UNIQUE INDEX esr_importline_payment_uq\n  ON public.esr_importline\n  USING btree\n  (c_payment_id)\n  WHERE c_payment_id IS NOT NULL;", "author": "metas-rc", "createdAt": "2020-07-23T09:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1OTYxOA=="}], "type": "inlineReview", "revised_code": {"commit": "e8fed5d2bb664407a06610535460132ba76c37b7", "chunk": "diff --git a/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java b/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java\nindex 189934982b..7be7704a75 100644\n--- a/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java\n+++ b/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java\n\n@@ -1318,11 +1317,11 @@ public class ESRImportBL implements IESRImportBL\n \n \t\tfinal List<I_ESR_ImportLine> esrImportLines = esrImportDAO.retrieveLines(paymentIds);\n \n-\t\tfinal ImmutableMap<PaymentId, I_ESR_ImportLine> paySelectionLinesByPaymentId = Maps.uniqueIndex(\n+\t\tfinal ImmutableMap<PaymentId, I_ESR_ImportLine> esrImportLinesByPaymentId = Maps.uniqueIndex(\n \t\t\t\tesrImportLines,\n \t\t\t\tesrImportLine -> PaymentId.ofRepoId(esrImportLine.getC_Payment_ID()));\n \n-\t\tfor (final Map.Entry<PaymentId, I_ESR_ImportLine> e : paySelectionLinesByPaymentId.entrySet())\n+\t\tfor (final Map.Entry<PaymentId, I_ESR_ImportLine> e : esrImportLinesByPaymentId.entrySet())\n \t\t{\n \t\t\tfinal PaymentId paymentId = e.getKey();\n \t\t\tfinal I_ESR_ImportLine esrImportLine = e.getValue();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2MTUyNg==", "url": "https://github.com/metasfresh/metasfresh/pull/7041#discussion_r458861526", "bodyText": "i think it's cleaner if you move this method into esrImportDAO..", "author": "metas-ts", "createdAt": "2020-07-22T15:03:26Z", "path": "backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java", "diffHunk": "@@ -1294,6 +1330,46 @@ public void linkBankStatementLinesByPaymentIds(@NonNull final Map<PaymentId, Ban\n \n \t\t\tlinkESRImportLineToBankStatement(esrImportLine, bankStatementLineRefId);\n \t\t}\n+\n+\t\tfinal ImmutableSet<ESRImportId> esrImportIds = extractESRImportIds(esrImportLines);\n+\t\tupdateESRImportReconciledStatus(esrImportIds);\n+\t}\n+\n+\tprivate static ImmutableSet<ESRImportId> extractESRImportIds(@NonNull final List<I_ESR_ImportLine> esrImportLines)\n+\t{\n+\t\treturn esrImportLines.stream()\n+\t\t\t\t.map(esrImportLine -> ESRImportId.ofRepoId(esrImportLine.getESR_Import_ID()))\n+\t\t\t\t.collect(ImmutableSet.toImmutableSet());\n+\t}\n+\n+\t@VisibleForTesting\n+\tvoid updateESRImportReconciledStatus(@NonNull final Set<ESRImportId> esrImportIds)\n+\t{\n+\t\tif (esrImportIds.isEmpty())\n+\t\t{\n+\t\t\t// shall NOT happen\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal ImmutableSet<ESRImportId> notReconciledESRImportIds = Services.get(IQueryBL.class)", "originalCommit": "e0a07d72f3705589396618a7688933a96be8dbb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2NDg0Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7041#discussion_r459364847", "bodyText": "Moved", "author": "metas-rc", "createdAt": "2020-07-23T10:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2MTUyNg=="}], "type": "inlineReview", "revised_code": {"commit": "e8fed5d2bb664407a06610535460132ba76c37b7", "chunk": "diff --git a/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java b/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java\nindex 189934982b..7be7704a75 100644\n--- a/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java\n+++ b/backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java\n\n@@ -1318,11 +1317,11 @@ public class ESRImportBL implements IESRImportBL\n \n \t\tfinal List<I_ESR_ImportLine> esrImportLines = esrImportDAO.retrieveLines(paymentIds);\n \n-\t\tfinal ImmutableMap<PaymentId, I_ESR_ImportLine> paySelectionLinesByPaymentId = Maps.uniqueIndex(\n+\t\tfinal ImmutableMap<PaymentId, I_ESR_ImportLine> esrImportLinesByPaymentId = Maps.uniqueIndex(\n \t\t\t\tesrImportLines,\n \t\t\t\tesrImportLine -> PaymentId.ofRepoId(esrImportLine.getC_Payment_ID()));\n \n-\t\tfor (final Map.Entry<PaymentId, I_ESR_ImportLine> e : paySelectionLinesByPaymentId.entrySet())\n+\t\tfor (final Map.Entry<PaymentId, I_ESR_ImportLine> e : esrImportLinesByPaymentId.entrySet())\n \t\t{\n \t\t\tfinal PaymentId paymentId = e.getKey();\n \t\t\tfinal I_ESR_ImportLine esrImportLine = e.getValue();\n"}}, {"oid": "e8fed5d2bb664407a06610535460132ba76c37b7", "url": "https://github.com/metasfresh/metasfresh/commit/e8fed5d2bb664407a06610535460132ba76c37b7", "message": "#6714 refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/6714", "committedDate": "2020-07-23T10:49:44Z", "type": "commit"}]}