{"pr_number": 6397, "pr_title": "#6386 modified create purchase orders from procurement window process.", "pr_createdAt": "2020-03-25T12:35:00Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6397", "timeline": [{"oid": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9", "url": "https://github.com/metasfresh/metasfresh/commit/d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9", "message": "#6386 modified create purchase orders from procurement window process.", "committedDate": "2020-03-25T12:33:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NDAzOA==", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r397884038", "bodyText": "use BigDecimal.signum() instead", "author": "metas-ts", "createdAt": "2020-03-25T14:11:11Z", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -66,7 +64,20 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n+\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t}\n+\n+\tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n+\t{\n+\t\tList<I_PMM_PurchaseCandidate> filteredList = new ArrayList<I_PMM_PurchaseCandidate>();\n+\t\tfor (I_PMM_PurchaseCandidate candidate : candidates)\n+\t\t{\n+\t\t\tif (candidate.getQtyOrdered().compareTo(BigDecimal.ZERO) > 0)", "originalCommit": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67388d08f1535b64f29435e9ac9ecdcd8629482d", "chunk": "diff --git a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\nindex 72f28153ee..66494a1140 100644\n--- a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n+++ b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n\n@@ -64,7 +65,7 @@ public class PMM_GenerateOrders extends WorkpackageProcessorAdapter\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n \t}\n \n \tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NDEzOA==", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r397884138", "bodyText": "explicitly log the IDs of the PMM_PurchaseCandidate which you skip here\n\nuse Loggables.withLogger(logger, Level.DEBUG) for that, to make sure it's in the async-workpackage-log as well as in the actually logback-log", "author": "metas-ts", "createdAt": "2020-03-25T14:11:20Z", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -66,7 +64,20 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n+\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t}\n+\n+\tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n+\t{\n+\t\tList<I_PMM_PurchaseCandidate> filteredList = new ArrayList<I_PMM_PurchaseCandidate>();\n+\t\tfor (I_PMM_PurchaseCandidate candidate : candidates)\n+\t\t{\n+\t\t\tif (candidate.getQtyOrdered().compareTo(BigDecimal.ZERO) > 0)\n+\t\t\t{\n+\t\t\t\tfilteredList.add(candidate);\n+\t\t\t}", "originalCommit": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67388d08f1535b64f29435e9ac9ecdcd8629482d", "chunk": "diff --git a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\nindex 72f28153ee..66494a1140 100644\n--- a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n+++ b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n\n@@ -64,7 +65,7 @@ public class PMM_GenerateOrders extends WorkpackageProcessorAdapter\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n \t}\n \n \tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NTMwNA==", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r397885304", "bodyText": "Already when enqeuting this, make sure to only add PMM_PurchaseCandidates that have a quantity.\nit's still possible theat they are zero-ed menwhile, but for that, there will be logging, see below", "author": "metas-ts", "createdAt": "2020-03-25T14:12:59Z", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -66,7 +64,20 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n+\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);", "originalCommit": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67388d08f1535b64f29435e9ac9ecdcd8629482d", "chunk": "diff --git a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\nindex 72f28153ee..66494a1140 100644\n--- a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n+++ b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n\n@@ -64,7 +65,7 @@ public class PMM_GenerateOrders extends WorkpackageProcessorAdapter\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n \t}\n \n \tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n"}}, {"oid": "1a8fbeef33bc21ccb0a9c28731b72c742866acb6", "url": "https://github.com/metasfresh/metasfresh/commit/1a8fbeef33bc21ccb0a9c28731b72c742866acb6", "message": "Merge branch 'master' into gh6386_2", "committedDate": "2020-03-31T13:41:20Z", "type": "commit"}, {"oid": "67388d08f1535b64f29435e9ac9ecdcd8629482d", "url": "https://github.com/metasfresh/metasfresh/commit/67388d08f1535b64f29435e9ac9ecdcd8629482d", "message": "#6386 Made process work like in swing client.", "committedDate": "2020-03-31T16:05:18Z", "type": "commit"}, {"oid": "2d53e68708cbce7a09ec3e0b5f2614e1b1afd904", "url": "https://github.com/metasfresh/metasfresh/commit/2d53e68708cbce7a09ec3e0b5f2614e1b1afd904", "message": "#6385 Modified 'Create Purchase Orders' action to work as customer requested.", "committedDate": "2020-04-01T17:40:36Z", "type": "commit"}, {"oid": "c13d9127c67358000736ff9096cce17fd22cfd24", "url": "https://github.com/metasfresh/metasfresh/commit/c13d9127c67358000736ff9096cce17fd22cfd24", "message": "Merge branch 'master' into gh6386_2", "committedDate": "2020-04-01T17:43:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNzI2Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r401817262", "bodyText": "alright, good you removed it again; OrderLineAggregation already does that job (i saw it only now \ud83d\ude0a ).", "author": "metas-ts", "createdAt": "2020-04-01T18:20:06Z", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -68,19 +68,6 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n \t}\n \n-\tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)", "originalCommit": "2d53e68708cbce7a09ec3e0b5f2614e1b1afd904", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxODExOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r401818119", "bodyText": "please quickly clean up the imports; i think at least BigDecimal is not needed anymore", "author": "metas-ts", "createdAt": "2020-04-01T18:21:39Z", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -1,16 +1,17 @@\n package de.metas.procurement.base.order.async;\n \n-import java.util.List;\n-\n-import org.adempiere.ad.trx.api.ITrx;\n-import org.adempiere.exceptions.AdempiereException;\n-\n import de.metas.async.api.IQueueDAO;\n import de.metas.async.model.I_C_Queue_WorkPackage;\n import de.metas.async.spi.WorkpackageProcessorAdapter;\n import de.metas.procurement.base.model.I_PMM_PurchaseCandidate;\n import de.metas.procurement.base.order.impl.OrdersGenerator;\n import de.metas.util.Services;\n+import org.adempiere.ad.trx.api.ITrx;", "originalCommit": "c13d9127c67358000736ff9096cce17fd22cfd24", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f319bcb73d6f2c94299c40ca3148ac1156e84566", "chunk": "diff --git a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\nindex 90fe76e0ec..be65e1a233 100644\n--- a/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n+++ b/de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java\n\n@@ -9,8 +9,6 @@ import de.metas.util.Services;\n import org.adempiere.ad.trx.api.ITrx;\n import org.adempiere.exceptions.AdempiereException;\n \n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n import java.util.List;\n \n /*\n"}}, {"oid": "f319bcb73d6f2c94299c40ca3148ac1156e84566", "url": "https://github.com/metasfresh/metasfresh/commit/f319bcb73d6f2c94299c40ca3148ac1156e84566", "message": "#6386 Removed unused imports, renamed process & only showing action when there are rows in the view.", "committedDate": "2020-04-02T08:53:52Z", "type": "commit"}]}