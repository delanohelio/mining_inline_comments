{"pr_number": 10290, "pr_title": "Add Password Generator and test", "pr_createdAt": "2020-11-24T13:47:00Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10290", "timeline": [{"oid": "d1da4d2daf7d3d07a259ba593810408f8a29d4ed", "url": "https://github.com/metasfresh/metasfresh/commit/d1da4d2daf7d3d07a259ba593810408f8a29d4ed", "message": "Add Password Generator and test\n\nhttps://github.com/metasfresh/metasfresh/issues/10289\nSigned-off-by: TheBestPessimist <cristian@tbp.land>", "committedDate": "2020-11-24T13:46:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5NTQ3OA==", "url": "https://github.com/metasfresh/metasfresh/pull/10290#discussion_r530195478", "bodyText": "pls avoid having methods with so many params.\nconsider introducing a \"request\"-ish class, e.g. GeneratePasswordRequest.", "author": "teosarca", "createdAt": "2020-11-25T08:43:46Z", "path": "backend/de.metas.business/src/main/java/de/metas/password/PasswordGenerator.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * #%L\n+ * de.metas.business\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.password;\n+\n+import lombok.NonNull;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Random;\n+\n+/**\n+ * Borrowed from: https://mkyong.com/java/java-password-generator-example/\n+ */\n+@Service\n+public class PasswordGenerator\n+{\n+\tprivate static final String CHAR_LOWERCASE = \"abcdefghijklmnopqrstuvwxyz\";\n+\tprivate static final String CHAR_UPPERCASE = CHAR_LOWERCASE.toUpperCase();\n+\tprivate static final String DIGIT = \"0123456789\";\n+\tprivate static final String PUNCTUATION = \"!@#&()\u2013[{}]:;',?/*\";\n+\n+\tfinal Random random = new Random();\n+\n+\tpublic String generatePassword(\n+\t\t\tfinal int passwordLength,\n+\t\t\tfinal boolean useLowercase,\n+\t\t\tfinal boolean useUppercase,\n+\t\t\tfinal boolean useDigit,\n+\t\t\tfinal boolean usePunctuation", "originalCommit": "d1da4d2daf7d3d07a259ba593810408f8a29d4ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}