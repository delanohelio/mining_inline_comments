{"pr_number": 7187, "pr_title": "create material receipts endpoint && Siro camel route", "pr_createdAt": "2020-08-24T15:42:56Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7187", "timeline": [{"oid": "d220358407ea6de20f0effe496dc212ec34e3610", "url": "https://github.com/metasfresh/metasfresh/commit/d220358407ea6de20f0effe496dc212ec34e3610", "message": "create material receipts endpoint && Siro camel route", "committedDate": "2020-08-24T15:41:25Z", "type": "commit"}, {"oid": "2d5c97524ded85347b993818dd9f0972f144c33b", "url": "https://github.com/metasfresh/metasfresh/commit/2d5c97524ded85347b993818dd9f0972f144c33b", "message": "fix unit test\nrefs: https://github.com/metasfresh/metasfresh/issues/7186", "committedDate": "2020-08-25T08:46:13Z", "type": "commit"}, {"oid": "61d5ed8cd1b1d4162d1df430e4a76fb42c49ae09", "url": "https://github.com/metasfresh/metasfresh/commit/61d5ed8cd1b1d4162d1df430e4a76fb42c49ae09", "message": "Merge branch 'blonde_monkey_uat' into gh7186-cp\n\n# Conflicts:\n#\tmisc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonProcessor.java", "committedDate": "2020-08-25T08:53:47Z", "type": "commit"}, {"oid": "ce04e6283939d2508a122113fb085ec5d27568ac", "url": "https://github.com/metasfresh/metasfresh/commit/ce04e6283939d2508a122113fb085ec5d27568ac", "message": "merged with blonde_monkey_uat\nrefs: https://github.com/metasfresh/metasfresh/issues/7186", "committedDate": "2020-08-25T09:02:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MjU3Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476282577", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;", "author": "metas-ts", "createdAt": "2020-08-25T08:46:05Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;", "originalCommit": "d220358407ea6de20f0effe496dc212ec34e3610", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78c6864280c2ea2e664c36454d247f75b41e9419", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\nindex 2f33884e76..6d89d1952a 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n\n@@ -118,15 +119,14 @@ public class InOutProducer implements IInOutProducer\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n-\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n+\t\tthis(result, complete, ReceiptMovementDateRule.CURRENT_DATE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n+\t * @param movementDateRule if {@code ReceiptMovementDateRule#CURRENT_DATE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n \t *                         else if {@code ReceiptMovementDateRule#EXTERNAL_DATE_IF_AVAIL} then the MovementDate will be taken from {@code externalInfoByReceiptScheduleId} if available\n \t *                         else if {@code ReceiptMovementDateRule#ORDER_DATE_PROMISED} then the date will be the DatePromised value of the receipt schedule's C_Order.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MzU0NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476283545", "bodyText": "from this javadoc, i guess NONE should rather be named CURRENT_DATE or TODAY, wdyt?", "author": "metas-ts", "createdAt": "2020-08-25T08:47:38Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n+\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param createReceiptWithDatePromised if <code>false</code> (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}. Otherwise it is created with\n-\t *            the DatePromised value of the receipt schedule's C_Order. To be used e.g. when doing migration work.\n-\t */\n-\tprotected InOutProducer(@NonNull final InOutGenerateResult result, final boolean complete, final boolean createReceiptWithDatePromised)\n+\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.", "originalCommit": "d220358407ea6de20f0effe496dc212ec34e3610", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0NjUwNQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476346505", "bodyText": "good point \ud83d\ude04", "author": "pvpurcarcosmin", "createdAt": "2020-08-25T10:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MzU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "78c6864280c2ea2e664c36454d247f75b41e9419", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\nindex 2f33884e76..6d89d1952a 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n\n@@ -118,15 +119,14 @@ public class InOutProducer implements IInOutProducer\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n-\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n+\t\tthis(result, complete, ReceiptMovementDateRule.CURRENT_DATE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n+\t * @param movementDateRule if {@code ReceiptMovementDateRule#CURRENT_DATE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n \t *                         else if {@code ReceiptMovementDateRule#EXTERNAL_DATE_IF_AVAIL} then the MovementDate will be taken from {@code externalInfoByReceiptScheduleId} if available\n \t *                         else if {@code ReceiptMovementDateRule#ORDER_DATE_PROMISED} then the date will be the DatePromised value of the receipt schedule's C_Order.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4NDQ1NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476284455", "bodyText": "here you could use (CoalesceUtils.)coalesce(externalInfoByReceiptScheduleId, ImmutableMap.of()), in my mind that's more readable", "author": "metas-ts", "createdAt": "2020-08-25T08:49:03Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n+\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param createReceiptWithDatePromised if <code>false</code> (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}. Otherwise it is created with\n-\t *            the DatePromised value of the receipt schedule's C_Order. To be used e.g. when doing migration work.\n-\t */\n-\tprotected InOutProducer(@NonNull final InOutGenerateResult result, final boolean complete, final boolean createReceiptWithDatePromised)\n+\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n+\t *                         else if {@code ReceiptMovementDateRule#EXTERNAL_DATE_IF_AVAIL} then the MovementDate will be taken from {@code externalInfoByReceiptScheduleId} if available\n+\t *                         else if {@code ReceiptMovementDateRule#ORDER_DATE_PROMISED} then the date will be the DatePromised value of the receipt schedule's C_Order.\n+     */\n+\tprotected InOutProducer(@NonNull final InOutGenerateResult result,\n+\t\t\tfinal boolean complete,\n+\t\t\t@NonNull final ReceiptMovementDateRule movementDateRule,\n+\t\t\t@Nullable final Map<ReceiptScheduleId,ReceiptScheduleExternalInfo> externalInfoByReceiptScheduleId)\n \t{\n \t\tthis.result = result;\n \t\tthis.complete = complete;\n-\t\tthis.createReceiptWithDatePromised = createReceiptWithDatePromised;\n+\t\tthis.movementDateRule = movementDateRule;\n+\n+\t\tthis.externalInfoByReceiptScheduleId = externalInfoByReceiptScheduleId != null", "originalCommit": "d220358407ea6de20f0effe496dc212ec34e3610", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78c6864280c2ea2e664c36454d247f75b41e9419", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\nindex 2f33884e76..6d89d1952a 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n\n@@ -118,15 +119,14 @@ public class InOutProducer implements IInOutProducer\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n-\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n+\t\tthis(result, complete, ReceiptMovementDateRule.CURRENT_DATE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n+\t * @param movementDateRule if {@code ReceiptMovementDateRule#CURRENT_DATE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n \t *                         else if {@code ReceiptMovementDateRule#EXTERNAL_DATE_IF_AVAIL} then the MovementDate will be taken from {@code externalInfoByReceiptScheduleId} if available\n \t *                         else if {@code ReceiptMovementDateRule#ORDER_DATE_PROMISED} then the date will be the DatePromised value of the receipt schedule's C_Order.\n      */\n"}}, {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419", "url": "https://github.com/metasfresh/metasfresh/commit/78c6864280c2ea2e664c36454d247f75b41e9419", "message": "added unit tests\nrefs: https://github.com/metasfresh/metasfresh/issues/7186", "committedDate": "2020-08-26T07:24:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3OTMxMw==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477179313", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n          \n          \n            \n            \t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.CURRENT_DATE && externalInfoByScheduleId = null</code>.", "author": "metas-ts", "createdAt": "2020-08-26T09:51:51Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +112,34 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.", "originalCommit": "78c6864280c2ea2e664c36454d247f75b41e9419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae573013e414b12dd56a5c8e6dde761ee5fa5dee", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\nindex 6d89d1952a..3825db8dcc 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n\n@@ -112,10 +112,7 @@ public class InOutProducer implements IInOutProducer\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n-\t *\n-\t * @param result\n-\t * @param complete\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.CURRENT_DATE && externalInfoByScheduleId = null</code>.\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3OTQyOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477179429", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param result\n          \n          \n            \n            \t * @param complete", "author": "metas-ts", "createdAt": "2020-08-26T09:52:02Z", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +112,34 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete", "originalCommit": "78c6864280c2ea2e664c36454d247f75b41e9419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae573013e414b12dd56a5c8e6dde761ee5fa5dee", "chunk": "diff --git a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\nindex 6d89d1952a..3825db8dcc 100644\n--- a/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n+++ b/backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java\n\n@@ -112,10 +112,7 @@ public class InOutProducer implements IInOutProducer\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n-\t *\n-\t * @param result\n-\t * @param complete\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.CURRENT_DATE && externalInfoByScheduleId = null</code>.\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MDY0Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477180647", "bodyText": "hm, i think i wasn't aware of this \ud83e\udd14 i'll try to keep it in mind", "author": "metas-ts", "createdAt": "2020-08-26T09:54:10Z", "path": "misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java", "diffHunk": "@@ -36,7 +37,7 @@\n \t\t\t\t.to(LOCAL_STORAGE_URL)\n \t\t\t\t.streamCaching()\n \t\t\t\t.unmarshal(jacksonXMLDataFormat)\n-\t\t\t\t.process(new ShipmentXmlToJsonProcessor())\n+\t\t\t\t.process(new ShipmentXmlToJsonProcessor()).id(SHIPMENT_XML_TO_JSON_PROCESSOR)", "originalCommit": "78c6864280c2ea2e664c36454d247f75b41e9419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIxMTY1OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477211659", "bodyText": "used it for testing, basically to be able to add a mock node right after it that facilitates checking what the processor did", "author": "pvpurcarcosmin", "createdAt": "2020-08-26T10:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MDY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8f9cb693c104697303a01eda420614eb86faa069", "chunk": "diff --git a/misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java b/misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java\nindex eb2ebe4919..8658d11583 100644\n--- a/misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java\n+++ b/misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java\n\n@@ -37,7 +36,7 @@ public class ShipmentXmlToJsonRouteBuilder extends EndpointRouteBuilder\n \t\t\t\t.to(LOCAL_STORAGE_URL)\n \t\t\t\t.streamCaching()\n \t\t\t\t.unmarshal(jacksonXMLDataFormat)\n-\t\t\t\t.process(new ShipmentXmlToJsonProcessor()).id(SHIPMENT_XML_TO_JSON_PROCESSOR)\n+\t\t\t\t.process(new ShipmentXmlToJsonProcessor())\n \t\t\t\t.choice()\n \t\t\t\t    .when(header(RouteBuilderCommonUtil.NUMBER_OF_ITEMS).isLessThanOrEqualTo(0))\n \t\t\t\t\t\t.log(LoggingLevel.INFO, \"Nothing to do! no shipments were found in file:\" + header(Exchange.FILE_NAME))\n"}}, {"oid": "ae573013e414b12dd56a5c8e6dde761ee5fa5dee", "url": "https://github.com/metasfresh/metasfresh/commit/ae573013e414b12dd56a5c8e6dde761ee5fa5dee", "message": "removed cust tags\nrefs: https://github.com/metasfresh/metasfresh/issues/7186", "committedDate": "2020-08-26T10:57:03Z", "type": "commit"}, {"oid": "8f9cb693c104697303a01eda420614eb86faa069", "url": "https://github.com/metasfresh/metasfresh/commit/8f9cb693c104697303a01eda420614eb86faa069", "message": "removed duplicate dependency\nrefs: https://github.com/metasfresh/metasfresh/issues/7186", "committedDate": "2020-08-26T11:01:23Z", "type": "commit"}, {"oid": "8b1c9ad9251a9088c21e4307374b1e7335b74b3a", "url": "https://github.com/metasfresh/metasfresh/commit/8b1c9ad9251a9088c21e4307374b1e7335b74b3a", "message": "Merge branch 'blonde_monkey_uat' of https://github.com/metasfresh/metasfresh into blonde_monkey_uat", "committedDate": "2020-08-26T11:01:40Z", "type": "commit"}, {"oid": "229b8d2471c584775f2007c26128800dc0bf8df1", "url": "https://github.com/metasfresh/metasfresh/commit/229b8d2471c584775f2007c26128800dc0bf8df1", "message": "Merge branch 'blonde_monkey_uat' into gh7186-cp", "committedDate": "2020-08-26T11:02:08Z", "type": "commit"}, {"oid": "a8b1f93cc7992187befa033db4db2752421af291", "url": "https://github.com/metasfresh/metasfresh/commit/a8b1f93cc7992187befa033db4db2752421af291", "message": "#9840 update packages (#9841)\n\n(cherry picked from commit 32f29060843f9a30233dc5a5083f264d925c2a55)", "committedDate": "2020-08-26T11:16:14Z", "type": "commit"}, {"oid": "5d57620c0feb5bbdfa29ef47fa716c6d9e7df0f0", "url": "https://github.com/metasfresh/metasfresh/commit/5d57620c0feb5bbdfa29ef47fa716c6d9e7df0f0", "message": "Update dev packages and  remove the additional jest install step (#9842)\n\n* #9840 remove additional jest install from the jenkins script\n\n* #9840 update dev packages\n\n* #9840 fix linter errors after updating eslint\n\n(cherry picked from commit 05850a80454f7e11ed1a781caf0bceb369b8ca49)", "committedDate": "2020-08-26T11:22:04Z", "type": "commit"}, {"oid": "80c13aaaba709e151015c1ef3a23c705035e6ace", "url": "https://github.com/metasfresh/metasfresh/commit/80c13aaaba709e151015c1ef3a23c705035e6ace", "message": "copy-pasted from commit: 7804550b0780b4a42e69530a98fea3dd4d9743ee", "committedDate": "2020-08-26T12:27:17Z", "type": "commit"}, {"oid": "0e16b14ee12eb2dace0849ee17b5bb3f0113662f", "url": "https://github.com/metasfresh/metasfresh/commit/0e16b14ee12eb2dace0849ee17b5bb3f0113662f", "message": "Update vulnerable package (#7176)\n\n* Update vulnerable package\n\n* Updated copy webpack plugin with the newest syntax\n\nCo-authored-by: Petrica Nanca <petrica.nanca@metasfresh.com>\n(cherry picked from commit cd646e9f5663f29d8ab927a8f2e733793199b726)", "committedDate": "2020-08-26T12:53:48Z", "type": "commit"}]}