{"pr_number": 6095, "pr_title": "Gh ic aggregation", "pr_createdAt": "2020-01-29T09:28:09Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6095", "timeline": [{"oid": "983a4a0c697ef1ef83f04458b69450ef4331be5d", "url": "https://github.com/metasfresh/metasfresh/commit/983a4a0c697ef1ef83f04458b69450ef4331be5d", "message": "Debug remaining aggregation problems\n\nAvoid having useless \"IsSoTrx=false; => set IsEdiEnabled to false\" entries in the async-workpackage-log", "committedDate": "2020-01-29T05:39:44Z", "type": "commit"}, {"oid": "f56b9dd0cff611ec6e0a361db42bae81433a1302", "url": "https://github.com/metasfresh/metasfresh/commit/f56b9dd0cff611ec6e0a361db42bae81433a1302", "message": "Debug remaining aggregation problems\n\nInvoiceCandidateEnqueuer: actual fix - set DateToInvoice and DateAcct *before* the enqeuing, if specified via process params\nAlso:\n* TimeUtil: deprecate TimeUtil.asTimestamp(LocalDate) because it assumes that the server's local timezone is always the correct one\n* DocTypeId: fix incorrect lombo annotation\n* IInvoiceCandBL.getDateToInvoice() - now returns LocalDate instead of timestamp\n* InvoiceCandBL - change *internal* stuff to work with Timestamp and not LocalDate..to avoid the need for conversions when stuff is going right from one timestamp column to another one\n* IInvoiceCandDAO - changed some methods to work with LocalDate instead of timestamp\n* InvoiceCandidateQuery - change type of dateToInvoice from timestamp to LocalDate, and add orgId (optional, unless dateToInvoice is set)", "committedDate": "2020-01-29T08:16:14Z", "type": "commit"}, {"oid": "78bdcb6faa325eb67615e59e0c27bcc4b55a1b0d", "url": "https://github.com/metasfresh/metasfresh/commit/78bdcb6faa325eb67615e59e0c27bcc4b55a1b0d", "message": "Debug remaining aggregation problems\n\ndo method renames that we already have in master, to have the code more similar", "committedDate": "2020-01-29T09:27:59Z", "type": "commit"}, {"oid": "92aea71c130770aeb72ce6383067a10de25fbe84", "url": "https://github.com/metasfresh/metasfresh/commit/92aea71c130770aeb72ce6383067a10de25fbe84", "message": "Debug remaining aggregation problems\n\nadd AD_PInstance and AD_Process_ID MDC!", "committedDate": "2020-01-29T09:40:12Z", "type": "commit"}, {"oid": "d561ab1c8a9c1c4419f49dc80c8ffc34be214229", "url": "https://github.com/metasfresh/metasfresh/commit/d561ab1c8a9c1c4419f49dc80c8ffc34be214229", "message": "Debug remaining aggregation problems\n\nsolve unit test problem\nhttps://github.com/metasfresh/metasfresh/issues/6096", "committedDate": "2020-01-29T12:10:59Z", "type": "commit"}, {"oid": "e9452f6e3aa3ec91f2b7c19698f1ec5ab35dfa3b", "url": "https://github.com/metasfresh/metasfresh/commit/e9452f6e3aa3ec91f2b7c19698f1ec5ab35dfa3b", "message": "avoid not-really-important mettasge in async-WP log\n\nmetasfresh/metasfresh#6096", "committedDate": "2020-01-29T12:58:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2NzQ4OA==", "url": "https://github.com/metasfresh/metasfresh/pull/6095#discussion_r372367488", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Note: we only use this internally; by having it as timestamp, we avoid useless conversions between it an {@link LocalDate}\n          \n          \n            \n            \t * Note: we only use this internally; by having it as timestamp, we avoid useless conversions between it and {@link LocalDate}", "author": "metas-ts", "createdAt": "2020-01-29T12:59:46Z", "path": "de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java", "diffHunk": "@@ -191,11 +191,14 @@\n \t// task 08927\n \t/* package */static final ModelDynAttributeAccessor<org.compiere.model.I_C_Invoice, Boolean> DYNATTR_C_Invoice_Candidates_need_NO_ila_updating_on_Invoice_Complete = new ModelDynAttributeAccessor<>(Boolean.class);\n \n-\t/** @task 08451 */\n-\tprivate static final LocalDate DATE_TO_INVOICE_MAX_DATE = LocalDate.of(9999, Month.DECEMBER, 31); // NOTE: not using LocalDate.MAX because we want to convert it to Timestamp\n+\t/**\n+\t * Note: we only use this internally; by having it as timestamp, we avoid useless conversions between it an {@link LocalDate}", "originalCommit": "e9452f6e3aa3ec91f2b7c19698f1ec5ab35dfa3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "338f943efe580b89eceb03cff657179f6cd98b05", "chunk": "diff --git a/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java b/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java\nindex 67a597377e..b4437bfb42 100644\n--- a/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java\n+++ b/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java\n\n@@ -192,7 +192,7 @@ public class InvoiceCandBL implements IInvoiceCandBL\n \t/* package */static final ModelDynAttributeAccessor<org.compiere.model.I_C_Invoice, Boolean> DYNATTR_C_Invoice_Candidates_need_NO_ila_updating_on_Invoice_Complete = new ModelDynAttributeAccessor<>(Boolean.class);\n \n \t/**\n-\t * Note: we only use this internally; by having it as timestamp, we avoid useless conversions between it an {@link LocalDate}\n+\t * Note: we only use this internally; by having it as timestamp, we avoid useless conversions between it and {@link LocalDate}\n \t * @task 08451 */\n \tprivate static final Timestamp DATE_TO_INVOICE_MAX_DATE = Timestamp.valueOf(\"9999-12-31 23:59:59\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM2ODM3Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/6095#discussion_r372368376", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/** For internal use */\n          \n          \n            \n            \t/** For class-internal use */", "author": "metas-ts", "createdAt": "2020-01-29T13:01:44Z", "path": "de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java", "diffHunk": "@@ -1024,7 +1027,13 @@ public InvoiceRule getInvoiceRule(@NonNull final I_C_Invoice_Candidate ic)\n \t}\n \n \t@Override\n-\tpublic Timestamp getDateToInvoice(final I_C_Invoice_Candidate ic)\n+\tpublic LocalDate getDateToInvoice(@NonNull final I_C_Invoice_Candidate ic)\n+\t{\n+\t\treturn TimeUtil.asLocalDate(getDateToInvoiceTS(ic));\n+\t}\n+\n+\t/** For internal use */", "originalCommit": "e9452f6e3aa3ec91f2b7c19698f1ec5ab35dfa3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "338f943efe580b89eceb03cff657179f6cd98b05", "chunk": "diff --git a/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java b/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java\nindex 67a597377e..b4437bfb42 100644\n--- a/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java\n+++ b/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java\n\n@@ -1032,7 +1032,7 @@ public class InvoiceCandBL implements IInvoiceCandBL\n \t\treturn TimeUtil.asLocalDate(getDateToInvoiceTS(ic));\n \t}\n \n-\t/** For internal use */\n+\t/** For class-internal use */\n \tprivate Timestamp getDateToInvoiceTS(@NonNull final I_C_Invoice_Candidate ic)\n \t{\n \t\tfinal Timestamp dateToInvoiceOverride = ic.getDateToInvoice_Override();\n"}}, {"oid": "338f943efe580b89eceb03cff657179f6cd98b05", "url": "https://github.com/metasfresh/metasfresh/commit/338f943efe580b89eceb03cff657179f6cd98b05", "message": "Apply suggestions from code review\r\n\r\n#6096", "committedDate": "2020-01-29T13:06:14Z", "type": "commit"}]}