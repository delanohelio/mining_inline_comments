{"pr_number": 7157, "pr_title": "WebUI Forecast Window hide Calendar, Period, Year", "pr_createdAt": "2020-08-19T07:14:37Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7157", "timeline": [{"oid": "d2c619771072260e52979eee5967a3d88c9aa72d", "url": "https://github.com/metasfresh/metasfresh/commit/d2c619771072260e52979eee5967a3d88c9aa72d", "message": "Add `C_Calendar.IsDefault`\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-18T12:49:23Z", "type": "commit"}, {"oid": "718fec059e86b9ecd442059c17e5ee8629b17142", "url": "https://github.com/metasfresh/metasfresh/commit/718fec059e86b9ecd442059c17e5ee8629b17142", "message": "Add webui and migration for `C_Calendar.IsDefault`\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-18T13:06:14Z", "type": "commit"}, {"oid": "cc93978faad4518fabbfed243f004fe836a676d2", "url": "https://github.com/metasfresh/metasfresh/commit/cc93978faad4518fabbfed243f004fe836a676d2", "message": "Add model validator for M_Forecast.DatePromised\n\nIt gets the default calendar and sets the forecast's Calendar, Year and Period, if possible.\nIf not possible error is thrown.\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T06:17:10Z", "type": "commit"}, {"oid": "37ffe5c42703a00afe6253c31b9bf25dd9ef2378", "url": "https://github.com/metasfresh/metasfresh/commit/37ffe5c42703a00afe6253c31b9bf25dd9ef2378", "message": "Update Forecast Window\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T06:19:18Z", "type": "commit"}, {"oid": "5dee9d2c5e3a9414eddb28644048585989974de8", "url": "https://github.com/metasfresh/metasfresh/commit/5dee9d2c5e3a9414eddb28644048585989974de8", "message": "Add error messages if default calendar or period does not exist\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T07:13:14Z", "type": "commit"}, {"oid": "58efda0067be3bfeaca3d0cf1ff7f965e56170aa", "url": "https://github.com/metasfresh/metasfresh/commit/58efda0067be3bfeaca3d0cf1ff7f965e56170aa", "message": "Add error messages trls\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T07:18:52Z", "type": "commit"}, {"oid": "09624ae6675de5c0eb998eaacf44b35dbdaaaaf9", "url": "https://github.com/metasfresh/metasfresh/commit/09624ae6675de5c0eb998eaacf44b35dbdaaaaf9", "message": "Set Updated and UpdatedBy to the default Calendar\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T07:21:30Z", "type": "commit"}, {"oid": "6810b53c0e7289b6828c265319cb8c6a88ae882e", "url": "https://github.com/metasfresh/metasfresh/commit/6810b53c0e7289b6828c265319cb8c6a88ae882e", "message": "Set Updated and UpdatedBy to the default Calendar 2\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T07:26:19Z", "type": "commit"}, {"oid": "b99d9e798ec552f51721e255ae58f7afbedb8cfc", "url": "https://github.com/metasfresh/metasfresh/commit/b99d9e798ec552f51721e255ae58f7afbedb8cfc", "message": "ForecastLine Quick Input: copy warehouse from Forecast\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T09:51:55Z", "type": "commit"}, {"oid": "bd6f00ba724a7504559bcc817a250b34cc1f7adc", "url": "https://github.com/metasfresh/metasfresh/commit/bd6f00ba724a7504559bcc817a250b34cc1f7adc", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T10:12:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MzQ1Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472943453", "bodyText": "lines 241:253 shall be a DAO method", "author": "teosarca", "createdAt": "2020-08-19T10:59:53Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarBL.java", "diffHunk": "@@ -214,4 +227,29 @@ public IBusinessDayMatcher createBusinessDayMatcherExcluding(final Set<DayOfWeek\n \t\t\t\t.excludeWeekendDays(excludeWeekendDays)\n \t\t\t\t.build();\n \t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic CalendarId getOrgCalendarOrDefault(final @NonNull OrgId orgId)\n+\t{\n+\t\tfinal OrgInfo orgInfo = orgDAO.getOrgInfoByIdInTrx(orgId);\n+\t\tif (orgInfo.getCalendarId() != null)\n+\t\t{\n+\t\t\treturn orgInfo.getCalendarId();\n+\t\t}\n+\n+\t\tfinal I_C_Calendar calendar = queryBL.createQueryBuilder(I_C_Calendar.class)\n+\t\t\t\t.addEqualsFilter(I_C_Calendar.COLUMNNAME_IsDefault, true)\n+\t\t\t\t.addInArrayFilter(I_C_Calendar.COLUMNNAME_AD_Org_ID, ImmutableList.of(orgId, OrgId.ANY))\n+\t\t\t\t.orderByDescending(I_C_Calendar.COLUMNNAME_AD_Org_ID)\n+\t\t\t\t.create()\n+\t\t\t\t.first();\n+\n+\t\tif (calendar == null)\n+\t\t{\n+\t\t\tthrow new AdempiereException(MSG_SET_DEFAULT_OR_ORG_CALENDAR);\n+\t\t}\n+\n+\t\treturn CalendarId.ofRepoId(calendar.getC_Calendar_ID());", "originalCommit": "bd6f00ba724a7504559bcc817a250b34cc1f7adc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NjM5Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472946397", "bodyText": "hehe, initially i created it in DAO, then moved it here since i believed it should not be duplicated", "author": "TheBestPessimist", "createdAt": "2020-08-19T11:05:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MzQ1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk2NjI2OA==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472966268", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-08-19T11:43:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0MzQ1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "322f99c23368648b6088f988cb61defee484d4b0", "chunk": "diff --git a/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarBL.java b/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarBL.java\nindex 1c5f809cb9..5f359cb964 100644\n--- a/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarBL.java\n+++ b/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarBL.java\n\n@@ -238,17 +237,7 @@ public class CalendarBL implements ICalendarBL\n \t\t\treturn orgInfo.getCalendarId();\n \t\t}\n \n-\t\tfinal I_C_Calendar calendar = queryBL.createQueryBuilder(I_C_Calendar.class)\n-\t\t\t\t.addEqualsFilter(I_C_Calendar.COLUMNNAME_IsDefault, true)\n-\t\t\t\t.addInArrayFilter(I_C_Calendar.COLUMNNAME_AD_Org_ID, ImmutableList.of(orgId, OrgId.ANY))\n-\t\t\t\t.orderByDescending(I_C_Calendar.COLUMNNAME_AD_Org_ID)\n-\t\t\t\t.create()\n-\t\t\t\t.first();\n-\n-\t\tif (calendar == null)\n-\t\t{\n-\t\t\tthrow new AdempiereException(MSG_SET_DEFAULT_OR_ORG_CALENDAR);\n-\t\t}\n+\t\tfinal I_C_Calendar calendar = calendarDAO.getDefaultCalendar(orgId);\n \n \t\treturn CalendarId.ofRepoId(calendar.getC_Calendar_ID());\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NDQyNA==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472944424", "bodyText": "u can use org.compiere.model.IQuery.listDistinct(String, Class<AT>).", "author": "teosarca", "createdAt": "2020-08-19T11:01:32Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarDAO.java", "diffHunk": "@@ -119,4 +127,22 @@ public I_C_Period retrieveLastPeriodOfTheYear(final I_C_Year year)\n \t\t\t\t.setOrderBy(I_C_Period.COLUMNNAME_StartDate + \" DESC \")\n \t\t\t\t.first(I_C_Period.class);\n \t}\n+\n+\t@Nullable\n+\t@Override\n+\tpublic String getName(final CalendarId calendarId)\n+\t{\n+\t\tfinal List<Map<String, Object>> calendarNames = queryBL.createQueryBuilder(I_C_Calendar.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addEqualsFilter(I_C_Calendar.COLUMNNAME_C_Calendar_ID, calendarId)\n+\t\t\t\t.create()\n+\t\t\t\t.listColumns(I_C_Calendar.COLUMNNAME_Name);", "originalCommit": "bd6f00ba724a7504559bcc817a250b34cc1f7adc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk2NzQ4Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472967486", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-08-19T11:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NDQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "322f99c23368648b6088f988cb61defee484d4b0", "chunk": "diff --git a/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarDAO.java b/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarDAO.java\nindex 8d64b3b068..2c7f9c4a26 100644\n--- a/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarDAO.java\n+++ b/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/CalendarDAO.java\n\n@@ -128,21 +121,4 @@ public class CalendarDAO extends AbstractCalendarDAO\n \t\t\t\t.first(I_C_Period.class);\n \t}\n \n-\t@Nullable\n-\t@Override\n-\tpublic String getName(final CalendarId calendarId)\n-\t{\n-\t\tfinal List<Map<String, Object>> calendarNames = queryBL.createQueryBuilder(I_C_Calendar.class)\n-\t\t\t\t.addOnlyActiveRecordsFilter()\n-\t\t\t\t.addEqualsFilter(I_C_Calendar.COLUMNNAME_C_Calendar_ID, calendarId)\n-\t\t\t\t.create()\n-\t\t\t\t.listColumns(I_C_Calendar.COLUMNNAME_Name);\n-\n-\t\tif (calendarNames.isEmpty())\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\treturn (String)calendarNames.get(0).get(I_C_Calendar.COLUMNNAME_Name);\n-\t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NDY5MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472944691", "bodyText": "why this method is needed?", "author": "teosarca", "createdAt": "2020-08-19T11:02:06Z", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/PlainCalendarDAO.java", "diffHunk": "@@ -222,6 +224,18 @@ public I_C_Period retrieveLastPeriodOfTheYear(I_C_Year year)\n \t\treturn periods.get(periods.size() - 1);\n \t}\n \n+\t@Nullable\n+\t@Override\n+\tpublic String getName(final CalendarId calendarId)", "originalCommit": "bd6f00ba724a7504559bcc817a250b34cc1f7adc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NDcyNw==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472944727", "bodyText": "pls avoid it", "author": "teosarca", "createdAt": "2020-08-19T11:02:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NDY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk3NzA2Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7157#discussion_r472977067", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-08-19T12:04:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk0NDY5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "322f99c23368648b6088f988cb61defee484d4b0", "chunk": "diff --git a/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/PlainCalendarDAO.java b/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/PlainCalendarDAO.java\nindex 83b77348da..8193e29c60 100644\n--- a/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/PlainCalendarDAO.java\n+++ b/backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/calendar/impl/PlainCalendarDAO.java\n\n@@ -224,18 +220,6 @@ public class PlainCalendarDAO extends AbstractCalendarDAO\n \t\treturn periods.get(periods.size() - 1);\n \t}\n \n-\t@Nullable\n-\t@Override\n-\tpublic String getName(final CalendarId calendarId)\n-\t{\n-\t\treturn db.getRecords(I_C_Calendar.class)\n-\t\t\t\t.stream()\n-\t\t\t\t.filter(c -> c.getC_Calendar_ID() == calendarId.getRepoId())\n-\t\t\t\t.map(I_C_Calendar::getName)\n-\t\t\t\t.findFirst()\n-\t\t\t\t.orElse(null);\n-\t}\n-\n \tprivate List<I_C_Period> getPeriodsOfYear(final I_C_Year year)\n \t{\n \t\tfinal Properties ctx = InterfaceWrapperHelper.getCtx(year);\n"}}, {"oid": "322f99c23368648b6088f988cb61defee484d4b0", "url": "https://github.com/metasfresh/metasfresh/commit/322f99c23368648b6088f988cb61defee484d4b0", "message": "Refactoring here and there\n\nhttps://github.com/metasfresh/metasfresh/issues/3856", "committedDate": "2020-08-19T12:00:11Z", "type": "commit"}]}