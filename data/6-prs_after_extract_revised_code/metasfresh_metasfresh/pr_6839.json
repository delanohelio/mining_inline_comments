{"pr_number": 6839, "pr_title": "[WebUI] Support returning a 2xx status code for non-existing document rows", "pr_createdAt": "2020-06-14T12:11:31Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6839", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwODU1MA==", "url": "https://github.com/metasfresh/metasfresh/pull/6839#discussion_r447408550", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t// final DocumentPath documentPath = parentDocument\n          \n          \n            \n            \t\t\t// .getDocumentPath()\n          \n          \n            \n            \t\t\t// .createChildPath(entityDescriptor.getDetailId(), documentId);\n          \n          \n            \n            \t\t\t// throw new DocumentNotFoundException(documentPath);", "author": "metas-ts", "createdAt": "2020-06-30T04:53:59Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java", "diffHunk": "@@ -121,21 +121,22 @@ else if (documentIds.isEmpty())\n \t}\n \n \t@Override\n-\tpublic Document getDocumentById(final DocumentId documentId)\n+\tpublic Optional<Document> getDocumentById(final DocumentId documentId)\n \t{\n \t\tfinal Document document = DocumentQuery.builder(entityDescriptor)\n \t\t\t\t.setParentDocument(parentDocument)\n \t\t\t\t.setRecordId(documentId)\n \t\t\t\t.retriveDocumentOrNull();\n \t\tif (document == null)\n \t\t{\n-\t\t\tfinal DocumentPath documentPath = parentDocument\n-\t\t\t\t\t.getDocumentPath()\n-\t\t\t\t\t.createChildPath(entityDescriptor.getDetailId(), documentId);\n-\t\t\tthrow new DocumentNotFoundException(documentPath);\n+\t\t\t// final DocumentPath documentPath = parentDocument\n+\t\t\t// .getDocumentPath()\n+\t\t\t// .createChildPath(entityDescriptor.getDetailId(), documentId);\n+\t\t\t// throw new DocumentNotFoundException(documentPath);", "originalCommit": "98a28ba9fc91d046587c2711e3be4ab9abd8af98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67d456be383deb4086f413e98437db8e17e89593", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java\nindex ef869c0d34..05e8625efb 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java\n\n@@ -129,10 +129,6 @@ public final class HighVolumeReadonlyIncludedDocumentsCollection implements IInc\n \t\t\t\t.retriveDocumentOrNull();\n \t\tif (document == null)\n \t\t{\n-\t\t\t// final DocumentPath documentPath = parentDocument\n-\t\t\t// .getDocumentPath()\n-\t\t\t// .createChildPath(entityDescriptor.getDetailId(), documentId);\n-\t\t\t// throw new DocumentNotFoundException(documentPath);\n \t\t\treturn Optional.empty();\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwOTIzNg==", "url": "https://github.com/metasfresh/metasfresh/pull/6839#discussion_r447409236", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t// final DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n          \n          \n            \n            \t\t\t// throw new DocumentNotFoundException(documentPath);", "author": "metas-ts", "createdAt": "2020-06-30T04:56:20Z", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java", "diffHunk": "@@ -261,11 +262,12 @@ public Document getDocumentById(@NonNull final DocumentId documentId)\n \t\t\t\t.retriveDocumentOrNull();\n \t\tif (documentRetrieved == null)\n \t\t{\n-\t\t\tfinal DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n-\t\t\tthrow new DocumentNotFoundException(documentPath);\n+\t\t\t// final DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n+\t\t\t// throw new DocumentNotFoundException(documentPath);", "originalCommit": "98a28ba9fc91d046587c2711e3be4ab9abd8af98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67d456be383deb4086f413e98437db8e17e89593", "chunk": "diff --git a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java\nindex d659d3f847..5d21725fd9 100644\n--- a/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java\n+++ b/backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java\n\n@@ -262,8 +262,6 @@ public class HighVolumeReadWriteIncludedDocumentsCollection implements IIncluded\n \t\t\t\t.retriveDocumentOrNull();\n \t\tif (documentRetrieved == null)\n \t\t{\n-\t\t\t// final DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n-\t\t\t// throw new DocumentNotFoundException(documentPath);\n \t\t\treturn Optional.empty();\n \t\t}\n \n"}}, {"oid": "67d456be383deb4086f413e98437db8e17e89593", "url": "https://github.com/metasfresh/metasfresh/commit/67d456be383deb4086f413e98437db8e17e89593", "message": "Update backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java\n\nCo-authored-by: Tobias Sch\u00f6neberg <metas-ts@users.noreply.github.com>", "committedDate": "2020-07-07T10:03:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUxNDQ4Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6839#discussion_r451514483", "bodyText": "shoulnd't we have a test with some data in the document list as well?", "author": "TheBestPessimist", "createdAt": "2020-07-08T12:42:53Z", "path": "backend/metasfresh-webui-api/src/test/java/de/metas/ui/web/window/datatypes/json/JSONDocumentListTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package de.metas.ui.web.window.datatypes.json;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.adempiere.exceptions.AdempiereException;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import de.metas.JsonObjectMapperHolder;\n+\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ * \n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ * \n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+public class JSONDocumentListTest\n+{\n+\tprivate ObjectMapper jsonObjectMapper;\n+\n+\t@BeforeEach\n+\tpublic void init()\n+\t{\n+\t\tjsonObjectMapper = JsonObjectMapperHolder.newJsonObjectMapper();\n+\t}\n+\n+\t@Test\n+\tpublic void testSerialize()", "originalCommit": "439d399be66813622cd50f6390786ea55056cd0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a385d739fc8561d9dea5df0bc0ab29a321f4a627", "chunk": "diff --git a/backend/metasfresh-webui-api/src/test/java/de/metas/ui/web/window/datatypes/json/JSONDocumentListTest.java b/backend/metasfresh-webui-api/src/test/java/de/metas/ui/web/window/datatypes/json/JSONDocumentListTest.java\ndeleted file mode 100644\nindex 361236a4c5..0000000000\n--- a/backend/metasfresh-webui-api/src/test/java/de/metas/ui/web/window/datatypes/json/JSONDocumentListTest.java\n+++ /dev/null\n\n@@ -1,65 +0,0 @@\n-package de.metas.ui.web.window.datatypes.json;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-import org.adempiere.exceptions.AdempiereException;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-\n-import de.metas.JsonObjectMapperHolder;\n-\n-/*\n- * #%L\n- * metasfresh-webui-api\n- * %%\n- * Copyright (C) 2020 metas GmbH\n- * %%\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as\n- * published by the Free Software Foundation, either version 2 of the\n- * License, or (at your option) any later version.\n- * \n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU General Public License for more details.\n- * \n- * You should have received a copy of the GNU General Public\n- * License along with this program. If not, see\n- * <http://www.gnu.org/licenses/gpl-2.0.html>.\n- * #L%\n- */\n-\n-public class JSONDocumentListTest\n-{\n-\tprivate ObjectMapper jsonObjectMapper;\n-\n-\t@BeforeEach\n-\tpublic void init()\n-\t{\n-\t\tjsonObjectMapper = JsonObjectMapperHolder.newJsonObjectMapper();\n-\t}\n-\n-\t@Test\n-\tpublic void testSerialize()\n-\t{\n-\t\tassertThat(toJson(JSONDocumentList.builder().build()))\n-\t\t\t\t.isEqualTo(\"{\\\"result\\\":[],\\\"missingIds\\\":[]}\");\n-\t}\n-\n-\tprivate String toJson(final JSONDocumentList obj)\n-\t{\n-\t\ttry\n-\t\t{\n-\t\t\treturn jsonObjectMapper.writeValueAsString(obj);\n-\t\t}\n-\t\tcatch (final JsonProcessingException e)\n-\t\t{\n-\t\t\tthrow new AdempiereException(\"Failed serializing \" + obj, e);\n-\t\t}\n-\t}\n-\n-}\n"}}, {"oid": "a385d739fc8561d9dea5df0bc0ab29a321f4a627", "url": "https://github.com/metasfresh/metasfresh/commit/a385d739fc8561d9dea5df0bc0ab29a321f4a627", "message": "#6838 support new format of data returned from the API", "committedDate": "2020-07-09T12:38:55Z", "type": "commit"}, {"oid": "34278dde234a3da95eb4258d2dbfc83272e50b07", "url": "https://github.com/metasfresh/metasfresh/commit/34278dde234a3da95eb4258d2dbfc83272e50b07", "message": "- tmp debug logs", "committedDate": "2020-07-09T12:38:55Z", "type": "commit"}, {"oid": "91fc6630a4564181a17a2ee650409fd733f04e5c", "url": "https://github.com/metasfresh/metasfresh/commit/91fc6630a4564181a17a2ee650409fd733f04e5c", "message": "Revert \"- tmp debug logs\"\n\nThis reverts commit 651e2fb67b36cebd3dcf60a62801f73efbbbb7d6.", "committedDate": "2020-07-09T12:38:55Z", "type": "commit"}, {"oid": "369ef02ead7c965b4673edf12281b512b53aa863", "url": "https://github.com/metasfresh/metasfresh/commit/369ef02ead7c965b4673edf12281b512b53aa863", "message": "webui backend: Support returning a 2xx status code for non-existing document rows\n\nhttps://github.com/metasfresh/metasfresh/issues/6838", "committedDate": "2020-07-09T12:38:55Z", "type": "commit"}, {"oid": "7a89eab7b72656a14eefbfee95b572ad7893b24e", "url": "https://github.com/metasfresh/metasfresh/commit/7a89eab7b72656a14eefbfee95b572ad7893b24e", "message": "hotfix typo", "committedDate": "2020-07-09T12:38:55Z", "type": "commit"}, {"oid": "a3253789b3b601258166ec3ae2a871b6072efb1d", "url": "https://github.com/metasfresh/metasfresh/commit/a3253789b3b601258166ec3ae2a871b6072efb1d", "message": "Update backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java\n\nCo-authored-by: Tobias Sch\u00f6neberg <metas-ts@users.noreply.github.com>", "committedDate": "2020-07-09T12:38:56Z", "type": "commit"}, {"oid": "02103af06c88e8a1a1af914a06d9ea16c2a01377", "url": "https://github.com/metasfresh/metasfresh/commit/02103af06c88e8a1a1af914a06d9ea16c2a01377", "message": "Update backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java\n\nCo-authored-by: Tobias Sch\u00f6neberg <metas-ts@users.noreply.github.com>", "committedDate": "2020-07-09T12:38:56Z", "type": "commit"}, {"oid": "64246f493041759d221bee3f6cafdc5df4dadf76", "url": "https://github.com/metasfresh/metasfresh/commit/64246f493041759d221bee3f6cafdc5df4dadf76", "message": "#6838 fix tests", "committedDate": "2020-07-09T12:38:56Z", "type": "commit"}, {"oid": "4d69da135f5348a0bb6d88a74b0ea9428f5e07b8", "url": "https://github.com/metasfresh/metasfresh/commit/4d69da135f5348a0bb6d88a74b0ea9428f5e07b8", "message": "#6838 support both removed and edited rows at the same time", "committedDate": "2020-07-09T12:38:56Z", "type": "commit"}, {"oid": "627ec15f12ad7325e9f563153c724de8760766ec", "url": "https://github.com/metasfresh/metasfresh/commit/627ec15f12ad7325e9f563153c724de8760766ec", "message": "#6838 add tests for refreshing all rows in a tab", "committedDate": "2020-07-09T12:38:56Z", "type": "commit"}, {"oid": "627ec15f12ad7325e9f563153c724de8760766ec", "url": "https://github.com/metasfresh/metasfresh/commit/627ec15f12ad7325e9f563153c724de8760766ec", "message": "#6838 add tests for refreshing all rows in a tab", "committedDate": "2020-07-09T12:38:56Z", "type": "forcePushed"}, {"oid": "6c21a3c771734e55547c00e3069a9fbb2eada1ae", "url": "https://github.com/metasfresh/metasfresh/commit/6c21a3c771734e55547c00e3069a9fbb2eada1ae", "message": "#6838 update e2e tests", "committedDate": "2020-07-13T17:34:39Z", "type": "commit"}]}