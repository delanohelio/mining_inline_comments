{"pr_number": 4890, "pr_title": "DB-11063 Left outer broadcast join for more cases.", "pr_createdAt": "2020-12-17T20:43:07Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/4890", "timeline": [{"oid": "37eb36296c4f49b44f80ff34d9ade4f2d612cb14", "url": "https://github.com/splicemachine/spliceengine/commit/37eb36296c4f49b44f80ff34d9ade4f2d612cb14", "message": "DB-11063 Left outer broadcast join for more cases.", "committedDate": "2020-12-17T20:38:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY4Mjc5OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4890#discussion_r545682799", "bodyText": "@msirek should we also allow RIGHTOUTERJOIN here, or at this point we only have LEFT OUTER ?", "author": "dgomezferro", "createdAt": "2020-12-18T09:03:49Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/HashableJoinStrategy.java", "diffHunk": "@@ -167,7 +167,8 @@ public boolean feasible(Optimizable innerTable,\n         if (hashKeyColumns == null && skipKeyCheck) {\n             // For full outer join, broadcast join is the default join strategy that can be applied\n             // to any kinds of join predicate, so make the eligibility check more general\n-            if (outerCost.getJoinType() == JoinNode.FULLOUTERJOIN &&\n+            if ((outerCost.getJoinType() == JoinNode.FULLOUTERJOIN ||\n+                 outerCost.getJoinType() == JoinNode.LEFTOUTERJOIN) &&", "originalCommit": "37eb36296c4f49b44f80ff34d9ade4f2d612cb14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg0MDg2OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4890#discussion_r545840869", "bodyText": "@dgomezferro For join algorithms we currently only have left outer join.  If we specify a right outer join in SQL it is executed using a left outer join algorithm (but with left and right tables swapped).  There is a test for it in BroadCastJoinIT.", "author": "msirek", "createdAt": "2020-12-18T13:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY4Mjc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg4NzEyNw==", "url": "https://github.com/splicemachine/spliceengine/pull/4890#discussion_r545887127", "bodyText": "@msirek got it, thanks!", "author": "dgomezferro", "createdAt": "2020-12-18T14:56:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY4Mjc5OQ=="}], "type": "inlineReview", "revised_code": null}]}