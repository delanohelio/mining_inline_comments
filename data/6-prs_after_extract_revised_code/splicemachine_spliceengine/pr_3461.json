{"pr_number": 3461, "pr_title": "DB-9109 Fix sporadics in jenkins due to overwrite of git data in tests", "pr_createdAt": "2020-04-21T18:01:09Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3461", "timeline": [{"oid": "2b0dc79b22d46eef8bc5bc3fb80187e7022105da", "url": "https://github.com/splicemachine/spliceengine/commit/2b0dc79b22d46eef8bc5bc3fb80187e7022105da", "message": "DB-9109 Fix sporadics in jenkins due to overwrite of git data in tests", "committedDate": "2020-04-21T17:57:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU5NzY5OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3461#discussion_r412597699", "bodyText": "There are currently four ITs putting the test files in this directory: ExternalTableIT, ExternalTablePartitionIT, ShowCreateTableIT, ViewsInSysibmIT. When these tests are running in parallel, would this call accidentally delete the files that are generated by other tests?  Could this be a possible source of intermittent test failure or wrong result?", "author": "yxia92", "createdAt": "2020-04-22T01:15:05Z", "path": "hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java", "diffHunk": "@@ -54,19 +54,13 @@\n     public static TestRule chain = RuleChain.outerRule(spliceClassWatcher)\n             .around(spliceSchemaWatcher);\n \n+    // this will cleanup all files created in the dir getExternalResourceDirectory()\n+    // (if you insert into external tables, you create files)\n     @BeforeClass\n     public static void cleanoutDirectory() {\n-        try {\n-            File file = new File(getExternalResourceDirectory());\n-            if (file.exists())\n-                FileUtils.deleteDirectory(new File(getExternalResourceDirectory()));\n-            file.mkdir();\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        SpliceUnitTest.clearDirectory( getExternalResourceDirectory() );", "originalCommit": "2b0dc79b22d46eef8bc5bc3fb80187e7022105da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIxNTQ2OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3461#discussion_r413215469", "bodyText": "yes, this is problematic. didn't knew they are running in parallel.\na better solution is to use Files.createTempDirectory, copy files/directories there, then delete after use, e.g. with java.lang.AutoCloseable. A small downside of this is that in the case of errors we don't see the failed files at the end, but i think this is acceptable. If people really need to investigate output files, one can uncomment the FileUtils.deleteDirectory line.", "author": "martinrupp", "createdAt": "2020-04-22T18:22:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU5NzY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIxNjA3MA==", "url": "https://github.com/splicemachine/spliceengine/pull/3461#discussion_r413216070", "bodyText": "will do another change", "author": "martinrupp", "createdAt": "2020-04-22T18:23:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU5NzY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "78feb4af840d0cf88b288f3878fa380054ff4915", "chunk": "diff --git a/hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java b/hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java\nindex 61a706d2f7..33962dbd1a 100644\n--- a/hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java\n+++ b/hbase_sql/src/test/java/com/splicemachine/derby/impl/sql/execute/operations/ExternalTableIT.java\n\n@@ -54,17 +51,10 @@ public class ExternalTableIT extends SpliceUnitTest{\n     public static TestRule chain = RuleChain.outerRule(spliceClassWatcher)\n             .around(spliceSchemaWatcher);\n \n-    // this will cleanup all files created in the dir getExternalResourceDirectory()\n-    // (if you insert into external tables, you create files)\n-    @BeforeClass\n-    public static void cleanoutDirectory() {\n-        SpliceUnitTest.clearDirectory( getExternalResourceDirectory() );\n-    }\n-\n     @Test\n     public void testInvalidSyntaxParquet() throws Exception {\n         try {\n-            String tablePath = getExternalResourceDirectory()+\"/foobar/foobar\";\n+            String tablePath = getTempOutputDirectory() + \"/foobar/foobar\";\n             // Row Format not supported for Parquet\n             methodWatcher.executeUpdate(String.format(\"create external table foo (col1 int, col2 int) partitioned by (col1) \" +\n                     \"row format delimited fields terminated by ',' escaped by '\\\\' \" +\n"}}, {"oid": "78feb4af840d0cf88b288f3878fa380054ff4915", "url": "https://github.com/splicemachine/spliceengine/commit/78feb4af840d0cf88b288f3878fa380054ff4915", "message": "DB-9109 fix problems with parallel runs of tests all writing to xxx/target/external\n\nevery test that needs a temporary output dir will now on-demand create a temp directory,\nthat will be deleted automatically after the test has run, using the @After annotation of JUnit.", "committedDate": "2020-04-24T16:40:16Z", "type": "commit"}, {"oid": "c7c41c757d6f4733c74959e34b1b6c100f03d0cf", "url": "https://github.com/splicemachine/spliceengine/commit/c7c41c757d6f4733c74959e34b1b6c100f03d0cf", "message": "Merge remote-tracking branch 'origin/branch-3.0' into DB-9109-3.0", "committedDate": "2020-04-24T17:30:17Z", "type": "commit"}, {"oid": "c7c41c757d6f4733c74959e34b1b6c100f03d0cf", "url": "https://github.com/splicemachine/spliceengine/commit/c7c41c757d6f4733c74959e34b1b6c100f03d0cf", "message": "Merge remote-tracking branch 'origin/branch-3.0' into DB-9109-3.0", "committedDate": "2020-04-24T17:30:17Z", "type": "forcePushed"}, {"oid": "7c98fa107630c6c75d836d51d7b54678fdcbe1b8", "url": "https://github.com/splicemachine/spliceengine/commit/7c98fa107630c6c75d836d51d7b54678fdcbe1b8", "message": "DB-9109 fix / missing in directory leading to temp dir leak\n\ndelete temporary files created in two places", "committedDate": "2020-04-27T17:44:28Z", "type": "commit"}, {"oid": "4d9c0b75037e33311c34480dd1972a0453552c05", "url": "https://github.com/splicemachine/spliceengine/commit/4d9c0b75037e33311c34480dd1972a0453552c05", "message": "DB-9109 create temp files in /target/external so build is self-contained", "committedDate": "2020-04-27T17:44:33Z", "type": "commit"}]}