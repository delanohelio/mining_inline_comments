{"pr_number": 4635, "pr_title": "DB-10734 expose entire row history to foreign key child interceptor", "pr_createdAt": "2020-11-17T12:07:59Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/4635", "timeline": [{"oid": "db358110d45b127a42b03a23413c1d927c89fc14", "url": "https://github.com/splicemachine/spliceengine/commit/db358110d45b127a42b03a23413c1d927c89fc14", "message": "DB-10734 expose entire row history to foreign key child interceptor.", "committedDate": "2020-11-17T12:05:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3ODk4MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525178981", "bodyText": "I don't like this long pause here. Without the pause I think most of the times the next insert will happen before we have a chance to remove the rollback (specially if we have everything set up, the connection, prepared statement, etc), so I'd rather do that than introduce 30 more seconds of runtime on ITs", "author": "dgomezferro", "createdAt": "2020-11-17T14:04:55Z", "path": "splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java", "diffHunk": "@@ -706,6 +707,36 @@ public void multipleTablesReferencingSameTable() throws Exception {\n     }\n \n \n+    @Test\n+    public void rowHistoryIsReadyCorrectly() throws Exception {\n+            new TableCreator(conn)\n+                    .withCreate(\"create table P(col1 int, col2 varchar(2), col3 int, col4 int, primary key (col2, col4))\")\n+                    .withInsert(\"insert into P values(?,?,?,?)\")\n+                    .withRows(rows(row(1, \"a\", 1, 1)))\n+                    .create();\n+            new TableCreator(conn)\n+                    .withCreate(\"create table C (col1 int primary key, col2 varchar(2), col3 int, col4 int, constraint CHILD_FKEY foreign key(col2, col3) references P(col2, col4) )\")\n+                    .create();\n+            conn.commit();\n+\n+        try(Connection c = newNoAutoCommitConnection()) {\n+            c.setAutoCommit(false);\n+\n+            try (Statement statement = c.createStatement()) {\n+                statement.executeUpdate(\"update P set col1 = 42\");\n+            }\n+            Thread.sleep(30 * 1000);", "originalCommit": "db358110d45b127a42b03a23413c1d927c89fc14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzOTMyOA==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525239328", "bodyText": "done.", "author": "hatyo", "createdAt": "2020-11-17T15:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3ODk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "chunk": "diff --git a/splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java b/splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java\nindex fe320b4deb..58dd624305 100644\n--- a/splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java\n+++ b/splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java\n\n@@ -725,7 +725,6 @@ public class ForeignKeyCheckIT {\n             try (Statement statement = c.createStatement()) {\n                 statement.executeUpdate(\"update P set col1 = 42\");\n             }\n-            Thread.sleep(30 * 1000);\n             c.rollback();\n         }\n \n"}}, {"oid": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "url": "https://github.com/splicemachine/spliceengine/commit/62ae0a6d55f66923f3a4135c7e56991cb4e33928", "message": "DB-10734 address comments.", "committedDate": "2020-11-17T14:46:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2Mjc3Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525262773", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try(Connection c = newNoAutoCommitConnection()) {\n          \n          \n            \n                        c.setAutoCommit(false);\n          \n          \n            \n            \n          \n          \n            \n                        try (Statement statement = c.createStatement()) {\n          \n          \n            \n                            statement.executeUpdate(\"update P set col1 = 42\");\n          \n          \n            \n                        }\n          \n          \n            \n                        c.rollback();\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    try(Connection conn = newNoAutoCommitConnection()) {\n          \n          \n            \n                        try(Statement s = conn.createStatement()) {\n          \n          \n            \n                            s.executeUpdate(\"insert into C values (400, 'a', 1, 42)\"); // should not fail\n          \n          \n            \n                        }\n          \n          \n            \n                        conn.commit();\n          \n          \n            \n                    }\n          \n          \n            \n                    try(Connection c = newNoAutoCommitConnection();\n          \n          \n            \n                    Connection c2 = newNoAutoCommitConnection();\n          \n          \n            \n                    PreparedStatement ps = c2.preparedQuery(\"insert into C values (400, 'a', 1, 42)\")) {\n          \n          \n            \n                        c.setAutoCommit(false);\n          \n          \n            \n            \n          \n          \n            \n                        try (Statement statement = c.createStatement()) {\n          \n          \n            \n                            statement.executeUpdate(\"update P set col1 = 42\");\n          \n          \n            \n                        }\n          \n          \n            \n                        c.rollback();\n          \n          \n            \n                        \n          \n          \n            \n                        ps.executeUpdate();\n          \n          \n            \n                        c2.commit();\n          \n          \n            \n                    }", "author": "dgomezferro", "createdAt": "2020-11-17T15:41:40Z", "path": "splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java", "diffHunk": "@@ -706,6 +707,35 @@ public void multipleTablesReferencingSameTable() throws Exception {\n     }\n \n \n+    @Test\n+    public void rowHistoryIsReadyCorrectly() throws Exception {\n+            new TableCreator(conn)\n+                    .withCreate(\"create table P(col1 int, col2 varchar(2), col3 int, col4 int, primary key (col2, col4))\")\n+                    .withInsert(\"insert into P values(?,?,?,?)\")\n+                    .withRows(rows(row(1, \"a\", 1, 1)))\n+                    .create();\n+            new TableCreator(conn)\n+                    .withCreate(\"create table C (col1 int primary key, col2 varchar(2), col3 int, col4 int, constraint CHILD_FKEY foreign key(col2, col3) references P(col2, col4) )\")\n+                    .create();\n+            conn.commit();\n+\n+        try(Connection c = newNoAutoCommitConnection()) {\n+            c.setAutoCommit(false);\n+\n+            try (Statement statement = c.createStatement()) {\n+                statement.executeUpdate(\"update P set col1 = 42\");\n+            }\n+            c.rollback();\n+        }\n+\n+        try(Connection conn = newNoAutoCommitConnection()) {\n+            try(Statement s = conn.createStatement()) {\n+                s.executeUpdate(\"insert into C values (400, 'a', 1, 42)\"); // should not fail\n+            }\n+            conn.commit();\n+        }", "originalCommit": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2Mzg2OA==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525263868", "bodyText": "I think something like this would be better to reduce the window of time between the rollback and the update, but as it is it looks fine to me.", "author": "dgomezferro", "createdAt": "2020-11-17T15:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2Mjc3Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI3NDg1NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4635#discussion_r525274855", "bodyText": "setAutoCommit(false) is redundant", "author": "arnaud-splice", "createdAt": "2020-11-17T15:56:09Z", "path": "splice_machine/src/test/java/com/splicemachine/foreignkeys/ForeignKeyCheckIT.java", "diffHunk": "@@ -706,6 +707,35 @@ public void multipleTablesReferencingSameTable() throws Exception {\n     }\n \n \n+    @Test\n+    public void rowHistoryIsReadyCorrectly() throws Exception {\n+            new TableCreator(conn)\n+                    .withCreate(\"create table P(col1 int, col2 varchar(2), col3 int, col4 int, primary key (col2, col4))\")\n+                    .withInsert(\"insert into P values(?,?,?,?)\")\n+                    .withRows(rows(row(1, \"a\", 1, 1)))\n+                    .create();\n+            new TableCreator(conn)\n+                    .withCreate(\"create table C (col1 int primary key, col2 varchar(2), col3 int, col4 int, constraint CHILD_FKEY foreign key(col2, col3) references P(col2, col4) )\")\n+                    .create();\n+            conn.commit();\n+\n+        try(Connection c = newNoAutoCommitConnection()) {\n+            c.setAutoCommit(false);", "originalCommit": "62ae0a6d55f66923f3a4135c7e56991cb4e33928", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}