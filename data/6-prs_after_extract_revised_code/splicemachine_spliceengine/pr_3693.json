{"pr_number": 3693, "pr_title": "DB-9714 Support time travel SELECT statements with tx id", "pr_createdAt": "2020-06-17T20:41:44Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3693", "timeline": [{"oid": "49ecb0fde526b1f6baf19453462a6e2760dbe7bd", "url": "https://github.com/splicemachine/spliceengine/commit/49ecb0fde526b1f6baf19453462a6e2760dbe7bd", "message": "Support time travel SELECT statements with tx id.\n\n- add parser extensions to support AS OF clause.\n- only the tx id is supported.\n- propagate the transaction id down the execution tree to\n  TableScanOperation.\n- adapt code generation to pass the tx id to TableScanOperation\n  at runtime.\n- add tests", "committedDate": "2020-06-17T20:40:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4MjEzMA==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r442882130", "bodyText": "I think a dedicated parameter would be cleaner instead of shoehorning a long in a boolean parameter.", "author": "arnaud-splice", "createdAt": "2020-06-19T14:45:32Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java", "diffHunk": "@@ -196,36 +196,30 @@\n     private AggregateNode aggrForSpecialMaxScan;\n \n     private boolean isBulkDelete = false;\n+\n+    private long pastTxId = -1;\n+\n     @Override\n     public boolean isParallelizable(){\n         return false;\n     }\n \n     /**\n-     * Initializer for a table in a FROM list. Parameters are as follows:\n-     * <p/>\n-     * <ul>\n-     * <li>tableName            The name of the table</li>\n-     * <li>correlationName    The correlation name</li>\n-     * <li>derivedRCL        The derived column list</li>\n-     * <li>tableProperties    The Properties list associated with the table.</li>\n-     * </ul>\n-     * <p/>\n-     * <p>\n-     * - OR -\n-     * </p>\n-     * <p/>\n-     * <ul>\n-     * <li>tableName            The name of the table</li>\n-     * <li>correlationName    The correlation name</li>\n-     * <li>updateOrDelete    Table is being updated/deleted from. </li>\n-     * <li>derivedRCL        The derived column list</li>\n-     * </ul>\n+     * Initializer for a table in a FROM list.\n+     * @param tableName The name of the table\n+     * @param correlationName The correlation name\n+     * @param rclOrUD update/delete flag or result column list\n+     * @param propsOrRcl properties or result column list\n+     * @param isBulkDeleteOrTxId bulk delete flag or past tx id.\n      */\n     @Override\n-    public void init(Object tableName,Object correlationName,Object rclOrUD,Object propsOrRcl, Object isBulkDelete){\n+    public void init(Object tableName,Object correlationName,Object rclOrUD,Object propsOrRcl, Object isBulkDeleteOrTxId){\n+        if(isBulkDeleteOrTxId instanceof Boolean) {", "originalCommit": "49ecb0fde526b1f6baf19453462a6e2760dbe7bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzODc3NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r450338775", "bodyText": "I wanted to follow the convention, that's all. Anyway, I will look into rewriting this.", "author": "hatyo", "createdAt": "2020-07-06T16:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4MjEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "69c5064cfb517f637292c9a9198520b0667c49ff", "chunk": "diff --git a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\nindex 30039cfb63..a3724d4115 100644\n--- a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n+++ b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\n@@ -210,14 +210,16 @@ public class FromBaseTable extends FromTable {\n      * @param correlationName The correlation name\n      * @param rclOrUD update/delete flag or result column list\n      * @param propsOrRcl properties or result column list\n-     * @param isBulkDeleteOrTxId bulk delete flag or past tx id.\n+     * @param isBulkDelete bulk delete flag or past tx id.\n+     * @param pastTxId the ID of the past transaction.\n      */\n     @Override\n-    public void init(Object tableName,Object correlationName,Object rclOrUD,Object propsOrRcl, Object isBulkDeleteOrTxId){\n-        if(isBulkDeleteOrTxId instanceof Boolean) {\n-            this.isBulkDelete = (Boolean) isBulkDeleteOrTxId;\n-        }else if(isBulkDeleteOrTxId instanceof Long){\n-            this.pastTxId = (Long) isBulkDeleteOrTxId;\n+    public void init(Object tableName,Object correlationName,Object rclOrUD,Object propsOrRcl, Object isBulkDelete, Object pastTxId){\n+        this.isBulkDelete = (Boolean) isBulkDelete;\n+        if(pastTxId != null) {\n+            this.pastTxId = (Long) pastTxId;\n+        } else {\n+            this.pastTxId = -1;\n         }\n         init(tableName, correlationName, rclOrUD, propsOrRcl);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4Mzc4OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r442883789", "bodyText": "Please add a space before timeTravelTx.\nAlso, you could simply write \"as of\" instead, to echo the query, but that's unimportant.", "author": "arnaud-splice", "createdAt": "2020-06-19T14:48:36Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java", "diffHunk": "@@ -3410,7 +3408,11 @@ private String getClassName(String niceIndexName) throws StandardException {\n         if(niceIndexName!=null){\n             cName = \"IndexScan[\"+niceIndexName+\"]\";\n         }else{\n-            cName = \"TableScan[\"+getPrettyTableName()+\"]\";\n+            cName = \"TableScan[\"+getPrettyTableName();\n+            if(pastTxId >= 0){\n+                cName += \"timeTravelTx(\" + pastTxId + \")\";", "originalCommit": "49ecb0fde526b1f6baf19453462a6e2760dbe7bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMjMzNg==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r450332336", "bodyText": "I think the general term for this feature is time travel. Therefore I would like to keep using this term for consistency.", "author": "hatyo", "createdAt": "2020-07-06T16:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4Mzc4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMjU2NA==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r450332564", "bodyText": "I will fix the extra-space.", "author": "hatyo", "createdAt": "2020-07-06T16:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg4Mzc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "69c5064cfb517f637292c9a9198520b0667c49ff", "chunk": "diff --git a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\nindex 30039cfb63..a3724d4115 100644\n--- a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n+++ b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\n@@ -3410,7 +3412,7 @@ public class FromBaseTable extends FromTable {\n         }else{\n             cName = \"TableScan[\"+getPrettyTableName();\n             if(pastTxId >= 0){\n-                cName += \"timeTravelTx(\" + pastTxId + \")\";\n+                cName += \" timeTravelTx(\" + pastTxId + \")\";\n             }\n             cName += \"]\";\n         }\n"}}, {"oid": "69c5064cfb517f637292c9a9198520b0667c49ff", "url": "https://github.com/splicemachine/spliceengine/commit/69c5064cfb517f637292c9a9198520b0667c49ff", "message": "Addressed comments.", "committedDate": "2020-07-06T18:46:41Z", "type": "commit"}, {"oid": "ebae97a79a00a8a55d4c12047bc338909c2e06ec", "url": "https://github.com/splicemachine/spliceengine/commit/ebae97a79a00a8a55d4c12047bc338909c2e06ec", "message": "Merge remote-tracking branch 'origin/master' into DB-9714", "committedDate": "2020-07-06T18:47:54Z", "type": "commit"}, {"oid": "d9c4480364623cc4fb382a64183e0d2ec70f18d0", "url": "https://github.com/splicemachine/spliceengine/commit/d9c4480364623cc4fb382a64183e0d2ec70f18d0", "message": "Disallow time travel clause on external tables and views.\n\n- Add tests.", "committedDate": "2020-07-06T20:14:46Z", "type": "commit"}, {"oid": "16e8ee799170ab2ef72aba0f4c7084085e8514e2", "url": "https://github.com/splicemachine/spliceengine/commit/16e8ee799170ab2ef72aba0f4c7084085e8514e2", "message": "Fix SpotBug issues.", "committedDate": "2020-07-07T12:31:04Z", "type": "commit"}, {"oid": "20abe7ca758cf03a863edc5c47ee7b9fe5c0bef6", "url": "https://github.com/splicemachine/spliceengine/commit/20abe7ca758cf03a863edc5c47ee7b9fe5c0bef6", "message": "Add upgrade script to invalidate stored statements.", "committedDate": "2020-07-10T15:07:15Z", "type": "commit"}, {"oid": "2f544c86289748608ac77934e5bc1250f7fdfbae", "url": "https://github.com/splicemachine/spliceengine/commit/2f544c86289748608ac77934e5bc1250f7fdfbae", "message": "Merge remote-tracking branch 'origin/master' into DB-9714", "committedDate": "2020-07-10T15:12:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExOTM1NA==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r454119354", "bodyText": "We need to remove the closing bracket \"]\" for IndexScan here also", "author": "yxia92", "createdAt": "2020-07-14T05:56:39Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java", "diffHunk": "@@ -3411,7 +3422,11 @@ private String getClassName(String niceIndexName) throws StandardException {\n         if(niceIndexName!=null){\n             cName = \"IndexScan[\"+niceIndexName+\"]\";", "originalCommit": "2f544c86289748608ac77934e5bc1250f7fdfbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxNTA5MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r454415091", "bodyText": "Right, thanks!", "author": "hatyo", "createdAt": "2020-07-14T14:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExOTM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "a84933d44be77758a4b1603cd9ce7b2e841f569c", "chunk": "diff --git a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\nindex 1c12e4e769..b40eb5980c 100644\n--- a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n+++ b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\n@@ -3420,7 +3423,7 @@ public class FromBaseTable extends FromTable {\n     private String getClassName(String niceIndexName) throws StandardException {\n         String cName = \"\";\n         if(niceIndexName!=null){\n-            cName = \"IndexScan[\"+niceIndexName+\"]\";\n+            cName = \"IndexScan[\"+niceIndexName;\n         }else{\n             cName = \"TableScan[\"+getPrettyTableName();\n             if(pastTxId >= 0){\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNDEzMQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r454124131", "bodyText": "Can you add check for tableDescriptor.getTableType()==TableDescriptor.WITH_TYPE also?", "author": "yxia92", "createdAt": "2020-07-14T06:10:21Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java", "diffHunk": "@@ -1042,6 +1038,17 @@ public ResultSetNode bindNonVTITables(DataDictionary dataDictionary,\n                                           FromList fromListParam)throws StandardException{\n         TableDescriptor tableDescriptor=bindTableDescriptor();\n \n+        int tableType = tableDescriptor.getTableType();\n+        if(pastTxId >= 0)\n+        {\n+            if(tableType==TableDescriptor.VIEW_TYPE) {", "originalCommit": "2f544c86289748608ac77934e5bc1250f7fdfbae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzMjkxOQ==", "url": "https://github.com/splicemachine/spliceengine/pull/3693#discussion_r454432919", "bodyText": "Sure, I added a check and a test as well.", "author": "hatyo", "createdAt": "2020-07-14T15:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNDEzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a84933d44be77758a4b1603cd9ce7b2e841f569c", "chunk": "diff --git a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\nindex 1c12e4e769..b40eb5980c 100644\n--- a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n+++ b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/FromBaseTable.java\n\n@@ -1047,6 +1047,9 @@ public class FromBaseTable extends FromTable {\n             else if(tableType==TableDescriptor.EXTERNAL_TYPE) {\n                 throw StandardException.newException(SQLState.LANG_ILLEGAL_TIME_TRAVEL, \"external tables\");\n             }\n+            else if(tableType==TableDescriptor.WITH_TYPE) {\n+                throw StandardException.newException(SQLState.LANG_ILLEGAL_TIME_TRAVEL, \"common table expressions\");\n+            }\n         }\n \n         if(tableDescriptor.getTableType()==TableDescriptor.VTI_TYPE){\n"}}, {"oid": "a84933d44be77758a4b1603cd9ce7b2e841f569c", "url": "https://github.com/splicemachine/spliceengine/commit/a84933d44be77758a4b1603cd9ce7b2e841f569c", "message": "Addressed further comments.", "committedDate": "2020-07-14T15:14:29Z", "type": "commit"}, {"oid": "2405dcb59774fecad245895185f80c6170108e7e", "url": "https://github.com/splicemachine/spliceengine/commit/2405dcb59774fecad245895185f80c6170108e7e", "message": "Merge remote-tracking branch 'origin/master' into DB-9714", "committedDate": "2020-07-14T15:15:31Z", "type": "commit"}, {"oid": "8e5046cfd0896b6fceb5f5ca3ecac6c62bb4a9bf", "url": "https://github.com/splicemachine/spliceengine/commit/8e5046cfd0896b6fceb5f5ca3ecac6c62bb4a9bf", "message": "Merge remote-tracking branch 'origin/master' into DB-9714", "committedDate": "2020-07-16T08:57:05Z", "type": "commit"}]}