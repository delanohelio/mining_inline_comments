{"pr_number": 4105, "pr_title": "DB-10195 Support 2 schemas with the same name in 2 different DBs", "pr_createdAt": "2020-09-09T15:56:47Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/4105", "timeline": [{"oid": "abcedeadf685b103279d8825531f3755c88b1fed", "url": "https://github.com/splicemachine/spliceengine/commit/abcedeadf685b103279d8825531f3755c88b1fed", "message": "DB-10194 Multidatabase first commit", "committedDate": "2020-09-07T13:21:46Z", "type": "commit"}, {"oid": "12ec3394e5f2a9f304a861b887d80bbd8851c480", "url": "https://github.com/splicemachine/spliceengine/commit/12ec3394e5f2a9f304a861b887d80bbd8851c480", "message": "DB-10194 Support 'show databases' in sqlshell", "committedDate": "2020-09-07T13:21:58Z", "type": "commit"}, {"oid": "9501b63d987c662b8fa1183ae24f0e84bc8c4351", "url": "https://github.com/splicemachine/spliceengine/commit/9501b63d987c662b8fa1183ae24f0e84bc8c4351", "message": "DB-10194 Create new database with correct uuid. New schemas use that uuid", "committedDate": "2020-09-07T13:22:02Z", "type": "commit"}, {"oid": "9d6262470187844dbb180354b71a4e60b9bb64aa", "url": "https://github.com/splicemachine/spliceengine/commit/9d6262470187844dbb180354b71a4e60b9bb64aa", "message": "DB-10194 Use placeholders in database authorizationId", "committedDate": "2020-09-07T13:22:08Z", "type": "commit"}, {"oid": "2f2ccd4b963bd8c79109c5f524990a3a0119c478", "url": "https://github.com/splicemachine/spliceengine/commit/2f2ccd4b963bd8c79109c5f524990a3a0119c478", "message": "DB-10194 Fix spotbugs", "committedDate": "2020-09-07T17:26:57Z", "type": "commit"}, {"oid": "71fe88feb22ffbeb20c871532504e87e5a757229", "url": "https://github.com/splicemachine/spliceengine/commit/71fe88feb22ffbeb20c871532504e87e5a757229", "message": "DB-10194 Fix more spotbugs", "committedDate": "2020-09-08T08:24:51Z", "type": "commit"}, {"oid": "30aa48bc30f59b27c439b934bf1a377a4258e43c", "url": "https://github.com/splicemachine/spliceengine/commit/30aa48bc30f59b27c439b934bf1a377a4258e43c", "message": "DB-10194 Fix even more spotbugs", "committedDate": "2020-09-08T13:21:36Z", "type": "commit"}, {"oid": "81fd9a1d8ea4d7ee52ae284d5e4e0e4c5499b5e1", "url": "https://github.com/splicemachine/spliceengine/commit/81fd9a1d8ea4d7ee52ae284d5e4e0e4c5499b5e1", "message": "DB-10194 Fix even more spotbugs", "committedDate": "2020-09-08T13:21:36Z", "type": "commit"}, {"oid": "f0c0cfbec18be7569af9a4a4bca611e7679f83e0", "url": "https://github.com/splicemachine/spliceengine/commit/f0c0cfbec18be7569af9a4a4bca611e7679f83e0", "message": "DB-10194 Fix aggressive assert", "committedDate": "2020-09-09T09:40:56Z", "type": "commit"}, {"oid": "27f5ec0472c524f1a99f1f05cd26bbea1062cf92", "url": "https://github.com/splicemachine/spliceengine/commit/27f5ec0472c524f1a99f1f05cd26bbea1062cf92", "message": "DB-10195 Support 2 schemas with the same name in 2 different DBs", "committedDate": "2020-09-09T14:25:23Z", "type": "commit"}, {"oid": "4f985a8b11229fae95275b0e28d7b46b7fba6ce2", "url": "https://github.com/splicemachine/spliceengine/commit/4f985a8b11229fae95275b0e28d7b46b7fba6ce2", "message": "DB-10195 Fix spotbugs", "committedDate": "2020-09-09T15:48:31Z", "type": "commit"}, {"oid": "7d23dc335a08831df0321390090f76c856ad2051", "url": "https://github.com/splicemachine/spliceengine/commit/7d23dc335a08831df0321390090f76c856ad2051", "message": "DB-10195 Fix more spotbugs", "committedDate": "2020-09-09T16:55:58Z", "type": "commit"}, {"oid": "f08773ff21d2fbdf19b0d02f13386c096c2610de", "url": "https://github.com/splicemachine/spliceengine/commit/f08773ff21d2fbdf19b0d02f13386c096c2610de", "message": "DB-10195 Fix error", "committedDate": "2020-09-10T09:43:20Z", "type": "commit"}, {"oid": "f1af91d73a60ed8d90c450558c8914589c9f4dc6", "url": "https://github.com/splicemachine/spliceengine/commit/f1af91d73a60ed8d90c450558c8914589c9f4dc6", "message": "DB-10240 Rework test infra to accept DB parameter in connections", "committedDate": "2020-09-11T10:18:55Z", "type": "commit"}, {"oid": "be2db7f3bf7f57073dad0083151de70943b705be", "url": "https://github.com/splicemachine/spliceengine/commit/be2db7f3bf7f57073dad0083151de70943b705be", "message": "DB-10240 Fix CheckConstraintIT", "committedDate": "2020-09-11T11:52:03Z", "type": "commit"}, {"oid": "d7927e1a666d9a325dac7e27bf03a38953e54fe6", "url": "https://github.com/splicemachine/spliceengine/commit/d7927e1a666d9a325dac7e27bf03a38953e54fe6", "message": "DB-10240 Fix more tests", "committedDate": "2020-09-11T12:33:19Z", "type": "commit"}, {"oid": "5c80da9107e10a00e7b6bc770c6e0f3a2a9bdd41", "url": "https://github.com/splicemachine/spliceengine/commit/5c80da9107e10a00e7b6bc770c6e0f3a2a9bdd41", "message": "DB-10241 Remove old pass", "committedDate": "2020-09-11T12:49:21Z", "type": "commit"}, {"oid": "b49570e90b333971036983c16c737e2f51e7feff", "url": "https://github.com/splicemachine/spliceengine/commit/b49570e90b333971036983c16c737e2f51e7feff", "message": "DB-10240 Fix error with getDefaultLocalURL", "committedDate": "2020-09-14T09:45:52Z", "type": "commit"}, {"oid": "8db5892e51a5a60caca51a487e028a6486aed9fe", "url": "https://github.com/splicemachine/spliceengine/commit/8db5892e51a5a60caca51a487e028a6486aed9fe", "message": "Merge branch 'DB-10193' into DB-10195", "committedDate": "2020-09-14T17:23:31Z", "type": "forcePushed"}, {"oid": "770fb13a672d9c5c92e2dd7bf5a406e9bbfc9a83", "url": "https://github.com/splicemachine/spliceengine/commit/770fb13a672d9c5c92e2dd7bf5a406e9bbfc9a83", "message": "Merge branch 'DB-10193' into DB-10195", "committedDate": "2020-09-14T17:25:56Z", "type": "forcePushed"}, {"oid": "b49570e90b333971036983c16c737e2f51e7feff", "url": "https://github.com/splicemachine/spliceengine/commit/b49570e90b333971036983c16c737e2f51e7feff", "message": "DB-10240 Fix error with getDefaultLocalURL", "committedDate": "2020-09-14T09:45:52Z", "type": "forcePushed"}, {"oid": "c971712a98b1b18024c6e7b39f28b5f2108d949c", "url": "https://github.com/splicemachine/spliceengine/commit/c971712a98b1b18024c6e7b39f28b5f2108d949c", "message": "Merge remote-tracking branch 'origin/DB-10193' into DB-10195", "committedDate": "2020-09-14T22:21:43Z", "type": "commit"}, {"oid": "ff2e8349e2c2da05b0aa2031fb117111bc3e2524", "url": "https://github.com/splicemachine/spliceengine/commit/ff2e8349e2c2da05b0aa2031fb117111bc3e2524", "message": "Merge remote-tracking branch 'origin/DB-10193' into DB-10195", "committedDate": "2020-09-16T16:26:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NTk1MQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4105#discussion_r490045951", "bodyText": "We should check not only SysSchemaDescriptor and SysIBMSchemaDescriptor here, but also the below list of system schemas:\n    protected SchemaDescriptor sysIBMADMSchemaDesc;\n    protected SchemaDescriptor systemUtilSchemaDesc;\n    protected SchemaDescriptor sysFunSchemaDesc;\n    protected SchemaDescriptor sysViewSchemaDesc;\n\nOtherwise, we cannot query objects in these schemas from other databases.", "author": "yxia92", "createdAt": "2020-09-17T07:57:56Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java", "diffHunk": "@@ -994,6 +994,9 @@ public SchemaDescriptor getSchemaDescriptor(String schemaName,\n         if(tc==null){\n             tc=getTransactionCompile();\n         }\n+        if (dbId == null) {\n+            dbId = getLCC().getDatabaseId();\n+        }\n \n         if(getSystemSchemaDescriptor().getSchemaName().equals(schemaName)){", "originalCommit": "ff2e8349e2c2da05b0aa2031fb117111bc3e2524", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3MjYyNg==", "url": "https://github.com/splicemachine/spliceengine/pull/4105#discussion_r491972626", "bodyText": "Done", "author": "arnaud-splice", "createdAt": "2020-09-21T11:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NTk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9883778ad9ef42aafa8952dcb69553e6194d7c99", "chunk": "diff --git a/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java b/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java\nindex ca06a42bf0..723337751b 100644\n--- a/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java\n+++ b/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java\n\n@@ -998,16 +998,28 @@ public abstract class DataDictionaryImpl extends BaseDataDictionary{\n             dbId = getLCC().getDatabaseId();\n         }\n \n-        if(getSystemSchemaDescriptor().getSchemaName().equals(schemaName)){\n-            return getSystemSchemaDescriptor();\n-        }else if(getSysIBMSchemaDescriptor().getSchemaName().equals(schemaName)){\n-            // oh you are really asking SYSIBM, if this db is soft upgraded \n-            // from pre 52, I may have 2 versions for you, one on disk \n-            // (user SYSIBM), one imaginary (builtin). The\n-            // one on disk (real one, if it exists), should always be used.\n-            if(dictionaryVersion.checkVersion(DataDictionary.DD_VERSION_CS_5_2,null)){\n-                return getSysIBMSchemaDescriptor();\n-            }\n+        switch (schemaName) {\n+            case SchemaDescriptor.STD_SYSTEM_SCHEMA_NAME:\n+                return getSystemSchemaDescriptor();\n+            case SchemaDescriptor.IBM_SYSTEM_SCHEMA_NAME:\n+                // oh you are really asking SYSIBM, if this db is soft upgraded\n+                // from pre 52, I may have 2 versions for you, one on disk\n+                // (user SYSIBM), one imaginary (builtin). The\n+                // one on disk (real one, if it exists), should always be used.\n+                if(dictionaryVersion.checkVersion(DataDictionary.DD_VERSION_CS_5_2,null)){\n+                    return getSysIBMSchemaDescriptor();\n+                }\n+                break;\n+            case SchemaDescriptor.IBM_SYSTEM_ADM_SCHEMA_NAME:\n+                return sysIBMADMSchemaDesc;\n+            case SchemaDescriptor.STD_SYSTEM_UTIL_SCHEMA_NAME:\n+                return getSystemUtilSchemaDescriptor();\n+            case SchemaDescriptor.IBM_SYSTEM_FUN_SCHEMA_NAME:\n+                return getSysFunSchemaDescriptor();\n+            case SchemaDescriptor.STD_SYSTEM_VIEW_SCHEMA_NAME:\n+                return sysViewSchemaDesc;\n+            default:\n+                break;\n         }\n \n         /*\n"}}, {"oid": "9883778ad9ef42aafa8952dcb69553e6194d7c99", "url": "https://github.com/splicemachine/spliceengine/commit/9883778ad9ef42aafa8952dcb69553e6194d7c99", "message": "IBEX-10195 Address review", "committedDate": "2020-09-21T11:36:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyOTI1OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4105#discussion_r492629259", "bodyText": "code to get lcc.getDatabaseId()", "author": "martinrupp", "createdAt": "2020-09-22T10:27:26Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/ddl/DDLUtils.java", "diffHunk": "@@ -376,9 +377,23 @@ public static void preAlterStats(DDLMessage.DDLChange change, DataDictionary dd,\n     public static void preDropSchema(DDLMessage.DDLChange change, DataDictionary dd, DependencyManager dm) throws StandardException {\n         if (LOG.isDebugEnabled())\n             SpliceLogUtils.debug(LOG,\"preDropSchema with change=%s\",change);\n-        dd.getDataDictionaryCache().schemaCacheRemove(change.getDropSchema().getSchemaName());\n-        dd.getDataDictionaryCache().oidSchemaCacheRemove(ProtoUtil.getDerbyUUID(change.getDropSchema().getSchemaUUID()));\n-\n+        SpliceTransactionResourceImpl transactionResource = null;\n+        boolean prepared = false;\n+        try {\n+            TxnView txn = DDLUtils.getLazyTransaction(change.getTxnId());\n+            transactionResource = new SpliceTransactionResourceImpl();\n+            prepared = transactionResource.marshallTransaction(txn);\n+            LanguageConnectionContext lcc = transactionResource.getLcc();", "originalCommit": "9883778ad9ef42aafa8952dcb69553e6194d7c99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}