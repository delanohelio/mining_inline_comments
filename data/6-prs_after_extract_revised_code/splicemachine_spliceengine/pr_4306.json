{"pr_number": 4306, "pr_title": "DB-10448: improve restore performance", "pr_createdAt": "2020-10-15T23:14:31Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/4306", "timeline": [{"oid": "d5f7fb66dcc5002504beab2556a97f639d8f4d92", "url": "https://github.com/splicemachine/spliceengine/commit/d5f7fb66dcc5002504beab2556a97f639d8f4d92", "message": "DB-10448: improve restore performance", "committedDate": "2020-10-15T22:58:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyMzg1NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508323855", "bodyText": "If we are sleeping, can you use PipelineUtils.getPauseTime() or something similar to do an exponential backoff and add jitter?", "author": "dgomezferro", "createdAt": "2020-10-20T08:51:10Z", "path": "hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java", "diffHunk": "@@ -315,10 +317,17 @@ public static long nextSequenceId(String counterNode) throws IOException{\n \t\t */\n \n         RecoverableZooKeeper rzk=ZkUtils.getRecoverableZooKeeper();\n-        int maxTries=10;\n+        int maxTries=Integer.MAX_VALUE;\n         int tries=0;\n         while(tries<=maxTries){\n             tries++;\n+            if (tries > 1) {\n+                try {\n+                    Thread.sleep(50);", "originalCommit": "d5f7fb66dcc5002504beab2556a97f639d8f4d92", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "chunk": "diff --git a/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java b/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java\nindex 94a1c7ea20..88ab5acbc7 100644\n--- a/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java\n+++ b/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java\n\n@@ -323,7 +324,7 @@ public class ZkUtils{\n             tries++;\n             if (tries > 1) {\n                 try {\n-                    Thread.sleep(50);\n+                    Thread.sleep(PipelineUtils.getPauseTime(tries,10));\n                 } catch (Exception e) {\n                     throw new IOException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNTIzOA==", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508325238", "bodyText": "Not used, remove", "author": "dgomezferro", "createdAt": "2020-10-20T08:53:13Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java", "diffHunk": "@@ -151,16 +155,25 @@ protected void create(boolean isExternal,\n         }\n         try{\n //            ((SpliceTransaction)rawtran).elevate(Bytes.toBytes(Long.toString(containerId)));\n+\n+            TxnView txnView = null;\n+            if (rawtran instanceof SpliceTransaction) {\n+                txnView = ((SpliceTransaction) rawtran).getTxnInformation();\n+            }\n+            else if (rawtran instanceof SpliceTransactionView) {\n+                txnView = ((SpliceTransactionView) rawtran).getTxnInformation();\n+            }", "originalCommit": "d5f7fb66dcc5002504beab2556a97f639d8f4d92", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "chunk": "diff --git a/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java b/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java\nindex 50f756c3ba..2099dd42a5 100644\n--- a/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java\n+++ b/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java\n\n@@ -154,15 +154,6 @@ public class IndexConglomerate extends SpliceConglomerate{\n             SanityManager.ASSERT((nUniqueColumns==nKeyFields) || (nUniqueColumns==(nKeyFields-1)));\n         }\n         try{\n-//            ((SpliceTransaction)rawtran).elevate(Bytes.toBytes(Long.toString(containerId)));\n-\n-            TxnView txnView = null;\n-            if (rawtran instanceof SpliceTransaction) {\n-                txnView = ((SpliceTransaction) rawtran).getTxnInformation();\n-            }\n-            else if (rawtran instanceof SpliceTransactionView) {\n-                txnView = ((SpliceTransactionView) rawtran).getTxnInformation();\n-            }\n             ConglomerateUtils.createConglomerate(isExternal,\n                     containerId,\n                     this,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNTg2OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508325869", "bodyText": "TxnView does not seem to be used in the following code. Looks like line 169 covers both cases here.", "author": "ascend1", "createdAt": "2020-10-20T08:54:17Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java", "diffHunk": "@@ -151,16 +155,25 @@ protected void create(boolean isExternal,\n         }\n         try{\n //            ((SpliceTransaction)rawtran).elevate(Bytes.toBytes(Long.toString(containerId)));\n+\n+            TxnView txnView = null;\n+            if (rawtran instanceof SpliceTransaction) {\n+                txnView = ((SpliceTransaction) rawtran).getTxnInformation();\n+            }\n+            else if (rawtran instanceof SpliceTransactionView) {\n+                txnView = ((SpliceTransactionView) rawtran).getTxnInformation();\n+            }", "originalCommit": "d5f7fb66dcc5002504beab2556a97f639d8f4d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNDQ4NA==", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r509814484", "bodyText": "This has been deleted", "author": "jyuanca", "createdAt": "2020-10-22T00:43:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNTg2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "chunk": "diff --git a/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java b/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java\nindex 50f756c3ba..2099dd42a5 100644\n--- a/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java\n+++ b/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/btree/IndexConglomerate.java\n\n@@ -154,15 +154,6 @@ public class IndexConglomerate extends SpliceConglomerate{\n             SanityManager.ASSERT((nUniqueColumns==nKeyFields) || (nUniqueColumns==(nKeyFields-1)));\n         }\n         try{\n-//            ((SpliceTransaction)rawtran).elevate(Bytes.toBytes(Long.toString(containerId)));\n-\n-            TxnView txnView = null;\n-            if (rawtran instanceof SpliceTransaction) {\n-                txnView = ((SpliceTransaction) rawtran).getTxnInformation();\n-            }\n-            else if (rawtran instanceof SpliceTransactionView) {\n-                txnView = ((SpliceTransactionView) rawtran).getTxnInformation();\n-            }\n             ConglomerateUtils.createConglomerate(isExternal,\n                     containerId,\n                     this,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNzMyOA==", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r508327328", "bodyText": "Is this common in zk code? I'm not very familiar with this but loop forever gives a strange feel...", "author": "ascend1", "createdAt": "2020-10-20T08:56:21Z", "path": "hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java", "diffHunk": "@@ -315,10 +317,17 @@ public static long nextSequenceId(String counterNode) throws IOException{\n \t\t */\n \n         RecoverableZooKeeper rzk=ZkUtils.getRecoverableZooKeeper();\n-        int maxTries=10;\n+        int maxTries=Integer.MAX_VALUE;", "originalCommit": "d5f7fb66dcc5002504beab2556a97f639d8f4d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxNDU2Ng==", "url": "https://github.com/splicemachine/spliceengine/pull/4306#discussion_r509814566", "bodyText": "Retry until successful.", "author": "jyuanca", "createdAt": "2020-10-22T00:43:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNzMyOA=="}], "type": "inlineReview", "revised_code": {"commit": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "chunk": "diff --git a/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java b/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java\nindex 94a1c7ea20..88ab5acbc7 100644\n--- a/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java\n+++ b/hbase_storage/src/main/java/com/splicemachine/hbase/ZkUtils.java\n\n@@ -323,7 +324,7 @@ public class ZkUtils{\n             tries++;\n             if (tries > 1) {\n                 try {\n-                    Thread.sleep(50);\n+                    Thread.sleep(PipelineUtils.getPauseTime(tries,10));\n                 } catch (Exception e) {\n                     throw new IOException(e);\n                 }\n"}}, {"oid": "e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "url": "https://github.com/splicemachine/spliceengine/commit/e31009f9ea5fa4a9aef0d1d78b125c79dc328271", "message": "incorporate review comments", "committedDate": "2020-10-20T15:57:15Z", "type": "commit"}]}