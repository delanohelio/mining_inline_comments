{"pr_number": 3538, "pr_title": "DB-9504 Add NativeSpark support for NotNode", "pr_createdAt": "2020-05-05T18:39:27Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/3538", "timeline": [{"oid": "1e09c91c373d2be25fe29ba7106a72a697ff936c", "url": "https://github.com/splicemachine/spliceengine/commit/1e09c91c373d2be25fe29ba7106a72a697ff936c", "message": "DB-9504 Add NativeSpark support for NotNode", "committedDate": "2020-05-05T18:38:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNDc0NA==", "url": "https://github.com/splicemachine/spliceengine/pull/3538#discussion_r420804744", "bodyText": "i think this is effectively the same code as lines 355-357. SimpleStringOperatorNode doesn't override getOperand, and even if - if i understand java inheritance correctly - i think uop.getOperand() would call the same as (((SimpleStringOperatorNode)uop).getOperand() .\nso i think lines 355-361 can be replaced by\nelse if (operand instanceof SimpleStringOperatorNode || operand instanceof NotNode) {\n    return format(\"%s(%s) \", operatorString, opToString2(uop.getOperand(), vars));\n}", "author": "martinrupp", "createdAt": "2020-05-06T13:48:26Z", "path": "db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OperatorToString.java", "diffHunk": "@@ -356,6 +356,9 @@ else if (operand instanceof SimpleStringOperatorNode) {\n                     SimpleStringOperatorNode sso = (SimpleStringOperatorNode) operand;\n                     return format(\"%s(%s) \", operatorString, opToString2(sso.getOperand(), vars));\n                 }\n+                else if (operand instanceof NotNode) {", "originalCommit": "1e09c91c373d2be25fe29ba7106a72a697ff936c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTc2Ng==", "url": "https://github.com/splicemachine/spliceengine/pull/3538#discussion_r420851766", "bodyText": "Good eye, I applied that change.", "author": "dgomezferro", "createdAt": "2020-05-06T14:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNDc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "2beb3ae701eb6c82ec355ed86d5e0938b6dd158f", "chunk": "diff --git a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OperatorToString.java b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OperatorToString.java\nindex 323d8e98a2..00cb6cde1c 100644\n--- a/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OperatorToString.java\n+++ b/db-engine/src/main/java/com/splicemachine/db/impl/sql/compile/OperatorToString.java\n\n@@ -352,11 +352,8 @@ public class OperatorToString {\n                     else if (operatorString.equals(\"ABS/ABSVAL\"))\n                         operatorString = \"abs\";\n                 }\n-                else if (operand instanceof SimpleStringOperatorNode) {\n-                    SimpleStringOperatorNode sso = (SimpleStringOperatorNode) operand;\n-                    return format(\"%s(%s) \", operatorString, opToString2(sso.getOperand(), vars));\n-                }\n-                else if (operand instanceof NotNode) {\n+                else if (operand instanceof SimpleStringOperatorNode ||\n+                         operand instanceof NotNode) {\n                     return format(\"%s(%s) \", operatorString, opToString2(uop.getOperand(), vars));\n                 }\n                 else\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwODE5Nw==", "url": "https://github.com/splicemachine/spliceengine/pull/3538#discussion_r420808197", "bodyText": "do we test this case?", "author": "martinrupp", "createdAt": "2020-05-06T13:52:43Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/utils/StatisticsOperation.java", "diffHunk": "@@ -126,6 +126,9 @@ else if (storedAs.equals(\"O\"))\n             } else {\n                 statsDataSet = scanSetBuilder.buildDataSet(scope).map(new CloneFunction<>(operationContext));\n             }\n+            if(statsDataSet.partitions() == 0) {", "originalCommit": "1e09c91c373d2be25fe29ba7106a72a697ff936c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg0MDE5Ng==", "url": "https://github.com/splicemachine/spliceengine/pull/3538#discussion_r420840196", "bodyText": "Yes, ExternalTableIT.collectStats() was failing due to this since DB-9369 was merged", "author": "dgomezferro", "createdAt": "2020-05-06T14:33:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwODE5Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2beb3ae701eb6c82ec355ed86d5e0938b6dd158f", "url": "https://github.com/splicemachine/spliceengine/commit/2beb3ae701eb6c82ec355ed86d5e0938b6dd158f", "message": "DB-9504 Address reviews", "committedDate": "2020-05-06T14:35:30Z", "type": "commit"}]}