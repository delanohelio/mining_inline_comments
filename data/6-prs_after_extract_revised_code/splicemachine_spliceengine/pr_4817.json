{"pr_number": 4817, "pr_title": "DB-10976 Add SYSCAT.INDEXCOLUSE system view", "pr_createdAt": "2020-12-09T14:47:25Z", "pr_url": "https://github.com/splicemachine/spliceengine/pull/4817", "timeline": [{"oid": "0c3d5ee460c98fea9646584e21cd4aee50b94e29", "url": "https://github.com/splicemachine/spliceengine/commit/0c3d5ee460c98fea9646584e21cd4aee50b94e29", "message": "DB-10976 Add SYSCAT.INDEXCOLUSE system view", "committedDate": "2020-12-09T14:43:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1ODUxOQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4817#discussion_r539458519", "bodyText": "If it already exists, skip dropping and recreating the view.", "author": "jyuanca", "createdAt": "2020-12-09T16:33:15Z", "path": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java", "diffHunk": "@@ -351,6 +351,25 @@ public void createKeyColumnUseViewInSysIBM(TransactionController tc) throws Stan\n         SpliceLogUtils.info(LOG, \"View SYSKEYCOLUSE in SYSIBM is created!\");\n     }\n \n+    public void createIndexColumnUseViewInSysCat(TransactionController tc) throws StandardException {\n+        TableDescriptor td = getTableDescriptor(\"INDEXCOLUSE\", sysCatSchemaDesc, tc);\n+\n+        // drop it if it exists\n+        if (td != null) {\n+            ViewDescriptor vd = getViewDescriptor(td);\n+\n+            // drop the view deifnition\n+            dropAllColumnDescriptors(td.getUUID(), tc);\n+            dropViewDescriptor(vd, tc);\n+            dropTableDescriptor(td, sysCatSchemaDesc, tc);\n+        }\n+", "originalCommit": "0c3d5ee460c98fea9646584e21cd4aee50b94e29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1OTkyMg==", "url": "https://github.com/splicemachine/spliceengine/pull/4817#discussion_r539459922", "bodyText": "I accidentally approved it. Changing to \"request cahnges\"", "author": "jyuanca", "createdAt": "2020-12-09T16:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1ODUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ5Nzk3MA==", "url": "https://github.com/splicemachine/spliceengine/pull/4817#discussion_r539497970", "bodyText": "Hi Jun, what do you mean by \"recreating the view\"? I mean, if the existing one is not dropped, we cannot create the view with the same name (createOneSystemView fails). Or do I miss anything here?", "author": "ascend1", "createdAt": "2020-12-09T17:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1ODUxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU1Nzc2OQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4817#discussion_r539557769", "bodyText": "Hi Jun, as we talked previously, I tested doing an upgrade from 3.0.0.1989 to 3.2.0.1989 locally. Here is what I did:\n\ncompile DB-10976-3.0 branch and start a cdh6.3.0 cluster\ncheck SYSCAT.INDEXCOLUSE is there and query on it works (108 rows in fresh start state)\ncopy platform_it/target to another place\ncompile DB-10976 branch and start a cdh6.3.0 cluster, verify its version and the existence of SYSCAT_INDEXCOLUSE\nshutdown the cluster and replace platform_it/target with the previously copied 3.0.0.1989 version\nstart cdh6.3.0 cluster again using -b on the 3.0 persistent files\ncluster started normally and verify the existence of SYSCAT_INDEXCOLUSE , query on it should return 108 rows", "author": "ascend1", "createdAt": "2020-12-09T18:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1ODUxOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5c0b0626e4e1d5dccb540a109b7208a41b2f70e1", "url": "https://github.com/splicemachine/spliceengine/commit/5c0b0626e4e1d5dccb540a109b7208a41b2f70e1", "message": "DB-10976 Fix isAscending() and isDescending() in IndexDescriptorImpl", "committedDate": "2020-12-09T18:01:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYzMDY3NQ==", "url": "https://github.com/splicemachine/spliceengine/pull/4817#discussion_r539630675", "bodyText": "The code looks good.  I'm just wondering in the base code why both isAscending and isDescending return false for an out-of-range column.  I would assume that since ascending is the default, an out-of-range column should return true (unless we want to catch the out-of-range condition and throw an exception.", "author": "msirek", "createdAt": "2020-12-09T20:38:47Z", "path": "db-engine/src/main/java/com/splicemachine/db/catalog/types/IndexDescriptorImpl.java", "diffHunk": "@@ -259,15 +259,15 @@ public String indexType()\n \t/** @see IndexDescriptor#isAscending */\n \tpublic boolean isAscending(Integer keyColumnPosition) {\n \t\tint i = keyColumnPosition - 1;\n-\t\tif (i < 0 || i >= baseColumnPositions.length)\n+\t\tif (i < 0 || i >= isAscending.length)\n \t\t\treturn false;", "originalCommit": "5c0b0626e4e1d5dccb540a109b7208a41b2f70e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3Mjg0Mw==", "url": "https://github.com/splicemachine/spliceengine/pull/4817#discussion_r539672843", "bodyText": "Indeed, that's a good point. I'll take a look at the call sites of these two functions and file a Jira if there is no special logic relying on the false return values. Probably we should throw than returning a default to prevent subtle bugs.", "author": "ascend1", "createdAt": "2020-12-09T21:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYzMDY3NQ=="}], "type": "inlineReview", "revised_code": null}]}