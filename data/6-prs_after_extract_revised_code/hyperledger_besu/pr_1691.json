{"pr_number": 1691, "pr_title": "Create Qbft Prepare and Commit messages", "pr_createdAt": "2020-12-11T03:24:32Z", "pr_url": "https://github.com/hyperledger/besu/pull/1691", "timeline": [{"oid": "0f6c3935bd8e7f5527001ff90fc5796b56ab93c0", "url": "https://github.com/hyperledger/besu/commit/0f6c3935bd8e7f5527001ff90fc5796b56ab93c0", "message": "Move IbftEvents to common\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T02:15:21Z", "type": "commit"}, {"oid": "91c27a4a1e96e058045153440aa11d2a9c2fe133", "url": "https://github.com/hyperledger/besu/commit/91c27a4a1e96e058045153440aa11d2a9c2fe133", "message": "Merge remote-tracking branch 'upstream/master' into qbft_events\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T02:33:39Z", "type": "commit"}, {"oid": "82b2c0e0b05758ed227a84c76f5b66d12da83a37", "url": "https://github.com/hyperledger/besu/commit/82b2c0e0b05758ed227a84c76f5b66d12da83a37", "message": "rename ibftevent to events\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T02:35:28Z", "type": "commit"}, {"oid": "cbc8673f677d718c801575280b377a26ad1d7bb5", "url": "https://github.com/hyperledger/besu/commit/cbc8673f677d718c801575280b377a26ad1d7bb5", "message": "refactor\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T02:42:07Z", "type": "commit"}, {"oid": "390acc500ae712ac491dc58cb76e78f721c69f66", "url": "https://github.com/hyperledger/besu/commit/390acc500ae712ac491dc58cb76e78f721c69f66", "message": "moved executors to common\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T03:11:26Z", "type": "commit"}, {"oid": "88615834340909bfc1847533e13a4643f4454f48", "url": "https://github.com/hyperledger/besu/commit/88615834340909bfc1847533e13a4643f4454f48", "message": "Merge remote-tracking branch 'upstream/master' into mv_event_executors\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T03:42:32Z", "type": "commit"}, {"oid": "63895fa4594e0259fa42dda76f8dba4a699b45a1", "url": "https://github.com/hyperledger/besu/commit/63895fa4594e0259fa42dda76f8dba4a699b45a1", "message": "Remove traces of ibft from common\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T23:19:04Z", "type": "commit"}, {"oid": "03443fdabc1378d294a8569847415fd7d0cf59ca", "url": "https://github.com/hyperledger/besu/commit/03443fdabc1378d294a8569847415fd7d0cf59ca", "message": "fixed spotless\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-13T23:31:33Z", "type": "commit"}, {"oid": "461a0ec70af21efb215e096ae9c9885e2814d13c", "url": "https://github.com/hyperledger/besu/commit/461a0ec70af21efb215e096ae9c9885e2814d13c", "message": "added prepare and commits\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-14T02:10:09Z", "type": "commit"}, {"oid": "461a0ec70af21efb215e096ae9c9885e2814d13c", "url": "https://github.com/hyperledger/besu/commit/461a0ec70af21efb215e096ae9c9885e2814d13c", "message": "added prepare and commits\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2020-12-14T02:10:09Z", "type": "forcePushed"}, {"oid": "f81a38bd8a283968474acb608eeec30266a45d9a", "url": "https://github.com/hyperledger/besu/commit/f81a38bd8a283968474acb608eeec30266a45d9a", "message": "Merge remote-tracking branch 'upstream/master' into qbft_prepare\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2021-01-04T22:38:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NDgyNw==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551644827", "bodyText": "doco .... refers to iBFT v2. Is that intentional?", "author": "usmansaleem", "createdAt": "2021-01-05T00:16:46Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.messagedata;\n+\n+/** Message codes for iBFT v2 messages */", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NDM0Nw==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551654347", "bodyText": "oops - updated to say QBFT V1", "author": "rain-on", "createdAt": "2021-01-05T00:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NDgyNw=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java\nindex 2730bcb81..cd9c66dd4 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java\n\n@@ -14,7 +14,7 @@\n  */\n package org.hyperledger.besu.consensus.qbft.messagedata;\n \n-/** Message codes for iBFT v2 messages */\n+/** Message codes for QBFT v1 messages */\n public class QbftV1 {\n   public static final int PROPOSAL = 0;\n   public static final int PREPARE = 1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NTAzNQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551645035", "bodyText": "nit: unnecessary space.", "author": "usmansaleem", "createdAt": "2021-01-05T00:17:27Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.messagedata;\n+\n+/** Message codes for iBFT v2 messages */\n+public class QbftV1 {\n+  public static final int PROPOSAL = 0;\n+  public static final int PREPARE = 1;\n+  public static final int COMMIT = 2;\n+  public static final int ROUND_CHANGE = 3;\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NDQzNw==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551654437", "bodyText": "kinda like the space - the numbers above are the msgs we use, the MESSAGE_SPACE is a slightly different concept.", "author": "rain-on", "createdAt": "2021-01-05T00:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1ODg3MQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551658871", "bodyText": "in that case, its alright.", "author": "usmansaleem", "createdAt": "2021-01-05T01:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NTAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java\nindex 2730bcb81..cd9c66dd4 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/messagedata/QbftV1.java\n\n@@ -14,7 +14,7 @@\n  */\n package org.hyperledger.besu.consensus.qbft.messagedata;\n \n-/** Message codes for iBFT v2 messages */\n+/** Message codes for QBFT v1 messages */\n public class QbftV1 {\n   public static final int PROPOSAL = 0;\n   public static final int PREPARE = 1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NTk3OQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551645979", "bodyText": "does it make sense to wrap these in try/finally block (where finally block contains rlpInput.leaveList())? Or this area is meant to be exception free always.", "author": "usmansaleem", "createdAt": "2021-01-05T00:20:25Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/CommitPayload.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.ConsensusRoundIdentifier;\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.qbft.messagedata.QbftV1;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n+\n+import java.util.Objects;\n+import java.util.StringJoiner;\n+\n+public class CommitPayload implements Payload {\n+  private static final int TYPE = QbftV1.COMMIT;\n+  private final ConsensusRoundIdentifier roundIdentifier;\n+  private final Hash digest;\n+  private final Signature commitSeal;\n+\n+  public CommitPayload(\n+      final ConsensusRoundIdentifier roundIdentifier,\n+      final Hash digest,\n+      final Signature commitSeal) {\n+    this.roundIdentifier = roundIdentifier;\n+    this.digest = digest;\n+    this.commitSeal = commitSeal;\n+  }\n+\n+  public static CommitPayload readFrom(final RLPInput rlpInput) {\n+    rlpInput.enterList();\n+    final ConsensusRoundIdentifier roundIdentifier = ConsensusRoundIdentifier.readFrom(rlpInput);\n+    final Hash digest = Payload.readDigest(rlpInput);\n+    final Signature commitSeal = rlpInput.readBytes(Signature::decode);", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NjI3Ng==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551646276", "bodyText": "nvm ... I misread the method ... its readFrom the rlpInput.", "author": "usmansaleem", "createdAt": "2021-01-05T00:21:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY0NTk3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTQzOQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551655439", "bodyText": "nit: some unnecessary extra blank lines", "author": "jframe", "createdAt": "2021-01-05T00:53:09Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.ConsensusRoundIdentifier;\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.common.bft.payload.SignedData;\n+import org.hyperledger.besu.consensus.qbft.messagewrappers.Commit;\n+import org.hyperledger.besu.consensus.qbft.messagewrappers.Prepare;\n+import org.hyperledger.besu.crypto.NodeKey;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.core.Util;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class MessageFactory {\n+\n+  private final NodeKey nodeKey;\n+\n+  public MessageFactory(final NodeKey nodeKey) {\n+    this.nodeKey = nodeKey;\n+  }\n+\n+  public Prepare createPrepare(final ConsensusRoundIdentifier roundIdentifier, final Hash digest) {\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDY0Mw==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660643", "bodyText": "done", "author": "rain-on", "createdAt": "2021-01-05T01:11:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTQzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java\nindex 201fc7662..532335517 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java\n\n@@ -35,9 +35,7 @@ public class MessageFactory {\n   }\n \n   public Prepare createPrepare(final ConsensusRoundIdentifier roundIdentifier, final Hash digest) {\n-\n     final PreparePayload payload = new PreparePayload(roundIdentifier, digest);\n-\n     return new Prepare(createSignedMessage(payload));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTQ2OA==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551655468", "bodyText": "nit: some unnecessary extra blank lines", "author": "jframe", "createdAt": "2021-01-05T00:53:16Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.ConsensusRoundIdentifier;\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.common.bft.payload.SignedData;\n+import org.hyperledger.besu.consensus.qbft.messagewrappers.Commit;\n+import org.hyperledger.besu.consensus.qbft.messagewrappers.Prepare;\n+import org.hyperledger.besu.crypto.NodeKey;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.core.Util;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class MessageFactory {\n+\n+  private final NodeKey nodeKey;\n+\n+  public MessageFactory(final NodeKey nodeKey) {\n+    this.nodeKey = nodeKey;\n+  }\n+\n+  public Prepare createPrepare(final ConsensusRoundIdentifier roundIdentifier, final Hash digest) {\n+\n+    final PreparePayload payload = new PreparePayload(roundIdentifier, digest);\n+\n+    return new Prepare(createSignedMessage(payload));\n+  }\n+\n+  public Commit createCommit(\n+      final ConsensusRoundIdentifier roundIdentifier,\n+      final Hash digest,\n+      final Signature commitSeal) {\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDY2MQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660661", "bodyText": "done", "author": "rain-on", "createdAt": "2021-01-05T01:11:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTQ2OA=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java\nindex 201fc7662..532335517 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/MessageFactory.java\n\n@@ -35,9 +35,7 @@ public class MessageFactory {\n   }\n \n   public Prepare createPrepare(final ConsensusRoundIdentifier roundIdentifier, final Hash digest) {\n-\n     final PreparePayload payload = new PreparePayload(roundIdentifier, digest);\n-\n     return new Prepare(createSignedMessage(payload));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTUwOQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551655509", "bodyText": "nit: some unnecessary extra blank lines", "author": "jframe", "createdAt": "2021-01-05T00:53:23Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.common.bft.payload.SignedData;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Util;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+\n+public class PayloadDeserializers {\n+\n+  public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDgzMA==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660830", "bodyText": "done", "author": "rain-on", "createdAt": "2021-01-05T01:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\nindex 399463fd9..27120029b 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n\n@@ -24,30 +24,24 @@ import org.hyperledger.besu.ethereum.rlp.RLPInput;\n public class PayloadDeserializers {\n \n   public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final CommitPayload unsignedMessageData = CommitPayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   protected static <M extends Payload> SignedData<M> from(\n       final M unsignedMessageData, final Signature signature) {\n-\n     final Address sender = recoverSender(unsignedMessageData, signature);\n-\n     return new SignedData<>(unsignedMessageData, sender, signature);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTUzOQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551655539", "bodyText": "nit: some unnecessary extra blank lines", "author": "jframe", "createdAt": "2021-01-05T00:53:27Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.common.bft.payload.SignedData;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Util;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+\n+public class PayloadDeserializers {\n+\n+  public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n+\n+    rlpInput.enterList();\n+    final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n+    final Signature signature = readSignature(rlpInput);\n+    rlpInput.leaveList();\n+\n+    return from(unsignedMessageData, signature);\n+  }\n+\n+  public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDg2NQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660865", "bodyText": "done", "author": "rain-on", "createdAt": "2021-01-05T01:12:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTUzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\nindex 399463fd9..27120029b 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n\n@@ -24,30 +24,24 @@ import org.hyperledger.besu.ethereum.rlp.RLPInput;\n public class PayloadDeserializers {\n \n   public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final CommitPayload unsignedMessageData = CommitPayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   protected static <M extends Payload> SignedData<M> from(\n       final M unsignedMessageData, final Signature signature) {\n-\n     final Address sender = recoverSender(unsignedMessageData, signature);\n-\n     return new SignedData<>(unsignedMessageData, sender, signature);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTU2NQ==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551655565", "bodyText": "nit: some unnecessary extra blank lines", "author": "jframe", "createdAt": "2021-01-05T00:53:33Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.common.bft.payload.SignedData;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Util;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+\n+public class PayloadDeserializers {\n+\n+  public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n+\n+    rlpInput.enterList();\n+    final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n+    final Signature signature = readSignature(rlpInput);\n+    rlpInput.leaveList();\n+\n+    return from(unsignedMessageData, signature);\n+  }\n+\n+  public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n+\n+    rlpInput.enterList();\n+    final CommitPayload unsignedMessageData = CommitPayload.readFrom(rlpInput);\n+    final Signature signature = readSignature(rlpInput);\n+    rlpInput.leaveList();\n+\n+    return from(unsignedMessageData, signature);\n+  }\n+\n+  protected static <M extends Payload> SignedData<M> from(\n+      final M unsignedMessageData, final Signature signature) {\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\nindex 399463fd9..27120029b 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n\n@@ -24,30 +24,24 @@ import org.hyperledger.besu.ethereum.rlp.RLPInput;\n public class PayloadDeserializers {\n \n   public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final CommitPayload unsignedMessageData = CommitPayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   protected static <M extends Payload> SignedData<M> from(\n       final M unsignedMessageData, final Signature signature) {\n-\n     final Address sender = recoverSender(unsignedMessageData, signature);\n-\n     return new SignedData<>(unsignedMessageData, sender, signature);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTU5OA==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551655598", "bodyText": "nit: some unnecessary extra blank lines", "author": "jframe", "createdAt": "2021-01-05T00:53:38Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.common.bft.payload.SignedData;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Util;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+\n+public class PayloadDeserializers {\n+\n+  public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n+\n+    rlpInput.enterList();\n+    final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n+    final Signature signature = readSignature(rlpInput);\n+    rlpInput.leaveList();\n+\n+    return from(unsignedMessageData, signature);\n+  }\n+\n+  public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n+\n+    rlpInput.enterList();\n+    final CommitPayload unsignedMessageData = CommitPayload.readFrom(rlpInput);\n+    final Signature signature = readSignature(rlpInput);\n+    rlpInput.leaveList();\n+\n+    return from(unsignedMessageData, signature);\n+  }\n+\n+  protected static <M extends Payload> SignedData<M> from(\n+      final M unsignedMessageData, final Signature signature) {\n+\n+    final Address sender = recoverSender(unsignedMessageData, signature);\n+\n+    return new SignedData<>(unsignedMessageData, sender, signature);\n+  }\n+\n+  protected static Signature readSignature(final RLPInput signedMessage) {\n+    return signedMessage.readBytes(Signature::decode);\n+  }\n+\n+  protected static Address recoverSender(\n+      final Payload unsignedMessageData, final Signature signature) {\n+", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDg4OA==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660888", "bodyText": "done", "author": "rain-on", "createdAt": "2021-01-05T01:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY1NTU5OA=="}], "type": "inlineReview", "revised_code": {"commit": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "chunk": "diff --git a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\nindex 399463fd9..27120029b 100644\n--- a/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n+++ b/consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PayloadDeserializers.java\n\n@@ -24,30 +24,24 @@ import org.hyperledger.besu.ethereum.rlp.RLPInput;\n public class PayloadDeserializers {\n \n   public static SignedData<PreparePayload> readSignedPreparePayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final PreparePayload unsignedMessageData = PreparePayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   public static SignedData<CommitPayload> readSignedCommitPayloadFrom(final RLPInput rlpInput) {\n-\n     rlpInput.enterList();\n     final CommitPayload unsignedMessageData = CommitPayload.readFrom(rlpInput);\n     final Signature signature = readSignature(rlpInput);\n     rlpInput.leaveList();\n-\n     return from(unsignedMessageData, signature);\n   }\n \n   protected static <M extends Payload> SignedData<M> from(\n       final M unsignedMessageData, final Signature signature) {\n-\n     final Address sender = recoverSender(unsignedMessageData, signature);\n-\n     return new SignedData<>(unsignedMessageData, sender, signature);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDA2NA==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660064", "bodyText": "Leaving sender out for now? We can always add it in easily I guess it becomes a required field", "author": "jframe", "createdAt": "2021-01-05T01:09:25Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/PreparePayload.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.ConsensusRoundIdentifier;\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.qbft.messagedata.QbftV1;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n+\n+import java.util.Objects;\n+import java.util.StringJoiner;\n+\n+public class PreparePayload implements Payload {\n+  private static final int TYPE = QbftV1.PREPARE;\n+  private final ConsensusRoundIdentifier roundIdentifier;\n+  private final Hash digest;\n+\n+  public PreparePayload(final ConsensusRoundIdentifier roundIdentifier, final Hash digest) {\n+    this.roundIdentifier = roundIdentifier;\n+    this.digest = digest;\n+  }", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MTA5OA==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551661098", "bodyText": "I'd like to leave it out - i.e. it shouldn't need to go \"on the line\" - it can be derived from the signature.", "author": "rain-on", "createdAt": "2021-01-05T01:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDA2NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDI4Mw==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551660283", "bodyText": "Leaving sender out for now?", "author": "jframe", "createdAt": "2021-01-05T01:10:19Z", "path": "consensus/qbft/src/main/java/org/hyperledger/besu/consensus/qbft/payload/CommitPayload.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.consensus.qbft.payload;\n+\n+import org.hyperledger.besu.consensus.common.bft.ConsensusRoundIdentifier;\n+import org.hyperledger.besu.consensus.common.bft.payload.Payload;\n+import org.hyperledger.besu.consensus.qbft.messagedata.QbftV1;\n+import org.hyperledger.besu.crypto.SECP256K1.Signature;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n+\n+import java.util.Objects;\n+import java.util.StringJoiner;\n+\n+public class CommitPayload implements Payload {\n+  private static final int TYPE = QbftV1.COMMIT;\n+  private final ConsensusRoundIdentifier roundIdentifier;\n+  private final Hash digest;\n+  private final Signature commitSeal;\n+\n+  public CommitPayload(\n+      final ConsensusRoundIdentifier roundIdentifier,\n+      final Hash digest,\n+      final Signature commitSeal) {\n+    this.roundIdentifier = roundIdentifier;\n+    this.digest = digest;\n+    this.commitSeal = commitSeal;", "originalCommit": "f81a38bd8a283968474acb608eeec30266a45d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MTExNg==", "url": "https://github.com/hyperledger/besu/pull/1691#discussion_r551661116", "bodyText": "see above.", "author": "rain-on", "createdAt": "2021-01-05T01:13:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY2MDI4Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "85c3198571f15ed2cbe16ec62a583c9b1050534e", "url": "https://github.com/hyperledger/besu/commit/85c3198571f15ed2cbe16ec62a583c9b1050534e", "message": "post review\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>", "committedDate": "2021-01-05T01:21:45Z", "type": "commit"}, {"oid": "fd929f5e410151486c2da1322f416e5445cfed51", "url": "https://github.com/hyperledger/besu/commit/fd929f5e410151486c2da1322f416e5445cfed51", "message": "Merge branch 'master' into qbft_prepare", "committedDate": "2021-01-05T01:46:13Z", "type": "commit"}]}