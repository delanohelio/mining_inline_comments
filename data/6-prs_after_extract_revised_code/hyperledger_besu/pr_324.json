{"pr_number": 324, "pr_title": "[BESU-80] TLS to orion", "pr_createdAt": "2020-01-24T06:43:48Z", "pr_url": "https://github.com/hyperledger/besu/pull/324", "timeline": [{"oid": "5b47ca3442765f15aafa872c5c704f78ae48a5ab", "url": "https://github.com/hyperledger/besu/commit/5b47ca3442765f15aafa872c5c704f78ae48a5ab", "message": "first pass\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-24T06:34:52Z", "type": "commit"}, {"oid": "0ede2a7f11038bde76aa0f86c0bf73b1474ada7c", "url": "https://github.com/hyperledger/besu/commit/0ede2a7f11038bde76aa0f86c0bf73b1474ada7c", "message": "first pass\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-24T06:35:22Z", "type": "commit"}, {"oid": "f146198c3a820fbc6c49b2e678f923e3d1f8db69", "url": "https://github.com/hyperledger/besu/commit/f146198c3a820fbc6c49b2e678f923e3d1f8db69", "message": "Merge branch 'bp-8-tls-to-orion' of github.com:macfarla/besu into bp-8-tls-to-orion\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-24T06:36:02Z", "type": "commit"}, {"oid": "ee6ba634c98f5de8840bb47e0bb2d8baf959e36b", "url": "https://github.com/hyperledger/besu/commit/ee6ba634c98f5de8840bb47e0bb2d8baf959e36b", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into bp-8-tls-to-orion\n\n    Signed-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-27T23:51:15Z", "type": "commit"}, {"oid": "e90c4eba406430a1635d9cd1becfe632ad7e9aa9", "url": "https://github.com/hyperledger/besu/commit/e90c4eba406430a1635d9cd1becfe632ad7e9aa9", "message": "cleanup\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-29T02:41:39Z", "type": "commit"}, {"oid": "c61ede053725d8a962f48b8c7d123df9b5f0ce5a", "url": "https://github.com/hyperledger/besu/commit/c61ede053725d8a962f48b8c7d123df9b5f0ce5a", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into bp-8-tls-to-orion\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-29T02:41:49Z", "type": "commit"}, {"oid": "506d6f1b95020cd7de8ca6a3d3207240a0200395", "url": "https://github.com/hyperledger/besu/commit/506d6f1b95020cd7de8ca6a3d3207240a0200395", "message": "formatting\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-29T03:11:29Z", "type": "commit"}, {"oid": "f291104daa77c14b146ac942481432507879a065", "url": "https://github.com/hyperledger/besu/commit/f291104daa77c14b146ac942481432507879a065", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into bp-8-tls-to-orion\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-29T23:58:24Z", "type": "commit"}, {"oid": "4c3cc32b81db26d7dbc6d848b1aa255163d612a2", "url": "https://github.com/hyperledger/besu/commit/4c3cc32b81db26d7dbc6d848b1aa255163d612a2", "message": "test\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-30T03:23:48Z", "type": "commit"}, {"oid": "73b8593a389650e12a72fb4eb51d6c0c5958b206", "url": "https://github.com/hyperledger/besu/commit/73b8593a389650e12a72fb4eb51d6c0c5958b206", "message": "test cleanup\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-30T03:24:05Z", "type": "commit"}, {"oid": "c95843d2cb05b7604a76b8c2286729e1bf18252c", "url": "https://github.com/hyperledger/besu/commit/c95843d2cb05b7604a76b8c2286729e1bf18252c", "message": "updated cli param name\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-30T03:45:58Z", "type": "commit"}, {"oid": "c215c435aaa0724f5e39ac6cba8536bb53dfb4af", "url": "https://github.com/hyperledger/besu/commit/c215c435aaa0724f5e39ac6cba8536bb53dfb4af", "message": "negative test\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-30T06:08:19Z", "type": "commit"}, {"oid": "1d234d92889874b9a625007e7c0d6d0a8fbb6e23", "url": "https://github.com/hyperledger/besu/commit/1d234d92889874b9a625007e7c0d6d0a8fbb6e23", "message": "added some tests\nremoved version number from tuweni lib\nupdated fingerprint format\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T01:34:04Z", "type": "commit"}, {"oid": "92c5f0c1596902db17abd2545ac064ded8953951", "url": "https://github.com/hyperledger/besu/commit/92c5f0c1596902db17abd2545ac064ded8953951", "message": "merged master\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T01:52:25Z", "type": "commit"}, {"oid": "f7820cc9353e06f679d4e4cbb331ec4e392d6347", "url": "https://github.com/hyperledger/besu/commit/f7820cc9353e06f679d4e4cbb331ec4e392d6347", "message": "added runtime dependency\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T01:52:39Z", "type": "commit"}, {"oid": "217c2dae2791a48e8ff295565f48ef79c09e87ef", "url": "https://github.com/hyperledger/besu/commit/217c2dae2791a48e8ff295565f48ef79c09e87ef", "message": "turn SSL on\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T02:03:45Z", "type": "commit"}, {"oid": "abad7e4fefd759c606d7b812a05a2d5b5ddac0ff", "url": "https://github.com/hyperledger/besu/commit/abad7e4fefd759c606d7b812a05a2d5b5ddac0ff", "message": "formatting; uncommented some code\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T02:25:23Z", "type": "commit"}, {"oid": "30302fa65a23c977112f6b1ea70725dc93200079", "url": "https://github.com/hyperledger/besu/commit/30302fa65a23c977112f6b1ea70725dc93200079", "message": "formatting\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T02:28:36Z", "type": "commit"}, {"oid": "182bdc9906d9d3f154e61080b806ec302add5d75", "url": "https://github.com/hyperledger/besu/commit/182bdc9906d9d3f154e61080b806ec302add5d75", "message": "headers\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T02:33:40Z", "type": "commit"}, {"oid": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "url": "https://github.com/hyperledger/besu/commit/aa84d31768e7fa10e204b652f2b5090c47ae1afb", "message": "final\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-01-31T02:43:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwMTU0NA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373301544", "bodyText": "Think these should be all be prefixed with privacy and remove orion from the options. Replacing orion with privacy will probably work? Orion is not used in any of the other cmd line options.", "author": "jframe", "createdAt": "2020-01-31T03:23:58Z", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -524,6 +524,31 @@ void setBannedNodeIds(final List<String> values) {\n           \"Require authentication for the JSON-RPC WebSocket service (default: ${DEFAULT-VALUE})\")\n   private final Boolean isRpcWsAuthenticationEnabled = false;\n \n+  @Option(", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5Mjk5OQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373892999", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T01:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwMTU0NA=="}], "type": "inlineReview", "revised_code": {"commit": "d5d57b89f264e0bc041d779d444e724ee7ef305e", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\nindex 417d1a0f1..34bcb8eda 100644\n--- a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n+++ b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n\n@@ -525,29 +525,30 @@ public class BesuCommand implements DefaultCommandValues, Runnable {\n   private final Boolean isRpcWsAuthenticationEnabled = false;\n \n   @Option(\n-      names = {\"--orion-tls-enabled\"},\n+      names = {\"--privacy-tls-enabled\"},\n       paramLabel = MANDATORY_FILE_FORMAT_HELP,\n-      description = \"Enable TLS for connecting to Orion (default: ${DEFAULT-VALUE})\")\n-  private final Boolean isOrionTlsEnabled = false;\n+      description = \"Enable TLS for connecting to privacy enclave (default: ${DEFAULT-VALUE})\")\n+  private final Boolean isPrivacyTlsEnabled = false;\n \n   @Option(\n-      names = \"--orion-tls-keystore-file\",\n+      names = \"--privacy-tls-keystore-file\",\n       paramLabel = MANDATORY_FILE_FORMAT_HELP,\n       description =\n           \"Path to a PKCS#12 formatted keystore; used to enable TLS on inbound connections.\")\n-  private final Path orionKeyStoreFile = null;\n+  private final Path privacyKeyStoreFile = null;\n \n   @Option(\n-      names = \"--orion-tls-keystore-password-file\",\n+      names = \"--privacy-tls-keystore-password-file\",\n       paramLabel = MANDATORY_FILE_FORMAT_HELP,\n       description = \"Path to a file containing the password used to decrypt the keystore.\")\n-  private final Path orionKeyStorePasswordFile = null;\n+  private final Path privacyKeyStorePasswordFile = null;\n \n   @Option(\n-      names = \"--orion-tls-known-servers-file\",\n+      names = \"--privacy-tls-known-servers-file\",\n       paramLabel = MANDATORY_FILE_FORMAT_HELP,\n-      description = \"Path to a file containing the fingerprints of authorized servers (Orions).\")\n-  private final Path orionServersWhitelistFile = null;\n+      description =\n+          \"Path to a file containing the fingerprints of authorized servers (privacy enclaves).\")\n+  private final Path privacyServersWhitelistFile = null;\n \n   @Option(\n       names = {\"--metrics-enabled\"},\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwMjQ5OQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373302499", "bodyText": "Is this todo still relevant?", "author": "jframe", "createdAt": "2020-01-31T03:29:37Z", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1538,6 +1578,11 @@ private PrivacyParameters privacyParameters() {\n       privacyParametersBuilder.setPrivateKeyPath(privacyMarkerTransactionSigningKeyPath);\n       privacyParametersBuilder.setStorageProvider(\n           privacyKeyStorageProvider(keyValueStorageName + \"-privacy\"));\n+      if (isOrionTlsEnabled) {\n+        // TODO should this use TlsConfiguration", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5MzEyNw==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373893127", "bodyText": "removed", "author": "macfarla", "createdAt": "2020-02-03T01:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwMjQ5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d5d57b89f264e0bc041d779d444e724ee7ef305e", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\nindex 417d1a0f1..34bcb8eda 100644\n--- a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n+++ b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n\n@@ -1578,10 +1579,9 @@ public class BesuCommand implements DefaultCommandValues, Runnable {\n       privacyParametersBuilder.setPrivateKeyPath(privacyMarkerTransactionSigningKeyPath);\n       privacyParametersBuilder.setStorageProvider(\n           privacyKeyStorageProvider(keyValueStorageName + \"-privacy\"));\n-      if (isOrionTlsEnabled) {\n-        // TODO should this use TlsConfiguration\n+      if (isPrivacyTlsEnabled) {\n         privacyParametersBuilder.setTlsConfiguration(\n-            orionKeyStoreFile, orionKeyStorePasswordFile, orionServersWhitelistFile);\n+            privacyKeyStoreFile, privacyKeyStorePasswordFile, privacyServersWhitelistFile);\n       }\n       privacyParametersBuilder.setEnclaveFactory(new EnclaveFactory(vertx));\n     } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MDg1Mg==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373880852", "bodyText": "Unit test for for the dependency check", "author": "jframe", "createdAt": "2020-02-02T22:30:08Z", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1265,6 +1291,20 @@ private void checkRpcTlsClientAuthOptionsDependencies() {\n         asList(\"--rpc-http-tls-known-clients-file\", \"--rpc-http-tls-ca-clients-enabled\"));\n   }\n \n+  private void checkOrionTlsOptionsDependencies() {", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkxNzYyNw==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373917627", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T04:25:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MDg1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d5d57b89f264e0bc041d779d444e724ee7ef305e", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\nindex 417d1a0f1..34bcb8eda 100644\n--- a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n+++ b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n\n@@ -1291,18 +1292,18 @@ public class BesuCommand implements DefaultCommandValues, Runnable {\n         asList(\"--rpc-http-tls-known-clients-file\", \"--rpc-http-tls-ca-clients-enabled\"));\n   }\n \n-  private void checkOrionTlsOptionsDependencies() {\n+  private void checkPrivacyTlsOptionsDependencies() {\n     CommandLineUtils.checkOptionDependencies(\n         logger,\n         commandLine,\n-        \"--orion-tls-enabled\",\n-        !isOrionTlsEnabled,\n+        \"--privacy-tls-enabled\",\n+        !isPrivacyTlsEnabled,\n         asList(\n-            \"--orion-tls-keystore-file\",\n-            \"--orion-tls-keystore-password-file\",\n-            \"--orion-tls-client-auth-enabled\",\n-            \"--orion-tls-known-clients-file\",\n-            \"--orion-tls-known-servers-file\"));\n+            \"--privacy-tls-keystore-file\",\n+            \"--privacy-tls-keystore-password-file\",\n+            \"--privacy-tls-client-auth-enabled\",\n+            \"--privacy-tls-known-clients-file\",\n+            \"--privacy-tls-known-servers-file\"));\n   }\n \n   private Optional<TlsConfiguration> rpcHttpTlsConfiguration() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MDg3NQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373880875", "bodyText": "unit test for the tls config", "author": "jframe", "createdAt": "2020-02-02T22:30:28Z", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1538,6 +1578,11 @@ private PrivacyParameters privacyParameters() {\n       privacyParametersBuilder.setPrivateKeyPath(privacyMarkerTransactionSigningKeyPath);\n       privacyParametersBuilder.setStorageProvider(\n           privacyKeyStorageProvider(keyValueStorageName + \"-privacy\"));\n+      if (isOrionTlsEnabled) {\n+        // TODO should this use TlsConfiguration\n+        privacyParametersBuilder.setTlsConfiguration(", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MTU0MQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374451541", "bodyText": "after some consideration, leaving this for AT since the privacyParameters.build actually constructs the enclave", "author": "macfarla", "createdAt": "2020-02-04T02:54:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MDg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d5d57b89f264e0bc041d779d444e724ee7ef305e", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\nindex 417d1a0f1..34bcb8eda 100644\n--- a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n+++ b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n\n@@ -1578,10 +1579,9 @@ public class BesuCommand implements DefaultCommandValues, Runnable {\n       privacyParametersBuilder.setPrivateKeyPath(privacyMarkerTransactionSigningKeyPath);\n       privacyParametersBuilder.setStorageProvider(\n           privacyKeyStorageProvider(keyValueStorageName + \"-privacy\"));\n-      if (isOrionTlsEnabled) {\n-        // TODO should this use TlsConfiguration\n+      if (isPrivacyTlsEnabled) {\n         privacyParametersBuilder.setTlsConfiguration(\n-            orionKeyStoreFile, orionKeyStorePasswordFile, orionServersWhitelistFile);\n+            privacyKeyStoreFile, privacyKeyStorePasswordFile, privacyServersWhitelistFile);\n       }\n       privacyParametersBuilder.setEnclaveFactory(new EnclaveFactory(vertx));\n     } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTQzNA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373881434", "bodyText": "rename to enclaveServer or maybe just httpServer here and in the other tests?", "author": "jframe", "createdAt": "2020-02-02T22:38:56Z", "path": "enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsEnabledEnclaveTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package org.hyperledger.besu.enclave;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+import static org.hyperledger.besu.enclave.TlsHelpers.populateFingerprintFile;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.charset.Charset;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+import java.util.Optional;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpServer;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TlsEnabledEnclaveTest {\n+\n+  private TlsEnabledHttpServerFactory serverFactory;\n+  private Vertx vertx;\n+\n+  final TlsCertificateDefinition orionCert =\n+      TlsCertificateDefinition.loadFromResource(\"tls/cert1.pfx\", \"password\");\n+  final TlsCertificateDefinition besuCert =\n+      TlsCertificateDefinition.loadFromResource(\"tls/cert2.pfx\", \"password2\");\n+\n+  public void shutdown() {\n+    vertx.close();\n+  }\n+\n+  @Before\n+  public void setup() {\n+    serverFactory = new TlsEnabledHttpServerFactory();\n+    this.vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void cleanup() {\n+    serverFactory.shutdown();\n+    this.shutdown();\n+  }\n+\n+  private Enclave createEnclave(final int orionPort, final Path workDir, final boolean tlsEnabled)\n+      throws IOException {\n+\n+    final Path serverFingerprintFile = workDir.resolve(\"server_known_clients\");\n+    final Path besuCertPasswordFile = workDir.resolve(\"password_file\");\n+    try {\n+      populateFingerprintFile(serverFingerprintFile, orionCert, Optional.of(orionPort));\n+      Files.write(besuCertPasswordFile, besuCert.getPassword().getBytes(Charset.defaultCharset()));\n+\n+      final EnclaveFactory factory = new EnclaveFactory(vertx);\n+      if (tlsEnabled) {\n+        final URI orionUri = new URI(\"https://localhost:\" + orionPort);\n+        return factory.createVertxEnclave(\n+            orionUri,\n+            besuCert.getPkcs12File().toPath(),\n+            besuCertPasswordFile,\n+            serverFingerprintFile);\n+      } else {\n+        return factory.createVertxEnclave(new URI(\"http://localhost:\" + orionPort));\n+      }\n+    } catch (KeyStoreException | NoSuchAlgorithmException | CertificateException e) {\n+      fail(\"unable to populate fingerprint file\");\n+      return null;\n+    } catch (URISyntaxException e) {\n+      fail(\"unable to create URI\");\n+      return null;\n+    }\n+  }\n+\n+  @Test\n+  public void nonTlsEnclaveCannotConnectToTlsServer() throws IOException {\n+\n+    Path workDir = Files.createTempDirectory(\"test-certs\");\n+\n+    // Note: the HttpServer always responds with a JsonRpcSuccess, result=\"I'm up\".\n+    final HttpServer orionHttpServer = serverFactory.create(orionCert, besuCert, workDir, true);", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5MzM4MA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373893380", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T01:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "9b5e435c90ade94f70619437d00c142f1fbf9687", "chunk": "diff --git a/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsEnabledEnclaveTest.java b/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsEnabledEnclaveTest.java\nindex 8c1f4b129..f1b1a639e 100644\n--- a/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsEnabledEnclaveTest.java\n+++ b/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsEnabledEnclaveTest.java\n\n@@ -41,7 +41,7 @@ public class TlsEnabledEnclaveTest {\n   private TlsEnabledHttpServerFactory serverFactory;\n   private Vertx vertx;\n \n-  final TlsCertificateDefinition orionCert =\n+  final TlsCertificateDefinition httpServerCert =\n       TlsCertificateDefinition.loadFromResource(\"tls/cert1.pfx\", \"password\");\n   final TlsCertificateDefinition besuCert =\n       TlsCertificateDefinition.loadFromResource(\"tls/cert2.pfx\", \"password2\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTUzMw==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373881533", "bodyText": "better to use String.format with %n to avoid any line ending issues with \\n being used", "author": "jframe", "createdAt": "2020-02-02T22:40:44Z", "path": "enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsHelpers.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package org.hyperledger.besu.enclave;\n+\n+import org.hyperledger.besu.crypto.MessageDigestFactory;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateEncodingException;\n+import java.security.cert.CertificateException;\n+import java.security.cert.X509Certificate;\n+import java.util.Enumeration;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.StringJoiner;\n+\n+import com.google.common.collect.Lists;\n+\n+public class TlsHelpers {\n+\n+  private static KeyStore loadP12KeyStore(final File pkcsFile, final String password)\n+      throws KeyStoreException, NoSuchAlgorithmException, CertificateException {\n+    final KeyStore store = KeyStore.getInstance(\"pkcs12\");\n+    try (final InputStream keystoreStream = new FileInputStream(pkcsFile)) {\n+      store.load(keystoreStream, password.toCharArray());\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Unable to load keystore.\", e);\n+    }\n+    return store;\n+  }\n+\n+  public static void populateFingerprintFile(\n+      final Path knownClientsPath,\n+      final TlsCertificateDefinition certDef,\n+      final Optional<Integer> serverPortToAppendToHostname)\n+      throws KeyStoreException, NoSuchAlgorithmException, CertificateException, IOException {\n+\n+    final List<X509Certificate> certs = getCertsFromPkcs12(certDef);\n+    final StringBuilder fingerPrintsToAdd = new StringBuilder();\n+    final String portFragment = serverPortToAppendToHostname.map(port -> \":\" + port).orElse(\"\");\n+    for (final X509Certificate cert : certs) {\n+      final String fingerprint = generateFingerprint(cert);\n+      fingerPrintsToAdd.append(\"localhost\" + portFragment + \" \" + fingerprint + \"\\n\");", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkxNTgxOQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373915819", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T04:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "bd951ebb32afe76a81c0b8701682342db9f8a108", "chunk": "diff --git a/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsHelpers.java b/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsHelpers.java\nindex c1615f300..6e1266067 100644\n--- a/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsHelpers.java\n+++ b/enclave/src/integration-test/java/org/hyperledger/besu/enclave/TlsHelpers.java\n\n@@ -57,14 +57,14 @@ public class TlsHelpers {\n       throws KeyStoreException, NoSuchAlgorithmException, CertificateException, IOException {\n \n     final List<X509Certificate> certs = getCertsFromPkcs12(certDef);\n-    final StringBuilder fingerPrintsToAdd = new StringBuilder();\n+    final StringBuilder fingerprintsToAdd = new StringBuilder();\n     final String portFragment = serverPortToAppendToHostname.map(port -> \":\" + port).orElse(\"\");\n     for (final X509Certificate cert : certs) {\n       final String fingerprint = generateFingerprint(cert);\n-      fingerPrintsToAdd.append(\"localhost\" + portFragment + \" \" + fingerprint + \"\\n\");\n-      fingerPrintsToAdd.append(\"127.0.0.1\" + portFragment + \" \" + fingerprint + \"\\n\");\n+      fingerprintsToAdd.append(String.format(\"localhost%s %s%n\", portFragment, fingerprint));\n+      fingerprintsToAdd.append(String.format(\"127.0.0.1%s %s%n\", portFragment, fingerprint));\n     }\n-    Files.writeString(knownClientsPath, fingerPrintsToAdd.toString());\n+    Files.writeString(knownClientsPath, fingerprintsToAdd.toString());\n   }\n \n   public static List<X509Certificate> getCertsFromPkcs12(final TlsCertificateDefinition certDef)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTgyMA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373881820", "bodyText": "This is duplicated with the non-tls create method, is it possible to remove this duplication at all?", "author": "jframe", "createdAt": "2020-02-02T22:44:51Z", "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "diffHunk": "@@ -43,4 +53,57 @@ public Enclave createVertxEnclave(final URI enclaveUri) {\n \n     return new Enclave(vertxTransmitter);\n   }\n+\n+  public Enclave createVertxEnclave(\n+      final URI enclaveUri,\n+      final Path orionKeyStoreFile,\n+      final Path orionKeyStorePasswordFile,\n+      final Path orionWhitelistFile) {\n+    if (enclaveUri.getPort() == -1) {\n+      throw new EnclaveIOException(\"Illegal URI - no port specified\");\n+    }\n+\n+    final HttpClientOptions clientOptions = new HttpClientOptions();\n+    clientOptions.setDefaultHost(enclaveUri.getHost());\n+    clientOptions.setDefaultPort(enclaveUri.getPort());\n+    clientOptions.setConnectTimeout(CONNECT_TIMEOUT);", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkxNTg0Ng==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373915846", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T04:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTgyMA=="}], "type": "inlineReview", "revised_code": {"commit": "5dba972af5858efea508702b24014a4bd8b5c433", "chunk": "diff --git a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\nindex 96814a6ec..ad5a8df15 100644\n--- a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n+++ b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n\n@@ -75,9 +76,8 @@ public class EnclaveFactory {\n         clientOptions.setPfxKeyCertOptions(\n             convertFrom(orionKeyStoreFile, orionKeyStorePasswordFile));\n       }\n-      final boolean trustCA = false;\n       clientOptions.setTrustOptions(\n-          VertxTrustOptions.whitelistServers(orionWhitelistFile, trustCA));\n+          VertxTrustOptions.whitelistServers(orionWhitelistFile, TRUST_CA));\n     } catch (final NoSuchFileException e) {\n       throw new InvalidConfigurationException(\n           \"Requested file \" + e.getMessage() + \" does not exist at specified location.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTg2NA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373881864", "bodyText": "Can make this a constant", "author": "jframe", "createdAt": "2020-02-02T22:45:34Z", "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "diffHunk": "@@ -43,4 +53,57 @@ public Enclave createVertxEnclave(final URI enclaveUri) {\n \n     return new Enclave(vertxTransmitter);\n   }\n+\n+  public Enclave createVertxEnclave(\n+      final URI enclaveUri,\n+      final Path orionKeyStoreFile,\n+      final Path orionKeyStorePasswordFile,\n+      final Path orionWhitelistFile) {\n+    if (enclaveUri.getPort() == -1) {\n+      throw new EnclaveIOException(\"Illegal URI - no port specified\");\n+    }\n+\n+    final HttpClientOptions clientOptions = new HttpClientOptions();\n+    clientOptions.setDefaultHost(enclaveUri.getHost());\n+    clientOptions.setDefaultPort(enclaveUri.getPort());\n+    clientOptions.setConnectTimeout(CONNECT_TIMEOUT);\n+\n+    // set TLS options if passed in\n+    try {\n+      if (orionKeyStoreFile != null && orionKeyStorePasswordFile != null) {\n+        clientOptions.setSsl(true);\n+        clientOptions.setPfxKeyCertOptions(\n+            convertFrom(orionKeyStoreFile, orionKeyStorePasswordFile));\n+      }\n+      final boolean trustCA = false;", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NDMyMw==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373894323", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T01:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MTg2NA=="}], "type": "inlineReview", "revised_code": {"commit": "5dba972af5858efea508702b24014a4bd8b5c433", "chunk": "diff --git a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\nindex 96814a6ec..ad5a8df15 100644\n--- a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n+++ b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n\n@@ -75,9 +76,8 @@ public class EnclaveFactory {\n         clientOptions.setPfxKeyCertOptions(\n             convertFrom(orionKeyStoreFile, orionKeyStorePasswordFile));\n       }\n-      final boolean trustCA = false;\n       clientOptions.setTrustOptions(\n-          VertxTrustOptions.whitelistServers(orionWhitelistFile, trustCA));\n+          VertxTrustOptions.whitelistServers(orionWhitelistFile, TRUST_CA));\n     } catch (final NoSuchFileException e) {\n       throw new InvalidConfigurationException(\n           \"Requested file \" + e.getMessage() + \" does not exist at specified location.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MjAzMA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373882030", "bodyText": "As before, shouldn't mention these as being orion options I don't think. Perhaps just enclaveKeyStoreFile etc.", "author": "jframe", "createdAt": "2020-02-02T22:47:41Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java", "diffHunk": "@@ -165,6 +165,9 @@ public String toString() {\n     private PrivacyStorageProvider storageProvider;\n     private EnclaveFactory enclaveFactory;\n     private boolean multiTenancyEnabled;\n+    private Path orionKeyStoreFile;", "originalCommit": "aa84d31768e7fa10e204b652f2b5090c47ae1afb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NDUwOA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373894508", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-03T01:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MjAzMA=="}], "type": "inlineReview", "revised_code": {"commit": "5dba972af5858efea508702b24014a4bd8b5c433", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\nindex 0b28b47d2..d60f848df 100644\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n+++ b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n\n@@ -165,9 +165,9 @@ public class PrivacyParameters {\n     private PrivacyStorageProvider storageProvider;\n     private EnclaveFactory enclaveFactory;\n     private boolean multiTenancyEnabled;\n-    private Path orionKeyStoreFile;\n-    private Path orionKeyStorePasswordFile;\n-    private Path orionClientWhitelistFile;\n+    private Path privacyKeyStoreFile;\n+    private Path privacyKeyStorePasswordFile;\n+    private Path privacyClientWhitelistFile;\n \n     public Builder setPrivacyAddress(final Integer privacyAddress) {\n       this.privacyAddress = privacyAddress;\n"}}, {"oid": "d5d57b89f264e0bc041d779d444e724ee7ef305e", "url": "https://github.com/hyperledger/besu/commit/d5d57b89f264e0bc041d779d444e724ee7ef305e", "message": "renamed orion params to privacy\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T01:12:42Z", "type": "commit"}, {"oid": "44dbd97ffa9b45f9d02b695116cdb48f50c55a80", "url": "https://github.com/hyperledger/besu/commit/44dbd97ffa9b45f9d02b695116cdb48f50c55a80", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into bp-8-tls-to-orion\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T01:13:19Z", "type": "commit"}, {"oid": "9b5e435c90ade94f70619437d00c142f1fbf9687", "url": "https://github.com/hyperledger/besu/commit/9b5e435c90ade94f70619437d00c142f1fbf9687", "message": "rename orion -> httpServer\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T01:22:30Z", "type": "commit"}, {"oid": "5dba972af5858efea508702b24014a4bd8b5c433", "url": "https://github.com/hyperledger/besu/commit/5dba972af5858efea508702b24014a4bd8b5c433", "message": "rename orion -> privacy\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T01:31:50Z", "type": "commit"}, {"oid": "4163ed744dd313ba180e41689b7abd0b3b2a3496", "url": "https://github.com/hyperledger/besu/commit/4163ed744dd313ba180e41689b7abd0b3b2a3496", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into bp-8-tls-to-orion\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T03:09:43Z", "type": "commit"}, {"oid": "c4a9a037b7d362670c4ce00471e4ab5f7e35bc85", "url": "https://github.com/hyperledger/besu/commit/c4a9a037b7d362670c4ce00471e4ab5f7e35bc85", "message": "rename orion params\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T03:19:55Z", "type": "commit"}, {"oid": "bd951ebb32afe76a81c0b8701682342db9f8a108", "url": "https://github.com/hyperledger/besu/commit/bd951ebb32afe76a81c0b8701682342db9f8a108", "message": "refactoring to reduce dupe; remove \\n\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T04:16:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyNzYxMA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r373927610", "bodyText": "can make this static as well", "author": "jframe", "createdAt": "2020-02-03T05:31:52Z", "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "diffHunk": "@@ -14,15 +14,26 @@\n  */\n package org.hyperledger.besu.enclave;\n \n+import org.hyperledger.besu.util.InvalidConfigurationException;\n+\n+import java.io.IOException;\n import java.net.URI;\n+import java.nio.file.AccessDeniedException;\n+import java.nio.file.Files;\n+import java.nio.file.NoSuchFileException;\n+import java.nio.file.Path;\n \n+import com.google.common.base.Charsets;\n import io.vertx.core.Vertx;\n import io.vertx.core.http.HttpClientOptions;\n+import io.vertx.core.net.PfxOptions;\n+import org.apache.tuweni.net.tls.VertxTrustOptions;\n \n public class EnclaveFactory {\n \n   private final Vertx vertx;\n   private static final int CONNECT_TIMEOUT = 1000;\n+  private final boolean TRUST_CA = false;", "originalCommit": "5dba972af5858efea508702b24014a4bd8b5c433", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f64377d16794bf8419d5879df7aea9b941285ba4", "chunk": "diff --git a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\nindex ad5a8df15..c8c945a7c 100644\n--- a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n+++ b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n\n@@ -40,14 +40,7 @@ public class EnclaveFactory {\n   }\n \n   public Enclave createVertxEnclave(final URI enclaveUri) {\n-    if (enclaveUri.getPort() == -1) {\n-      throw new EnclaveIOException(\"Illegal URI - no port specified\");\n-    }\n-\n-    final HttpClientOptions clientOptions = new HttpClientOptions();\n-    clientOptions.setDefaultHost(enclaveUri.getHost());\n-    clientOptions.setDefaultPort(enclaveUri.getPort());\n-    clientOptions.setConnectTimeout(CONNECT_TIMEOUT);\n+    final HttpClientOptions clientOptions = createNonTlsClientOptions(enclaveUri);\n \n     final RequestTransmitter vertxTransmitter =\n         new VertxRequestTransmitter(vertx.createHttpClient(clientOptions));\n"}}, {"oid": "f64377d16794bf8419d5879df7aea9b941285ba4", "url": "https://github.com/hyperledger/besu/commit/f64377d16794bf8419d5879df7aea9b941285ba4", "message": "added test for tls options dependency check\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-03T21:17:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3OTE3Mw==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374379173", "bodyText": "can these be seperate builder setters", "author": "jframe", "createdAt": "2020-02-03T22:31:38Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java", "diffHunk": "@@ -201,6 +204,16 @@ public Builder setMultiTenancyEnabled(final boolean multiTenancyEnabled) {\n       return this;\n     }\n \n+    public Builder setTlsConfiguration(", "originalCommit": "5dba972af5858efea508702b24014a4bd8b5c433", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1fdd24054f0eaa293440381c52e0b879c5e291a8", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\nindex d60f848df..135dba3a7 100644\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n+++ b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n\n@@ -204,13 +204,18 @@ public class PrivacyParameters {\n       return this;\n     }\n \n-    public Builder setTlsConfiguration(\n-        final Path privacyKeyStoreFile,\n-        final Path privacyKeyStorePasswordFile,\n-        final Path privacyClientWhitelistFile) {\n+    public Builder setPrivacyKeyStoreFile(final Path privacyKeyStoreFile) {\n       this.privacyKeyStoreFile = privacyKeyStoreFile;\n+      return this;\n+    }\n+\n+    public Builder setPrivacyKeyStorePasswordFile(final Path privacyKeyStorePasswordFile) {\n       this.privacyKeyStorePasswordFile = privacyKeyStorePasswordFile;\n-      this.privacyClientWhitelistFile = privacyClientWhitelistFile;\n+      return this;\n+    }\n+\n+    public Builder setPrivacyEnclaveWhitelistFile(final Path privacyEnclaveWhitelistFile) {\n+      this.privacyEnclaveWhitelistFile = privacyEnclaveWhitelistFile;\n       return this;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3OTU2OA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374379568", "bodyText": "update this param and field to privacyServersWhitelistFile as that's what it's called in BesuCommand", "author": "jframe", "createdAt": "2020-02-03T22:32:33Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java", "diffHunk": "@@ -201,6 +204,16 @@ public Builder setMultiTenancyEnabled(final boolean multiTenancyEnabled) {\n       return this;\n     }\n \n+    public Builder setTlsConfiguration(\n+        final Path privacyKeyStoreFile,\n+        final Path privacyKeyStorePasswordFile,\n+        final Path privacyClientWhitelistFile) {", "originalCommit": "5dba972af5858efea508702b24014a4bd8b5c433", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1fdd24054f0eaa293440381c52e0b879c5e291a8", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\nindex d60f848df..135dba3a7 100644\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n+++ b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n\n@@ -204,13 +204,18 @@ public class PrivacyParameters {\n       return this;\n     }\n \n-    public Builder setTlsConfiguration(\n-        final Path privacyKeyStoreFile,\n-        final Path privacyKeyStorePasswordFile,\n-        final Path privacyClientWhitelistFile) {\n+    public Builder setPrivacyKeyStoreFile(final Path privacyKeyStoreFile) {\n       this.privacyKeyStoreFile = privacyKeyStoreFile;\n+      return this;\n+    }\n+\n+    public Builder setPrivacyKeyStorePasswordFile(final Path privacyKeyStorePasswordFile) {\n       this.privacyKeyStorePasswordFile = privacyKeyStorePasswordFile;\n-      this.privacyClientWhitelistFile = privacyClientWhitelistFile;\n+      return this;\n+    }\n+\n+    public Builder setPrivacyEnclaveWhitelistFile(final Path privacyEnclaveWhitelistFile) {\n+      this.privacyEnclaveWhitelistFile = privacyEnclaveWhitelistFile;\n       return this;\n     }\n \n"}}, {"oid": "147850837d7e65014af28471f7bf7c17c36afd9b", "url": "https://github.com/hyperledger/besu/commit/147850837d7e65014af28471f7bf7c17c36afd9b", "message": "naming\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T02:28:34Z", "type": "commit"}, {"oid": "1fdd24054f0eaa293440381c52e0b879c5e291a8", "url": "https://github.com/hyperledger/besu/commit/1fdd24054f0eaa293440381c52e0b879c5e291a8", "message": "refactoring\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T02:29:45Z", "type": "commit"}, {"oid": "ce7f512a4641e31ed6caf977fa2b37a7cdd5bd43", "url": "https://github.com/hyperledger/besu/commit/ce7f512a4641e31ed6caf977fa2b37a7cdd5bd43", "message": "privacy tls options require privacy to be enabled\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T02:52:43Z", "type": "commit"}, {"oid": "862e7907fae9e04a0ea26a474bf05f0ada8c6fd5", "url": "https://github.com/hyperledger/besu/commit/862e7907fae9e04a0ea26a474bf05f0ada8c6fd5", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into bp-8-tls-to-orion\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T02:52:50Z", "type": "commit"}, {"oid": "93adc7e99a6f379e68cb7829c93413887b7e8ccf", "url": "https://github.com/hyperledger/besu/commit/93adc7e99a6f379e68cb7829c93413887b7e8ccf", "message": "static field\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T02:57:32Z", "type": "commit"}, {"oid": "4708ac498ab24a0d0cc2e402b359c8a869ae4eea", "url": "https://github.com/hyperledger/besu/commit/4708ac498ab24a0d0cc2e402b359c8a869ae4eea", "message": "unused variable\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T02:59:57Z", "type": "commit"}, {"oid": "4b23f01e0903fd581e441e4e28348cc5d404202d", "url": "https://github.com/hyperledger/besu/commit/4b23f01e0903fd581e441e4e28348cc5d404202d", "message": "help wording\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T03:02:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MTUwMQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374461501", "bodyText": "nit: final", "author": "jframe", "createdAt": "2020-02-04T03:46:21Z", "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "diffHunk": "@@ -37,10 +58,62 @@ public Enclave createVertxEnclave(final URI enclaveUri) {\n     clientOptions.setDefaultHost(enclaveUri.getHost());\n     clientOptions.setDefaultPort(enclaveUri.getPort());\n     clientOptions.setConnectTimeout(CONNECT_TIMEOUT);\n+    return clientOptions;\n+  }\n+\n+  private HttpClientOptions createTlsClientOptions(\n+      final URI enclaveUri,\n+      final Path privacyKeyStoreFile,\n+      final Path privacyKeyStorePasswordFile,\n+      final Path privacyWhitelistFile) {\n+\n+    final HttpClientOptions clientOptions = createNonTlsClientOptions(enclaveUri);\n+    try {\n+      if (privacyKeyStoreFile != null && privacyKeyStorePasswordFile != null) {\n+        clientOptions.setSsl(true);\n+        clientOptions.setPfxKeyCertOptions(\n+            convertFrom(privacyKeyStoreFile, privacyKeyStorePasswordFile));\n+      }\n+      clientOptions.setTrustOptions(\n+          VertxTrustOptions.whitelistServers(privacyWhitelistFile, TRUST_CA));\n+    } catch (final NoSuchFileException e) {\n+      throw new InvalidConfigurationException(\n+          \"Requested file \" + e.getMessage() + \" does not exist at specified location.\");\n+    } catch (final AccessDeniedException e) {\n+      throw new InvalidConfigurationException(\n+          \"Current user does not have permissions to access \" + e.getMessage());\n+    } catch (final IllegalArgumentException e) {\n+      throw new InvalidConfigurationException(\"Illegally formatted client fingerprint file.\");\n+    } catch (final IOException e) {\n+      throw new InvalidConfigurationException(\"Failed to load TLS files \" + e.getMessage());\n+    }\n+    return clientOptions;\n+  }\n+\n+  public Enclave createVertxEnclave(\n+      final URI enclaveUri,\n+      final Path privacyKeyStoreFile,\n+      final Path privacyKeyStorePasswordFile,\n+      final Path privacyWhitelistFile) {\n+\n+    HttpClientOptions clientOptions =", "originalCommit": "4b23f01e0903fd581e441e4e28348cc5d404202d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MzE2MA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374463160", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-04T03:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MTUwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "49f08e4d40241c81c51e7915213f7d6e540b901d", "chunk": "diff --git a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\nindex d4e6d4e48..66d56a76d 100644\n--- a/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n+++ b/enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java\n\n@@ -96,7 +96,7 @@ public class EnclaveFactory {\n       final Path privacyKeyStorePasswordFile,\n       final Path privacyWhitelistFile) {\n \n-    HttpClientOptions clientOptions =\n+    final HttpClientOptions clientOptions =\n         createTlsClientOptions(\n             enclaveUri, privacyKeyStoreFile, privacyKeyStorePasswordFile, privacyWhitelistFile);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MTc3OA==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374461778", "bodyText": "rename the field name to match the command option i.e. privacyTlsKnownEnclaveFile", "author": "jframe", "createdAt": "2020-02-04T03:48:05Z", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -524,6 +524,31 @@ void setBannedNodeIds(final List<String> values) {\n           \"Require authentication for the JSON-RPC WebSocket service (default: ${DEFAULT-VALUE})\")\n   private final Boolean isRpcWsAuthenticationEnabled = false;\n \n+  @Option(\n+      names = {\"--privacy-tls-enabled\"},\n+      paramLabel = MANDATORY_FILE_FORMAT_HELP,\n+      description = \"Enable TLS for connecting to privacy enclave (default: ${DEFAULT-VALUE})\")\n+  private final Boolean isPrivacyTlsEnabled = false;\n+\n+  @Option(\n+      names = \"--privacy-tls-keystore-file\",\n+      paramLabel = MANDATORY_FILE_FORMAT_HELP,\n+      description =\n+          \"Path to a PKCS#12 formatted keystore; used to enable TLS on inbound connections.\")\n+  private final Path privacyKeyStoreFile = null;\n+\n+  @Option(\n+      names = \"--privacy-tls-keystore-password-file\",\n+      paramLabel = MANDATORY_FILE_FORMAT_HELP,\n+      description = \"Path to a file containing the password used to decrypt the keystore.\")\n+  private final Path privacyKeyStorePasswordFile = null;\n+\n+  @Option(\n+      names = \"--privacy-tls-known-enclave-file\",\n+      paramLabel = MANDATORY_FILE_FORMAT_HELP,\n+      description = \"Path to a file containing the fingerprints of the authorized privacy enclave.\")\n+  private final Path privacyEnclaveWhitelistFile = null;", "originalCommit": "4b23f01e0903fd581e441e4e28348cc5d404202d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MzE4NQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374463185", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-04T03:55:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MTc3OA=="}], "type": "inlineReview", "revised_code": {"commit": "49f08e4d40241c81c51e7915213f7d6e540b901d", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\nindex 7bbdd6bbf..fc57772a0 100644\n--- a/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n+++ b/besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n\n@@ -547,7 +547,7 @@ public class BesuCommand implements DefaultCommandValues, Runnable {\n       names = \"--privacy-tls-known-enclave-file\",\n       paramLabel = MANDATORY_FILE_FORMAT_HELP,\n       description = \"Path to a file containing the fingerprints of the authorized privacy enclave.\")\n-  private final Path privacyEnclaveWhitelistFile = null;\n+  private final Path privacyTlsKnownEnclaveFile = null;\n \n   @Option(\n       names = {\"--metrics-enabled\"},\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MTkyMQ==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374461921", "bodyText": "rename to setPrivacyTlsKnownEnclaveFile to match the command line name change", "author": "jframe", "createdAt": "2020-02-04T03:48:52Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java", "diffHunk": "@@ -201,6 +204,21 @@ public Builder setMultiTenancyEnabled(final boolean multiTenancyEnabled) {\n       return this;\n     }\n \n+    public Builder setPrivacyKeyStoreFile(final Path privacyKeyStoreFile) {\n+      this.privacyKeyStoreFile = privacyKeyStoreFile;\n+      return this;\n+    }\n+\n+    public Builder setPrivacyKeyStorePasswordFile(final Path privacyKeyStorePasswordFile) {\n+      this.privacyKeyStorePasswordFile = privacyKeyStorePasswordFile;\n+      return this;\n+    }\n+\n+    public Builder setPrivacyEnclaveWhitelistFile(final Path privacyEnclaveWhitelistFile) {", "originalCommit": "4b23f01e0903fd581e441e4e28348cc5d404202d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MzE3Mg==", "url": "https://github.com/hyperledger/besu/pull/324#discussion_r374463172", "bodyText": "done", "author": "macfarla", "createdAt": "2020-02-04T03:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2MTkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "49f08e4d40241c81c51e7915213f7d6e540b901d", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\nindex 135dba3a7..013b73968 100644\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n+++ b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/PrivacyParameters.java\n\n@@ -214,8 +214,8 @@ public class PrivacyParameters {\n       return this;\n     }\n \n-    public Builder setPrivacyEnclaveWhitelistFile(final Path privacyEnclaveWhitelistFile) {\n-      this.privacyEnclaveWhitelistFile = privacyEnclaveWhitelistFile;\n+    public Builder setPrivacyTlsKnownEnclaveFile(final Path privacyTlsKnownEnclaveFile) {\n+      this.privacyTlsKnownEnclaveFile = privacyTlsKnownEnclaveFile;\n       return this;\n     }\n \n"}}, {"oid": "49f08e4d40241c81c51e7915213f7d6e540b901d", "url": "https://github.com/hyperledger/besu/commit/49f08e4d40241c81c51e7915213f7d6e540b901d", "message": "review comments\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-02-04T03:57:49Z", "type": "commit"}]}