{"pr_number": 1392, "pr_title": "Add debug_standardTraceBlockToFile JSON RPC method", "pr_createdAt": "2020-09-23T16:24:35Z", "pr_url": "https://github.com/hyperledger/besu/pull/1392", "timeline": [{"oid": "bcbb84e63ea6d0876870fb623a2a5151385ec06d", "url": "https://github.com/hyperledger/besu/commit/bcbb84e63ea6d0876870fb623a2a5151385ec06d", "message": "add debug_standardTraceBlockToFile JSON RPC method\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-23T16:18:03Z", "type": "commit"}, {"oid": "d332694f46ca845b0d8476d3066d809c8398df65", "url": "https://github.com/hyperledger/besu/commit/d332694f46ca845b0d8476d3066d809c8398df65", "message": "update CHANGELOG.md\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-23T16:36:57Z", "type": "commit"}, {"oid": "bdba868a6b418c078bf3ad6240169139d03bfe95", "url": "https://github.com/hyperledger/besu/commit/bdba868a6b418c078bf3ad6240169139d03bfe95", "message": "Merge branch 'master' into feature/add-standard-trace-block-to-file", "committedDate": "2020-09-23T16:37:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczNTU5MQ==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r493735591", "bodyText": "Since it's been moved out of EVM tool perhaps a different name, StandardJsonTracer?", "author": "shemnon", "createdAt": "2020-09-23T16:39:07Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/EVMToolTracer.java", "diffHunk": "@@ -34,30 +32,42 @@\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.units.bigints.UInt256;\n \n-class EVMToolTracer implements OperationTracer {\n+public class EVMToolTracer implements OperationTracer {", "originalCommit": "bdba868a6b418c078bf3ad6240169139d03bfe95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4ODcxNA==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r494288714", "bodyText": "Done", "author": "matkt", "createdAt": "2020-09-24T12:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczNTU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "50255af8e93df0aaac67ddee16548f79ac68265d", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/EVMToolTracer.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/EVMToolTracer.java\ndeleted file mode 100644\nindex 1db6525bb6..0000000000\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/EVMToolTracer.java\n+++ /dev/null\n\n@@ -1,126 +0,0 @@\n-/*\n- * Copyright ConsenSys AG.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n- * the License. You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n- * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations under the License.\n- *\n- * SPDX-License-Identifier: Apache-2.0\n- *\n- */\n-\n-package org.hyperledger.besu.ethereum.vm;\n-\n-import org.hyperledger.besu.ethereum.core.Gas;\n-import org.hyperledger.besu.ethereum.core.Transaction;\n-import org.hyperledger.besu.ethereum.mainnet.TransactionProcessor;\n-import org.hyperledger.besu.ethereum.vm.Operation.OperationResult;\n-import org.hyperledger.besu.ethereum.vm.operations.ReturnStack;\n-\n-import java.io.PrintStream;\n-import java.nio.charset.StandardCharsets;\n-import java.util.Optional;\n-\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ArrayNode;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n-import org.apache.tuweni.bytes.Bytes;\n-import org.apache.tuweni.units.bigints.UInt256;\n-\n-public class EVMToolTracer implements OperationTracer {\n-\n-  private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n-\n-  private final PrintStream out;\n-  private final boolean showMemory;\n-\n-  public EVMToolTracer(final PrintStream out, final boolean showMemory) {\n-    this.out = out;\n-    this.showMemory = showMemory;\n-  }\n-\n-  public static String shortNumber(final UInt256 number) {\n-    return number.isZero() ? \"0x0\" : number.toShortHexString();\n-  }\n-\n-  private static String shortBytes(final Bytes bytes) {\n-    return bytes.isZero() ? \"0x0\" : bytes.toShortHexString();\n-  }\n-\n-  public static String summaryTrace(\n-      final Transaction transaction, final long timer, final TransactionProcessor.Result result) {\n-    final ObjectNode summaryLine = OBJECT_MAPPER.createObjectNode();\n-    summaryLine.put(\"output\", result.getOutput().toUnprefixedHexString());\n-    summaryLine.put(\n-        \"gasUsed\",\n-        EVMToolTracer.shortNumber(\n-            UInt256.valueOf(transaction.getGasLimit() - result.getGasRemaining())));\n-    summaryLine.put(\"time\", timer);\n-    return summaryLine.toString();\n-  }\n-\n-  @Override\n-  public void traceExecution(\n-      final MessageFrame messageFrame, final ExecuteOperation executeOperation) {\n-    final ObjectNode traceLine = OBJECT_MAPPER.createObjectNode();\n-\n-    final Operation currentOp = messageFrame.getCurrentOperation();\n-    traceLine.put(\"pc\", messageFrame.getPC());\n-    traceLine.put(\"op\", Bytes.of(currentOp.getOpcode()).toInt());\n-    traceLine.put(\"gas\", shortNumber(messageFrame.getRemainingGas().asUInt256()));\n-    traceLine.putNull(\"gasCost\");\n-    traceLine.putNull(\"memory\");\n-    traceLine.putNull(\"memSize\");\n-    final ArrayNode stack = traceLine.putArray(\"stack\");\n-    for (int i = messageFrame.stackSize() - 1; i >= 0; i--) {\n-      stack.add(shortBytes(messageFrame.getStackItem(i)));\n-    }\n-    final ArrayNode returnStack = traceLine.putArray(\"returnStack\");\n-    final ReturnStack rs = messageFrame.getReturnStack();\n-    for (int i = rs.size() - 1; i >= 0; i--) {\n-      returnStack.add(rs.get(i));\n-    }\n-    Bytes returnData = messageFrame.getReturnData();\n-    traceLine.put(\"returnData\", returnData.size() > 0 ? returnData.toHexString() : null);\n-    traceLine.put(\"depth\", messageFrame.getMessageStackDepth() + 1);\n-    traceLine.put(\"refund\", messageFrame.getGasRefund().toLong());\n-\n-    final OperationResult executeResult = executeOperation.execute();\n-    traceLine.put(\n-        \"gasCost\", executeResult.getGasCost().map(gas -> shortNumber(gas.asUInt256())).orElse(\"\"));\n-    if (showMemory) {\n-      traceLine.put(\n-          \"memory\",\n-          messageFrame.readMemory(UInt256.ZERO, messageFrame.memoryWordSize()).toHexString());\n-    } else {\n-      traceLine.put(\"memory\", \"0x\");\n-    }\n-    traceLine.put(\"memSize\", messageFrame.memoryByteSize());\n-\n-    final String error =\n-        executeResult\n-            .getHaltReason()\n-            .map(ExceptionalHaltReason::getDescription)\n-            .orElse(\n-                messageFrame\n-                    .getRevertReason()\n-                    .map(bytes -> new String(bytes.toArrayUnsafe(), StandardCharsets.UTF_8))\n-                    .orElse(\"\"));\n-    traceLine.put(\"opName\", currentOp.getName());\n-    traceLine.put(\"error\", error);\n-    out.println(traceLine.toString());\n-  }\n-\n-  @Override\n-  public void tracePrecompileCall(\n-      final MessageFrame frame, final Gas gasRequirement, final Bytes output) {}\n-\n-  @Override\n-  public void traceAccountCreationResult(\n-      final MessageFrame frame, final Optional<ExceptionalHaltReason> haltReason) {}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczOTM2Nw==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r493739367", "bodyText": "Use standard getter/setters", "author": "shemnon", "createdAt": "2020-09-23T16:45:07Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java", "diffHunk": "@@ -14,30 +14,53 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters;\n \n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.debug.TraceOptions;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import org.immutables.value.Value;\n \n+@Value.Immutable\n+@JsonSerialize(as = ImmutableTransactionTraceParams.class)\n+@JsonDeserialize(as = ImmutableTransactionTraceParams.class)\n @JsonIgnoreProperties(ignoreUnknown = true)\n-public class TransactionTraceParams {\n-\n-  private final boolean disableStorage;\n-  private final boolean disableMemory;\n-  private final boolean disableStack;\n-\n-  @JsonCreator()\n-  public TransactionTraceParams(\n-      @JsonProperty(\"disableStorage\") final boolean disableStorage,\n-      @JsonProperty(\"disableMemory\") final boolean disableMemory,\n-      @JsonProperty(\"disableStack\") final boolean disableStack) {\n-    this.disableStorage = disableStorage;\n-    this.disableMemory = disableMemory;\n-    this.disableStack = disableStack;\n+public interface TransactionTraceParams {\n+\n+  @JsonProperty(\"txHash\")\n+  @Nullable\n+  String transactionHash();", "originalCommit": "bdba868a6b418c078bf3ad6240169139d03bfe95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4ODc3Nw==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r494288777", "bodyText": "Done", "author": "matkt", "createdAt": "2020-09-24T12:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczOTM2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "50255af8e93df0aaac67ddee16548f79ac68265d", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java\nindex b704ee8259..da7014f5be 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java\n\n@@ -14,10 +14,8 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters;\n \n-import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.debug.TraceOptions;\n \n-import java.util.Optional;\n import javax.annotation.Nullable;\n \n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczOTY4NQ==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r493739685", "bodyText": "This will need to be renamed, or dropped.", "author": "shemnon", "createdAt": "2020-09-23T16:45:38Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java", "diffHunk": "@@ -14,30 +14,53 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters;\n \n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.debug.TraceOptions;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import org.immutables.value.Value;\n \n+@Value.Immutable\n+@JsonSerialize(as = ImmutableTransactionTraceParams.class)\n+@JsonDeserialize(as = ImmutableTransactionTraceParams.class)\n @JsonIgnoreProperties(ignoreUnknown = true)\n-public class TransactionTraceParams {\n-\n-  private final boolean disableStorage;\n-  private final boolean disableMemory;\n-  private final boolean disableStack;\n-\n-  @JsonCreator()\n-  public TransactionTraceParams(\n-      @JsonProperty(\"disableStorage\") final boolean disableStorage,\n-      @JsonProperty(\"disableMemory\") final boolean disableMemory,\n-      @JsonProperty(\"disableStack\") final boolean disableStack) {\n-    this.disableStorage = disableStorage;\n-    this.disableMemory = disableMemory;\n-    this.disableStack = disableStack;\n+public interface TransactionTraceParams {\n+\n+  @JsonProperty(\"txHash\")\n+  @Nullable\n+  String transactionHash();\n+\n+  @JsonProperty(value = \"disableStorage\")\n+  @Value.Default\n+  default boolean disableStorage() {\n+    return false;\n+  }\n+\n+  @JsonProperty(value = \"disableMemory\")\n+  @Value.Default\n+  default boolean disableMemory() {\n+    return false;\n+  }\n+\n+  @JsonProperty(value = \"disableStack\")\n+  @Value.Default\n+  default boolean disableStack() {\n+    return false;\n+  }\n+\n+  default TraceOptions traceOptions() {\n+    return new TraceOptions(!disableStorage(), !disableMemory(), !disableStack());\n   }\n \n-  public TraceOptions traceOptions() {\n-    return new TraceOptions(!disableStorage, !disableMemory, !disableStack);\n+  default Optional<Hash> getTransactionHash() {", "originalCommit": "bdba868a6b418c078bf3ad6240169139d03bfe95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI4ODgxOQ==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r494288819", "bodyText": "Done", "author": "matkt", "createdAt": "2020-09-24T12:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczOTY4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "50255af8e93df0aaac67ddee16548f79ac68265d", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java\nindex b704ee8259..da7014f5be 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/parameters/TransactionTraceParams.java\n\n@@ -14,10 +14,8 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters;\n \n-import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.debug.TraceOptions;\n \n-import java.util.Optional;\n import javax.annotation.Nullable;\n \n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0MTYwMg==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r493741602", "bodyText": "Do we want these going to tmp?  perhaps our data root under traces?", "author": "shemnon", "createdAt": "2020-09-23T16:48:56Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/processor/TransactionTracer.java", "diffHunk": "@@ -46,7 +61,71 @@ public TransactionTracer(final BlockReplay blockReplay) {\n                   tracer,\n                   new BlockHashLookup(header, blockchain),\n                   false);\n-          return new TransactionTrace(transaction, result, tracer.getTraceFrames());\n+          timer.stop();\n+          return new TransactionTrace(\n+              transaction, result, tracer.getTraceFrames(), timer.elapsed(TimeUnit.NANOSECONDS));\n+        });\n+  }\n+\n+  public Optional<TransactionTrace> traceTransaction(\n+      final Hash blockHash, final Hash transactionHash, final EVMToolTracer tracer) {\n+    return blockReplay.beforeTransactionInBlock(\n+        blockHash,\n+        transactionHash,\n+        (transaction, header, blockchain, mutableWorldState, transactionProcessor) -> {\n+          final Stopwatch timer = Stopwatch.createStarted();\n+          final Result result =\n+              transactionProcessor.processTransaction(\n+                  blockchain,\n+                  mutableWorldState.updater(),\n+                  header,\n+                  transaction,\n+                  header.getCoinbase(),\n+                  tracer,\n+                  new BlockHashLookup(header, blockchain),\n+                  false,\n+                  new TransactionValidationParams.Builder().allowFutureNonce(true).build());\n+\n+          timer.stop();\n+          return new TransactionTrace(\n+              transaction, result, new ArrayList<>(), timer.elapsed(TimeUnit.NANOSECONDS));\n         });\n   }\n+\n+  public List<String> traceTransactionToFile(\n+      final Hash blockHash,\n+      final List<Transaction> transactions,\n+      final Optional<TransactionTraceParams> transactionTraceParams) {\n+    final List<String> traces = new ArrayList<>();\n+    try {\n+      final Optional<Hash> selectedHash =\n+          transactionTraceParams.flatMap(TransactionTraceParams::getTransactionHash);\n+      final boolean showMemory =\n+          transactionTraceParams.map(TransactionTraceParams::disableMemory).orElse(true);\n+      for (int i = 0; i < transactions.size(); i++) {\n+        final Transaction transaction = transactions.get(i);\n+        if (selectedHash.isEmpty()\n+            || selectedHash.filter(isEqual(transaction.getHash())).isPresent()) {\n+          final File tmpFile =", "originalCommit": "bdba868a6b418c078bf3ad6240169139d03bfe95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI5MDYxNg==", "url": "https://github.com/hyperledger/besu/pull/1392#discussion_r494290616", "bodyText": "I don't have a strong opinion on it. I did this to be consistent with the other clients. But I just changed to put it in the data/traces now", "author": "matkt", "createdAt": "2020-09-24T12:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0MTYwMg=="}], "type": "inlineReview", "revised_code": {"commit": "50255af8e93df0aaac67ddee16548f79ac68265d", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/processor/TransactionTracer.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/processor/TransactionTracer.java\nindex d478746866..a8328101ac 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/processor/TransactionTracer.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/processor/TransactionTracer.java\n\n@@ -68,7 +78,7 @@ public class TransactionTracer {\n   }\n \n   public Optional<TransactionTrace> traceTransaction(\n-      final Hash blockHash, final Hash transactionHash, final EVMToolTracer tracer) {\n+      final Hash blockHash, final Hash transactionHash, final StandardJsonTracer tracer) {\n     return blockReplay.beforeTransactionInBlock(\n         blockHash,\n         transactionHash,\n"}}, {"oid": "50255af8e93df0aaac67ddee16548f79ac68265d", "url": "https://github.com/hyperledger/besu/commit/50255af8e93df0aaac67ddee16548f79ac68265d", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-24T12:46:54Z", "type": "commit"}, {"oid": "38046dacf9fca384ca33b81c2102936342ab6ae9", "url": "https://github.com/hyperledger/besu/commit/38046dacf9fca384ca33b81c2102936342ab6ae9", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-24T12:47:21Z", "type": "commit"}, {"oid": "c45752e92d40607de595998a9789770a9fdf9663", "url": "https://github.com/hyperledger/besu/commit/c45752e92d40607de595998a9789770a9fdf9663", "message": "Merge branch 'master' into feature/add-standard-trace-block-to-file", "committedDate": "2020-09-24T12:51:16Z", "type": "commit"}, {"oid": "9742da8f3986a511b32a1be23f969b8fbb1581b6", "url": "https://github.com/hyperledger/besu/commit/9742da8f3986a511b32a1be23f969b8fbb1581b6", "message": "fix pipeline\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-24T14:12:10Z", "type": "commit"}, {"oid": "76cbd6300b8ccf881077ce85463a7d9239168258", "url": "https://github.com/hyperledger/besu/commit/76cbd6300b8ccf881077ce85463a7d9239168258", "message": "Merge branch 'master' into feature/add-standard-trace-block-to-file", "committedDate": "2020-09-25T12:04:04Z", "type": "commit"}, {"oid": "2309566343460edeb19f2606299bbcdbe6500f03", "url": "https://github.com/hyperledger/besu/commit/2309566343460edeb19f2606299bbcdbe6500f03", "message": "Merge branch 'master' into feature/add-standard-trace-block-to-file", "committedDate": "2020-09-28T09:22:20Z", "type": "commit"}, {"oid": "b4cffef63b52a3a3fd54e1a35bdca16389d19fe9", "url": "https://github.com/hyperledger/besu/commit/b4cffef63b52a3a3fd54e1a35bdca16389d19fe9", "message": "update CHANGELOG.md\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-28T16:43:51Z", "type": "commit"}, {"oid": "799674fc545cec48f1a550ee04c829e91a06112a", "url": "https://github.com/hyperledger/besu/commit/799674fc545cec48f1a550ee04c829e91a06112a", "message": "Merge branch 'upstream/master' into feature/add-standard-trace-block-to-file\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-28T16:49:54Z", "type": "commit"}]}