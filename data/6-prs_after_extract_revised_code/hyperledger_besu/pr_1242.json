{"pr_number": 1242, "pr_title": "Migrate some OptionalInt's to Optional<Integer>s", "pr_createdAt": "2020-07-21T19:17:21Z", "pr_url": "https://github.com/hyperledger/besu/pull/1242", "timeline": [{"oid": "70432bb75df936f580c2d3dbcc3289ea11129628", "url": "https://github.com/hyperledger/besu/commit/70432bb75df936f580c2d3dbcc3289ea11129628", "message": "some moving from OptionalInt to Optional<Integer>\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-07-21T19:15:00Z", "type": "commit"}, {"oid": "2f01d43c024f4990556fa7e8c06b27285f7a2f5e", "url": "https://github.com/hyperledger/besu/commit/2f01d43c024f4990556fa7e8c06b27285f7a2f5e", "message": "correct assertions\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-07-21T19:55:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2NjA1MA==", "url": "https://github.com/hyperledger/besu/pull/1242#discussion_r458366050", "bodyText": "Is this change just to make it more functional style? I'd be careful doing that as it requires testing and doesn't actually improve anything.", "author": "davemec", "createdAt": "2020-07-21T20:24:40Z", "path": "besu/src/main/java/org/hyperledger/besu/Runner.java", "diffHunk": "@@ -215,14 +215,16 @@ private void writeBesuPortsToFile() {\n           .getLocalEnode()\n           .ifPresent(\n               enode -> {\n-                if (enode.getDiscoveryPort().isPresent()) {\n-                  properties.setProperty(\n-                      \"discovery\", String.valueOf(enode.getDiscoveryPort().getAsInt()));\n-                }\n-                if (enode.getListeningPort().isPresent()) {\n-                  properties.setProperty(\n-                      \"p2p\", String.valueOf(enode.getListeningPort().getAsInt()));\n-                }\n+                enode\n+                    .getDiscoveryPort()\n+                    .ifPresent(\n+                        discoveryPort ->\n+                            properties.setProperty(\"discovery\", String.valueOf(discoveryPort)));\n+                enode\n+                    .getDiscoveryPort()\n+                    .ifPresent(\n+                        listeningPort ->\n+                            properties.setProperty(\"p2p\", String.valueOf(listeningPort)));", "originalCommit": "2f01d43c024f4990556fa7e8c06b27285f7a2f5e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5720fdcbcfb887e4255de37add482f0c3ef4fa0b", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/Runner.java b/besu/src/main/java/org/hyperledger/besu/Runner.java\nindex 034358d0e8..8687a9bfdf 100644\n--- a/besu/src/main/java/org/hyperledger/besu/Runner.java\n+++ b/besu/src/main/java/org/hyperledger/besu/Runner.java\n\n@@ -221,7 +221,7 @@ public class Runner implements AutoCloseable {\n                         discoveryPort ->\n                             properties.setProperty(\"discovery\", String.valueOf(discoveryPort)));\n                 enode\n-                    .getDiscoveryPort()\n+                    .getListeningPort()\n                     .ifPresent(\n                         listeningPort ->\n                             properties.setProperty(\"p2p\", String.valueOf(listeningPort)));\n"}}, {"oid": "4f77bb9b7414cabaef6c42f7ee41c67073155d1f", "url": "https://github.com/hyperledger/besu/commit/4f77bb9b7414cabaef6c42f7ee41c67073155d1f", "message": "fix EnodeURL tests\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-07-21T20:24:51Z", "type": "commit"}, {"oid": "5720fdcbcfb887e4255de37add482f0c3ef4fa0b", "url": "https://github.com/hyperledger/besu/commit/5720fdcbcfb887e4255de37add482f0c3ef4fa0b", "message": "change port\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-07-21T20:42:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUwNDQ0NA==", "url": "https://github.com/hyperledger/besu/pull/1242#discussion_r459504444", "bodyText": "This is a concise argument as to why OptionalInt should be avoided.", "author": "shemnon", "createdAt": "2020-07-23T14:44:57Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryAgent.java", "diffHunk": "@@ -187,13 +186,7 @@ protected void handleIncomingPacket(final Endpoint sourceEndpoint, final Packet\n         packet\n             .getPacketData(PingPacketData.class)\n             .flatMap(PingPacketData::getFrom)\n-            .flatMap(\n-                fromEndpoint -> {\n-                  final OptionalInt maybePort = fromEndpoint.getTcpPort();\n-                  return maybePort.isPresent()\n-                      ? Optional.of(maybePort.getAsInt())\n-                      : Optional.empty();\n-                })\n+            .flatMap(Endpoint::getTcpPort)", "originalCommit": "5720fdcbcfb887e4255de37add482f0c3ef4fa0b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUwNjM5OQ==", "url": "https://github.com/hyperledger/besu/pull/1242#discussion_r459506399", "bodyText": "Will exceptions be thrown out of this lambda construct?  We should have a unit test to validate, all the unit tests I reviewed are all within UInt16.", "author": "shemnon", "createdAt": "2020-07-23T14:47:32Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/peers/EnodeURL.java", "diffHunk": "@@ -40,22 +41,18 @@\n \n   private final Bytes nodeId;\n   private final InetAddress ip;\n-  private final OptionalInt listeningPort;\n-  private final OptionalInt discoveryPort;\n+  private final Optional<Integer> listeningPort;\n+  private final Optional<Integer> discoveryPort;\n \n   private EnodeURL(\n       final Bytes nodeId,\n       final InetAddress address,\n-      final OptionalInt listeningPort,\n-      final OptionalInt discoveryPort) {\n+      final Optional<Integer> listeningPort,\n+      final Optional<Integer> discoveryPort) {\n     checkArgument(\n         nodeId.size() == NODE_ID_SIZE, \"Invalid node id.  Expected id of length: 64 bytes.\");\n-    checkArgument(\n-        !listeningPort.isPresent() || NetworkUtility.isValidPort(listeningPort.getAsInt()),\n-        \"Invalid listening port.  Port should be between 1 - 65535.\");\n-    checkArgument(\n-        !discoveryPort.isPresent() || NetworkUtility.isValidPort(discoveryPort.getAsInt()),\n-        \"Invalid discovery port.  Port should be between 1 - 65535.\");\n+    listeningPort.ifPresent(port -> NetworkUtility.checkPort(port, \"listening\"));", "originalCommit": "5720fdcbcfb887e4255de37add482f0c3ef4fa0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxODg5MQ==", "url": "https://github.com/hyperledger/besu/pull/1242#discussion_r459518891", "bodyText": "Is it not higher here?\nhttps://github.com/RatanRSur/besu/blob/5720fdcbcfb887e4255de37add482f0c3ef4fa0b/ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/peers/EnodeURLTest.java#L276", "author": "RatanRSur", "createdAt": "2020-07-23T15:04:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUwNjM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUyMTI5Ng==", "url": "https://github.com/hyperledger/besu/pull/1242#discussion_r459521296", "bodyText": "I was scanning for the builder variants (.discoveryPort(int) and .listeningPort(int).)  Are there negative port tests?  We should test those too.  Possibly via the builders.", "author": "shemnon", "createdAt": "2020-07-23T15:07:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUwNjM5OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "53e53e0d15d20415f3f6b2121b9b673b8b94c106", "url": "https://github.com/hyperledger/besu/commit/53e53e0d15d20415f3f6b2121b9b673b8b94c106", "message": "remove semicolon\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-07-23T15:50:39Z", "type": "commit"}, {"oid": "fdafa549fb1e92c971a81f3ffb4473af0fb451fb", "url": "https://github.com/hyperledger/besu/commit/fdafa549fb1e92c971a81f3ffb4473af0fb451fb", "message": "test builder\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-07-23T15:52:49Z", "type": "commit"}]}