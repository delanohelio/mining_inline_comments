{"pr_number": 1094, "pr_title": "JSON RPC: Add permissioning node \"allowlist\" methods as alternatives equivalent to \"whitelist\" methods", "pr_createdAt": "2020-06-17T01:38:05Z", "pr_url": "https://github.com/hyperledger/besu/pull/1094", "timeline": [{"oid": "e5be57def9c5a312c007f9f98778bbc4041b21e8", "url": "https://github.com/hyperledger/besu/commit/e5be57def9c5a312c007f9f98778bbc4041b21e8", "message": "added perm_getNodesAllowList RPC\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T01:21:00Z", "type": "commit"}, {"oid": "98ac6671934275c404d146db76358a980ba1dacc", "url": "https://github.com/hyperledger/besu/commit/98ac6671934275c404d146db76358a980ba1dacc", "message": "deprecate whitelist rpc\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T01:35:26Z", "type": "commit"}, {"oid": "c405b66b1331a9f54aee7d416b28a8771755138a", "url": "https://github.com/hyperledger/besu/commit/c405b66b1331a9f54aee7d416b28a8771755138a", "message": "added perm_addNodesToAllowList RPC\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T03:27:31Z", "type": "commit"}, {"oid": "8c12918747f385cf7535b9d53da6d532770d3da1", "url": "https://github.com/hyperledger/besu/commit/8c12918747f385cf7535b9d53da6d532770d3da1", "message": "Merge branch 'master' into whitelist-perm-rpc", "committedDate": "2020-06-17T03:34:29Z", "type": "commit"}, {"oid": "8379a4438a8ec817cba0eed4b7b313d44a4efcf3", "url": "https://github.com/hyperledger/besu/commit/8379a4438a8ec817cba0eed4b7b313d44a4efcf3", "message": "added perm_removeNodesFromAllowList RPC\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T03:34:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2MTg0OA==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441261848", "bodyText": "Is the plan to rename this later?", "author": "mark-terry", "createdAt": "2020-06-17T03:37:31Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -100,7 +100,7 @@\n       \"The permissioning whitelist configuration file is out of sync.  The changes have been applied, but not persisted to disk\"),\n   WHITELIST_RELOAD_ERROR(", "originalCommit": "8c12918747f385cf7535b9d53da6d532770d3da1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4d6bcb68640b6f3bea53992071a6a0a662580621", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\nindex fe55ae8798..64000c11bb 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\n\n@@ -87,21 +87,21 @@ public enum JsonRpcError {\n   NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n   NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n   NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to whitelist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from whitelist\"),\n+  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),\n+  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from allowlist\"),\n   NODE_WHITELIST_FIXED_NODE_CANNOT_BE_REMOVED(\n-      -32000, \"Cannot remove a fixed node (bootnode or static node) from whitelist\"),\n+      -32000, \"Cannot remove a fixed node (bootnode or static node) from allowlist\"),\n \n   // Permissioning/persistence errors\n   WHITELIST_PERSIST_FAILURE(\n-      -32000, \"Unable to persist changes to whitelist configuration file. Changes reverted\"),\n+      -32000, \"Unable to persist changes to allowlist configuration file. Changes reverted\"),\n   WHITELIST_FILE_SYNC(\n       -32000,\n       \"The permissioning whitelist configuration file is out of sync.  The changes have been applied, but not persisted to disk\"),\n   WHITELIST_RELOAD_ERROR(\n       -32000,\n-      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesAllowlist to review the current state of the whitelists\"),\n-  PERMISSIONING_NOT_ENABLED(-32000, \"Node/Account whitelisting has not been enabled\"),\n+      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesAllowlist to review the current state of the allowlists\"),\n+  PERMISSIONING_NOT_ENABLED(-32000, \"Node/Account allowlisting has not been enabled\"),\n   NON_PERMITTED_NODE_CANNOT_BE_ADDED_AS_A_PEER(-32000, \"Cannot add a non-permitted node as a peer\"),\n \n   // Permissioning/Authorization errors\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2MTk4Mg==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441261982", "bodyText": "Does the entirety of this comment need updating?", "author": "mark-terry", "createdAt": "2020-06-17T03:38:11Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -100,7 +100,7 @@\n       \"The permissioning whitelist configuration file is out of sync.  The changes have been applied, but not persisted to disk\"),\n   WHITELIST_RELOAD_ERROR(\n       -32000,\n-      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesWhitelist to review the current state of the whitelists\"),\n+      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesAllowlist to review the current state of the whitelists\"),", "originalCommit": "8c12918747f385cf7535b9d53da6d532770d3da1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4d6bcb68640b6f3bea53992071a6a0a662580621", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\nindex fe55ae8798..64000c11bb 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\n\n@@ -87,21 +87,21 @@ public enum JsonRpcError {\n   NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n   NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n   NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to whitelist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from whitelist\"),\n+  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),\n+  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from allowlist\"),\n   NODE_WHITELIST_FIXED_NODE_CANNOT_BE_REMOVED(\n-      -32000, \"Cannot remove a fixed node (bootnode or static node) from whitelist\"),\n+      -32000, \"Cannot remove a fixed node (bootnode or static node) from allowlist\"),\n \n   // Permissioning/persistence errors\n   WHITELIST_PERSIST_FAILURE(\n-      -32000, \"Unable to persist changes to whitelist configuration file. Changes reverted\"),\n+      -32000, \"Unable to persist changes to allowlist configuration file. Changes reverted\"),\n   WHITELIST_FILE_SYNC(\n       -32000,\n       \"The permissioning whitelist configuration file is out of sync.  The changes have been applied, but not persisted to disk\"),\n   WHITELIST_RELOAD_ERROR(\n       -32000,\n-      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesAllowlist to review the current state of the whitelists\"),\n-  PERMISSIONING_NOT_ENABLED(-32000, \"Node/Account whitelisting has not been enabled\"),\n+      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesAllowlist to review the current state of the allowlists\"),\n+  PERMISSIONING_NOT_ENABLED(-32000, \"Node/Account allowlisting has not been enabled\"),\n   NON_PERMITTED_NODE_CANNOT_BE_ADDED_AS_A_PEER(-32000, \"Cannot add a non-permitted node as a peer\"),\n \n   // Permissioning/Authorization errors\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2MjEwNQ==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441262105", "bodyText": "Should the name of the enum be updated?", "author": "mark-terry", "createdAt": "2020-06-17T03:38:48Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetNodesAllowlist.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class PermGetNodesAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermGetNodesAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {\n+    this.nodeWhitelistPermissioningController = nodeWhitelistPermissioningController;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.PERM_GET_NODES_ALLOWLIST.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    try {\n+      if (nodeWhitelistPermissioningController.isPresent()) {\n+        final List<String> enodeList =\n+            nodeWhitelistPermissioningController.get().getNodesWhitelist();\n+\n+        return new JsonRpcSuccessResponse(requestContext.getRequest().getId(), enodeList);\n+      } else {\n+        return new JsonRpcErrorResponse(\n+            requestContext.getRequest().getId(), JsonRpcError.NODE_WHITELIST_NOT_ENABLED);", "originalCommit": "8c12918747f385cf7535b9d53da6d532770d3da1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4d6bcb68640b6f3bea53992071a6a0a662580621", "url": "https://github.com/hyperledger/besu/commit/4d6bcb68640b6f3bea53992071a6a0a662580621", "message": "error messages\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T03:45:13Z", "type": "commit"}, {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "url": "https://github.com/hyperledger/besu/commit/0bcb71c9c223f51c78e2639ca7987539b39aacbb", "message": "Merge branch 'whitelist-perm-rpc' of github.com:macfarla/besu into whitelist-perm-rpc", "committedDate": "2020-06-17T03:45:24Z", "type": "commit"}, {"oid": "7f5b1c847beeeb698f7650c52fa196cc48c0e5b9", "url": "https://github.com/hyperledger/besu/commit/7f5b1c847beeeb698f7650c52fa196cc48c0e5b9", "message": "formatting\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T04:07:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODIzNA==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268234", "bodyText": "Can this be updated?", "author": "mark-terry", "createdAt": "2020-06-17T04:05:30Z", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "diffHunk": "@@ -45,23 +45,23 @@ public PermissioningJsonRpcRequestFactory(final Web3jService web3jService) {\n \n   Request<?, AddNodeResponse> addNodesToWhitelist(final List<URI> enodeList) {", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "chunk": "diff --git a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\nindex 839a65ad77..b99b2dba61 100644\n--- a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\n+++ b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\n\n@@ -66,12 +66,12 @@ public class PermissioningJsonRpcRequestFactory {\n \n   Request<?, GetAccountsWhitelistResponse> getAccountsWhitelist() {\n     return new Request<>(\n-        \"perm_getAccountsWhitelist\", null, web3jService, GetAccountsWhitelistResponse.class);\n+        \"perm_getAccountsAllowlist\", null, web3jService, GetAccountsWhitelistResponse.class);\n   }\n \n   Request<?, AddAccountsToWhitelistResponse> addAccountsToWhitelist(final List<String> accounts) {\n     return new Request<>(\n-        \"perm_addAccountsToWhitelist\",\n+        \"perm_addAccountsToAllowlist\",\n         Collections.singletonList(accounts),\n         web3jService,\n         AddAccountsToWhitelistResponse.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODI4MQ==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268281", "bodyText": "As above.", "author": "mark-terry", "createdAt": "2020-06-17T04:05:43Z", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "diffHunk": "@@ -45,23 +45,23 @@ public PermissioningJsonRpcRequestFactory(final Web3jService web3jService) {\n \n   Request<?, AddNodeResponse> addNodesToWhitelist(final List<URI> enodeList) {\n     return new Request<>(\n-        \"perm_addNodesToWhitelist\",\n+        \"perm_addNodesToAllowlist\",\n         Collections.singletonList(enodeList),\n         web3jService,\n         AddNodeResponse.class);\n   }\n \n   Request<?, RemoveNodeResponse> removeNodesFromWhitelist(final List<URI> enodeList) {", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "chunk": "diff --git a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\nindex 839a65ad77..b99b2dba61 100644\n--- a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\n+++ b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\n\n@@ -66,12 +66,12 @@ public class PermissioningJsonRpcRequestFactory {\n \n   Request<?, GetAccountsWhitelistResponse> getAccountsWhitelist() {\n     return new Request<>(\n-        \"perm_getAccountsWhitelist\", null, web3jService, GetAccountsWhitelistResponse.class);\n+        \"perm_getAccountsAllowlist\", null, web3jService, GetAccountsWhitelistResponse.class);\n   }\n \n   Request<?, AddAccountsToWhitelistResponse> addAccountsToWhitelist(final List<String> accounts) {\n     return new Request<>(\n-        \"perm_addAccountsToWhitelist\",\n+        \"perm_addAccountsToAllowlist\",\n         Collections.singletonList(accounts),\n         web3jService,\n         AddAccountsToWhitelistResponse.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODMwOQ==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268309", "bodyText": "As above.", "author": "mark-terry", "createdAt": "2020-06-17T04:05:51Z", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "diffHunk": "@@ -45,23 +45,23 @@ public PermissioningJsonRpcRequestFactory(final Web3jService web3jService) {\n \n   Request<?, AddNodeResponse> addNodesToWhitelist(final List<URI> enodeList) {\n     return new Request<>(\n-        \"perm_addNodesToWhitelist\",\n+        \"perm_addNodesToAllowlist\",\n         Collections.singletonList(enodeList),\n         web3jService,\n         AddNodeResponse.class);\n   }\n \n   Request<?, RemoveNodeResponse> removeNodesFromWhitelist(final List<URI> enodeList) {\n     return new Request<>(\n-        \"perm_removeNodesFromWhitelist\",\n+        \"perm_removeNodesFromAllowlist\",\n         Collections.singletonList(enodeList),\n         web3jService,\n         RemoveNodeResponse.class);\n   }\n \n   Request<?, GetNodesWhitelistResponse> getNodesWhitelist() {", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "chunk": "diff --git a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\nindex 839a65ad77..b99b2dba61 100644\n--- a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\n+++ b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java\n\n@@ -66,12 +66,12 @@ public class PermissioningJsonRpcRequestFactory {\n \n   Request<?, GetAccountsWhitelistResponse> getAccountsWhitelist() {\n     return new Request<>(\n-        \"perm_getAccountsWhitelist\", null, web3jService, GetAccountsWhitelistResponse.class);\n+        \"perm_getAccountsAllowlist\", null, web3jService, GetAccountsWhitelistResponse.class);\n   }\n \n   Request<?, AddAccountsToWhitelistResponse> addAccountsToWhitelist(final List<String> accounts) {\n     return new Request<>(\n-        \"perm_addAccountsToWhitelist\",\n+        \"perm_addAccountsToAllowlist\",\n         Collections.singletonList(accounts),\n         web3jService,\n         AddAccountsToWhitelistResponse.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODQ3MA==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268470", "bodyText": "Variable name.", "author": "mark-terry", "createdAt": "2020-06-17T04:06:32Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermRemoveNodesFromAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5b1c847beeeb698f7650c52fa196cc48c0e5b9", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\nindex 9a0211d548..fb23c47daa 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\n\n@@ -14,8 +14,6 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n \n-import java.util.List;\n-import java.util.Optional;\n import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODU2Mg==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268562", "bodyText": "Param name.", "author": "mark-terry", "createdAt": "2020-06-17T04:06:55Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermRemoveNodesFromAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermRemoveNodesFromAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5b1c847beeeb698f7650c52fa196cc48c0e5b9", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\nindex 9a0211d548..fb23c47daa 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\n\n@@ -14,8 +14,6 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n \n-import java.util.List;\n-import java.util.Optional;\n import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODYxNQ==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268615", "bodyText": "Variable name.", "author": "mark-terry", "createdAt": "2020-06-17T04:07:10Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermRemoveNodesFromAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermRemoveNodesFromAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {\n+    this.nodeWhitelistPermissioningController = nodeWhitelistPermissioningController;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.PERM_REMOVE_NODES_FROM_ALLOWLIST.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final StringListParameter enodeListParam =\n+        requestContext.getRequiredParameter(0, StringListParameter.class);\n+    try {\n+      if (nodeWhitelistPermissioningController.isPresent()) {\n+        try {\n+          final List<String> enodeURLs = enodeListParam.getStringList();\n+          final NodeLocalConfigPermissioningController.NodesWhitelistResult nodesWhitelistResult =", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5b1c847beeeb698f7650c52fa196cc48c0e5b9", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\nindex 9a0211d548..fb23c47daa 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java\n\n@@ -14,8 +14,6 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n \n-import java.util.List;\n-import java.util.Optional;\n import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODc5OA==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268798", "bodyText": "Error names.", "author": "mark-terry", "createdAt": "2020-06-17T04:07:58Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -87,21 +87,21 @@\n   NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n   NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n   NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to whitelist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from whitelist\"),\n+  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\nindex 64000c11bb..a53a0584c7 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java\n\n@@ -74,16 +74,16 @@ public enum JsonRpcError {\n   // Debug failures\n   PARENT_BLOCK_NOT_FOUND(-32000, \"Parent block not found\"),\n \n-  // Permissioning/Account whitelist errors\n-  ACCOUNT_WHITELIST_NOT_ENABLED(-32000, \"Account whitelisting has not been enabled\"),\n+  // Permissioning/Account allowlist errors\n+  ACCOUNT_WHITELIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n   ACCOUNT_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n   ACCOUNT_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n   ACCOUNT_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n-  ACCOUNT_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to whitelist\"),\n-  ACCOUNT_WHITELIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from whitelist\"),\n+  ACCOUNT_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n+  ACCOUNT_WHITELIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n \n-  // Permissioning/Node whitelist errors\n-  NODE_WHITELIST_NOT_ENABLED(-32000, \"Node whitelisting has not been enabled\"),\n+  // Permissioning/Node allowlist errors\n+  NODE_WHITELIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),\n   NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n   NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n   NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2OTMxNg==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441269316", "bodyText": "Param name.", "author": "mark-terry", "createdAt": "2020-06-17T04:10:26Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermAddNodesToAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermAddNodesToAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java\nindex b401b75a07..782229f6d1 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java\n\n@@ -14,8 +14,6 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n \n-import java.util.List;\n-import java.util.Optional;\n import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2OTM1MQ==", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441269351", "bodyText": "Variable name.", "author": "mark-terry", "createdAt": "2020-06-17T04:10:36Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermAddNodesToAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;", "originalCommit": "0bcb71c9c223f51c78e2639ca7987539b39aacbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java\nindex b401b75a07..782229f6d1 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java\n\n@@ -14,8 +14,6 @@\n  */\n package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n \n-import java.util.List;\n-import java.util.Optional;\n import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n"}}, {"oid": "25aa63d94115d6e6654dab76d0ecbef144515aa4", "url": "https://github.com/hyperledger/besu/commit/25aa63d94115d6e6654dab76d0ecbef144515aa4", "message": "merge permissioning node allowlist rpcs\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T08:21:03Z", "type": "commit"}, {"oid": "831c0b5cf4fcf521b3a2adf3b3c584513a8fbb1b", "url": "https://github.com/hyperledger/besu/commit/831c0b5cf4fcf521b3a2adf3b3c584513a8fbb1b", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into whitelist-perm-rpc", "committedDate": "2020-06-17T08:48:57Z", "type": "commit"}, {"oid": "ee0661e96581ed2825dd5a2d4f0f53fc36a0e499", "url": "https://github.com/hyperledger/besu/commit/ee0661e96581ed2825dd5a2d4f0f53fc36a0e499", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into whitelist-perm-rpc", "committedDate": "2020-06-17T09:19:51Z", "type": "commit"}, {"oid": "40534c87b33e74a0ac02ea2fbe812f4c09bae3aa", "url": "https://github.com/hyperledger/besu/commit/40534c87b33e74a0ac02ea2fbe812f4c09bae3aa", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into whitelist-perm-rpc", "committedDate": "2020-06-17T09:53:04Z", "type": "commit"}]}