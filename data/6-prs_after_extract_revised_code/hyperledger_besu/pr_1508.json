{"pr_number": 1508, "pr_title": "Fix `TargetingGasLimitCalculator`", "pr_createdAt": "2020-11-01T16:50:04Z", "pr_url": "https://github.com/hyperledger/besu/pull/1508", "timeline": [{"oid": "7544e097cfbc59945ded2fbf3c064b347e287ec5", "url": "https://github.com/hyperledger/besu/commit/7544e097cfbc59945ded2fbf3c064b347e287ec5", "message": "Fix `TargetingGasLimitCalculator` to meet `GasLimitRangeAndDeltaValidationRule`\n\nSigned-off-by: Atkins <atkinschang@gmail.com>", "committedDate": "2020-11-01T16:51:09Z", "type": "forcePushed"}, {"oid": "d24ca08a0b2d846b2fcee8f98cc490d466a3dbce", "url": "https://github.com/hyperledger/besu/commit/d24ca08a0b2d846b2fcee8f98cc490d466a3dbce", "message": "Fix `TargetingGasLimitCalculator` to meet `GasLimitRangeAndDeltaValidationRule`\n\nSigned-off-by: Atkins <atkinschang@gmail.com>", "committedDate": "2020-11-01T16:57:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2MzA4OA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516063088", "bodyText": "Since we already have logic like this in the Rule class, I think we should find a common place for this validation that they both use.", "author": "RatanRSur", "createdAt": "2020-11-02T15:44:52Z", "path": "besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java", "diffHunk": "@@ -56,17 +57,23 @@ public void changeTargetGasLimit(final Long targetGasLimit) {\n     this.targetGasLimit = targetGasLimit;\n   }\n \n+  private long adjustAmount(final long gasLimit) {\n+    final long maxAdjustAmount =\n+        Math.max(Long.divideUnsigned(gasLimit, GASLIMIT_BOUND_DIVISOR) - 1, 0);\n+    return Math.min(ADJUSTMENT_FACTOR, maxAdjustAmount);\n+  }\n+", "originalCommit": "d24ca08a0b2d846b2fcee8f98cc490d466a3dbce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3NzIwNg==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516077206", "bodyText": "Thanks for suggestion\nI think I'll move duplicated logic to a static method, maybe under GasLimitRangeAndDeltaValidationRule?", "author": "AtkinsChang", "createdAt": "2020-11-02T16:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2MzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3ODA3MA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516078070", "bodyText": "Sounds good to me!", "author": "RatanRSur", "createdAt": "2020-11-02T16:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2MzA4OA=="}], "type": "inlineReview", "revised_code": {"commit": "d7acd31dff05f41531f4e4c0caf8952e539a537b", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java b/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java\nindex 3a733a8c6..ef355fa60 100644\n--- a/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java\n+++ b/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java\n\n@@ -57,15 +56,9 @@ public class TargetingGasLimitCalculator implements GasLimitCalculator {\n     this.targetGasLimit = targetGasLimit;\n   }\n \n-  private long adjustAmount(final long gasLimit) {\n-    final long maxAdjustAmount =\n-        Math.max(Long.divideUnsigned(gasLimit, GASLIMIT_BOUND_DIVISOR) - 1, 0);\n-    return Math.min(ADJUSTMENT_FACTOR, maxAdjustAmount);\n-  }\n-\n   private long safeAdd(final long gasLimit) {\n     try {\n-      return Math.addExact(gasLimit, adjustAmount(gasLimit));\n+      return Math.addExact(gasLimit, ADJUSTMENT_FACTOR);\n     } catch (final ArithmeticException ex) {\n       return Long.MAX_VALUE;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODczNQ==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516068735", "bodyText": "GasLimitRangeAndDeltaValidationRule checks that the min gas limit is above the divisor and doesn't accept it. Your ammendent of this test seems to suggest that it should be allowed, but it causes the adjustment to be 0 in perpetuity. Do you have a source for this behavior? I see that when I search gas limit here, it seems to say that 5000 is the minimum: https://ethereum.github.io/yellowpaper/paper.pdf", "author": "RatanRSur", "createdAt": "2020-11-02T15:52:32Z", "path": "besu/src/test/java/org/hyperledger/besu/controller/TargetingGasLimitCalculatorTest.java", "diffHunk": "@@ -48,11 +52,13 @@ public void verifyGasLimitReachesTarget() {\n \n   @Test\n   public void verifyNoNegative() {\n+    // gas limit less or equal than GASLIMIT_BOUND_DIVISOR (1024) can't not be change because of\n+    // delta rule\n     final long target = 0L;\n-    final long offset = TargetingGasLimitCalculator.ADJUSTMENT_FACTOR / 2;\n+    final long current = TargetingGasLimitCalculator.GASLIMIT_BOUND_DIVISOR;\n     TargetingGasLimitCalculator targetingGasLimitCalculator =\n         new TargetingGasLimitCalculator(target);\n-    assertThat(targetingGasLimitCalculator.nextGasLimit(target + offset)).isEqualTo(target);\n+    assertThat(targetingGasLimitCalculator.nextGasLimit(current)).isEqualTo(current);", "originalCommit": "d24ca08a0b2d846b2fcee8f98cc490d466a3dbce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3NDIzMg==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516074232", "bodyText": "Yes this would never happen in the integrated scenario, but this test case is originally try to test the negative situation (which won't happen). Do you suggest to remove this test case?", "author": "AtkinsChang", "createdAt": "2020-11-02T15:59:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3NjEzNw==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516076137", "bodyText": "I think we should replace it with a test that tests the 5000 gas scenario", "author": "RatanRSur", "createdAt": "2020-11-02T16:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3NjQ0NA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516076444", "bodyText": "(ensures that it doesn't go below that value)", "author": "RatanRSur", "createdAt": "2020-11-02T16:03:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NDE0MQ==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516084141", "bodyText": "5000 is based on the consensus algorithm (ex IBFT)\nBut I can change TargetingGasLimitCalculator to enforce a 5000 minimum", "author": "AtkinsChang", "createdAt": "2020-11-02T16:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NzYwNA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516087604", "bodyText": "Oh yeah, I should clarify that I meant a general \"minimum\" like in GasLimitRangeAndDeltaValidationRule, not necessarily 5000 hardcoded. As you can see, the TargetingGasLimitCalculator should rely on the validation rule class heavily since all that logic is already there.", "author": "RatanRSur", "createdAt": "2020-11-02T16:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "d7acd31dff05f41531f4e4c0caf8952e539a537b", "chunk": "diff --git a/besu/src/test/java/org/hyperledger/besu/controller/TargetingGasLimitCalculatorTest.java b/besu/src/test/java/org/hyperledger/besu/controller/TargetingGasLimitCalculatorTest.java\nindex 55108b133..ee10d2a65 100644\n--- a/besu/src/test/java/org/hyperledger/besu/controller/TargetingGasLimitCalculatorTest.java\n+++ b/besu/src/test/java/org/hyperledger/besu/controller/TargetingGasLimitCalculatorTest.java\n\n@@ -52,13 +52,11 @@ public class TargetingGasLimitCalculatorTest {\n \n   @Test\n   public void verifyNoNegative() {\n-    // gas limit less or equal than GASLIMIT_BOUND_DIVISOR (1024) can't not be change because of\n-    // delta rule\n     final long target = 0L;\n-    final long current = TargetingGasLimitCalculator.GASLIMIT_BOUND_DIVISOR;\n+    final long offset = TargetingGasLimitCalculator.ADJUSTMENT_FACTOR / 2;\n     TargetingGasLimitCalculator targetingGasLimitCalculator =\n         new TargetingGasLimitCalculator(target);\n-    assertThat(targetingGasLimitCalculator.nextGasLimit(current)).isEqualTo(current);\n+    assertThat(targetingGasLimitCalculator.nextGasLimit(target + offset)).isEqualTo(target);\n   }\n \n   @Test\n"}}, {"oid": "d7acd31dff05f41531f4e4c0caf8952e539a537b", "url": "https://github.com/hyperledger/besu/commit/d7acd31dff05f41531f4e4c0caf8952e539a537b", "message": "Add test case for delta bound of gas limit\n\nSigned-off-by: Atkins <atkinschang@gmail.com>", "committedDate": "2020-11-02T17:00:25Z", "type": "commit"}, {"oid": "2a9fa0c5b60118b58ad628a65cc93fca1fb07b29", "url": "https://github.com/hyperledger/besu/commit/2a9fa0c5b60118b58ad628a65cc93fca1fb07b29", "message": "Fix `TargetingGasLimitCalculator` to meet `GasLimitRangeAndDeltaValidationRule`\n\nSigned-off-by: Atkins <atkinschang@gmail.com>", "committedDate": "2020-11-02T17:00:25Z", "type": "commit"}, {"oid": "2a9fa0c5b60118b58ad628a65cc93fca1fb07b29", "url": "https://github.com/hyperledger/besu/commit/2a9fa0c5b60118b58ad628a65cc93fca1fb07b29", "message": "Fix `TargetingGasLimitCalculator` to meet `GasLimitRangeAndDeltaValidationRule`\n\nSigned-off-by: Atkins <atkinschang@gmail.com>", "committedDate": "2020-11-02T17:00:25Z", "type": "forcePushed"}, {"oid": "ee13abbab5effbb61f1d0989b64c7578ce537f8d", "url": "https://github.com/hyperledger/besu/commit/ee13abbab5effbb61f1d0989b64c7578ce537f8d", "message": "rename\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-11-02T22:50:34Z", "type": "commit"}, {"oid": "ffea0c83c8a4a9b7a84daa533aceb88ea6f43ac9", "url": "https://github.com/hyperledger/besu/commit/ffea0c83c8a4a9b7a84daa533aceb88ea6f43ac9", "message": "String.format\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-11-02T22:52:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM1NzEzMA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516357130", "bodyText": "I think there's a bug here we didn't catch. We don't use the lower and upper bound parameters in these operations. If that's the case, we should add tests to that effect. One thing which might make the code look closer to what we're going after conceptually is the use of google guava's Range class.", "author": "RatanRSur", "createdAt": "2020-11-03T00:22:44Z", "path": "besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java", "diffHunk": "@@ -52,21 +64,32 @@ public long nextGasLimit(final long currentGasLimit) {\n \n   @Override\n   public void changeTargetGasLimit(final Long targetGasLimit) {\n-    checkArgument(targetGasLimit >= 0, \"Target gas limit must be non-negative\");\n+    checkArgument(\n+        targetGasLimit >= minGasLimit,\n+        \"targetGasLimit of \" + targetGasLimit + \" is below the minGasLimit of \" + minGasLimit);\n+\n+    checkArgument(\n+        targetGasLimit <= maxGasLimit,\n+        \"targetGasLimit of \" + targetGasLimit + \" is above the maxGasLimit of \" + maxGasLimit);\n     this.targetGasLimit = targetGasLimit;\n   }\n \n+  private long adjustAmount(final long currentGasLimit) {\n+    final long maxAdjustAmount = Math.max(deltaBound(currentGasLimit) - 1, 0);\n+    return Math.min(adjustFactor, maxAdjustAmount);\n+  }\n+\n   private long safeAdd(final long gasLimit) {\n     try {\n-      return Math.addExact(gasLimit, ADJUSTMENT_FACTOR);\n+      return Math.addExact(gasLimit, adjustAmount(gasLimit));\n     } catch (final ArithmeticException ex) {\n       return Long.MAX_VALUE;\n     }\n   }\n \n   private long safeSub(final long gasLimit) {\n     try {\n-      return Math.max(Math.subtractExact(gasLimit, ADJUSTMENT_FACTOR), 0);\n+      return Math.max(Math.subtractExact(gasLimit, adjustAmount(gasLimit)), 0);\n     } catch (final ArithmeticException ex) {\n       return 0;", "originalCommit": "2a9fa0c5b60118b58ad628a65cc93fca1fb07b29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQxOTYwMA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516419600", "bodyText": "@RatanRSur  I make the check in changeTargetGasLimit method. So it throws exception if people set the targetGasLimit out of the range in constructor (L67 - L73).\nOr you prefer another way that allowing to set the targetGasLimit below/above the range in constructor while nextGasLimit never go out of range.", "author": "AtkinsChang", "createdAt": "2020-11-03T04:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM1NzEzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NjIzMA==", "url": "https://github.com/hyperledger/besu/pull/1508#discussion_r516646230", "bodyText": "I see, that makes sense!", "author": "RatanRSur", "createdAt": "2020-11-03T12:57:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM1NzEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "0aef2ed335429284ae037b166481c40884c6fd6d", "chunk": "diff --git a/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java b/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java\nindex c10dcf949..2d830d571 100644\n--- a/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java\n+++ b/besu/src/main/java/org/hyperledger/besu/controller/TargetingGasLimitCalculator.java\n\n@@ -75,11 +75,11 @@ public class TargetingGasLimitCalculator extends AbstractGasLimitSpecification\n   }\n \n   private long adjustAmount(final long currentGasLimit) {\n-    final long maxAdjustAmount = Math.max(deltaBound(currentGasLimit) - 1, 0);\n-    return Math.min(adjustFactor, maxAdjustAmount);\n+    final long maxProportionalAdjustmentLimit = Math.max(deltaBound(currentGasLimit) - 1, 0);\n+    return Math.min(maxConstantAdjustmentIncrement, maxProportionalAdjustmentLimit);\n   }\n \n-  private long safeAdd(final long gasLimit) {\n+  private long safeAddAtMost(final long gasLimit) {\n     try {\n       return Math.addExact(gasLimit, adjustAmount(gasLimit));\n     } catch (final ArithmeticException ex) {\n"}}, {"oid": "0aef2ed335429284ae037b166481c40884c6fd6d", "url": "https://github.com/hyperledger/besu/commit/0aef2ed335429284ae037b166481c40884c6fd6d", "message": "rename\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-11-03T13:01:16Z", "type": "commit"}, {"oid": "ac987c7e40ec4301bdb82cc7488454b6d71206eb", "url": "https://github.com/hyperledger/besu/commit/ac987c7e40ec4301bdb82cc7488454b6d71206eb", "message": "Merge branch 'master' into fix-targeting-gas-limit-calculator", "committedDate": "2020-11-05T16:42:19Z", "type": "commit"}]}