{"pr_number": 1545, "pr_title": "Add Quorum Permissioning gate to Account and Node permissioning", "pr_createdAt": "2020-11-10T03:13:27Z", "pr_url": "https://github.com/hyperledger/besu/pull/1545", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NTczMA==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520265730", "bodyText": "Why was this changed?", "author": "mark-terry", "createdAt": "2020-11-10T03:37:53Z", "path": "config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java", "diffHunk": "@@ -302,7 +302,7 @@ public OptionalLong getEcip1017EraRounds() {\n \n   @Override\n   public boolean isQuorum() {\n-    return getOptionalBoolean(\"isQuorum\").orElse(false);\n+    return getOptionalBoolean(\"isquorum\").orElse(false);", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAwOTM3Ng==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521009376", "bodyText": "When it resolves the property is uses lowercase. In the genesis file it will still be isQuorum.", "author": "lucassaldanha", "createdAt": "2020-11-11T01:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NTczMA=="}], "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java b/config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java\nindex 98e5aa4e9..260aaca90 100644\n--- a/config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java\n+++ b/config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java\n\n@@ -302,7 +302,7 @@ public class JsonGenesisConfigOptions implements GenesisConfigOptions {\n \n   @Override\n   public boolean isQuorum() {\n-    return getOptionalBoolean(\"isquorum\").orElse(false);\n+    return getOptionalBoolean(\"isQuorum\").orElse(false);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2ODUzMA==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520268530", "bodyText": "Dupe in name", "author": "mark-terry", "createdAt": "2020-11-10T03:48:28Z", "path": "ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java", "diffHunk": "@@ -174,4 +183,45 @@ public void doesntStopAtInsufficientPeersWhenNoAnswer() {\n     verify(insufficientPeersPermissioningProvider, times(1)).isPermitted(any(), any());\n     providers.forEach(p -> verify(p, times(1)).isPermitted(any(), any()));\n   }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsEmptyShouldDelegateToProviders() {\n+    this.controller =\n+        new NodePermissioningController(\n+            syncStatusNodePermissioningProviderOptional, Collections.emptyList(), Optional.empty());\n+\n+    controller.isPermitted(enode1, enode2);\n+\n+    verify(syncStatusNodePermissioningProvider, atLeast(1)).isPermitted(eq(enode1), eq(enode2));\n+  }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsNotActiveShouldAlwaysReturnTrue() {\n+    this.controller =\n+        new NodePermissioningController(\n+            syncStatusNodePermissioningProviderOptional,\n+            Collections.emptyList(),\n+            Optional.of(quorumQip714Gate));\n+\n+    when(quorumQip714Gate.shouldCheckPermissions()).thenReturn(false);\n+\n+    assertThat(controller.isPermitted(enode1, enode2)).isTrue();\n+\n+    verifyNoInteractions(syncStatusNodePermissioningProvider);\n+  }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsActiveActiveShouldDelegateToProviders() {", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java b/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java\nindex 8fc1ce18f..a6c6f5b7a 100644\n--- a/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java\n+++ b/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java\n\n@@ -183,45 +174,4 @@ public class NodePermissioningControllerTest {\n     verify(insufficientPeersPermissioningProvider, times(1)).isPermitted(any(), any());\n     providers.forEach(p -> verify(p, times(1)).isPermitted(any(), any()));\n   }\n-\n-  @Test\n-  public void whenQuorumQip714GateIsEmptyShouldDelegateToProviders() {\n-    this.controller =\n-        new NodePermissioningController(\n-            syncStatusNodePermissioningProviderOptional, Collections.emptyList(), Optional.empty());\n-\n-    controller.isPermitted(enode1, enode2);\n-\n-    verify(syncStatusNodePermissioningProvider, atLeast(1)).isPermitted(eq(enode1), eq(enode2));\n-  }\n-\n-  @Test\n-  public void whenQuorumQip714GateIsNotActiveShouldAlwaysReturnTrue() {\n-    this.controller =\n-        new NodePermissioningController(\n-            syncStatusNodePermissioningProviderOptional,\n-            Collections.emptyList(),\n-            Optional.of(quorumQip714Gate));\n-\n-    when(quorumQip714Gate.shouldCheckPermissions()).thenReturn(false);\n-\n-    assertThat(controller.isPermitted(enode1, enode2)).isTrue();\n-\n-    verifyNoInteractions(syncStatusNodePermissioningProvider);\n-  }\n-\n-  @Test\n-  public void whenQuorumQip714GateIsActiveActiveShouldDelegateToProviders() {\n-    this.controller =\n-        new NodePermissioningController(\n-            syncStatusNodePermissioningProviderOptional,\n-            Collections.emptyList(),\n-            Optional.of(quorumQip714Gate));\n-\n-    when(quorumQip714Gate.shouldCheckPermissions()).thenReturn(true);\n-\n-    controller.isPermitted(enode1, enode2);\n-\n-    verify(syncStatusNodePermissioningProvider, atLeast(1)).isPermitted(eq(enode1), eq(enode2));\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MDY2Mw==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520280663", "bodyText": "why true for disabled?", "author": "macfarla", "createdAt": "2020-11-10T04:35:21Z", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.permissioning;\n+\n+public class QuorumPermissioningConfiguration {\n+\n+  public static final long QIP714_DEFAULT_BLOCK = 0;\n+\n+  private final long qip714Block;\n+  private final boolean enabled;\n+\n+  public QuorumPermissioningConfiguration(final long qip714Block, final boolean enabled) {\n+    this.qip714Block = qip714Block;\n+    this.enabled = enabled;\n+  }\n+\n+  public static QuorumPermissioningConfiguration enabled(final long qip714Block) {\n+    return new QuorumPermissioningConfiguration(qip714Block, true);\n+  }\n+\n+  public static QuorumPermissioningConfiguration disabled() {\n+    return new QuorumPermissioningConfiguration(QIP714_DEFAULT_BLOCK, true);", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk5ODQxOA==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520998418", "bodyText": "Ops", "author": "lucassaldanha", "createdAt": "2020-11-11T01:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MDY2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java\ndeleted file mode 100644\nindex a2383023e..000000000\n--- a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java\n+++ /dev/null\n\n@@ -1,44 +0,0 @@\n-/*\n- * Copyright ConsenSys AG.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n- * the License. You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n- * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations under the License.\n- *\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-package org.hyperledger.besu.ethereum.permissioning;\n-\n-public class QuorumPermissioningConfiguration {\n-\n-  public static final long QIP714_DEFAULT_BLOCK = 0;\n-\n-  private final long qip714Block;\n-  private final boolean enabled;\n-\n-  public QuorumPermissioningConfiguration(final long qip714Block, final boolean enabled) {\n-    this.qip714Block = qip714Block;\n-    this.enabled = enabled;\n-  }\n-\n-  public static QuorumPermissioningConfiguration enabled(final long qip714Block) {\n-    return new QuorumPermissioningConfiguration(qip714Block, true);\n-  }\n-\n-  public static QuorumPermissioningConfiguration disabled() {\n-    return new QuorumPermissioningConfiguration(QIP714_DEFAULT_BLOCK, true);\n-  }\n-\n-  public long getQip714Block() {\n-    return qip714Block;\n-  }\n-\n-  public boolean isEnabled() {\n-    return enabled;\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MjMzNw==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520282337", "bodyText": "whenQuorumQip714GateIsNotActiveShouldNotCheckOtherPermissions ? BypassOtherPermissions?", "author": "macfarla", "createdAt": "2020-11-10T04:42:01Z", "path": "ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java", "diffHunk": "@@ -85,4 +89,49 @@ public void shouldReturnFalseIfOneControllerPermitsAndTheOtherDoesNot() {\n     verify(localConfigController).isPermitted(any());\n     verify(smartContractController).isPermitted(any());\n   }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsEmptyShouldDelegateToProviders() {\n+    this.permissioningController =\n+        new AccountPermissioningController(\n+            Optional.of(localConfigController),\n+            Optional.of(smartContractController),\n+            Optional.empty());\n+\n+    permissioningController.isPermitted(mock(Transaction.class), true, false);\n+\n+    verify(localConfigController).isPermitted(any());\n+  }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsNotActiveShouldAlwaysReturnTrue() {", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java b/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java\nindex 48b75ee21..a89235d57 100644\n--- a/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java\n+++ b/ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java\n\n@@ -89,49 +85,4 @@ public class AccountPermissioningControllerTest {\n     verify(localConfigController).isPermitted(any());\n     verify(smartContractController).isPermitted(any());\n   }\n-\n-  @Test\n-  public void whenQuorumQip714GateIsEmptyShouldDelegateToProviders() {\n-    this.permissioningController =\n-        new AccountPermissioningController(\n-            Optional.of(localConfigController),\n-            Optional.of(smartContractController),\n-            Optional.empty());\n-\n-    permissioningController.isPermitted(mock(Transaction.class), true, false);\n-\n-    verify(localConfigController).isPermitted(any());\n-  }\n-\n-  @Test\n-  public void whenQuorumQip714GateIsNotActiveShouldAlwaysReturnTrue() {\n-    this.permissioningController =\n-        new AccountPermissioningController(\n-            Optional.of(localConfigController),\n-            Optional.of(smartContractController),\n-            Optional.of(quorumQip714Gate));\n-\n-    when(quorumQip714Gate.shouldCheckPermissions()).thenReturn(false);\n-\n-    boolean isPermitted = permissioningController.isPermitted(mock(Transaction.class), true, false);\n-    assertThat(isPermitted).isTrue();\n-\n-    verifyNoInteractions(localConfigController);\n-    verifyNoInteractions(smartContractController);\n-  }\n-\n-  @Test\n-  public void whenQuorumQip714GateIsActiveActiveShouldDelegateToProviders() {\n-    this.permissioningController =\n-        new AccountPermissioningController(\n-            Optional.of(localConfigController),\n-            Optional.of(smartContractController),\n-            Optional.of(quorumQip714Gate));\n-\n-    when(quorumQip714Gate.shouldCheckPermissions()).thenReturn(true);\n-\n-    permissioningController.isPermitted(mock(Transaction.class), true, false);\n-\n-    verify(localConfigController).isPermitted(any());\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4Mjk1NA==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520282954", "bodyText": "I don't love cfg as a name - config?", "author": "macfarla", "createdAt": "2020-11-10T04:44:33Z", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java", "diffHunk": "@@ -56,10 +59,25 @@\n \n     if (accountLocalConfigPermissioningController.isPresent()\n         || transactionSmartContractPermissioningController.isPresent()) {\n+\n+      final Optional<QuorumQip714Gate> quorumQip714Gate =\n+          permissioningConfiguration\n+              .getQuorumPermissioningConfig()\n+              .flatMap(\n+                  cfg -> {", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java\nindex 87279c337..e45f74c28 100644\n--- a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java\n+++ b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java\n\n@@ -59,25 +56,10 @@ public class AccountPermissioningControllerFactory {\n \n     if (accountLocalConfigPermissioningController.isPresent()\n         || transactionSmartContractPermissioningController.isPresent()) {\n-\n-      final Optional<QuorumQip714Gate> quorumQip714Gate =\n-          permissioningConfiguration\n-              .getQuorumPermissioningConfig()\n-              .flatMap(\n-                  cfg -> {\n-                    if (cfg.isEnabled()) {\n-                      return Optional.of(\n-                          QuorumQip714Gate.getInstance(cfg.getQip714Block(), blockchain));\n-                    } else {\n-                      return Optional.empty();\n-                    }\n-                  });\n-\n       final AccountPermissioningController controller =\n           new AccountPermissioningController(\n               accountLocalConfigPermissioningController,\n-              transactionSmartContractPermissioningController,\n-              quorumQip714Gate);\n+              transactionSmartContractPermissioningController);\n \n       return Optional.of(controller);\n     } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDU2Mg==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520284562", "bodyText": "nit: config vs configuration", "author": "macfarla", "createdAt": "2020-11-10T04:50:29Z", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java", "diffHunk": "@@ -17,14 +17,18 @@\n import java.util.Optional;\n \n public class PermissioningConfiguration {\n+\n   private final Optional<LocalPermissioningConfiguration> localConfig;\n   private final Optional<SmartContractPermissioningConfiguration> smartContractConfig;\n+  private final Optional<QuorumPermissioningConfiguration> quorumPermissioningConfiguration;\n \n   public PermissioningConfiguration(\n       final Optional<LocalPermissioningConfiguration> localConfig,\n-      final Optional<SmartContractPermissioningConfiguration> smartContractConfig) {\n+      final Optional<SmartContractPermissioningConfiguration> smartContractConfig,\n+      final Optional<QuorumPermissioningConfiguration> quorumPermissioningConfiguration) {", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java\nindex 6852ec75e..e08ec6edb 100644\n--- a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java\n+++ b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java\n\n@@ -17,18 +17,14 @@ package org.hyperledger.besu.ethereum.permissioning;\n import java.util.Optional;\n \n public class PermissioningConfiguration {\n-\n   private final Optional<LocalPermissioningConfiguration> localConfig;\n   private final Optional<SmartContractPermissioningConfiguration> smartContractConfig;\n-  private final Optional<QuorumPermissioningConfiguration> quorumPermissioningConfiguration;\n \n   public PermissioningConfiguration(\n       final Optional<LocalPermissioningConfiguration> localConfig,\n-      final Optional<SmartContractPermissioningConfiguration> smartContractConfig,\n-      final Optional<QuorumPermissioningConfiguration> quorumPermissioningConfiguration) {\n+      final Optional<SmartContractPermissioningConfiguration> smartContractConfig) {\n     this.localConfig = localConfig;\n     this.smartContractConfig = smartContractConfig;\n-    this.quorumPermissioningConfiguration = quorumPermissioningConfiguration;\n   }\n \n   public Optional<LocalPermissioningConfiguration> getLocalConfig() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520284848", "bodyText": "nit: would be good to standardise spelling of qip714block in logs", "author": "macfarla", "createdAt": "2020-11-10T04:51:40Z", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "diffHunk": "@@ -34,21 +35,32 @@\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n+  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController) {\n+          transactionSmartContractPermissioningController,\n+      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n+    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n+    final boolean checkPermissions =\n+        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n+    if (!checkPermissions) {\n+      LOG.trace(\"Skipping account permissioning check due to qip714block config\");", "originalCommit": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAxNDMzMQ==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521014331", "bodyText": "Is it different?", "author": "lucassaldanha", "createdAt": "2020-11-11T01:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAxNjQwNQ==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521016405", "bodyText": "in ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumQip714Gate.java it had QIP-", "author": "macfarla", "createdAt": "2020-11-11T01:59:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAxODQyNQ==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521018425", "bodyText": "Well, one is talking about the property, the other about the actual gate. How do you think we should change it?", "author": "lucassaldanha", "createdAt": "2020-11-11T02:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA0NDk1MQ==", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521044951", "bodyText": "I was just envisioning grepping the logs for qip and not finding the uppercase one", "author": "macfarla", "createdAt": "2020-11-11T02:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "687a94ac07dca9a42003ac16792e0c356b153535", "chunk": "diff --git a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java\nindex f2df92aaa..9ab7bb531 100644\n--- a/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java\n+++ b/ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java\n\n@@ -35,32 +34,21 @@ public class AccountPermissioningController {\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n-  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController,\n-      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n+          transactionSmartContractPermissioningController) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n-    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n-    final boolean checkPermissions =\n-        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n-    if (!checkPermissions) {\n-      LOG.trace(\"Skipping account permissioning check due to qip714block config\");\n-\n-      return true;\n-    }\n-\n     final Hash transactionHash = transaction.getHash();\n     final Address sender = transaction.getSender();\n \n"}}, {"oid": "29a14db383747a7c6792ccbc2a6ccf67b80f1ae1", "url": "https://github.com/hyperledger/besu/commit/29a14db383747a7c6792ccbc2a6ccf67b80f1ae1", "message": "Fix another unit test\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-11T01:09:06Z", "type": "forcePushed"}, {"oid": "687a94ac07dca9a42003ac16792e0c356b153535", "url": "https://github.com/hyperledger/besu/commit/687a94ac07dca9a42003ac16792e0c356b153535", "message": "Create Quorum QIP-714 gate\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "dcac4d38c99854e41c5fa18d6b7c22ebe607835b", "url": "https://github.com/hyperledger/besu/commit/dcac4d38c99854e41c5fa18d6b7c22ebe607835b", "message": "Adding qip714 gate to node permissioning controller\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "1177d9b808213194e4b8e54940ac8af92de76900", "url": "https://github.com/hyperledger/besu/commit/1177d9b808213194e4b8e54940ac8af92de76900", "message": "Adding qip714 gate to account permissioning controller\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "12987fb20e57836089e8ef7bc03144a4eb78eb54", "url": "https://github.com/hyperledger/besu/commit/12987fb20e57836089e8ef7bc03144a4eb78eb54", "message": "Wiring quorum permissioning gate\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "7eb6c9ab88d600e9392e3af784c9e474e5eb7d76", "url": "https://github.com/hyperledger/besu/commit/7eb6c9ab88d600e9392e3af784c9e474e5eb7d76", "message": "Fix constructor\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "1836be42ffd2405fc5c13157597b36be42188430", "url": "https://github.com/hyperledger/besu/commit/1836be42ffd2405fc5c13157597b36be42188430", "message": "Fix finals\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "cecfce9ff016f20f420968effb62b80335e38574", "url": "https://github.com/hyperledger/besu/commit/cecfce9ff016f20f420968effb62b80335e38574", "message": "Fix another unit test\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "4fa850facad0d6dff47e8dc7540281335afaa2d7", "url": "https://github.com/hyperledger/besu/commit/4fa850facad0d6dff47e8dc7540281335afaa2d7", "message": "PR comments\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "ff4513c1258021e2127eade70df95fa4787a34d7", "url": "https://github.com/hyperledger/besu/commit/ff4513c1258021e2127eade70df95fa4787a34d7", "message": "Fixing tests (once more)\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:17Z", "type": "commit"}, {"oid": "d49588546c19ec1efa4ff4bd92392bb1941dc8f6", "url": "https://github.com/hyperledger/besu/commit/d49588546c19ec1efa4ff4bd92392bb1941dc8f6", "message": "Handling error\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:18Z", "type": "commit"}, {"oid": "d49588546c19ec1efa4ff4bd92392bb1941dc8f6", "url": "https://github.com/hyperledger/besu/commit/d49588546c19ec1efa4ff4bd92392bb1941dc8f6", "message": "Handling error\n\nSigned-off-by: Lucas Saldanha <lucascrsaldanha@gmail.com>", "committedDate": "2020-11-12T03:18:18Z", "type": "forcePushed"}]}