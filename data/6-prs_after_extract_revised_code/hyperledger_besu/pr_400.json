{"pr_number": 400, "pr_title": "[PIE-1798] Fail cases for multitenancy ATs", "pr_createdAt": "2020-02-13T15:38:29Z", "pr_url": "https://github.com/hyperledger/besu/pull/400", "timeline": [{"oid": "b9e10654c626d5638bb0ea835bd4624e98790c08", "url": "https://github.com/hyperledger/besu/commit/b9e10654c626d5638bb0ea835bd4624e98790c08", "message": "[PIE-1798] Added some multitenancy fail case tests.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-02-13T14:44:18Z", "type": "commit"}, {"oid": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "url": "https://github.com/hyperledger/besu/commit/c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "message": "[PIE-1798] Refactoring.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-02-13T15:36:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MDI3Mg==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379160272", "bodyText": "Can this have a more generic name as this is not specific to multitenancy. Perhaps something like ExpectJsonRpcError?", "author": "jframe", "createdAt": "2020-02-13T22:41:35Z", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/MultiTenancyValidationFail.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.dsl.condition.priv;\n+\n+import static org.assertj.core.api.Assertions.failBecauseExceptionWasNotThrown;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.tests.acceptance.dsl.condition.Condition;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.Node;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n+\n+import org.assertj.core.api.Assertions;\n+import org.web3j.protocol.exceptions.ClientConnectionException;\n+\n+public class MultiTenancyValidationFail implements Condition {", "originalCommit": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "chunk": "diff --git a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/MultiTenancyValidationFail.java b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/ExpectJsonRpcError.java\nsimilarity index 91%\nrename from acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/MultiTenancyValidationFail.java\nrename to acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/ExpectJsonRpcError.java\nindex 14956a25f0..0fd0b970eb 100644\n--- a/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/MultiTenancyValidationFail.java\n+++ b/acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/ExpectJsonRpcError.java\n\n@@ -24,12 +24,12 @@ import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n import org.assertj.core.api.Assertions;\n import org.web3j.protocol.exceptions.ClientConnectionException;\n \n-public class MultiTenancyValidationFail implements Condition {\n+public class ExpectJsonRpcError implements Condition {\n \n   private final Transaction<?> transaction;\n   private final JsonRpcError error;\n \n-  public MultiTenancyValidationFail(final Transaction<?> transaction, final JsonRpcError error) {\n+  public ExpectJsonRpcError(final Transaction<?> transaction, final JsonRpcError error) {\n     this.transaction = transaction;\n     this.error = error;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MTQ0Nw==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379161447", "bodyText": "Can this port be made dynamic? Otherwise will probably have problems with port conflicts at some point with multiple ATs running in parallel.", "author": "jframe", "createdAt": "2020-02-13T22:44:51Z", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy.multitenancy;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.ok;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.enclave.types.PrivacyGroup;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n+import org.hyperledger.besu.ethereum.privacy.Restriction;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.Cluster;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfiguration;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfigurationBuilder;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+public class MultiTenancyValidationFailAcceptanceTest extends AcceptanceTestBase {\n+  private BesuNode node;\n+  private final ObjectMapper mapper = new ObjectMapper();\n+  private Cluster multiTenancyCluster;\n+\n+  private static final int ENCLAVE_PORT = 1080;", "originalCommit": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE4NjE3Ng==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379186176", "bodyText": "Good idea.  Changed other AT class as well.", "author": "mark-terry", "createdAt": "2020-02-13T23:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MTQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "chunk": "diff --git a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\nindex 70f7c9c167..4af82a251c 100644\n--- a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n+++ b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n\n@@ -23,6 +23,7 @@ import org.hyperledger.besu.crypto.SECP256K1;\n import org.hyperledger.besu.enclave.types.PrivacyGroup;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.core.Wei;\n import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n import org.hyperledger.besu.ethereum.privacy.Restriction;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MTkwNA==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379161904", "bodyText": "Can use Transaction<Hash> instead of the raw type here and for the other tests", "author": "jframe", "createdAt": "2020-02-13T22:46:00Z", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy.multitenancy;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.ok;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.enclave.types.PrivacyGroup;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n+import org.hyperledger.besu.ethereum.privacy.Restriction;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.Cluster;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfiguration;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfigurationBuilder;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+public class MultiTenancyValidationFailAcceptanceTest extends AcceptanceTestBase {\n+  private BesuNode node;\n+  private final ObjectMapper mapper = new ObjectMapper();\n+  private Cluster multiTenancyCluster;\n+\n+  private static final int ENCLAVE_PORT = 1080;\n+  private static final String PRIVACY_GROUP_ID = \"Z3JvdXBJZA==\";\n+  private static final String ENCLAVE_KEY = \"B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";\n+  private static final String OTHER_ENCLAVE_KEY = \"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";\n+  private final Address senderAddress =\n+      Address.wrap(Bytes.fromHexString(accounts.getPrimaryBenefactor().getAddress()));\n+\n+  @Rule public WireMockRule wireMockRule = new WireMockRule(options().port(ENCLAVE_PORT));\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    final ClusterConfiguration clusterConfiguration =\n+        new ClusterConfigurationBuilder().awaitPeerDiscovery(false).build();\n+    multiTenancyCluster = new Cluster(clusterConfiguration, net);\n+    node =\n+        besu.createNodeWithMultiTenantedPrivacy(\n+            \"node1\",\n+            \"http://127.0.0.1:\" + ENCLAVE_PORT,\n+            \"authentication/auth_priv.toml\",\n+            \"authentication/auth_priv_key\");\n+    multiTenancyCluster.start(node);\n+\n+    final String token =\n+        node.execute(permissioningTransactions.createSuccessfulLogin(\"failUser\", \"pegasys\"));\n+    node.useAuthenticationTokenInHeaderForJsonRpc(token);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    multiTenancyCluster.close();\n+  }\n+\n+  @Test\n+  public void sendTransactionShouldFailWhenPrivateFromNotMatchEnclaveKey()\n+      throws JsonProcessingException {\n+    final PrivateTransaction validSignedPrivateTransaction =\n+        getValidSignedPrivateTransaction(senderAddress, OTHER_ENCLAVE_KEY);\n+    retrievePrivacyGroupEnclaveStub();\n+    final Transaction transaction =", "originalCommit": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "chunk": "diff --git a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\nindex 70f7c9c167..4af82a251c 100644\n--- a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n+++ b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n\n@@ -23,6 +23,7 @@ import org.hyperledger.besu.crypto.SECP256K1;\n import org.hyperledger.besu.enclave.types.PrivacyGroup;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.core.Wei;\n import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n import org.hyperledger.besu.ethereum.privacy.Restriction;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2OTc5MQ==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379169791", "bodyText": "Suggest using ENCLAVE_PUBLIC_KEY as enclave key can also refer to the key we get back after sending data to the enclave.", "author": "jframe", "createdAt": "2020-02-13T23:08:26Z", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy.multitenancy;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.ok;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.enclave.types.PrivacyGroup;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n+import org.hyperledger.besu.ethereum.privacy.Restriction;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.Cluster;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfiguration;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfigurationBuilder;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+public class MultiTenancyValidationFailAcceptanceTest extends AcceptanceTestBase {\n+  private BesuNode node;\n+  private final ObjectMapper mapper = new ObjectMapper();\n+  private Cluster multiTenancyCluster;\n+\n+  private static final int ENCLAVE_PORT = 1080;\n+  private static final String PRIVACY_GROUP_ID = \"Z3JvdXBJZA==\";\n+  private static final String ENCLAVE_KEY = \"B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";", "originalCommit": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "chunk": "diff --git a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\nindex 70f7c9c167..4af82a251c 100644\n--- a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n+++ b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n\n@@ -23,6 +23,7 @@ import org.hyperledger.besu.crypto.SECP256K1;\n import org.hyperledger.besu.enclave.types.PrivacyGroup;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.core.Wei;\n import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n import org.hyperledger.besu.ethereum.privacy.Restriction;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2OTkyMg==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379169922", "bodyText": "Suggest using OTHER_ENCLAVE_PUBLIC_KEY to avoid confusing with enclave key", "author": "jframe", "createdAt": "2020-02-13T23:08:51Z", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy.multitenancy;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.ok;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.enclave.types.PrivacyGroup;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n+import org.hyperledger.besu.ethereum.privacy.Restriction;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.Cluster;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfiguration;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfigurationBuilder;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+public class MultiTenancyValidationFailAcceptanceTest extends AcceptanceTestBase {\n+  private BesuNode node;\n+  private final ObjectMapper mapper = new ObjectMapper();\n+  private Cluster multiTenancyCluster;\n+\n+  private static final int ENCLAVE_PORT = 1080;\n+  private static final String PRIVACY_GROUP_ID = \"Z3JvdXBJZA==\";\n+  private static final String ENCLAVE_KEY = \"B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";\n+  private static final String OTHER_ENCLAVE_KEY = \"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";", "originalCommit": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "chunk": "diff --git a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\nindex 70f7c9c167..4af82a251c 100644\n--- a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n+++ b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n\n@@ -23,6 +23,7 @@ import org.hyperledger.besu.crypto.SECP256K1;\n import org.hyperledger.besu.enclave.types.PrivacyGroup;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.core.Wei;\n import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n import org.hyperledger.besu.ethereum.privacy.Restriction;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MTU1OQ==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379171559", "bodyText": "Also need tests for privDistributeRawTransaction", "author": "jframe", "createdAt": "2020-02-13T23:13:47Z", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy.multitenancy;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.ok;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.enclave.types.PrivacyGroup;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n+import org.hyperledger.besu.ethereum.privacy.Restriction;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.Cluster;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfiguration;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.cluster.ClusterConfigurationBuilder;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.Transaction;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+public class MultiTenancyValidationFailAcceptanceTest extends AcceptanceTestBase {\n+  private BesuNode node;\n+  private final ObjectMapper mapper = new ObjectMapper();\n+  private Cluster multiTenancyCluster;\n+\n+  private static final int ENCLAVE_PORT = 1080;\n+  private static final String PRIVACY_GROUP_ID = \"Z3JvdXBJZA==\";\n+  private static final String ENCLAVE_KEY = \"B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";\n+  private static final String OTHER_ENCLAVE_KEY = \"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=\";\n+  private final Address senderAddress =\n+      Address.wrap(Bytes.fromHexString(accounts.getPrimaryBenefactor().getAddress()));\n+\n+  @Rule public WireMockRule wireMockRule = new WireMockRule(options().port(ENCLAVE_PORT));\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    final ClusterConfiguration clusterConfiguration =\n+        new ClusterConfigurationBuilder().awaitPeerDiscovery(false).build();\n+    multiTenancyCluster = new Cluster(clusterConfiguration, net);\n+    node =\n+        besu.createNodeWithMultiTenantedPrivacy(\n+            \"node1\",\n+            \"http://127.0.0.1:\" + ENCLAVE_PORT,\n+            \"authentication/auth_priv.toml\",\n+            \"authentication/auth_priv_key\");\n+    multiTenancyCluster.start(node);\n+\n+    final String token =\n+        node.execute(permissioningTransactions.createSuccessfulLogin(\"failUser\", \"pegasys\"));\n+    node.useAuthenticationTokenInHeaderForJsonRpc(token);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    multiTenancyCluster.close();\n+  }\n+\n+  @Test\n+  public void sendTransactionShouldFailWhenPrivateFromNotMatchEnclaveKey()\n+      throws JsonProcessingException {\n+    final PrivateTransaction validSignedPrivateTransaction =\n+        getValidSignedPrivateTransaction(senderAddress, OTHER_ENCLAVE_KEY);\n+    retrievePrivacyGroupEnclaveStub();\n+    final Transaction transaction =\n+        privacyTransactions.sendRawTransaction(\n+            getRLPOutput(validSignedPrivateTransaction).encoded().toHexString());\n+    node.verify(priv.multiTenancyValidationFail(transaction, JsonRpcError.ENCLAVE_ERROR));\n+  }\n+\n+  @Test\n+  public void sendTransactionShouldFailWhenPrivacyGroupDoesNotContainEnclaveKey()\n+      throws JsonProcessingException {\n+    final PrivateTransaction validSignedPrivateTransaction =\n+        getValidSignedPrivateTransaction(senderAddress, ENCLAVE_KEY);\n+    retrievePrivacyGroupEnclaveStub();\n+    final Transaction transaction =\n+        privacyTransactions.sendRawTransaction(\n+            getRLPOutput(validSignedPrivateTransaction).encoded().toHexString());\n+    node.verify(priv.multiTenancyValidationFail(transaction, JsonRpcError.ENCLAVE_ERROR));\n+  }\n+", "originalCommit": "c2cc6f9fce1c89fcf419b3160409bf6c3537146c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3ODgxNQ==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379178815", "bodyText": "Is that required?  I'm just testing the fail paths through MultiTenancyPrivacyController.", "author": "mark-terry", "createdAt": "2020-02-13T23:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MTU1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0Mjk2Nw==", "url": "https://github.com/hyperledger/besu/pull/400#discussion_r379242967", "bodyText": "Yeah I think so as we can't test the MultiTenancyPrivacyController directly. It's possible that privDistributeRawTransaction could change at some point to just call into the enclave and bypass the validation", "author": "jframe", "createdAt": "2020-02-14T04:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MTU1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "chunk": "diff --git a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\nindex 70f7c9c167..4af82a251c 100644\n--- a/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n+++ b/acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/multitenancy/MultiTenancyValidationFailAcceptanceTest.java\n\n@@ -23,6 +23,7 @@ import org.hyperledger.besu.crypto.SECP256K1;\n import org.hyperledger.besu.enclave.types.PrivacyGroup;\n import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n import org.hyperledger.besu.ethereum.core.Wei;\n import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n import org.hyperledger.besu.ethereum.privacy.Restriction;\n"}}, {"oid": "e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "url": "https://github.com/hyperledger/besu/commit/e335ca8e048d0d67f4066a4bfaf3d5d9caf343ae", "message": "[PIE-1798] PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-02-14T00:00:36Z", "type": "commit"}, {"oid": "bb4b2cb74f6041b0e22fdeb320440d6991abb740", "url": "https://github.com/hyperledger/besu/commit/bb4b2cb74f6041b0e22fdeb320440d6991abb740", "message": "[PIE-1798] PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-02-14T06:41:38Z", "type": "commit"}, {"oid": "bb4b2cb74f6041b0e22fdeb320440d6991abb740", "url": "https://github.com/hyperledger/besu/commit/bb4b2cb74f6041b0e22fdeb320440d6991abb740", "message": "[PIE-1798] PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-02-14T06:41:38Z", "type": "forcePushed"}, {"oid": "0c8a1b3bbd8aac019bf0f87738a1ef3cb2368445", "url": "https://github.com/hyperledger/besu/commit/0c8a1b3bbd8aac019bf0f87738a1ef3cb2368445", "message": "Merge branch 'master' into PIE-1798-newfails", "committedDate": "2020-02-14T06:42:16Z", "type": "commit"}, {"oid": "ce1317d55acd277ffd0110564ff6543e29e93f2f", "url": "https://github.com/hyperledger/besu/commit/ce1317d55acd277ffd0110564ff6543e29e93f2f", "message": "[PIE-1798] Rawtypes fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-02-14T06:45:52Z", "type": "commit"}, {"oid": "928c27ef3476968eff1dd5a01d3d023db03aadb0", "url": "https://github.com/hyperledger/besu/commit/928c27ef3476968eff1dd5a01d3d023db03aadb0", "message": "Merge branch 'PIE-1798-newfails' of github.com:mark-terry/besu into PIE-1798-newfails", "committedDate": "2020-02-14T06:46:10Z", "type": "commit"}]}