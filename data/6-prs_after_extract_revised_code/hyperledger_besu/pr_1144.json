{"pr_number": 1144, "pr_title": "Improvements to authenticated JSON-RPC permissions checking", "pr_createdAt": "2020-06-25T02:26:58Z", "pr_url": "https://github.com/hyperledger/besu/pull/1144", "timeline": [{"oid": "94fbfb10f16695d6659aea49ef239b039fcaa563", "url": "https://github.com/hyperledger/besu/commit/94fbfb10f16695d6659aea49ef239b039fcaa563", "message": "exit early if matching permission found; add test for *:* permission\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-25T02:16:11Z", "type": "commit"}, {"oid": "07286d086b3b9b1088c185037fa6b524f7413e11", "url": "https://github.com/hyperledger/besu/commit/07286d086b3b9b1088c185037fa6b524f7413e11", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into permissions-check-1118", "committedDate": "2020-06-25T02:16:22Z", "type": "commit"}, {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94", "url": "https://github.com/hyperledger/besu/commit/c1716ee92e31c3f7161eb05e714fd8f61c754e94", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into permissions-check-1118", "committedDate": "2020-06-25T03:14:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4Mzk1Nw==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445283957", "bodyText": "What's the reason for this change?", "author": "mark-terry", "createdAt": "2020-06-25T03:15:33Z", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/NetListeningTest.java", "diffHunk": "@@ -69,7 +69,7 @@ public void shouldReturnFalseWhenNetworkIsNotListening() {\n   @Test\n   public void getPermissions() {\n     List<String> permissions = method.getPermissions();\n-    assertThat(permissions).containsExactlyInAnyOrder(\"net:*\", \"net:listening\", \"*:*\");\n+    assertThat(permissions).containsExactly(\"*:*\", \"net:*\", \"net:listening\");", "originalCommit": "c1716ee92e31c3f7161eb05e714fd8f61c754e94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzODA4OQ==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445338089", "bodyText": "it just made sense to have the items in order of granularity from widest to narrowest", "author": "macfarla", "createdAt": "2020-06-25T06:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4Mzk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0ODYwNg==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445848606", "bodyText": "also if the permissions are checked in that order then the log.debug messages will make sense", "author": "macfarla", "createdAt": "2020-06-25T21:28:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4Mzk1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTA0Mg==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445285042", "bodyText": "Looks like line 67 could be inserted as the else branch here?", "author": "mark-terry", "createdAt": "2020-06-25T03:20:22Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {\n+            return foundMatchingPermission.get();\n+          }", "originalCommit": "c1716ee92e31c3f7161eb05e714fd8f61c754e94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzNzg1OQ==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445337859", "bodyText": "no because it has to go through all the permissions that the user has", "author": "macfarla", "createdAt": "2020-06-25T06:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTA0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d0ec718d6f322c2745d9d676763251aa2ddeb6b3", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\nindex cb0da131c..92303aa90 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\n\n@@ -37,31 +37,31 @@ public class AuthenticationUtils {\n \n     AtomicBoolean foundMatchingPermission = new AtomicBoolean();\n \n-    if (authenticationService.isPresent()) {\n-      if (optionalUser.isPresent()) {\n-        User user = optionalUser.get();\n-        for (String perm : jsonRpcMethod.getPermissions()) {\n-          user.isAuthorized(\n-              perm,\n-              (authed) -> {\n-                if (authed.result()) {\n-                  LOG.trace(\n-                      \"user {} authorized : {} via permission {}\",\n-                      user,\n-                      jsonRpcMethod.getName(),\n-                      perm);\n-                  foundMatchingPermission.set(true);\n-                }\n-              });\n-          // exit if a matching permission was found, no need to keep checking\n-          if (foundMatchingPermission.get()) {\n-            return foundMatchingPermission.get();\n-          }\n+    if (authenticationService.isEmpty()) {\n+      // no auth provider configured thus anything is permitted\n+      return true;\n+    }\n+\n+    if (optionalUser.isPresent()) {\n+      User user = optionalUser.get();\n+      for (String perm : jsonRpcMethod.getPermissions()) {\n+        user.isAuthorized(\n+            perm,\n+            (authed) -> {\n+              if (authed.result()) {\n+                LOG.trace(\n+                    \"user {} authorized : {} via permission {}\",\n+                    user,\n+                    jsonRpcMethod.getName(),\n+                    perm);\n+                foundMatchingPermission.set(true);\n+              }\n+            });\n+        // exit if a matching permission was found, no need to keep checking\n+        if (foundMatchingPermission.get()) {\n+          return foundMatchingPermission.get();\n         }\n       }\n-    } else {\n-      // no auth provider configured thus anything is permitted\n-      foundMatchingPermission.set(true);\n     }\n \n     if (!foundMatchingPermission.get()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTg5Mg==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445285892", "bodyText": "Is the comment on line 41 out of date?", "author": "mark-terry", "createdAt": "2020-06-25T03:24:22Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java", "diffHunk": "@@ -45,8 +45,8 @@\n   default List<String> getPermissions() {", "originalCommit": "c1716ee92e31c3f7161eb05e714fd8f61c754e94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTE5MQ==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445841191", "bodyText": "updated", "author": "macfarla", "createdAt": "2020-06-25T21:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6888775d998216ce33214e3184e16e1d6550d54e", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java\nindex 362505f75..7fea1fb22 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java\n\n@@ -38,7 +38,7 @@ public interface JsonRpcMethod {\n   JsonRpcResponse response(JsonRpcRequestContext request);\n \n   /**\n-   * The list of Permissions that correspond to this JSON-RPC method. e.g. [net/*, net/listening]\n+   * The list of Permissions that correspond to this JSON-RPC method. e.g. [*:*, net:*, net:listening]\n    *\n    * @return list of permissions that match this method.\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NDQxOA==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445294418", "bodyText": "Is it possible to create a test that confirms that this exits early?", "author": "jframe", "createdAt": "2020-06-25T04:03:57Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {", "originalCommit": "c1716ee92e31c3f7161eb05e714fd8f61c754e94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4MjU5Nw==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445882597", "bodyText": "I've had a bit of a look but testing that piece of logic is not straight forward because of the async call. I don't think it's strictly necessary since the main requirement is that the user gets permissions or not, depending on the permissions that are set - and this is already tested.", "author": "macfarla", "createdAt": "2020-06-25T22:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NDQxOA=="}], "type": "inlineReview", "revised_code": {"commit": "d0ec718d6f322c2745d9d676763251aa2ddeb6b3", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\nindex cb0da131c..92303aa90 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\n\n@@ -37,31 +37,31 @@ public class AuthenticationUtils {\n \n     AtomicBoolean foundMatchingPermission = new AtomicBoolean();\n \n-    if (authenticationService.isPresent()) {\n-      if (optionalUser.isPresent()) {\n-        User user = optionalUser.get();\n-        for (String perm : jsonRpcMethod.getPermissions()) {\n-          user.isAuthorized(\n-              perm,\n-              (authed) -> {\n-                if (authed.result()) {\n-                  LOG.trace(\n-                      \"user {} authorized : {} via permission {}\",\n-                      user,\n-                      jsonRpcMethod.getName(),\n-                      perm);\n-                  foundMatchingPermission.set(true);\n-                }\n-              });\n-          // exit if a matching permission was found, no need to keep checking\n-          if (foundMatchingPermission.get()) {\n-            return foundMatchingPermission.get();\n-          }\n+    if (authenticationService.isEmpty()) {\n+      // no auth provider configured thus anything is permitted\n+      return true;\n+    }\n+\n+    if (optionalUser.isPresent()) {\n+      User user = optionalUser.get();\n+      for (String perm : jsonRpcMethod.getPermissions()) {\n+        user.isAuthorized(\n+            perm,\n+            (authed) -> {\n+              if (authed.result()) {\n+                LOG.trace(\n+                    \"user {} authorized : {} via permission {}\",\n+                    user,\n+                    jsonRpcMethod.getName(),\n+                    perm);\n+                foundMatchingPermission.set(true);\n+              }\n+            });\n+        // exit if a matching permission was found, no need to keep checking\n+        if (foundMatchingPermission.get()) {\n+          return foundMatchingPermission.get();\n         }\n       }\n-    } else {\n-      // no auth provider configured thus anything is permitted\n-      foundMatchingPermission.set(true);\n     }\n \n     if (!foundMatchingPermission.get()) {\n"}}, {"oid": "6888775d998216ce33214e3184e16e1d6550d54e", "url": "https://github.com/hyperledger/besu/commit/6888775d998216ce33214e3184e16e1d6550d54e", "message": "updated comment\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-25T06:44:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MDkyOA==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445450928", "bodyText": "The more I read this code the more I think setting a flag async is not ideal...", "author": "mark-terry", "createdAt": "2020-06-25T10:08:15Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {", "originalCommit": "6888775d998216ce33214e3184e16e1d6550d54e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4Mjk5Mg==", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445882992", "bodyText": "I don't love it either but it's not simple to change so it's not going to happen as part of this PR", "author": "macfarla", "createdAt": "2020-06-25T22:58:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MDkyOA=="}], "type": "inlineReview", "revised_code": {"commit": "d0ec718d6f322c2745d9d676763251aa2ddeb6b3", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\nindex cb0da131c..92303aa90 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java\n\n@@ -37,31 +37,31 @@ public class AuthenticationUtils {\n \n     AtomicBoolean foundMatchingPermission = new AtomicBoolean();\n \n-    if (authenticationService.isPresent()) {\n-      if (optionalUser.isPresent()) {\n-        User user = optionalUser.get();\n-        for (String perm : jsonRpcMethod.getPermissions()) {\n-          user.isAuthorized(\n-              perm,\n-              (authed) -> {\n-                if (authed.result()) {\n-                  LOG.trace(\n-                      \"user {} authorized : {} via permission {}\",\n-                      user,\n-                      jsonRpcMethod.getName(),\n-                      perm);\n-                  foundMatchingPermission.set(true);\n-                }\n-              });\n-          // exit if a matching permission was found, no need to keep checking\n-          if (foundMatchingPermission.get()) {\n-            return foundMatchingPermission.get();\n-          }\n+    if (authenticationService.isEmpty()) {\n+      // no auth provider configured thus anything is permitted\n+      return true;\n+    }\n+\n+    if (optionalUser.isPresent()) {\n+      User user = optionalUser.get();\n+      for (String perm : jsonRpcMethod.getPermissions()) {\n+        user.isAuthorized(\n+            perm,\n+            (authed) -> {\n+              if (authed.result()) {\n+                LOG.trace(\n+                    \"user {} authorized : {} via permission {}\",\n+                    user,\n+                    jsonRpcMethod.getName(),\n+                    perm);\n+                foundMatchingPermission.set(true);\n+              }\n+            });\n+        // exit if a matching permission was found, no need to keep checking\n+        if (foundMatchingPermission.get()) {\n+          return foundMatchingPermission.get();\n         }\n       }\n-    } else {\n-      // no auth provider configured thus anything is permitted\n-      foundMatchingPermission.set(true);\n     }\n \n     if (!foundMatchingPermission.get()) {\n"}}, {"oid": "d0ec718d6f322c2745d9d676763251aa2ddeb6b3", "url": "https://github.com/hyperledger/besu/commit/d0ec718d6f322c2745d9d676763251aa2ddeb6b3", "message": "minor refactoring and comments\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-25T20:48:52Z", "type": "commit"}, {"oid": "afdb282dbd222950684e6b8d639488180983f918", "url": "https://github.com/hyperledger/besu/commit/afdb282dbd222950684e6b8d639488180983f918", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into permissions-check-1118", "committedDate": "2020-06-25T20:48:59Z", "type": "commit"}]}