{"pr_number": 1375, "pr_title": "Refactor transaction rlp encoding / decoding ", "pr_createdAt": "2020-09-10T16:24:40Z", "pr_url": "https://github.com/hyperledger/besu/pull/1375", "timeline": [{"oid": "807afec98805b63a59353f7e2ef7be54aa40bef1", "url": "https://github.com/hyperledger/besu/commit/807afec98805b63a59353f7e2ef7be54aa40bef1", "message": "Add utility classes to deal with RLP encoding / decoding of transactions.\n- Added `TransactionRLPDecoder` with `Transaction decode(RLPInput input);` method.\n- Added `TransactionRLPEncoder` with `void encode(Transaction transaction, RLPOutput output);` method.\n- Added `TransactionRLPEncoderDecoder` with 2 static methods:\n    - `static void encode(final Transaction transaction, final RLPOutput output)`\n    - `static Transaction decode(final RLPInput input)`\n- Updated `Transaction` class to use `TransactionRLPEncoderDecoder`.\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T16:20:35Z", "type": "commit"}, {"oid": "2e8c1071ff084ff21e10c183fcaf4eb2a624fa72", "url": "https://github.com/hyperledger/besu/commit/2e8c1071ff084ff21e10c183fcaf4eb2a624fa72", "message": "Merge remote-tracking branch 'upstream/master' into 1364\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T16:20:46Z", "type": "commit"}, {"oid": "c1bac29a8ab2a28f96252f2eb75c8562e2cea711", "url": "https://github.com/hyperledger/besu/commit/c1bac29a8ab2a28f96252f2eb75c8562e2cea711", "message": "Update plugin api hash\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T16:31:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NDMxOQ==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486484319", "bodyText": "Why can't this switching logic go inside the encoder and decoder classes?", "author": "RatanRSur", "createdAt": "2020-09-10T16:39:50Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.core.encoding;\n+\n+import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n+import org.hyperledger.besu.ethereum.core.Transaction;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n+import org.hyperledger.besu.plugin.data.TransactionType;\n+\n+import com.google.common.collect.ImmutableMap;\n+\n+public class TransactionRLPEncoderDecoder {\n+\n+  private static final TransactionRLPEncoder DEFAULT_ENCODER = TransactionRLPEncoder.FRONTIER;\n+  private static final ImmutableMap<TransactionType, TransactionRLPEncoder> ENCODERS =\n+      ImmutableMap.of(\n+          TransactionType.FRONTIER,\n+          TransactionRLPEncoder.FRONTIER,\n+          TransactionType.EIP1559,\n+          TransactionRLPEncoder.EIP1559);\n+\n+  public static void encode(final Transaction transaction, final RLPOutput output) {\n+    ENCODERS.getOrDefault(transaction.getType(), DEFAULT_ENCODER).encode(transaction, output);\n+  }\n+\n+  public static Transaction decode(final RLPInput input) {\n+    final TransactionRLPDecoder decoder =\n+        ExperimentalEIPs.eip1559Enabled\n+            ? TransactionRLPDecoder.EIP1559\n+            : TransactionRLPDecoder.FRONTIER;\n+    return decoder.decode(input);\n+  }", "originalCommit": "c1bac29a8ab2a28f96252f2eb75c8562e2cea711", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NTU3NA==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486485574", "bodyText": "You think this extra class does not bring any value ?", "author": "abdelhamidbakhta", "createdAt": "2020-09-10T16:41:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NDMxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NzcwMA==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486487700", "bodyText": "It looks like the Decoder doesn't use any of the special fields. Could the ENCODERS map go straight into TransactionRLPEncoder?", "author": "RatanRSur", "createdAt": "2020-09-10T16:45:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NDMxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4ODAyMA==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486488020", "bodyText": "Yes. Ok nice suggestion, it will simplify the design even more", "author": "abdelhamidbakhta", "createdAt": "2020-09-10T16:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NDMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e39e71cd068d4ab04d804048b940451f64777ee7", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java\ndeleted file mode 100644\nindex 7f022bc52..000000000\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java\n+++ /dev/null\n\n@@ -1,46 +0,0 @@\n-/*\n- * Copyright ConsenSys AG.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n- * the License. You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n- * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations under the License.\n- *\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-package org.hyperledger.besu.ethereum.core.encoding;\n-\n-import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n-import org.hyperledger.besu.ethereum.core.Transaction;\n-import org.hyperledger.besu.ethereum.rlp.RLPInput;\n-import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n-import org.hyperledger.besu.plugin.data.TransactionType;\n-\n-import com.google.common.collect.ImmutableMap;\n-\n-public class TransactionRLPEncoderDecoder {\n-\n-  private static final TransactionRLPEncoder DEFAULT_ENCODER = TransactionRLPEncoder.FRONTIER;\n-  private static final ImmutableMap<TransactionType, TransactionRLPEncoder> ENCODERS =\n-      ImmutableMap.of(\n-          TransactionType.FRONTIER,\n-          TransactionRLPEncoder.FRONTIER,\n-          TransactionType.EIP1559,\n-          TransactionRLPEncoder.EIP1559);\n-\n-  public static void encode(final Transaction transaction, final RLPOutput output) {\n-    ENCODERS.getOrDefault(transaction.getType(), DEFAULT_ENCODER).encode(transaction, output);\n-  }\n-\n-  public static Transaction decode(final RLPInput input) {\n-    final TransactionRLPDecoder decoder =\n-        ExperimentalEIPs.eip1559Enabled\n-            ? TransactionRLPDecoder.EIP1559\n-            : TransactionRLPDecoder.FRONTIER;\n-    return decoder.decode(input);\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NTQ3NA==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486485474", "bodyText": "Trying to understand this. No matter what the RLP is we decode it as an eip1559 transaction if that's enabled? We don't need to do any checks on the decoded rlp to see if it's a legacy tx?", "author": "RatanRSur", "createdAt": "2020-09-10T16:41:42Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.core.encoding;\n+\n+import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n+import org.hyperledger.besu.ethereum.core.Transaction;\n+import org.hyperledger.besu.ethereum.rlp.RLPInput;\n+import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n+import org.hyperledger.besu.plugin.data.TransactionType;\n+\n+import com.google.common.collect.ImmutableMap;\n+\n+public class TransactionRLPEncoderDecoder {\n+\n+  private static final TransactionRLPEncoder DEFAULT_ENCODER = TransactionRLPEncoder.FRONTIER;\n+  private static final ImmutableMap<TransactionType, TransactionRLPEncoder> ENCODERS =\n+      ImmutableMap.of(\n+          TransactionType.FRONTIER,\n+          TransactionRLPEncoder.FRONTIER,\n+          TransactionType.EIP1559,\n+          TransactionRLPEncoder.EIP1559);\n+\n+  public static void encode(final Transaction transaction, final RLPOutput output) {\n+    ENCODERS.getOrDefault(transaction.getType(), DEFAULT_ENCODER).encode(transaction, output);\n+  }\n+\n+  public static Transaction decode(final RLPInput input) {\n+    final TransactionRLPDecoder decoder =\n+        ExperimentalEIPs.eip1559Enabled\n+            ? TransactionRLPDecoder.EIP1559\n+            : TransactionRLPDecoder.FRONTIER;\n+    return decoder.decode(input);", "originalCommit": "c1bac29a8ab2a28f96252f2eb75c8562e2cea711", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NjIxMw==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486486213", "bodyText": "There is no proper way of knowing in advance. Basically you try getting more fields and you guess the type based on when the end of list is reached.", "author": "abdelhamidbakhta", "createdAt": "2020-09-10T16:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NTQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "e39e71cd068d4ab04d804048b940451f64777ee7", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java\ndeleted file mode 100644\nindex 7f022bc52..000000000\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/encoding/TransactionRLPEncoderDecoder.java\n+++ /dev/null\n\n@@ -1,46 +0,0 @@\n-/*\n- * Copyright ConsenSys AG.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n- * the License. You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n- * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations under the License.\n- *\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-package org.hyperledger.besu.ethereum.core.encoding;\n-\n-import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n-import org.hyperledger.besu.ethereum.core.Transaction;\n-import org.hyperledger.besu.ethereum.rlp.RLPInput;\n-import org.hyperledger.besu.ethereum.rlp.RLPOutput;\n-import org.hyperledger.besu.plugin.data.TransactionType;\n-\n-import com.google.common.collect.ImmutableMap;\n-\n-public class TransactionRLPEncoderDecoder {\n-\n-  private static final TransactionRLPEncoder DEFAULT_ENCODER = TransactionRLPEncoder.FRONTIER;\n-  private static final ImmutableMap<TransactionType, TransactionRLPEncoder> ENCODERS =\n-      ImmutableMap.of(\n-          TransactionType.FRONTIER,\n-          TransactionRLPEncoder.FRONTIER,\n-          TransactionType.EIP1559,\n-          TransactionRLPEncoder.EIP1559);\n-\n-  public static void encode(final Transaction transaction, final RLPOutput output) {\n-    ENCODERS.getOrDefault(transaction.getType(), DEFAULT_ENCODER).encode(transaction, output);\n-  }\n-\n-  public static Transaction decode(final RLPInput input) {\n-    final TransactionRLPDecoder decoder =\n-        ExperimentalEIPs.eip1559Enabled\n-            ? TransactionRLPDecoder.EIP1559\n-            : TransactionRLPDecoder.FRONTIER;\n-    return decoder.decode(input);\n-  }\n-}\n"}}, {"oid": "a7bda52eb3552b4be1141fdd64bce6c3b59d4863", "url": "https://github.com/hyperledger/besu/commit/a7bda52eb3552b4be1141fdd64bce6c3b59d4863", "message": "Add utility classes to deal with RLP encoding / decoding of transactions.\n- Added `TransactionRLPDecoder` with `Transaction decode(RLPInput input);` method.\n- Added `TransactionRLPEncoder` with `void encode(Transaction transaction, RLPOutput output);` method.\n- Added `TransactionRLPEncoderDecoder` with 2 static methods:\n    - `static void encode(final Transaction transaction, final RLPOutput output)`\n    - `static Transaction decode(final RLPInput input)`\n- Updated `Transaction` class to use `TransactionRLPEncoderDecoder`.\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T16:43:39Z", "type": "commit"}, {"oid": "360df0dfa24e78c3ff9bdab12b156d382b61427f", "url": "https://github.com/hyperledger/besu/commit/360df0dfa24e78c3ff9bdab12b156d382b61427f", "message": "Update plugin api hash\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T16:43:39Z", "type": "commit"}, {"oid": "020dca2454c3c35a6f33e08efbb338807d7b6d80", "url": "https://github.com/hyperledger/besu/commit/020dca2454c3c35a6f33e08efbb338807d7b6d80", "message": "Merge branch '1364' of https://github.com/abdelhamidbakhta/besu into 1364", "committedDate": "2020-09-10T16:44:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MzI2NQ==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486493265", "bodyText": "I'm wondering if there is a better name for this", "author": "matkt", "createdAt": "2020-09-10T16:54:42Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/Transaction.java", "diffHunk": "@@ -38,16 +39,16 @@\n \n   // Used for transactions that are not tied to a specific chain\n   // (e.g. does not have a chain id associated with it).\n-  private static final BigInteger REPLAY_UNPROTECTED_V_BASE = BigInteger.valueOf(27);\n-  private static final BigInteger REPLAY_UNPROTECTED_V_BASE_PLUS_1 = BigInteger.valueOf(28);\n+  public static final BigInteger REPLAY_UNPROTECTED_V_BASE = BigInteger.valueOf(27);\n+  public static final BigInteger REPLAY_UNPROTECTED_V_BASE_PLUS_1 = BigInteger.valueOf(28);\n \n-  private static final BigInteger REPLAY_PROTECTED_V_BASE = BigInteger.valueOf(35);\n+  public static final BigInteger REPLAY_PROTECTED_V_BASE = BigInteger.valueOf(35);\n \n   // The v signature parameter starts at 36 because 1 is the first valid chainId so:\n   // chainId > 1 implies that 2 * chainId + V_BASE > 36.\n-  private static final BigInteger REPLAY_PROTECTED_V_MIN = BigInteger.valueOf(36);\n+  public static final BigInteger REPLAY_PROTECTED_V_MIN = BigInteger.valueOf(36);\n \n-  private static final BigInteger TWO = BigInteger.valueOf(2);\n+  public static final BigInteger TWO = BigInteger.valueOf(2);", "originalCommit": "020dca2454c3c35a6f33e08efbb338807d7b6d80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5Mzk5NQ==", "url": "https://github.com/hyperledger/besu/pull/1375#discussion_r486493995", "bodyText": "Hmm. No better name that what the constant is really, and it is literally the number two.", "author": "abdelhamidbakhta", "createdAt": "2020-09-10T16:55:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MzI2NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "e39e71cd068d4ab04d804048b940451f64777ee7", "url": "https://github.com/hyperledger/besu/commit/e39e71cd068d4ab04d804048b940451f64777ee7", "message": "Address PR comments\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T16:58:09Z", "type": "commit"}, {"oid": "5ed88508b69f27dd20df10887504654833be9ee8", "url": "https://github.com/hyperledger/besu/commit/5ed88508b69f27dd20df10887504654833be9ee8", "message": "Address PR comments\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-10T17:39:05Z", "type": "commit"}, {"oid": "f273d76dba5344ebc389dcffa51ab5c59c34c8df", "url": "https://github.com/hyperledger/besu/commit/f273d76dba5344ebc389dcffa51ab5c59c34c8df", "message": "Merge remote-tracking branch 'upstream/master' into 1364\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-11T08:38:18Z", "type": "commit"}, {"oid": "581a88109d9faade7724607aff964ec4590d2bf8", "url": "https://github.com/hyperledger/besu/commit/581a88109d9faade7724607aff964ec4590d2bf8", "message": "Merge remote-tracking branch 'upstream/master' into 1364\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-14T07:05:26Z", "type": "commit"}, {"oid": "96bbe0095644be9cce95922a31d53bb24d964d55", "url": "https://github.com/hyperledger/besu/commit/96bbe0095644be9cce95922a31d53bb24d964d55", "message": "Merge remote-tracking branch 'upstream/master' into 1364\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-14T15:19:55Z", "type": "commit"}, {"oid": "01084064a68c55eb9f2f70596079904985583a1e", "url": "https://github.com/hyperledger/besu/commit/01084064a68c55eb9f2f70596079904985583a1e", "message": "Added unit tests\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-14T16:03:40Z", "type": "commit"}, {"oid": "a3d91ddb2489832cf99eb583ae5b629a3f42ba73", "url": "https://github.com/hyperledger/besu/commit/a3d91ddb2489832cf99eb583ae5b629a3f42ba73", "message": "Added SPDX header\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-14T16:04:57Z", "type": "commit"}, {"oid": "5dee96fb3e51e73bcb6198ecb85f01dca6895bd7", "url": "https://github.com/hyperledger/besu/commit/5dee96fb3e51e73bcb6198ecb85f01dca6895bd7", "message": "spotless apply\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-09-14T16:07:29Z", "type": "commit"}]}