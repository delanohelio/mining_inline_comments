{"pr_number": 986, "pr_title": "Add timeout handler in JsonRpcHttpService.", "pr_createdAt": "2020-05-27T13:29:44Z", "pr_url": "https://github.com/hyperledger/besu/pull/986", "timeline": [{"oid": "ca644c54efe0951e5e86ca89bd6c35afd079bb83", "url": "https://github.com/hyperledger/besu/commit/ca644c54efe0951e5e86ca89bd6c35afd079bb83", "message": "Add timeout handler in JsonRpcHttpService.\n\n- Created `TimeoutOptions` class with fields:\n    - *timeout*: the timeout in milliseconds.\n    - *errorCode*: the http status code.\n- Created `EthRpcTimeoutHandler`.\n    -  Contains `handler` static method to create `Vertx Handler`. The process of the handler created is the following\n        - retrieve the body as string.\n        - parse it as a `JsonObject`.\n        - cache the resulting `JsonObject` in the `RoutingContext`.\n        - retrieve the RPC method name.\n        - set a timer based on the configuration if the method name matches one entry in the configuration map.\n        - call the next handler.\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-27T13:02:16Z", "type": "commit"}, {"oid": "1bec4f02047c8d6566213441ab3d2eea3ee8bdba", "url": "https://github.com/hyperledger/besu/commit/1bec4f02047c8d6566213441ab3d2eea3ee8bdba", "message": "Fixed unit test\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-27T14:02:38Z", "type": "commit"}, {"oid": "ae3c6002717c52694649490158ee343531a23b4d", "url": "https://github.com/hyperledger/besu/commit/ae3c6002717c52694649490158ee343531a23b4d", "message": "Update default timeout\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-27T14:19:44Z", "type": "commit"}, {"oid": "5a0146a6a8c22e059b700087ab159d085dcb9f5a", "url": "https://github.com/hyperledger/besu/commit/5a0146a6a8c22e059b700087ab159d085dcb9f5a", "message": "Merge remote-tracking branch 'upstream/master' into 944\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T08:09:35Z", "type": "commit"}, {"oid": "d0ec9fc4a783868e68453380870baa46231b0d59", "url": "https://github.com/hyperledger/besu/commit/d0ec9fc4a783868e68453380870baa46231b0d59", "message": "Add timeout support for GraphQL.\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T09:04:16Z", "type": "commit"}, {"oid": "cd5d6929e222265cafbcbd375566a4e76a2933e4", "url": "https://github.com/hyperledger/besu/commit/cd5d6929e222265cafbcbd375566a4e76a2933e4", "message": "Merge remote-tracking branch 'upstream/master' into 944\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T09:04:49Z", "type": "commit"}, {"oid": "a9929b31e496d997f4a19e5a4bee34cc9b95ac60", "url": "https://github.com/hyperledger/besu/commit/a9929b31e496d997f4a19e5a4bee34cc9b95ac60", "message": "fix\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T09:15:15Z", "type": "commit"}, {"oid": "81af9bc04b73994c93742fabef12ea4d4eb1b39a", "url": "https://github.com/hyperledger/besu/commit/81af9bc04b73994c93742fabef12ea4d4eb1b39a", "message": "Change default timeout\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T09:18:49Z", "type": "commit"}, {"oid": "41d64341ddd625f3f0ac58ed88c7f6290540b728", "url": "https://github.com/hyperledger/besu/commit/41d64341ddd625f3f0ac58ed88c7f6290540b728", "message": "Add --Xhttp-timeout CLI option\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T13:38:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3MTA0Ng==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431871046", "bodyText": "Should this be moved to a method to make the lambda simpler?", "author": "davemec", "createdAt": "2020-05-28T14:19:23Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutHandler.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.handlers;\n+\n+import static java.util.Collections.emptyMap;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.context.ContextKey;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.vertx.core.Handler;\n+import io.vertx.core.json.JsonObject;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class TimeoutHandler {\n+\n+  public static Handler<RoutingContext> handler(\n+      final Optional<TimeoutOptions> globalOptions, final boolean decodeJSON) {\n+    return handler(globalOptions, emptyMap(), decodeJSON);\n+  }\n+\n+  public static Handler<RoutingContext> handler(\n+      final Optional<TimeoutOptions> globalOptions,\n+      final Map<String, TimeoutOptions> timeoutOptionsByMethod,\n+      final boolean decodeJSON) {\n+    assert timeoutOptionsByMethod != null;\n+    return ctx -> {\n+      try {", "originalCommit": "41d64341ddd625f3f0ac58ed88c7f6290540b728", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3NzI4OA==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431877288", "bodyText": "Makes sense.", "author": "abdelhamidbakhta", "createdAt": "2020-05-28T14:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3MTA0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3ODgwMQ==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431878801", "bodyText": "Done.", "author": "abdelhamidbakhta", "createdAt": "2020-05-28T14:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3MTA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a62d29715bf513eacef3997811515795c72afaed", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutHandler.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutHandler.java\nindex 0e4f1532e8..19ab74948c 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutHandler.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutHandler.java\n\n@@ -37,33 +37,39 @@ public class TimeoutHandler {\n       final Map<String, TimeoutOptions> timeoutOptionsByMethod,\n       final boolean decodeJSON) {\n     assert timeoutOptionsByMethod != null;\n-    return ctx -> {\n-      try {\n-        final String bodyAsString = ctx.getBodyAsString();\n-        if (bodyAsString != null) {\n-          final String json = ctx.getBodyAsString().trim();\n-          Optional<TimeoutOptions> methodTimeoutOptions = Optional.empty();\n-          if (decodeJSON && !json.isEmpty() && json.charAt(0) == '{') {\n-            final JsonObject requestBodyJsonObject = new JsonObject(json);\n-            ctx.put(ContextKey.REQUEST_BODY_AS_JSON_OBJECT.name(), requestBodyJsonObject);\n-            final String method = requestBodyJsonObject.getString(\"method\");\n-            methodTimeoutOptions = Optional.ofNullable(timeoutOptionsByMethod.get(method));\n-          }\n-          methodTimeoutOptions\n-              .or(() -> globalOptions)\n-              .ifPresent(\n-                  timeoutOptions -> {\n-                    long tid =\n-                        ctx.vertx()\n-                            .setTimer(\n-                                timeoutOptions.getTimeout(),\n-                                t -> ctx.fail(timeoutOptions.getErrorCode()));\n-                    ctx.addBodyEndHandler(v -> ctx.vertx().cancelTimer(tid));\n-                  });\n+    return ctx -> processHandler(ctx, globalOptions, timeoutOptionsByMethod, decodeJSON);\n+  }\n+\n+  private static void processHandler(\n+      final RoutingContext ctx,\n+      final Optional<TimeoutOptions> globalOptions,\n+      final Map<String, TimeoutOptions> timeoutOptionsByMethod,\n+      final boolean decodeJSON) {\n+    try {\n+      final String bodyAsString = ctx.getBodyAsString();\n+      if (bodyAsString != null) {\n+        final String json = ctx.getBodyAsString().trim();\n+        Optional<TimeoutOptions> methodTimeoutOptions = Optional.empty();\n+        if (decodeJSON && !json.isEmpty() && json.charAt(0) == '{') {\n+          final JsonObject requestBodyJsonObject = new JsonObject(json);\n+          ctx.put(ContextKey.REQUEST_BODY_AS_JSON_OBJECT.name(), requestBodyJsonObject);\n+          final String method = requestBodyJsonObject.getString(\"method\");\n+          methodTimeoutOptions = Optional.ofNullable(timeoutOptionsByMethod.get(method));\n         }\n-      } finally {\n-        ctx.next();\n+        methodTimeoutOptions\n+            .or(() -> globalOptions)\n+            .ifPresent(\n+                timeoutOptions -> {\n+                  long tid =\n+                      ctx.vertx()\n+                          .setTimer(\n+                              timeoutOptions.getTimeout(),\n+                              t -> ctx.fail(timeoutOptions.getErrorCode()));\n+                  ctx.addBodyEndHandler(v -> ctx.vertx().cancelTimer(tid));\n+                });\n       }\n-    };\n+    } finally {\n+      ctx.next();\n+    }\n   }\n }\n"}}, {"oid": "a62d29715bf513eacef3997811515795c72afaed", "url": "https://github.com/hyperledger/besu/commit/a62d29715bf513eacef3997811515795c72afaed", "message": "Simplify lambda\n\nSigned-off-by: Abdelhamid Bakhta <abdelhamid.bakhta@consensys.net>", "committedDate": "2020-05-28T14:28:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODUyMA==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431908520", "bodyText": "Don't we have a more elegant way to verify that it's a json? or do we think this is sufficient in this context?", "author": "matkt", "createdAt": "2020-05-28T15:04:00Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutHandler.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.handlers;\n+\n+import static java.util.Collections.emptyMap;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.context.ContextKey;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.vertx.core.Handler;\n+import io.vertx.core.json.JsonObject;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class TimeoutHandler {\n+\n+  public static Handler<RoutingContext> handler(\n+      final Optional<TimeoutOptions> globalOptions, final boolean decodeJSON) {\n+    return handler(globalOptions, emptyMap(), decodeJSON);\n+  }\n+\n+  public static Handler<RoutingContext> handler(\n+      final Optional<TimeoutOptions> globalOptions,\n+      final Map<String, TimeoutOptions> timeoutOptionsByMethod,\n+      final boolean decodeJSON) {\n+    assert timeoutOptionsByMethod != null;\n+    return ctx -> processHandler(ctx, globalOptions, timeoutOptionsByMethod, decodeJSON);\n+  }\n+\n+  private static void processHandler(\n+      final RoutingContext ctx,\n+      final Optional<TimeoutOptions> globalOptions,\n+      final Map<String, TimeoutOptions> timeoutOptionsByMethod,\n+      final boolean decodeJSON) {\n+    try {\n+      final String bodyAsString = ctx.getBodyAsString();\n+      if (bodyAsString != null) {\n+        final String json = ctx.getBodyAsString().trim();\n+        Optional<TimeoutOptions> methodTimeoutOptions = Optional.empty();\n+        if (decodeJSON && !json.isEmpty() && json.charAt(0) == '{') {", "originalCommit": "a62d29715bf513eacef3997811515795c72afaed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxMTc5Nw==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431911797", "bodyText": "This already what we do:\n\n  \n    \n      besu/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/JsonRpcHttpService.java\n    \n    \n         Line 431\n      in\n      de64a25\n    \n    \n    \n    \n\n        \n          \n           if (!json.isEmpty() && json.charAt(0) == '{') {", "author": "abdelhamidbakhta", "createdAt": "2020-05-28T15:08:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxMjE2NQ==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431912165", "bodyText": "This is the most performant technique. Not that much elegant i agree but performance matters much here.", "author": "abdelhamidbakhta", "createdAt": "2020-05-28T15:09:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkxMzYzOQ==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r431913639", "bodyText": "that means that it is certainly sufficient in this context \ud83d\udc4d", "author": "matkt", "createdAt": "2020-05-28T15:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODUyMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEwMDQ4MQ==", "url": "https://github.com/hyperledger/besu/pull/986#discussion_r432100481", "bodyText": "Late to the party as this is already committed, but is 2 days really the default timeout?  I was thinking more like 2-5 minutes.", "author": "shemnon", "createdAt": "2020-05-28T20:20:16Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/handlers/TimeoutOptions.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.handlers;\n+\n+import java.time.Duration;\n+\n+public class TimeoutOptions {\n+  private static final long DEFAULT_TIMEOUT = Duration.ofDays(2).toMillis();", "originalCommit": "a62d29715bf513eacef3997811515795c72afaed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}