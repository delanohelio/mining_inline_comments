{"pr_number": 639, "pr_title": "#628 Deprecating Private Transaction hash/getHash()", "pr_createdAt": "2020-04-02T05:02:03Z", "pr_url": "https://github.com/hyperledger/besu/pull/639", "timeline": [{"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "url": "https://github.com/hyperledger/besu/commit/ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "message": "#628 Deprecating Private Transaction hash/getHash()\n\nSigned-off-by: Lucas Saldanha <lucas.saldanha@consensys.net>", "committedDate": "2020-04-02T05:00:42Z", "type": "commit"}, {"oid": "658429ec03c46ab768ce58add38512c9b16f8eae", "url": "https://github.com/hyperledger/besu/commit/658429ec03c46ab768ce58add38512c9b16f8eae", "message": "Merge branch 'master' into deleteprivtxhash\n\nSigned-off-by: Lucas Saldanha <lucas.saldanha@consensys.net>", "committedDate": "2020-04-02T21:08:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MjYxMg==", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402672612", "bodyText": "\"Processing private transaction corresponding to PMT {} in privacy group {}\"?", "author": "pinges", "createdAt": "2020-04-03T00:33:52Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -111,10 +113,7 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n \n     final Bytes32 privacyGroupId = Bytes32.wrap(maybeGroupId.get());\n \n-    LOG.debug(\n-        \"Processing private transaction {} in privacy group {}\",\n-        privateTransaction.getHash(),\n-        privacyGroupId);\n+    LOG.debug(\"Processing private transaction {} in privacy group {}\", pmtHash, privacyGroupId);", "originalCommit": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3NDAxNA==", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402674014", "bodyText": "should it be \"corresponding\"? I'm not sure, maybe we should ask Madeline :-)", "author": "pinges", "createdAt": "2020-04-03T00:39:13Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java", "diffHunk": "@@ -414,8 +416,11 @@ public BigInteger getV() {\n   /**\n    * Returns the transaction hash.\n    *\n+   * @deprecated All private transactions should be identified by their correspondent PMT hash.", "originalCommit": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d73ca80fb742ec9893de520013bf7310d8c2675d", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java\nindex 4a04cf1870..b1837f009f 100644\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java\n+++ b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java\n\n@@ -416,7 +416,7 @@ public class PrivateTransaction {\n   /**\n    * Returns the transaction hash.\n    *\n-   * @deprecated All private transactions should be identified by their correspondent PMT hash.\n+   * @deprecated All private transactions should be identified by their corresponding PMT hash.\n    * @return the transaction hash\n    */\n   // This field will be removed in 1.5.0\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjAzOA==", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702038", "bodyText": "What about this: \"// Corresponding PMT does not exist.\"", "author": "pinges", "createdAt": "2020-04-03T02:29:02Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java", "diffHunk": "@@ -122,6 +122,7 @@ public PrivateTransactionSimulator(\n             publicWorldState.updater(),\n             disposablePrivateState.updater(),\n             header,\n+            Hash.ZERO, // PMT hash is not needed as this private transaction doesn't exist", "originalCommit": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d73ca80fb742ec9893de520013bf7310d8c2675d", "chunk": "diff --git a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java\nindex 7002e6365f..3500b089eb 100644\n--- a/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java\n+++ b/ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java\n\n@@ -122,7 +122,7 @@ public class PrivateTransactionSimulator {\n             publicWorldState.updater(),\n             disposablePrivateState.updater(),\n             header,\n-            Hash.ZERO, // PMT hash is not needed as this private transaction doesn't exist\n+            Hash.ZERO, // Corresponding PMT hash not needed as this private transaction doesn't exist\n             transaction,\n             protocolSpec.getMiningBeneficiaryCalculator().calculateBeneficiary(header),\n             new DebugOperationTracer(TraceOptions.DEFAULT),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjI3Ng==", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702276", "bodyText": "\"Validating private transaction corresponding to PMT {}\" ?", "author": "pinges", "createdAt": "2020-04-03T02:30:02Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "diffHunk": "@@ -38,25 +38,21 @@ public PrivateTransactionValidator(final Optional<BigInteger> chainId) {\n       final PrivateTransaction transaction,\n       final Long accountNonce,\n       final boolean allowFutureNonces) {\n-    LOG.debug(\"Validating private transaction fields of {}\", transaction.getHash());\n+    LOG.debug(\"Validating private transaction {}\", transaction);", "originalCommit": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjU2Nw==", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702567", "bodyText": "s.a.", "author": "pinges", "createdAt": "2020-04-03T02:31:24Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/PrivacyPrecompiledContract.java", "diffHunk": "@@ -127,10 +129,7 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     final Bytes32 privacyGroupId =\n         Bytes32.wrap(Bytes.fromBase64String(receiveResponse.getPrivacyGroupId()));\n \n-    LOG.debug(\n-        \"Processing private transaction {} in privacy group {}\",\n-        privateTransaction.getHash(),\n-        privacyGroupId);\n+    LOG.debug(\"Processing private transaction {} in privacy group {}\", pmtHash, privacyGroupId);", "originalCommit": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjkyMQ==", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702921", "bodyText": "We might not need the \"corresponding to PMT\" business here ....", "author": "pinges", "createdAt": "2020-04-03T02:32:50Z", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "diffHunk": "@@ -38,25 +38,21 @@ public PrivateTransactionValidator(final Optional<BigInteger> chainId) {\n       final PrivateTransaction transaction,\n       final Long accountNonce,\n       final boolean allowFutureNonces) {\n-    LOG.debug(\"Validating private transaction fields of {}\", transaction.getHash());\n+    LOG.debug(\"Validating private transaction {}\", transaction);\n     final ValidationResult<TransactionInvalidReason> privateFieldsValidationResult =\n         validatePrivateTransactionFields(transaction);\n     if (!privateFieldsValidationResult.isValid()) {\n       LOG.debug(\n-          \"Private Transaction fields are invalid {}, {}\",\n-          transaction.getHash(),\n+          \"Private Transaction fields are invalid {}\",\n           privateFieldsValidationResult.getErrorMessage());\n       return privateFieldsValidationResult;\n     }\n \n-    LOG.debug(\"Validating the signature of Private Transaction {} \", transaction.getHash());\n-\n     final ValidationResult<TransactionValidator.TransactionInvalidReason>\n         signatureValidationResult = validateTransactionSignature(transaction);\n     if (!signatureValidationResult.isValid()) {\n       LOG.debug(\n-          \"Private Transaction {}, failed validation {}, {}\",\n-          transaction.getHash(),\n+          \"Private Transaction failed signature validation {}, {}\",", "originalCommit": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "165b911629fbfae02e0dcebf35d2da36fcbc4ed9", "url": "https://github.com/hyperledger/besu/commit/165b911629fbfae02e0dcebf35d2da36fcbc4ed9", "message": "Merge branch 'master' into deleteprivtxhash\n\nSigned-off-by: Lucas Saldanha <lucas.saldanha@consensys.net>", "committedDate": "2020-04-03T03:40:05Z", "type": "commit"}, {"oid": "d73ca80fb742ec9893de520013bf7310d8c2675d", "url": "https://github.com/hyperledger/besu/commit/d73ca80fb742ec9893de520013bf7310d8c2675d", "message": "Updating comments\n\nSigned-off-by: Lucas Saldanha <lucas.saldanha@consensys.net>", "committedDate": "2020-04-03T03:43:20Z", "type": "commit"}, {"oid": "23e903fe604a788d4a4ef23a55f3425e59c10b29", "url": "https://github.com/hyperledger/besu/commit/23e903fe604a788d4a4ef23a55f3425e59c10b29", "message": "Spotless\n\nSigned-off-by: Lucas Saldanha <lucas.saldanha@consensys.net>", "committedDate": "2020-04-03T03:47:01Z", "type": "commit"}]}