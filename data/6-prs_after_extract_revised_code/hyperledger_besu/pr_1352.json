{"pr_number": 1352, "pr_title": "Added event listener to remove unsubscribe websocket if user removed \u2026", "pr_createdAt": "2020-08-31T14:57:21Z", "pr_url": "https://github.com/hyperledger/besu/pull/1352", "timeline": [{"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8", "url": "https://github.com/hyperledger/besu/commit/c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8", "message": "Added event listener to remove unsubscribe websocket if user removed from privacy group.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-08-31T14:55:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0OTI1NQ==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480449255", "bodyText": "do we have to worry about this request failing?", "author": "macfarla", "createdAt": "2020-08-31T22:50:02Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "diffHunk": "@@ -158,4 +161,20 @@ public void sendMessage(final Long subscriptionId, final JsonRpcResult msg) {\n           }\n         });\n   }\n+\n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    // When a user is removed from a privacy group, remove all subscriptions from that user to that\n+    // group\n+    subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()\n+        .filter(\n+            subscription ->\n+                subscription.getEnclavePublicKey().equals(event.getEnclavePublicKey())\n+                    && subscription.getPrivacyGroupId().equals(event.getPrivacyGroupId()))\n+        .forEach(\n+            subscription ->\n+                this.unsubscribe(\n+                    new UnsubscribeRequest(\n+                        subscription.getSubscriptionId(), subscription.getConnectionId())));", "originalCommit": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY3MjcwMA==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480672700", "bodyText": "I don't believe so. The fail case is if the specified connection doesn't exist, which shouldn't occur given we're retrieving those details from the current subscription map.", "author": "mark-terry", "createdAt": "2020-09-01T03:08:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0OTI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2e5217392906e3e6615a02da7ceda8659b5438eb", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java\nindex 2444cc9eb0..992ae42dc2 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java\n\n@@ -164,6 +173,14 @@ public class SubscriptionManager extends AbstractVerticle implements PrivateTran\n \n   @Override\n   public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    privateTransactionEvents.add(event);\n+  }\n+\n+  void onBlockAdded() {\n+    privateTransactionEvents.forEach(this::processPrivateTransactionEvents);\n+  }\n+\n+  private void processPrivateTransactionEvents(final PrivateTransactionEvent event) {\n     // When a user is removed from a privacy group, remove all subscriptions from that user to that\n     // group\n     subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MDU4OQ==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480450589", "bodyText": "is there a test to check multiTenancyCheckFail?", "author": "macfarla", "createdAt": "2020-08-31T22:52:04Z", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/methods/PrivSubscribeTest.java", "diffHunk": "@@ -134,6 +137,31 @@ public void multiTenancyCheckFailure() {\n         .hasMessageContaining(\"msg\");\n   }\n \n+  @Test\n+  public void multiTenancyCheckSuccess() {", "originalCommit": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU0MzU3Nw==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480543577", "bodyText": "As far as I can tell, the previous multiTenancyCheckFailure test checks the multi-tenancy fail case.", "author": "mark-terry", "createdAt": "2020-09-01T01:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MDU4OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MTM2Mw==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480451363", "bodyText": "should this enclavePublicKey be the variable not the string", "author": "macfarla", "createdAt": "2020-08-31T22:53:18Z", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java", "diffHunk": "@@ -409,7 +413,8 @@ public void mapRequestToPrivateSubscriptionWithInvalidType() {\n     thrown.expect(InvalidSubscriptionRequestException.class);\n     thrown.expectMessage(\"Invalid subscribe request. Invalid private subscription type.\");\n \n-    mapper.mapPrivateSubscribeRequest(new JsonRpcRequestContext(jsonRpcRequest));\n+    mapper.mapPrivateSubscribeRequest(\n+        new JsonRpcRequestContext(jsonRpcRequest), \"enclave_public_key\");", "originalCommit": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e5217392906e3e6615a02da7ceda8659b5438eb", "chunk": "diff --git a/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java b/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java\nindex a93eb4f90d..5d0d7c566b 100644\n--- a/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java\n+++ b/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java\n\n@@ -414,7 +413,7 @@ public class SubscriptionRequestMapperTest {\n     thrown.expectMessage(\"Invalid subscribe request. Invalid private subscription type.\");\n \n     mapper.mapPrivateSubscribeRequest(\n-        new JsonRpcRequestContext(jsonRpcRequest), \"enclave_public_key\");\n+        new JsonRpcRequestContext(jsonRpcRequest), ENCLAVE_PUBLIC_KEY);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDUwNg==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480480506", "bodyText": "Do you need to handle the same race condition as filters (eg user removed from group but then in the same block requests to create a new subscription) - which we solved by storing the private tx events until the block was processed.", "author": "macfarla", "createdAt": "2020-08-31T23:58:42Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "diffHunk": "@@ -158,4 +161,20 @@ public void sendMessage(final Long subscriptionId, final JsonRpcResult msg) {\n           }\n         });\n   }\n+\n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    // When a user is removed from a privacy group, remove all subscriptions from that user to that\n+    // group\n+    subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()", "originalCommit": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExMzcwNA==", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r482113704", "bodyText": "PR updated to address this.", "author": "mark-terry", "createdAt": "2020-09-02T14:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDUwNg=="}], "type": "inlineReview", "revised_code": {"commit": "2e5217392906e3e6615a02da7ceda8659b5438eb", "chunk": "diff --git a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java\nindex 2444cc9eb0..992ae42dc2 100644\n--- a/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java\n+++ b/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java\n\n@@ -164,6 +173,14 @@ public class SubscriptionManager extends AbstractVerticle implements PrivateTran\n \n   @Override\n   public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    privateTransactionEvents.add(event);\n+  }\n+\n+  void onBlockAdded() {\n+    privateTransactionEvents.forEach(this::processPrivateTransactionEvents);\n+  }\n+\n+  private void processPrivateTransactionEvents(final PrivateTransactionEvent event) {\n     // When a user is removed from a privacy group, remove all subscriptions from that user to that\n     // group\n     subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()\n"}}, {"oid": "2e5217392906e3e6615a02da7ceda8659b5438eb", "url": "https://github.com/hyperledger/besu/commit/2e5217392906e3e6615a02da7ceda8659b5438eb", "message": "PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>", "committedDate": "2020-09-02T14:27:56Z", "type": "commit"}, {"oid": "17d7989b63fcfde254deab694339ecf32e2e684f", "url": "https://github.com/hyperledger/besu/commit/17d7989b63fcfde254deab694339ecf32e2e684f", "message": "Merge branch 'master' into 884", "committedDate": "2020-09-02T14:29:01Z", "type": "commit"}, {"oid": "4688000cb5e7e062fb04fab09eda66d3e74fb832", "url": "https://github.com/hyperledger/besu/commit/4688000cb5e7e062fb04fab09eda66d3e74fb832", "message": "Merge branch 'master' into 884", "committedDate": "2020-09-10T11:01:46Z", "type": "commit"}]}