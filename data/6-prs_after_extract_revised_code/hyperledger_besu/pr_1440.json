{"pr_number": 1440, "pr_title": "Allow Random Peer Prioritization", "pr_createdAt": "2020-10-09T14:42:10Z", "pr_url": "https://github.com/hyperledger/besu/pull/1440", "timeline": [{"oid": "bfee4cb7ab51fe7fa81ed0d36696b9b36a918961", "url": "https://github.com/hyperledger/besu/commit/bfee4cb7ab51fe7fa81ed0d36696b9b36a918961", "message": "wip\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "ddd099dac3e442549478d68ac048c28f387d5e5a", "url": "https://github.com/hyperledger/besu/commit/ddd099dac3e442549478d68ac048c28f387d5e5a", "message": "add new prioritization to RlpxAgent\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "b1d900a37801224bed0b738b316311f28dff3051", "url": "https://github.com/hyperledger/besu/commit/b1d900a37801224bed0b738b316311f28dff3051", "message": "threading command line flags\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "fd0a8d892249b62d262ebba29c50734bff96bc71", "url": "https://github.com/hyperledger/besu/commit/fd0a8d892249b62d262ebba29c50734bff96bc71", "message": "test\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "f8babcf2c5581e148565ff6871ae20e85c97bf99", "url": "https://github.com/hyperledger/besu/commit/f8babcf2c5581e148565ff6871ae20e85c97bf99", "message": "don't prematurely reject the possibility of connection if we randomly prioritize peers\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "0128d91dc8d158e5fb05abb788449ef8ed674302", "url": "https://github.com/hyperledger/besu/commit/0128d91dc8d158e5fb05abb788449ef8ed674302", "message": "more concise assertion\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "940aad77336dbcee043b8a30c22a9671ebca2f83", "url": "https://github.com/hyperledger/besu/commit/940aad77336dbcee043b8a30c22a9671ebca2f83", "message": "make sure we see failures as well\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "b8b5e2ca9ed99d10c8c9eea94f4fad55518c7313", "url": "https://github.com/hyperledger/besu/commit/b8b5e2ca9ed99d10c8c9eea94f4fad55518c7313", "message": "make mask number not magic\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "286657d6cee8fe597f801bd8b2ef0023c529cd1c", "url": "https://github.com/hyperledger/besu/commit/286657d6cee8fe597f801bd8b2ef0023c529cd1c", "message": "new test\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "6f6bc080f1e47294336e655703e1951485a71384", "url": "https://github.com/hyperledger/besu/commit/6f6bc080f1e47294336e655703e1951485a71384", "message": "typo\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "f85371fbe122b74410bb7c99011b4bc1434ddc33", "url": "https://github.com/hyperledger/besu/commit/f85371fbe122b74410bb7c99011b4bc1434ddc33", "message": "flag info\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "2319f4bfa81cb4eb25b44588b4f0cf08ba19cae5", "url": "https://github.com/hyperledger/besu/commit/2319f4bfa81cb4eb25b44588b4f0cf08ba19cae5", "message": "command line and rename\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "161bc6c3977b48ed7f212ad8d4a58f840cd8f517", "url": "https://github.com/hyperledger/besu/commit/161bc6c3977b48ed7f212ad8d4a58f840cd8f517", "message": "support peer limit exemptions\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "5ed18c6fc44c0aa840ad57cbbc1e606968a1edd0", "url": "https://github.com/hyperledger/besu/commit/5ed18c6fc44c0aa840ad57cbbc1e606968a1edd0", "message": "fix command line\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "25fa752a52dabd3049eb78641b7adf6836cb1801", "url": "https://github.com/hyperledger/besu/commit/25fa752a52dabd3049eb78641b7adf6836cb1801", "message": "error prone\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "75b1b7e3f09adc103c84878b8d34e2bab10c6a7a", "url": "https://github.com/hyperledger/besu/commit/75b1b7e3f09adc103c84878b8d34e2bab10c6a7a", "message": "fix NullPointerException\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:31:20Z", "type": "commit"}, {"oid": "09cbfbfc84a27c8c357eade9c94d50862d122702", "url": "https://github.com/hyperledger/besu/commit/09cbfbfc84a27c8c357eade9c94d50862d122702", "message": "changelog\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-09T14:44:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3MjI5NQ==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r502672295", "bodyText": "I'd add some commentary about the purpose.  Something about the scope (per agent) and purpose (to thwart external gaming of the random comparison).", "author": "shemnon", "createdAt": "2020-10-09T21:09:22Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java", "diffHunk": "@@ -67,7 +68,9 @@\n   private final PeerRlpxPermissions peerPermissions;\n   private final PeerPrivileges peerPrivileges;\n   private final int maxConnections;\n+  private final boolean randomPeerPriority;\n   private final int maxRemotelyInitiatedConnections;\n+  private final Bytes nodeIdMask = Bytes.random(SECP256K1.PublicKey.BYTE_LENGTH);", "originalCommit": "09cbfbfc84a27c8c357eade9c94d50862d122702", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ea9e7f9e1dd68dc429bb43e76a76fc23898e124", "chunk": "diff --git a/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java b/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java\nindex 61e72dc99..3c120738d 100644\n--- a/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java\n+++ b/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java\n\n@@ -70,6 +70,8 @@ public class RlpxAgent {\n   private final int maxConnections;\n   private final boolean randomPeerPriority;\n   private final int maxRemotelyInitiatedConnections;\n+  // xor'ing with this mask will allow us to randomly let new peers connect\n+  // without allowing the counterparty to play nodeId farming games\n   private final Bytes nodeIdMask = Bytes.random(SECP256K1.PublicKey.BYTE_LENGTH);\n \n   @VisibleForTesting final Map<Bytes, RlpxConnection> connectionsById = new ConcurrentHashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3Mjc5MA==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r502672790", "bodyText": "Randomly feels like the wrong name.  While the mask is random once it's set it doesn't change. compareByMaskedNodeId?", "author": "shemnon", "createdAt": "2020-10-09T21:10:39Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java", "diffHunk": "@@ -463,21 +471,29 @@ private void enforceConnectionLimits() {\n   private Stream<RlpxConnection> getActivePrioritizedConnections() {\n     return connectionsById.values().stream()\n         .filter(RlpxConnection::isActive)\n-        .sorted(this::prioritizeConnections);\n+        .sorted(this::comparePeerPriorities);\n   }\n \n-  private int prioritizeConnections(final RlpxConnection a, final RlpxConnection b) {\n+  private int comparePeerPriorities(final RlpxConnection a, final RlpxConnection b) {\n     final boolean aIgnoresPeerLimits = peerPrivileges.canExceedConnectionLimits(a.getPeer());\n     final boolean bIgnoresPeerLimits = peerPrivileges.canExceedConnectionLimits(b.getPeer());\n     if (aIgnoresPeerLimits && !bIgnoresPeerLimits) {\n       return -1;\n     } else if (bIgnoresPeerLimits && !aIgnoresPeerLimits) {\n       return 1;\n     } else {\n-      return Math.toIntExact(a.getInitiatedAt() - b.getInitiatedAt());\n+      return randomPeerPriority ? compareRandomly(a, b) : compareConnectionInitiationTimes(a, b);\n     }\n   }\n \n+  private int compareConnectionInitiationTimes(final RlpxConnection a, final RlpxConnection b) {\n+    return Math.toIntExact(a.getInitiatedAt() - b.getInitiatedAt());\n+  }\n+\n+  private int compareRandomly(final RlpxConnection a, final RlpxConnection b) {", "originalCommit": "09cbfbfc84a27c8c357eade9c94d50862d122702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDUzNA==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r503350534", "bodyText": "Yeah, I felt similarly when writing it. I like your suggestion.", "author": "RatanRSur", "createdAt": "2020-10-12T14:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3Mjc5MA=="}], "type": "inlineReview", "revised_code": {"commit": "11b1221309104f4136d5f664e919f4876a4ad878", "chunk": "diff --git a/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java b/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java\nindex 61e72dc99..18dcdb466 100644\n--- a/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java\n+++ b/ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgent.java\n\n@@ -482,7 +484,9 @@ public class RlpxAgent {\n     } else if (bIgnoresPeerLimits && !aIgnoresPeerLimits) {\n       return 1;\n     } else {\n-      return randomPeerPriority ? compareRandomly(a, b) : compareConnectionInitiationTimes(a, b);\n+      return randomPeerPriority\n+          ? compareByMaskedNodeId(a, b)\n+          : compareConnectionInitiationTimes(a, b);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDMzOA==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r502674338", "bodyText": "Perhaps we should white box this test.\nGo ahead and set up the pool and the peer randomly, but then get the peer that would be evicted (sorted last), then generate peers until we get one that we see is higher priority than the one to be evicted, and then only once do the add check loop.  We would need to get at the peers list and the nodeIdMask to do this, hence the white boxing.", "author": "shemnon", "createdAt": "2020-10-09T21:15:07Z", "path": "ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgentTest.java", "diffHunk": "@@ -321,6 +323,41 @@ public void incomingConnection_maxPeersExceeded()\n     }\n   }\n \n+  @Test\n+  public void incomingConnection_succeedsEventuallyWithRandomPeerPrioritization() {\n+    // Saturate connections with one local and one remote\n+    startAgentWithMaxPeers(2, builder -> builder.randomPeerPriority(true));\n+    agent.connect(createPeer());\n+    connectionInitializer.simulateIncomingConnection(connection(createPeer()));\n+    // Sanity check\n+    assertThat(agent.getConnectionCount()).isEqualTo(2);\n+\n+    boolean newConnectionDisconnected = false;\n+    boolean oldConnectionDisconnected = false;\n+    // With very high probability we should see the connections churn\n+    for (int i = 0; i < 1000; ++i) {", "originalCommit": "09cbfbfc84a27c8c357eade9c94d50862d122702", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDg3NA==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r502674874", "bodyText": "We also need a test case where the new node doesn't get added because it's going to sort below all the other nodes.  So we need another test with the same white box setup but instead we search for a node that will rank below all other nodes.", "author": "shemnon", "createdAt": "2020-10-09T21:16:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2Mzg3Nw==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r503363877", "bodyText": "Is the only reason to make the test deterministic?", "author": "RatanRSur", "createdAt": "2020-10-12T15:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3MTI2OA==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r503371268", "bodyText": "If that's the only benefit, I think I prefer black boxing it because I've run into a lot of problems with changing code that has very whiteboxed testing in p2p. With the number of iterations we do here and the number of remote connections (1), this is an intermittent test with a very very low probability of failing.", "author": "RatanRSur", "createdAt": "2020-10-12T15:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxNjUwOQ==", "url": "https://github.com/hyperledger/besu/pull/1440#discussion_r503416509", "bodyText": "If we are going to black box it we still need to detect connection accepted and connection rejected.", "author": "shemnon", "createdAt": "2020-10-12T16:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3NDMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "d7eb1f228852c52044f22d6dee34e2521934c614", "chunk": "diff --git a/ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgentTest.java b/ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgentTest.java\nindex 3ea003a35..585293c7d 100644\n--- a/ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgentTest.java\n+++ b/ethereum/p2p/src/test/java/org/hyperledger/besu/ethereum/p2p/rlpx/RlpxAgentTest.java\n\n@@ -335,7 +335,7 @@ public class RlpxAgentTest {\n     boolean newConnectionDisconnected = false;\n     boolean oldConnectionDisconnected = false;\n     // With very high probability we should see the connections churn\n-    for (int i = 0; i < 1000; ++i) {\n+    for (int i = 0; i < 1000 && !(newConnectionDisconnected && oldConnectionDisconnected); ++i) {\n       final List<PeerConnection> connectionsBefore =\n           agent.streamConnections().collect(Collectors.toUnmodifiableList());\n \n"}}, {"oid": "3ea9e7f9e1dd68dc429bb43e76a76fc23898e124", "url": "https://github.com/hyperledger/besu/commit/3ea9e7f9e1dd68dc429bb43e76a76fc23898e124", "message": "comment\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-12T15:02:45Z", "type": "commit"}, {"oid": "11b1221309104f4136d5f664e919f4876a4ad878", "url": "https://github.com/hyperledger/besu/commit/11b1221309104f4136d5f664e919f4876a4ad878", "message": "rename\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-12T15:03:59Z", "type": "commit"}, {"oid": "8c75717c1f67b921d39419179ac05daf3dfa3be2", "url": "https://github.com/hyperledger/besu/commit/8c75717c1f67b921d39419179ac05daf3dfa3be2", "message": "Merge remote-tracking branch 'upstream/master' into accomodating-peering", "committedDate": "2020-10-12T15:09:25Z", "type": "commit"}, {"oid": "d7eb1f228852c52044f22d6dee34e2521934c614", "url": "https://github.com/hyperledger/besu/commit/d7eb1f228852c52044f22d6dee34e2521934c614", "message": "early exit\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-12T17:27:56Z", "type": "commit"}, {"oid": "dd73c977cd462a6b529c75783ad9f7aae6e8b902", "url": "https://github.com/hyperledger/besu/commit/dd73c977cd462a6b529c75783ad9f7aae6e8b902", "message": "test every loop\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-12T17:28:05Z", "type": "commit"}, {"oid": "3f1e3823d0aec5ff61f22f9a6f9c4c4e8b42939e", "url": "https://github.com/hyperledger/besu/commit/3f1e3823d0aec5ff61f22f9a6f9c4c4e8b42939e", "message": "use 25 peers instead of 2\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>", "committedDate": "2020-10-12T18:19:11Z", "type": "commit"}]}