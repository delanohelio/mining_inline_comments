{"pr_number": 1095, "pr_title": "JSON RPC: Add permissioning account \"allowlist\" methods", "pr_createdAt": "2020-06-17T04:42:42Z", "pr_url": "https://github.com/hyperledger/besu/pull/1095", "timeline": [{"oid": "cc189d35a6f771a5878148f4aa95424b3c95c798", "url": "https://github.com/hyperledger/besu/commit/cc189d35a6f771a5878148f4aa95424b3c95c798", "message": "add alternate account allowlist RPC endpoints\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T04:39:10Z", "type": "commit"}, {"oid": "bb4e9abc399ae900d71b9da28a33045f312c9fd4", "url": "https://github.com/hyperledger/besu/commit/bb4e9abc399ae900d71b9da28a33045f312c9fd4", "message": "update rpc names in AT\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T04:50:17Z", "type": "commit"}, {"oid": "41c0c10939f70e777f22650aabebc9badbab9d85", "url": "https://github.com/hyperledger/besu/commit/41c0c10939f70e777f22650aabebc9badbab9d85", "message": "added changelog entries for whitelist -> allowlist changes\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T05:00:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4NTE0OQ==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441285149", "bodyText": "Error name.", "author": "mark-terry", "createdAt": "2020-06-17T05:15:35Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlist.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+\n+import java.util.Optional;\n+\n+public class PermGetAccountsAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<AccountLocalConfigPermissioningController> whitelistController;\n+\n+  public PermGetAccountsAllowlist(\n+      final Optional<AccountLocalConfigPermissioningController> whitelistController) {\n+    this.whitelistController = whitelistController;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.PERM_GET_ACCOUNTS_ALLOWLIST.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    if (whitelistController.isPresent()) {\n+      return new JsonRpcSuccessResponse(\n+          requestContext.getRequest().getId(), whitelistController.get().getAccountWhitelist());\n+    } else {\n+      return new JsonRpcErrorResponse(\n+          requestContext.getRequest().getId(), JsonRpcError.ACCOUNT_WHITELIST_NOT_ENABLED);", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4NTE5Mg==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441285192", "bodyText": "Param name.", "author": "mark-terry", "createdAt": "2020-06-17T05:15:46Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlist.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+\n+import java.util.Optional;\n+\n+public class PermGetAccountsAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<AccountLocalConfigPermissioningController> whitelistController;\n+\n+  public PermGetAccountsAllowlist(\n+      final Optional<AccountLocalConfigPermissioningController> whitelistController) {", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4NTIyNg==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441285226", "bodyText": "Variable name.", "author": "mark-terry", "createdAt": "2020-06-17T05:15:51Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlist.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+\n+import java.util.Optional;\n+\n+public class PermGetAccountsAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<AccountLocalConfigPermissioningController> whitelistController;", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4OTA1OA==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441289058", "bodyText": "Variable name", "author": "mark-terry", "createdAt": "2020-06-17T05:29:57Z", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddAccountsToAllowlistTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.when;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequest;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.exception.InvalidJsonRpcParameters;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+import org.hyperledger.besu.ethereum.permissioning.AllowlistOperationResult;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class PermAddAccountsToAllowlistTest {\n+\n+  @Mock private AccountLocalConfigPermissioningController accountWhitelist;", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4OTQyOA==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441289428", "bodyText": "Variable name.", "author": "mark-terry", "createdAt": "2020-06-17T05:31:18Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddAccountsToAllowlist.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+import org.hyperledger.besu.ethereum.permissioning.AllowlistOperationResult;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class PermAddAccountsToAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<AccountLocalConfigPermissioningController> whitelistController;", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4OTQ2Mg==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441289462", "bodyText": "Param name.", "author": "mark-terry", "createdAt": "2020-06-17T05:31:27Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddAccountsToAllowlist.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+import org.hyperledger.besu.ethereum.permissioning.AllowlistOperationResult;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class PermAddAccountsToAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<AccountLocalConfigPermissioningController> whitelistController;\n+\n+  public PermAddAccountsToAllowlist(\n+      final Optional<AccountLocalConfigPermissioningController> whitelistController) {", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4OTYwNw==", "url": "https://github.com/hyperledger/besu/pull/1095#discussion_r441289607", "bodyText": "Import", "author": "mark-terry", "createdAt": "2020-06-17T05:32:05Z", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromWhitelistTest.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.when;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequest;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.exception.InvalidJsonRpcParameters;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.permissioning.AccountLocalConfigPermissioningController;\n+import org.hyperledger.besu.ethereum.permissioning.AllowlistOperationResult;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@Deprecated\n+@RunWith(MockitoJUnitRunner.class)\n+public class PermRemoveAccountsFromWhitelistTest {\n+\n+  @Mock private AccountLocalConfigPermissioningController accountWhitelist;\n+  private PermRemoveAccountsFromAllowlist method;\n+\n+  @Before\n+  public void before() {\n+    method = new PermRemoveAccountsFromAllowlist(java.util.Optional.of(accountWhitelist));", "originalCommit": "41c0c10939f70e777f22650aabebc9badbab9d85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "16518c8c914a56a50a805c1271d5d03cf1d995ae", "chunk": "diff --git a/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromWhitelistTest.java b/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromWhitelistTest.java\nindex 919db11b7..a4e7bf25f 100644\n--- a/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromWhitelistTest.java\n+++ b/ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromWhitelistTest.java\n\n@@ -45,11 +45,11 @@ import org.mockito.junit.MockitoJUnitRunner;\n public class PermRemoveAccountsFromWhitelistTest {\n \n   @Mock private AccountLocalConfigPermissioningController accountWhitelist;\n-  private PermRemoveAccountsFromAllowlist method;\n+  private PermRemoveAccountsFromWhitelist method;\n \n   @Before\n   public void before() {\n-    method = new PermRemoveAccountsFromAllowlist(java.util.Optional.of(accountWhitelist));\n+    method = new PermRemoveAccountsFromWhitelist(java.util.Optional.of(accountWhitelist));\n   }\n \n   @Test\n"}}, {"oid": "16518c8c914a56a50a805c1271d5d03cf1d995ae", "url": "https://github.com/hyperledger/besu/commit/16518c8c914a56a50a805c1271d5d03cf1d995ae", "message": "fixed test\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>", "committedDate": "2020-06-17T07:32:18Z", "type": "commit"}, {"oid": "e905c70091eb9947608e98590817fdc10c1857ed", "url": "https://github.com/hyperledger/besu/commit/e905c70091eb9947608e98590817fdc10c1857ed", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into whitelist-perm-rpc-account", "committedDate": "2020-06-17T07:34:20Z", "type": "commit"}]}