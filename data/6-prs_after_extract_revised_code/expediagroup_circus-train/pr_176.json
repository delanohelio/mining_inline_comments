{"pr_number": 176, "pr_title": "Assume role auto refreshing", "pr_createdAt": "2020-03-13T16:58:46Z", "pr_url": "https://github.com/ExpediaGroup/circus-train/pull/176", "timeline": [{"oid": "bb70d85f401ef3f9871e0846828529cb6b5c6438", "url": "https://github.com/ExpediaGroup/circus-train/commit/bb70d85f401ef3f9871e0846828529cb6b5c6438", "message": "testing s3 copier assume-role issues", "committedDate": "2020-03-05T22:43:14Z", "type": "commit"}, {"oid": "ce0f2a1dffe03829cef71e1a961b97f55efc72fe", "url": "https://github.com/ExpediaGroup/circus-train/commit/ce0f2a1dffe03829cef71e1a961b97f55efc72fe", "message": "refactor s3 retry logic to be job based vs all or nothing. This should catch errors sooner", "committedDate": "2020-03-09T17:30:03Z", "type": "commit"}, {"oid": "bb76993aa15b8bc598e1894f968d39fa39394e46", "url": "https://github.com/ExpediaGroup/circus-train/commit/bb76993aa15b8bc598e1894f968d39fa39394e46", "message": "defensive coding against cred failure", "committedDate": "2020-03-09T17:36:33Z", "type": "commit"}, {"oid": "2f988f373fab0bb657bd0b8bb2dd29805e771838", "url": "https://github.com/ExpediaGroup/circus-train/commit/2f988f373fab0bb657bd0b8bb2dd29805e771838", "message": "revert some code", "committedDate": "2020-03-09T18:15:54Z", "type": "commit"}, {"oid": "966b6cf20546537ee84ad99146e305732093cc09", "url": "https://github.com/ExpediaGroup/circus-train/commit/966b6cf20546537ee84ad99146e305732093cc09", "message": "update log comments", "committedDate": "2020-03-09T18:18:43Z", "type": "commit"}, {"oid": "085740a991b10d682c93d558ccd985c664a7ee63", "url": "https://github.com/ExpediaGroup/circus-train/commit/085740a991b10d682c93d558ccd985c664a7ee63", "message": "revert whitespace", "committedDate": "2020-03-09T18:20:04Z", "type": "commit"}, {"oid": "ad63df289ccf31bbae3e45f0fe7fe9320e481c92", "url": "https://github.com/ExpediaGroup/circus-train/commit/ad63df289ccf31bbae3e45f0fe7fe9320e481c92", "message": "set to minimum duration", "committedDate": "2020-03-09T18:24:59Z", "type": "commit"}, {"oid": "f620ce60f399cc9e8042edb6edb5a2d2d64b18f0", "url": "https://github.com/ExpediaGroup/circus-train/commit/f620ce60f399cc9e8042edb6edb5a2d2d64b18f0", "message": "wip", "committedDate": "2020-03-09T22:02:33Z", "type": "commit"}, {"oid": "001cd306bb49e0c4f63e905666475bbd2d6bd74f", "url": "https://github.com/ExpediaGroup/circus-train/commit/001cd306bb49e0c4f63e905666475bbd2d6bd74f", "message": "debugging wip", "committedDate": "2020-03-11T16:09:30Z", "type": "commit"}, {"oid": "9bd36e7c466856ff33492848b05d7e272ff3cce6", "url": "https://github.com/ExpediaGroup/circus-train/commit/9bd36e7c466856ff33492848b05d7e272ff3cce6", "message": "optimize some threadpooling logic", "committedDate": "2020-03-11T22:14:31Z", "type": "commit"}, {"oid": "50279ff0eb8c2ec7a3f665509eee9256154d2eec", "url": "https://github.com/ExpediaGroup/circus-train/commit/50279ff0eb8c2ec7a3f665509eee9256154d2eec", "message": "update readme & changelog", "committedDate": "2020-03-12T21:38:28Z", "type": "commit"}, {"oid": "a4abfa2fd36a15b8493c230a5686d834327f409d", "url": "https://github.com/ExpediaGroup/circus-train/commit/a4abfa2fd36a15b8493c230a5686d834327f409d", "message": "add transfermanagerFactoryTest", "committedDate": "2020-03-12T22:39:56Z", "type": "commit"}, {"oid": "e8454abc8598f24e2a7e682da8ea0eed2f8db236", "url": "https://github.com/ExpediaGroup/circus-train/commit/e8454abc8598f24e2a7e682da8ea0eed2f8db236", "message": "reset untouched files", "committedDate": "2020-03-12T22:42:05Z", "type": "commit"}, {"oid": "df860e16c709278b091bec93d7b99119f376f6f5", "url": "https://github.com/ExpediaGroup/circus-train/commit/df860e16c709278b091bec93d7b99119f376f6f5", "message": "fix the nits", "committedDate": "2020-03-13T14:54:24Z", "type": "commit"}, {"oid": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "url": "https://github.com/ExpediaGroup/circus-train/commit/6b7356b0958d6ec301ced55981b6811b0d2b53f5", "message": "default_max_thread_pool -> default_thread_pool_max", "committedDate": "2020-03-13T15:01:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjQ2Nw==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392366467", "bodyText": "As per @massdosage\n\nMove this to line 42, there's no point getting the duration if this is going to fail.", "author": "KenFigueiredo", "createdAt": "2020-03-13T17:20:59Z", "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);", "originalCommit": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18bb02c80e71996b5198376c0b6e5aa038efd7c0", "chunk": "diff --git a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\nindex 4cac011..4c222b9 100644\n--- a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n+++ b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n\n@@ -58,7 +58,6 @@ public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n     if (this.credProvider == null) {\n       initializeCredProvider();\n     }\n-\n     return this.credProvider.getCredentials();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjczMA==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392366730", "bodyText": "As per @massdosage\n\nI'm a bit confused why there are so many other changes to this class when the only change I can really see that is necessary is making this value configurable instead of a hardcoded value?", "author": "KenFigueiredo", "createdAt": "2020-03-13T17:21:28Z", "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n+\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);\n+\n+    // STSAssumeRoleSessionCredentialsProvider should auto refresh its creds in the background.\n+    this.credProvider = new STSAssumeRoleSessionCredentialsProvider\n+        .Builder(roleArn, \"ct-assume-role-session\")\n+        .withRoleSessionDurationSeconds(credDuration)", "originalCommit": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM3NjYxMg==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392376612", "bodyText": "So it's two changes to resolve this issue:\n\nMake the assume role time configurable to allow roles that have shorter assume durations than 12 hours\nDon't cache the credential in our AssumeRoleCredentialProvider. The issue being that we we're holding the token and never refreshing it. If we had a replication that lasted more than 12 hours we'd start failing with expiredToken errors from AWS", "author": "KenFigueiredo", "createdAt": "2020-03-13T17:39:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5Mjg1MA==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392392850", "bodyText": "To expand on that, Ken's changes now enable STSAssumeRoleSessionCredentialsProvider's built-in refresher background thread, so that the user of this class doesn't have to worry about calling refresh manually before the duration times out.", "author": "barnharts4", "createdAt": "2020-03-13T18:12:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NjQwOA==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392956408", "bodyText": "OK, thanks for the further explanation, makes sense.", "author": "massdosage", "createdAt": "2020-03-16T11:39:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjczMA=="}], "type": "inlineReview", "revised_code": {"commit": "18bb02c80e71996b5198376c0b6e5aa038efd7c0", "chunk": "diff --git a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\nindex 4cac011..4c222b9 100644\n--- a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n+++ b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n\n@@ -58,7 +58,6 @@ public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n     if (this.credProvider == null) {\n       initializeCredProvider();\n     }\n-\n     return this.credProvider.getCredentials();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzI5Mg==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392367292", "bodyText": "As per @massdosage\n\nSuggestion:\nprivate STSAssumeRoleSessionCredentialsProvider credentialsProvider;", "author": "KenFigueiredo", "createdAt": "2020-03-13T17:22:27Z", "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;", "originalCommit": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18bb02c80e71996b5198376c0b6e5aa038efd7c0", "chunk": "diff --git a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\nindex 4cac011..4c222b9 100644\n--- a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n+++ b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n\n@@ -58,7 +58,6 @@ public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n     if (this.credProvider == null) {\n       initializeCredProvider();\n     }\n-\n     return this.credProvider.getCredentials();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NzU4MA==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392367580", "bodyText": "As per @massdosage\n\nSuggestion:\nprivate void initializeCredentialProvider() {", "author": "KenFigueiredo", "createdAt": "2020-03-13T17:23:00Z", "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,59 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredProvider() {", "originalCommit": "6b7356b0958d6ec301ced55981b6811b0d2b53f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18bb02c80e71996b5198376c0b6e5aa038efd7c0", "chunk": "diff --git a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\nindex 4cac011..4c222b9 100644\n--- a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n+++ b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n\n@@ -58,7 +58,6 @@ public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n     if (this.credProvider == null) {\n       initializeCredProvider();\n     }\n-\n     return this.credProvider.getCredentials();\n   }\n \n"}}, {"oid": "a374217e0d6e6189674ce9e66bb336994e0d397e", "url": "https://github.com/ExpediaGroup/circus-train/commit/a374217e0d6e6189674ce9e66bb336994e0d397e", "message": "cherrypick changes", "committedDate": "2020-03-13T17:26:30Z", "type": "commit"}, {"oid": "c39d4c482f683dcc00e17d3bdd0e6da5e192f9c7", "url": "https://github.com/ExpediaGroup/circus-train/commit/c39d4c482f683dcc00e17d3bdd0e6da5e192f9c7", "message": "cherrypick copier options", "committedDate": "2020-03-13T17:27:35Z", "type": "commit"}, {"oid": "18bb02c80e71996b5198376c0b6e5aa038efd7c0", "url": "https://github.com/ExpediaGroup/circus-train/commit/18bb02c80e71996b5198376c0b6e5aa038efd7c0", "message": "whitespace removals", "committedDate": "2020-03-13T17:30:32Z", "type": "commit"}, {"oid": "896bf6889a2d32e275508e813424f2690ac69177", "url": "https://github.com/ExpediaGroup/circus-train/commit/896bf6889a2d32e275508e813424f2690ac69177", "message": "update as per review comments", "committedDate": "2020-03-13T17:35:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NTY4Mg==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392955682", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n          \n          \n            \n              public static final String ASSUME_ROLE_SESSION_DURATION_SECONDS_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleSessionDurationSeconds\";\n          \n      \n    \n    \n  \n\netc...", "author": "massdosage", "createdAt": "2020-03-16T11:38:32Z", "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,58 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";", "originalCommit": "896bf6889a2d32e275508e813424f2690ac69177", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8f065b473161b7aeb646acdaadb531a214284a3", "chunk": "diff --git a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\nindex bfa9e10..323bc5c 100644\n--- a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n+++ b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n\n@@ -29,7 +29,7 @@ import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  public static final String ASSUME_ROLE_SESSION_DURATION_SECONDS_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleSessionDurationSeconds\";\n   private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n   private final Configuration conf;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1NjAyOA==", "url": "https://github.com/ExpediaGroup/circus-train/pull/176#discussion_r392956028", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);\n          \n          \n            \n                int rollSessionDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);", "author": "massdosage", "createdAt": "2020-03-16T11:39:10Z", "path": "circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java", "diffHunk": "@@ -16,45 +16,58 @@\n package com.hotels.bdp.circustrain.aws;\n \n import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.conf.Configuration;\n \n import com.amazonaws.auth.AWSCredentials;\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n-import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider.Builder;\n \n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  private static final int CREDENTIALS_DURATION = 12 * 60 * 60; // max duration in seconds for assumed role credentials\n+  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n-  private AWSCredentials credentials;\n   private final Configuration conf;\n+  private STSAssumeRoleSessionCredentialsProvider credentialsProvider;\n \n   public AssumeRoleCredentialProvider(Configuration conf) {\n     this.conf = conf;\n   }\n \n+  private void initializeCredentialProvider() {\n+    String roleArn = conf.get(ASSUME_ROLE_PROPERTY_NAME);\n+    checkArgument(StringUtils.isNotEmpty(roleArn),\n+        \"Role ARN must not be empty, please set: \" + ASSUME_ROLE_PROPERTY_NAME);\n+\n+    int credDuration = conf.getInt(ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME, DEFAULT_CREDENTIALS_DURATION);", "originalCommit": "896bf6889a2d32e275508e813424f2690ac69177", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8f065b473161b7aeb646acdaadb531a214284a3", "chunk": "diff --git a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\nindex bfa9e10..323bc5c 100644\n--- a/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n+++ b/circus-train-aws/src/main/java/com/hotels/bdp/circustrain/aws/AssumeRoleCredentialProvider.java\n\n@@ -29,7 +29,7 @@ import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;\n public class AssumeRoleCredentialProvider implements AWSCredentialsProvider {\n \n   public static final String ASSUME_ROLE_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRole\";\n-  public static final String ASSUME_ROLE_CREDENTIAL_DURATION_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleCredentialDuration\";\n+  public static final String ASSUME_ROLE_SESSION_DURATION_SECONDS_PROPERTY_NAME = \"com.hotels.bdp.circustrain.aws.AssumeRoleCredentialProvider.assumeRoleSessionDurationSeconds\";\n   private static final int DEFAULT_CREDENTIALS_DURATION = (int) TimeUnit.HOURS.toSeconds(12); // max duration in seconds for assumed role credentials\n \n   private final Configuration conf;\n"}}, {"oid": "3d10caf3f1351e71bb3acb0bfe6f41ce52a0f8bf", "url": "https://github.com/ExpediaGroup/circus-train/commit/3d10caf3f1351e71bb3acb0bfe6f41ce52a0f8bf", "message": "remove missed cherrypick maxthreadpool from readme", "committedDate": "2020-03-16T13:49:56Z", "type": "commit"}, {"oid": "e14b630a866b9fe1d4d02305d78b37bd412048ee", "url": "https://github.com/ExpediaGroup/circus-train/commit/e14b630a866b9fe1d4d02305d78b37bd412048ee", "message": "Apply suggestions from code review\n\nCo-Authored-By: Adrian Woodhead <massdosage@gmail.com>", "committedDate": "2020-03-16T13:52:06Z", "type": "commit"}, {"oid": "f8f065b473161b7aeb646acdaadb531a214284a3", "url": "https://github.com/ExpediaGroup/circus-train/commit/f8f065b473161b7aeb646acdaadb531a214284a3", "message": "Apply suggestions from code review\n\nCo-Authored-By: Adrian Woodhead <massdosage@gmail.com>", "committedDate": "2020-03-16T13:52:26Z", "type": "commit"}, {"oid": "64b5950e2ee7852c020ced2a2014d92024ea9ab0", "url": "https://github.com/ExpediaGroup/circus-train/commit/64b5950e2ee7852c020ced2a2014d92024ea9ab0", "message": "finish rename of credential duration property", "committedDate": "2020-03-16T13:59:48Z", "type": "commit"}]}