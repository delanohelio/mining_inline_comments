{"pr_number": 244, "pr_title": "[issue #242] cache invalidation when server center is down in a while of time ", "pr_createdAt": "2020-08-04T07:02:58Z", "pr_url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/244", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg2NzQwNA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/244#discussion_r464867404", "bodyText": "\u8fd9\u4e2a\u63a5\u53e3\u7684\u8bed\u4e49\u6709\u70b9\u590d\u6742\uff0c\u8fd4\u56de\u503c\u7684\u8bed\u4e49\u4e0d\u6e05\u6670\u3002\u62ff\u8fd4\u56denull\u4e3a\u4f8b\uff1a\u51fa\u73b0\u5f02\u5e38\u7684\u65f6\u5019\u8fd4\u56denull\uff08\u8fd8\u6709\u53ef\u80fd\u629b\u51fa ServiceCombException\uff09\uff0c\u5b9e\u4f8b\u672a\u53d8\u5316\u8fd4\u56denull\u3002\n\u4f1a\u5bfc\u81f4\u4e0d\u5bb9\u6613\u53d1\u73b0\u7684\u9519\u8bef\u3002 \u5efa\u8bae\u8865\u5145\u6ce8\u91ca\u660e\u786e\u4e0b\u63a5\u53e3\u8bed\u4e49\uff0c\u6216\u8005\u770b\u770b\u80fd\u5426\u628a\u76f8\u5173\u4ee3\u7801\u91cd\u6784\u4e0b\uff0c\u4fdd\u8bc1\u8bed\u4e49\u6e05\u6670\u3002", "author": "liubao68", "createdAt": "2020-08-04T07:54:12Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -368,12 +368,13 @@ public boolean deRegisterInstance(String serviceId, String instanceId)\n             \"read response failed. status:\" + response.getStatusCode() + \"; message:\" + response\n                 .getStatusMessage() + \"; content:\" + response.getContent());\n       }\n+      return instanceList;", "originalCommit": "b154d678665ad1718990c2791ed3a01f901e8523", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NzgxMg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/244#discussion_r465567812", "bodyText": "\u5f02\u5e38\u5904\u7406\u5c01\u88c5\u5728\u65b9\u6cd5\u5185\uff0c\u589e\u52a0\u4e86\u6ce8\u91ca", "author": "GuoYL123", "createdAt": "2020-08-05T08:39:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg2NzQwNA=="}], "type": "inlineReview", "revised_code": {"commit": "9bead7fcc1c03e621c57b5125b01b7a8dff49e7e", "chunk": "diff --git a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java\nindex 890b589..2fa7ab6 100644\n--- a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java\n+++ b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java\n\n@@ -356,23 +359,18 @@ public class ServiceCombClient {\n               new DefaultServiceInstance(instance.getInstanceId(), instance.getServiceId(), host,\n                   port, false, map));\n         }\n-      } else if (response.getStatusCode() == HttpStatus.SC_NOT_MODIFIED) {\n-        return null;\n-      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {\n-        LOGGER.debug(\n-            \"read response failed. status:\" + response.getStatusCode() + \"; message:\" + response\n-                .getStatusMessage() + \"; content:\" + response.getContent());\n-        return null;\n-      } else {\n-        throw new RemoteOperationException(\n+        return instanceList;\n+      } else if (response.getStatusCode() != HttpStatus.SC_NOT_MODIFIED) {\n+        LOGGER.warn(\n             \"read response failed. status:\" + response.getStatusCode() + \"; message:\" + response\n                 .getStatusMessage() + \"; content:\" + response.getContent());\n       }\n-      return instanceList;\n     } catch (URISyntaxException e) {\n-      throw new RemoteOperationException(\"build url failed.\", e);\n+      LOGGER.warn(\"build url failed.\", e);\n     } catch (IOException e) {\n-      handleRemoteOperationException(response, e);\n+      LOGGER.warn(\"read response failed. \" + response);\n+    } catch (RemoteServerUnavailableException e) {\n+      LOGGER.warn(\"get instances failed.\", e);\n     }\n     return null;\n   }\n"}}, {"oid": "9bead7fcc1c03e621c57b5125b01b7a8dff49e7e", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/9bead7fcc1c03e621c57b5125b01b7a8dff49e7e", "message": "fix cache invalidation", "committedDate": "2020-08-05T08:38:39Z", "type": "commit"}, {"oid": "9bead7fcc1c03e621c57b5125b01b7a8dff49e7e", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/9bead7fcc1c03e621c57b5125b01b7a8dff49e7e", "message": "fix cache invalidation", "committedDate": "2020-08-05T08:38:39Z", "type": "forcePushed"}, {"oid": "ccac8fcbce540cafba1755c0fcf9c0923de4cc07", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/ccac8fcbce540cafba1755c0fcf9c0923de4cc07", "message": "inline method", "committedDate": "2020-08-05T08:53:31Z", "type": "commit"}]}