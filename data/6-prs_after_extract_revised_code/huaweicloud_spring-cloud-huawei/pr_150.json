{"pr_number": 150, "pr_title": "when heard beat failed , retry registry", "pr_createdAt": "2020-03-25T06:21:47Z", "pr_url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150", "timeline": [{"oid": "5f210693ceb99db188cd2466899c4e24ad6f49ba", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/5f210693ceb99db188cd2466899c4e24ad6f49ba", "message": "when heard beat failed , retry registry", "committedDate": "2020-03-25T06:18:35Z", "type": "commit"}, {"oid": "2ea75aa8be928ebd66aa8963979bf2b485941a19", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/2ea75aa8be928ebd66aa8963979bf2b485941a19", "message": "format modify", "committedDate": "2020-03-25T07:01:26Z", "type": "commit"}, {"oid": "2ea75aa8be928ebd66aa8963979bf2b485941a19", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/2ea75aa8be928ebd66aa8963979bf2b485941a19", "message": "format modify", "committedDate": "2020-03-25T07:01:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTExMg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r397641112", "bodyText": "log\u65e5\u5fd7\u90fd\u4f7f\u7528{} \u53c2\u6570\u7684\u5f62\u5f0f\uff0c\u4e0d\u8981\u7528\u5b57\u7b26\u4e32\u62fc\u63a5", "author": "jeho0815", "createdAt": "2020-03-25T06:57:32Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java", "diffHunk": "@@ -35,17 +42,86 @@\n \n   private ServiceCombClient serviceCombClient;\n \n+  private AtomicBoolean isInitialize = new AtomicBoolean(true);\n+\n+  private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n+\n+  private ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n+\n+  private TagsProperties tagsProperties;\n+\n+  private ServiceCombRegistration registration;\n+\n   public HeartbeatTask(HeartbeatRequest heartbeatRequest, ServiceCombClient serviceCombClient) {\n     this.heartbeatRequest = heartbeatRequest;\n     this.serviceCombClient = serviceCombClient;\n   }\n \n+  public void setServiceCombSwaggerHandler(\n+      ServiceCombSwaggerHandler serviceCombSwaggerHandler) {\n+    this.serviceCombSwaggerHandler = serviceCombSwaggerHandler;\n+  }\n+\n+  public void setServiceCombDiscoveryProperties(\n+      ServiceCombDiscoveryProperties serviceCombDiscoveryProperties) {\n+    this.serviceCombDiscoveryProperties = serviceCombDiscoveryProperties;\n+  }\n+\n+  public void setTagsProperties(\n+      TagsProperties tagsProperties) {\n+    this.tagsProperties = tagsProperties;\n+  }\n+\n+  public void setRegistration(\n+      ServiceCombRegistration registration) {\n+    this.registration = registration;\n+  }\n+\n   @Override\n   public void run() {\n     try {\n-      serviceCombClient.heartbeat(heartbeatRequest);\n+      HeardBeatStatus result = serviceCombClient.heartbeat(heartbeatRequest);\n+      if (result.equals(HeardBeatStatus.FAILED)) {\n+        retryRegister(registration);\n+      }\n     } catch (ServiceCombException e) {\n       LOGGER.warn(\"heartbeat failed.\", e);\n     }\n   }\n+\n+  private void retryRegister(ServiceCombRegistration registration) {\n+    LOGGER.info(\"retry registry to service center.\");\n+    Microservice microservice = RegistryHandler.buildMicroservice(registration);\n+    if (serviceCombSwaggerHandler != null) {\n+      serviceCombSwaggerHandler.init(serviceCombDiscoveryProperties.getAppName(),\n+          serviceCombDiscoveryProperties.getServiceName());\n+      microservice.setSchemas(serviceCombSwaggerHandler.getSchemas());\n+    }\n+    try {\n+      String serviceID = serviceCombClient.getServiceId(microservice);\n+      if (null == serviceID) {\n+        serviceID = serviceCombClient.registerMicroservice(microservice);\n+      }\n+      if (serviceCombSwaggerHandler != null) {\n+        serviceCombSwaggerHandler.registerSwagger(serviceID, microservice.getSchemas());\n+      }\n+      MicroserviceInstance microserviceInstance = RegistryHandler\n+          .buildMicroServiceInstances(serviceID, microservice, serviceCombDiscoveryProperties,\n+              tagsProperties);\n+      String instanceID = serviceCombClient.registerInstance(microserviceInstance);\n+      if (null != instanceID) {\n+        serviceCombClient.autoDiscovery(serviceCombDiscoveryProperties.isAutoDiscovery());\n+        return;\n+      }\n+      RegisterCache.setInstanceID(instanceID);\n+      RegisterCache.setServiceID(serviceID);\n+      LOGGER.info(\"register success,instanceID=\" + instanceID + \";serviceID=\" + serviceID);", "originalCommit": "5f210693ceb99db188cd2466899c4e24ad6f49ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1MzI4Ng==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r397653286", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-03-25T07:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTExMg=="}], "type": "inlineReview", "revised_code": {"commit": "2ea75aa8be928ebd66aa8963979bf2b485941a19", "chunk": "diff --git a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java\nindex ae62505..9db74fc 100644\n--- a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java\n+++ b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java\n\n@@ -42,8 +42,6 @@ public class HeartbeatTask implements Runnable {\n \n   private ServiceCombClient serviceCombClient;\n \n-  private AtomicBoolean isInitialize = new AtomicBoolean(true);\n-\n   private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n \n   private ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTI3OQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r397641279", "bodyText": "enum\u7c7b\u578b\u6700\u597d\u76f4\u63a5\u7528 ==", "author": "jeho0815", "createdAt": "2020-03-25T06:58:05Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java", "diffHunk": "@@ -35,17 +42,86 @@\n \n   private ServiceCombClient serviceCombClient;\n \n+  private AtomicBoolean isInitialize = new AtomicBoolean(true);\n+\n+  private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n+\n+  private ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n+\n+  private TagsProperties tagsProperties;\n+\n+  private ServiceCombRegistration registration;\n+\n   public HeartbeatTask(HeartbeatRequest heartbeatRequest, ServiceCombClient serviceCombClient) {\n     this.heartbeatRequest = heartbeatRequest;\n     this.serviceCombClient = serviceCombClient;\n   }\n \n+  public void setServiceCombSwaggerHandler(\n+      ServiceCombSwaggerHandler serviceCombSwaggerHandler) {\n+    this.serviceCombSwaggerHandler = serviceCombSwaggerHandler;\n+  }\n+\n+  public void setServiceCombDiscoveryProperties(\n+      ServiceCombDiscoveryProperties serviceCombDiscoveryProperties) {\n+    this.serviceCombDiscoveryProperties = serviceCombDiscoveryProperties;\n+  }\n+\n+  public void setTagsProperties(\n+      TagsProperties tagsProperties) {\n+    this.tagsProperties = tagsProperties;\n+  }\n+\n+  public void setRegistration(\n+      ServiceCombRegistration registration) {\n+    this.registration = registration;\n+  }\n+\n   @Override\n   public void run() {\n     try {\n-      serviceCombClient.heartbeat(heartbeatRequest);\n+      HeardBeatStatus result = serviceCombClient.heartbeat(heartbeatRequest);\n+      if (result.equals(HeardBeatStatus.FAILED)) {", "originalCommit": "5f210693ceb99db188cd2466899c4e24ad6f49ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1MzMzNA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r397653334", "bodyText": "done", "author": "GuoYL123", "createdAt": "2020-03-25T07:32:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ea75aa8be928ebd66aa8963979bf2b485941a19", "chunk": "diff --git a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java\nindex ae62505..9db74fc 100644\n--- a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java\n+++ b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java\n\n@@ -42,8 +42,6 @@ public class HeartbeatTask implements Runnable {\n \n   private ServiceCombClient serviceCombClient;\n \n-  private AtomicBoolean isInitialize = new AtomicBoolean(true);\n-\n   private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n \n   private ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n"}}, {"oid": "98762b9f67e2635ad24041664aa2eccc403211df", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/98762b9f67e2635ad24041664aa2eccc403211df", "message": "modify as comment and fix bug", "committedDate": "2020-03-25T07:31:58Z", "type": "commit"}, {"oid": "8b879bef7d136a701a1919d507c2d55b318a6b6a", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/8b879bef7d136a701a1919d507c2d55b318a6b6a", "message": "refactory the code / fix deregistry bug / avoid to log meaningless warn", "committedDate": "2020-03-26T03:40:55Z", "type": "commit"}, {"oid": "ba01a785a9210c7c8bfa9549b1965a4f1211f273", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/ba01a785a9210c7c8bfa9549b1965a4f1211f273", "message": "modify code", "committedDate": "2020-03-26T03:44:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTM0NA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398305344", "bodyText": "Why need add this line ?\nDefinition private WatchService watchService is never read after initialize in constructor, can removed", "author": "liubao68", "createdAt": "2020-03-26T04:02:18Z", "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/auth/AuthHeaderStrategyMount.java", "diffHunk": "@@ -51,6 +52,8 @@ public AuthHeaderStrategyMount() {\n           StandardWatchEventKinds.ENTRY_MODIFY,\n           StandardWatchEventKinds.ENTRY_CREATE);\n       executor.execute(new FileUpdateCheckThread(watchService));\n+    } catch (NoSuchFileException e) {\n+      //ignore", "originalCommit": "ba01a785a9210c7c8bfa9549b1965a4f1211f273", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxNTkwNg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398315906", "bodyText": "because if there is no path like this, the code will log a meaningless warn.\nok.", "author": "GuoYL123", "createdAt": "2020-03-26T04:48:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzNDU3Ng==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398334576", "bodyText": "\u8fd8\u662f\u8981\u52a0\u4e0a\u65e5\u5fd7", "author": "tianxiaoliang", "createdAt": "2020-03-26T06:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzNjg5OA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398336898", "bodyText": "\u5982\u679c\u4e0dcatch\uff0c\u5728\u975eservicestage\u73af\u5883\u4e0b\uff0c\u4f1a\u5bfc\u81f4100%\u51fa\u73b0\u4e00\u6761\u8b66\u544a\u65e5\u5fd7\u548c\u4e00\u6761\u5f02\u5e38\uff0c\u5bf9\u4e8e\u7528\u6237\u5b8c\u5168\u65e0\u610f\u4e49\u4e14\u5f15\u8d77\u56f0\u60d1\u3002", "author": "GuoYL123", "createdAt": "2020-03-26T06:10:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM0Nzk2NA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398347964", "bodyText": "\u5df2\u7ecf\u4fee\u6539\uff0c\u5224\u65ad\u4e0d\u5b58\u5728\u76f4\u63a5return", "author": "GuoYL123", "createdAt": "2020-03-26T06:47:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "3d1d82d09484fcf74f809c751caddf59b3bb5fab", "chunk": "diff --git a/spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/auth/AuthHeaderStrategyMount.java b/spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/auth/AuthHeaderStrategyMount.java\nindex e193a24..9a0c44f 100644\n--- a/spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/auth/AuthHeaderStrategyMount.java\n+++ b/spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/auth/AuthHeaderStrategyMount.java\n\n@@ -42,18 +41,17 @@ public class AuthHeaderStrategyMount extends AuthHeaderStrategy {\n \n   private ExecutorService executor = Executors.newFixedThreadPool(1);\n \n-  private WatchService watchService;\n-\n   public AuthHeaderStrategyMount() {\n     try {\n-      watchService = FileSystems.getDefault().newWatchService();\n+      WatchService watchService = FileSystems.getDefault().newWatchService();\n       Path p = Paths.get(DEFAULT_SECRET_AUTH_PATH);\n+      if (!p.toFile().exists()) {\n+        return;\n+      }\n       p.register(watchService,\n           StandardWatchEventKinds.ENTRY_MODIFY,\n           StandardWatchEventKinds.ENTRY_CREATE);\n       executor.execute(new FileUpdateCheckThread(watchService));\n-    } catch (NoSuchFileException e) {\n-      //ignore\n     } catch (Exception e) {\n       LOGGER.warn(\"get watch service failed.\", e);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTkwNQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398305905", "bodyText": "After  line 92 is better", "author": "liubao68", "createdAt": "2020-03-26T04:04:49Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatScheduler.java", "diffHunk": "@@ -42,31 +52,86 @@\n \n   private ServiceCombClient serviceCombClient;\n \n+  private TagsProperties tagsProperties;\n+\n+  private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n+\n   public HeartbeatScheduler(ServiceCombDiscoveryProperties serviceCombDiscoveryProperties,\n-      ServiceCombClient serviceCombClient) {\n+      ServiceCombClient serviceCombClient, TagsProperties tagsProperties) {\n     this.serviceCombDiscoveryProperties = serviceCombDiscoveryProperties;\n     this.serviceCombClient = serviceCombClient;\n+    this.tagsProperties = tagsProperties;\n   }\n \n-  public void add(String instanceId, String serviceId) {\n+  public void add(ServiceCombRegistration registration,\n+      ServiceCombSwaggerHandler serviceCombSwaggerHandler) {\n     if (!serviceCombDiscoveryProperties.isHealthCheck()) {\n       return;\n     }\n-    HeartbeatRequest heartbeatRequest = new HeartbeatRequest(serviceId, instanceId);\n+    this.serviceCombSwaggerHandler = serviceCombSwaggerHandler;\n     ScheduledFuture currentTask = this.scheduler\n-        .scheduleWithFixedDelay(new HeartbeatTask(heartbeatRequest, serviceCombClient),\n+        .scheduleWithFixedDelay(() -> {\n+              try {\n+                HeartbeatRequest heartbeatRequest = new HeartbeatRequest(RegisterCache.getServiceID(),\n+                    RegisterCache.getInstanceID());\n+                HeardBeatStatus result = serviceCombClient.heartbeat(heartbeatRequest);\n+                if (result == HeardBeatStatus.FAILED) {\n+                  retryRegister(registration, heartbeatRequest.getInstances().get(0).getInstanceId());\n+                }\n+              } catch (ServiceCombException e) {\n+                LOGGER.warn(\"heartbeat failed.\", e);\n+              }\n+            },\n             serviceCombDiscoveryProperties.getHealthCheckInterval() * 1000);\n+    refreshLocalMap(RegisterCache.getInstanceID(), currentTask);\n+  }\n+\n+  public void remove() {\n+    ScheduledFuture scheduled = heartbeatRequestMap.get(RegisterCache.getInstanceID());\n+    if (null != scheduled) {\n+      scheduled.cancel(true);\n+    }\n+    heartbeatRequestMap.remove(RegisterCache.getInstanceID());", "originalCommit": "ba01a785a9210c7c8bfa9549b1965a4f1211f273", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxNjM4Nw==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398316387", "bodyText": "modified by a better way", "author": "GuoYL123", "createdAt": "2020-03-26T04:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTkwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3d1d82d09484fcf74f809c751caddf59b3bb5fab", "chunk": "diff --git a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatScheduler.java b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatScheduler.java\nindex 4e8a355..6ed5d2f 100644\n--- a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatScheduler.java\n+++ b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatScheduler.java\n\n@@ -87,11 +87,10 @@ public class HeartbeatScheduler {\n   }\n \n   public void remove() {\n-    ScheduledFuture scheduled = heartbeatRequestMap.get(RegisterCache.getInstanceID());\n+    ScheduledFuture scheduled = heartbeatRequestMap.remove(RegisterCache.getInstanceID());\n     if (null != scheduled) {\n       scheduled.cancel(true);\n     }\n-    heartbeatRequestMap.remove(RegisterCache.getInstanceID());\n   }\n \n   private void refreshLocalMap(String instanceId, ScheduledFuture currentTask) {\n"}}, {"oid": "3d1d82d09484fcf74f809c751caddf59b3bb5fab", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/3d1d82d09484fcf74f809c751caddf59b3bb5fab", "message": "modify as comment", "committedDate": "2020-03-26T06:45:31Z", "type": "commit"}, {"oid": "3d1d82d09484fcf74f809c751caddf59b3bb5fab", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/3d1d82d09484fcf74f809c751caddf59b3bb5fab", "message": "modify as comment", "committedDate": "2020-03-26T06:45:31Z", "type": "forcePushed"}]}