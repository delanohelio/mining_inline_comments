{"pr_number": 295, "pr_title": "[issue #296] register service when retry register / change heartbeat url", "pr_createdAt": "2020-11-16T02:49:08Z", "pr_url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295", "timeline": [{"oid": "dab28bc45bf9a6dbec9d2a0d81aa7fa558e44ce3", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/dab28bc45bf9a6dbec9d2a0d81aa7fa558e44ce3", "message": "register service when retry register / change heartbeat url", "committedDate": "2020-11-16T06:29:00Z", "type": "forcePushed"}, {"oid": "4a6e8f362bafa0fe608bd825e0a2e3d9b1b68b85", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/4a6e8f362bafa0fe608bd825e0a2e3d9b1b68b85", "message": "register service when retry register / change heartbeat url", "committedDate": "2020-11-16T06:55:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3NjY3Mg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r523976672", "bodyText": "\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u6709\u4efb\u4f55\u6709\u6548\u7684\u68c0\u67e5\uff0c\u5efa\u8bae\u5220\u9664\u3002", "author": "liubao68", "createdAt": "2020-11-16T08:45:24Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatSchedulerTest.java", "diffHunk": "@@ -33,19 +35,14 @@\n   @Injectable\n   ServiceCombClient serviceCombClient;\n \n-  @Injectable\n-  ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n-\n-  @Injectable\n-  TagsProperties tagsProperties;\n+  ServiceCombDiscoveryProperties serviceCombDiscoveryProperties = new ServiceCombDiscoveryProperties();\n \n   @Test\n   public void addAndRemove() {\n     serviceCombDiscoveryProperties.setHealthCheckInterval(10);\n-    HeartbeatScheduler heartbeatScheduler = new HeartbeatScheduler(serviceCombDiscoveryProperties,\n-        serviceCombClient, tagsProperties);\n+    HeartbeatScheduler heartbeatScheduler = new HeartbeatScheduler(serviceCombDiscoveryProperties, serviceCombClient);", "originalCommit": "4a6e8f362bafa0fe608bd825e0a2e3d9b1b68b85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3NzMzNg==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r523977336", "bodyText": "\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u6709\u4efb\u4f55\u6709\u6548\u68c0\u67e5\u3002", "author": "liubao68", "createdAt": "2020-11-16T08:46:32Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java", "diffHunk": "@@ -234,7 +235,7 @@ public void heartbeat(@Injectable\n       }\n     };\n     ServiceCombClient serviceCombClient = new ServiceCombClient(url, httpTransport);\n-    serviceCombClient.heartbeat(heartbeatRequest);\n+    serviceCombClient.heartbeat(\"1\", \"2\");", "originalCommit": "4a6e8f362bafa0fe608bd825e0a2e3d9b1b68b85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMzYyNA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r526533624", "bodyText": "\u589e\u52a0check", "author": "GuoYL123", "createdAt": "2020-11-19T01:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3NzMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "5109f7dd286ab3e60616ca79d7c7448f92bef3a5", "chunk": "diff --git a/spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java b/spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java\nindex cd492d7..cc9062b 100644\n--- a/spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java\n+++ b/spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java\n\n@@ -235,7 +235,8 @@ public class ServiceCombClientTest {\n       }\n     };\n     ServiceCombClient serviceCombClient = new ServiceCombClient(url, httpTransport);\n-    serviceCombClient.heartbeat(\"1\", \"2\");\n+    HeardBeatStatus status = serviceCombClient.heartbeat(\"1\", \"2\");\n+    Assert.assertEquals(HeardBeatStatus.SUCCESS, status);\n   }\n \n   @Test\n"}}, {"oid": "5109f7dd286ab3e60616ca79d7c7448f92bef3a5", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/5109f7dd286ab3e60616ca79d7c7448f92bef3a5", "message": "register service when retry register / change heartbeat url", "committedDate": "2020-11-18T03:01:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2NTMxMw==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r525965313", "bodyText": "if \u548cif else\u957f\u5f97\u4e00\u6837", "author": "tianxiaoliang", "createdAt": "2020-11-18T10:11:34Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/ServiceCombServiceRegistry.java", "diffHunk": "@@ -120,39 +119,53 @@ private void startWatch() {\n     }\n   }\n \n-  private void loopRegister(ServiceCombRegistration registration) {\n+  private void loopRegister(Microservice microservice) {\n+    while (true) {\n+      if (doRegister(microservice)) {\n+        break;\n+      }\n+    }\n+  }\n+\n+  private Microservice getMicroservice(ServiceCombRegistration registration) {\n     Microservice microservice = RegistryHandler.buildMicroservice(registration);\n     if (serviceCombSwaggerHandler != null) {\n       serviceCombSwaggerHandler.init(serviceCombDiscoveryProperties.getAppName(),\n           serviceCombDiscoveryProperties.getServiceName());\n       microservice.setSchemas(serviceCombSwaggerHandler.getSchemaIds());\n     }\n-    while (true) {\n-      try {\n-        serviceID = serviceCombClient.getServiceId(microservice);\n-        if (null == serviceID) {\n-          serviceID = serviceCombClient.registerMicroservice(microservice);\n-          if (serviceCombSwaggerHandler != null) {\n-            serviceCombSwaggerHandler.registerSwagger(serviceID, microservice.getSchemas());\n-          }\n-        } else if (serviceCombSwaggerHandler != null) {\n-          List<String> schemas = filterSchema(serviceCombSwaggerHandler.getSchemasSummaryMap());\n-          serviceCombSwaggerHandler.registerSwagger(serviceID, schemas);\n-        }\n-        MicroserviceInstance microserviceInstance = RegistryHandler\n-            .buildMicroServiceInstances(serviceID, microservice, serviceCombDiscoveryProperties,\n-                tagsProperties);\n-        instanceID = serviceCombClient.registerInstance(microserviceInstance);\n-        if (null != instanceID) {\n-          serviceCombClient.autoDiscovery(serviceCombDiscoveryProperties.isAutoDiscovery());\n-          break;\n+    return microservice;\n+  }\n+\n+  private boolean doRegister(Microservice microservice) {\n+    try {\n+      serviceID = serviceCombClient.getServiceId(microservice);\n+      if (null == serviceID) {\n+        serviceID = serviceCombClient.registerMicroservice(microservice);\n+        if (serviceCombSwaggerHandler != null) {", "originalCommit": "5109f7dd286ab3e60616ca79d7c7448f92bef3a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMzQzOQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r526533439", "bodyText": "\u5b9e\u9645\u4e0d\u5728\u540c\u4e00\u5c42\u7ea7\uff0c\u903b\u8f91\u6ca1\u95ee\u9898\uff1b\n\u4f46\u786e\u5b9e\u4e0d\u6613\u8bfb\uff0c\u53ef\u4ee5\u4f18\u5316\u4e0b", "author": "GuoYL123", "createdAt": "2020-11-19T01:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2NTMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "aac41fc1ec3f63d9fe5c9dd89e876bc2c210ddb2", "chunk": "diff --git a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/ServiceCombServiceRegistry.java b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/ServiceCombServiceRegistry.java\nindex 55008e4..79111d3 100644\n--- a/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/ServiceCombServiceRegistry.java\n+++ b/spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/ServiceCombServiceRegistry.java\n\n@@ -140,13 +140,15 @@ public class ServiceCombServiceRegistry implements ServiceRegistry<ServiceCombRe\n   private boolean doRegister(Microservice microservice) {\n     try {\n       serviceID = serviceCombClient.getServiceId(microservice);\n+      List<String> schemas = null;\n       if (null == serviceID) {\n         serviceID = serviceCombClient.registerMicroservice(microservice);\n-        if (serviceCombSwaggerHandler != null) {\n-          serviceCombSwaggerHandler.registerSwagger(serviceID, microservice.getSchemas());\n+        schemas = microservice.getSchemas();\n+      }\n+      if (serviceCombSwaggerHandler != null) {\n+        if (schemas != null) {\n+          schemas = filterSchema(serviceCombSwaggerHandler.getSchemasSummaryMap());\n         }\n-      } else if (serviceCombSwaggerHandler != null) {\n-        List<String> schemas = filterSchema(serviceCombSwaggerHandler.getSchemasSummaryMap());\n         serviceCombSwaggerHandler.registerSwagger(serviceID, schemas);\n       }\n       MicroserviceInstance microserviceInstance = RegistryHandler\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk3MjU4NQ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r525972585", "bodyText": "\u8fd9\u91cc\u65e0\u9650\u91cd\u8bd5\u4e0b\u53bb\uff1f\u4f55\u65f6\u7ec8\u6b62", "author": "tianxiaoliang", "createdAt": "2020-11-18T10:22:38Z", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/ServiceCombServiceRegistry.java", "diffHunk": "@@ -94,21 +94,20 @@ public void register(ServiceCombRegistration registration) {\n   private void asyncRegister(ServiceCombRegistration registration) {\n     EXECUTOR.execute(() -> {\n       try {\n-        loopRegister(registration);\n-        RegisterCache.setInstanceID(instanceID);\n-        RegisterCache.setServiceID(serviceID);\n-        if (serviceCombDiscoveryProperties.isWatch()) {\n-          startWatch();\n-        }\n-        LOGGER.info(\"register success,instanceID=\" + instanceID + \";serviceID=\" + serviceID);\n-        heartbeatScheduler.add(registration);\n+        Microservice microservice = getMicroservice(registration);\n+        loopRegister(microservice);", "originalCommit": "5109f7dd286ab3e60616ca79d7c7448f92bef3a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyNjc3MA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r526526770", "bodyText": "\u5b9e\u4f8b\u6ce8\u518c\u6210\u529f\u5c31\u4f1a\u7ec8\u6b62\uff0c\u5982\u679c\u6ca1\u6210\u529f\u5c31\u4e00\u76f4\u91cd\u8bd5\uff0c\u56e0\u4e3a\u662f\u5f02\u6b65\u6267\u884c\uff0c\u6240\u4ee5\u4e0d\u963b\u585e\u4e3b\u7ebf\u7a0b", "author": "GuoYL123", "createdAt": "2020-11-19T01:11:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk3MjU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzNTQ3OA==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/295#discussion_r526535478", "bodyText": "\u55ef\u91cd\u8bd5\u8981\u505a\u9000\u8ba9\u7b97\u6cd5\u4fdd\u62a4", "author": "tianxiaoliang", "createdAt": "2020-11-19T01:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk3MjU4NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "aac41fc1ec3f63d9fe5c9dd89e876bc2c210ddb2", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/aac41fc1ec3f63d9fe5c9dd89e876bc2c210ddb2", "message": "register service when retry register / change heartbeat url", "committedDate": "2020-11-19T01:31:24Z", "type": "commit"}, {"oid": "aac41fc1ec3f63d9fe5c9dd89e876bc2c210ddb2", "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/aac41fc1ec3f63d9fe5c9dd89e876bc2c210ddb2", "message": "register service when retry register / change heartbeat url", "committedDate": "2020-11-19T01:31:24Z", "type": "forcePushed"}]}