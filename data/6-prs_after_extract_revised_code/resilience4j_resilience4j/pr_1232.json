{"pr_number": 1232, "pr_title": "Add result predicate to CircuitBreaker", "pr_createdAt": "2020-10-28T12:52:06Z", "pr_url": "https://github.com/resilience4j/resilience4j/pull/1232", "timeline": [{"oid": "8d3147382f87f3ef4ab6fc4ab5e814052bd8e522", "url": "https://github.com/resilience4j/resilience4j/commit/8d3147382f87f3ef4ab6fc4ab5e814052bd8e522", "message": "Change onSuccess main method and propagate changes", "committedDate": "2020-06-08T09:29:59Z", "type": "commit"}, {"oid": "c30123c98ce1bbd98f60a9951e27a99a60aafe48", "url": "https://github.com/resilience4j/resilience4j/commit/c30123c98ce1bbd98f60a9951e27a99a60aafe48", "message": "Add specific tests for record result", "committedDate": "2020-06-08T17:26:41Z", "type": "commit"}, {"oid": "8f7008266be0863806b3c26b1364ef5be25ab74b", "url": "https://github.com/resilience4j/resilience4j/commit/8f7008266be0863806b3c26b1364ef5be25ab74b", "message": "Resolved merge conflicts", "committedDate": "2020-10-28T12:51:43Z", "type": "commit"}, {"oid": "09fdef16f6962edafa8305abcd03058db1f72af8", "url": "https://github.com/resilience4j/resilience4j/commit/09fdef16f6962edafa8305abcd03058db1f72af8", "message": "Removed unused imports", "committedDate": "2020-10-28T12:57:35Z", "type": "commit"}, {"oid": "35a55aad09006edd022b3533b6eadaaf8be09f8f", "url": "https://github.com/resilience4j/resilience4j/commit/35a55aad09006edd022b3533b6eadaaf8be09f8f", "message": "Fixed compile issues", "committedDate": "2020-10-28T13:25:57Z", "type": "commit"}, {"oid": "603ac348715a90ca95267d1cb3e9a63a8e311403", "url": "https://github.com/resilience4j/resilience4j/commit/603ac348715a90ca95267d1cb3e9a63a8e311403", "message": "Merge branch 'master' into albertllousas-add-predicate-to-record-a-failure-depending-on-the-result", "committedDate": "2020-10-28T13:26:21Z", "type": "commit"}, {"oid": "2a945cb5d298ab4045568e0cc71b97b6ddeef8e9", "url": "https://github.com/resilience4j/resilience4j/commit/2a945cb5d298ab4045568e0cc71b97b6ddeef8e9", "message": "Fixed sonar findings", "committedDate": "2020-10-29T09:08:02Z", "type": "commit"}, {"oid": "8afa86679605908e55bd8d65ff5a92da4d0a16f3", "url": "https://github.com/resilience4j/resilience4j/commit/8afa86679605908e55bd8d65ff5a92da4d0a16f3", "message": "Fixed sonar findings", "committedDate": "2020-10-29T10:05:09Z", "type": "commit"}, {"oid": "13d5ef9eb0a42160b44f2af9468de85dd874795f", "url": "https://github.com/resilience4j/resilience4j/commit/13d5ef9eb0a42160b44f2af9468de85dd874795f", "message": "Fixed sonar findings", "committedDate": "2020-10-29T10:47:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU4MTA5Ng==", "url": "https://github.com/resilience4j/resilience4j/pull/1232#discussion_r515581096", "bodyText": "Doesn't need to deprecate onSuccess? I think onResult can cover onSuccess.", "author": "dlsrb6342", "createdAt": "2020-11-01T06:15:44Z", "path": "resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreaker.java", "diffHunk": "@@ -556,6 +555,16 @@ static CircuitBreaker of(String name,\n      */\n     void onSuccess(long duration, TimeUnit durationUnit);", "originalCommit": "13d5ef9eb0a42160b44f2af9468de85dd874795f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgwMDk3Mw==", "url": "https://github.com/resilience4j/resilience4j/pull/1232#discussion_r515800973", "bodyText": "I don't really like methods where you have to provide a null parameter, because it's optional. I prefer to use Method Overloading in a public API.\nBut I thought giving the overloaded method a name like onResult explains the intention better than onSuccess.\nWhat do you think?", "author": "RobWin", "createdAt": "2020-11-02T08:16:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU4MTA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMDg4OQ==", "url": "https://github.com/resilience4j/resilience4j/pull/1232#discussion_r515820889", "bodyText": "Understood \ud83d\udc4d", "author": "dlsrb6342", "createdAt": "2020-11-02T08:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU4MTA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwNTMxOQ==", "url": "https://github.com/resilience4j/resilience4j/pull/1232#discussion_r515905319", "bodyText": "but maybe we still need to add @deprecated so we can remove it from version 2 if it is not still needed ?", "author": "Romeh", "createdAt": "2020-11-02T11:20:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU4MTA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwOTk3Mw==", "url": "https://github.com/resilience4j/resilience4j/pull/1232#discussion_r515909973", "bodyText": "It's still needed. There are some functions which can be decorated and don't return a value. Like Runnable. Or types like Completable, Maybe.", "author": "RobWin", "createdAt": "2020-11-02T11:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU4MTA5Ng=="}], "type": "inlineReview", "revised_code": null}]}