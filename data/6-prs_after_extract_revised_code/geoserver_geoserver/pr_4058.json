{"pr_number": 4058, "pr_title": "Upgrade to checkstyle maven plugin 3.1.1", "pr_createdAt": "2020-02-16T10:15:49Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4058", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjU0Nw==", "url": "https://github.com/geoserver/geoserver/pull/4058#discussion_r379892547", "bodyText": "Don't think this is adding anything.", "author": "bradh", "createdAt": "2020-02-16T10:32:16Z", "path": "src/community/dyndimension/src/main/java/org/geoserver/wms/dimension/DynamicDefaultValueSelectionFactory.java", "diffHunk": "@@ -662,14 +653,7 @@ private FeatureCalc getFeatureCalcForStrategy(\n         return new CaseInsensitiveMap(result);\n     }\n \n-    /**\n-     * Applies the normal policy, but restricted to the\n-     *\n-     * @param resource\n-     * @param config\n-     * @param restrictions\n-     * @throws IOException\n-     */\n+    /** Applies the normal policy, but restricted to the */", "originalCommit": "c7b1cc587da71ab172ff3ebbc5ca2953b13e99dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "chunk": "diff --git a/src/community/dyndimension/src/main/java/org/geoserver/wms/dimension/DynamicDefaultValueSelectionFactory.java b/src/community/dyndimension/src/main/java/org/geoserver/wms/dimension/DynamicDefaultValueSelectionFactory.java\nindex f454f17ca6..b88a34f004 100644\n--- a/src/community/dyndimension/src/main/java/org/geoserver/wms/dimension/DynamicDefaultValueSelectionFactory.java\n+++ b/src/community/dyndimension/src/main/java/org/geoserver/wms/dimension/DynamicDefaultValueSelectionFactory.java\n\n@@ -653,7 +662,14 @@ public class DynamicDefaultValueSelectionFactory extends AbstractDispatcherCallb\n         return new CaseInsensitiveMap(result);\n     }\n \n-    /** Applies the normal policy, but restricted to the */\n+    /**\n+     * Applies the normal policy, but restricted to the\n+     *\n+     * @param resource\n+     * @param config\n+     * @param restrictions\n+     * @throws IOException\n+     */\n     private Object getVectorDefaultValue(\n             FeatureTypeInfo resource,\n             DefaultValueConfiguration config,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5Mjc4Mw==", "url": "https://github.com/geoserver/geoserver/pull/4058#discussion_r379892783", "bodyText": "Typos. benn -> been and an -> and", "author": "bradh", "createdAt": "2020-02-16T10:36:26Z", "path": "src/community/json-ld/src/main/java/org/geoserver/jsonld/configuration/JsonLdTemplate.java", "diffHunk": "@@ -35,11 +35,7 @@ public JsonLdTemplate(Resource templateFile, NamespaceSupport namespaces) {\n         }\n     }\n \n-    /**\n-     * Check if json-ld template file has benn modified an eventually reload it.\n-     *\n-     * @return\n-     */\n+    /** Check if json-ld template file has benn modified an eventually reload it. */", "originalCommit": "c7b1cc587da71ab172ff3ebbc5ca2953b13e99dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "chunk": "diff --git a/src/community/json-ld/src/main/java/org/geoserver/jsonld/configuration/JsonLdTemplate.java b/src/community/json-ld/src/main/java/org/geoserver/jsonld/configuration/JsonLdTemplate.java\nindex 1670b4bba6..5f6fc90a91 100644\n--- a/src/community/json-ld/src/main/java/org/geoserver/jsonld/configuration/JsonLdTemplate.java\n+++ b/src/community/json-ld/src/main/java/org/geoserver/jsonld/configuration/JsonLdTemplate.java\n\n@@ -35,7 +35,11 @@ public class JsonLdTemplate {\n         }\n     }\n \n-    /** Check if json-ld template file has benn modified an eventually reload it. */\n+    /**\n+     * Check if json-ld template file has benn modified an eventually reload it.\n+     *\n+     * @return\n+     */\n     public boolean checkTemplate() {\n         if (watcher != null && watcher.isModified()) {\n             LOGGER.log(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5Mjg2MA==", "url": "https://github.com/geoserver/geoserver/pull/4058#discussion_r379892860", "bodyText": "Returns", "author": "bradh", "createdAt": "2020-02-16T10:38:02Z", "path": "src/community/ogcapi/ogcapi-changeset/src/main/java/org/geoserver/api/changeset/ModifiedTiles.java", "diffHunk": "@@ -186,18 +186,12 @@ private GridSubset toGridSubset(\n     /**\n      * Iterates over all the tiles, in all zoom levels, affected by the list of changes. The\n      * positions are [x, y, z] with coordinates in the GWC internal order\n-     *\n-     * @return\n      */\n     public Iterator<long[]> getTiles() {\n         return new TileIterator(subsets, zoomStart, zoomEnd);\n     }\n \n-    /**\n-     * Retruns the number of tiles modified by the list of changes\n-     *\n-     * @return\n-     */\n+    /** Retruns the number of tiles modified by the list of changes */", "originalCommit": "c7b1cc587da71ab172ff3ebbc5ca2953b13e99dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "chunk": "diff --git a/src/community/ogcapi/ogcapi-changeset/src/main/java/org/geoserver/api/changeset/ModifiedTiles.java b/src/community/ogcapi/ogcapi-changeset/src/main/java/org/geoserver/api/changeset/ModifiedTiles.java\nindex dc9812a7d3..d7190f413c 100644\n--- a/src/community/ogcapi/ogcapi-changeset/src/main/java/org/geoserver/api/changeset/ModifiedTiles.java\n+++ b/src/community/ogcapi/ogcapi-changeset/src/main/java/org/geoserver/api/changeset/ModifiedTiles.java\n\n@@ -186,12 +186,18 @@ public class ModifiedTiles {\n     /**\n      * Iterates over all the tiles, in all zoom levels, affected by the list of changes. The\n      * positions are [x, y, z] with coordinates in the GWC internal order\n+     *\n+     * @return\n      */\n     public Iterator<long[]> getTiles() {\n         return new TileIterator(subsets, zoomStart, zoomEnd);\n     }\n \n-    /** Retruns the number of tiles modified by the list of changes */\n+    /**\n+     * Retruns the number of tiles modified by the list of changes\n+     *\n+     * @return\n+     */\n     public long getModifiedTiles() {\n         // dump implementation, just count while iterating, surely possible\n         // to compute it faster by just counting the tiles in each subset, but\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MzAxOA==", "url": "https://github.com/geoserver/geoserver/pull/4058#discussion_r379893018", "bodyText": "Oh.", "author": "bradh", "createdAt": "2020-02-16T10:40:59Z", "path": "src/community/qos/src/main/java/org/geoserver/qos/BaseQosXmlEncoder.java", "diffHunk": "@@ -254,12 +250,7 @@ public void encodeOwsRange(Translator tx, String min, String max) {\n         tx.end(owsPrefix() + \":\" + OWS_RANGE_TAG);\n     }\n \n-    /**\n-     * <ows:Value>Vesienhoitoalueet</ows:Value>\n-     *\n-     * @param tx\n-     * @param value\n-     */\n+    /** <ows:Value>Vesienhoitoalueet</ows:Value> */", "originalCommit": "c7b1cc587da71ab172ff3ebbc5ca2953b13e99dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "chunk": "diff --git a/src/community/qos/src/main/java/org/geoserver/qos/BaseQosXmlEncoder.java b/src/community/qos/src/main/java/org/geoserver/qos/BaseQosXmlEncoder.java\nindex f64ff4dde5..252b244aed 100644\n--- a/src/community/qos/src/main/java/org/geoserver/qos/BaseQosXmlEncoder.java\n+++ b/src/community/qos/src/main/java/org/geoserver/qos/BaseQosXmlEncoder.java\n\n@@ -250,7 +254,12 @@ public abstract class BaseQosXmlEncoder {\n         tx.end(owsPrefix() + \":\" + OWS_RANGE_TAG);\n     }\n \n-    /** <ows:Value>Vesienhoitoalueet</ows:Value> */\n+    /**\n+     * <ows:Value>Vesienhoitoalueet</ows:Value>\n+     *\n+     * @param tx\n+     * @param value\n+     */\n     public void encodeOwsValue(Translator tx, String value) {\n         tx.start(owsPrefix() + \":\" + OWS_VALUE_TAG);\n         tx.chars(value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MzE2NQ==", "url": "https://github.com/geoserver/geoserver/pull/4058#discussion_r379893165", "bodyText": "Typo.", "author": "bradh", "createdAt": "2020-02-16T10:43:53Z", "path": "src/community/wps-remote/src/main/java/org/geoserver/wps/remote/RemoteProcessClient.java", "diffHunk": "@@ -96,11 +96,7 @@\n     /** */\n     protected String certificatePassword = null;\n \n-    /**\n-     * The default Cosntructor\n-     *\n-     * @param remoteProcessFactory\n-     */\n+    /** The default Cosntructor */", "originalCommit": "c7b1cc587da71ab172ff3ebbc5ca2953b13e99dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "chunk": "diff --git a/src/community/wps-remote/src/main/java/org/geoserver/wps/remote/RemoteProcessClient.java b/src/community/wps-remote/src/main/java/org/geoserver/wps/remote/RemoteProcessClient.java\nindex f1e26982e4..3eaea3c446 100644\n--- a/src/community/wps-remote/src/main/java/org/geoserver/wps/remote/RemoteProcessClient.java\n+++ b/src/community/wps-remote/src/main/java/org/geoserver/wps/remote/RemoteProcessClient.java\n\n@@ -96,7 +96,11 @@ public abstract class RemoteProcessClient implements DisposableBean, ExtensionPr\n     /** */\n     protected String certificatePassword = null;\n \n-    /** The default Cosntructor */\n+    /**\n+     * The default Cosntructor\n+     *\n+     * @param remoteProcessFactory\n+     */\n     public RemoteProcessClient(\n             RemoteProcessFactoryConfigurationWatcher remoteProcessFactoryConfigurationWatcher,\n             boolean enabled,\n"}}, {"oid": "d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "url": "https://github.com/geoserver/geoserver/commit/d3ba6e3a03bd30fab13d3d1be57fdedc6abdf0b2", "message": "Upgrade to checstyle maven plugin 3.1.1", "committedDate": "2020-02-23T09:39:49Z", "type": "commit"}, {"oid": "c15885e5c80d293c35164ab6999215606ee12560", "url": "https://github.com/geoserver/geoserver/commit/c15885e5c80d293c35164ab6999215606ee12560", "message": "Cleaning up empty parameters, returns, throws.\n\n            Cleanup has been done using the following commands:\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@param\\s\\w+\\s*$/d\" {} \\;\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@param\\s*$/d\" {} \\;\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@return\\s*$/d\" {} \\;\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@throws\\s\\w+\\s*$/d\" {} \\;", "committedDate": "2020-02-23T09:42:46Z", "type": "commit"}, {"oid": "c15885e5c80d293c35164ab6999215606ee12560", "url": "https://github.com/geoserver/geoserver/commit/c15885e5c80d293c35164ab6999215606ee12560", "message": "Cleaning up empty parameters, returns, throws.\n\n            Cleanup has been done using the following commands:\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@param\\s\\w+\\s*$/d\" {} \\;\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@param\\s*$/d\" {} \\;\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@return\\s*$/d\" {} \\;\n            find . -name \"*.java\" -exec sed -E -i \"/^.*@throws\\s\\w+\\s*$/d\" {} \\;", "committedDate": "2020-02-23T09:42:46Z", "type": "forcePushed"}]}