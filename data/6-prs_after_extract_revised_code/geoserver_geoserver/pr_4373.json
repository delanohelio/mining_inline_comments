{"pr_number": 4373, "pr_title": "[GEOS-9555] WMS remote SLD fetching lacks a timeout, can block the GetMap request indefinitely", "pr_createdAt": "2020-07-02T21:37:54Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4373", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzQxOA==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449303418", "bodyText": "This code is almost a copy paste of the code above, but in one you check for a NULL value and here you checked for a NULL and emptiness. I would create an helper method and avoid the duplication.", "author": "nmco", "createdAt": "2020-07-02T23:07:44Z", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -764,6 +796,35 @@ private InputStream getHttpInputStream(URL styleUrl) throws IOException {\n         }\n     }\n \n+    /** Executes the HTTP request with the max request time settings. */\n+    private CloseableHttpResponse executeRequest(HttpCacheContext cacheContext, HttpGet httpget)\n+            throws IOException, ClientProtocolException {\n+        int hardTimeout = 60000;\n+        String maxTimeStr =\n+                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE);\n+        if (StringUtils.isNotEmpty(maxTimeStr)) {", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYwMzE5MA==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449603190", "bodyText": "Makes sense, adding it.", "author": "fernandor777", "createdAt": "2020-07-03T14:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzQxOA=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\nindex f006467612..10d02a5863 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n\n@@ -799,19 +786,8 @@ public class GetMapKvpRequestReader extends KvpRequestReader implements Disposab\n     /** Executes the HTTP request with the max request time settings. */\n     private CloseableHttpResponse executeRequest(HttpCacheContext cacheContext, HttpGet httpget)\n             throws IOException, ClientProtocolException {\n-        int hardTimeout = 60000;\n-        String maxTimeStr =\n-                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE);\n-        if (StringUtils.isNotEmpty(maxTimeStr)) {\n-            try {\n-                hardTimeout = Integer.parseInt(maxTimeStr);\n-            } catch (NumberFormatException ex) {\n-                LOGGER.log(\n-                        Level.FINE,\n-                        \"Bad number format on mas request time variable, proceeding to use the default.\",\n-                        ex);\n-            }\n-        }\n+        int hardTimeout =\n+                getIntGlobalVariable(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE, 60000);\n         TimerTask task =\n                 new TimerTask() {\n                     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzUwNQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449303505", "bodyText": "Worth checking for emptiness like you do bellow?", "author": "nmco", "createdAt": "2020-07-02T23:08:05Z", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -164,6 +179,23 @@ public void handleServiceChange(\n                 (CacheConfiguration) wms.getRemoteResourcesCacheConfiguration().clone());\n     }\n \n+    private int getTimeoutMillis() {\n+        String timeoutStr =\n+                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE);\n+        try {\n+            if (timeoutStr != null) {", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMDkyMQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449610921", "bodyText": "Replacing this with a common task method", "author": "fernandor777", "createdAt": "2020-07-03T14:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\nindex f006467612..10d02a5863 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n\n@@ -180,20 +180,7 @@ public class GetMapKvpRequestReader extends KvpRequestReader implements Disposab\n     }\n \n     private int getTimeoutMillis() {\n-        String timeoutStr =\n-                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE);\n-        try {\n-            if (timeoutStr != null) {\n-                int timeout = Integer.parseInt(timeoutStr);\n-                return timeout;\n-            }\n-        } catch (NumberFormatException ex) {\n-            LOGGER.log(\n-                    Level.FINE,\n-                    \"Number format exception trying to parse the connection timeout global variable\",\n-                    ex);\n-        }\n-        return 30000;\n+        return getIntGlobalVariable(GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE, 30000);\n     }\n \n     private synchronized void createHttpClient(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDM0Mw==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449304343", "bodyText": "Basically here you are swallowing the exception and use the default value:\n\nThis should be warning, not a debug log message.\nYou log message should be improved, it should log the value provided by the user and log the default value that will be used.\n3, Your log message should have a better context, onnection timeout is a bit too generic.", "author": "nmco", "createdAt": "2020-07-02T23:11:41Z", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -164,6 +179,23 @@ public void handleServiceChange(\n                 (CacheConfiguration) wms.getRemoteResourcesCacheConfiguration().clone());\n     }\n \n+    private int getTimeoutMillis() {\n+        String timeoutStr =\n+                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE);\n+        try {\n+            if (timeoutStr != null) {\n+                int timeout = Integer.parseInt(timeoutStr);\n+                return timeout;\n+            }\n+        } catch (NumberFormatException ex) {\n+            LOGGER.log(\n+                    Level.FINE,\n+                    \"Number format exception trying to parse the connection timeout global variable\",", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMTM2OQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449611369", "bodyText": "Changed with better logging on a common task method", "author": "fernandor777", "createdAt": "2020-07-03T14:30:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDM0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\nindex f006467612..10d02a5863 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n\n@@ -180,20 +180,7 @@ public class GetMapKvpRequestReader extends KvpRequestReader implements Disposab\n     }\n \n     private int getTimeoutMillis() {\n-        String timeoutStr =\n-                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE);\n-        try {\n-            if (timeoutStr != null) {\n-                int timeout = Integer.parseInt(timeoutStr);\n-                return timeout;\n-            }\n-        } catch (NumberFormatException ex) {\n-            LOGGER.log(\n-                    Level.FINE,\n-                    \"Number format exception trying to parse the connection timeout global variable\",\n-                    ex);\n-        }\n-        return 30000;\n+        return getIntGlobalVariable(GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE, 30000);\n     }\n \n     private synchronized void createHttpClient(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDQ5Ng==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449304496", "bodyText": "Same comments as  above.", "author": "nmco", "createdAt": "2020-07-02T23:12:23Z", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -764,6 +796,35 @@ private InputStream getHttpInputStream(URL styleUrl) throws IOException {\n         }\n     }\n \n+    /** Executes the HTTP request with the max request time settings. */\n+    private CloseableHttpResponse executeRequest(HttpCacheContext cacheContext, HttpGet httpget)\n+            throws IOException, ClientProtocolException {\n+        int hardTimeout = 60000;\n+        String maxTimeStr =\n+                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE);\n+        if (StringUtils.isNotEmpty(maxTimeStr)) {\n+            try {\n+                hardTimeout = Integer.parseInt(maxTimeStr);\n+            } catch (NumberFormatException ex) {\n+                LOGGER.log(", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMTQ4OA==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449611488", "bodyText": "Done", "author": "fernandor777", "createdAt": "2020-07-03T14:30:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDQ5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\nindex f006467612..10d02a5863 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n\n@@ -799,19 +786,8 @@ public class GetMapKvpRequestReader extends KvpRequestReader implements Disposab\n     /** Executes the HTTP request with the max request time settings. */\n     private CloseableHttpResponse executeRequest(HttpCacheContext cacheContext, HttpGet httpget)\n             throws IOException, ClientProtocolException {\n-        int hardTimeout = 60000;\n-        String maxTimeStr =\n-                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE);\n-        if (StringUtils.isNotEmpty(maxTimeStr)) {\n-            try {\n-                hardTimeout = Integer.parseInt(maxTimeStr);\n-            } catch (NumberFormatException ex) {\n-                LOGGER.log(\n-                        Level.FINE,\n-                        \"Bad number format on mas request time variable, proceeding to use the default.\",\n-                        ex);\n-            }\n-        }\n+        int hardTimeout =\n+                getIntGlobalVariable(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE, 60000);\n         TimerTask task =\n                 new TimerTask() {\n                     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDcxNQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449304715", "bodyText": "You should has some comment explaining what's going on here, I guess you use the time to implement the time-out?", "author": "nmco", "createdAt": "2020-07-02T23:13:08Z", "path": "src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java", "diffHunk": "@@ -764,6 +796,35 @@ private InputStream getHttpInputStream(URL styleUrl) throws IOException {\n         }\n     }\n \n+    /** Executes the HTTP request with the max request time settings. */\n+    private CloseableHttpResponse executeRequest(HttpCacheContext cacheContext, HttpGet httpget)\n+            throws IOException, ClientProtocolException {\n+        int hardTimeout = 60000;\n+        String maxTimeStr =\n+                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE);\n+        if (StringUtils.isNotEmpty(maxTimeStr)) {\n+            try {\n+                hardTimeout = Integer.parseInt(maxTimeStr);\n+            } catch (NumberFormatException ex) {\n+                LOGGER.log(\n+                        Level.FINE,\n+                        \"Bad number format on mas request time variable, proceeding to use the default.\",\n+                        ex);\n+            }\n+        }\n+        TimerTask task =", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNTE4Mw==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449305183", "bodyText": "Could this be a better option?", "author": "nmco", "createdAt": "2020-07-02T23:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDcxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2MzI0MQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449463241", "bodyText": "Yeah, the timeout should be defined at the http client level.", "author": "aaime", "createdAt": "2020-07-03T08:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDcxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYwMTIwMg==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449601202", "bodyText": "The provided link is about the Connection Timeout.  This timer bound execution is for limiting the max whole-request time, for which there is not an available setting on HttpClient API. This approach follows a recommended strategy for aborting the request with a hard time limit from some technical articles about HttpClient usage.\nConnection and Socket data packet timeout configuration is provided on the GETMAPKVPREQUESTREADER_TIMEOUT global setting and sets the connection and socket timeout in the HttpClient API since it's available.", "author": "fernandor777", "createdAt": "2020-07-03T14:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDcxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0MzkzNQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449643935", "bodyText": "Got it, it's similar to the WMS request limits. Good idea to have this one too, to avoid a variant of a slow DOS attack (the response is given, just to very slowly that the full SLD returns in hours or more, e.g., one char every few minutes)", "author": "aaime", "createdAt": "2020-07-03T15:56:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDcxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\nindex f006467612..10d02a5863 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/map/GetMapKvpRequestReader.java\n\n@@ -799,19 +786,8 @@ public class GetMapKvpRequestReader extends KvpRequestReader implements Disposab\n     /** Executes the HTTP request with the max request time settings. */\n     private CloseableHttpResponse executeRequest(HttpCacheContext cacheContext, HttpGet httpget)\n             throws IOException, ClientProtocolException {\n-        int hardTimeout = 60000;\n-        String maxTimeStr =\n-                GeoServerExtensions.getProperty(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE);\n-        if (StringUtils.isNotEmpty(maxTimeStr)) {\n-            try {\n-                hardTimeout = Integer.parseInt(maxTimeStr);\n-            } catch (NumberFormatException ex) {\n-                LOGGER.log(\n-                        Level.FINE,\n-                        \"Bad number format on mas request time variable, proceeding to use the default.\",\n-                        ex);\n-            }\n-        }\n+        int hardTimeout =\n+                getIntGlobalVariable(GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE, 60000);\n         TimerTask task =\n                 new TimerTask() {\n                     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNTYxMg==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449305612", "bodyText": "Left over?", "author": "nmco", "createdAt": "2020-07-02T23:16:55Z", "path": "src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java", "diffHunk": "@@ -1111,4 +1126,121 @@ public void testTransparencyValueInInspireGetMapRequest() throws Exception {\n         service.setCiteCompliant(false);\n         geoServer.save(service);\n     }\n+\n+    /** Tests the timeout parameter and the max execution time. */\n+    public void testSldTooLongLookup() throws Exception {\n+        HttpServer server = createServer();\n+        System.setProperty(\n+                GetMapKvpRequestReader.GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE, \"1000\");\n+        try {\n+            WMS wms = new WMS(getGeoServer());\n+            reader = new GetMapKvpRequestReader(wms);\n+            server.start();\n+            int port = server.getAddress().getPort();\n+\n+            // nothing matches the required style name\n+            HashMap kvp = new HashMap();\n+            URL url = new URL(\"http://localhost:\" + port + \"/sld/style.sld\");\n+            kvp.put(\"sld\", URLDecoder.decode(url.toExternalForm(), \"UTF-8\"));\n+            kvp.put(\n+                    \"layers\",\n+                    MockData.BASIC_POLYGONS.getPrefix()\n+                            + \":\"\n+                            + MockData.BASIC_POLYGONS.getLocalPart());\n+            kvp.put(\"styles\", \"ThisStyleDoesNotExists\");\n+\n+            GetMapRequest request = (GetMapRequest) reader.createRequest();\n+            Instant startInstant = Instant.now();\n+            try {\n+                reader.setLaxStyleMatchAllowed(false);\n+                request =\n+                        (GetMapRequest)\n+                                reader.read(request, parseKvp(kvp), caseInsensitiveKvp(kvp));\n+                fail(\"The style looked up, 'ThisStyleDoesNotExists', should not have been found\");\n+            } catch (ServiceException e) {\n+                // System.out.println(e);\n+            }\n+            long millis = Instant.now().toEpochMilli() - startInstant.toEpochMilli();\n+            assertTrue(\"Max timeout should be 2 seconds\", millis < 2000);\n+        } finally {\n+            server.stop(0);\n+            System.clearProperty(GetMapKvpRequestReader.GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE);\n+        }\n+    }\n+\n+    /** Tests the timeout parameter. */\n+    public void testSldTimeoutLookup() throws Exception {\n+        HttpServer server = createServer();\n+        System.setProperty(GetMapKvpRequestReader.GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE, \"1000\");\n+        try {\n+            WMS wms = new WMS(getGeoServer());\n+            reader = new GetMapKvpRequestReader(wms);\n+            server.start();\n+            int port = server.getAddress().getPort();\n+\n+            // nothing matches the required style name\n+            HashMap kvp = new HashMap();\n+            URL url = new URL(\"http://localhost:\" + port + \"/sld/style.sld\");\n+            kvp.put(\"sld\", URLDecoder.decode(url.toExternalForm(), \"UTF-8\"));\n+            kvp.put(\n+                    \"layers\",\n+                    MockData.BASIC_POLYGONS.getPrefix()\n+                            + \":\"\n+                            + MockData.BASIC_POLYGONS.getLocalPart());\n+            kvp.put(\"styles\", \"ThisStyleDoesNotExists\");\n+\n+            GetMapRequest request = (GetMapRequest) reader.createRequest();\n+            Instant startInstant = Instant.now();\n+            try {\n+                reader.setLaxStyleMatchAllowed(false);\n+                request =\n+                        (GetMapRequest)\n+                                reader.read(request, parseKvp(kvp), caseInsensitiveKvp(kvp));\n+                fail(\"The style looked up, 'ThisStyleDoesNotExists', should not have been found\");\n+            } catch (ServiceException e) {\n+                // System.out.println(e);\n+            }\n+            long millis = Instant.now().toEpochMilli() - startInstant.toEpochMilli();\n+            assertTrue(\"Max timeout should be 2 seconds\", millis < 2000);\n+        } finally {\n+            server.stop(0);\n+            System.clearProperty(GetMapKvpRequestReader.GETMAPKVPREQUESTREADER_TIMEOUT_VARIABLE);\n+        }\n+    }\n+\n+    /** Creates a HTTP embedded server with a dynamic port for testing the configures timeout. */\n+    private HttpServer createServer() throws IOException {\n+        HttpServer server = HttpServer.create(new InetSocketAddress(\"localhost\", 0), 0);\n+        LOG.log(\n+                Level.INFO,\n+                \"Creating a mock http server at port: {0}\",\n+                server.getAddress().getPort());\n+        server.createContext(\"/sld\", createLongResponseHandler());\n+        ThreadPoolExecutor threadPoolExecutor =\n+                (ThreadPoolExecutor) Executors.newFixedThreadPool(2);\n+        server.setExecutor(threadPoolExecutor);\n+\n+        return server;\n+    }\n+\n+    private HttpHandler createLongResponseHandler() {\n+        HttpHandler handler =\n+                new HttpHandler() {\n+\n+                    @Override\n+                    public void handle(com.sun.net.httpserver.HttpExchange t) throws IOException {\n+                        try {\n+                            t.sendResponseHeaders(200, 5000000000l);\n+                            TimeUnit.SECONDS.sleep(4);\n+                            OutputStream outputStream = t.getResponseBody();\n+                            outputStream.write(\"This is a bad style\".getBytes());\n+                            outputStream.flush();\n+                            outputStream.close();\n+                        } catch (InterruptedException e) {\n+                            e.printStackTrace();", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMjU3Mg==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449612572", "bodyText": "Yes, thanks, removing", "author": "fernandor777", "createdAt": "2020-07-03T14:33:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNTYxMg=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java b/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java\nindex d74629c808..8413976c33 100644\n--- a/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java\n+++ b/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java\n\n@@ -1158,7 +1158,7 @@ public class GetMapKvpRequestReaderTest extends KvpRequestReaderTestSupport {\n                                 reader.read(request, parseKvp(kvp), caseInsensitiveKvp(kvp));\n                 fail(\"The style looked up, 'ThisStyleDoesNotExists', should not have been found\");\n             } catch (ServiceException e) {\n-                // System.out.println(e);\n+                LOG.log(Level.INFO, e.getMessage(), e);\n             }\n             long millis = Instant.now().toEpochMilli() - startInstant.toEpochMilli();\n             assertTrue(\"Max timeout should be 2 seconds\", millis < 2000);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNTczNQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449305735", "bodyText": "Left over?", "author": "nmco", "createdAt": "2020-07-02T23:17:23Z", "path": "src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java", "diffHunk": "@@ -1111,4 +1126,121 @@ public void testTransparencyValueInInspireGetMapRequest() throws Exception {\n         service.setCiteCompliant(false);\n         geoServer.save(service);\n     }\n+\n+    /** Tests the timeout parameter and the max execution time. */\n+    public void testSldTooLongLookup() throws Exception {\n+        HttpServer server = createServer();\n+        System.setProperty(\n+                GetMapKvpRequestReader.GETMAPKVPREQUESTREADER_MAXREQUEST_TIME_VARIABLE, \"1000\");\n+        try {\n+            WMS wms = new WMS(getGeoServer());\n+            reader = new GetMapKvpRequestReader(wms);\n+            server.start();\n+            int port = server.getAddress().getPort();\n+\n+            // nothing matches the required style name\n+            HashMap kvp = new HashMap();\n+            URL url = new URL(\"http://localhost:\" + port + \"/sld/style.sld\");\n+            kvp.put(\"sld\", URLDecoder.decode(url.toExternalForm(), \"UTF-8\"));\n+            kvp.put(\n+                    \"layers\",\n+                    MockData.BASIC_POLYGONS.getPrefix()\n+                            + \":\"\n+                            + MockData.BASIC_POLYGONS.getLocalPart());\n+            kvp.put(\"styles\", \"ThisStyleDoesNotExists\");\n+\n+            GetMapRequest request = (GetMapRequest) reader.createRequest();\n+            Instant startInstant = Instant.now();\n+            try {\n+                reader.setLaxStyleMatchAllowed(false);\n+                request =\n+                        (GetMapRequest)\n+                                reader.read(request, parseKvp(kvp), caseInsensitiveKvp(kvp));\n+                fail(\"The style looked up, 'ThisStyleDoesNotExists', should not have been found\");\n+            } catch (ServiceException e) {\n+                // System.out.println(e);", "originalCommit": "35fe467eea32b0899d4fda836f01d1f3f4842c62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMzIzMg==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449613232", "bodyText": "Yes, removing", "author": "fernandor777", "createdAt": "2020-07-03T14:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNTczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "chunk": "diff --git a/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java b/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java\nindex d74629c808..8413976c33 100644\n--- a/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java\n+++ b/src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java\n\n@@ -1158,7 +1158,7 @@ public class GetMapKvpRequestReaderTest extends KvpRequestReaderTestSupport {\n                                 reader.read(request, parseKvp(kvp), caseInsensitiveKvp(kvp));\n                 fail(\"The style looked up, 'ThisStyleDoesNotExists', should not have been found\");\n             } catch (ServiceException e) {\n-                // System.out.println(e);\n+                LOG.log(Level.INFO, e.getMessage(), e);\n             }\n             long millis = Instant.now().toEpochMilli() - startInstant.toEpochMilli();\n             assertTrue(\"Max timeout should be 2 seconds\", millis < 2000);\n"}}, {"oid": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "url": "https://github.com/geoserver/geoserver/commit/2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "message": "[GEOS-9555] WMS remote SLD fetching lacks a timeout, can block the GetMap request indefinitely", "committedDate": "2020-07-03T14:49:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY0NTQxMQ==", "url": "https://github.com/geoserver/geoserver/pull/4373#discussion_r449645411", "bodyText": "Hmmm... com.sun? This is not a public API... however, it does seem to work even in JDK 11, so I guess it won't be a problem short term.\nAs a possible alternative, see wiremock with random ports: http://wiremock.org/docs/getting-started/\nBut I would not get crazy about it, it's just a test after all, probably good as is.", "author": "aaime", "createdAt": "2020-07-03T16:00:45Z", "path": "src/wms/src/test/java/org/geoserver/wms/map/GetMapKvpRequestReaderTest.java", "diffHunk": "@@ -9,20 +9,31 @@\n import static org.hamcrest.CoreMatchers.not;\n import static org.junit.Assert.assertThat;\n \n+import com.sun.net.httpserver.HttpHandler;\n+import com.sun.net.httpserver.HttpServer;", "originalCommit": "2ef3a4f2c60f4a84e7b27d1b51c5ecc5a850ba10", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "86a50499a870782ce70927f33839a1aa607c92d3", "url": "https://github.com/geoserver/geoserver/commit/86a50499a870782ce70927f33839a1aa607c92d3", "message": "[GEOS-9555] WMS remote SLD fetching lacks a timeout, can block the GetMap request indefinitely", "committedDate": "2020-07-22T21:07:21Z", "type": "forcePushed"}, {"oid": "f3afc43732d83c4bd1f9796a82517d5080773dc8", "url": "https://github.com/geoserver/geoserver/commit/f3afc43732d83c4bd1f9796a82517d5080773dc8", "message": "[GEOS-9555] WMS remote SLD fetching lacks a timeout, can block the GetMap request indefinitely", "committedDate": "2020-08-18T04:21:46Z", "type": "commit"}, {"oid": "f3afc43732d83c4bd1f9796a82517d5080773dc8", "url": "https://github.com/geoserver/geoserver/commit/f3afc43732d83c4bd1f9796a82517d5080773dc8", "message": "[GEOS-9555] WMS remote SLD fetching lacks a timeout, can block the GetMap request indefinitely", "committedDate": "2020-08-18T04:21:46Z", "type": "forcePushed"}]}