{"pr_number": 4571, "pr_title": "Cql json object api filter1", "pr_createdAt": "2020-11-16T19:14:19Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4571", "timeline": [{"oid": "adcfb218499592c496bba25bc66e0dddba97703d", "url": "https://github.com/geoserver/geoserver/commit/adcfb218499592c496bba25bc66e0dddba97703d", "message": "started on integration", "committedDate": "2020-11-03T20:24:42Z", "type": "commit"}, {"oid": "26179e5a8d7d424ffe6abc93271eef012ce22b74", "url": "https://github.com/geoserver/geoserver/commit/26179e5a8d7d424ffe6abc93271eef012ce22b74", "message": "confirmed that the filter conversion works", "committedDate": "2020-11-04T17:41:11Z", "type": "commit"}, {"oid": "4b07c8aa7d4e7a30177d3d739dc6580876ad6b3c", "url": "https://github.com/geoserver/geoserver/commit/4b07c8aa7d4e7a30177d3d739dc6580876ad6b3c", "message": "Merge branch 'master' of github.com:geoserver/geoserver into cql-json-object-api-filter1", "committedDate": "2020-11-13T17:14:48Z", "type": "commit"}, {"oid": "dfd906b83d0e7e45220387df95186988326e0ecf", "url": "https://github.com/geoserver/geoserver/commit/dfd906b83d0e7e45220387df95186988326e0ecf", "message": "comments cleanup", "committedDate": "2020-11-16T18:42:01Z", "type": "commit"}, {"oid": "ede5675601da8415379afc6418a4dd7431e53211", "url": "https://github.com/geoserver/geoserver/commit/ede5675601da8415379afc6418a4dd7431e53211", "message": "more cleanup", "committedDate": "2020-11-16T19:07:45Z", "type": "commit"}, {"oid": "d4704ba6537d42917f43c94889b8798fb1f970ed", "url": "https://github.com/geoserver/geoserver/commit/d4704ba6537d42917f43c94889b8798fb1f970ed", "message": "started on integration\n\nconfirmed that the filter conversion works\n\ncomments cleanup\n\nmore cleanup", "committedDate": "2020-11-16T19:11:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxOTMzNA==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r524819334", "bodyText": "Not part of the change, but liters doesn't make sense in this sentence. Maybe geometry reference?", "author": "bradh", "createdAt": "2020-11-17T01:09:37Z", "path": "src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java", "diffHunk": "@@ -17,35 +19,53 @@\n \n     private static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n     public static String CQL_TEXT = \"cql-text\";\n+    public static String CQL_OBJECT = \"cql-object\";\n \n     /**\n-     * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT}) and\n-     * defaults the geometry liters in spatial filters to CRS84\n+     * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT} and\n+     * {@link #CQL_OBJECT}) and defaults the geometry liters in spatial filters to CRS84", "originalCommit": "ede5675601da8415379afc6418a4dd7431e53211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NTg1NQ==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528785855", "bodyText": "It's a typo, was supposed to be literals.", "author": "aaime", "createdAt": "2020-11-23T15:28:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxOTMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkwODc0OQ==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528908749", "bodyText": "fixed", "author": "turingtestfail", "createdAt": "2020-11-23T18:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxOTMzNA=="}], "type": "inlineReview", "revised_code": {"commit": "cd086b1a36219f64a963025b5e5012e0777a44cb", "chunk": "diff --git a/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java b/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\nindex 7bcecd3cd2..d1796050ca 100644\n--- a/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\n+++ b/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\n\n@@ -19,11 +19,11 @@ public class APIFilterParser {\n \n     private static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n     public static String CQL_TEXT = \"cql-text\";\n-    public static String CQL_OBJECT = \"cql-object\";\n+    public static String CQL_JSON = \"cql-json\";\n \n     /**\n      * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT} and\n-     * {@link #CQL_OBJECT}) and defaults the geometry liters in spatial filters to CRS84\n+     * {@link #CQL_OBJECT}) and defaults the geometry literals in spatial filters to CRS84\n      */\n     public Filter parse(String filter, String filterLang) {\n         if (filter == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxOTQ5Mw==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r524819493", "bodyText": "is -> are?", "author": "bradh", "createdAt": "2020-11-17T01:10:06Z", "path": "src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java", "diffHunk": "@@ -17,35 +19,53 @@\n \n     private static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n     public static String CQL_TEXT = \"cql-text\";\n+    public static String CQL_OBJECT = \"cql-object\";\n \n     /**\n-     * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT}) and\n-     * defaults the geometry liters in spatial filters to CRS84\n+     * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT} and\n+     * {@link #CQL_OBJECT}) and defaults the geometry liters in spatial filters to CRS84\n      */\n     public Filter parse(String filter, String filterLang) {\n         if (filter == null) {\n             return null;\n         }\n \n-        // right now there is a spec only for cql-text, will be extended when more languages are\n+        // right now there is a spec only for cql-text and cql-object, will be extended when more\n+        // languages are\n         // recognized (could have its own extension point too, if we want to allow easy extension\n         // with new custom languages)\n-        if (filterLang != null && !filterLang.equals(CQL_TEXT)) {\n+        if (filterLang != null\n+                && (!filterLang.equals(CQL_TEXT) && !filterLang.equals(CQL_OBJECT))) {\n             throw new InvalidParameterValueException(\n-                    \"Only supported filter-lang at the moment is \"\n+                    \"Only supported filter-lang options at the moment is \"", "originalCommit": "ede5675601da8415379afc6418a4dd7431e53211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkwODgxOA==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528908818", "bodyText": "fixed", "author": "turingtestfail", "createdAt": "2020-11-23T18:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxOTQ5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cd086b1a36219f64a963025b5e5012e0777a44cb", "chunk": "diff --git a/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java b/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\nindex 7bcecd3cd2..d1796050ca 100644\n--- a/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\n+++ b/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\n\n@@ -19,11 +19,11 @@ public class APIFilterParser {\n \n     private static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n     public static String CQL_TEXT = \"cql-text\";\n-    public static String CQL_OBJECT = \"cql-object\";\n+    public static String CQL_JSON = \"cql-json\";\n \n     /**\n      * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT} and\n-     * {@link #CQL_OBJECT}) and defaults the geometry liters in spatial filters to CRS84\n+     * {@link #CQL_OBJECT}) and defaults the geometry literals in spatial filters to CRS84\n      */\n     public Filter parse(String filter, String filterLang) {\n         if (filter == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NTU2MA==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528785560", "bodyText": "According to spec, should be \"cql-json\":\nhttps://github.com/opengeospatial/ogcapi-features/blob/master/extensions/cql/standard/clause_6_filter.adoc#parameter-filter-lang\nLooks like", "author": "aaime", "createdAt": "2020-11-23T15:27:36Z", "path": "src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java", "diffHunk": "@@ -17,35 +19,53 @@\n \n     private static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n     public static String CQL_TEXT = \"cql-text\";\n+    public static String CQL_OBJECT = \"cql-object\";", "originalCommit": "ede5675601da8415379afc6418a4dd7431e53211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkwODg5MA==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528908890", "bodyText": "fixed", "author": "turingtestfail", "createdAt": "2020-11-23T18:23:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4NTU2MA=="}], "type": "inlineReview", "revised_code": {"commit": "cd086b1a36219f64a963025b5e5012e0777a44cb", "chunk": "diff --git a/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java b/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\nindex 7bcecd3cd2..d1796050ca 100644\n--- a/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\n+++ b/src/community/ogcapi/ogcapi-core/src/main/java/org/geoserver/api/APIFilterParser.java\n\n@@ -19,11 +19,11 @@ public class APIFilterParser {\n \n     private static final FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n     public static String CQL_TEXT = \"cql-text\";\n-    public static String CQL_OBJECT = \"cql-object\";\n+    public static String CQL_JSON = \"cql-json\";\n \n     /**\n      * Parses the filter over the supported filter languages (right now, only {@link #CQL_TEXT} and\n-     * {@link #CQL_OBJECT}) and defaults the geometry liters in spatial filters to CRS84\n+     * {@link #CQL_OBJECT}) and defaults the geometry literals in spatial filters to CRS84\n      */\n     public Filter parse(String filter, String filterLang) {\n         if (filter == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4Njk4MQ==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528786981", "bodyText": "This part conflicts with master, cannot merge because of it.", "author": "aaime", "createdAt": "2020-11-23T15:29:29Z", "path": "src/community/ogcapi/dggs/dggs-clickhouse/src/test/java/org/geotools/dggs/clickhouse/ClickHouseGeometrylessOnlineTest.java", "diffHunk": "@@ -28,7 +28,7 @@ protected JDBCGeometrylessTestSetup createTestSetup() {\n     }\n \n     protected HashMap createDataStoreFactoryParams() throws Exception {\n-        HashMap params = super.createDataStoreFactoryParams();\n+        HashMap params = new HashMap(super.createDataStoreFactoryParams());", "originalCommit": "ede5675601da8415379afc6418a4dd7431e53211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkwODk2NQ==", "url": "https://github.com/geoserver/geoserver/pull/4571#discussion_r528908965", "bodyText": "fixed", "author": "turingtestfail", "createdAt": "2020-11-23T18:23:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4Njk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd086b1a36219f64a963025b5e5012e0777a44cb", "chunk": "diff --git a/src/community/ogcapi/dggs/dggs-clickhouse/src/test/java/org/geotools/dggs/clickhouse/ClickHouseGeometrylessOnlineTest.java b/src/community/ogcapi/dggs/dggs-clickhouse/src/test/java/org/geotools/dggs/clickhouse/ClickHouseGeometrylessOnlineTest.java\nindex ae05372a60..4871916fdd 100644\n--- a/src/community/ogcapi/dggs/dggs-clickhouse/src/test/java/org/geotools/dggs/clickhouse/ClickHouseGeometrylessOnlineTest.java\n+++ b/src/community/ogcapi/dggs/dggs-clickhouse/src/test/java/org/geotools/dggs/clickhouse/ClickHouseGeometrylessOnlineTest.java\n\n@@ -28,7 +28,7 @@ public class ClickHouseGeometrylessOnlineTest extends JDBCGeometrylessOnlineTest\n     }\n \n     protected HashMap createDataStoreFactoryParams() throws Exception {\n-        HashMap params = new HashMap(super.createDataStoreFactoryParams());\n+        HashMap params = super.createDataStoreFactoryParams();\n         params.put(JDBCDataStoreFactory.SCHEMA.key, params.get(JDBCDataStoreFactory.DATABASE.key));\n         return params;\n     }\n"}}, {"oid": "cd086b1a36219f64a963025b5e5012e0777a44cb", "url": "https://github.com/geoserver/geoserver/commit/cd086b1a36219f64a963025b5e5012e0777a44cb", "message": "PR review corrections", "committedDate": "2020-11-23T18:18:40Z", "type": "commit"}, {"oid": "9fd9c083321de7b1cfb842bf82190650a21b2d68", "url": "https://github.com/geoserver/geoserver/commit/9fd9c083321de7b1cfb842bf82190650a21b2d68", "message": "Merge branch 'cql-json-object-api-filter1' of github.com:turingtestfail/geoserver into cql-json-object-api-filter1", "committedDate": "2020-11-23T18:21:05Z", "type": "commit"}, {"oid": "bbc09bd6241208e553a53d4147a4a0815130132e", "url": "https://github.com/geoserver/geoserver/commit/bbc09bd6241208e553a53d4147a4a0815130132e", "message": "Merge branch 'master' into cql-json-object-api-filter1", "committedDate": "2020-11-23T18:22:59Z", "type": "commit"}, {"oid": "c8a71ee86fb12efbc9b0b8f92cacd9e4a431cfc4", "url": "https://github.com/geoserver/geoserver/commit/c8a71ee86fb12efbc9b0b8f92cacd9e4a431cfc4", "message": "reformat", "committedDate": "2020-11-24T13:32:33Z", "type": "commit"}, {"oid": "99d08078c1155eea9923ba6d339b6a84beeb4b8c", "url": "https://github.com/geoserver/geoserver/commit/99d08078c1155eea9923ba6d339b6a84beeb4b8c", "message": "Merge branch 'cql-json-object-api-filter1' of github.com:turingtestfail/geoserver into cql-json-object-api-filter1", "committedDate": "2020-11-24T13:33:05Z", "type": "commit"}]}