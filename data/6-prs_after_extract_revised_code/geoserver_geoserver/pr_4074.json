{"pr_number": 4074, "pr_title": "[GEOS-9508] [GEOS-6175] Static content not displayed + Text doesn't fit the legend box", "pr_createdAt": "2020-02-20T11:15:12Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4074", "timeline": [{"oid": "0517f6b2d98dd8370c17a2dc5b0c826f9cb0ed61", "url": "https://github.com/geoserver/geoserver/commit/0517f6b2d98dd8370c17a2dc5b0c826f9cb0ed61", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-20T11:18:43Z", "type": "forcePushed"}, {"oid": "f81711307f459bc13e6779442964b13bc180463e", "url": "https://github.com/geoserver/geoserver/commit/f81711307f459bc13e6779442964b13bc180463e", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-20T11:24:22Z", "type": "forcePushed"}, {"oid": "45df530b046d16064e57a7e3b93d3e1f8df7435f", "url": "https://github.com/geoserver/geoserver/commit/45df530b046d16064e57a7e3b93d3e1f8df7435f", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-20T12:32:43Z", "type": "forcePushed"}, {"oid": "0a88580a436b5ab0e7ddb87981970b3047e325df", "url": "https://github.com/geoserver/geoserver/commit/0a88580a436b5ab0e7ddb87981970b3047e325df", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-20T12:51:44Z", "type": "forcePushed"}, {"oid": "7a4366e5164f3b8c9d85424c4ac90ea37041ec35", "url": "https://github.com/geoserver/geoserver/commit/7a4366e5164f3b8c9d85424c4ac90ea37041ec35", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-20T14:41:01Z", "type": "forcePushed"}, {"oid": "50110cf44ec2f8bd14f24d0d71a2e19c49cd71f0", "url": "https://github.com/geoserver/geoserver/commit/50110cf44ec2f8bd14f24d0d71a2e19c49cd71f0", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-21T09:05:52Z", "type": "forcePushed"}, {"oid": "3596ef61854461dd1324fe22a5d1766d84988be1", "url": "https://github.com/geoserver/geoserver/commit/3596ef61854461dd1324fe22a5d1766d84988be1", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-21T11:09:52Z", "type": "forcePushed"}, {"oid": "2335d2195e675e4ac242297bcd8692bb22db3aa9", "url": "https://github.com/geoserver/geoserver/commit/2335d2195e675e4ac242297bcd8692bb22db3aa9", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-21T11:13:42Z", "type": "forcePushed"}, {"oid": "5b56657211bcf6e3628a53d7304b70ba117a5590", "url": "https://github.com/geoserver/geoserver/commit/5b56657211bcf6e3628a53d7304b70ba117a5590", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-21T13:13:14Z", "type": "forcePushed"}, {"oid": "e8c9b73cb9e44a2a4a0f2ad92ed3d690d5a1136b", "url": "https://github.com/geoserver/geoserver/commit/e8c9b73cb9e44a2a4a0f2ad92ed3d690d5a1136b", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-02-21T14:08:52Z", "type": "forcePushed"}, {"oid": "6d02bdefd4d2847d1de8e7082fc22dbd6422be2e", "url": "https://github.com/geoserver/geoserver/commit/6d02bdefd4d2847d1de8e7082fc22dbd6422be2e", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-21T15:47:38Z", "type": "forcePushed"}, {"oid": "750835617c7d52ad340a805b6347ed30e0e9e63e", "url": "https://github.com/geoserver/geoserver/commit/750835617c7d52ad340a805b6347ed30e0e9e63e", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-24T07:57:20Z", "type": "forcePushed"}, {"oid": "4e58d038f9d80fe26f44a805409eb9fc6ffea996", "url": "https://github.com/geoserver/geoserver/commit/4e58d038f9d80fe26f44a805409eb9fc6ffea996", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-24T10:07:20Z", "type": "forcePushed"}, {"oid": "38aef34b1fc5c425934751b810061b56c3b1dab1", "url": "https://github.com/geoserver/geoserver/commit/38aef34b1fc5c425934751b810061b56c3b1dab1", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-24T11:11:03Z", "type": "forcePushed"}, {"oid": "c6875ccdfefb6a06fe9b0a4d2e1c1e583851e2c6", "url": "https://github.com/geoserver/geoserver/commit/c6875ccdfefb6a06fe9b0a4d2e1c1e583851e2c6", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-24T18:34:11Z", "type": "forcePushed"}, {"oid": "2bbdd360c5562ae18c68670747fe47de0e37371a", "url": "https://github.com/geoserver/geoserver/commit/2bbdd360c5562ae18c68670747fe47de0e37371a", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-24T20:37:25Z", "type": "forcePushed"}, {"oid": "c600198eef4ff4316e733d406a9364ba6faf1017", "url": "https://github.com/geoserver/geoserver/commit/c600198eef4ff4316e733d406a9364ba6faf1017", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-24T21:22:32Z", "type": "forcePushed"}, {"oid": "9f679bd51be1f793115b861f60b1f13c0bf2de70", "url": "https://github.com/geoserver/geoserver/commit/9f679bd51be1f793115b861f60b1f13c0bf2de70", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-25T08:13:41Z", "type": "forcePushed"}, {"oid": "748da222c291a97dc81a58ac7f2602db0176c42f", "url": "https://github.com/geoserver/geoserver/commit/748da222c291a97dc81a58ac7f2602db0176c42f", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-25T08:50:45Z", "type": "forcePushed"}, {"oid": "0725832dfad77baa9322fe31fecb28a7f5e3bffa", "url": "https://github.com/geoserver/geoserver/commit/0725832dfad77baa9322fe31fecb28a7f5e3bffa", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-02-25T11:10:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MjA3MA==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r385792070", "bodyText": "This resolution dance, is this the only place where it needs to happen? No usage in UI for example?", "author": "aaime", "createdAt": "2020-02-28T16:26:12Z", "path": "src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java", "diffHunk": "@@ -293,4 +313,55 @@ private String findTitle(Layer layer, Catalog catalog) {\n         public BufferedImage legend;\n         public GetLegendGraphicRequest request;\n     }\n+\n+    private LegendInfo resolveLegendInfo(\n+            LegendInfo legendInfo, GetLegendGraphicRequest request, StyleInfo context) {\n+        if (legendInfo == null) {\n+            return null; // not available\n+        }\n+        String onlineResource = legendInfo.getOnlineResource();\n+        String baseUrl = request.getBaseUrl();\n+        if (onlineResource == null) {\n+            return null;\n+        }\n+        URL url = null;\n+        try {\n+            URI uri = new URI(onlineResource);\n+            GeoServerResourceLoader resources = wms.getCatalog().getResourceLoader();\n+            if (uri.isAbsolute()) {", "originalCommit": "0725832dfad77baa9322fe31fecb28a7f5e3bffa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNjcwNg==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r386316706", "bodyText": "No indeed it happens in the GetLegendGraphicKvpReader class. I change the code to use that method instead.", "author": "taba90", "createdAt": "2020-03-02T10:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MjA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "6bc0d7ece233e6ffbb7d61acf48629d3cac8d67e", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\nindex 423c5c7320..cf9e5ad05c 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n\n@@ -313,55 +323,4 @@ public class LegendDecoration extends AbstractDispatcherCallback implements MapD\n         public BufferedImage legend;\n         public GetLegendGraphicRequest request;\n     }\n-\n-    private LegendInfo resolveLegendInfo(\n-            LegendInfo legendInfo, GetLegendGraphicRequest request, StyleInfo context) {\n-        if (legendInfo == null) {\n-            return null; // not available\n-        }\n-        String onlineResource = legendInfo.getOnlineResource();\n-        String baseUrl = request.getBaseUrl();\n-        if (onlineResource == null) {\n-            return null;\n-        }\n-        URL url = null;\n-        try {\n-            URI uri = new URI(onlineResource);\n-            GeoServerResourceLoader resources = wms.getCatalog().getResourceLoader();\n-            if (uri.isAbsolute()) {\n-                if (baseUrl != null && onlineResource.startsWith(baseUrl + \"styles/\")) {\n-                    // convert relative to styles durectory\n-                    onlineResource = onlineResource.substring(baseUrl.length() + 7);\n-                } else {\n-                    legendInfo.setOnlineResource(new URL(onlineResource).toString());\n-                    return legendInfo; // an actual external graphic reference\n-                }\n-            } else {\n-                // not absolute, try relative to the style if available, otherwise search\n-                // in the styles directory\n-                if (context != null) {\n-                    GeoServerDataDirectory dd = new GeoServerDataDirectory(resources);\n-                    Resource styleParentResource = dd.get(context);\n-                    if (styleParentResource != null\n-                            && styleParentResource.getType() == Resource.Type.DIRECTORY) {\n-                        url =\n-                                URLs.fileToUrl(\n-                                        new File(\n-                                                styleParentResource.dir().getCanonicalPath(),\n-                                                onlineResource));\n-                    }\n-                }\n-            }\n-            if (url == null) {\n-                File styles = resources.findOrCreateDirectory(\"styles\");\n-                URL base = URLs.fileToUrl(styles);\n-                url = new URL(base, onlineResource);\n-            }\n-        } catch (Exception e) {\n-            return null; // Do not try this online resource\n-        }\n-        legendInfo.setOnlineResource(url.toExternalForm());\n-\n-        return legendInfo;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MjY0MQ==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r385792641", "bodyText": "Hmm... LegendInfo is part of the catalog configuration, are we sure that it can be modified just like this without side effects? Is it wrapped in a ModificationProxy at runtime? If so, unless it gets saved, there are no problems, otherwise, best to clone it before changing it.", "author": "aaime", "createdAt": "2020-02-28T16:27:12Z", "path": "src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java", "diffHunk": "@@ -293,4 +313,55 @@ private String findTitle(Layer layer, Catalog catalog) {\n         public BufferedImage legend;\n         public GetLegendGraphicRequest request;\n     }\n+\n+    private LegendInfo resolveLegendInfo(\n+            LegendInfo legendInfo, GetLegendGraphicRequest request, StyleInfo context) {\n+        if (legendInfo == null) {\n+            return null; // not available\n+        }\n+        String onlineResource = legendInfo.getOnlineResource();\n+        String baseUrl = request.getBaseUrl();\n+        if (onlineResource == null) {\n+            return null;\n+        }\n+        URL url = null;\n+        try {\n+            URI uri = new URI(onlineResource);\n+            GeoServerResourceLoader resources = wms.getCatalog().getResourceLoader();\n+            if (uri.isAbsolute()) {\n+                if (baseUrl != null && onlineResource.startsWith(baseUrl + \"styles/\")) {\n+                    // convert relative to styles durectory\n+                    onlineResource = onlineResource.substring(baseUrl.length() + 7);\n+                } else {\n+                    legendInfo.setOnlineResource(new URL(onlineResource).toString());\n+                    return legendInfo; // an actual external graphic reference\n+                }\n+            } else {\n+                // not absolute, try relative to the style if available, otherwise search\n+                // in the styles directory\n+                if (context != null) {\n+                    GeoServerDataDirectory dd = new GeoServerDataDirectory(resources);\n+                    Resource styleParentResource = dd.get(context);\n+                    if (styleParentResource != null\n+                            && styleParentResource.getType() == Resource.Type.DIRECTORY) {\n+                        url =\n+                                URLs.fileToUrl(\n+                                        new File(\n+                                                styleParentResource.dir().getCanonicalPath(),\n+                                                onlineResource));\n+                    }\n+                }\n+            }\n+            if (url == null) {\n+                File styles = resources.findOrCreateDirectory(\"styles\");\n+                URL base = URLs.fileToUrl(styles);\n+                url = new URL(base, onlineResource);\n+            }\n+        } catch (Exception e) {\n+            return null; // Do not try this online resource\n+        }\n+        legendInfo.setOnlineResource(url.toExternalForm());", "originalCommit": "0725832dfad77baa9322fe31fecb28a7f5e3bffa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNjgyNA==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r386316824", "bodyText": "fixed", "author": "taba90", "createdAt": "2020-03-02T10:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MjY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6bc0d7ece233e6ffbb7d61acf48629d3cac8d67e", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\nindex 423c5c7320..cf9e5ad05c 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n\n@@ -313,55 +323,4 @@ public class LegendDecoration extends AbstractDispatcherCallback implements MapD\n         public BufferedImage legend;\n         public GetLegendGraphicRequest request;\n     }\n-\n-    private LegendInfo resolveLegendInfo(\n-            LegendInfo legendInfo, GetLegendGraphicRequest request, StyleInfo context) {\n-        if (legendInfo == null) {\n-            return null; // not available\n-        }\n-        String onlineResource = legendInfo.getOnlineResource();\n-        String baseUrl = request.getBaseUrl();\n-        if (onlineResource == null) {\n-            return null;\n-        }\n-        URL url = null;\n-        try {\n-            URI uri = new URI(onlineResource);\n-            GeoServerResourceLoader resources = wms.getCatalog().getResourceLoader();\n-            if (uri.isAbsolute()) {\n-                if (baseUrl != null && onlineResource.startsWith(baseUrl + \"styles/\")) {\n-                    // convert relative to styles durectory\n-                    onlineResource = onlineResource.substring(baseUrl.length() + 7);\n-                } else {\n-                    legendInfo.setOnlineResource(new URL(onlineResource).toString());\n-                    return legendInfo; // an actual external graphic reference\n-                }\n-            } else {\n-                // not absolute, try relative to the style if available, otherwise search\n-                // in the styles directory\n-                if (context != null) {\n-                    GeoServerDataDirectory dd = new GeoServerDataDirectory(resources);\n-                    Resource styleParentResource = dd.get(context);\n-                    if (styleParentResource != null\n-                            && styleParentResource.getType() == Resource.Type.DIRECTORY) {\n-                        url =\n-                                URLs.fileToUrl(\n-                                        new File(\n-                                                styleParentResource.dir().getCanonicalPath(),\n-                                                onlineResource));\n-                    }\n-                }\n-            }\n-            if (url == null) {\n-                File styles = resources.findOrCreateDirectory(\"styles\");\n-                URL base = URLs.fileToUrl(styles);\n-                url = new URL(base, onlineResource);\n-            }\n-        } catch (Exception e) {\n-            return null; // Do not try this online resource\n-        }\n-        legendInfo.setOnlineResource(url.toExternalForm());\n-\n-        return legendInfo;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5Mjk4Mw==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r385792983", "bodyText": "GeoServer is prone to have dangling style references, best to filter out null styles in this loop.", "author": "aaime", "createdAt": "2020-02-28T16:27:49Z", "path": "src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java", "diffHunk": "@@ -101,6 +107,22 @@ public Dimension findOptimalSize(Graphics2D g2d, WMSMapContent mapContext) {\n                 request.setKvp(dispatcherRequest.getKvp());\n                 request.setRawKvp(dispatcherRequest.getRawKvp());\n             }\n+            // online resource handling\n+            LayerInfo info = wms.getLayerByName(layer.getTitle());\n+            StyleInfo defaultStyle = info.getDefaultStyle();\n+            StyleInfo sInfo =\n+                    info.getStyles()\n+                            .stream()\n+                            .filter(s -> s.getName().equals(layer.getStyle().getName()))", "originalCommit": "0725832dfad77baa9322fe31fecb28a7f5e3bffa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNjkwMw==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r386316903", "bodyText": "fixed", "author": "taba90", "createdAt": "2020-03-02T10:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5Mjk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6bc0d7ece233e6ffbb7d61acf48629d3cac8d67e", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\nindex 423c5c7320..cf9e5ad05c 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n\n@@ -110,16 +106,30 @@ public class LegendDecoration extends AbstractDispatcherCallback implements MapD\n             // online resource handling\n             LayerInfo info = wms.getLayerByName(layer.getTitle());\n             StyleInfo defaultStyle = info.getDefaultStyle();\n+\n+            Predicate<StyleInfo> predicate =\n+                    new Predicate<StyleInfo>() {\n+                        @Override\n+                        public boolean test(StyleInfo s) {\n+                            try {\n+                                return s.getName().equals(layer.getStyle().getName())\n+                                        && s.getStyle() != null;\n+                            } catch (IOException e) {\n+                                return false;\n+                            }\n+                        }\n+                    };\n             StyleInfo sInfo =\n                     info.getStyles()\n                             .stream()\n-                            .filter(s -> s.getName().equals(layer.getStyle().getName()))\n+                            .filter(predicate)\n                             .findFirst()\n                             .orElseGet(() -> defaultStyle);\n             GetLegendGraphicRequest.LegendRequest legendReq =\n                     request.getLegend(info.getResource().getQualifiedName());\n             legendReq.setLayerInfo(info);\n-            LegendInfo legendInfo = resolveLegendInfo(sInfo.getLegend(), request, sInfo);\n+            GetLegendGraphicKvpReader reader = new GetLegendGraphicKvpReader(wms);\n+            LegendInfo legendInfo = reader.resolveLegendInfo(sInfo.getLegend(), request, sInfo);\n             if (legendInfo != null) {\n                 legendReq.setLegendInfo(legendInfo);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MzU4NA==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r385793584", "bodyText": "All this preparation is done to get the LegendInfo, right? If so, best to move it in a separate method, and just return the legend info, without cluttering this method with otherwise unused variables.", "author": "aaime", "createdAt": "2020-02-28T16:28:43Z", "path": "src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java", "diffHunk": "@@ -101,6 +107,22 @@ public Dimension findOptimalSize(Graphics2D g2d, WMSMapContent mapContext) {\n                 request.setKvp(dispatcherRequest.getKvp());\n                 request.setRawKvp(dispatcherRequest.getRawKvp());\n             }\n+            // online resource handling\n+            LayerInfo info = wms.getLayerByName(layer.getTitle());", "originalCommit": "0725832dfad77baa9322fe31fecb28a7f5e3bffa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNjk5OA==", "url": "https://github.com/geoserver/geoserver/pull/4074#discussion_r386316998", "bodyText": "applied", "author": "taba90", "createdAt": "2020-03-02T10:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MzU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "6bc0d7ece233e6ffbb7d61acf48629d3cac8d67e", "chunk": "diff --git a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\nindex 423c5c7320..cf9e5ad05c 100644\n--- a/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n+++ b/src/wms/src/main/java/org/geoserver/wms/decoration/LegendDecoration.java\n\n@@ -110,16 +106,30 @@ public class LegendDecoration extends AbstractDispatcherCallback implements MapD\n             // online resource handling\n             LayerInfo info = wms.getLayerByName(layer.getTitle());\n             StyleInfo defaultStyle = info.getDefaultStyle();\n+\n+            Predicate<StyleInfo> predicate =\n+                    new Predicate<StyleInfo>() {\n+                        @Override\n+                        public boolean test(StyleInfo s) {\n+                            try {\n+                                return s.getName().equals(layer.getStyle().getName())\n+                                        && s.getStyle() != null;\n+                            } catch (IOException e) {\n+                                return false;\n+                            }\n+                        }\n+                    };\n             StyleInfo sInfo =\n                     info.getStyles()\n                             .stream()\n-                            .filter(s -> s.getName().equals(layer.getStyle().getName()))\n+                            .filter(predicate)\n                             .findFirst()\n                             .orElseGet(() -> defaultStyle);\n             GetLegendGraphicRequest.LegendRequest legendReq =\n                     request.getLegend(info.getResource().getQualifiedName());\n             legendReq.setLayerInfo(info);\n-            LegendInfo legendInfo = resolveLegendInfo(sInfo.getLegend(), request, sInfo);\n+            GetLegendGraphicKvpReader reader = new GetLegendGraphicKvpReader(wms);\n+            LegendInfo legendInfo = reader.resolveLegendInfo(sInfo.getLegend(), request, sInfo);\n             if (legendInfo != null) {\n                 legendReq.setLegendInfo(legendInfo);\n             }\n"}}, {"oid": "6bc0d7ece233e6ffbb7d61acf48629d3cac8d67e", "url": "https://github.com/geoserver/geoserver/commit/6bc0d7ece233e6ffbb7d61acf48629d3cac8d67e", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-03-02T09:07:33Z", "type": "forcePushed"}, {"oid": "dc7d918ff8bb15d3f6239c74346c6653f8ad98b3", "url": "https://github.com/geoserver/geoserver/commit/dc7d918ff8bb15d3f6239c74346c6653f8ad98b3", "message": "[GEOS-9508] Legend Decorator does not display the static legend set in the style", "committedDate": "2020-03-02T09:19:59Z", "type": "commit"}, {"oid": "f489c73a16c29aa91293f2ed19d54b4ecd344ac6", "url": "https://github.com/geoserver/geoserver/commit/f489c73a16c29aa91293f2ed19d54b4ecd344ac6", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-03-02T09:20:07Z", "type": "forcePushed"}, {"oid": "8dab02be0d2dd5e88677bbf9f675e781992f16fd", "url": "https://github.com/geoserver/geoserver/commit/8dab02be0d2dd5e88677bbf9f675e781992f16fd", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-03-02T09:50:32Z", "type": "commit"}, {"oid": "8dab02be0d2dd5e88677bbf9f675e781992f16fd", "url": "https://github.com/geoserver/geoserver/commit/8dab02be0d2dd5e88677bbf9f675e781992f16fd", "message": "[GEOS-6175] Decoration - Auto-sized legend doesn't fit", "committedDate": "2020-03-02T09:50:32Z", "type": "forcePushed"}]}