{"pr_number": 4291, "pr_title": "[GEOS-9594] CSW: performance issue: every page loads entire catalog", "pr_createdAt": "2020-06-08T13:01:51Z", "pr_url": "https://github.com/geoserver/geoserver/pull/4291", "timeline": [{"oid": "9d05636b9fc2a9bc1175907c4de18dcbaf158cc5", "url": "https://github.com/geoserver/geoserver/commit/9d05636b9fc2a9bc1175907c4de18dcbaf158cc5", "message": "[GEOS-9594] CSW: performance issue: every page loads entire catalog", "committedDate": "2020-06-08T14:50:51Z", "type": "forcePushed"}, {"oid": "1f9038903c42868bfbe86759a573803b334b6f42", "url": "https://github.com/geoserver/geoserver/commit/1f9038903c42868bfbe86759a573803b334b6f42", "message": "[GEOS-9594] CSW: performance issue: every page loads entire catalog", "committedDate": "2020-06-08T17:08:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NTU1OQ==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440165559", "bodyText": "Please comment again.", "author": "aaime", "createdAt": "2020-06-15T13:13:32Z", "path": "src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java", "diffHunk": "@@ -55,7 +55,7 @@ public void testRecords() throws Exception {\n                 \"csw?service=CSW&version=2.0.2&request=GetRecords&typeNames=csw:Record\"\n                         + \"&resultType=results&elementSetName=full&maxRecords=100\";\n         Document d = getAsDOM(request);\n-        // print(d);\n+        print(d);", "originalCommit": "1f9038903c42868bfbe86759a573803b334b6f42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "chunk": "diff --git a/src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java b/src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java\nindex af20a5374e..74fded738f 100644\n--- a/src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java\n+++ b/src/extension/csw/core/src/test/java/org/geoserver/csw/store/internal/LayerGroupTest.java\n\n@@ -55,7 +55,7 @@ public class LayerGroupTest extends CSWInternalTestSupport {\n                 \"csw?service=CSW&version=2.0.2&request=GetRecords&typeNames=csw:Record\"\n                         + \"&resultType=results&elementSetName=full&maxRecords=100\";\n         Document d = getAsDOM(request);\n-        print(d);\n+        // print(d);\n         checkValidationErrors(d, new CSWConfiguration());\n \n         assertXpathExists(\"//csw:Record[dc:title='\" + NAME_BUILDINGSANDBRIDGES + \"']\", d);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NjQ4MQ==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440166481", "bodyText": "Can you split this code a bit, so that it does not end up being nested so much? Creating a separate inner class would probably do the trick", "author": "aaime", "createdAt": "2020-06-15T13:15:05Z", "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java", "diffHunk": "@@ -90,4 +105,55 @@ protected void closeIterator(Iterator<Feature> close) {}\n         MemoryFeatureCollection memory = new MemoryFeatureCollection(getSchema(), features);\n         return memory.sort(order);\n     }\n+\n+    private Filter catalogFilter() {\n+\n+        // ignore catalog info's without id\n+        Filter result =\n+                ff.and(filter, ff.not(ff.isNull(mapping.getIdentifierElement().getContent())));\n+\n+        // build filter compatible with layergroups and resources\n+        result =", "originalCommit": "1f9038903c42868bfbe86759a573803b334b6f42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "chunk": "diff --git a/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java b/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java\nindex 76f25a803a..49fedb9b7e 100644\n--- a/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java\n+++ b/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java\n\n@@ -129,31 +138,14 @@ class CatalogStoreFeatureCollection extends AbstractFeatureCollection<FeatureTyp\n                                                 ff.property(\"type\"),\n                                                 ff.literal(PublishedType.GROUP)),\n                                         (Filter)\n-                                                result.accept(\n-                                                        new DuplicatingFilterVisitor() {\n-\n-                                                            public Object visit(\n-                                                                    PropertyName expression,\n-                                                                    Object extraData) {\n-                                                                return getFactory(extraData)\n-                                                                        .property(\n-                                                                                \"resource.\"\n-                                                                                        + expression\n-                                                                                                .getPropertyName(),\n-                                                                                expression\n-                                                                                        .getNamespaceContext());\n-                                                            }\n-                                                        },\n-                                                        null))));\n+                                                result.accept(new ResourceFilterVisitor(), null))));\n         return result;\n     }\n \n     @Override\n     public int size() {\n-        return Math.min(\n-                count,\n-                Math.max(\n-                        0,\n-                        catalog.getFacade().count(PublishedInfo.class, catalogFilter()) - offset));\n+        int remainingSize =\n+                catalog.getFacade().count(PublishedInfo.class, catalogFilter()) - offset;\n+        return Math.min(count, Math.max(0, remainingSize));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NjY3MA==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440166670", "bodyText": "Same as above, split code a bit.", "author": "aaime", "createdAt": "2020-06-15T13:15:24Z", "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java", "diffHunk": "@@ -90,4 +105,55 @@ protected void closeIterator(Iterator<Feature> close) {}\n         MemoryFeatureCollection memory = new MemoryFeatureCollection(getSchema(), features);\n         return memory.sort(order);\n     }\n+\n+    private Filter catalogFilter() {\n+\n+        // ignore catalog info's without id\n+        Filter result =\n+                ff.and(filter, ff.not(ff.isNull(mapping.getIdentifierElement().getContent())));\n+\n+        // build filter compatible with layergroups and resources\n+        result =\n+                ff.and(\n+                        ff.equals(ff.property(\"advertised\"), ff.literal(true)),\n+                        ff.or(\n+                                /* Layergroup Filter */\n+                                ff.and(\n+                                        ff.equals(\n+                                                ff.property(\"type\"),\n+                                                ff.literal(PublishedType.GROUP)),\n+                                        result),\n+                                /* Resource Filter */\n+                                ff.and(\n+                                        ff.notEqual(\n+                                                ff.property(\"type\"),\n+                                                ff.literal(PublishedType.GROUP)),\n+                                        (Filter)\n+                                                result.accept(\n+                                                        new DuplicatingFilterVisitor() {\n+\n+                                                            public Object visit(\n+                                                                    PropertyName expression,\n+                                                                    Object extraData) {\n+                                                                return getFactory(extraData)\n+                                                                        .property(\n+                                                                                \"resource.\"\n+                                                                                        + expression\n+                                                                                                .getPropertyName(),\n+                                                                                expression\n+                                                                                        .getNamespaceContext());\n+                                                            }\n+                                                        },\n+                                                        null))));\n+        return result;\n+    }\n+\n+    @Override\n+    public int size() {\n+        return Math.min(", "originalCommit": "1f9038903c42868bfbe86759a573803b334b6f42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "chunk": "diff --git a/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java b/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java\nindex 76f25a803a..49fedb9b7e 100644\n--- a/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java\n+++ b/src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureCollection.java\n\n@@ -129,31 +138,14 @@ class CatalogStoreFeatureCollection extends AbstractFeatureCollection<FeatureTyp\n                                                 ff.property(\"type\"),\n                                                 ff.literal(PublishedType.GROUP)),\n                                         (Filter)\n-                                                result.accept(\n-                                                        new DuplicatingFilterVisitor() {\n-\n-                                                            public Object visit(\n-                                                                    PropertyName expression,\n-                                                                    Object extraData) {\n-                                                                return getFactory(extraData)\n-                                                                        .property(\n-                                                                                \"resource.\"\n-                                                                                        + expression\n-                                                                                                .getPropertyName(),\n-                                                                                expression\n-                                                                                        .getNamespaceContext());\n-                                                            }\n-                                                        },\n-                                                        null))));\n+                                                result.accept(new ResourceFilterVisitor(), null))));\n         return result;\n     }\n \n     @Override\n     public int size() {\n-        return Math.min(\n-                count,\n-                Math.max(\n-                        0,\n-                        catalog.getFacade().count(PublishedInfo.class, catalogFilter()) - offset));\n+        int remainingSize =\n+                catalog.getFacade().count(PublishedInfo.class, catalogFilter()) - offset;\n+        return Math.min(count, Math.max(0, remainingSize));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r440171504", "bodyText": "I know it was already using the CatalogFacade but, this seems like a grave issue... dodging the catalog means no security is applied, anyone can see every layer regardless of what the security subsystem says?\nThe catalog offers a similar list method, it's the one that should be used instead (and I believe that would also account for \"advertised\", along with workspace specific services and the like).", "author": "aaime", "createdAt": "2020-06-15T13:23:07Z", "path": "src/extension/csw/core/src/main/java/org/geoserver/csw/store/internal/CatalogStoreFeatureIterator.java", "diffHunk": "@@ -94,107 +79,46 @@ public CatalogStoreFeatureIterator(\n             RecordDescriptor outputRecordDescriptor,\n             Map<String, String> interpolationProperties) {\n         this.interpolationProperties = interpolationProperties;\n-        this.offset = offset;\n-        this.count = count;\n         this.sortOrder = sortOrder;\n         this.filter = filter;\n         catalogFacade = catalog.getFacade();\n         this.mapping = mapping;\n \n-        Filter advertised = ff.equals(ff.property(\"advertised\"), ff.literal(true));\n-\n-        layerIt =\n-                catalogFacade.list(\n-                        ResourceInfo.class, ff.and(filter, advertised), null, null, sortOrder);\n+        it = catalogFacade.list(PublishedInfo.class, filter, offset, count, sortOrder);", "originalCommit": "1f9038903c42868bfbe86759a573803b334b6f42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MDQwNQ==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r441170405", "bodyText": "That is a good point. However, it seems, strangely enough, that the Catalog list method only allows a single SortOrder, while the facade method allows multiple. CSW requires multiple sorts. Fixing this security leak would therefore require a catalog API change. ouch :/", "author": "NielsCharlier", "createdAt": "2020-06-16T22:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0MzI4NQ==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r443643285", "bodyText": "Hmm.. never mind, it seems that what you get there is a SecuredCatalogFacade, which is applying security. Never mind this one, but please check the other two feedbacks.", "author": "aaime", "createdAt": "2020-06-22T15:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwOTIxNg==", "url": "https://github.com/geoserver/geoserver/pull/4291#discussion_r444109216", "bodyText": "Ok. I see the securecatalog does have a list with multi-sortby method to support this. It should ideally be added to the catalog interface as well.", "author": "NielsCharlier", "createdAt": "2020-06-23T10:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3MTUwNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "url": "https://github.com/geoserver/geoserver/commit/657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "message": "[GEOS-9594] CSW: performance issue: every page loads entire catalog", "committedDate": "2020-06-23T10:11:20Z", "type": "commit"}, {"oid": "657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "url": "https://github.com/geoserver/geoserver/commit/657c3fd9aa18c35b91aa7afedbdf9000be5e474b", "message": "[GEOS-9594] CSW: performance issue: every page loads entire catalog", "committedDate": "2020-06-23T10:11:20Z", "type": "forcePushed"}]}