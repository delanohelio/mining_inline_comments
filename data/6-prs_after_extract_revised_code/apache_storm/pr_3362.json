{"pr_number": 3362, "pr_title": "[STORM-3723] Fix isAnyPosixProcessPidDirAlive for PID reassignment", "pr_createdAt": "2020-12-14T22:34:01Z", "pr_url": "https://github.com/apache/storm/pull/3362", "timeline": [{"oid": "167c51640ddbea6ff5cd17b6e3ed5531717694f2", "url": "https://github.com/apache/storm/commit/167c51640ddbea6ff5cd17b6e3ed5531717694f2", "message": "[STORM-3723] Fix isAnyPosixProcessPidDirAlive to return correct value when all PIDs are reassigned to different user.", "committedDate": "2020-12-14T22:31:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODc3Mg==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543498772", "bodyText": "indention seems off", "author": "Ethanlm", "createdAt": "2020-12-15T16:34:09Z", "path": "storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java", "diffHunk": "@@ -106,7 +116,15 @@ public void testExtractZipFileDisallowsPathTraversalWhenUsingPrefix() throws Exc\n                     continue;\n                 }\n                 try {\n-                    pids.add(Long.parseLong(line.split(\"\\\\s\")[0]));\n+                     String pidStr = line.split(\"\\\\s\")[0];", "originalCommit": "167c51640ddbea6ff5cd17b6e3ed5531717694f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMTY1Mg==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543521652", "bodyText": "fixed", "author": "bipinprasad", "createdAt": "2020-12-15T17:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a30ef57b0af9330b0a51c4f027e7266b97f4caea", "chunk": "diff --git a/storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java b/storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java\nindex 275271f4e..31224d3a8 100644\n--- a/storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java\n+++ b/storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java\n\n@@ -116,15 +116,15 @@ public class ServerUtilsTest {\n                     continue;\n                 }\n                 try {\n-                     String pidStr = line.split(\"\\\\s\")[0];\n-                     if (pidStr.equalsIgnoreCase(\"pid\")) {\n-                         continue; // header line\n-                     }\n-                     if (!StringUtils.isNumeric(pidStr)) {\n-                         LOG.debug(\"Ignoring line \\\"{}\\\" while looking for PIDs in output of \\\"{}\\\"\", line, cmd);\n-                         continue;\n-                     }\n-                     pids.add(Long.parseLong(pidStr));\n+                    String pidStr = line.split(\"\\\\s\")[0];\n+                    if (pidStr.equalsIgnoreCase(\"pid\")) {\n+                        continue; // header line\n+                    }\n+                    if (!StringUtils.isNumeric(pidStr)) {\n+                        LOG.debug(\"Ignoring line \\\"{}\\\" while looking for PIDs in output of \\\"{}\\\"\", line, cmd);\n+                        continue;\n+                    }\n+                    pids.add(Long.parseLong(pidStr));\n                 } catch (Exception ex) {\n                     ex.printStackTrace();\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwMzMwNw==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543503307", "bodyText": "Thanks for adding the unit test", "author": "Ethanlm", "createdAt": "2020-12-15T16:39:47Z", "path": "storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java", "diffHunk": "@@ -272,18 +290,28 @@ public void testIsAnyPosixProcessPidDirAliveMockingFileOwnerUid() throws Excepti\n             LOG.info(\"Test testIsAnyPosixProcessPidDirAlive is designed to run on systems with /proc directory only, marking as success\");\n             return;\n         }\n-        Collection<Long> pids = getRunningProcessIds();\n-        assertFalse(pids.isEmpty());\n+        Collection<Long> allPids = getRunningProcessIds(null);\n+        Collection<Long> rootPids = getRunningProcessIds(\"root\");\n+        assertFalse(allPids.isEmpty());\n+        assertFalse(rootPids.isEmpty());\n \n-        for (int i = 0 ; i < 2 ; i++) {\n-            boolean mockFileOwnerToUid = (i % 2 == 0);\n+        String currentUser = System.getProperty(\"user.name\");\n+\n+        for (boolean mockFileOwnerToUid: Arrays.asList(true, false)) {\n             // at least one pid will be owned by the current user (doing the testing)\n-            String currentUser = System.getProperty(\"user.name\");\n-            boolean status = ServerUtils.isAnyPosixProcessPidDirAlive(pids, currentUser, mockFileOwnerToUid);\n+            boolean status = ServerUtils.isAnyPosixProcessPidDirAlive(allPids, currentUser, mockFileOwnerToUid);\n             String err = String.format(\"(mockFileOwnerToUid=%s) Expecting user %s to own at least one process\",\n                     mockFileOwnerToUid, currentUser);\n             assertTrue(err, status);\n         }\n+\n+        // simulate reassignment of all process id to a different user (root)\n+        for (boolean mockFileOwnerToUid: Arrays.asList(true, false)) {", "originalCommit": "167c51640ddbea6ff5cd17b6e3ed5531717694f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNDg3Ng==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543504876", "bodyText": "It doesn't seem very necessary to get all pids. We just need the pids from currentUser (System.getProperty(\"user.name\"))", "author": "Ethanlm", "createdAt": "2020-12-15T16:41:45Z", "path": "storm-server/src/test/java/org/apache/storm/utils/ServerUtilsTest.java", "diffHunk": "@@ -272,18 +290,28 @@ public void testIsAnyPosixProcessPidDirAliveMockingFileOwnerUid() throws Excepti\n             LOG.info(\"Test testIsAnyPosixProcessPidDirAlive is designed to run on systems with /proc directory only, marking as success\");\n             return;\n         }\n-        Collection<Long> pids = getRunningProcessIds();\n-        assertFalse(pids.isEmpty());\n+        Collection<Long> allPids = getRunningProcessIds(null);", "originalCommit": "167c51640ddbea6ff5cd17b6e3ed5531717694f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUxODA3NQ==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543518075", "bodyText": "This tests the case where some (but not all) PIDs have been reassigned.", "author": "bipinprasad", "createdAt": "2020-12-15T16:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNDg3Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNjcxNA==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543506714", "bodyText": "Looks like the log should be a new process for actualUser {}\"\nAnd is it possible to print out the cmdline of this processId so we know what the process really is? It seems unlikely that a processId is reused by another user (or root) so quickly. I hope to get more details when this happens. Thanks", "author": "Ethanlm", "createdAt": "2020-12-15T16:43:51Z", "path": "storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java", "diffHunk": "@@ -1309,8 +1309,6 @@ public static boolean isAnyPosixProcessPidDirAlive(Collection<Long> pids, String\n                         + \"likely pid {} was reused for a new process for expectedUser {}\",\n                         pidDir, actualUser, expectedUser, pid, actualUser);", "originalCommit": "167c51640ddbea6ff5cd17b6e3ed5531717694f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMjk3Mw==", "url": "https://github.com/apache/storm/pull/3362#discussion_r543522973", "bodyText": "fixed log", "author": "bipinprasad", "createdAt": "2020-12-15T17:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNjcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "a30ef57b0af9330b0a51c4f027e7266b97f4caea", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java b/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java\nindex c66940333..3a4e3a74a 100644\n--- a/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java\n+++ b/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java\n\n@@ -1305,12 +1305,35 @@ public class ServerUtils {\n                     LOG.debug(\"Process {} is alive and owned by expectedUser {}\", pid, expectedUser);\n                     return true;\n                 }\n-                LOG.info(\"Prior process is dead, since directory {} owner {} is not same as expected expectedUser {}, \"\n-                        + \"likely pid {} was reused for a new process for expectedUser {}\",\n-                        pidDir, actualUser, expectedUser, pid, actualUser);\n+                LOG.info(\"Prior process is dead, since directory {} owner {} is not same as expectedUser {}, \"\n+                        + \"likely pid {} was reused for a new process for actualUser {}, {}}\",\n+                        pidDir, actualUser, expectedUser, pid, actualUser, getProcessDesc(pidDir));\n             }\n         }\n         LOG.info(\"None of the processes {} are alive AND owned by expectedUser {}\", pids, expectedUser);\n         return false;\n     }\n+\n+    /**\n+     * Support method to obtain additional log info for the process. Use the contents of comm and cmdline\n+     * in the process directory. Note that this method works properly only on posix systems with /proc directory.\n+     *\n+     * @param pidDir PID directory (/proc/&lt;pid&gt;)\n+     * @return process description string\n+     */\n+    private static String getProcessDesc(File pidDir) {\n+        String comm = \"\";\n+        try {\n+            comm = String.join(\", \", Files.readAllLines(pidDir.toPath().resolve(\"comm\")));\n+        } catch (IOException ex) {\n+            // ignore\n+        }\n+        String cmdline = \"\";\n+        try {\n+            cmdline = String.join(\", \", Files.readAllLines(pidDir.toPath().resolve(\"cmdline\"))).replace('\\0', ' ');\n+        } catch (IOException ex) {\n+            // ignore\n+        }\n+        return String.format(\"process(comm=\\\"%s\\\", cmdline=\\\"%s\\\")\", comm, cmdline);\n+    }\n }\n"}}, {"oid": "a30ef57b0af9330b0a51c4f027e7266b97f4caea", "url": "https://github.com/apache/storm/commit/a30ef57b0af9330b0a51c4f027e7266b97f4caea", "message": "[STORM-3723] Fix indentation, enhance log with information on reassigned PID.", "committedDate": "2020-12-16T03:58:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM4Mjk0NA==", "url": "https://github.com/apache/storm/pull/3362#discussion_r544382944", "bodyText": "Maybe log a warning here and below?", "author": "Ethanlm", "createdAt": "2020-12-16T15:18:34Z", "path": "storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java", "diffHunk": "@@ -1295,22 +1295,45 @@ public static boolean isAnyPosixProcessPidDirAlive(Collection<Long> pids, String\n                     LOG.debug(\"Process {} is alive and owned by expectedUser {}/{}\", pid, expectedUser, expectedUid);\n                     return true;\n                 }\n-                LOG.info(\"Prior process is dead, since directory {} owner {} is not same as expected expectedUser {}/{}, \"\n-                        + \"likely pid {} was reused for a new process for uid {}\",\n-                        pidDir, actualUser, expectedUser, expectedUid, pid, actualUid);\n+                LOG.info(\"Prior process is dead, since directory {} owner {} is not same as expectedUser {}/{}, \"\n+                        + \"likely pid {} was reused for a new process for uid {}, {}\",\n+                        pidDir, actualUser, expectedUser, expectedUid, pid, actualUid, getProcessDesc(pidDir));\n             } else {\n                 // actualUser is a string\n                 LOG.debug(\"Process directory {} owner is {}\", pidDir, actualUser);\n                 if (expectedUser.equals(actualUser)) {\n                     LOG.debug(\"Process {} is alive and owned by expectedUser {}\", pid, expectedUser);\n                     return true;\n                 }\n-                LOG.info(\"Prior process is dead, since directory {} owner {} is not same as expected expectedUser {}, \"\n-                        + \"likely pid {} was reused for a new process for expectedUser {}\",\n-                        pidDir, actualUser, expectedUser, pid, actualUser);\n+                LOG.info(\"Prior process is dead, since directory {} owner {} is not same as expectedUser {}, \"\n+                        + \"likely pid {} was reused for a new process for actualUser {}, {}}\",\n+                        pidDir, actualUser, expectedUser, pid, actualUser, getProcessDesc(pidDir));\n             }\n         }\n         LOG.info(\"None of the processes {} are alive AND owned by expectedUser {}\", pids, expectedUser);\n         return false;\n     }\n+\n+    /**\n+     * Support method to obtain additional log info for the process. Use the contents of comm and cmdline\n+     * in the process directory. Note that this method works properly only on posix systems with /proc directory.\n+     *\n+     * @param pidDir PID directory (/proc/&lt;pid&gt;)\n+     * @return process description string\n+     */\n+    private static String getProcessDesc(File pidDir) {\n+        String comm = \"\";\n+        try {\n+            comm = String.join(\", \", Files.readAllLines(pidDir.toPath().resolve(\"comm\")));\n+        } catch (IOException ex) {\n+            // ignore", "originalCommit": "a30ef57b0af9330b0a51c4f027e7266b97f4caea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5f7aca8c4dedf3ee0dff95ab4809e6b25770c87a", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java b/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java\nindex 3a4e3a74a..612883ad7 100644\n--- a/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java\n+++ b/storm-server/src/main/java/org/apache/storm/utils/ServerUtils.java\n\n@@ -1323,16 +1323,18 @@ public class ServerUtils {\n      */\n     private static String getProcessDesc(File pidDir) {\n         String comm = \"\";\n+        Path p = pidDir.toPath().resolve(\"comm\");\n         try {\n-            comm = String.join(\", \", Files.readAllLines(pidDir.toPath().resolve(\"comm\")));\n+            comm = String.join(\", \", Files.readAllLines(p));\n         } catch (IOException ex) {\n-            // ignore\n+            LOG.warn(\"Cannot get contents of \" + p, ex);\n         }\n         String cmdline = \"\";\n+        p = pidDir.toPath().resolve(\"cmdline\");\n         try {\n-            cmdline = String.join(\", \", Files.readAllLines(pidDir.toPath().resolve(\"cmdline\"))).replace('\\0', ' ');\n+            cmdline = String.join(\", \", Files.readAllLines(p)).replace('\\0', ' ');\n         } catch (IOException ex) {\n-            // ignore\n+            LOG.warn(\"Cannot get contents of \" + p, ex);\n         }\n         return String.format(\"process(comm=\\\"%s\\\", cmdline=\\\"%s\\\")\", comm, cmdline);\n     }\n"}}, {"oid": "5f7aca8c4dedf3ee0dff95ab4809e6b25770c87a", "url": "https://github.com/apache/storm/commit/5f7aca8c4dedf3ee0dff95ab4809e6b25770c87a", "message": "[STORM-3723] Fix indentation, enhance log with information on reassigned PID.", "committedDate": "2020-12-16T16:26:33Z", "type": "commit"}, {"oid": "5f7aca8c4dedf3ee0dff95ab4809e6b25770c87a", "url": "https://github.com/apache/storm/commit/5f7aca8c4dedf3ee0dff95ab4809e6b25770c87a", "message": "[STORM-3723] Fix indentation, enhance log with information on reassigned PID.", "committedDate": "2020-12-16T16:26:33Z", "type": "forcePushed"}]}