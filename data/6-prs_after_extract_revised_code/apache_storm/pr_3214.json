{"pr_number": 3214, "pr_title": "[MINOR] remove some unused fields and correct comment typo", "pr_createdAt": "2020-02-23T22:03:05Z", "pr_url": "https://github.com/apache/storm/pull/3214", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTg1Mg==", "url": "https://github.com/apache/storm/pull/3214#discussion_r383349852", "bodyText": "We might not want to delete this because it simulates the Time and saves time spending on unit test on some cases. It depends on if it has any effect on this specific test. Make sure you understand it before you delete it. Or this can be a separate PR in the future if it's still the case.", "author": "Ethanlm", "createdAt": "2020-02-24T15:54:56Z", "path": "storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java", "diffHunk": "@@ -43,54 +43,52 @@\n \n     @Test\n     public void testFIFOEvictionStrategy() {\n-        try (Time.SimulatedTime sim = new Time.SimulatedTime()) {", "originalCommit": "fda6a2c175b9c8f69f21e9708979f2cbf5280fb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1NTgzMw==", "url": "https://github.com/apache/storm/pull/3214#discussion_r383355833", "bodyText": "Thanks for catching. I will revert this and investigate further.", "author": "RuiLi8080", "createdAt": "2020-02-24T16:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0OTg1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "044e01542fe07326de26365e022dcd8193891c04", "chunk": "diff --git a/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java b/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java\nindex c46cd20c3..96d8da928 100644\n--- a/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java\n+++ b/storm-server/src/test/java/org/apache/storm/scheduler/resource/strategies/priority/TestFIFOSchedulingPriorityStrategy.java\n\n@@ -43,52 +43,54 @@ public class TestFIFOSchedulingPriorityStrategy {\n \n     @Test\n     public void testFIFOEvictionStrategy() {\n-        INimbus iNimbus = new INimbusTest();\n-        Map<String, SupervisorDetails> supMap = genSupervisors(4, 4, 100.0, 1000.0);\n-        Map<String, Map<String, Number>> resourceUserPool = userResourcePool(\n-            userRes(\"jerry\", 200.0, 2000.0));\n-        Config config = createClusterConfig(100, 500, 500, resourceUserPool);\n-        config.put(DaemonConfig.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, FIFOSchedulingPriorityStrategy.class.getName());\n-\n-        Topologies topologies = new Topologies(\n-            genTopology(\"topo-1-jerry\", config, 1, 0, 1, 0,Time.currentTimeSecs() - 250,20, \"jerry\"),\n-            genTopology(\"topo-2-bobby\", config, 1, 0, 1, 0,Time.currentTimeSecs() - 200,10, \"bobby\"),\n-            genTopology(\"topo-3-bobby\", config, 1, 0, 1, 0,Time.currentTimeSecs() - 300,20, \"bobby\"),\n-            genTopology(\"topo-4-derek\", config, 1, 0, 1, 0,Time.currentTimeSecs() - 201,29, \"derek\"));\n-        Cluster cluster = new Cluster(iNimbus, new ResourceMetrics(new StormMetricsRegistry()), supMap, new HashMap<>(), topologies, config);\n-\n-        ResourceAwareScheduler rs = new ResourceAwareScheduler();\n-        rs.prepare(config);\n-        try {\n-            rs.schedule(topologies, cluster);\n-\n-            assertTopologiesFullyScheduled(cluster, \"topo-1-jerry\", \"topo-2-bobby\", \"topo-3-bobby\", \"topo-4-derek\");\n-\n-            LOG.info(\"\\n\\n\\t\\tINSERTING topo-5\");\n-            //new topology needs to be scheduled\n-            //topo-3 should be evicted since its been up the longest\n-            topologies = addTopologies(topologies,\n-                genTopology(\"topo-5-derek\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 15, 29, \"derek\"));\n-\n-            cluster = new Cluster(iNimbus, new ResourceMetrics(new StormMetricsRegistry()), supMap, new HashMap<>(), topologies, config);\n-            rs.schedule(topologies, cluster);\n-\n-            assertTopologiesFullyScheduled(cluster, \"topo-1-jerry\", \"topo-2-bobby\", \"topo-4-derek\", \"topo-5-derek\");\n-            assertTopologiesNotScheduled(cluster, \"topo-3-bobby\");\n-\n-            LOG.info(\"\\n\\n\\t\\tINSERTING topo-6\");\n-            //new topology needs to be scheduled.  topo-4 should be evicted. Even though topo-1 from user jerry is older, topo-1 will not be evicted\n-            //since user jerry has enough resource guarantee\n-            topologies = addTopologies(topologies,\n-                genTopology(\"topo-6-bobby\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 10, 29, \"bobby\"));\n-\n-            cluster = new Cluster(iNimbus, new ResourceMetrics(new StormMetricsRegistry()), supMap, new HashMap<>(), topologies, config);\n-            rs.schedule(topologies, cluster);\n-\n-            assertTopologiesFullyScheduled(cluster, \"topo-1-jerry\", \"topo-2-bobby\", \"topo-5-derek\", \"topo-6-bobby\");\n-            assertTopologiesNotScheduled(cluster, \"topo-3-bobby\", \"topo-4-derek\");\n-        } finally {\n-            rs.cleanup();\n+        try (Time.SimulatedTime sim = new Time.SimulatedTime()) {\n+            INimbus iNimbus = new INimbusTest();\n+            Map<String, SupervisorDetails> supMap = genSupervisors(4, 4, 100.0, 1000.0);\n+            Map<String, Map<String, Number>> resourceUserPool = userResourcePool(\n+                userRes(\"jerry\", 200.0, 2000.0));\n+            Config config = createClusterConfig(100, 500, 500, resourceUserPool);\n+            config.put(DaemonConfig.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, FIFOSchedulingPriorityStrategy.class.getName());\n+\n+            Topologies topologies = new Topologies(\n+                genTopology(\"topo-1-jerry\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 250, 20, \"jerry\"),\n+                genTopology(\"topo-2-bobby\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 200, 10, \"bobby\"),\n+                genTopology(\"topo-3-bobby\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 300, 20, \"bobby\"),\n+                genTopology(\"topo-4-derek\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 201, 29, \"derek\"));\n+            Cluster cluster = new Cluster(iNimbus, new ResourceMetrics(new StormMetricsRegistry()), supMap, new HashMap<>(), topologies, config);\n+\n+            ResourceAwareScheduler rs = new ResourceAwareScheduler();\n+            rs.prepare(config);\n+            try {\n+                rs.schedule(topologies, cluster);\n+\n+                assertTopologiesFullyScheduled(cluster, \"topo-1-jerry\", \"topo-2-bobby\", \"topo-3-bobby\", \"topo-4-derek\");\n+\n+                LOG.info(\"\\n\\n\\t\\tINSERTING topo-5\");\n+                //new topology needs to be scheduled\n+                //topo-3 should be evicted since its been up the longest\n+                topologies = addTopologies(topologies,\n+                    genTopology(\"topo-5-derek\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 15, 29, \"derek\"));\n+\n+                cluster = new Cluster(iNimbus, new ResourceMetrics(new StormMetricsRegistry()), supMap, new HashMap<>(), topologies, config);\n+                rs.schedule(topologies, cluster);\n+\n+                assertTopologiesFullyScheduled(cluster, \"topo-1-jerry\", \"topo-2-bobby\", \"topo-4-derek\", \"topo-5-derek\");\n+                assertTopologiesNotScheduled(cluster, \"topo-3-bobby\");\n+\n+                LOG.info(\"\\n\\n\\t\\tINSERTING topo-6\");\n+                //new topology needs to be scheduled.  topo-4 should be evicted. Even though topo-1 from user jerry is older, topo-1 will not be evicted\n+                //since user jerry has enough resource guarantee\n+                topologies = addTopologies(topologies,\n+                    genTopology(\"topo-6-bobby\", config, 1, 0, 1, 0, Time.currentTimeSecs() - 10, 29, \"bobby\"));\n+\n+                cluster = new Cluster(iNimbus, new ResourceMetrics(new StormMetricsRegistry()), supMap, new HashMap<>(), topologies, config);\n+                rs.schedule(topologies, cluster);\n+\n+                assertTopologiesFullyScheduled(cluster, \"topo-1-jerry\", \"topo-2-bobby\", \"topo-5-derek\", \"topo-6-bobby\");\n+                assertTopologiesNotScheduled(cluster, \"topo-3-bobby\", \"topo-4-derek\");\n+            } finally {\n+                rs.cleanup();\n+            }\n         }\n     }\n }\n"}}, {"oid": "044e01542fe07326de26365e022dcd8193891c04", "url": "https://github.com/apache/storm/commit/044e01542fe07326de26365e022dcd8193891c04", "message": "[MINOR] remove some unused fields and correct comment typo", "committedDate": "2020-02-24T16:01:08Z", "type": "commit"}, {"oid": "044e01542fe07326de26365e022dcd8193891c04", "url": "https://github.com/apache/storm/commit/044e01542fe07326de26365e022dcd8193891c04", "message": "[MINOR] remove some unused fields and correct comment typo", "committedDate": "2020-02-24T16:01:08Z", "type": "forcePushed"}]}