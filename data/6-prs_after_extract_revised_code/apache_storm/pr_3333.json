{"pr_number": 3333, "pr_title": "STORM-3697 add capacity metric", "pr_createdAt": "2020-09-09T18:30:29Z", "pr_url": "https://github.com/apache/storm/pull/3333", "timeline": [{"oid": "80a4939d75bb7cb3bd7efda6f9cf38ca2211f5de", "url": "https://github.com/apache/storm/commit/80a4939d75bb7cb3bd7efda6f9cf38ca2211f5de", "message": "STORM-3697 add capacity metric", "committedDate": "2020-09-09T18:27:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MDgzMg==", "url": "https://github.com/apache/storm/pull/3333#discussion_r497190832", "bodyText": "TEN_MIN_IN_SECONDS_STR can be a constant in this class itself.  But this is not important.", "author": "Ethanlm", "createdAt": "2020-09-30T01:17:45Z", "path": "storm-client/src/jvm/org/apache/storm/stats/BoltExecutorStats.java", "diffHunk": "@@ -53,10 +58,53 @@ public void cleanupStats() {\n         super.cleanupStats();\n     }\n \n-    public void boltExecuteTuple(String component, String stream, long latencyMs) {\n+    public void boltExecuteTuple(String component, String stream, long latencyMs, long workerUptimeSecs,\n+                                 Task firstExecutorTask) {\n         List key = Lists.newArrayList(component, stream);\n         this.getExecuted().incBy(key, this.rate);\n         this.getExecuteLatencies().record(key, latencyMs);\n+\n+        // Calculate capacity:  This is really for the whole executor, but we will use the executor's first task\n+        // for reporting the metric.\n+        double capacity = calculateCapacity(workerUptimeSecs);\n+        firstExecutorTask.getTaskMetrics().setCapacity(capacity);\n+    }\n+\n+    private double calculateCapacity(long workerUptimeSecs) {\n+        if (workerUptimeSecs > 0) {\n+            Map<String, Double> execAvg = valueStat(this.getExecuteLatencies()).get(MultiCountStat.TEN_MIN_IN_SECONDS_STR);", "originalCommit": "80a4939d75bb7cb3bd7efda6f9cf38ca2211f5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNTI3Nw==", "url": "https://github.com/apache/storm/pull/3333#discussion_r497525277", "bodyText": "I was going to use MultiCountStat.TEN_MIN_IN_SECONDS_STR to replace the one in StatsUtil, which is in storm-server for more general usage, but didn't replace the other usages to keep a smaller review.", "author": "agresch", "createdAt": "2020-09-30T13:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MDgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MjcxNQ==", "url": "https://github.com/apache/storm/pull/3333#discussion_r497562715", "bodyText": "There is another similar class MultiLatencyStat. It doesn't feel right to use MultiCountStat.TEN_MIN_IN_SECONDS_STR for MultiLatencyStat. But this is just personal preference and we can leave this to the future. I am okay with current change.", "author": "Ethanlm", "createdAt": "2020-09-30T14:37:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5MDgzMg=="}], "type": "inlineReview", "revised_code": null}]}