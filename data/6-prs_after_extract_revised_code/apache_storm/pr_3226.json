{"pr_number": 3226, "pr_title": "[STORM-3583] Handle exceptions when AsyncLocalizer tries to get local resources", "pr_createdAt": "2020-03-12T14:37:15Z", "pr_url": "https://github.com/apache/storm/pull/3226", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3MjI4OA==", "url": "https://github.com/apache/storm/pull/3226#discussion_r391672288", "bodyText": "can we add the pna to this message and the IOException error?  What is the side effect of not releasing this if there's a race condition?  Could the localizer then be updating this file continually?", "author": "agresch", "createdAt": "2020-03-12T14:46:52Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,7 +457,21 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n+        List<LocalResource> localResources = null;\n+        try {\n+            // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n+            // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n+            localResources = getLocalResources(pna);\n+        } catch (FileNotFoundException fnfException) {\n+            LOG.warn(\"Local base blobs have not been downloaded yet. \"", "originalCommit": "7c2c04bc491fcae3e46768a5bdc3f03d0926f861", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczNzk2Ng==", "url": "https://github.com/apache/storm/pull/3226#discussion_r391737966", "bodyText": "Added pna info. As for the race condition, I think that could be addressed by separating executor pools. I did not think of a scenario that race condition will happen because of catching the exception.\nAll downloading tasks are CompletableFuture object. File no found happens when the object is not completed. So here we will forget about it, and dereference any resources we can, and release the slot for new assignments.\nThen the background download threads will succeeds at some points. The cleanup thread will take care of these orphan files even if they are not released properly.", "author": "RuiLi8080", "createdAt": "2020-03-12T16:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3MjI4OA=="}], "type": "inlineReview", "revised_code": {"commit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex 7c826a7f9..c14b45cb9 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -457,17 +459,24 @@ public class AsyncLocalizer implements AutoCloseable {\n             topoConfBlob.removeReference(pna);\n         }\n \n-        List<LocalResource> localResources = null;\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n+        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // Will need further investigation if the race condition happens again\n+        List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n         } catch (FileNotFoundException fnfException) {\n+            localResourceFileNotFound.mark();\n             LOG.warn(\"Local base blobs have not been downloaded yet. \"\n                         + \"DownloadExecService is too busy\", fnfException);\n+            LOG.info(\"Port and assignment info: {}\", pna);\n             return;\n         } catch (IOException ioException) {\n             LOG.error(\"Unable to read local conf file. \", ioException);\n+            LOG.info(\"Port and assignment info: {}\", pna);\n             throw ioException;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTgzOQ==", "url": "https://github.com/apache/storm/pull/3226#discussion_r391731839", "bodyText": "If we're proceeding with this change, I think we should mark a meter so we can add an alert and investigate that this is occurring and evaluate.", "author": "agresch", "createdAt": "2020-03-12T16:14:43Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -457,17 +457,23 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        List<LocalResource> localResources = null;\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n+        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // Will need further investigation if the race condition happens again\n+        List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n         } catch (FileNotFoundException fnfException) {\n             LOG.warn(\"Local base blobs have not been downloaded yet. \"\n                         + \"DownloadExecService is too busy\", fnfException);\n+            LOG.info(\"Port and assignment info: {}\", pna);", "originalCommit": "f8ff13043eda1cdd4041f2792f74ad01f9c2e641", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc0MDgyOA==", "url": "https://github.com/apache/storm/pull/3226#discussion_r391740828", "bodyText": "Good suggestion, added.", "author": "RuiLi8080", "createdAt": "2020-03-12T16:28:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTgzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex 02c4fa3a0..c14b45cb9 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -467,6 +469,7 @@ public class AsyncLocalizer implements AutoCloseable {\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n         } catch (FileNotFoundException fnfException) {\n+            localResourceFileNotFound.mark();\n             LOG.warn(\"Local base blobs have not been downloaded yet. \"\n                         + \"DownloadExecService is too busy\", fnfException);\n             LOG.info(\"Port and assignment info: {}\", pna);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc0MjI4MA==", "url": "https://github.com/apache/storm/pull/3226#discussion_r391742280", "bodyText": "spelling of supervisor.\nAlso please update ClusterMetrics.md with this metric and any other missing that are in this file.", "author": "agresch", "createdAt": "2020-03-12T16:30:09Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -110,6 +111,7 @@\n         this.blobCacheUpdateDuration = metricsRegistry.registerTimer(\"supervisor:blob-cache-update-duration\");\n         this.blobLocalizationDuration = metricsRegistry.registerTimer(\"supervisor:blob-localization-duration\");\n         this.numBlobUpdateVersionChanged = metricsRegistry.registerMeter(\"supervisor:num-blob-update-version-changed\");\n+        this.localResourceFileNotFound = metricsRegistry.registerMeter(\"supervisdor:local-resource-file-not-found\");", "originalCommit": "a9e7ca838bdb6c2aea20007712b23689066b94bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5ODY2Nw==", "url": "https://github.com/apache/storm/pull/3226#discussion_r391798667", "bodyText": "Thanks for catching, updated", "author": "RuiLi8080", "createdAt": "2020-03-12T18:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc0MjI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex 55bdebbc9..c14b45cb9 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -111,7 +111,7 @@ public class AsyncLocalizer implements AutoCloseable {\n         this.blobCacheUpdateDuration = metricsRegistry.registerTimer(\"supervisor:blob-cache-update-duration\");\n         this.blobLocalizationDuration = metricsRegistry.registerTimer(\"supervisor:blob-localization-duration\");\n         this.numBlobUpdateVersionChanged = metricsRegistry.registerMeter(\"supervisor:num-blob-update-version-changed\");\n-        this.localResourceFileNotFound = metricsRegistry.registerMeter(\"supervisdor:local-resource-file-not-found\");\n+        this.localResourceFileNotFound = metricsRegistry.registerMeter(\"supervisor:local-resource-file-not-found\");\n         this.metricsRegistry = metricsRegistry;\n         isLocalMode = ConfigUtils.isLocalMode(conf);\n         fsOps = ops;\n"}}, {"oid": "17c17e3bd1b86413ed1433d88f9e22b315628221", "url": "https://github.com/apache/storm/commit/17c17e3bd1b86413ed1433d88f9e22b315628221", "message": "[STORM-3583] Handle exceptions when AsyncLocalizer tries to get local resources\n\naddress comments\n\nadd file not found meter\n\nfix typo and add documentation", "committedDate": "2020-03-13T02:40:09Z", "type": "commit"}, {"oid": "17c17e3bd1b86413ed1433d88f9e22b315628221", "url": "https://github.com/apache/storm/commit/17c17e3bd1b86413ed1433d88f9e22b315628221", "message": "[STORM-3583] Handle exceptions when AsyncLocalizer tries to get local resources\n\naddress comments\n\nadd file not found meter\n\nfix typo and add documentation", "committedDate": "2020-03-13T02:40:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MzIxNQ==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392273215", "bodyText": "This is our corp internal commit and should be changed to community JIRA.", "author": "Ethanlm", "createdAt": "2020-03-13T14:46:49Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,7 +459,28 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n+        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586", "originalCommit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjcwOA==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392706708", "bodyText": "Changed", "author": "RuiLi8080", "createdAt": "2020-03-15T19:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MzIxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex c14b45cb9..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -460,32 +461,29 @@ public class AsyncLocalizer implements AutoCloseable {\n         }\n \n \n-        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n-        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // ALERT: A possible race condition should have been resolved\n+        // by separating the thread pools into downloadExecService and taskExecService\n+        // https://github.com/apache/storm/pull/3153\n         // Will need further investigation if the race condition happens again\n         List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n-        } catch (FileNotFoundException fnfException) {\n-            localResourceFileNotFound.mark();\n-            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n-                        + \"DownloadExecService is too busy\", fnfException);\n+        } catch (IOException e) {\n             LOG.info(\"Port and assignment info: {}\", pna);\n-            return;\n-        } catch (IOException ioException) {\n-            LOG.error(\"Unable to read local conf file. \", ioException);\n-            LOG.info(\"Port and assignment info: {}\", pna);\n-            throw ioException;\n+            if (e instanceof FileNotFoundException) {\n+                localResourceFileNotFoundWhenReleasingSlot.mark();\n+                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                return;\n+            } else {\n+                LOG.error(\"Unable to read local file. \", e);\n+                throw e;\n+            }\n         }\n \n         for (LocalResource lr : localResources) {\n-            try {\n-                removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n-            } catch (Exception e) {\n-                throw new IOException(e);\n-            }\n+            removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDY4NA==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392274684", "bodyText": "I would remove this line. \"too busy\" can be misleading. The files not yet being fully downloaded could because it is just started to download.", "author": "Ethanlm", "createdAt": "2020-03-13T14:49:14Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,7 +459,28 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n+        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // Will need further investigation if the race condition happens again\n+        List<LocalResource> localResources;\n+        try {\n+            // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n+            // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n+            localResources = getLocalResources(pna);\n+        } catch (FileNotFoundException fnfException) {\n+            localResourceFileNotFound.mark();\n+            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n+                        + \"DownloadExecService is too busy\", fnfException);", "originalCommit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjY5MA==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392706690", "bodyText": "Make sense. Removed", "author": "RuiLi8080", "createdAt": "2020-03-15T19:56:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDY4NA=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex c14b45cb9..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -460,32 +461,29 @@ public class AsyncLocalizer implements AutoCloseable {\n         }\n \n \n-        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n-        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // ALERT: A possible race condition should have been resolved\n+        // by separating the thread pools into downloadExecService and taskExecService\n+        // https://github.com/apache/storm/pull/3153\n         // Will need further investigation if the race condition happens again\n         List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n-        } catch (FileNotFoundException fnfException) {\n-            localResourceFileNotFound.mark();\n-            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n-                        + \"DownloadExecService is too busy\", fnfException);\n+        } catch (IOException e) {\n             LOG.info(\"Port and assignment info: {}\", pna);\n-            return;\n-        } catch (IOException ioException) {\n-            LOG.error(\"Unable to read local conf file. \", ioException);\n-            LOG.info(\"Port and assignment info: {}\", pna);\n-            throw ioException;\n+            if (e instanceof FileNotFoundException) {\n+                localResourceFileNotFoundWhenReleasingSlot.mark();\n+                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                return;\n+            } else {\n+                LOG.error(\"Unable to read local file. \", e);\n+                throw e;\n+            }\n         }\n \n         for (LocalResource lr : localResources) {\n-            try {\n-                removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n-            } catch (Exception e) {\n-                throw new IOException(e);\n-            }\n+            removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NzA2Mw==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392277063", "bodyText": "These exception handlings seems can be removed. But I am fine with leaving it there since it's not related to your change in this PR", "author": "Ethanlm", "createdAt": "2020-03-13T14:53:00Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,7 +459,28 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n+        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // Will need further investigation if the race condition happens again\n+        List<LocalResource> localResources;\n+        try {\n+            // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n+            // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n+            localResources = getLocalResources(pna);\n+        } catch (FileNotFoundException fnfException) {\n+            localResourceFileNotFound.mark();\n+            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n+                        + \"DownloadExecService is too busy\", fnfException);\n+            LOG.info(\"Port and assignment info: {}\", pna);\n+            return;\n+        } catch (IOException ioException) {\n+            LOG.error(\"Unable to read local conf file. \", ioException);\n+            LOG.info(\"Port and assignment info: {}\", pna);\n+            throw ioException;\n+        }\n+\n+        for (LocalResource lr : localResources) {\n             try {\n                 removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n             } catch (Exception e) {", "originalCommit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjY1Ng==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392706656", "bodyText": "Removed.", "author": "RuiLi8080", "createdAt": "2020-03-15T19:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NzA2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex c14b45cb9..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -460,32 +461,29 @@ public class AsyncLocalizer implements AutoCloseable {\n         }\n \n \n-        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n-        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // ALERT: A possible race condition should have been resolved\n+        // by separating the thread pools into downloadExecService and taskExecService\n+        // https://github.com/apache/storm/pull/3153\n         // Will need further investigation if the race condition happens again\n         List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n-        } catch (FileNotFoundException fnfException) {\n-            localResourceFileNotFound.mark();\n-            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n-                        + \"DownloadExecService is too busy\", fnfException);\n+        } catch (IOException e) {\n             LOG.info(\"Port and assignment info: {}\", pna);\n-            return;\n-        } catch (IOException ioException) {\n-            LOG.error(\"Unable to read local conf file. \", ioException);\n-            LOG.info(\"Port and assignment info: {}\", pna);\n-            throw ioException;\n+            if (e instanceof FileNotFoundException) {\n+                localResourceFileNotFoundWhenReleasingSlot.mark();\n+                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                return;\n+            } else {\n+                LOG.error(\"Unable to read local file. \", e);\n+                throw e;\n+            }\n         }\n \n         for (LocalResource lr : localResources) {\n-            try {\n-                removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n-            } catch (Exception e) {\n-                throw new IOException(e);\n-            }\n+            removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjY1MQ==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392282651", "bodyText": "LOG.info(\"Port and assignment info: {}\", pna);  are repeated twice here. We can write it in the following way:\ncatch (IOException e) {\n            //common1\n            if (e instanceof FileNotFoundException) {\n                //xx\n            } else {\n                //yy\n            }\n       // common2\n        }", "author": "Ethanlm", "createdAt": "2020-03-13T15:01:58Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,7 +459,28 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n+        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // Will need further investigation if the race condition happens again\n+        List<LocalResource> localResources;\n+        try {\n+            // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n+            // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n+            localResources = getLocalResources(pna);\n+        } catch (FileNotFoundException fnfException) {\n+            localResourceFileNotFound.mark();\n+            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n+                        + \"DownloadExecService is too busy\", fnfException);\n+            LOG.info(\"Port and assignment info: {}\", pna);\n+            return;\n+        } catch (IOException ioException) {\n+            LOG.error(\"Unable to read local conf file. \", ioException);\n+            LOG.info(\"Port and assignment info: {}\", pna);", "originalCommit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjY0Mw==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392706643", "bodyText": "changed", "author": "RuiLi8080", "createdAt": "2020-03-15T19:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex c14b45cb9..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -460,32 +461,29 @@ public class AsyncLocalizer implements AutoCloseable {\n         }\n \n \n-        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n-        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // ALERT: A possible race condition should have been resolved\n+        // by separating the thread pools into downloadExecService and taskExecService\n+        // https://github.com/apache/storm/pull/3153\n         // Will need further investigation if the race condition happens again\n         List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n-        } catch (FileNotFoundException fnfException) {\n-            localResourceFileNotFound.mark();\n-            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n-                        + \"DownloadExecService is too busy\", fnfException);\n+        } catch (IOException e) {\n             LOG.info(\"Port and assignment info: {}\", pna);\n-            return;\n-        } catch (IOException ioException) {\n-            LOG.error(\"Unable to read local conf file. \", ioException);\n-            LOG.info(\"Port and assignment info: {}\", pna);\n-            throw ioException;\n+            if (e instanceof FileNotFoundException) {\n+                localResourceFileNotFoundWhenReleasingSlot.mark();\n+                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                return;\n+            } else {\n+                LOG.error(\"Unable to read local file. \", e);\n+                throw e;\n+            }\n         }\n \n         for (LocalResource lr : localResources) {\n-            try {\n-                removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n-            } catch (Exception e) {\n-                throw new IOException(e);\n-            }\n+            removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDMxNw==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392284317", "bodyText": "This is very specific to local resource file not found inside releaseSlotFor. So the description and the variable should be more specific.", "author": "Ethanlm", "createdAt": "2020-03-13T15:04:35Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -109,6 +111,7 @@\n         this.blobCacheUpdateDuration = metricsRegistry.registerTimer(\"supervisor:blob-cache-update-duration\");\n         this.blobLocalizationDuration = metricsRegistry.registerTimer(\"supervisor:blob-localization-duration\");\n         this.numBlobUpdateVersionChanged = metricsRegistry.registerMeter(\"supervisor:num-blob-update-version-changed\");\n+        this.localResourceFileNotFound = metricsRegistry.registerMeter(\"supervisor:local-resource-file-not-found\");", "originalCommit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjYzMw==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392706633", "bodyText": "fixed", "author": "RuiLi8080", "createdAt": "2020-03-15T19:56:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDMxNw=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex c14b45cb9..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -111,7 +111,8 @@ public class AsyncLocalizer implements AutoCloseable {\n         this.blobCacheUpdateDuration = metricsRegistry.registerTimer(\"supervisor:blob-cache-update-duration\");\n         this.blobLocalizationDuration = metricsRegistry.registerTimer(\"supervisor:blob-localization-duration\");\n         this.numBlobUpdateVersionChanged = metricsRegistry.registerMeter(\"supervisor:num-blob-update-version-changed\");\n-        this.localResourceFileNotFound = metricsRegistry.registerMeter(\"supervisor:local-resource-file-not-found\");\n+        this.localResourceFileNotFoundWhenReleasingSlot\n+                = metricsRegistry.registerMeter(\"supervisor:local-resource-file-not-found-when-releasing-slot\");\n         this.metricsRegistry = metricsRegistry;\n         isLocalMode = ConfigUtils.isLocalMode(conf);\n         fsOps = ops;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzcyNw==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392287727", "bodyText": "should have been", "author": "Ethanlm", "createdAt": "2020-03-13T15:10:27Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,7 +459,28 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n+\n+        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService", "originalCommit": "17c17e3bd1b86413ed1433d88f9e22b315628221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjYyMg==", "url": "https://github.com/apache/storm/pull/3226#discussion_r392706622", "bodyText": "fixed", "author": "RuiLi8080", "createdAt": "2020-03-15T19:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex c14b45cb9..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -460,32 +461,29 @@ public class AsyncLocalizer implements AutoCloseable {\n         }\n \n \n-        // ALERT: A possible race condition could be resolved by separating the thread pools into downloadExecService and taskExecService\n-        // https://git.ouroath.com/storm/storm/commit/ebd52b37c7448d381d31451e46e8f19c6e51352d#diff-74535cb89e9e926ad424a8d1e2fa9586\n+        // ALERT: A possible race condition should have been resolved\n+        // by separating the thread pools into downloadExecService and taskExecService\n+        // https://github.com/apache/storm/pull/3153\n         // Will need further investigation if the race condition happens again\n         List<LocalResource> localResources;\n         try {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n-        } catch (FileNotFoundException fnfException) {\n-            localResourceFileNotFound.mark();\n-            LOG.warn(\"Local base blobs have not been downloaded yet. \"\n-                        + \"DownloadExecService is too busy\", fnfException);\n+        } catch (IOException e) {\n             LOG.info(\"Port and assignment info: {}\", pna);\n-            return;\n-        } catch (IOException ioException) {\n-            LOG.error(\"Unable to read local conf file. \", ioException);\n-            LOG.info(\"Port and assignment info: {}\", pna);\n-            throw ioException;\n+            if (e instanceof FileNotFoundException) {\n+                localResourceFileNotFoundWhenReleasingSlot.mark();\n+                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                return;\n+            } else {\n+                LOG.error(\"Unable to read local file. \", e);\n+                throw e;\n+            }\n         }\n \n         for (LocalResource lr : localResources) {\n-            try {\n-                removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n-            } catch (Exception e) {\n-                throw new IOException(e);\n-            }\n+            removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4OTk1NQ==", "url": "https://github.com/apache/storm/pull/3226#discussion_r393189955", "bodyText": "This can be IOException", "author": "Ethanlm", "createdAt": "2020-03-16T17:22:33Z", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -456,13 +460,31 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             topoConfBlob.removeReference(pna);\n         }\n \n-        for (LocalResource lr : getLocalResources(pna)) {\n-            try {\n-                removeBlobReference(lr.getBlobName(), pna, lr.shouldUncompress());\n-            } catch (Exception e) {\n-                throw new IOException(e);\n+\n+        // ALERT: A possible race condition should have been resolved\n+        // by separating the thread pools into downloadExecService and taskExecService\n+        // https://github.com/apache/storm/pull/3153\n+        // Will need further investigation if the race condition happens again\n+        List<LocalResource> localResources;\n+        try {\n+            // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n+            // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n+            localResources = getLocalResources(pna);\n+        } catch (Exception e) {", "originalCommit": "693812343044c54ae9bac60f59fded1acb853491", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NDAzOQ==", "url": "https://github.com/apache/storm/pull/3226#discussion_r393444039", "bodyText": "Fixed", "author": "RuiLi8080", "createdAt": "2020-03-17T04:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4OTk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\nindex 16f3218d4..f59943d12 100644\n--- a/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n+++ b/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java\n\n@@ -470,7 +470,7 @@ public class AsyncLocalizer implements AutoCloseable {\n             // Precondition1: Base blob stormconf.ser and stormcode.ser have been localized\n             // Precondition2: Both these two blob files are fully downloaded and proper permission been set\n             localResources = getLocalResources(pna);\n-        } catch (Exception e) {\n+        } catch (IOException e) {\n             LOG.info(\"Port and assignment info: {}\", pna);\n             if (e instanceof FileNotFoundException) {\n                 localResourceFileNotFoundWhenReleasingSlot.mark();\n"}}, {"oid": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "url": "https://github.com/apache/storm/commit/e36e28a5b6738f9b20c010ef75f9cb980ac32970", "message": "addressed comments", "committedDate": "2020-03-17T04:51:54Z", "type": "commit"}, {"oid": "e36e28a5b6738f9b20c010ef75f9cb980ac32970", "url": "https://github.com/apache/storm/commit/e36e28a5b6738f9b20c010ef75f9cb980ac32970", "message": "addressed comments", "committedDate": "2020-03-17T04:51:54Z", "type": "forcePushed"}]}