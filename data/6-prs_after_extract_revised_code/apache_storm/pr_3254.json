{"pr_number": 3254, "pr_title": "STORM-3596 use send assignment status in blacklist scheduling", "pr_createdAt": "2020-04-20T21:05:30Z", "pr_url": "https://github.com/apache/storm/pull/3254", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQxNTY4NA==", "url": "https://github.com/apache/storm/pull/3254#discussion_r412415684", "bodyText": "Synchronization is needed otherwise there can be a race condition between getting the current count and updating the count (line 296 and line297)\nAlso between this.assignmentFailures.clear(); and `assignmentFailures.put(node, failCount);", "author": "Ethanlm", "createdAt": "2020-04-21T19:03:04Z", "path": "storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java", "diffHunk": "@@ -266,4 +286,15 @@ private Object initializeInstance(String className, String representation) {\n     public Set<String> getBlacklistSupervisorIds() {\n         return Collections.unmodifiableSet(blacklistedSupervisorIds);\n     }\n+\n+    @Override\n+    public void nodeAssignmentSent(String node, boolean successful) {\n+        if (!blacklistSendAssignentFailures) {\n+            return;\n+        }\n+        if (!successful) {\n+            int failCount = assignmentFailures.getOrDefault(node, 0) + 1;\n+            assignmentFailures.put(node, failCount);", "originalCommit": "8611deb66f870a21b0199e52a6e2254b55314773", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669d886bef942498ec83d5c6839cfd03f25a0307", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\nindex e549fab2b..b29981f20 100644\n--- a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\n+++ b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\n\n@@ -293,8 +294,10 @@ public class BlacklistScheduler implements IScheduler {\n             return;\n         }\n         if (!successful) {\n-            int failCount = assignmentFailures.getOrDefault(node, 0) + 1;\n-            assignmentFailures.put(node, failCount);\n+            synchronized (assignmentFailures) {\n+                int failCount = assignmentFailures.getOrDefault(node, 0) + 1;\n+                assignmentFailures.put(node, failCount);\n+            }\n         }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQyMzIyOA==", "url": "https://github.com/apache/storm/pull/3254#discussion_r412423228", "bodyText": "since we have this now, Line92 and Line 93 need to be adjusted\n                    LOG.debug(\"supervisorsWithFailures : {}\", supervisorsWithFailures);\n                    reporter.reportBlacklist(supervisor, supervisorsWithFailures);", "author": "Ethanlm", "createdAt": "2020-04-21T19:14:36Z", "path": "storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java", "diffHunk": "@@ -72,6 +74,15 @@ public void prepare(Map<String, Object> conf) {\n             }\n         }\n \n+        // update countMap failures for sendAssignments failing\n+        for (Map<String, Integer> item : sendAssignmentFailureCount) {", "originalCommit": "8611deb66f870a21b0199e52a6e2254b55314773", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669d886bef942498ec83d5c6839cfd03f25a0307", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java\nindex abf5abc6b..675e636ed 100644\n--- a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java\n+++ b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java\n\n@@ -90,6 +90,7 @@ public class DefaultBlacklistStrategy implements IBlacklistStrategy {\n                 if (!blacklist.containsKey(supervisor)) { // if not in blacklist then add it and set the resume time according to config\n                     LOG.debug(\"Added supervisor {} to blacklist\", supervisor);\n                     LOG.debug(\"supervisorsWithFailures : {}\", supervisorsWithFailures);\n+                    LOG.debug(\"sendAssignmentFailureCount: {}\", sendAssignmentFailureCount);\n                     reporter.reportBlacklist(supervisor, supervisorsWithFailures);\n                     blacklist.put(supervisor, resumeTime / nimbusMonitorFreqSecs);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQzMzA3Mg==", "url": "https://github.com/apache/storm/pull/3254#discussion_r412433072", "bodyText": "Looks like we need to modify the interface every time if we want to add another kind of failures.\nTechnically this is a public interface and users can provide their own implementation so backwards compatibility should be preserved as long as possible. If we can make it backwards compatible, that would be fantastic.\nBut I assume users don't really do that since this is actually tightly coupled and not really easy for users to provide their own implementation; even if they do, it is easy to make the change since the interface change is minimum. I feel this IBlacklistStrategy interface itself is not well defined and there are more refactoring to be done with this interface. So if it's hard to maintain backwards compatibility, this change is fine to me. Refactoring can be a follow-up", "author": "Ethanlm", "createdAt": "2020-04-21T19:29:49Z", "path": "storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/IBlacklistStrategy.java", "diffHunk": "@@ -35,7 +36,9 @@\n      *       the `cluster` object.\n      * @return blacklisted supervisors' id set\n      */\n-    Set<String> getBlacklist(List<Map<String, Set<Integer>>> badSupervisorsToleranceSlidingWindow, Cluster cluster, Topologies topologies);\n+    Set<String> getBlacklist(List<Map<String, Set<Integer>>> badSupervisorsToleranceSlidingWindow,", "originalCommit": "8611deb66f870a21b0199e52a6e2254b55314773", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3Mzc2MA==", "url": "https://github.com/apache/storm/pull/3254#discussion_r413973760", "bodyText": "Make this final since we are synchronize on it.", "author": "Ethanlm", "createdAt": "2020-04-23T17:09:39Z", "path": "storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java", "diffHunk": "@@ -51,12 +52,15 @@\n     protected IBlacklistStrategy blacklistStrategy;\n     protected int nimbusMonitorFreqSecs;\n     protected Map<String, Set<Integer>> cachedSupervisors;\n-    //key is supervisor key ,value is supervisor ports\n-    protected EvictingQueue<HashMap<String, Set<Integer>>> badSupervisorsToleranceSlidingWindow;\n+    // key is supervisor nodeId, value is supervisor ports\n+    protected EvictingQueue<Map<String, Set<Integer>>> badSupervisorsToleranceSlidingWindow;\n+    protected EvictingQueue<Map<String, Integer>> sendAssignmentFailureCount;\n+    private Map<String, Integer> assignmentFailures = new ConcurrentHashMap<>();", "originalCommit": "1d6b0e9c1b3e3ea2aebfd88485d28d4910a0f8ba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669d886bef942498ec83d5c6839cfd03f25a0307", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\nindex ef655b77f..b29981f20 100644\n--- a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\n+++ b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\n\n@@ -55,7 +54,7 @@ public class BlacklistScheduler implements IScheduler {\n     // key is supervisor nodeId, value is supervisor ports\n     protected EvictingQueue<Map<String, Set<Integer>>> badSupervisorsToleranceSlidingWindow;\n     protected EvictingQueue<Map<String, Integer>> sendAssignmentFailureCount;\n-    private Map<String, Integer> assignmentFailures = new ConcurrentHashMap<>();\n+    private final Map<String, Integer> assignmentFailures = new HashMap<>();\n     protected int windowSize;\n     protected volatile Set<String> blacklistedSupervisorIds;     // supervisor ids\n     private boolean blacklistOnBadSlots;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3NDQ1Nw==", "url": "https://github.com/apache/storm/pull/3254#discussion_r413974457", "bodyText": "Since we already synchronized on it, maybe should just as well put assignmentFailureWindow.putAll(this.assignmentFailures); inside the block and then it doesn't need to be a concurrentHashMap.\nTo reduce two synchronization mechanisms to one", "author": "Ethanlm", "createdAt": "2020-04-23T17:10:42Z", "path": "storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java", "diffHunk": "@@ -155,6 +163,18 @@ private void badSupervisors(Map<String, SupervisorDetails> supervisors) {\n         badSupervisorsToleranceSlidingWindow.add(badSupervisors);\n     }\n \n+    private void trackAssignmentFailures() {\n+        if (!blacklistSendAssignentFailures) {\n+            return;\n+        }\n+        Map<String, Integer> assignmentFailureWindow = new HashMap<>();\n+        assignmentFailureWindow.putAll(this.assignmentFailures);\n+        synchronized (assignmentFailures) {", "originalCommit": "1d6b0e9c1b3e3ea2aebfd88485d28d4910a0f8ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxMTg5OA==", "url": "https://github.com/apache/storm/pull/3254#discussion_r414011898", "bodyText": "yes", "author": "agresch", "createdAt": "2020-04-23T18:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3NDQ1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "669d886bef942498ec83d5c6839cfd03f25a0307", "chunk": "diff --git a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\nindex ef655b77f..b29981f20 100644\n--- a/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\n+++ b/storm-server/src/main/java/org/apache/storm/scheduler/blacklist/BlacklistScheduler.java\n\n@@ -168,8 +167,8 @@ public class BlacklistScheduler implements IScheduler {\n             return;\n         }\n         Map<String, Integer> assignmentFailureWindow = new HashMap<>();\n-        assignmentFailureWindow.putAll(this.assignmentFailures);\n         synchronized (assignmentFailures) {\n+            assignmentFailureWindow.putAll(this.assignmentFailures);\n             this.assignmentFailures.clear();\n         }\n         this.sendAssignmentFailureCount.add(assignmentFailureWindow);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3NTY3OQ==", "url": "https://github.com/apache/storm/pull/3254#discussion_r413975679", "bodyText": "This reportBlacklist no longer fits the need since we added sentAssignmentFailure. Maybe need to fix it as a follow-up. Not sure what's the best way to do it", "author": "Ethanlm", "createdAt": "2020-04-23T17:12:30Z", "path": "storm-server/src/main/java/org/apache/storm/scheduler/blacklist/strategies/DefaultBlacklistStrategy.java", "diffHunk": "@@ -72,13 +74,23 @@ public void prepare(Map<String, Object> conf) {\n             }\n         }\n \n+        // update countMap failures for sendAssignments failing\n+        for (Map<String, Integer> item : sendAssignmentFailureCount) {\n+            for (Map.Entry<String, Integer> entry : item.entrySet()) {\n+                String supervisorNode = entry.getKey();\n+                int sendAssignmentFailures = entry.getValue() + countMap.getOrDefault(supervisorNode, 0);\n+                countMap.put(supervisorNode, sendAssignmentFailures);\n+            }\n+        }\n+\n         for (Map.Entry<String, Integer> entry : countMap.entrySet()) {\n             String supervisor = entry.getKey();\n             int count = entry.getValue();\n             if (count >= toleranceCount) {\n                 if (!blacklist.containsKey(supervisor)) { // if not in blacklist then add it and set the resume time according to config\n                     LOG.debug(\"Added supervisor {} to blacklist\", supervisor);\n                     LOG.debug(\"supervisorsWithFailures : {}\", supervisorsWithFailures);\n+                    LOG.debug(\"sendAssignmentFailureCount: {}\", sendAssignmentFailureCount);\n                     reporter.reportBlacklist(supervisor, supervisorsWithFailures);", "originalCommit": "1d6b0e9c1b3e3ea2aebfd88485d28d4910a0f8ba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "669d886bef942498ec83d5c6839cfd03f25a0307", "url": "https://github.com/apache/storm/commit/669d886bef942498ec83d5c6839cfd03f25a0307", "message": "STORM-3596 use send assignment status in blacklist scheduling", "committedDate": "2020-04-28T18:49:38Z", "type": "commit"}, {"oid": "669d886bef942498ec83d5c6839cfd03f25a0307", "url": "https://github.com/apache/storm/commit/669d886bef942498ec83d5c6839cfd03f25a0307", "message": "STORM-3596 use send assignment status in blacklist scheduling", "committedDate": "2020-04-28T18:49:38Z", "type": "forcePushed"}]}