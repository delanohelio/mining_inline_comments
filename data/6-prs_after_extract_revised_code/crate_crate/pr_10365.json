{"pr_number": 10365, "pr_title": "Merge task prepare and start", "pr_createdAt": "2020-08-13T08:29:08Z", "pr_url": "https://github.com/crate/crate/pull/10365", "timeline": [{"oid": "749687dc84bb352cac0e171725a7a3f5c108ea93", "url": "https://github.com/crate/crate/commit/749687dc84bb352cac0e171725a7a3f5c108ea93", "message": "Don't manage inner tasks in a map, but keep original list\n\nAvoids some copy/allocation operations. The downside is that the Task\ninstances are kept referenced until the last task finishes.\n\nSince most tasks are chained and operate as a lazy pipeline, most of\nthem likely finishes at a similar time anyway.", "committedDate": "2020-08-13T09:09:43Z", "type": "forcePushed"}, {"oid": "6788cc9203c48f8fadd4acbb3f21b6170319556b", "url": "https://github.com/crate/crate/commit/6788cc9203c48f8fadd4acbb3f21b6170319556b", "message": "Don't manage inner tasks in a map, but keep original list\n\nAvoids some copy/allocation operations. The downside is that the Task\ninstances are kept referenced until the last task finishes.\n\nSince most tasks are chained and operate as a lazy pipeline, most of\nthem likely finishes at a similar time anyway.", "committedDate": "2020-08-13T11:24:21Z", "type": "commit"}, {"oid": "4affa7f408cd98ba9491f8a2f6be99a0998e68f2", "url": "https://github.com/crate/crate/commit/4affa7f408cd98ba9491f8a2f6be99a0998e68f2", "message": "Merge task prepare and start\n\nThere is no benefit distinguishing between the two. The opposite is the\ncase, it adds one more explicit state to reason about.\n\nPart of the motivation is to make the BatchIterator construction async.\nThat should allow us to use `awaitShardSearchActive` from\n\n  https://github.com/elastic/elasticsearch/commit/f23ed6188db864b1ea1062e5d44bdf5654b2aa3c", "committedDate": "2020-08-13T11:24:32Z", "type": "commit"}, {"oid": "4affa7f408cd98ba9491f8a2f6be99a0998e68f2", "url": "https://github.com/crate/crate/commit/4affa7f408cd98ba9491f8a2f6be99a0998e68f2", "message": "Merge task prepare and start\n\nThere is no benefit distinguishing between the two. The opposite is the\ncase, it adds one more explicit state to reason about.\n\nPart of the motivation is to make the BatchIterator construction async.\nThat should allow us to use `awaitShardSearchActive` from\n\n  https://github.com/elastic/elasticsearch/commit/f23ed6188db864b1ea1062e5d44bdf5654b2aa3c", "committedDate": "2020-08-13T11:24:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4Mjk5Ng==", "url": "https://github.com/crate/crate/pull/10365#discussion_r469882996", "bodyText": "Although this changes the alorithm from a O(1) of the map lookup to a O(n), n is usually 2 or 3, so it's likely faster than the O(1) of the map was.", "author": "mfussenegger", "createdAt": "2020-08-13T11:27:46Z", "path": "server/src/main/java/io/crate/execution/jobs/RootTask.java", "diffHunk": "@@ -219,9 +196,14 @@ public void start() throws Throwable {\n     }\n \n     @Nullable\n+    @SuppressWarnings(\"unchecked\")\n     public <T extends Task> T getTaskOrNull(int phaseId) {\n-        //noinspection unchecked\n-        return (T) tasksByPhaseId.get(phaseId);\n+        for (Task task : orderedTasks) {", "originalCommit": "4affa7f408cd98ba9491f8a2f6be99a0998e68f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "afeb7eff3b743ae484ac115d29055991e56fb5a5", "url": "https://github.com/crate/crate/commit/afeb7eff3b743ae484ac115d29055991e56fb5a5", "message": "Merge branch 'master' into j/tasks", "committedDate": "2020-08-13T13:28:13Z", "type": "commit"}, {"oid": "3b5428f745768536005c9114f21fcc3f91f28733", "url": "https://github.com/crate/crate/commit/3b5428f745768536005c9114f21fcc3f91f28733", "message": "Merge branch 'master' into j/tasks", "committedDate": "2020-08-13T14:02:49Z", "type": "commit"}]}