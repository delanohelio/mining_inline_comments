{"pr_number": 10001, "pr_title": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation", "pr_createdAt": "2020-05-26T10:42:31Z", "pr_url": "https://github.com/crate/crate/pull/10001", "timeline": [{"oid": "65e0ee536ca1b8491c9b0cb6c6d89a4f7780c808", "url": "https://github.com/crate/crate/commit/65e0ee536ca1b8491c9b0cb6c6d89a4f7780c808", "message": "Add integration test", "committedDate": "2020-05-28T09:14:26Z", "type": "forcePushed"}, {"oid": "7a6f50e7c8f2b04f5d5caee600733e613edbc6cd", "url": "https://github.com/crate/crate/commit/7a6f50e7c8f2b04f5d5caee600733e613edbc6cd", "message": "Add integration test", "committedDate": "2020-05-28T09:18:42Z", "type": "forcePushed"}, {"oid": "93df10848d6a56bbc03a92b941a3cdaab9140752", "url": "https://github.com/crate/crate/commit/93df10848d6a56bbc03a92b941a3cdaab9140752", "message": "Add integration test", "committedDate": "2020-05-28T09:22:15Z", "type": "forcePushed"}, {"oid": "507c85a6e4ed6266c7afe26ea5e41a14aca6c550", "url": "https://github.com/crate/crate/commit/507c85a6e4ed6266c7afe26ea5e41a14aca6c550", "message": "Add integration test", "committedDate": "2020-05-28T09:24:24Z", "type": "forcePushed"}, {"oid": "3d479382eb1216d07f7f6c37f8e788300789c68a", "url": "https://github.com/crate/crate/commit/3d479382eb1216d07f7f6c37f8e788300789c68a", "message": "Add integration test", "committedDate": "2020-05-28T09:28:20Z", "type": "forcePushed"}, {"oid": "4faf786afe84f11817e3b38df8a9022388415581", "url": "https://github.com/crate/crate/commit/4faf786afe84f11817e3b38df8a9022388415581", "message": "Add integration test", "committedDate": "2020-05-28T09:32:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NDcxMg==", "url": "https://github.com/crate/crate/pull/10001#discussion_r431794712", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ensureYellow();\n          \n      \n    \n    \n  \n\nShouldn't be required here.", "author": "mfussenegger", "createdAt": "2020-05-28T12:24:05Z", "path": "server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java", "diffHunk": "@@ -485,4 +493,86 @@ public void test_cannot_create_snapshot_in_read_only_repo() {\n         expectedException.expectMessage(\"cannot create snapshot in a readonly repository\");\n         execute(\"create snapshot my_repo_ro.s1 ALL WITH (wait_for_completion=true)\");\n     }\n+\n+    public void test_snapshot_with_corrupted_shard_index_file() throws Exception {\n+        execute(\"CREATE TABLE t1 (x int)\");\n+        var numberOfDocs = randomLongBetween(0, 10);\n+        for (int i = 0; i < numberOfDocs; i++) {\n+            execute(\"INSERT INTO t1 (x) VALUES (?)\", new Object[]{randomInt()});\n+        }\n+        execute(\"REFRESH TABLE t1\");\n+\n+        var snapShotName1 = \"s1\";\n+        var fullSnapShotName1 =  REPOSITORY_NAME + \".\" + snapShotName1;\n+        execute(\"CREATE SNAPSHOT \" + fullSnapShotName1 + \" ALL WITH (wait_for_completion=true)\");\n+        ensureYellow();", "originalCommit": "4faf786afe84f11817e3b38df8a9022388415581", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "chunk": "diff --git a/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\nindex b82377dab9..c234d7cddf 100644\n--- a/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n\n@@ -505,7 +505,6 @@ public class SnapshotRestoreIntegrationTest extends SQLTransportIntegrationTest\n         var snapShotName1 = \"s1\";\n         var fullSnapShotName1 =  REPOSITORY_NAME + \".\" + snapShotName1;\n         execute(\"CREATE SNAPSHOT \" + fullSnapShotName1 + \" ALL WITH (wait_for_completion=true)\");\n-        ensureYellow();\n \n         var repositoryData = getRepositoryData();\n         var indexIds = repositoryData.getIndices();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTE0MA==", "url": "https://github.com/crate/crate/pull/10001#discussion_r431795140", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ensureYellow();", "author": "mfussenegger", "createdAt": "2020-05-28T12:24:53Z", "path": "server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java", "diffHunk": "@@ -485,4 +493,86 @@ public void test_cannot_create_snapshot_in_read_only_repo() {\n         expectedException.expectMessage(\"cannot create snapshot in a readonly repository\");\n         execute(\"create snapshot my_repo_ro.s1 ALL WITH (wait_for_completion=true)\");\n     }\n+\n+    public void test_snapshot_with_corrupted_shard_index_file() throws Exception {\n+        execute(\"CREATE TABLE t1 (x int)\");\n+        var numberOfDocs = randomLongBetween(0, 10);\n+        for (int i = 0; i < numberOfDocs; i++) {\n+            execute(\"INSERT INTO t1 (x) VALUES (?)\", new Object[]{randomInt()});\n+        }\n+        execute(\"REFRESH TABLE t1\");\n+\n+        var snapShotName1 = \"s1\";\n+        var fullSnapShotName1 =  REPOSITORY_NAME + \".\" + snapShotName1;\n+        execute(\"CREATE SNAPSHOT \" + fullSnapShotName1 + \" ALL WITH (wait_for_completion=true)\");\n+        ensureYellow();\n+\n+        var repositoryData = getRepositoryData();\n+        var indexIds = repositoryData.getIndices();\n+        assertThat(indexIds.size(), equalTo(1));\n+\n+        var corruptedIndex = indexIds.entrySet().iterator().next().getValue();\n+        var shardIndexFile = defaultRepositoryLocation.toPath().resolve(\"indices\")\n+            .resolve(corruptedIndex.getId()).resolve(\"0\")\n+            .resolve(\"index-0\");\n+\n+        // Truncating shard index file\n+        try (var outChan = Files.newByteChannel(shardIndexFile, StandardOpenOption.WRITE)) {\n+            outChan.truncate(randomInt(10));\n+        }\n+\n+        assertSnapShotState(snapShotName1);\n+\n+        execute(\"drop table t1\");\n+        execute(\"RESTORE SNAPSHOT \" +  fullSnapShotName1 + \" TABLE t1 with (wait_for_completion=true)\");\n+        ensureYellow();\n+\n+        execute(\"SELECT COUNT(*) FROM t1\");\n+        assertThat(response.rows()[0][0], is(numberOfDocs));\n+\n+        var numberOfAdditionalDocs = randomLongBetween(0, 10);\n+        for (int i = 0; i < numberOfAdditionalDocs; i++) {\n+            execute(\"INSERT INTO t1 (x) VALUES (?)\", new Object[]{randomInt()});\n+        }\n+        execute(\"REFRESH TABLE t1\");\n+\n+        var snapShotName2 = \"s2\";\n+        var fullSnapShotName2 = REPOSITORY_NAME + \".s2\";\n+\n+        execute(\"CREATE SNAPSHOT \" + fullSnapShotName2 + \" ALL WITH (wait_for_completion=true)\");\n+        ensureYellow();", "originalCommit": "4faf786afe84f11817e3b38df8a9022388415581", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "chunk": "diff --git a/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\nindex b82377dab9..c234d7cddf 100644\n--- a/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n\n@@ -505,7 +505,6 @@ public class SnapshotRestoreIntegrationTest extends SQLTransportIntegrationTest\n         var snapShotName1 = \"s1\";\n         var fullSnapShotName1 =  REPOSITORY_NAME + \".\" + snapShotName1;\n         execute(\"CREATE SNAPSHOT \" + fullSnapShotName1 + \" ALL WITH (wait_for_completion=true)\");\n-        ensureYellow();\n \n         var repositoryData = getRepositoryData();\n         var indexIds = repositoryData.getIndices();\n"}}, {"oid": "5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "url": "https://github.com/crate/crate/commit/5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "message": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation\n\nBackport of https://github.com/elastic/elasticsearch/pull/41310", "committedDate": "2020-05-28T13:28:17Z", "type": "commit"}, {"oid": "5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "url": "https://github.com/crate/crate/commit/5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "message": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation\n\nBackport of https://github.com/elastic/elasticsearch/pull/41310", "committedDate": "2020-05-28T13:28:17Z", "type": "forcePushed"}, {"oid": "17941fb4222163ad0009a77af47b03bd9af13028", "url": "https://github.com/crate/crate/commit/17941fb4222163ad0009a77af47b03bd9af13028", "message": "Merge branch 'master' into mkleen/fix_broken_shard_snapshot", "committedDate": "2020-05-28T14:02:18Z", "type": "commit"}]}