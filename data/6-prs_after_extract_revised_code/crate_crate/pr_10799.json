{"pr_number": 10799, "pr_title": "Add scalar function split_part", "pr_createdAt": "2020-11-23T17:40:34Z", "pr_url": "https://github.com/crate/crate/pull/10799", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ1MjA0MQ==", "url": "https://github.com/crate/crate/pull/10799#discussion_r529452041", "bodyText": "minor: I think naming this var occurrence or positional makes it more clear.", "author": "seut", "createdAt": "2020-11-24T10:55:47Z", "path": "server/src/main/java/io/crate/expression/scalar/string/StringSplitPartFunction.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.expression.scalar.string;\n+\n+import io.crate.data.Input;\n+import io.crate.expression.scalar.ScalarFunctionModule;\n+import io.crate.metadata.NodeContext;\n+import io.crate.metadata.Scalar;\n+import io.crate.metadata.TransactionContext;\n+import io.crate.metadata.functions.Signature;\n+import io.crate.types.DataTypes;\n+\n+/**\n+ * String split_part(String text, String delimiter, Integer field)\n+ * <p>\n+ * Splits a text on delimiter and returns the and returns the part at index field (1 for the first part)\n+ */\n+public final class StringSplitPartFunction extends Scalar<String, Object> {\n+\n+    public static void register(ScalarFunctionModule module) {\n+        module.register(\n+            Signature.scalar(\n+                \"split_part\",\n+                DataTypes.STRING.getTypeSignature(),\n+                DataTypes.STRING.getTypeSignature(),\n+                DataTypes.INTEGER.getTypeSignature(),\n+                DataTypes.STRING.getTypeSignature()\n+            ),\n+            StringSplitPartFunction::new\n+        );\n+    }\n+\n+    private final Signature signature;\n+    private final Signature boundSignature;\n+\n+    public StringSplitPartFunction(Signature signature, Signature boundSignature) {\n+        this.signature = signature;\n+        this.boundSignature = boundSignature;\n+    }\n+\n+    @Override\n+    public String evaluate(TransactionContext txnCtx, NodeContext nodeCtx, Input<Object>[] args) {\n+        assert args.length == 3 : \"split_part takes exactly three arguments\";\n+        var text = (String) args[0].value();\n+        var delimiter = (String) args[1].value();\n+        var fieldB = (Integer) args[2].value();", "originalCommit": "857170d6c007d3d5acef524810d98bdf0820bd1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0MDQ5OQ==", "url": "https://github.com/crate/crate/pull/10799#discussion_r529740499", "bodyText": "It is named field in the PostgreSQL documentation. I changed it to index for the Crate documentation but used field in the implementation. I just pushed a change to use index everywhere. If you prefer occurrence or positional I can also change it to that.", "author": "peterzeller", "createdAt": "2020-11-24T17:10:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ1MjA0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE2MzUzMg==", "url": "https://github.com/crate/crate/pull/10799#discussion_r530163532", "bodyText": "\ud83d\udc4d index sounds also fine.", "author": "seut", "createdAt": "2020-11-25T07:44:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ1MjA0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ac804f9cc8f5dfad0cd9d455efd196d1e52ad3b", "chunk": "diff --git a/server/src/main/java/io/crate/expression/scalar/string/StringSplitPartFunction.java b/server/src/main/java/io/crate/expression/scalar/string/StringSplitPartFunction.java\nindex 502923a88b..d128234746 100644\n--- a/server/src/main/java/io/crate/expression/scalar/string/StringSplitPartFunction.java\n+++ b/server/src/main/java/io/crate/expression/scalar/string/StringSplitPartFunction.java\n\n@@ -31,9 +31,9 @@ import io.crate.metadata.functions.Signature;\n import io.crate.types.DataTypes;\n \n /**\n- * String split_part(String text, String delimiter, Integer field)\n+ * String split_part(String text, String delimiter, Integer index)\n  * <p>\n- * Splits a text on delimiter and returns the and returns the part at index field (1 for the first part)\n+ * Splits a text on delimiter and returns the and returns the part at index (1 for the first part)\n  */\n public final class StringSplitPartFunction extends Scalar<String, Object> {\n \n"}}, {"oid": "2ac804f9cc8f5dfad0cd9d455efd196d1e52ad3b", "url": "https://github.com/crate/crate/commit/2ac804f9cc8f5dfad0cd9d455efd196d1e52ad3b", "message": "Add scalar function split_part\n\nSplits a string into parts using a delimiter and returns the part at the\ngiven index.\n\nCo-authored-by: Naomi Slater <23469+mechanomi@users.noreply.github.com>", "committedDate": "2020-11-25T09:52:45Z", "type": "commit"}, {"oid": "2ac804f9cc8f5dfad0cd9d455efd196d1e52ad3b", "url": "https://github.com/crate/crate/commit/2ac804f9cc8f5dfad0cd9d455efd196d1e52ad3b", "message": "Add scalar function split_part\n\nSplits a string into parts using a delimiter and returns the part at the\ngiven index.\n\nCo-authored-by: Naomi Slater <23469+mechanomi@users.noreply.github.com>", "committedDate": "2020-11-25T09:52:45Z", "type": "forcePushed"}]}