{"pr_number": 10067, "pr_title": "Apply offset on optimized SELECT DISTINCT queries", "pr_createdAt": "2020-06-10T09:43:25Z", "pr_url": "https://github.com/crate/crate/pull/10067", "timeline": [{"oid": "8df34b1b24c5b72ab7532b94e2e94d57578f54b2", "url": "https://github.com/crate/crate/commit/8df34b1b24c5b72ab7532b94e2e94d57578f54b2", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T09:47:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAwMTI4OQ==", "url": "https://github.com/crate/crate/pull/10067#discussion_r438001289", "bodyText": "testSelectCountStarIsOptimizedInsideRelations failed with:\njava.lang.AssertionError: \nExpected: a value less than or equal to <8388608L>\n     but: <24224152L> was greater than <8388608L>\n\tat __randomizedtesting.SeedInfo.seed([A1199D5560FEB506:3485992BF20EF71E]:0)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat io.crate.testing.MemoryLimits.assertMaxBytesAllocated(MemoryLimits.java:46)\n\tat io.crate.planner.operators.LogicalPlannerTest.plan(LogicalPlannerTest.java:69)\n\tat io.crate.planner.operators.LogicalPlannerTest.testSelectCountStarIsOptimizedInsideRelations(LogicalPlannerTest.java:221)\n\nNot sure why this increased in that particular case, because that isn't even affected by the other changes in this PR. Will follow up on this separately.", "author": "mfussenegger", "createdAt": "2020-06-10T09:49:44Z", "path": "server/src/test/java/io/crate/planner/operators/LogicalPlannerTest.java", "diffHunk": "@@ -66,7 +66,7 @@ public void prepare() throws IOException {\n     }\n \n     private LogicalPlan plan(String statement) {\n-        return assertMaxBytesAllocated(ByteSizeUnit.MB.toBytes(8), () -> sqlExecutor.logicalPlan(statement));\n+        return assertMaxBytesAllocated(ByteSizeUnit.MB.toBytes(25), () -> sqlExecutor.logicalPlan(statement));", "originalCommit": "8df34b1b24c5b72ab7532b94e2e94d57578f54b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "667a9188e43dd2999affbc9980a2017229e1f9f8", "url": "https://github.com/crate/crate/commit/667a9188e43dd2999affbc9980a2017229e1f9f8", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T11:46:27Z", "type": "forcePushed"}, {"oid": "5c347dd6c52bf90350ce93af925ced5b2ef94dec", "url": "https://github.com/crate/crate/commit/5c347dd6c52bf90350ce93af925ced5b2ef94dec", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T12:08:59Z", "type": "forcePushed"}, {"oid": "128c1b6b0b503c9e2097fee50370771f0bf47715", "url": "https://github.com/crate/crate/commit/128c1b6b0b503c9e2097fee50370771f0bf47715", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T12:15:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3OTA4Nw==", "url": "https://github.com/crate/crate/pull/10067#discussion_r438079087", "bodyText": "shouldn't be limit = limit + offset here also?", "author": "seut", "createdAt": "2020-06-10T12:22:23Z", "path": "server/src/main/java/io/crate/planner/operators/TopNDistinct.java", "diffHunk": "@@ -101,31 +105,50 @@ public ExecutionPlan build(PlannerContext plannerContext,\n                 subQueryResults\n             )\n         );\n+        int offset = DataTypes.INTEGER.value(\n+            evaluate(\n+                plannerContext.transactionContext(),\n+                plannerContext.functions(),\n+                this.offset,\n+                params,\n+                subQueryResults\n+            )\n+        );\n         var inputColOutputs = InputColumn.mapToInputColumns(outputs);\n         executionPlan.addProjection(\n             new TopNDistinctProjection(\n-                limit,\n+                limit + offset,\n                 inputColOutputs,\n                 source.preferShardProjections() ? RowGranularity.SHARD : RowGranularity.CLUSTER\n             )\n         );\n         boolean onHandler = ExecutionPhases.executesOnHandler(\n             plannerContext.handlerNode(), executionPlan.resultDescription().nodeIds());\n-        if (!onHandler) {\n-            executionPlan = Merge.ensureOnHandler(executionPlan, plannerContext);\n-            executionPlan.addProjection(\n-                new TopNDistinctProjection(limit, inputColOutputs, RowGranularity.CLUSTER));\n-        } else if (source.preferShardProjections()) {\n-            executionPlan.addProjection(\n-                new TopNDistinctProjection(limit, inputColOutputs, RowGranularity.CLUSTER));\n+        if (!onHandler || source.preferShardProjections()) {\n+            if (!onHandler) {\n+                executionPlan = Merge.ensureOnHandler(executionPlan, plannerContext);\n+            }\n+            TopNDistinctProjection topNDistinct = new TopNDistinctProjection(\n+                limit + offset,\n+                inputColOutputs,\n+                RowGranularity.CLUSTER\n+            );\n+            executionPlan.addProjection(topNDistinct);\n+            if (offset > 0) {\n+                // TopNDistinctProjection outputs a distinct result-set,\n+                // That allows us to use the TopNProjection to apply the offset\n+                executionPlan.addProjection(\n+                    new TopNProjection(limit, offset, Symbols.typeView(topNDistinct.outputs()))", "originalCommit": "128c1b6b0b503c9e2097fee50370771f0bf47715", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4MTIwNw==", "url": "https://github.com/crate/crate/pull/10067#discussion_r438081207", "bodyText": "No, this is the final projection on the coordinator that needs to apply the final limit", "author": "mfussenegger", "createdAt": "2020-06-10T12:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3OTA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4MjIxNg==", "url": "https://github.com/crate/crate/pull/10067#discussion_r438082216", "bodyText": "ah right, thx.", "author": "seut", "createdAt": "2020-06-10T12:27:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3OTA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwMDAxMw==", "url": "https://github.com/crate/crate/pull/10067#discussion_r438100013", "bodyText": "Ah, but it should actually be outside of the block - otherwise it won't work for queries on sys tables or virtual tables.. Will add a fixup", "author": "mfussenegger", "createdAt": "2020-06-10T12:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3OTA4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0c20ecc7f47479500ebe2410bc76e379741be81b", "chunk": "diff --git a/server/src/main/java/io/crate/planner/operators/TopNDistinct.java b/server/src/main/java/io/crate/planner/operators/TopNDistinct.java\nindex a80933eb93..7270cebd30 100644\n--- a/server/src/main/java/io/crate/planner/operators/TopNDistinct.java\n+++ b/server/src/main/java/io/crate/planner/operators/TopNDistinct.java\n\n@@ -134,13 +134,13 @@ public final class TopNDistinct extends ForwardingLogicalPlan {\n                 RowGranularity.CLUSTER\n             );\n             executionPlan.addProjection(topNDistinct);\n-            if (offset > 0) {\n-                // TopNDistinctProjection outputs a distinct result-set,\n-                // That allows us to use the TopNProjection to apply the offset\n-                executionPlan.addProjection(\n-                    new TopNProjection(limit, offset, Symbols.typeView(topNDistinct.outputs()))\n-                );\n-            }\n+        }\n+        if (offset > 0) {\n+            // TopNDistinctProjection outputs a distinct result-set,\n+            // That allows us to use the TopNProjection to apply the offset\n+            executionPlan.addProjection(\n+                new TopNProjection(limit, offset, Symbols.typeView(inputColOutputs))\n+            );\n         }\n         return executionPlan;\n     }\n"}}, {"oid": "0c20ecc7f47479500ebe2410bc76e379741be81b", "url": "https://github.com/crate/crate/commit/0c20ecc7f47479500ebe2410bc76e379741be81b", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T14:52:39Z", "type": "forcePushed"}, {"oid": "7a9a0d73963256caca3409495247408e6ff91416", "url": "https://github.com/crate/crate/commit/7a9a0d73963256caca3409495247408e6ff91416", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T15:42:56Z", "type": "forcePushed"}, {"oid": "973da62c2ce7bd57d4af60b260255756c157b436", "url": "https://github.com/crate/crate/commit/973da62c2ce7bd57d4af60b260255756c157b436", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T17:50:48Z", "type": "commit"}, {"oid": "973da62c2ce7bd57d4af60b260255756c157b436", "url": "https://github.com/crate/crate/commit/973da62c2ce7bd57d4af60b260255756c157b436", "message": "Apply offset on optimized SELECT DISTINCT queries", "committedDate": "2020-06-10T17:50:48Z", "type": "forcePushed"}]}