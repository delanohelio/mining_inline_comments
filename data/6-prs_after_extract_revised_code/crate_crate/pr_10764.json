{"pr_number": 10764, "pr_title": "Fix NPE causing stuck queries in insert returning", "pr_createdAt": "2020-11-11T13:04:20Z", "pr_url": "https://github.com/crate/crate/pull/10764", "timeline": [{"oid": "adc875708dda1d08e7b1377d9e030b9e2d2ea773", "url": "https://github.com/crate/crate/commit/adc875708dda1d08e7b1377d9e030b9e2d2ea773", "message": "Fix NPE causing stuck queries in insert returning\n\nIf there is a failure on an individual item the results are `null` which\ncaused a NullPointerException in the result collection for `RETURNING`.\n\nAn example where the failure happened is if the insert contains a\nduplicate primary key.", "committedDate": "2020-11-11T13:05:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2Mzg3MA==", "url": "https://github.com/crate/crate/pull/10764#discussion_r521463870", "bodyText": "do we need more than 2 iterations? couldn't this be tested by adding a duplicate id inside the ids array already?", "author": "seut", "createdAt": "2020-11-11T16:05:36Z", "path": "server/src/test/java/io/crate/integrationtests/PostgresITest.java", "diffHunk": "@@ -905,6 +907,38 @@ public void test_each_non_array_pg_type_entry_can_be_joined_with_pg_proc() throw\n         }\n     }\n \n+    @Test\n+    public void test_insert_from_unnest_returning_which_inserts_duplicate_keys() throws Exception {\n+        try (var conn = DriverManager.getConnection(url(RW))) {\n+            var statement = conn.createStatement();\n+            statement.execute(\"create table tbl (id bigint primary key, val text)\");\n+            var textGenerator = DataTypeTesting.getDataGenerator(DataTypes.STRING);\n+            var insertUnnest = conn.prepareStatement(\n+                \"insert into tbl (id, val) (select id, val from unnest(?, ?) as t (id, val)) returning _id\");\n+\n+            for (int iteration = 0; iteration < randomIntBetween(2, 7); iteration++) {", "originalCommit": "adc875708dda1d08e7b1377d9e030b9e2d2ea773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUxMjc2OA==", "url": "https://github.com/crate/crate/pull/10764#discussion_r521512768", "bodyText": "I was thinking of the threshold where jdbc switched to binary streaming to have that covered too - but it's actually already randomized in the PostgresITest setup, so I can fix it to 2 iterations here \ud83d\udc4d", "author": "mfussenegger", "createdAt": "2020-11-11T17:16:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2Mzg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwNTk3NQ==", "url": "https://github.com/crate/crate/pull/10764#discussion_r521905975", "bodyText": "@seut pushed a fixup. I tried to change it to have duplicate ids in just one request, but then the error doesn't occur. I think it only happens if there is no result rows at all.", "author": "mfussenegger", "createdAt": "2020-11-12T08:04:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2Mzg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "5a60229da0e14e5fa5ae7e2c51465ca339cb43f0", "chunk": "diff --git a/server/src/test/java/io/crate/integrationtests/PostgresITest.java b/server/src/test/java/io/crate/integrationtests/PostgresITest.java\nindex 862d5d66c0..54c59b3648 100644\n--- a/server/src/test/java/io/crate/integrationtests/PostgresITest.java\n+++ b/server/src/test/java/io/crate/integrationtests/PostgresITest.java\n\n@@ -907,38 +905,6 @@ public class PostgresITest extends SQLTransportIntegrationTest {\n         }\n     }\n \n-    @Test\n-    public void test_insert_from_unnest_returning_which_inserts_duplicate_keys() throws Exception {\n-        try (var conn = DriverManager.getConnection(url(RW))) {\n-            var statement = conn.createStatement();\n-            statement.execute(\"create table tbl (id bigint primary key, val text)\");\n-            var textGenerator = DataTypeTesting.getDataGenerator(DataTypes.STRING);\n-            var insertUnnest = conn.prepareStatement(\n-                \"insert into tbl (id, val) (select id, val from unnest(?, ?) as t (id, val)) returning _id\");\n-\n-            for (int iteration = 0; iteration < randomIntBetween(2, 7); iteration++) {\n-                var ids = new Object[10];\n-                var values = new Object[10];\n-                for (int i = 0; i < 10; i++) {\n-                    ids[i] = i;\n-                    values[i] = textGenerator.get();\n-                }\n-                insertUnnest.setObject(1, conn.createArrayOf(\"bigint\", ids));\n-                insertUnnest.setObject(2, conn.createArrayOf(\"text\", values));\n-                var result = insertUnnest.executeQuery();\n-                int numResults = 0;\n-                while (result.next()) {\n-                    numResults++;\n-                }\n-                if (iteration == 0) {\n-                    assertThat(numResults, is(10));\n-                } else {\n-                    assertThat(numResults, is(0));\n-                }\n-            }\n-        }\n-    }\n-\n     private void assertSelectNameFromSysClusterWorks(Connection conn) throws SQLException {\n         PreparedStatement stmt;// verify that queries can be made after an error occurred\n         stmt = conn.prepareStatement(\"select name from sys.cluster\");\n"}}, {"oid": "5a60229da0e14e5fa5ae7e2c51465ca339cb43f0", "url": "https://github.com/crate/crate/commit/5a60229da0e14e5fa5ae7e2c51465ca339cb43f0", "message": "Update jdbc to 42.2.18\n\nGuava is updated as well to avoid a dependeny version conflict with\norg.checkerframework:checker-qual", "committedDate": "2020-11-12T08:03:19Z", "type": "commit"}, {"oid": "363e85aebbcde4fcd87bf8b784463a94e56c6acc", "url": "https://github.com/crate/crate/commit/363e85aebbcde4fcd87bf8b784463a94e56c6acc", "message": "fixup! Fix NPE causing stuck queries in insert returning", "committedDate": "2020-11-12T08:03:19Z", "type": "forcePushed"}, {"oid": "82e9fe47966b5869f92810d6caa193fff4ed68fd", "url": "https://github.com/crate/crate/commit/82e9fe47966b5869f92810d6caa193fff4ed68fd", "message": "Fix NPE causing stuck queries in insert returning\n\nIf there is a failure on an individual item the results are `null` which\ncaused a NullPointerException in the result collection for `RETURNING`.\n\nAn example where the failure happened is if the insert contains a\nduplicate primary key.", "committedDate": "2020-11-12T09:29:57Z", "type": "commit"}, {"oid": "82e9fe47966b5869f92810d6caa193fff4ed68fd", "url": "https://github.com/crate/crate/commit/82e9fe47966b5869f92810d6caa193fff4ed68fd", "message": "Fix NPE causing stuck queries in insert returning\n\nIf there is a failure on an individual item the results are `null` which\ncaused a NullPointerException in the result collection for `RETURNING`.\n\nAn example where the failure happened is if the insert contains a\nduplicate primary key.", "committedDate": "2020-11-12T09:29:57Z", "type": "forcePushed"}]}