{"pr_number": 10128, "pr_title": "Track Shard-Snapshot Index Generation at Repository Root", "pr_createdAt": "2020-06-24T10:44:28Z", "pr_url": "https://github.com/crate/crate/pull/10128", "timeline": [{"oid": "f0e223946c4453ca8b4dd4914aa7c346e84a878a", "url": "https://github.com/crate/crate/commit/f0e223946c4453ca8b4dd4914aa7c346e84a878a", "message": "Fix javadoc in BlobStoreRepository", "committedDate": "2020-06-25T08:37:19Z", "type": "forcePushed"}, {"oid": "4c034a02a214e44cf12d19a6a9503779b0b29d06", "url": "https://github.com/crate/crate/commit/4c034a02a214e44cf12d19a6a9503779b0b29d06", "message": "Fix formatting", "committedDate": "2020-06-26T13:44:40Z", "type": "forcePushed"}, {"oid": "336c30d05c10924640599e89947622b1099fa6a6", "url": "https://github.com/crate/crate/commit/336c30d05c10924640599e89947622b1099fa6a6", "message": "Remove uneeded changes", "committedDate": "2020-06-29T10:35:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5NTAxOA==", "url": "https://github.com/crate/crate/pull/10128#discussion_r446895018", "bodyText": "See https://github.com/original-brownbear/elasticsearch/blob/222c587c0ae930f2dde097621e8757b9cf217d81/server/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java#L3050", "author": "mkleen", "createdAt": "2020-06-29T11:22:41Z", "path": "server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java", "diffHunk": "@@ -539,24 +542,15 @@ public void test_snapshot_with_corrupted_shard_index_file() throws Exception {\n         var fullSnapShotName2 = REPOSITORY_NAME + \".s2\";\n \n         execute(\"CREATE SNAPSHOT \" + fullSnapShotName2 + \" ALL WITH (wait_for_completion=true)\");\n-\n-        assertSnapShotState(snapShotName2);\n-\n-        execute(\"drop table t1\");\n-        execute(\"RESTORE SNAPSHOT \" + fullSnapShotName2 + \" TABLE t1 with (wait_for_completion=true)\");\n-        ensureYellow();\n-\n-        execute(\"SELECT COUNT(*) FROM t1\");\n-        assertThat(response.rows()[0][0], is(numberOfDocs + numberOfAdditionalDocs));\n-\n+        assertSnapShotState(snapShotName2, SnapshotState.PARTIAL);", "originalCommit": "221c5c7abe30f45973db82fc8db45d1d0d9a6a30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "chunk": "diff --git a/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java b/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\nindex 354d8ab63b..5f41337e3e 100644\n--- a/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n+++ b/server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n\n@@ -554,6 +555,13 @@ public class SnapshotRestoreIntegrationTest extends SQLTransportIntegrationTest\n         assertThat(response.rows()[0][1], is(1));\n     }\n \n+    private static void assertAllRepoSnapshotFilesAreDeleted(File location) {\n+        //Make sure the file location does not consist of any .dat file\n+        for (var file : location.listFiles()) {\n+            assertThat(file.getName().endsWith(\".dat\"), is(false));\n+        }\n+    }\n+\n     private RepositoryData getRepositoryData() throws Exception {\n         RepositoriesService service = internalCluster().getInstance(RepositoriesService.class, internalCluster().getMasterName());\n         Repository repository = service.repository(REPOSITORY_NAME);\n"}}, {"oid": "2ab4e7fef64469bbfa23790b319583ea692aa558", "url": "https://github.com/crate/crate/commit/2ab4e7fef64469bbfa23790b319583ea692aa558", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250", "committedDate": "2020-06-29T14:42:42Z", "type": "forcePushed"}, {"oid": "e24c7abdd5f4ff8115b2c6500e28a7396499b9c8", "url": "https://github.com/crate/crate/commit/e24c7abdd5f4ff8115b2c6500e28a7396499b9c8", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250", "committedDate": "2020-06-29T15:11:01Z", "type": "forcePushed"}, {"oid": "803c0efac6fbfd78bb39c831de531a565d0268be", "url": "https://github.com/crate/crate/commit/803c0efac6fbfd78bb39c831de531a565d0268be", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250", "committedDate": "2020-06-29T15:13:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NjA5OA==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447046098", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> bc) {\n          \n          \n            \n                    return new ActionListener<T>() {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onResponse(T r) {\n          \n          \n            \n                            delegate.onResponse(r);\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onFailure(Exception e) {\n          \n          \n            \n                            bc.accept(delegate, e);\n          \n          \n            \n                        }\n          \n          \n            \n                    };\n          \n          \n            \n                }\n          \n          \n            \n                static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> onFailure) {\n          \n          \n            \n                    return new ActionListener<T>() {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onResponse(T r) {\n          \n          \n            \n                            delegate.onResponse(r);\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onFailure(Exception e) {\n          \n          \n            \n                            onFailure.accept(delegate, e);\n          \n          \n            \n                        }\n          \n          \n            \n                    };\n          \n          \n            \n                }", "author": "mfussenegger", "createdAt": "2020-06-29T15:11:13Z", "path": "server/src/main/java/org/elasticsearch/action/ActionListener.java", "diffHunk": "@@ -247,4 +247,27 @@ public void onFailure(Exception e) {\n             }\n         };\n     }\n+\n+    /**\n+     * Creates a listener that delegates all responses it receives to another listener.\n+     *\n+     * @param delegate ActionListener to wrap and delegate any exception to\n+     * @param bc BiConsumer invoked with delegate listener and exception\n+     * @param <T> Type of the listener\n+     * @return Delegating listener\n+     */\n+    static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> bc) {\n+        return new ActionListener<T>() {\n+\n+            @Override\n+            public void onResponse(T r) {\n+                delegate.onResponse(r);\n+            }\n+\n+            @Override\n+            public void onFailure(Exception e) {\n+                bc.accept(delegate, e);\n+            }\n+        };\n+    }", "originalCommit": "2ab4e7fef64469bbfa23790b319583ea692aa558", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/action/ActionListener.java b/server/src/main/java/org/elasticsearch/action/ActionListener.java\nindex b58f7651f1..2fc17842d4 100644\n--- a/server/src/main/java/org/elasticsearch/action/ActionListener.java\n+++ b/server/src/main/java/org/elasticsearch/action/ActionListener.java\n\n@@ -256,7 +256,7 @@ public interface ActionListener<Response> {\n      * @param <T> Type of the listener\n      * @return Delegating listener\n      */\n-    static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> bc) {\n+    static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> onFailure) {\n         return new ActionListener<T>() {\n \n             @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1NjQ3NA==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447056474", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Shard generations.\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nThe comment just repeats the variable name - no point in having it.", "author": "mfussenegger", "createdAt": "2020-06-29T15:25:36Z", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -78,20 +79,33 @@\n      */\n     private final Map<IndexId, Set<SnapshotId>> indexSnapshots;\n \n+    /**\n+     * Shard generations.\n+     */", "originalCommit": "803c0efac6fbfd78bb39c831de531a565d0268be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java b/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java\nindex 5668cfccec..3c7c983f8e 100644\n--- a/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java\n+++ b/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java\n\n@@ -79,9 +79,6 @@ public final class RepositoryData {\n      */\n     private final Map<IndexId, Set<SnapshotId>> indexSnapshots;\n \n-    /**\n-     * Shard generations.\n-     */\n     private final ShardGenerations shardGenerations;\n \n     public RepositoryData(long genId,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1NzY1Mg==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447057652", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.shardGenerations = Objects.requireNonNull(shardGenerations);\n          \n          \n            \n                    this.shardGenerations = Objects.requireNonNull(shardGenerations, \"shardGenerations must not be null\");", "author": "mfussenegger", "createdAt": "2020-06-29T15:27:14Z", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -78,20 +79,33 @@\n      */\n     private final Map<IndexId, Set<SnapshotId>> indexSnapshots;\n \n+    /**\n+     * Shard generations.\n+     */\n+    private final ShardGenerations shardGenerations;\n+\n     public RepositoryData(long genId,\n                           Map<String, SnapshotId> snapshotIds,\n                           Map<String, SnapshotState> snapshotStates,\n-                          Map<IndexId, Set<SnapshotId>> indexSnapshots) {\n+                          Map<IndexId, Set<SnapshotId>> indexSnapshots,\n+                          ShardGenerations shardGenerations) {\n         this.genId = genId;\n         this.snapshotIds = Collections.unmodifiableMap(snapshotIds);\n         this.snapshotStates = Collections.unmodifiableMap(snapshotStates);\n         this.indices = Collections.unmodifiableMap(indexSnapshots.keySet().stream()\n             .collect(Collectors.toMap(IndexId::getName, Function.identity())));\n         this.indexSnapshots = Collections.unmodifiableMap(indexSnapshots);\n+        this.shardGenerations = Objects.requireNonNull(shardGenerations);", "originalCommit": "803c0efac6fbfd78bb39c831de531a565d0268be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java b/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java\nindex 5668cfccec..3c7c983f8e 100644\n--- a/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java\n+++ b/server/src/main/java/org/elasticsearch/repositories/RepositoryData.java\n\n@@ -79,9 +79,6 @@ public final class RepositoryData {\n      */\n     private final Map<IndexId, Set<SnapshotId>> indexSnapshots;\n \n-    /**\n-     * Shard generations.\n-     */\n     private final ShardGenerations shardGenerations;\n \n     public RepositoryData(long genId,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1OTIyMw==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447059223", "bodyText": "In ES this got introduced in elastic/elasticsearch@be397b7 do we have the other changes from that?", "author": "mfussenegger", "createdAt": "2020-06-29T15:29:23Z", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -134,13 +148,32 @@ public SnapshotState getSnapshotState(final SnapshotId snapshotId) {\n         return indices;\n     }\n \n+    /**\n+     * Returns the list of {@link IndexId} that have their snapshots updated but not removed (because they are still referenced by other\n+     * snapshots) after removing the given snapshot from the repository.\n+     *\n+     * @param snapshotId SnapshotId to remove\n+     * @return List of indices that are changed but not removed\n+     */\n+    public List<IndexId> indicesToUpdateAfterRemovingSnapshot(SnapshotId snapshotId) {\n+        return indexSnapshots.entrySet().stream()", "originalCommit": "803c0efac6fbfd78bb39c831de531a565d0268be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMDQwMQ==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447530401", "bodyText": "All changes were already in, i took the related tests as well now.", "author": "mkleen", "createdAt": "2020-06-30T09:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1OTIyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2MDIxNA==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447060214", "bodyText": "This came with elastic/elasticsearch@4849c3e\nAre the other changes also ported?", "author": "mfussenegger", "createdAt": "2020-06-29T15:30:41Z", "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -152,16 +185,35 @@ public RepositoryData addSnapshot(final SnapshotId snapshotId,\n         Map<String, SnapshotState> newSnapshotStates = new HashMap<>(snapshotStates);\n         newSnapshotStates.put(snapshotId.getUUID(), snapshotState);\n         Map<IndexId, Set<SnapshotId>> allIndexSnapshots = new HashMap<>(indexSnapshots);\n-        for (final IndexId indexId : snapshottedIndices) {\n+        for (final IndexId indexId : shardGenerations.indices()) {\n             allIndexSnapshots.computeIfAbsent(indexId, k -> new LinkedHashSet<>()).add(snapshotId);\n         }\n-        return new RepositoryData(genId, snapshots, newSnapshotStates, allIndexSnapshots);\n+        return new RepositoryData(genId, snapshots, newSnapshotStates, allIndexSnapshots,\n+                                  ShardGenerations.builder().putAll(this.shardGenerations).putAll(shardGenerations).build());\n+    }\n+\n+    /**\n+     * Create a new instance with the given generation and all other fields equal to this instance.\n+     *\n+     * @param newGeneration New Generation\n+     * @return New instance\n+     */\n+    public RepositoryData withGenId(long newGeneration) {", "originalCommit": "803c0efac6fbfd78bb39c831de531a565d0268be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMDMyMA==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447530320", "bodyText": "All changes were already in, i took the related tests as well now.", "author": "mkleen", "createdAt": "2020-06-30T09:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2MDIxNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "url": "https://github.com/crate/crate/commit/2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "message": "Add relevant tests for BlobStoreRepository", "committedDate": "2020-06-30T09:08:22Z", "type": "forcePushed"}, {"oid": "15a3e0be567e4be1689893fa2675c3c5c677ed43", "url": "https://github.com/crate/crate/commit/15a3e0be567e4be1689893fa2675c3c5c677ed43", "message": "Remove uneeded formatting from SnapshotShardsService", "committedDate": "2020-06-30T09:32:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1ODYyOQ==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447558629", "bodyText": "can't these still be final?", "author": "mfussenegger", "createdAt": "2020-06-30T09:51:02Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -400,10 +389,16 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n      * Internal request that is used to send changes in snapshot status to master\n      */\n     public static class UpdateIndexShardSnapshotStatusRequest extends MasterNodeRequest<UpdateIndexShardSnapshotStatusRequest> {\n+        private Snapshot snapshot;\n+        private ShardId shardId;\n+        private ShardSnapshotStatus status;", "originalCommit": "15a3e0be567e4be1689893fa2675c3c5c677ed43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "chunk": "diff --git a/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java b/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java\nindex 29742fe41e..594224a1cc 100644\n--- a/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java\n+++ b/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java\n\n@@ -389,16 +389,9 @@ public class SnapshotShardsService extends AbstractLifecycleComponent implements\n      * Internal request that is used to send changes in snapshot status to master\n      */\n     public static class UpdateIndexShardSnapshotStatusRequest extends MasterNodeRequest<UpdateIndexShardSnapshotStatusRequest> {\n-        private Snapshot snapshot;\n-        private ShardId shardId;\n-        private ShardSnapshotStatus status;\n-\n-        public UpdateIndexShardSnapshotStatusRequest(StreamInput in) throws IOException {\n-            super(in);\n-            snapshot = new Snapshot(in);\n-            shardId = new ShardId(in);\n-            status = new ShardSnapshotStatus(in);\n-        }\n+        private final Snapshot snapshot;\n+        private final ShardId shardId;\n+        private final ShardSnapshotStatus status;\n \n         public UpdateIndexShardSnapshotStatusRequest(Snapshot snapshot, ShardId shardId, ShardSnapshotStatus status) {\n             this.snapshot = snapshot;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1OTE5OQ==", "url": "https://github.com/crate/crate/pull/10128#discussion_r447559199", "bodyText": "Why the formatting changes?", "author": "mfussenegger", "createdAt": "2020-06-30T09:51:48Z", "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -575,25 +564,21 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n \n     static class UpdateIndexShardSnapshotStatusResponse extends TransportResponse {\n \n-        @Override\n-        public void writeTo(StreamOutput out) throws IOException {\n+        public UpdateIndexShardSnapshotStatusResponse() {\n+\n         }\n \n-        public UpdateIndexShardSnapshotStatusResponse() {\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n         }\n     }\n \n     private class UpdateSnapshotStatusAction\n         extends TransportMasterNodeAction<UpdateIndexShardSnapshotStatusRequest, UpdateIndexShardSnapshotStatusResponse> {\n         UpdateSnapshotStatusAction(TransportService transportService, ClusterService clusterService,\n-                                   ThreadPool threadPool, IndexNameExpressionResolver indexNameExpressionResolver) {\n+                                   ThreadPool threadPool,IndexNameExpressionResolver indexNameExpressionResolver) {\n             super(\n-                SnapshotShardsService.UPDATE_SNAPSHOT_STATUS_ACTION_NAME,\n-                transportService,\n-                clusterService,\n-                threadPool,\n-                UpdateIndexShardSnapshotStatusRequest::new,", "originalCommit": "15a3e0be567e4be1689893fa2675c3c5c677ed43", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "url": "https://github.com/crate/crate/commit/2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "message": "Revert formatting in SnapshotShardsService", "committedDate": "2020-06-30T13:03:03Z", "type": "forcePushed"}, {"oid": "d1f866302b5598c40d74fa121170c45e2b047042", "url": "https://github.com/crate/crate/commit/d1f866302b5598c40d74fa121170c45e2b047042", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250\nhttps://github.com/elastic/elasticsearch/commit/be397b7 and\nhttps://github.com/elastic/elasticsearch/commit/4849c3e", "committedDate": "2020-06-30T13:12:03Z", "type": "commit"}, {"oid": "d1f866302b5598c40d74fa121170c45e2b047042", "url": "https://github.com/crate/crate/commit/d1f866302b5598c40d74fa121170c45e2b047042", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250\nhttps://github.com/elastic/elasticsearch/commit/be397b7 and\nhttps://github.com/elastic/elasticsearch/commit/4849c3e", "committedDate": "2020-06-30T13:12:03Z", "type": "forcePushed"}]}