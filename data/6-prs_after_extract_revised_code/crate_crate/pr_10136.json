{"pr_number": 10136, "pr_title": "Extend `pg_catalog.pg_proc` with `<data type>recv` functions.  ", "pr_createdAt": "2020-06-25T09:51:51Z", "pr_url": "https://github.com/crate/crate/pull/10136", "timeline": [{"oid": "b4e07c9827d3145fcb4572bd6c36b83dea9d383f", "url": "https://github.com/crate/crate/commit/b4e07c9827d3145fcb4572bd6c36b83dea9d383f", "message": "Add <data type> + recv methods to pg_proc table for PG compatibility.", "committedDate": "2020-06-25T09:58:31Z", "type": "forcePushed"}, {"oid": "a1b073256f79ff16bdf91e04b6003884833ba372", "url": "https://github.com/crate/crate/commit/a1b073256f79ff16bdf91e04b6003884833ba372", "message": "Base Regproc hashCode and equals on the oid only.\n\nSuch as we cannot lookup the function name by oid and fallback\nto using the oid as name, we cannot use the name to check the\nequality of the Regproc objects. Therefore, we use the oid only\nto check the equality and calculate the hash code.", "committedDate": "2020-06-25T11:27:32Z", "type": "commit"}, {"oid": "77304c11b5372316e2f04c4fffccc952a9709c37", "url": "https://github.com/crate/crate/commit/77304c11b5372316e2f04c4fffccc952a9709c37", "message": "Add <data type> + recv methods to pg_proc table for PG compatibility.", "committedDate": "2020-06-25T11:27:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUxOTExOQ==", "url": "https://github.com/crate/crate/pull/10136#discussion_r445519119", "bodyText": "I think this concat here needs to be put into the () ->  block further below to make sure that all subsequent iterator() calls from the Iterable return the same rows.\nAs it is I think this stream would be exhausted after the first iterator has been processed.\nSome of our BatchIterator implementations can depend on that behavior.", "author": "mfussenegger", "createdAt": "2020-06-25T12:27:41Z", "path": "server/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java", "diffHunk": "@@ -276,14 +292,19 @@ private boolean isPrimaryKey(RelationInfo relationInfo) {\n     }\n \n     public Iterable<PgProcTable.Entry> pgProc() {\n-        return () -> concat(\n+        var buildInAndUserDefinedFunctions = concat(", "originalCommit": "77304c11b5372316e2f04c4fffccc952a9709c37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzOTcwMg==", "url": "https://github.com/crate/crate/pull/10136#discussion_r445539702", "bodyText": "yes, makes sense! amended the last commit with this change.", "author": "kovrus", "createdAt": "2020-06-25T13:02:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUxOTExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "db8bc56fe5620c6915d317a76bf81d5c5ece6762", "chunk": "diff --git a/server/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java b/server/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java\nindex 8491ec4a49..f2f441570a 100644\n--- a/server/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java\n+++ b/server/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java\n\n@@ -292,14 +292,13 @@ public class InformationSchemaIterables implements ClusterStateListener {\n     }\n \n     public Iterable<PgProcTable.Entry> pgProc() {\n-        var buildInAndUserDefinedFunctions = concat(\n-            sequentialStream(pgBuiltInFunc),\n-            sequentialStream(functions.udfFunctionResolvers().values())\n-                .flatMap(List::stream)\n-                .map(this::pgProc)\n-        );\n         return () -> concat(\n-            buildInAndUserDefinedFunctions,\n+            concat(\n+                sequentialStream(pgBuiltInFunc),\n+                sequentialStream(functions.udfFunctionResolvers().values())\n+                    .flatMap(List::stream)\n+                    .map(this::pgProc)\n+            ),\n             sequentialStream(pgTypeReceiveFunctions)\n         ).iterator();\n     }\n"}}, {"oid": "db8bc56fe5620c6915d317a76bf81d5c5ece6762", "url": "https://github.com/crate/crate/commit/db8bc56fe5620c6915d317a76bf81d5c5ece6762", "message": "Add <data type> + recv methods to pg_proc table for PG compatibility.", "committedDate": "2020-06-25T12:58:41Z", "type": "forcePushed"}, {"oid": "6c3788b638bc714991d539289c50bfe8b8b34614", "url": "https://github.com/crate/crate/commit/6c3788b638bc714991d539289c50bfe8b8b34614", "message": "Add <data type> + recv methods to pg_proc table for PG compatibility.", "committedDate": "2020-06-25T12:59:40Z", "type": "commit"}, {"oid": "6c3788b638bc714991d539289c50bfe8b8b34614", "url": "https://github.com/crate/crate/commit/6c3788b638bc714991d539289c50bfe8b8b34614", "message": "Add <data type> + recv methods to pg_proc table for PG compatibility.", "committedDate": "2020-06-25T12:59:40Z", "type": "forcePushed"}, {"oid": "52446edf2f56e457d7ffaea08d1c83b3a4ba7292", "url": "https://github.com/crate/crate/commit/52446edf2f56e457d7ffaea08d1c83b3a4ba7292", "message": "Merge branch 'master' into r/regproc-join", "committedDate": "2020-06-25T13:28:50Z", "type": "commit"}]}