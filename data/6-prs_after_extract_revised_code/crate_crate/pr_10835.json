{"pr_number": 10835, "pr_title": "Add jmx shard relate information to node info", "pr_createdAt": "2020-11-30T12:49:37Z", "pr_url": "https://github.com/crate/crate/pull/10835", "timeline": [{"oid": "ebfcac95cb8f6892980855da03dd41ca562cf18f", "url": "https://github.com/crate/crate/commit/ebfcac95cb8f6892980855da03dd41ca562cf18f", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T15:14:36Z", "type": "forcePushed"}, {"oid": "bba6ea4a8a1fd3fea9a4b84488bda8588192ab9a", "url": "https://github.com/crate/crate/commit/bba6ea4a8a1fd3fea9a4b84488bda8588192ab9a", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T15:17:41Z", "type": "forcePushed"}, {"oid": "7274f26f45b764b785173d1838a34eda22127d68", "url": "https://github.com/crate/crate/commit/7274f26f45b764b785173d1838a34eda22127d68", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T15:34:15Z", "type": "forcePushed"}, {"oid": "1e7f6d2026342872c48f02a5022754073dd91c37", "url": "https://github.com/crate/crate/commit/1e7f6d2026342872c48f02a5022754073dd91c37", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T15:42:24Z", "type": "forcePushed"}, {"oid": "8b1931cbb188e655110fd1df555b418e7ebecef3", "url": "https://github.com/crate/crate/commit/8b1931cbb188e655110fd1df555b418e7ebecef3", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T16:06:32Z", "type": "forcePushed"}, {"oid": "195e3018eba052e1f4c53a215d451b97ec50ea3f", "url": "https://github.com/crate/crate/commit/195e3018eba052e1f4c53a215d451b97ec50ea3f", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T16:17:44Z", "type": "forcePushed"}, {"oid": "1e40db6c48c713508c0984cbedac81522e08675f", "url": "https://github.com/crate/crate/commit/1e40db6c48c713508c0984cbedac81522e08675f", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T16:28:52Z", "type": "forcePushed"}, {"oid": "7e54150779695413ae5def94680a96cb0e44e1ca", "url": "https://github.com/crate/crate/commit/7e54150779695413ae5def94680a96cb0e44e1ca", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T16:43:03Z", "type": "forcePushed"}, {"oid": "ee2bc66444a550c49173df41ee7c121a172d4d55", "url": "https://github.com/crate/crate/commit/ee2bc66444a550c49173df41ee7c121a172d4d55", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T17:02:36Z", "type": "forcePushed"}, {"oid": "fc3c301a9cfd7797f71cc5debfc27f2eec002ca6", "url": "https://github.com/crate/crate/commit/fc3c301a9cfd7797f71cc5debfc27f2eec002ca6", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T17:07:07Z", "type": "forcePushed"}, {"oid": "558ae5b4eac2f852023e3e84724883d2b2766fe3", "url": "https://github.com/crate/crate/commit/558ae5b4eac2f852023e3e84724883d2b2766fe3", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T17:17:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4MzE0NA==", "url": "https://github.com/crate/crate/pull/10835#discussion_r532783144", "bodyText": "shard.storeStats().getSizeInBytes() involve io (if data is not cached)\n\n  \n    \n      crate/server/src/main/java/org/elasticsearch/index/store/ByteSizeCachingDirectory.java\n    \n    \n         Line 118\n      in\n      3e7490b\n    \n    \n    \n    \n\n        \n          \n           long estimateSizeInBytes() throws IOException {", "author": "mkleen", "createdAt": "2020-11-30T17:46:07Z", "path": "enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java", "diffHunk": "@@ -18,35 +18,110 @@\n \n package io.crate.beans;\n \n-import org.elasticsearch.cluster.node.DiscoveryNode;\n+import io.crate.common.collections.Tuple;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.index.shard.IndexShardState;\n+import org.elasticsearch.index.shard.ShardId;\n+import org.elasticsearch.indices.IndicesService;\n \n-import java.util.function.LongSupplier;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n import java.util.function.Supplier;\n \n-public class NodeInfo implements NodeInfoMBean {\n+public class NodeInfo implements NodeInfoMXBean {\n \n     public static final String NAME = \"io.crate.monitoring:type=NodeInfo\";\n \n-    private final LongSupplier clusterStateVersion;\n-    private final Supplier<DiscoveryNode> localNode;\n+    private final Supplier<ClusterState> clusterState;\n+    private final Function<ShardId, Tuple<IndexShardState, Long>> shardStateAndSizeProvider;\n \n-    public NodeInfo(Supplier<DiscoveryNode> localNode, LongSupplier clusterStateVersion) {\n-        this.localNode = localNode;\n-        this.clusterStateVersion = clusterStateVersion;\n+    public NodeInfo(Supplier<ClusterState> clusterState,\n+                    Function<ShardId, Tuple<IndexShardState, Long>> shardStateAndSizeProvider) {\n+        this.clusterState = clusterState;\n+        this.shardStateAndSizeProvider = shardStateAndSizeProvider;\n     }\n \n     @Override\n     public String getNodeId() {\n-        return localNode.get().getId();\n+        return clusterState.get().nodes().getLocalNodeId();\n     }\n \n     @Override\n     public String getNodeName() {\n-        return localNode.get().getName();\n+        return clusterState.get().nodes().getLocalNode().getName();\n     }\n \n     @Override\n     public long getClusterStateVersion() {\n-        return clusterStateVersion.getAsLong();\n+        return clusterState.get().version();\n+    }\n+\n+    public ShardStats getShardStats() {\n+        var total = 0;\n+        var replicas = 0;\n+        var unassigned = 0;\n+        var primaries = 0;\n+        var cs = this.clusterState.get();\n+        var localNodeId = cs.nodes().getLocalNodeId();\n+        var isMasterNode = cs.nodes().isLocalNodeElectedMaster();\n+        var routingTable = cs.getRoutingTable();\n+        if (routingTable != null) {\n+            for (var shardRouting : routingTable.allShards()) {\n+                if (localNodeId.equals(shardRouting.currentNodeId())) {\n+                    total++;\n+                    if (shardRouting.primary()) {\n+                        primaries++;\n+                    } else {\n+                        replicas++;\n+                    }\n+                } else if (isMasterNode && shardRouting.unassigned()) {\n+                    unassigned++;\n+                }\n+            }\n+        }\n+        return new ShardStats(total, primaries, replicas, unassigned);\n+    }\n+\n+    @Override\n+    public List<ShardInfo> getShardInfo() {\n+        var cs = this.clusterState.get();\n+        var localNodeId = cs.nodes().getLocalNodeId();\n+        var isMasterNode = cs.nodes().isLocalNodeElectedMaster();\n+        var routingTable = cs.getRoutingTable();\n+        if (routingTable == null) {\n+            return List.of();\n+        }\n+        var result = new ArrayList<ShardInfo>();\n+        for (var shardRouting : routingTable.allShards()) {\n+            var shardId = shardRouting.shardId();\n+            if (localNodeId.equals(shardRouting.currentNodeId()) || (isMasterNode && shardRouting.unassigned())) {\n+                var shardStateAndSize = shardStateAndSizeProvider.apply(shardId);\n+                if (shardStateAndSize != null) {\n+                    result.add(new ShardInfo(shardId.id(),\n+                                             shardId.getIndexName(),\n+                                             shardRouting.state().name(),\n+                                             shardStateAndSize.v1().name(),\n+                                             shardStateAndSize.v2()));\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    public static class ShardStateAndSizeProvider implements Function<ShardId, Tuple<IndexShardState, Long>> {\n+        private final IndicesService indicesService;\n+\n+        public ShardStateAndSizeProvider(IndicesService indicesService) {\n+            this.indicesService = indicesService;\n+        }\n+\n+        public Tuple<IndexShardState, Long> apply(ShardId shardId) {\n+            var shard = indicesService.getShardOrNull(shardId);\n+            if (shard == null) {\n+                return null;\n+            }\n+            return new Tuple<>(shard.state(), shard.storeStats().getSizeInBytes());", "originalCommit": "558ae5b4eac2f852023e3e84724883d2b2766fe3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b5d6fcf209e246421d9de83629d49edb66f4681", "chunk": "diff --git a/enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java b/enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java\nindex 463d3c5ec6..c0e0014792 100644\n--- a/enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java\n+++ b/enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java\n\n@@ -19,12 +19,15 @@\n package io.crate.beans;\n \n import io.crate.common.collections.Tuple;\n+import io.crate.metadata.IndexParts;\n import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.routing.ShardRouting;\n import org.elasticsearch.index.shard.IndexShardState;\n import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.indices.IndicesService;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.function.Function;\n import java.util.function.Supplier;\n"}}, {"oid": "9b5d6fcf209e246421d9de83629d49edb66f4681", "url": "https://github.com/crate/crate/commit/9b5d6fcf209e246421d9de83629d49edb66f4681", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T18:39:57Z", "type": "forcePushed"}, {"oid": "c9871b0c2436c604a5c5eb6f5dc76fb1c43ae5cc", "url": "https://github.com/crate/crate/commit/c9871b0c2436c604a5c5eb6f5dc76fb1c43ae5cc", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T18:54:31Z", "type": "forcePushed"}, {"oid": "d80d24b673554a2ade79f7f7c3364323c235643a", "url": "https://github.com/crate/crate/commit/d80d24b673554a2ade79f7f7c3364323c235643a", "message": "Add shard specific information to jmx node info", "committedDate": "2020-11-30T19:20:50Z", "type": "forcePushed"}, {"oid": "e36bb862c18104c0f57dcef856f2fe29c947e168", "url": "https://github.com/crate/crate/commit/e36bb862c18104c0f57dcef856f2fe29c947e168", "message": "Add partitionIdent to ShardInfo", "committedDate": "2020-12-01T10:59:49Z", "type": "forcePushed"}, {"oid": "a9c71db052ec644279a36566c50a0e298fdec67f", "url": "https://github.com/crate/crate/commit/a9c71db052ec644279a36566c50a0e298fdec67f", "message": "Adapt test_jmx.py to shard info and shard stats", "committedDate": "2020-12-01T11:15:16Z", "type": "forcePushed"}, {"oid": "32ac3d5c375173859c043c8ab58a10599445a21e", "url": "https://github.com/crate/crate/commit/32ac3d5c375173859c043c8ab58a10599445a21e", "message": "Adapt test_jmx.py to shard info and shard stats", "committedDate": "2020-12-01T11:17:22Z", "type": "forcePushed"}, {"oid": "da19330af7b9846ce50dcdf995aa5f646a2a669c", "url": "https://github.com/crate/crate/commit/da19330af7b9846ce50dcdf995aa5f646a2a669c", "message": "fix jmx", "committedDate": "2020-12-01T15:08:14Z", "type": "forcePushed"}, {"oid": "7fc9ca983d01e0beda0abe3d65630447490f0e81", "url": "https://github.com/crate/crate/commit/7fc9ca983d01e0beda0abe3d65630447490f0e81", "message": "Add docs feedback", "committedDate": "2020-12-01T15:09:34Z", "type": "forcePushed"}, {"oid": "50525857bd43f46bd743451d3d6d04acf6446a12", "url": "https://github.com/crate/crate/commit/50525857bd43f46bd743451d3d6d04acf6446a12", "message": "Add shard specific information to jmx node info", "committedDate": "2020-12-02T09:29:43Z", "type": "forcePushed"}, {"oid": "77956fb19130ff1dd8bda64b1ef7d1cc2d011b34", "url": "https://github.com/crate/crate/commit/77956fb19130ff1dd8bda64b1ef7d1cc2d011b34", "message": "Add shard specific information to jmx node info", "committedDate": "2020-12-02T09:36:22Z", "type": "commit"}, {"oid": "77956fb19130ff1dd8bda64b1ef7d1cc2d011b34", "url": "https://github.com/crate/crate/commit/77956fb19130ff1dd8bda64b1ef7d1cc2d011b34", "message": "Add shard specific information to jmx node info", "committedDate": "2020-12-02T09:36:22Z", "type": "forcePushed"}]}