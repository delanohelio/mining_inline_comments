{"pr_number": 10059, "pr_title": "Add azure snapshot integration test", "pr_createdAt": "2020-06-08T13:48:23Z", "pr_url": "https://github.com/crate/crate/pull/10059", "timeline": [{"oid": "bc8731d8665d7ca414dbc4af36fe4aabb4c0de40", "url": "https://github.com/crate/crate/commit/bc8731d8665d7ca414dbc4af36fe4aabb4c0de40", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T13:51:52Z", "type": "forcePushed"}, {"oid": "4578c87c38266bb8890a10b0465dcc2c77427576", "url": "https://github.com/crate/crate/commit/4578c87c38266bb8890a10b0465dcc2c77427576", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T13:53:19Z", "type": "forcePushed"}, {"oid": "b3dbfec25008c37dfe4122343dbb0451d90e28d1", "url": "https://github.com/crate/crate/commit/b3dbfec25008c37dfe4122343dbb0451d90e28d1", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T14:01:37Z", "type": "forcePushed"}, {"oid": "0026290a213bfe208251f453d7762835e8a9380a", "url": "https://github.com/crate/crate/commit/0026290a213bfe208251f453d7762835e8a9380a", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T14:10:12Z", "type": "forcePushed"}, {"oid": "3e294e333bfd60305b589522c654d8591afa8c6a", "url": "https://github.com/crate/crate/commit/3e294e333bfd60305b589522c654d8591afa8c6a", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T14:25:50Z", "type": "forcePushed"}, {"oid": "ba82df04d819bae5d4fd5d5359a9e3a9d9aab546", "url": "https://github.com/crate/crate/commit/ba82df04d819bae5d4fd5d5359a9e3a9d9aab546", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T14:28:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1NjUzMQ==", "url": "https://github.com/crate/crate/pull/10059#discussion_r436756531", "bodyText": "Could you update the branch against master? I recently deleted this method as it was unused.", "author": "mfussenegger", "createdAt": "2020-06-08T14:34:43Z", "path": "plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+package org.elasticsearch.repositories.azure;\n+\n+import com.sun.net.httpserver.Headers;\n+import com.sun.net.httpserver.HttpExchange;\n+import com.sun.net.httpserver.HttpHandler;\n+import org.elasticsearch.common.bytes.BytesArray;\n+import org.elasticsearch.common.bytes.BytesReference;\n+import org.elasticsearch.common.io.Streams;\n+import org.elasticsearch.common.regex.Regex;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.rest.RestUtils;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Minimal HTTP handler that acts as an Azure compliant server\n+ */\n+public class AzureHttpHandler implements HttpHandler {\n+\n+    private final Map<String, BytesReference> blobs;\n+    private final String container;\n+\n+    public AzureHttpHandler(final String container) {\n+        this.container = Objects.requireNonNull(container);\n+        this.blobs = new ConcurrentHashMap<>();\n+    }\n+\n+    @Override\n+    public void handle(final HttpExchange exchange) throws IOException {\n+        final String request = exchange.getRequestMethod() + \" \" + exchange.getRequestURI().toString();\n+\n+        if (request.startsWith(\"GET\") || request.startsWith(\"HEAD\") || request.startsWith(\"DELETE\")) {\n+            int read = exchange.getRequestBody().read();\n+            assert read == -1 : \"Request body should have been empty but saw [\" + read + \"]\";\n+        }\n+        try {\n+            if (Regex.simpleMatch(\"PUT /\" + container + \"/*blockid=*\", request)) {\n+                // Put Block (https://docs.microsoft.com/en-us/rest/api/storageservices/put-block)\n+                final Map<String, String> params = new HashMap<>();\n+                RestUtils.decodeQueryString(exchange.getRequestURI().getQuery(), 0, params);", "originalCommit": "ba82df04d819bae5d4fd5d5359a9e3a9d9aab546", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MjM1MQ==", "url": "https://github.com/crate/crate/pull/10059#discussion_r436762351", "bodyText": "Shall i add it back ?", "author": "mkleen", "createdAt": "2020-06-08T14:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1NjUzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MjkyNA==", "url": "https://github.com/crate/crate/pull/10059#discussion_r436782924", "bodyText": "Just wanted to make sure I see the full diff. But now I'm actually wondering if we could replace it with io.netty.handler.codec.http.QueryStringDecoder or so?", "author": "mfussenegger", "createdAt": "2020-06-08T15:10:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1NjUzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "515abfc31663d328b992696f9fdc4ee5c1a4561f", "chunk": "diff --git a/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java b/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java\nindex 9a78a4ffab..2773462bfc 100644\n--- a/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java\n+++ b/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java\n\n@@ -24,6 +24,7 @@ package org.elasticsearch.repositories.azure;\n import com.sun.net.httpserver.Headers;\n import com.sun.net.httpserver.HttpExchange;\n import com.sun.net.httpserver.HttpHandler;\n+import io.netty.handler.codec.http.QueryStringDecoder;\n import org.elasticsearch.common.bytes.BytesArray;\n import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.common.io.Streams;\n"}}, {"oid": "994515e7b2b2f81f1ad4eeae7beebe054cfa44bb", "url": "https://github.com/crate/crate/commit/994515e7b2b2f81f1ad4eeae7beebe054cfa44bb", "message": "Add azure snapshot integration test", "committedDate": "2020-06-08T14:36:39Z", "type": "forcePushed"}, {"oid": "770fc53ceac3cde5ee926a71f7b4c61cc6f2c1ee", "url": "https://github.com/crate/crate/commit/770fc53ceac3cde5ee926a71f7b4c61cc6f2c1ee", "message": "Add decode methods back to RestUtils", "committedDate": "2020-06-08T14:51:38Z", "type": "forcePushed"}, {"oid": "063b5f585eb75ecdd6df7c80e00e34dfc93b2c87", "url": "https://github.com/crate/crate/commit/063b5f585eb75ecdd6df7c80e00e34dfc93b2c87", "message": "Add decode methods back to RestUtils", "committedDate": "2020-06-08T14:54:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MDU3OQ==", "url": "https://github.com/crate/crate/pull/10059#discussion_r436780579", "bodyText": "We also have a HttpTestServer that is based on netty. Maybe we could extend that so that the last channel handler is configurable and use that instead of adding another http-server variant?\nNot sure if it is worth it, since this stuff here is part of the JDK anyway.", "author": "mfussenegger", "createdAt": "2020-06-08T15:06:45Z", "path": "plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+package org.elasticsearch.repositories.azure;\n+\n+import com.sun.net.httpserver.Headers;\n+import com.sun.net.httpserver.HttpExchange;\n+import com.sun.net.httpserver.HttpHandler;", "originalCommit": "063b5f585eb75ecdd6df7c80e00e34dfc93b2c87", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "515abfc31663d328b992696f9fdc4ee5c1a4561f", "chunk": "diff --git a/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java b/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java\nindex 9a78a4ffab..2773462bfc 100644\n--- a/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java\n+++ b/plugins/es-repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureHttpHandler.java\n\n@@ -24,6 +24,7 @@ package org.elasticsearch.repositories.azure;\n import com.sun.net.httpserver.Headers;\n import com.sun.net.httpserver.HttpExchange;\n import com.sun.net.httpserver.HttpHandler;\n+import io.netty.handler.codec.http.QueryStringDecoder;\n import org.elasticsearch.common.bytes.BytesArray;\n import org.elasticsearch.common.bytes.BytesReference;\n import org.elasticsearch.common.io.Streams;\n"}}, {"oid": "515abfc31663d328b992696f9fdc4ee5c1a4561f", "url": "https://github.com/crate/crate/commit/515abfc31663d328b992696f9fdc4ee5c1a4561f", "message": "Use netty's QueryStringDecoder for decoding", "committedDate": "2020-06-08T15:50:10Z", "type": "forcePushed"}, {"oid": "86cdc5314c2d87f4f735860d131911b36029d3e4", "url": "https://github.com/crate/crate/commit/86cdc5314c2d87f4f735860d131911b36029d3e4", "message": "Use netty's QueryStringDecoder for decoding", "committedDate": "2020-06-08T16:17:44Z", "type": "forcePushed"}, {"oid": "44ff6823c64f6ca522365f2e232e61e239bf7149", "url": "https://github.com/crate/crate/commit/44ff6823c64f6ca522365f2e232e61e239bf7149", "message": "Use netty's QueryStringDecoder for decoding", "committedDate": "2020-06-08T16:35:16Z", "type": "forcePushed"}, {"oid": "dd38e1fe66f7566b8fe9a6b56263eaa08a365eac", "url": "https://github.com/crate/crate/commit/dd38e1fe66f7566b8fe9a6b56263eaa08a365eac", "message": "Add azure snapshot integration test", "committedDate": "2020-06-09T09:40:00Z", "type": "commit"}, {"oid": "dd38e1fe66f7566b8fe9a6b56263eaa08a365eac", "url": "https://github.com/crate/crate/commit/dd38e1fe66f7566b8fe9a6b56263eaa08a365eac", "message": "Add azure snapshot integration test", "committedDate": "2020-06-09T09:40:00Z", "type": "forcePushed"}]}