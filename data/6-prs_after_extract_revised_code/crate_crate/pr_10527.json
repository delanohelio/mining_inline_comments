{"pr_number": 10527, "pr_title": "Also pause insert-from-query on high memory usage", "pr_createdAt": "2020-09-14T08:19:20Z", "pr_url": "https://github.com/crate/crate/pull/10527", "timeline": [{"oid": "002c18f118b5c7dbee70412a46a484d8a3d68da7", "url": "https://github.com/crate/crate/commit/002c18f118b5c7dbee70412a46a484d8a3d68da7", "message": "Also pause insert-from-query on high memory usage\n\nWe added a byte-threshold to the partitioning, which leads to smaller\nindividual bulk requests, but it still allowed concurrent execution\nwhich can lead to many smaller bulk requests being held in memory for a\nlong time.\n\nThis adds the byte-threshold rule also to the pause check, to pause\nreading more data if a lot of memory is occupied.\n\nThis is based on some heap dumps from nodes which crashed due to OOM\nwhere a large chunk of memory was used up by response handlers.\n\nThis also lowers the allowed heap percentage that the bulk requests may\ntake (from 30% to 20%) and adds a second static max size (100MB)", "committedDate": "2020-09-14T08:42:41Z", "type": "commit"}, {"oid": "002c18f118b5c7dbee70412a46a484d8a3d68da7", "url": "https://github.com/crate/crate/commit/002c18f118b5c7dbee70412a46a484d8a3d68da7", "message": "Also pause insert-from-query on high memory usage\n\nWe added a byte-threshold to the partitioning, which leads to smaller\nindividual bulk requests, but it still allowed concurrent execution\nwhich can lead to many smaller bulk requests being held in memory for a\nlong time.\n\nThis adds the byte-threshold rule also to the pause check, to pause\nreading more data if a lot of memory is occupied.\n\nThis is based on some heap dumps from nodes which crashed due to OOM\nwhere a large chunk of memory was used up by response handlers.\n\nThis also lowers the allowed heap percentage that the bulk requests may\ntake (from 30% to 20%) and adds a second static max size (100MB)", "committedDate": "2020-09-14T08:42:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1Nzk3OQ==", "url": "https://github.com/crate/crate/pull/10527#discussion_r487757979", "bodyText": "Not sure about this. The additional 20% or at most 100MB rule is not strictly necessary.\nBut taking up several GB for bulk requests seems too much.\nOr maybe the 20% is still too aggressive and we should go with something like 5% or 10%:\nWith 10%\n128.0 GB   \u2192 12800 MB\n16.0 GB    \u2192  1600 MB\n 8.0 GB    \u2192   800 MB\n 2.0 GB    \u2192   200 MB\n 0.5 GB    \u2192    50 MB\n\nWith 5%\n128.0 GB    \u2192  6400 MB\n 16.0 GB    \u2192   800 MB\n  8.0 GB    \u2192   400 MB\n  2.0 GB    \u2192   100 MB\n  0.5 GB    \u2192    25 MB", "author": "mfussenegger", "createdAt": "2020-09-14T08:59:30Z", "path": "server/src/main/java/io/crate/execution/engine/indexing/ShardingUpsertExecutor.java", "diffHunk": "@@ -351,7 +358,18 @@ private void maybeSetInterrupt(@Nullable Exception failure) {\n \n         @Override\n         public final boolean test(ShardedRequests<?, ?> shardedRequests) {\n-            return shardedRequests.usedMemoryEstimate() > maxBytesUsableByShardedRequests;\n+            long usedMemoryEstimate = shardedRequests.ramBytesUsed();\n+            boolean requestsTooBig = usedMemoryEstimate > maxBytesUsableByShardedRequests\n+                || usedMemoryEstimate > MAX_MEMORY_PER_REQUEST_IN_BYTES;", "originalCommit": "002c18f118b5c7dbee70412a46a484d8a3d68da7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4MTk1Mw==", "url": "https://github.com/crate/crate/pull/10527#discussion_r487781953", "bodyText": "As the 100MB can be reached quite fast, I'd tend more to lower the percentage to 10% to allow more on higher HEAP configurations. Or would you still keep the 100MB hard limit even with a lower percentage based threshold?", "author": "seut", "createdAt": "2020-09-14T09:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1Nzk3OQ=="}], "type": "inlineReview", "revised_code": null}]}