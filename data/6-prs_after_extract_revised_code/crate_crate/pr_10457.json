{"pr_number": 10457, "pr_title": "Fix sys.health.health state for partitions", "pr_createdAt": "2020-08-28T15:10:20Z", "pr_url": "https://github.com/crate/crate/pull/10457", "timeline": [{"oid": "ff4909bddec1911f2494689eba3b3f44369722e5", "url": "https://github.com/crate/crate/commit/ff4909bddec1911f2494689eba3b3f44369722e5", "message": "Fix sys.health.health state for partitions\n\nUse the `number_of_shards` setting of a partition instead of the\npartitioned table.\nThey could differ through the possibility of changing only the shards for\nfuture partitions.\nIf the value for the table is greater then the value of the \npartition itself, using the tables value will result in missing shards\nand thus a `RED` health.", "committedDate": "2020-08-28T15:10:23Z", "type": "forcePushed"}, {"oid": "3419d25c22c6d511215b99755cedbe1b3b6ea638", "url": "https://github.com/crate/crate/commit/3419d25c22c6d511215b99755cedbe1b3b6ea638", "message": "Fix sys.health.health state for partitions\n\nUse the `number_of_shards` setting of a partition instead of the\npartitioned table.\nThey could differ through the possibility of changing only the shards for\nfuture partitions.\nIf the value for the table is greater then the value of the\npartition itself, using the tables value will result in missing shards\nand thus a `RED` health.", "committedDate": "2020-08-28T15:28:26Z", "type": "forcePushed"}, {"oid": "eacf04b8800b7e30edb5d67b3ee1df655750d7a0", "url": "https://github.com/crate/crate/commit/eacf04b8800b7e30edb5d67b3ee1df655750d7a0", "message": "Fix sys.health.health state for partitions\n\nUse the `number_of_shards` setting of a partition instead of the\npartitioned table.\nThey could differ through the possibility of changing only the shards for\nfuture partitions.\nIf the value for the table is greater then the value of the\npartition itself, using the tables value will result in missing shards\nand thus a `RED` health.", "committedDate": "2020-08-28T15:57:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NDQxNQ==", "url": "https://github.com/crate/crate/pull/10457#discussion_r479394415", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        var partitionIndexName = IndexParts.toIndexName(\n          \n          \n            \n                            new RelationName(ident.tableSchema, ident.tableName),\n          \n          \n            \n                            ident.partitionIdent\n          \n          \n            \n                        );\n          \n          \n            \n                        var partitionIndexName = IndexParts.toIndexName(\n          \n          \n            \n                            ident.tableSchema,\n          \n          \n            \n                            ident.tableName,\n          \n          \n            \n                            ident.partitionIdent\n          \n          \n            \n                        );\n          \n      \n    \n    \n  \n\nThere is an overload that takes schema and name directly - avoids the RelationName construction and some indirection.", "author": "mfussenegger", "createdAt": "2020-08-28T15:58:04Z", "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "diffHunk": "@@ -165,7 +167,23 @@ private TableHealth tableHealthFromEntry(Map.Entry<TablePartitionIdent, ShardsIn\n         } catch (RelationUnknown e) {\n             return null;\n         }\n-        return calculateHealth(ident, shardsInfo, tableInfo.numberOfShards());\n+        int shardsCount = tableInfo.numberOfShards();\n+        if (ident.partitionIdent != null) {\n+            var partitionIndexName = IndexParts.toIndexName(\n+                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.partitionIdent\n+            );", "originalCommit": "3419d25c22c6d511215b99755cedbe1b3b6ea638", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "104cc34e4f49c1fd9cc09f91a6000d451a8df182", "chunk": "diff --git a/server/src/main/java/io/crate/metadata/sys/TableHealthService.java b/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\nindex fc5fab139f..cbaeae4eed 100644\n--- a/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\n+++ b/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\n\n@@ -170,17 +169,15 @@ public class TableHealthService {\n         int shardsCount = tableInfo.numberOfShards();\n         if (ident.partitionIdent != null) {\n             var partitionIndexName = IndexParts.toIndexName(\n-                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.tableSchema,\n+                ident.tableName,\n                 ident.partitionIdent\n             );\n             var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n-            assert indexMetaData != null  : \"index meta data for partition \" + partitionIndexName + \" not found\";\n-            var partitionInfo = PartitionInfos.createPartitionInfo(\n-                partitionIndexName,\n-                indexMetaData\n-            );\n-            assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n-            shardsCount = partitionInfo.numberOfShards();\n+            if (indexMetaData == null) {\n+                return null;\n+            }\n+            shardsCount = indexMetaData.getNumberOfShards();\n         }\n \n         return calculateHealth(ident, shardsInfo, shardsCount);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NTY4OA==", "url": "https://github.com/crate/crate/pull/10457#discussion_r479395688", "bodyText": "I think it's legitimate for the indexMetaData to be absent if the partition is deleted concurrently. We should probably return null if indexMetaData is null - similar to how we handle the RelationUnknown case.", "author": "mfussenegger", "createdAt": "2020-08-28T16:00:29Z", "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "diffHunk": "@@ -165,7 +167,23 @@ private TableHealth tableHealthFromEntry(Map.Entry<TablePartitionIdent, ShardsIn\n         } catch (RelationUnknown e) {\n             return null;\n         }\n-        return calculateHealth(ident, shardsInfo, tableInfo.numberOfShards());\n+        int shardsCount = tableInfo.numberOfShards();\n+        if (ident.partitionIdent != null) {\n+            var partitionIndexName = IndexParts.toIndexName(\n+                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.partitionIdent\n+            );\n+            var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n+            assert indexMetaData != null : \"index meta data for partition \" + partitionIndexName + \" not found\";", "originalCommit": "eacf04b8800b7e30edb5d67b3ee1df655750d7a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "104cc34e4f49c1fd9cc09f91a6000d451a8df182", "chunk": "diff --git a/server/src/main/java/io/crate/metadata/sys/TableHealthService.java b/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\nindex b388d9878d..cbaeae4eed 100644\n--- a/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\n+++ b/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\n\n@@ -170,17 +169,15 @@ public class TableHealthService {\n         int shardsCount = tableInfo.numberOfShards();\n         if (ident.partitionIdent != null) {\n             var partitionIndexName = IndexParts.toIndexName(\n-                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.tableSchema,\n+                ident.tableName,\n                 ident.partitionIdent\n             );\n             var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n-            assert indexMetaData != null : \"index meta data for partition \" + partitionIndexName + \" not found\";\n-            var partitionInfo = PartitionInfos.createPartitionInfo(\n-                partitionIndexName,\n-                indexMetaData\n-            );\n-            assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n-            shardsCount = partitionInfo.numberOfShards();\n+            if (indexMetaData == null) {\n+                return null;\n+            }\n+            shardsCount = indexMetaData.getNumberOfShards();\n         }\n \n         return calculateHealth(ident, shardsInfo, shardsCount);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NjUzNQ==", "url": "https://github.com/crate/crate/pull/10457#discussion_r479396535", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        var partitionInfo = PartitionInfos.createPartitionInfo(\n          \n          \n            \n                            partitionIndexName,\n          \n          \n            \n                            indexMetaData\n          \n          \n            \n                        );\n          \n          \n            \n                        assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n          \n          \n            \n                        shardsCount = partitionInfo.numberOfShards();\n          \n          \n            \n                        shardsCount = indexMetadata.getNumberOfShards();\n          \n      \n    \n    \n  \n\nNo need to go through the PartitionInfo  to access the shard count.", "author": "mfussenegger", "createdAt": "2020-08-28T16:01:55Z", "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "diffHunk": "@@ -165,7 +167,23 @@ private TableHealth tableHealthFromEntry(Map.Entry<TablePartitionIdent, ShardsIn\n         } catch (RelationUnknown e) {\n             return null;\n         }\n-        return calculateHealth(ident, shardsInfo, tableInfo.numberOfShards());\n+        int shardsCount = tableInfo.numberOfShards();\n+        if (ident.partitionIdent != null) {\n+            var partitionIndexName = IndexParts.toIndexName(\n+                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.partitionIdent\n+            );\n+            var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n+            assert indexMetaData != null : \"index meta data for partition \" + partitionIndexName + \" not found\";\n+            var partitionInfo = PartitionInfos.createPartitionInfo(\n+                partitionIndexName,\n+                indexMetaData\n+            );\n+            assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n+            shardsCount = partitionInfo.numberOfShards();", "originalCommit": "eacf04b8800b7e30edb5d67b3ee1df655750d7a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "104cc34e4f49c1fd9cc09f91a6000d451a8df182", "chunk": "diff --git a/server/src/main/java/io/crate/metadata/sys/TableHealthService.java b/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\nindex b388d9878d..cbaeae4eed 100644\n--- a/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\n+++ b/server/src/main/java/io/crate/metadata/sys/TableHealthService.java\n\n@@ -170,17 +169,15 @@ public class TableHealthService {\n         int shardsCount = tableInfo.numberOfShards();\n         if (ident.partitionIdent != null) {\n             var partitionIndexName = IndexParts.toIndexName(\n-                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.tableSchema,\n+                ident.tableName,\n                 ident.partitionIdent\n             );\n             var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n-            assert indexMetaData != null : \"index meta data for partition \" + partitionIndexName + \" not found\";\n-            var partitionInfo = PartitionInfos.createPartitionInfo(\n-                partitionIndexName,\n-                indexMetaData\n-            );\n-            assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n-            shardsCount = partitionInfo.numberOfShards();\n+            if (indexMetaData == null) {\n+                return null;\n+            }\n+            shardsCount = indexMetaData.getNumberOfShards();\n         }\n \n         return calculateHealth(ident, shardsInfo, shardsCount);\n"}}, {"oid": "104cc34e4f49c1fd9cc09f91a6000d451a8df182", "url": "https://github.com/crate/crate/commit/104cc34e4f49c1fd9cc09f91a6000d451a8df182", "message": "fixup! Fix sys.health.health state for partitions", "committedDate": "2020-08-28T16:30:45Z", "type": "forcePushed"}, {"oid": "b9ab5a592abdd8c99e6bbb1b62deed7c68aaa5a7", "url": "https://github.com/crate/crate/commit/b9ab5a592abdd8c99e6bbb1b62deed7c68aaa5a7", "message": "Fix value of sys.health.partition_ident\n\nAs documented, a NULL should be returned instead of an empty string\nfor non-partitioned tables.", "committedDate": "2020-08-29T11:35:18Z", "type": "commit"}, {"oid": "d1e006ace0c2829e00b1383a13307a05ec558fd2", "url": "https://github.com/crate/crate/commit/d1e006ace0c2829e00b1383a13307a05ec558fd2", "message": "Fix sys.health.health state for partitions\n\nUse the `number_of_shards` setting of a partition instead of the\npartitioned table.\nThey could differ through the possibility of changing only the shards for\nfuture partitions.\nIf the value for the table is greater then the value of the\npartition itself, using the tables value will result in missing shards\nand thus a `RED` health.", "committedDate": "2020-08-29T11:35:19Z", "type": "commit"}, {"oid": "d1e006ace0c2829e00b1383a13307a05ec558fd2", "url": "https://github.com/crate/crate/commit/d1e006ace0c2829e00b1383a13307a05ec558fd2", "message": "Fix sys.health.health state for partitions\n\nUse the `number_of_shards` setting of a partition instead of the\npartitioned table.\nThey could differ through the possibility of changing only the shards for\nfuture partitions.\nIf the value for the table is greater then the value of the\npartition itself, using the tables value will result in missing shards\nand thus a `RED` health.", "committedDate": "2020-08-29T11:35:19Z", "type": "forcePushed"}]}