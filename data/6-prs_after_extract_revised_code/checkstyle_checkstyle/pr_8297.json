{"pr_number": 8297, "pr_title": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "pr_createdAt": "2020-06-02T06:56:25Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8297", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434367307", "bodyText": "Please clarify why did you move it here?", "author": "rdiachenko", "createdAt": "2020-06-03T07:36:25Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java", "diffHunk": "@@ -90,6 +87,9 @@\n  * JavadocBlockTagLocation\n  * </li>\n  * <li>\n+ * JavadocMethod\n+ * </li>\n+ * <li>", "originalCommit": "39e3443150532b99d46264b84958d1f54e31a3de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE4ODc5Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435188796", "bodyText": "reasons are the 1. I refer to PR #8214 which add it here. 2. As mentioned in #7739 (comment) the 1,3,6th log within the check is logging the tags inside the javadoc block comment. It is not accessible using DetailAST. Maybe this is reason to add to here.\n\n  \n    \n      checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java\n    \n    \n        Lines 74 to 114\n      in\n      d48b815\n    \n    \n    \n    \n\n        \n          \n            * Also, the filter does not support suppressions inside javadoc reported by Javadoc checks: \n        \n\n        \n          \n            * </p> \n        \n\n        \n          \n            * <ul id=\"SuppressionXpathFilter_JavadocChecks\"> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * AtclauseOrder \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocBlockTagLocation \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocMissingWhitespaceAfterAsterisk \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocParagraph \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocStyle \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocTagContinuationIndentation \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * JavadocType \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * MissingDeprecated \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * NonEmptyAtclauseDescription \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * SingleLineJavadoc \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * SummaryJavadoc \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * <li> \n        \n\n        \n          \n            * WriteTag \n        \n\n        \n          \n            * </li> \n        \n\n        \n          \n            * </ul> \n        \n\n        \n          \n            * <p>", "author": "HuGanghui", "createdAt": "2020-06-04T11:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNTQzMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435715432", "bodyText": "I don't understand your response. Here, you put <li>JavadocMethod</li> after <li>JavadocBlockTagLocation</li>. But before your changes the <li>JavadocMethod</li> was few lines upper, after <li>Indentation</li>. So, what's the reason for this movement?", "author": "rdiachenko", "createdAt": "2020-06-05T06:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxODc1OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435718759", "bodyText": "Ok, I got it. The <ul> element is now different.", "author": "rdiachenko", "createdAt": "2020-06-05T06:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NzMwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3NzcwMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434377703", "bodyText": "Please explain why do you need this logic?", "author": "rdiachenko", "createdAt": "2020-06-03T07:55:29Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -721,16 +721,20 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST child = throwsAST.getFirstChild();\n-            while (child != null) {\n-                if (child.getType() == TokenTypes.IDENT\n-                        || child.getType() == TokenTypes.DOT) {\n+            DetailAST exception = throwsAST.getFirstChild();\n+            while (exception != null) {\n+                if (exception.getType() == TokenTypes.IDENT\n+                        || exception.getType() == TokenTypes.DOT) {\n+                    DetailAST child = exception;\n                     final FullIdent ident = FullIdent.createFullIdent(child);\n-                    final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                    while (child.getType() == TokenTypes.DOT) {\n+                        child = child.getFirstChild();\n+                    }", "originalCommit": "39e3443150532b99d46264b84958d1f54e31a3de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgzNDk4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435834987", "bodyText": "this is because there is some special cases:\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodExtraThrows.java\n    \n    \n        Lines 77 to 82\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void doSomething5(String properties) { \n        \n\n        \n          \n               // here is NPE possible \n        \n\n        \n          \n               if (properties.charAt(0) == 0) { \n        \n\n        \n          \n                   throw new java.lang.IllegalArgumentException(\"cannot have char with code 0\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodGenerics.java\n    \n    \n        Lines 43 to 46\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void method1() throws RuntimeException, RE, \n        \n\n        \n          \n               java.lang.RuntimeException \n        \n\n        \n          \n           { \n        \n\n        \n          \n           }", "author": "HuGanghui", "createdAt": "2020-06-05T10:31:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3NzcwMw=="}], "type": "inlineReview", "revised_code": {"commit": "ca9c830ba9b7ffa8a113bb118ef33884ed20de65", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\nindex f88ba1f55..95da08c0c 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\n\n@@ -721,20 +721,20 @@ public class JavadocMethodCheck extends AbstractCheck {\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST exception = throwsAST.getFirstChild();\n-            while (exception != null) {\n-                if (exception.getType() == TokenTypes.IDENT\n-                        || exception.getType() == TokenTypes.DOT) {\n-                    DetailAST child = exception;\n-                    final FullIdent ident = FullIdent.createFullIdent(child);\n-                    while (child.getType() == TokenTypes.DOT) {\n-                        child = child.getFirstChild();\n+            DetailAST child = throwsAST.getFirstChild();\n+            while (child != null) {\n+                if (child.getType() == TokenTypes.IDENT\n+                        || child.getType() == TokenTypes.DOT) {\n+                    DetailAST exception = child;\n+                    final FullIdent ident = FullIdent.createFullIdent(exception);\n+                    while (exception.getType() == TokenTypes.DOT) {\n+                        exception = exception.getFirstChild();\n                     }\n-                    final ExceptionInfo exceptionInfo = new ExceptionInfo(child,\n+                    final ExceptionInfo exceptionInfo = new ExceptionInfo(exception,\n                             new ClassInfo(new Token(ident)));\n                     returnValue.add(exceptionInfo);\n                 }\n-                exception = exception.getNextSibling();\n+                child = child.getNextSibling();\n             }\n         }\n         return returnValue;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODMyMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434378321", "bodyText": "Please don't rename variables in scope of one update, it is hard to see what was actually changed/added.", "author": "rdiachenko", "createdAt": "2020-06-03T07:56:38Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -721,16 +721,20 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST child = throwsAST.getFirstChild();\n-            while (child != null) {\n-                if (child.getType() == TokenTypes.IDENT\n-                        || child.getType() == TokenTypes.DOT) {\n+            DetailAST exception = throwsAST.getFirstChild();", "originalCommit": "39e3443150532b99d46264b84958d1f54e31a3de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg0MjQ3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435842471", "bodyText": "done, recover to original name", "author": "HuGanghui", "createdAt": "2020-06-05T10:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODMyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca9c830ba9b7ffa8a113bb118ef33884ed20de65", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\nindex f88ba1f55..95da08c0c 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\n\n@@ -721,20 +721,20 @@ public class JavadocMethodCheck extends AbstractCheck {\n         final DetailAST throwsAST = ast\n                 .findFirstToken(TokenTypes.LITERAL_THROWS);\n         if (throwsAST != null) {\n-            DetailAST exception = throwsAST.getFirstChild();\n-            while (exception != null) {\n-                if (exception.getType() == TokenTypes.IDENT\n-                        || exception.getType() == TokenTypes.DOT) {\n-                    DetailAST child = exception;\n-                    final FullIdent ident = FullIdent.createFullIdent(child);\n-                    while (child.getType() == TokenTypes.DOT) {\n-                        child = child.getFirstChild();\n+            DetailAST child = throwsAST.getFirstChild();\n+            while (child != null) {\n+                if (child.getType() == TokenTypes.IDENT\n+                        || child.getType() == TokenTypes.DOT) {\n+                    DetailAST exception = child;\n+                    final FullIdent ident = FullIdent.createFullIdent(exception);\n+                    while (exception.getType() == TokenTypes.DOT) {\n+                        exception = exception.getFirstChild();\n                     }\n-                    final ExceptionInfo exceptionInfo = new ExceptionInfo(child,\n+                    final ExceptionInfo exceptionInfo = new ExceptionInfo(exception,\n                             new ClassInfo(new Token(ident)));\n                     returnValue.add(exceptionInfo);\n                 }\n-                exception = exception.getNextSibling();\n+                child = child.getNextSibling();\n             }\n         }\n         return returnValue;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r434378645", "bodyText": "Same question as above, what's the purpose of this while?", "author": "rdiachenko", "createdAt": "2020-06-03T07:57:10Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "diffHunk": "@@ -752,8 +756,12 @@ private static int calculateTagColumn(Matcher javadocTagMatcher,\n                 if (!isInIgnoreBlock(blockAst, throwAst)) {\n                     final DetailAST newAst = throwAst.getFirstChild().getFirstChild();\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n-                        final FullIdent ident = FullIdent.createFullIdent(newAst.getFirstChild());\n-                        final ExceptionInfo exceptionInfo = new ExceptionInfo(\n+                        DetailAST child = newAst.getFirstChild();\n+                        final FullIdent ident = FullIdent.createFullIdent(child);\n+                        while (child.getType() == TokenTypes.DOT) {\n+                            child = child.getFirstChild();\n+                        }", "originalCommit": "39e3443150532b99d46264b84958d1f54e31a3de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTgzNzU4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435837580", "bodyText": "same special case mentioned above~\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodExtraThrows.java\n    \n    \n        Lines 77 to 82\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void doSomething5(String properties) { \n        \n\n        \n          \n               // here is NPE possible \n        \n\n        \n          \n               if (properties.charAt(0) == 0) { \n        \n\n        \n          \n                   throw new java.lang.IllegalArgumentException(\"cannot have char with code 0\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\n\n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/javadocmethod/InputJavadocMethodGenerics.java\n    \n    \n        Lines 43 to 46\n      in\n      f4e92b1\n    \n    \n    \n    \n\n        \n          \n           public void method1() throws RuntimeException, RE, \n        \n\n        \n          \n               java.lang.RuntimeException \n        \n\n        \n          \n           { \n        \n\n        \n          \n           }", "author": "HuGanghui", "createdAt": "2020-06-05T10:37:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxNzY0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435917645", "bodyText": "It looks like desire to keep the same column for violation.\n$ cat Test.java \nclass Test {\n    public void bar() {\n        throw new org.apache.tools.ant.BuildException(\"\"); //warn\n    }\n}\n\n$java -jar /var/tmp/checkstyle-8.32-all.jar -t Test.java \nCLASS_DEF -> CLASS_DEF [1:0]\n|--MODIFIERS -> MODIFIERS [1:0]\n|--LITERAL_CLASS -> class [1:0]\n|--IDENT -> Test [1:6]\n`--OBJBLOCK -> OBJBLOCK [1:11]\n    |--LCURLY -> { [1:11]\n    |--METHOD_DEF -> METHOD_DEF [2:4]\n    |   |--MODIFIERS -> MODIFIERS [2:4]\n    |   |   `--LITERAL_PUBLIC -> public [2:4]\n    |   |--TYPE -> TYPE [2:11]\n    |   |   `--LITERAL_VOID -> void [2:11]\n    |   |--IDENT -> bar [2:16]\n    |   |--LPAREN -> ( [2:19]\n    |   |--PARAMETERS -> PARAMETERS [2:20]\n    |   |--RPAREN -> ) [2:20]\n    |   `--SLIST -> { [2:22]\n    |       |--LITERAL_THROW -> throw [3:8]\n    |       |   |--EXPR -> EXPR [3:14]\n    |       |   |   `--LITERAL_NEW -> new [3:14]\n    |       |   |       |--DOT -> . [3:38]\n    |       |   |       |   |--DOT -> . [3:34]\n    |       |   |       |   |   |--DOT -> . [3:28]\n    |       |   |       |   |   |   |--DOT -> . [3:21]\n    |       |   |       |   |   |   |   |--IDENT -> org [3:18]\n    |       |   |       |   |   |   |   `--IDENT -> apache [3:22]\n    |       |   |       |   |   |   `--IDENT -> tools [3:29]\n    |       |   |       |   |   `--IDENT -> ant [3:35]\n    |       |   |       |   `--IDENT -> BuildException [3:39]\n    |       |   |       |--LPAREN -> ( [3:53]\n    |       |   |       |--ELIST -> ELIST [3:54]\n    |       |   |       |   `--EXPR -> EXPR [3:54]\n    |       |   |       |       `--STRING_LITERAL -> \"\" [3:54]\n    |       |   |       `--RPAREN -> ) [3:56]\n    |       |   `--SEMI -> ; [3:57]\n    |       `--RCURLY -> } [4:4]\n    `--RCURLY -> } [5:0]\n\n@rdiachenko ,  it is hard choice on where to put violation org [3:18] vs BuildException [3:39]\nIntend is too keep the same column of violation, as you can see that your UT did report change in column - \n  \n    \n      checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\n    \n    \n        Lines 83 to 94\n      in\n      3c0595f\n    \n    \n    \n    \n\n        \n          \n           public void testExtraThrows() throws Exception { \n        \n\n        \n          \n               final DefaultConfiguration config = createModuleConfig(JavadocMethodCheck.class); \n        \n\n        \n          \n               config.addAttribute(\"validateThrows\", \"true\"); \n        \n\n        \n          \n               final String[] expected = { \n        \n\n        \n          \n                   \"41:56: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"IllegalStateException\"), \n        \n\n        \n          \n                   \"56:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"IllegalArgumentException\"), \n        \n\n        \n          \n                   \"68:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"IllegalArgumentException\"), \n        \n\n        \n          \n                   \"80:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \n        \n\n        \n          \n                           \"java.lang.IllegalArgumentException\"), \n        \n\n        \n          \n                   \"119:23: \" + getCheckMessage(MSG_EXPECTED_TAG, \"@throws\", \"FileNotFoundException\"), \n        \n\n        \n          \n               }; \n        \n\n        \n          \n               verify(config, getPath(\"InputJavadocMethodExtraThrows.java\"), expected);", "author": "romani", "createdAt": "2020-06-05T13:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkyNTExNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r435925114", "bodyText": "I agree to keep column unchanged.\n@HuGanghui , please make a static private method to get node where class name starts. Please generate diff regression report, as code change is significant.", "author": "romani", "createdAt": "2020-06-05T13:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMTA4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8297#discussion_r436231089", "bodyText": "done, diff report:  https://huganghui.github.io/7739-JavadocMethod//diff/", "author": "HuGanghui", "createdAt": "2020-06-06T02:53:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3ODY0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e618fb1edf2db367a4ed143c810535a9743d", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\nindex f88ba1f55..6c4d05c62 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java\n\n@@ -758,9 +756,7 @@ public class JavadocMethodCheck extends AbstractCheck {\n                     if (newAst.getType() == TokenTypes.LITERAL_NEW) {\n                         DetailAST child = newAst.getFirstChild();\n                         final FullIdent ident = FullIdent.createFullIdent(child);\n-                        while (child.getType() == TokenTypes.DOT) {\n-                            child = child.getFirstChild();\n-                        }\n+                        child = getFirstClassNameNode(child);\n                         final ExceptionInfo exceptionInfo = new ExceptionInfo(child,\n                                 new ClassInfo(new Token(ident)));\n                         returnValue.add(exceptionInfo);\n"}}, {"oid": "53eeced1c23baf7e322330089c64c97064928d4d", "url": "https://github.com/checkstyle/checkstyle/commit/53eeced1c23baf7e322330089c64c97064928d4d", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-03T14:21:57Z", "type": "forcePushed"}, {"oid": "e042fa33455b90151ca1461b5c487dd0857475aa", "url": "https://github.com/checkstyle/checkstyle/commit/e042fa33455b90151ca1461b5c487dd0857475aa", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-04T07:50:00Z", "type": "forcePushed"}, {"oid": "51f9d4152e5abb2382abfca50bcf0808073d5276", "url": "https://github.com/checkstyle/checkstyle/commit/51f9d4152e5abb2382abfca50bcf0808073d5276", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-04T14:23:32Z", "type": "forcePushed"}, {"oid": "ca9c830ba9b7ffa8a113bb118ef33884ed20de65", "url": "https://github.com/checkstyle/checkstyle/commit/ca9c830ba9b7ffa8a113bb118ef33884ed20de65", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-05T10:45:45Z", "type": "forcePushed"}, {"oid": "2c84e618fb1edf2db367a4ed143c810535a9743d", "url": "https://github.com/checkstyle/checkstyle/commit/2c84e618fb1edf2db367a4ed143c810535a9743d", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-06T02:52:19Z", "type": "forcePushed"}, {"oid": "ac45e03fea7ba7d10f62e2c0f9243037edba327b", "url": "https://github.com/checkstyle/checkstyle/commit/ac45e03fea7ba7d10f62e2c0f9243037edba327b", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-06T03:41:12Z", "type": "forcePushed"}, {"oid": "77edaccf4e3c7106d75a6db0a343bae35e63fcd4", "url": "https://github.com/checkstyle/checkstyle/commit/77edaccf4e3c7106d75a6db0a343bae35e63fcd4", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-06T03:53:45Z", "type": "forcePushed"}, {"oid": "bf445915d0c2cf20ad3e87b61edcefead16cf74c", "url": "https://github.com/checkstyle/checkstyle/commit/bf445915d0c2cf20ad3e87b61edcefead16cf74c", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-09T06:30:49Z", "type": "commit"}, {"oid": "bf445915d0c2cf20ad3e87b61edcefead16cf74c", "url": "https://github.com/checkstyle/checkstyle/commit/bf445915d0c2cf20ad3e87b61edcefead16cf74c", "message": "Issue #7739: Update AbstractChecks to log DetailAST - JavadocMethod", "committedDate": "2020-06-09T06:30:49Z", "type": "forcePushed"}]}