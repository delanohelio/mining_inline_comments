{"pr_number": 8692, "pr_title": "Issue #8683: LambdaParameterName throws NPE parsing switch expressions", "pr_createdAt": "2020-08-13T19:20:30Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8692", "timeline": [{"oid": "7a626a74b5e1ff9c9868a910a86dc1135364f68c", "url": "https://github.com/checkstyle/checkstyle/commit/7a626a74b5e1ff9c9868a910a86dc1135364f68c", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-13T19:35:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MzMxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8692#discussion_r471073315", "bodyText": "Please split this if into two and revert else if. The condition will be easy to read. Or, the whole condition can be inverted:\n        final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n        if (parametersNode != null) {\n            TokenUtil.forEachChild(parametersNode, TokenTypes.PARAMETER_DEF, super::visitToken);\n        }\n        else if (ast.getParent().getType() != TokenTypes.SWITCH_RULE) {\n            super.visitToken(ast);\n        }", "author": "pbludov", "createdAt": "2020-08-16T06:38:54Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java", "diffHunk": "@@ -113,10 +113,11 @@ public LambdaParameterNameCheck() {\n     @Override\n     public void visitToken(DetailAST ast) {\n         final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n-        if (parametersNode == null) {\n+        if (parametersNode == null\n+                && ast.getParent().getType() != TokenTypes.SWITCH_RULE) {", "originalCommit": "7a626a74b5e1ff9c9868a910a86dc1135364f68c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwODYxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8692#discussion_r471108613", "bodyText": "Causes PMD violation:  PMD Failure: com.puppycrawl.tools.checkstyle.checks.naming.LambdaParameterNameCheck:117 Rule:ConfusingTernary Priority:3 Avoid if (x != y) ..; else ..;.\nI've worked around it with a method call, Objects.nonNull(ast.findFirstToken(TokenTypes.PARAMETERS))", "author": "nmancus1", "createdAt": "2020-08-16T12:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MzMxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "712d2e3bd3f6bc7f7a47cdfb3bb3ca4865803bec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java\nindex d90e99504..0bc7f60da 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java\n\n@@ -112,19 +115,15 @@ public class LambdaParameterNameCheck extends AbstractNameCheck {\n \n     @Override\n     public void visitToken(DetailAST ast) {\n-        final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n-        if (parametersNode == null\n-                && ast.getParent().getType() != TokenTypes.SWITCH_RULE) {\n-            super.visitToken(ast);\n+        final boolean isInSwitchRule = ast.getParent().getType() == TokenTypes.SWITCH_RULE;\n+\n+        if (Objects.nonNull(ast.findFirstToken(TokenTypes.PARAMETERS))) {\n+            final DetailAST parametersNode = ast.findFirstToken(TokenTypes.PARAMETERS);\n+            TokenUtil.forEachChild(parametersNode, TokenTypes.PARAMETER_DEF, super::visitToken);\n+\n         }\n-        else if (parametersNode != null) {\n-            for (DetailAST parameterDef = parametersNode.getFirstChild();\n-                 parameterDef != null;\n-                 parameterDef = parameterDef.getNextSibling()) {\n-                if (parameterDef.getType() == TokenTypes.PARAMETER_DEF) {\n-                    super.visitToken(parameterDef);\n-                }\n-            }\n+        else if (!isInSwitchRule) {\n+            super.visitToken(ast);\n         }\n     }\n \n"}}, {"oid": "712d2e3bd3f6bc7f7a47cdfb3bb3ca4865803bec", "url": "https://github.com/checkstyle/checkstyle/commit/712d2e3bd3f6bc7f7a47cdfb3bb3ca4865803bec", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-16T12:42:12Z", "type": "forcePushed"}, {"oid": "1f16f61343a3fed8e90667fb6337ad39292d54e1", "url": "https://github.com/checkstyle/checkstyle/commit/1f16f61343a3fed8e90667fb6337ad39292d54e1", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-16T12:43:55Z", "type": "commit"}, {"oid": "1f16f61343a3fed8e90667fb6337ad39292d54e1", "url": "https://github.com/checkstyle/checkstyle/commit/1f16f61343a3fed8e90667fb6337ad39292d54e1", "message": "Issue #8683: LambdaParameterNameCheck throws NPE when parsing switch expressions", "committedDate": "2020-08-16T12:43:55Z", "type": "forcePushed"}]}