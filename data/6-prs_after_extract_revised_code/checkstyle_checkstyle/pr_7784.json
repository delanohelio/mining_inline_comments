{"pr_number": 7784, "pr_title": "Issue #7642: Update doc for IllegalCatch", "pr_createdAt": "2020-03-05T11:49:43Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7784", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NDAyNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r388274025", "bodyText": "should be <p>Example:</p> between config and code examples", "author": "strkkk", "createdAt": "2020-03-05T12:53:11Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,77 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <pre>", "originalCommit": "689147454bbc090e7ed70ac9cb1114aeb10f11aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 1d38264e5..f109fe3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,73 +56,78 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n- *                           and order of multi-catch blocks doesn't matter\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n- *                                                is declared to be illegal\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) { // OK\n  *\n  * }\n  * </pre>\n  * <p>\n- * To configure the check rejecting ArithmeticException catch also:\n+ * To configure the check to extend default list with ArithmeticException:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n- * &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- * Exception&quot;/&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               Exception&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException e) { // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) {  // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) {  // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) { // OK\n  *\n  * }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NDE3NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r388274174", "bodyText": "Violation -> lowercase", "author": "strkkk", "createdAt": "2020-03-05T12:53:29Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,77 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <pre>\n+ * try {\n+ *     // do stuff\n+ * } catch (Exception e) { // Violation", "originalCommit": "689147454bbc090e7ed70ac9cb1114aeb10f11aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 1d38264e5..f109fe3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,73 +56,78 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n- *                           and order of multi-catch blocks doesn't matter\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n- *                                                is declared to be illegal\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) { // OK\n  *\n  * }\n  * </pre>\n  * <p>\n- * To configure the check rejecting ArithmeticException catch also:\n+ * To configure the check to extend default list with ArithmeticException:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n- * &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- * Exception&quot;/&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               Exception&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException e) { // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) {  // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) {  // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) { // OK\n  *\n  * }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NDM1NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r388274354", "bodyText": "do stuff -> some code here and in other places", "author": "strkkk", "createdAt": "2020-03-05T12:53:53Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,77 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <pre>\n+ * try {\n+ *     // do stuff", "originalCommit": "689147454bbc090e7ed70ac9cb1114aeb10f11aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 1d38264e5..f109fe3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,73 +56,78 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n- *                           and order of multi-catch blocks doesn't matter\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n- *                                                is declared to be illegal\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) { // OK\n  *\n  * }\n  * </pre>\n  * <p>\n- * To configure the check rejecting ArithmeticException catch also:\n+ * To configure the check to extend default list with ArithmeticException:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n- * &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- * Exception&quot;/&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               Exception&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException e) { // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) {  // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) {  // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) { // OK\n  *\n  * }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NDcxMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r388274711", "bodyText": "and order of multi-catch blocks doesn't matter it is not multicatch, just catch blocks", "author": "strkkk", "createdAt": "2020-03-05T12:54:38Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,77 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <pre>\n+ * try {\n+ *     // do stuff\n+ * } catch (Exception e) { // Violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // do stuff\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ *                           and order of multi-catch blocks doesn't matter", "originalCommit": "689147454bbc090e7ed70ac9cb1114aeb10f11aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 1d38264e5..f109fe3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,73 +56,78 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n- *                           and order of multi-catch blocks doesn't matter\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n- *                                                is declared to be illegal\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) { // OK\n  *\n  * }\n  * </pre>\n  * <p>\n- * To configure the check rejecting ArithmeticException catch also:\n+ * To configure the check to extend default list with ArithmeticException:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n- * &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- * Exception&quot;/&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               Exception&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException e) { // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) {  // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) {  // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) { // OK\n  *\n  * }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NTIwNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r388275204", "bodyText": "one of the exception is declared to be illegal\ntoo cryptic, just catching ExceptionName is illegal", "author": "strkkk", "createdAt": "2020-03-05T12:55:36Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,77 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <pre>\n+ * try {\n+ *     // do stuff\n+ * } catch (Exception e) { // Violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // do stuff\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ *                           and order of multi-catch blocks doesn't matter\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // do stuff\n+ * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n+ *                                                is declared to be illegal", "originalCommit": "689147454bbc090e7ed70ac9cb1114aeb10f11aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 1d38264e5..f109fe3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,73 +56,78 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n- *                           and order of multi-catch blocks doesn't matter\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n- *                                                is declared to be illegal\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) { // OK\n  *\n  * }\n  * </pre>\n  * <p>\n- * To configure the check rejecting ArithmeticException catch also:\n+ * To configure the check to extend default list with ArithmeticException:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n- * &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- * Exception&quot;/&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               Exception&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException e) { // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) {  // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) {  // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) { // OK\n  *\n  * }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3NTkyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r388275926", "bodyText": "rejecting ArithmeticException catch also -> to extend default list with ArithmeticException", "author": "strkkk", "createdAt": "2020-03-05T12:56:54Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,77 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <pre>\n+ * try {\n+ *     // do stuff\n+ * } catch (Exception e) { // Violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // do stuff\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ *                           and order of multi-catch blocks doesn't matter\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // do stuff\n+ * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n+ *                                                is declared to be illegal\n+ *\n+ * }\n  *\n+ * try {\n+ *     // do stuff\n+ * } catch (ArithmeticException e) { // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check rejecting ArithmeticException catch also:", "originalCommit": "689147454bbc090e7ed70ac9cb1114aeb10f11aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 1d38264e5..f109fe3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,73 +56,78 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n- *                           and order of multi-catch blocks doesn't matter\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) { // Violation, one of the exception\n- *                                                is declared to be illegal\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (ArithmeticException e) { // OK\n  *\n  * }\n  * </pre>\n  * <p>\n- * To configure the check rejecting ArithmeticException catch also:\n+ * To configure the check to extend default list with ArithmeticException:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n- * &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- * Exception&quot;/&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               Exception&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n  * <pre>\n  * try {\n- *     // do stuff\n- * } catch (Exception e) { // Violation\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException e) { // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) {\n  *\n- * } catch (Exception e) { // Violation, one of the exception is declared to be illegal\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n- * } catch (ArithmeticException | Exception e) {  // Violation\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) {  // violation\n  *\n  * }\n  *\n  * try {\n- *     // do stuff\n+ *     // some code here\n  * } catch (NullPointerException e) { // OK\n  *\n  * }\n"}}, {"oid": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "url": "https://github.com/checkstyle/checkstyle/commit/785471c7a6f27886a5ac82903b2831cc5d9c06ec", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-05T14:41:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NjE1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389346153", "bodyText": "Sorry for confusion, this property is not for default list extension, but to override it.\n\nPlease change description to clearly show it.\nPlease change config example to non-default things (change Exception to something like OutOfMemoryError)", "author": "strkkk", "createdAt": "2020-03-08T08:11:29Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,82 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to extend default list with ArithmeticException:", "originalCommit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1MjYzNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389352636", "bodyText": "@strkkk done, please review.", "author": "gaurabdg", "createdAt": "2020-03-08T09:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NjE1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fc672c8b722f98af7ac33b6b032a671d67b7ae90", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex f109fe3f0..10489a8f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -88,12 +88,13 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * }\n  * </pre>\n  * <p>\n- * To configure the check to extend default list with ArithmeticException:\n+ * To configure the check to override the default list\n+ * with ArithmeticException and OutOfMemoryError:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n  *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- *               Exception&quot;/&gt;\n+ *               OutOfMemoryError&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NjE4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389346185", "bodyText": "OK comment missing", "author": "strkkk", "createdAt": "2020-03-08T08:11:53Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,82 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) {", "originalCommit": "785471c7a6f27886a5ac82903b2831cc5d9c06ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0OTQ4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389349489", "bodyText": "It will cause a violation since the next catch block is illegal, thats why didn't put the comment of OK", "author": "gaurabdg", "createdAt": "2020-03-08T08:59:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NjE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MzI1NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389393255", "bodyText": "Yes, but this catch block is ok, violation occurs on next one.", "author": "strkkk", "createdAt": "2020-03-08T18:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0NjE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fc672c8b722f98af7ac33b6b032a671d67b7ae90", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex f109fe3f0..10489a8f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -88,12 +88,13 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * }\n  * </pre>\n  * <p>\n- * To configure the check to extend default list with ArithmeticException:\n+ * To configure the check to override the default list\n+ * with ArithmeticException and OutOfMemoryError:\n  * </p>\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;&gt;\n  *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n- *               Exception&quot;/&gt;\n+ *               OutOfMemoryError&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  * <p>\n"}}, {"oid": "fc672c8b722f98af7ac33b6b032a671d67b7ae90", "url": "https://github.com/checkstyle/checkstyle/commit/fc672c8b722f98af7ac33b6b032a671d67b7ae90", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-08T09:43:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5Mjk5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389392998", "bodyText": "OK comment is missing", "author": "strkkk", "createdAt": "2020-03-08T18:18:10Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,83 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to override the default list\n+ * with ArithmeticException and OutOfMemoryError:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalCatch&quot;&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               OutOfMemoryError&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (OutOfMemoryError e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (NullPointerException e) {", "originalCommit": "fc672c8b722f98af7ac33b6b032a671d67b7ae90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2Mjk0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389462948", "bodyText": "done", "author": "gaurabdg", "createdAt": "2020-03-09T04:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5Mjk5OA=="}], "type": "inlineReview", "revised_code": {"commit": "88944910c786cf00bd404884f36ac1f55d73d2a8", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 10489a8f0..09aba2989 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -68,11 +68,10 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  *\n  * try {\n  *     // some code here\n- * } catch (ArithmeticException e) {\n+ * } catch (ArithmeticException e) { // OK\n  *\n  * } catch (Exception e) { // violation, catching Exception is illegal\n  *                           and order of catch blocks doesn't matter\n- *\n  * }\n  *\n  * try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MzEzOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389393138", "bodyText": "violation, catching OutOfMemoryError is illegal\njust violation is enough", "author": "strkkk", "createdAt": "2020-03-08T18:20:01Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,83 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n  *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to override the default list\n+ * with ArithmeticException and OutOfMemoryError:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalCatch&quot;&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               OutOfMemoryError&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (OutOfMemoryError e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (NullPointerException e) {\n+ *\n+ * } catch (OutOfMemoryError e) { // violation, catching OutOfMemoryError is illegal", "originalCommit": "fc672c8b722f98af7ac33b6b032a671d67b7ae90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2Mjk2Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389462966", "bodyText": "done", "author": "gaurabdg", "createdAt": "2020-03-09T04:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MzEzOA=="}], "type": "inlineReview", "revised_code": {"commit": "88944910c786cf00bd404884f36ac1f55d73d2a8", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 10489a8f0..09aba2989 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -68,11 +68,10 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  *\n  * try {\n  *     // some code here\n- * } catch (ArithmeticException e) {\n+ * } catch (ArithmeticException e) { // OK\n  *\n  * } catch (Exception e) { // violation, catching Exception is illegal\n  *                           and order of catch blocks doesn't matter\n- *\n  * }\n  *\n  * try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MzM2Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389393362", "bodyText": "empty line can be removed", "author": "strkkk", "createdAt": "2020-03-08T18:23:10Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,83 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) {\n+ *\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n+ *", "originalCommit": "fc672c8b722f98af7ac33b6b032a671d67b7ae90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2MzAwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389463005", "bodyText": "done", "author": "gaurabdg", "createdAt": "2020-03-09T04:54:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MzM2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "88944910c786cf00bd404884f36ac1f55d73d2a8", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 10489a8f0..09aba2989 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -68,11 +68,10 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  *\n  * try {\n  *     // some code here\n- * } catch (ArithmeticException e) {\n+ * } catch (ArithmeticException e) { // OK\n  *\n  * } catch (Exception e) { // violation, catching Exception is illegal\n  *                           and order of catch blocks doesn't matter\n- *\n  * }\n  *\n  * try {\n"}}, {"oid": "88944910c786cf00bd404884f36ac1f55d73d2a8", "url": "https://github.com/checkstyle/checkstyle/commit/88944910c786cf00bd404884f36ac1f55d73d2a8", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-09T04:53:29Z", "type": "forcePushed"}, {"oid": "e90bdcf9712ea7a7f57c9afd32628877ec92e903", "url": "https://github.com/checkstyle/checkstyle/commit/e90bdcf9712ea7a7f57c9afd32628877ec92e903", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-09T09:07:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MTk3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389581971", "bodyText": "Please make it single line\n <p>Example:</p>", "author": "strkkk", "createdAt": "2020-03-09T10:42:58Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,82 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>", "originalCommit": "e90bdcf9712ea7a7f57c9afd32628877ec92e903", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3ODMyNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389778325", "bodyText": "done", "author": "gaurabdg", "createdAt": "2020-03-09T15:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MTk3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "95dadd724c8e2e25cf2e78ef0efa7905d043c948", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 09aba2989..18c9931f9 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,9 +56,7 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n- * <p>\n- * Example:\n- * </p>\n+ * <p>Example:</p>\n  * <pre>\n  * try {\n  *     // some code here\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MjEzMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389582131", "bodyText": "here too", "author": "strkkk", "createdAt": "2020-03-09T10:43:17Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "diffHunk": "@@ -56,7 +56,82 @@\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * try {\n+ *     // some code here\n+ * } catch (Exception e) { // violation\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // OK\n+ *\n+ * } catch (Exception e) { // violation, catching Exception is illegal\n+ *                           and order of catch blocks doesn't matter\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException | Exception e) { // violation, catching Exception is illegal\n+ *\n+ * }\n+ *\n+ * try {\n+ *     // some code here\n+ * } catch (ArithmeticException e) { // OK\n+ *\n+ * }\n+ * </pre>\n+ * <p>\n+ * To configure the check to override the default list\n+ * with ArithmeticException and OutOfMemoryError:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=&quot;IllegalCatch&quot;&gt;\n+ *   &lt;property name=&quot;illegalClassNames&quot; value=&quot;ArithmeticException,\n+ *               OutOfMemoryError&quot;/&gt;\n+ * &lt;/module&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>", "originalCommit": "e90bdcf9712ea7a7f57c9afd32628877ec92e903", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3ODQ1MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7784#discussion_r389778450", "bodyText": "done", "author": "gaurabdg", "createdAt": "2020-03-09T15:45:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MjEzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "95dadd724c8e2e25cf2e78ef0efa7905d043c948", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\nindex 09aba2989..18c9931f9 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java\n\n@@ -56,9 +56,7 @@ import com.puppycrawl.tools.checkstyle.utils.CheckUtil;\n  * <pre>\n  * &lt;module name=&quot;IllegalCatch&quot;/&gt;\n  * </pre>\n- * <p>\n- * Example:\n- * </p>\n+ * <p>Example:</p>\n  * <pre>\n  * try {\n  *     // some code here\n"}}, {"oid": "95dadd724c8e2e25cf2e78ef0efa7905d043c948", "url": "https://github.com/checkstyle/checkstyle/commit/95dadd724c8e2e25cf2e78ef0efa7905d043c948", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-09T15:42:30Z", "type": "forcePushed"}, {"oid": "0a7dfcdf5f7216acc7c3839066394b4312123d71", "url": "https://github.com/checkstyle/checkstyle/commit/0a7dfcdf5f7216acc7c3839066394b4312123d71", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-09T18:43:21Z", "type": "commit"}, {"oid": "0a7dfcdf5f7216acc7c3839066394b4312123d71", "url": "https://github.com/checkstyle/checkstyle/commit/0a7dfcdf5f7216acc7c3839066394b4312123d71", "message": "Issue #7642: Update doc for IllegalCatch", "committedDate": "2020-03-09T18:43:21Z", "type": "forcePushed"}]}