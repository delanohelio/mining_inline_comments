{"pr_number": 7774, "pr_title": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "pr_createdAt": "2020-03-03T09:46:05Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7774", "timeline": [{"oid": "22737bb6050cc5e90f3e958c4e83220a8e79d34d", "url": "https://github.com/checkstyle/checkstyle/commit/22737bb6050cc5e90f3e958c4e83220a8e79d34d", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-03T10:48:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMzYxMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387313611", "bodyText": "violation message - Empty catch block.(link)\nposition 11 is for catch token\nProblem is code is actually should be placed at {}.\nPlease do update in code to place first SLIST token from catch.\nSuch more precise placing will be used in auto-fix functionality to with suggestion on fix.", "author": "romani", "createdAt": "2020-03-03T21:47:44Z", "path": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "diffHunk": "@@ -78,10 +78,10 @@ public void testViolationsByComment() throws Exception {\n     @Test\n     public void testViolationsByVariableName() throws Exception {\n         final String[] expected = {\n-            \"19: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n-            \"35: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n-            \"51: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n-            \"58: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"19:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"35:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"51:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"58:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),", "originalCommit": "22737bb6050cc5e90f3e958c4e83220a8e79d34d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzNDI1MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387334251", "bodyText": "Issue is block of catch. A catch should always have a block. If we violate on the catch or the block, it all leads to the same area. I would question why auto-fix, when done, couldn't make the same determination.\nI don't mind this change and am fine with it.\n@romani One area of thought is how this affects xpath. SLIST is a child of LITERAL_CATCH, but this is a slightly breaking change for current xpaths. Some xpaths examine parent/child and this would make those current suppressions not working.\n    |      |  `--LITERAL_CATCH -> catch [3:7]\n    |      |      |--LPAREN -> ( [3:13]\n    |      |      |--PARAMETER_DEF -> PARAMETER_DEF [3:14]\n    |      |      |  |--MODIFIERS -> MODIFIERS [3:14]\n    |      |      |  |--TYPE -> TYPE [3:14]\n    |      |      |  |  `--IDENT -> Exception [3:14]\n    |      |      |  `--IDENT -> e [3:24]\n    |      |      |--RPAREN -> ) [3:25]\n    |      |      `--SLIST -> { [3:27]\n    |      |          `--RCURLY -> } [3:28]", "author": "rnveach", "createdAt": "2020-03-03T22:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMzYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MDE4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387350189", "bodyText": "Usually good to position violation as close as possible to cause point.\nThis Check does not support xpath now, it will be supported after this fix.  I am not sure what breaking changes you mention.", "author": "romani", "createdAt": "2020-03-03T23:09:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMzYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1ODUzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387358534", "bodyText": "It can be ignored. I forgot what this change is doing for us. :)", "author": "rnveach", "createdAt": "2020-03-03T23:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMzYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzNTE1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387435157", "bodyText": "@gaurabdg , please update code to put violation on braces.", "author": "romani", "createdAt": "2020-03-04T03:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMzYxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3OTc4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387679787", "bodyText": "@romani done, please review.", "author": "gaurabdg", "createdAt": "2020-03-04T13:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMzYxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f17ae80cc6748ea9315990022d7c8c8f4cc8d47b", "chunk": "diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java\nindex 3bbee11d2..1ddae64e5 100644\n--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java\n+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java\n\n@@ -78,10 +78,10 @@ public class EmptyCatchBlockTest extends AbstractGoogleModuleTestSupport {\n     @Test\n     public void testViolationsByVariableName() throws Exception {\n         final String[] expected = {\n-            \"19:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n-            \"35:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n-            \"51:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n-            \"58:11: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"19:31: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"33:78: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"47:78: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n+            \"52:33: \" + getCheckMessage(EmptyCatchBlockCheck.class, \"catch.block.empty\"),\n         };\n \n         final Configuration checkConfig = getModuleConfig(\"EmptyCatchBlock\");\n"}}, {"oid": "f17ae80cc6748ea9315990022d7c8c8f4cc8d47b", "url": "https://github.com/checkstyle/checkstyle/commit/f17ae80cc6748ea9315990022d7c8c8f4cc8d47b", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-04T13:52:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NTQ3Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387685472", "bodyText": "Changes in Inputs are not expected, there more weird Inputs the better. Please keep them as is, if you need such specific cases , please add new code in such files at the end.\nthe same for others cases like this", "author": "romani", "createdAt": "2020-03-04T14:04:00Z", "path": "src/it/resources/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/InputEmptyCatchBlockViolationsByComment.java", "diffHunk": "@@ -16,17 +16,13 @@ private void foo() {\n     private void foo1() {\n         try {\n             throw new RuntimeException();\n-        } catch (Exception e) //warn\n-        {}\n-\n+        } catch (Exception e) {} //warn", "originalCommit": "f17ae80cc6748ea9315990022d7c8c8f4cc8d47b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4ODI4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387688289", "bodyText": "But it will throw an error for not finding a corresponding warn comment for SLIST.\nCurrently the warn comment is on line above lcurly, meaning it corresponds to catch token. Am I understanding it right @romani ?", "author": "gaurabdg", "createdAt": "2020-03-04T14:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyMzA2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387723069", "bodyText": "@gaurabdg Please keep the java code the same, but move the warn comment to the new place where the violation is.", "author": "rnveach", "createdAt": "2020-03-04T15:02:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4OTE1MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387889151", "bodyText": "@romani @rnveach I have applied the changes. Please let me know if there's anything else I need to modify.", "author": "gaurabdg", "createdAt": "2020-03-04T19:36:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NTQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "267d23fec6d8ceefac63a5e81bda492d549028c5", "chunk": "diff --git a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/InputEmptyCatchBlockViolationsByComment.java b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/InputEmptyCatchBlockViolationsByComment.java\nindex 07752ab95..162ea50eb 100644\n--- a/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/InputEmptyCatchBlockViolationsByComment.java\n+++ b/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/InputEmptyCatchBlockViolationsByComment.java\n\n@@ -16,13 +16,17 @@ public class InputEmptyCatchBlockViolationsByComment\n     private void foo1() {\n         try {\n             throw new RuntimeException();\n-        } catch (Exception e) {} //warn\n+        } catch (Exception e)\n+        {} // warn\n+\n     }\n \n     private void foo2() {\n         try {\n             throw new IOException();\n-        } catch (IOException | NullPointerException | ArithmeticException ignore) {} //warn\n+        } catch (IOException | NullPointerException | ArithmeticException ignore)\n+        /*warn*/ {\n+        }\n     }\n \n     private void foo3() { // comment\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NjE0Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387686146", "bodyText": "please add one more test method for case where block has some white spaces:\ncatch(....) {\n}", "author": "romani", "createdAt": "2020-03-04T14:05:04Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionEmptyCatchBlockTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.blocks.EmptyCatchBlockCheck;\n+\n+public class XpathRegressionEmptyCatchBlockTest extends AbstractXpathTestSupport {\n+\n+    private final Class<EmptyCatchBlockCheck> clazz =\n+        EmptyCatchBlockCheck.class;\n+\n+    @Override\n+    protected String getCheckName() {\n+        return clazz.getSimpleName();\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {", "originalCommit": "f17ae80cc6748ea9315990022d7c8c8f4cc8d47b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4OTk5NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r387889994", "bodyText": "@romani done, although I could squash the two methods into one. Should it remain like this?", "author": "gaurabdg", "createdAt": "2020-03-04T19:37:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY4NjE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "267d23fec6d8ceefac63a5e81bda492d549028c5", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionEmptyCatchBlockTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionEmptyCatchBlockTest.java\nindex 7e8322e6e..3fe6e0a7a 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionEmptyCatchBlockTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionEmptyCatchBlockTest.java\n\n@@ -41,7 +41,7 @@ public class XpathRegressionEmptyCatchBlockTest extends AbstractXpathTestSupport\n     @Test\n     public void testOne() throws Exception {\n         final File fileToProcess = new File(\n-            getPath(\"SuppressionXpathRegressionEmptyCatchBlock.java\"));\n+            getPath(\"SuppressionXpathRegressionEmptyCatchBlock1.java\"));\n \n         final DefaultConfiguration moduleConfig = createModuleConfig(clazz);\n \n"}}, {"oid": "267d23fec6d8ceefac63a5e81bda492d549028c5", "url": "https://github.com/checkstyle/checkstyle/commit/267d23fec6d8ceefac63a5e81bda492d549028c5", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-04T19:25:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4ODMxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r388688312", "bodyText": "This is not ok to make Checks depends on each other.\nYou do not need whole method fuctrionality, please create local static method that find SLIST token of catch block.", "author": "romani", "createdAt": "2020-03-06T02:50:26Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java", "diffHunk": "@@ -235,7 +235,7 @@ private void visitCatchBlock(DetailAST catchAst) {\n         if (isEmptyCatchBlock(catchAst)) {\n             final String commentContent = getCommentFirstLine(catchAst);\n             if (isVerifiable(catchAst, commentContent)) {\n-                log(catchAst.getLineNo(), MSG_KEY_CATCH_BLOCK_EMPTY);\n+                log(EmptyBlockCheck.findLeftCurly(catchAst), MSG_KEY_CATCH_BLOCK_EMPTY);", "originalCommit": "267d23fec6d8ceefac63a5e81bda492d549028c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODczODMxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r388738315", "bodyText": "@romani done.", "author": "gaurabdg", "createdAt": "2020-03-06T06:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4ODMxMg=="}], "type": "inlineReview", "revised_code": {"commit": "41beb256248264e470d02a4387d7423fbd4c136d", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java\nindex 676b8db4c..d501aa077 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java\n\n@@ -235,7 +235,7 @@ public class EmptyCatchBlockCheck extends AbstractCheck {\n         if (isEmptyCatchBlock(catchAst)) {\n             final String commentContent = getCommentFirstLine(catchAst);\n             if (isVerifiable(catchAst, commentContent)) {\n-                log(EmptyBlockCheck.findLeftCurly(catchAst), MSG_KEY_CATCH_BLOCK_EMPTY);\n+                log(findSlist(catchAst), MSG_KEY_CATCH_BLOCK_EMPTY);\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4ODM4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r388688385", "bodyText": "Please restore", "author": "romani", "createdAt": "2020-03-06T02:50:46Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java", "diffHunk": "@@ -106,5 +106,4 @@ public void testGetAcceptableTokens() {\n         final int[] expected = {TokenTypes.LITERAL_CATCH };\n         assertArrayEquals(expected, actual, \"Default acceptable tokens are invalid\");\n     }\n-", "originalCommit": "267d23fec6d8ceefac63a5e81bda492d549028c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41beb256248264e470d02a4387d7423fbd4c136d", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java\nindex 761a6ce26..481e1e31e 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java\n\n@@ -106,4 +106,5 @@ public class EmptyCatchBlockCheckTest extends AbstractModuleTestSupport {\n         final int[] expected = {TokenTypes.LITERAL_CATCH };\n         assertArrayEquals(expected, actual, \"Default acceptable tokens are invalid\");\n     }\n+\n }\n"}}, {"oid": "41beb256248264e470d02a4387d7423fbd4c136d", "url": "https://github.com/checkstyle/checkstyle/commit/41beb256248264e470d02a4387d7423fbd4c136d", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-06T06:39:38Z", "type": "forcePushed"}, {"oid": "417489a26ce3a5b39164fde3ae7883974a7b7ae5", "url": "https://github.com/checkstyle/checkstyle/commit/417489a26ce3a5b39164fde3ae7883974a7b7ae5", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-06T06:51:10Z", "type": "forcePushed"}, {"oid": "f98de69c436f1992afe181211a9615649fa2e3fc", "url": "https://github.com/checkstyle/checkstyle/commit/f98de69c436f1992afe181211a9615649fa2e3fc", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-06T08:29:45Z", "type": "forcePushed"}, {"oid": "0e4953b7b128cc7fc5a0460a2da3450d281ad555", "url": "https://github.com/checkstyle/checkstyle/commit/0e4953b7b128cc7fc5a0460a2da3450d281ad555", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-06T12:35:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTIxNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r389259216", "bodyText": "please inline this code to log(....., no need for method at all", "author": "romani", "createdAt": "2020-03-07T14:42:01Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java", "diffHunk": "@@ -313,4 +313,14 @@ private static String getExceptionVariableName(DetailAST catchAst) {\n         return variableName.getText();\n     }\n \n+    /**\n+     * Returns the SLIST token corresponding to the catch block to be checked.\n+     *\n+     * @param ast a {@code DetailAST} value\n+     * @return the SLIST token corresponding to the block to be checked\n+     */\n+    private static DetailAST findSlist(DetailAST ast) {\n+        return ast.findFirstToken(TokenTypes.SLIST);", "originalCommit": "0e4953b7b128cc7fc5a0460a2da3450d281ad555", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MTgzMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7774#discussion_r389261833", "bodyText": "Oh okay, when you earlier mentioned to write a method, I thought it is a good practice. I'll change it right away", "author": "gaurabdg", "createdAt": "2020-03-07T15:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTIxNg=="}], "type": "inlineReview", "revised_code": {"commit": "528991e1c40b7ab7567efd2baa9a822f602d9183", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java\nindex 02b343bf8..1842b8daf 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java\n\n@@ -313,14 +313,4 @@ public class EmptyCatchBlockCheck extends AbstractCheck {\n         return variableName.getText();\n     }\n \n-    /**\n-     * Returns the SLIST token corresponding to the catch block to be checked.\n-     *\n-     * @param ast a {@code DetailAST} value\n-     * @return the SLIST token corresponding to the block to be checked\n-     */\n-    private static DetailAST findSlist(DetailAST ast) {\n-        return ast.findFirstToken(TokenTypes.SLIST);\n-    }\n-\n }\n"}}, {"oid": "528991e1c40b7ab7567efd2baa9a822f602d9183", "url": "https://github.com/checkstyle/checkstyle/commit/528991e1c40b7ab7567efd2baa9a822f602d9183", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-07T15:34:07Z", "type": "commit"}, {"oid": "528991e1c40b7ab7567efd2baa9a822f602d9183", "url": "https://github.com/checkstyle/checkstyle/commit/528991e1c40b7ab7567efd2baa9a822f602d9183", "message": "Issue #7729: Update AbstractChecks to log DetailAST - EmptyCatchBlock", "committedDate": "2020-03-07T15:34:07Z", "type": "forcePushed"}]}