{"pr_number": 8836, "pr_title": "Issue #8808: false positive with JavadocTypeCheck @param tags for Records", "pr_createdAt": "2020-09-18T21:12:42Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8836", "timeline": [{"oid": "8848a63038942f5b8ceb77cfdf4a520c212ef27a", "url": "https://github.com/checkstyle/checkstyle/commit/8848a63038942f5b8ceb77cfdf4a520c212ef27a", "message": "Issue #8808: JavadocTypeCheck: false positive with JavaDoc @param tags for Records", "committedDate": "2020-09-19T02:49:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3ODg5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491478898", "bodyText": "Is the order of this loop important? (just curious)", "author": "esilkensen", "createdAt": "2020-09-19T18:07:18Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "diffHunk": "@@ -459,6 +470,32 @@ private void checkTag(DetailAST ast, List<JavadocTag> tags, String tagName,\n         }\n     }\n \n+    /**\n+     * Verifies that a record definition has the specified param tag for\n+     * the specified record component name.\n+     *\n+     * @param ast           the AST node for the record definition.\n+     * @param tags          tags from the Javadoc comment for the record definition.\n+     * @param recordComponentName the name of the type parameter\n+     */\n+    private void checkComponentParamTag(final DetailAST ast,\n+                                        final List<JavadocTag> tags,\n+                                        final String recordComponentName) {\n+        boolean found = false;\n+        for (int i = tags.size() - 1; i >= 0; i--) {", "originalCommit": "8848a63038942f5b8ceb77cfdf4a520c212ef27a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY2OTU4Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491669587", "bodyText": "this comes from 9ce0ceb\nIn 2004, this was an optimization. Now for the JIT compiler there is no difference between\nfor (int i = 0; i < tags.size(); i++)\nand\nfor (int i = tags.size() - 1; i >= 0; i--)\nand even\nfor (final JavadocTag tag : tags)", "author": "pbludov", "createdAt": "2020-09-20T08:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3ODg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5MjQ0Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491692442", "bodyText": "@nmancus1 , lets make code more readable, please use \"foreach\".\nor use some java8 streams fancy syntax.", "author": "romani", "createdAt": "2020-09-20T13:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3ODg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDgyNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491704825", "bodyText": "Fancy syntax added.", "author": "nmancus1", "createdAt": "2020-09-20T15:55:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3ODg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "1e6f7d946237990ed94dfa35df726b86c0af5dab", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\nindex 38de71dac..c1b7b28d7 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n\n@@ -474,23 +474,20 @@ public class JavadocTypeCheck\n      * Verifies that a record definition has the specified param tag for\n      * the specified record component name.\n      *\n-     * @param ast           the AST node for the record definition.\n-     * @param tags          tags from the Javadoc comment for the record definition.\n+     * @param ast the AST node for the record definition.\n+     * @param tags tags from the Javadoc comment for the record definition.\n      * @param recordComponentName the name of the type parameter\n      */\n-    private void checkComponentParamTag(final DetailAST ast,\n-                                        final List<JavadocTag> tags,\n-                                        final String recordComponentName) {\n-        boolean found = false;\n-        for (int i = tags.size() - 1; i >= 0; i--) {\n-            final JavadocTag tag = tags.get(i);\n-            if (tag.isParamTag()\n-                && tag.getFirstArg().indexOf(recordComponentName) == 0) {\n-                found = true;\n-                break;\n-            }\n-        }\n-        if (!found) {\n+    private void checkComponentParamTag(DetailAST ast,\n+                                        List<JavadocTag> tags,\n+                                        String recordComponentName) {\n+        final Optional<JavadocTag> found = tags\n+            .stream()\n+            .filter(JavadocTag::isParamTag)\n+            .filter(tag -> tag.getFirstArg().indexOf(recordComponentName) == 0)\n+            .findAny();\n+\n+        if (!found.isPresent()) {\n             log(ast, MSG_MISSING_TAG, JavadocTagInfo.PARAM.getText()\n                 + SPACE + recordComponentName);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3OTEwOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491479109", "bodyText": "nit: might remove the extra spacing for these two params, assuming that's the convention in the rest of the code", "author": "esilkensen", "createdAt": "2020-09-19T18:09:57Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "diffHunk": "@@ -459,6 +470,32 @@ private void checkTag(DetailAST ast, List<JavadocTag> tags, String tagName,\n         }\n     }\n \n+    /**\n+     * Verifies that a record definition has the specified param tag for\n+     * the specified record component name.\n+     *\n+     * @param ast           the AST node for the record definition.", "originalCommit": "8848a63038942f5b8ceb77cfdf4a520c212ef27a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5Mjg1MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491692851", "bodyText": "I do not remember we discussed this.\nsingle space definitely make it harder to read it as code(in html it is not a problem as extra formatting is applied).\nI am not ready to discuss what is best separator length, we will get it empirically eventually. Ones new Check appear on this we will decide on convention.\n\"Good\" example:\n\n  \n    \n      checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n    \n    \n         Line 438\n      in\n      797642a\n    \n    \n    \n    \n\n        \n          \n                * @param tags tags from the Javadoc comment for the type definition.", "author": "romani", "createdAt": "2020-09-20T13:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3OTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDg0OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491704849", "bodyText": "Fixed to reflect good example.", "author": "nmancus1", "createdAt": "2020-09-20T15:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3OTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM0NjY1MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r494346650", "bodyText": "That was BAD example, completely hard to read by humans, single space separator is BAD or there should be some rules on how description is starting.\nBut we will come back to this a bit later, special Check is required to be created for this.", "author": "romani", "createdAt": "2020-09-24T14:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3OTEwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e6f7d946237990ed94dfa35df726b86c0af5dab", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\nindex 38de71dac..c1b7b28d7 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n\n@@ -474,23 +474,20 @@ public class JavadocTypeCheck\n      * Verifies that a record definition has the specified param tag for\n      * the specified record component name.\n      *\n-     * @param ast           the AST node for the record definition.\n-     * @param tags          tags from the Javadoc comment for the record definition.\n+     * @param ast the AST node for the record definition.\n+     * @param tags tags from the Javadoc comment for the record definition.\n      * @param recordComponentName the name of the type parameter\n      */\n-    private void checkComponentParamTag(final DetailAST ast,\n-                                        final List<JavadocTag> tags,\n-                                        final String recordComponentName) {\n-        boolean found = false;\n-        for (int i = tags.size() - 1; i >= 0; i--) {\n-            final JavadocTag tag = tags.get(i);\n-            if (tag.isParamTag()\n-                && tag.getFirstArg().indexOf(recordComponentName) == 0) {\n-                found = true;\n-                break;\n-            }\n-        }\n-        if (!found) {\n+    private void checkComponentParamTag(DetailAST ast,\n+                                        List<JavadocTag> tags,\n+                                        String recordComponentName) {\n+        final Optional<JavadocTag> found = tags\n+            .stream()\n+            .filter(JavadocTag::isParamTag)\n+            .filter(tag -> tag.getFirstArg().indexOf(recordComponentName) == 0)\n+            .findAny();\n+\n+        if (!found.isPresent()) {\n             log(ast, MSG_MISSING_TAG, JavadocTagInfo.PARAM.getText()\n                 + SPACE + recordComponentName);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5MzU4NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491693585", "bodyText": "please remove \"final\" modifiers, we use check to control it.\nusage of it make code too verbose, as ALL parameters must be non modifiable, it is too much verbosity for code.\nThis Check lacking our attention for many year as it waiting for complete rewriting to use javadoc ast.", "author": "romani", "createdAt": "2020-09-20T13:50:47Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "diffHunk": "@@ -459,6 +470,32 @@ private void checkTag(DetailAST ast, List<JavadocTag> tags, String tagName,\n         }\n     }\n \n+    /**\n+     * Verifies that a record definition has the specified param tag for\n+     * the specified record component name.\n+     *\n+     * @param ast           the AST node for the record definition.\n+     * @param tags          tags from the Javadoc comment for the record definition.\n+     * @param recordComponentName the name of the type parameter\n+     */\n+    private void checkComponentParamTag(final DetailAST ast,\n+                                        final List<JavadocTag> tags,", "originalCommit": "8848a63038942f5b8ceb77cfdf4a520c212ef27a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDg5Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491704893", "bodyText": "Changed new code, and refactored old in separate commit 5203f2c", "author": "nmancus1", "createdAt": "2020-09-20T15:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5MzU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e6f7d946237990ed94dfa35df726b86c0af5dab", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\nindex 38de71dac..c1b7b28d7 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n\n@@ -474,23 +474,20 @@ public class JavadocTypeCheck\n      * Verifies that a record definition has the specified param tag for\n      * the specified record component name.\n      *\n-     * @param ast           the AST node for the record definition.\n-     * @param tags          tags from the Javadoc comment for the record definition.\n+     * @param ast the AST node for the record definition.\n+     * @param tags tags from the Javadoc comment for the record definition.\n      * @param recordComponentName the name of the type parameter\n      */\n-    private void checkComponentParamTag(final DetailAST ast,\n-                                        final List<JavadocTag> tags,\n-                                        final String recordComponentName) {\n-        boolean found = false;\n-        for (int i = tags.size() - 1; i >= 0; i--) {\n-            final JavadocTag tag = tags.get(i);\n-            if (tag.isParamTag()\n-                && tag.getFirstArg().indexOf(recordComponentName) == 0) {\n-                found = true;\n-                break;\n-            }\n-        }\n-        if (!found) {\n+    private void checkComponentParamTag(DetailAST ast,\n+                                        List<JavadocTag> tags,\n+                                        String recordComponentName) {\n+        final Optional<JavadocTag> found = tags\n+            .stream()\n+            .filter(JavadocTag::isParamTag)\n+            .filter(tag -> tag.getFirstArg().indexOf(recordComponentName) == 0)\n+            .findAny();\n+\n+        if (!found.isPresent()) {\n             log(ast, MSG_MISSING_TAG, JavadocTagInfo.PARAM.getText()\n                 + SPACE + recordComponentName);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5MzgzNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491693836", "bodyText": "remove \"final\"\nplease dothis in other new code your do.", "author": "romani", "createdAt": "2020-09-20T13:53:44Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "diffHunk": "@@ -528,4 +570,24 @@ private static String extractTypeParamNameFromTag(JavadocTag tag) {\n         return typeParamName;\n     }\n \n+    /**\n+     * Collects the record components in a record definition.\n+     *\n+     * @param node the possible record definition ast.\n+     * @return the list of record components in this record definition.\n+     */\n+    private static List<String> getRecordComponentNames(final DetailAST node) {", "originalCommit": "8848a63038942f5b8ceb77cfdf4a520c212ef27a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDkxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491704915", "bodyText": "Changed new code, and refactored old in separate commit 5203f2c", "author": "nmancus1", "createdAt": "2020-09-20T15:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5MzgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "1e6f7d946237990ed94dfa35df726b86c0af5dab", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\nindex 38de71dac..c1b7b28d7 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java\n\n@@ -576,7 +573,7 @@ public class JavadocTypeCheck\n      * @param node the possible record definition ast.\n      * @return the list of record components in this record definition.\n      */\n-    private static List<String> getRecordComponentNames(final DetailAST node) {\n+    private static List<String> getRecordComponentNames(DetailAST node) {\n         final DetailAST components = node.findFirstToken(TokenTypes.RECORD_COMPONENTS);\n         final List<String> componentList = new ArrayList<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDAzMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491694031", "bodyText": "please put \"// ok\" comment in this file, it is convenient.", "author": "romani", "createdAt": "2020-09-20T13:55:38Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/javadoc/javadoctype/InputJavadocTypeRecordComponents2.java", "diffHunk": "@@ -0,0 +1,74 @@\n+//non-compiled with javac: Compilable with Java14\n+package com.puppycrawl.tools.checkstyle.checks.javadoc.javadoctype;\n+\n+/* Config:\n+ *\n+ * scope = private\n+ * allowMissingParamTags = false\n+ * allowUnknownTags = false\n+ */\n+\n+import java.util.HashMap;\n+import java.util.List;\n+\n+/**\n+ * My new record.\n+ *\n+ * @param value Sponge Bob rules the world!\n+ */\n+public record InputJavadocTypeRecordComponents2(String value) {", "originalCommit": "8848a63038942f5b8ceb77cfdf4a520c212ef27a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwNDkzOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r491704939", "bodyText": "Done.", "author": "nmancus1", "createdAt": "2020-09-20T15:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY5NDAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e6f7d946237990ed94dfa35df726b86c0af5dab", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/javadoc/javadoctype/InputJavadocTypeRecordComponents2.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/javadoc/javadoctype/InputJavadocTypeRecordComponents2.java\nindex a6f586e7e..1ec7b636f 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/javadoc/javadoctype/InputJavadocTypeRecordComponents2.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/checks/javadoc/javadoctype/InputJavadocTypeRecordComponents2.java\n\n@@ -16,7 +16,7 @@ import java.util.List;\n  *\n  * @param value Sponge Bob rules the world!\n  */\n-public record InputJavadocTypeRecordComponents2(String value) {\n+public record InputJavadocTypeRecordComponents2(String value) { // ok\n }\n \n /**\n"}}, {"oid": "1e6f7d946237990ed94dfa35df726b86c0af5dab", "url": "https://github.com/checkstyle/checkstyle/commit/1e6f7d946237990ed94dfa35df726b86c0af5dab", "message": "Issue #8808: JavadocTypeCheck: false positive with JavaDoc @param tags for Records", "committedDate": "2020-09-20T15:52:26Z", "type": "forcePushed"}, {"oid": "2df9fe572498190e9c37c01ed95d3105af2abe0b", "url": "https://github.com/checkstyle/checkstyle/commit/2df9fe572498190e9c37c01ed95d3105af2abe0b", "message": "Issue #8808: JavadocTypeCheck: false positive with JavaDoc @param tags for Records", "committedDate": "2020-09-21T12:37:59Z", "type": "forcePushed"}, {"oid": "cab8853851d7ccc9eb261d2a05e885bfc1659f13", "url": "https://github.com/checkstyle/checkstyle/commit/cab8853851d7ccc9eb261d2a05e885bfc1659f13", "message": "Issue #8808: JavadocTypeCheck: false positive with JavaDoc @param tags for Records", "committedDate": "2020-09-24T14:06:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1Njg5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r494356898", "bodyText": "please move this commit to functional\nat build on it result in\nJavadocTypeCheckTest.testAllowMissingTypeParameters:314->AbstractModuleTestSupport.verify:229->AbstractModuleTestSupport.verify:267->AbstractModuleTestSupport.verify:304 error message 1 expected:<...sed @param tag for '[x]'.> but was:<...sed @param tag for '[<x>]'.>\nAll commits are atomic change that are build-able and even can be released. code should be build and function properly on each commit.", "author": "romani", "createdAt": "2020-09-24T14:17:24Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "diffHunk": "@@ -309,7 +309,7 @@ public void testAllowMissingTypeParameters() throws Exception {\n         final String[] expected = {\n             \"7:4: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"<D123>\"),\n             \"44:8: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"<C>\"),\n-            \"60:5: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"<x>\"),\n+            \"60:5: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"x\"),", "originalCommit": "2805ff8ce604999c525161edbbfd5a36fafc1d29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3MzExNw==", "url": "https://github.com/checkstyle/checkstyle/pull/8836#discussion_r494373117", "bodyText": "Done.  I had forgotten about that, apologies.", "author": "nmancus1", "createdAt": "2020-09-24T14:38:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1Njg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "600697b57935847c286c8d103e216a9340de0c38", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java\nindex 64b99a666..b275e96d2 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java\n\n@@ -309,7 +309,7 @@ public class JavadocTypeCheckTest extends AbstractModuleTestSupport {\n         final String[] expected = {\n             \"7:4: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"<D123>\"),\n             \"44:8: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"<C>\"),\n-            \"60:5: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"x\"),\n+            \"60:5: \" + getCheckMessage(MSG_UNUSED_TAG, \"@param\", \"<x>\"),\n         };\n         verify(checkConfig, getPath(\"InputJavadocTypeTypeParamsTags.java\"), expected);\n     }\n"}}, {"oid": "600697b57935847c286c8d103e216a9340de0c38", "url": "https://github.com/checkstyle/checkstyle/commit/600697b57935847c286c8d103e216a9340de0c38", "message": "minor: fix indentation(#8808)", "committedDate": "2020-09-24T14:35:42Z", "type": "commit"}, {"oid": "2ea9e72bc7851c309db7b823045c9a3bc478c005", "url": "https://github.com/checkstyle/checkstyle/commit/2ea9e72bc7851c309db7b823045c9a3bc478c005", "message": "minor: remove unnecessary usage of final modifier in parameters(#8808)", "committedDate": "2020-09-24T14:36:15Z", "type": "commit"}, {"oid": "52760c4704a4d0c2027d102f27e7933e0005fb93", "url": "https://github.com/checkstyle/checkstyle/commit/52760c4704a4d0c2027d102f27e7933e0005fb93", "message": "minor: refactor loops for readability(#8808)", "committedDate": "2020-09-24T14:36:15Z", "type": "commit"}, {"oid": "7b8a3869baa5109b12eb8212d35ac85482d7a1ae", "url": "https://github.com/checkstyle/checkstyle/commit/7b8a3869baa5109b12eb8212d35ac85482d7a1ae", "message": "Issue #8808: JavadocTypeCheck: false positive with JavaDoc @param tags for Records", "committedDate": "2020-09-24T14:36:16Z", "type": "commit"}, {"oid": "7b8a3869baa5109b12eb8212d35ac85482d7a1ae", "url": "https://github.com/checkstyle/checkstyle/commit/7b8a3869baa5109b12eb8212d35ac85482d7a1ae", "message": "Issue #8808: JavadocTypeCheck: false positive with JavaDoc @param tags for Records", "committedDate": "2020-09-24T14:36:16Z", "type": "forcePushed"}]}