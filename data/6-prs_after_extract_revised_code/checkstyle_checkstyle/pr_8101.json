{"pr_number": 8101, "pr_title": "Issue #7724: Update AbstractChecks to log DetailAST - AvoidEscapedUni\u2026", "pr_createdAt": "2020-04-15T02:03:20Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8101", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MjY2Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408652667", "bodyText": "why warn comment is before code line?", "author": "strkkk", "createdAt": "2020-04-15T07:59:18Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package org.checkstyle.suppressionxpathfilter.avoidescapedunicodecharacters;\n+\n+public class SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault {\n+    /* warn */private String unitAbbrev2 = \"\\u03bcs\";", "originalCommit": "729c7a3c864531ccd19a9ae11d46a93fa9f60a80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY4OTMzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408689334", "bodyText": "No reason, I'll move it to the end.", "author": "Gaurav-Punjabi", "createdAt": "2020-04-15T09:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MjY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NTkwNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408785906", "bodyText": "Done", "author": "Gaurav-Punjabi", "createdAt": "2020-04-15T11:56:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MjY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\nindex 1c5d59232..44f22770d 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\n\n@@ -1,5 +1,5 @@\n package org.checkstyle.suppressionxpathfilter.avoidescapedunicodecharacters;\n \n public class SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault {\n-    /* warn */private String unitAbbrev2 = \"\\u03bcs\";\n+    private String unitAbbrev2 = \"\\u03bcs\"; /* warn */\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MzMzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408653334", "bodyText": "please add here escape that is ignored by check (with property allowEscapesForControlCharacters)", "author": "strkkk", "createdAt": "2020-04-15T08:00:25Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package org.checkstyle.suppressionxpathfilter.avoidescapedunicodecharacters;\n+\n+public class SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo {\n+    private String unitAbbrev9 = \"\\u03bcs\"; /* warn */", "originalCommit": "729c7a3c864531ccd19a9ae11d46a93fa9f60a80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY4OTM5Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408689396", "bodyText": "Okay", "author": "Gaurav-Punjabi", "createdAt": "2020-04-15T09:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MzMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NTg5Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408785892", "bodyText": "Done", "author": "Gaurav-Punjabi", "createdAt": "2020-04-15T11:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MzMzNA=="}], "type": "inlineReview", "revised_code": {"commit": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo.java\nindex 799a0c064..9a234ff05 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo.java\n\n@@ -2,4 +2,5 @@ package org.checkstyle.suppressionxpathfilter.avoidescapedunicodecharacters;\n \n public class SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo {\n     private String unitAbbrev9 = \"\\u03bcs\"; /* warn */\n+    private String nonPrintableCharacter = \"\\u0008\";\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NDE1MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408654150", "bodyText": "there are 4 properties + default config, but only 2 tests here", "author": "strkkk", "createdAt": "2020-04-15T08:01:50Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import static com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.MSG_KEY;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck;\n+\n+public class XpathRegressionAvoidEscapedUnicodeCharactersTest extends AbstractXpathTestSupport {\n+    private final String checkName = AvoidEscapedUnicodeCharactersCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(AvoidEscapedUnicodeCharactersCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"4:44: \" + getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+            \"/CLASS_DEF[./IDENT\"\n+                + \"[@text='SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='unitAbbrev2']]\"\n+                + \"/ASSIGN/EXPR[./STRING_LITERAL[@text='\\\\u03bcs']]\",\n+            \"/CLASS_DEF[./IDENT\"\n+                + \"[@text='SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='unitAbbrev2']]\"\n+                + \"/ASSIGN/EXPR/STRING_LITERAL[@text='\\\\u03bcs']\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(AvoidEscapedUnicodeCharactersCheck.class);\n+        moduleConfig.addAttribute(\"allowEscapesForControlCharacters\", \"true\");\n+\n+        final String[] expectedViolation = {\n+            \"4:34: \" + getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+            \"/CLASS_DEF[.\"\n+                + \"/IDENT[@text='SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='unitAbbrev9']]\"\n+                + \"/ASSIGN/EXPR[./STRING_LITERAL[@text='\\\\u03bcs']]\",\n+            \"/CLASS_DEF[.\"\n+                + \"/IDENT[@text='SuppressionXpathRegressionAvoidEscapedUnicodeCharactersTwo']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='unitAbbrev9']]\"\n+                + \"/ASSIGN/EXPR/STRING_LITERAL[@text='\\\\u03bcs']\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }", "originalCommit": "729c7a3c864531ccd19a9ae11d46a93fa9f60a80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY4OTU2OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408689568", "bodyText": "Okay, I'll add more test cases.", "author": "Gaurav-Punjabi", "createdAt": "2020-04-15T09:01:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NDE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc4NTgyOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r408785828", "bodyText": "Done.\nJust one thing, for the test with allowByTailComment, I had to write /* warn */ at the start as the check was considering it as a tail comment and wasn't getting violated.\nAlso, I had one doubt. In the documentation of AvoidEscapedUnicodeCharacters, I think it should be tail comment instead of trail comment as shown in the code below.\n <p>\n * Example of using escapes with trail comment:\n * </p>\n * <pre>\n * String unitAbbrev = \"&#92;u03bcs\"; // Greek letter mu, \"s\"\n * </pre>\n * <p>An example of how to configure the check to allow using escapes\n * if trail comment is present:\n * </p>", "author": "Gaurav-Punjabi", "createdAt": "2020-04-15T11:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NDE1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyODQ5OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409328498", "bodyText": "it is fine", "author": "strkkk", "createdAt": "2020-04-16T07:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NDE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\nindex ada3ac063..310151c36 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\n\n@@ -41,13 +41,13 @@ public class XpathRegressionAvoidEscapedUnicodeCharactersTest extends AbstractXp\n     @Test\n     public void testOne() throws Exception {\n         final File fileToProcess = new File(getPath(\n-                \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\"));\n+            \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\"));\n \n         final DefaultConfiguration moduleConfig =\n                 createModuleConfig(AvoidEscapedUnicodeCharactersCheck.class);\n \n         final String[] expectedViolation = {\n-            \"4:44: \" + getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, MSG_KEY),\n+            \"4:34: \" + getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, MSG_KEY),\n         };\n \n         final List<String> expectedXpathQueries = Arrays.asList(\n"}}, {"oid": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "url": "https://github.com/checkstyle/checkstyle/commit/cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "message": "Issue #7724: Update AbstractChecks to log DetailAST - AvoidEscapedUnicodeCharacters", "committedDate": "2020-04-15T11:56:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyOTExMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409329110", "bodyText": "please make naming consistent and make in testDefault", "author": "strkkk", "createdAt": "2020-04-16T07:09:38Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import static com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.MSG_KEY;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck;\n+\n+public class XpathRegressionAvoidEscapedUnicodeCharactersTest extends AbstractXpathTestSupport {\n+    private final String checkName = AvoidEscapedUnicodeCharactersCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {", "originalCommit": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ3ODQwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409478405", "bodyText": "Done", "author": "Gaurav-Punjabi", "createdAt": "2020-04-16T11:19:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyOTExMA=="}], "type": "inlineReview", "revised_code": {"commit": "317dae18171bd1a3507952db66e91e3e23fe0d88", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\nindex 310151c36..f04b9c7b7 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\n\n@@ -39,7 +39,7 @@ public class XpathRegressionAvoidEscapedUnicodeCharactersTest extends AbstractXp\n     }\n \n     @Test\n-    public void testOne() throws Exception {\n+    public void testDefault() throws Exception {\n         final File fileToProcess = new File(getPath(\n             \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\"));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyOTMxNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409329315", "bodyText": "here too, other tests have property name in it", "author": "strkkk", "createdAt": "2020-04-16T07:10:00Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import static com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.MSG_KEY;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck;\n+\n+public class XpathRegressionAvoidEscapedUnicodeCharactersTest extends AbstractXpathTestSupport {\n+    private final String checkName = AvoidEscapedUnicodeCharactersCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+            \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(AvoidEscapedUnicodeCharactersCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"4:34: \" + getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, MSG_KEY),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+            \"/CLASS_DEF[./IDENT\"\n+                + \"[@text='SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='unitAbbrev2']]\"\n+                + \"/ASSIGN/EXPR[./STRING_LITERAL[@text='\\\\u03bcs']]\",\n+            \"/CLASS_DEF[./IDENT\"\n+                + \"[@text='SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault']]\"\n+                + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='unitAbbrev2']]\"\n+                + \"/ASSIGN/EXPR/STRING_LITERAL[@text='\\\\u03bcs']\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {", "originalCommit": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ3ODQ0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409478448", "bodyText": "Done", "author": "Gaurav-Punjabi", "createdAt": "2020-04-16T11:19:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyOTMxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "317dae18171bd1a3507952db66e91e3e23fe0d88", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\nindex 310151c36..f04b9c7b7 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionAvoidEscapedUnicodeCharactersTest.java\n\n@@ -39,7 +39,7 @@ public class XpathRegressionAvoidEscapedUnicodeCharactersTest extends AbstractXp\n     }\n \n     @Test\n-    public void testOne() throws Exception {\n+    public void testDefault() throws Exception {\n         final File fileToProcess = new File(getPath(\n             \"SuppressionXpathRegressionAvoidEscapedUnicodeCharactersDefault.java\"));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyOTY0Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409329642", "bodyText": "again comment is before", "author": "strkkk", "createdAt": "2020-04-16T07:10:37Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.checkstyle.suppressionxpathfilter.avoidescapedunicodecharacters;\n+\n+public class SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped {\n+    /* warn */ private String unitAbbrev9 = \"\\u03bcs\";", "originalCommit": "cbe43cfea4eded528266c6dd6cfaf35e04dcafb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ3ODQ4OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409478488", "bodyText": "Done", "author": "Gaurav-Punjabi", "createdAt": "2020-04-16T11:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyOTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "317dae18171bd1a3507952db66e91e3e23fe0d88", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped.java\nindex f44c28e2d..b3ba68b1a 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/avoidescapedunicodecharacters/SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped.java\n\n@@ -1,6 +1,6 @@\n package org.checkstyle.suppressionxpathfilter.avoidescapedunicodecharacters;\n \n public class SuppressionXpathRegressionAvoidEscapedUnicodeCharactersAllEscaped {\n-    /* warn */ private String unitAbbrev9 = \"\\u03bcs\";\n+    private String unitAbbrev9 = \"\\u03bcs\"; /* warn */\n     String allCharactersEscaped = \"\\u03bc\\u03bc\";\n }\n"}}, {"oid": "317dae18171bd1a3507952db66e91e3e23fe0d88", "url": "https://github.com/checkstyle/checkstyle/commit/317dae18171bd1a3507952db66e91e3e23fe0d88", "message": "Issue #7724: Update AbstractChecks to log DetailAST - AvoidEscapedUnicodeCharacters", "committedDate": "2020-04-16T11:18:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4MzQwNw==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409483407", "bodyText": "what is this?", "author": "strkkk", "createdAt": "2020-04-16T11:28:46Z", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeMemberModifiers.java", "diffHunk": "@@ -3,7 +3,7 @@\n import java.util.Hashtable;\n //configuration: default\n public class InputIllegalTypeMemberModifiers {\n-    private AbstractClass a = null; //WARNING\n+    private com.puppycrawl.tools.checkstyle.checks.coding.illegaltype.InputIllegalTypeMemberModifiers.AbstractClass a = null; //WARNING", "originalCommit": "317dae18171bd1a3507952db66e91e3e23fe0d88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5MTM5MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409491390", "bodyText": "I'll remove this. This shouldn't be here. It is a change is from my other issue. IntelliJ must have added it while smart checkout.", "author": "Gaurav-Punjabi", "createdAt": "2020-04-16T11:44:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4MzQwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ5MzQzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8101#discussion_r409493434", "bodyText": "Done.", "author": "Gaurav-Punjabi", "createdAt": "2020-04-16T11:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4MzQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "ae87d7f25a6016e01b471acd327308c3bb7ae4fa", "chunk": "diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeMemberModifiers.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeMemberModifiers.java\nindex e3b856a66..d2eca9ee3 100644\n--- a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeMemberModifiers.java\n+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeMemberModifiers.java\n\n@@ -3,7 +3,7 @@ import java.util.TreeSet;\n import java.util.Hashtable;\n //configuration: default\n public class InputIllegalTypeMemberModifiers {\n-    private com.puppycrawl.tools.checkstyle.checks.coding.illegaltype.InputIllegalTypeMemberModifiers.AbstractClass a = null; //WARNING\n+    private AbstractClass a = null; //WARNING\n     private NotAnAbstractClass b = null; /*another comment*/\n \n     private com.puppycrawl.tools.checkstyle.checks.coding.illegaltype.InputIllegalTypeMemberModifiers.AbstractClass c = null; //WARNING\n"}}, {"oid": "ae87d7f25a6016e01b471acd327308c3bb7ae4fa", "url": "https://github.com/checkstyle/checkstyle/commit/ae87d7f25a6016e01b471acd327308c3bb7ae4fa", "message": "Issue #7724: Update AbstractChecks to log DetailAST - AvoidEscapedUnicodeCharacters", "committedDate": "2020-04-16T11:47:29Z", "type": "commit"}, {"oid": "ae87d7f25a6016e01b471acd327308c3bb7ae4fa", "url": "https://github.com/checkstyle/checkstyle/commit/ae87d7f25a6016e01b471acd327308c3bb7ae4fa", "message": "Issue #7724: Update AbstractChecks to log DetailAST - AvoidEscapedUnicodeCharacters", "committedDate": "2020-04-16T11:47:29Z", "type": "forcePushed"}]}