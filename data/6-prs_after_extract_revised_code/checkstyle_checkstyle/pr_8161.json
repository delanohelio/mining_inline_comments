{"pr_number": 8161, "pr_title": "Issue #8132: Add NoCodeInFileCheck", "pr_createdAt": "2020-04-21T22:53:01Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8161", "timeline": [{"oid": "6094af1a50cb9ade0ecc784eba1ea7ae67da11b4", "url": "https://github.com/checkstyle/checkstyle/commit/6094af1a50cb9ade0ecc784eba1ea7ae67da11b4", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-21T22:59:04Z", "type": "forcePushed"}, {"oid": "b7037050a7f1adf0dec69beae8b2dc58e8a564b4", "url": "https://github.com/checkstyle/checkstyle/commit/b7037050a7f1adf0dec69beae8b2dc58e8a564b4", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-22T09:14:45Z", "type": "forcePushed"}, {"oid": "2a0d06ccf9a715c5d3993b3062b5305bfc238df7", "url": "https://github.com/checkstyle/checkstyle/commit/2a0d06ccf9a715c5d3993b3062b5305bfc238df7", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-22T11:07:45Z", "type": "forcePushed"}, {"oid": "1a000eea6f3eb2e842a045e44e9f0a9673c505d4", "url": "https://github.com/checkstyle/checkstyle/commit/1a000eea6f3eb2e842a045e44e9f0a9673c505d4", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-23T13:47:45Z", "type": "forcePushed"}, {"oid": "4c33c0b114c66444326bde30f82943e657a1b51e", "url": "https://github.com/checkstyle/checkstyle/commit/4c33c0b114c66444326bde30f82943e657a1b51e", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-24T15:52:19Z", "type": "forcePushed"}, {"oid": "65cbce63f8f27e04190a72a1accfd1ad426785f3", "url": "https://github.com/checkstyle/checkstyle/commit/65cbce63f8f27e04190a72a1accfd1ad426785f3", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-29T22:23:18Z", "type": "forcePushed"}, {"oid": "71f84374d33cdfda85d356ab360a6982ac27318d", "url": "https://github.com/checkstyle/checkstyle/commit/71f84374d33cdfda85d356ab360a6982ac27318d", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-04-29T23:02:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NTI1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423065253", "bodyText": "above lines should be in description, here should be examples", "author": "strkkk", "createdAt": "2020-05-11T14:07:02Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,81 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether files contain code.\n+ * </p>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"NoCodeInFile\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <pre>\n+ * Files which are considered to have no code:\n+ * 1. File with no text\n+ * 2. File with single line comment(s).\n+ * 3. File with a multi line comment(s).", "originalCommit": "71f84374d33cdfda85d356ab360a6982ac27318d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg3MTA3Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423871073", "bodyText": "Done.", "author": "gaurabdg", "createdAt": "2020-05-12T16:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NTI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex 19e023e82..ad6a3bffd 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -26,7 +26,8 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n \n /**\n  * <p>\n- * Checks whether files contain code.\n+ * Checks whether file contains code. Files which are considered to have no code: 1. File with no\n+ * text 2. File with single line comment(s). 3. File with a multi line comment(s).\n  * </p>\n  * <p>\n  * To configure the check:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NjYzMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423066632", "bodyText": "can be added one more test with both single and multiline comments", "author": "strkkk", "createdAt": "2020-05-11T14:09:02Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import static com.puppycrawl.tools.checkstyle.checks.NoCodeInFileCheck.MSG_KEY_NO_CODE;\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.AbstractModuleTestSupport;\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+public class NoCodeInFileCheckTest extends AbstractModuleTestSupport {\n+\n+    @Override\n+    protected String getPackageLocation() {\n+        return \"com/puppycrawl/tools/checkstyle/checks/nocodeinfile\";\n+    }\n+\n+    @Test\n+    public void testGetRequiredTokens() {\n+        final NoCodeInFileCheck checkObj = new NoCodeInFileCheck();\n+        assertArrayEquals(CommonUtil.EMPTY_INT_ARRAY, checkObj.getRequiredTokens(),\n+                \"Required tokens array is not empty\");\n+    }\n+\n+    @Test\n+    public void testGetAcceptableTokens() {\n+        final NoCodeInFileCheck checkObj = new NoCodeInFileCheck();\n+        assertArrayEquals(CommonUtil.EMPTY_INT_ARRAY, checkObj.getAcceptableTokens(),\n+                \"Acceptable tokens array is not empty\");\n+    }\n+\n+    @Test\n+    public void testBlank() throws Exception {\n+        final DefaultConfiguration checkConfig = createModuleConfig(NoCodeInFileCheck.class);\n+        final String[] expected = {\n+            \"1: \" + getCheckMessage(MSG_KEY_NO_CODE),\n+        };\n+        verify(checkConfig, getPath(\"InputNoCodeInFile1.java\"), expected);\n+    }\n+\n+    @Test\n+    public void testSingleLineComment() throws Exception {\n+        final DefaultConfiguration checkConfig = createModuleConfig(NoCodeInFileCheck.class);\n+        final String[] expected = {\n+            \"1: \" + getCheckMessage(MSG_KEY_NO_CODE),\n+        };\n+        verify(checkConfig, getPath(\"InputNoCodeInFile2.java\"), expected);\n+    }\n+\n+    @Test\n+    public void testMultiLineComment() throws Exception {\n+        final DefaultConfiguration checkConfig = createModuleConfig(NoCodeInFileCheck.class);\n+        final String[] expected = {\n+            \"1: \" + getCheckMessage(MSG_KEY_NO_CODE),\n+        };\n+        verify(checkConfig, getPath(\"InputNoCodeInFile3.java\"), expected);\n+    }\n+\n+    @Test\n+    public void testFileContainingCode() throws Exception {\n+        final DefaultConfiguration checkConfig = createModuleConfig(NoCodeInFileCheck.class);\n+        verify(checkConfig, getPath(\"InputNoCodeInFile4.java\"),\n+                CommonUtil.EMPTY_STRING_ARRAY);\n+    }", "originalCommit": "71f84374d33cdfda85d356ab360a6982ac27318d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwOTc2Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423809767", "bodyText": "Done.", "author": "gaurabdg", "createdAt": "2020-05-12T15:06:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NjYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java\nindex 5f4b15954..c348dce92 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java\n\n@@ -82,4 +82,13 @@ public class NoCodeInFileCheckTest extends AbstractModuleTestSupport {\n         verify(checkConfig, getPath(\"InputNoCodeInFile4.java\"),\n                 CommonUtil.EMPTY_STRING_ARRAY);\n     }\n+\n+    @Test\n+    public void testBothSingleLineAndMultiLineComment() throws Exception {\n+        final DefaultConfiguration checkConfig = createModuleConfig(NoCodeInFileCheck.class);\n+        final String[] expected = {\n+            \"1: \" + getCheckMessage(MSG_KEY_NO_CODE),\n+        };\n+        verify(checkConfig, getPath(\"InputNoCodeInFile5.java\"), expected);\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NzcwNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423067706", "bodyText": "it is better to extract these endings into some list and iterate over it, it will be more readable", "author": "strkkk", "createdAt": "2020-05-11T14:10:31Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java", "diffHunk": "@@ -510,7 +510,10 @@ else if (file.getName().endsWith(\".java\")\n                     && !file.getName().endsWith(\"InputGrammar.java\")\n                     // comment only files, no root\n                     && !file.getName().endsWith(\"InputPackageDeclarationWithCommentOnly.java\")\n-                    && !file.getName().endsWith(\"InputSingleSpaceSeparatorEmpty.java\")) {\n+                    && !file.getName().endsWith(\"InputSingleSpaceSeparatorEmpty.java\")\n+                    && !file.getName().endsWith(\"InputNoCodeInFile1.java\")\n+                    && !file.getName().endsWith(\"InputNoCodeInFile2.java\")\n+                    && !file.getName().endsWith(\"InputNoCodeInFile3.java\")) {", "originalCommit": "71f84374d33cdfda85d356ab360a6982ac27318d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwNjk3OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423806979", "bodyText": "Done.", "author": "gaurabdg", "createdAt": "2020-05-12T15:03:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2NzcwNg=="}], "type": "inlineReview", "revised_code": {"commit": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java\nindex d42509f95..3143c5036 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/DetailAstImplTest.java\n\n@@ -506,14 +523,7 @@ public class DetailAstImplTest extends AbstractModuleTestSupport {\n                 result.addAll(getAllFiles(file));\n             }\n             else if (file.getName().endsWith(\".java\")\n-                    // fails with unexpected character\n-                    && !file.getName().endsWith(\"InputGrammar.java\")\n-                    // comment only files, no root\n-                    && !file.getName().endsWith(\"InputPackageDeclarationWithCommentOnly.java\")\n-                    && !file.getName().endsWith(\"InputSingleSpaceSeparatorEmpty.java\")\n-                    && !file.getName().endsWith(\"InputNoCodeInFile1.java\")\n-                    && !file.getName().endsWith(\"InputNoCodeInFile2.java\")\n-                    && !file.getName().endsWith(\"InputNoCodeInFile3.java\")) {\n+                    && !NO_ROOT_FILES.contains(file.getName())) {\n                 result.add(file);\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2ODQwOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423068409", "bodyText": "files contain may be file contains is more precise.", "author": "strkkk", "createdAt": "2020-05-11T14:11:35Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,81 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether files contain code.", "originalCommit": "71f84374d33cdfda85d356ab360a6982ac27318d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3ODcyOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423778729", "bodyText": "Done.", "author": "gaurabdg", "createdAt": "2020-05-12T14:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA2ODQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex 19e023e82..ad6a3bffd 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -26,7 +26,8 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n \n /**\n  * <p>\n- * Checks whether files contain code.\n+ * Checks whether file contains code. Files which are considered to have no code: 1. File with no\n+ * text 2. File with single line comment(s). 3. File with a multi line comment(s).\n  * </p>\n  * <p>\n  * To configure the check:\n"}}, {"oid": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "url": "https://github.com/checkstyle/checkstyle/commit/8945cd430e72c7505bf6d2aea6a3685272dcc758", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-12T16:30:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyODY0OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423928649", "bodyText": "please make list like <ul> and items in <li> tag", "author": "strkkk", "createdAt": "2020-05-12T18:00:19Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,81 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether file contains code. Files which are considered to have no code: 1. File with no\n+ * text 2. File with single line comment(s). 3. File with a multi line comment(s).", "originalCommit": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwOTA0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424009048", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-05-12T20:20:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyODY0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9e9bdb6bae14cc47a34183eecd4b3b48a6404dff", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex ad6a3bffd..d5d508bd2 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -26,8 +26,18 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n \n /**\n  * <p>\n- * Checks whether file contains code. Files which are considered to have no code: 1. File with no\n- * text 2. File with single line comment(s). 3. File with a multi line comment(s).\n+ * Checks whether file contains code. Files which are considered to have no code:\n+ * <ul>\n+ * <li>\n+ * File with no text\n+ * </li>\n+ * <li>\n+ * File with single line comment(s)\n+ * </li>\n+ * <li>\n+ * File with a multi line comment(s).\n+ * </li>\n+ * </ul>\n  * </p>\n  * <p>\n  * To configure the check:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkzMjQyMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r423932421", "bodyText": "Please change examples.\nMake it like\nContent of the file:\n... // violation", "author": "strkkk", "createdAt": "2020-05-12T18:06:28Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,81 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether file contains code. Files which are considered to have no code: 1. File with no\n+ * text 2. File with single line comment(s). 3. File with a multi line comment(s).\n+ * </p>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"NoCodeInFile\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p> Violations:\n+ * <pre>\n+ * </pre>\n+ * <pre>\n+ * // comment\n+ * </pre>", "originalCommit": "8945cd430e72c7505bf6d2aea6a3685272dcc758", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwOTA5NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424009094", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-05-12T20:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkzMjQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9e9bdb6bae14cc47a34183eecd4b3b48a6404dff", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex ad6a3bffd..d5d508bd2 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -26,8 +26,18 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n \n /**\n  * <p>\n- * Checks whether file contains code. Files which are considered to have no code: 1. File with no\n- * text 2. File with single line comment(s). 3. File with a multi line comment(s).\n+ * Checks whether file contains code. Files which are considered to have no code:\n+ * <ul>\n+ * <li>\n+ * File with no text\n+ * </li>\n+ * <li>\n+ * File with single line comment(s)\n+ * </li>\n+ * <li>\n+ * File with a multi line comment(s).\n+ * </li>\n+ * </ul>\n  * </p>\n  * <p>\n  * To configure the check:\n"}}, {"oid": "9e9bdb6bae14cc47a34183eecd4b3b48a6404dff", "url": "https://github.com/checkstyle/checkstyle/commit/9e9bdb6bae14cc47a34183eecd4b3b48a6404dff", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-12T20:19:20Z", "type": "forcePushed"}, {"oid": "43b16d9f74611b0e767e9cca9e63527fbba25bb4", "url": "https://github.com/checkstyle/checkstyle/commit/43b16d9f74611b0e767e9cca9e63527fbba25bb4", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-12T22:41:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMDc1OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424220759", "bodyText": "please change it to block comment example. Showing empty file looks strange", "author": "strkkk", "createdAt": "2020-05-13T07:15:35Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,95 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether file contains code. Files which are considered to have no code:\n+ * <ul>\n+ * <li>\n+ * File with no text\n+ * </li>\n+ * <li>\n+ * File with single line comment(s)\n+ * </li>\n+ * <li>\n+ * File with a multi line comment(s).\n+ * </li>\n+ * </ul>\n+ * </p>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"NoCodeInFile\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <p>\n+ * Content of the files:\n+ * </p>\n+ * <pre>\n+ * // violation", "originalCommit": "43b16d9f74611b0e767e9cca9e63527fbba25bb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNzgzMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424227832", "bodyText": "But, in block comment, */ is being treated as javadoc end. Anyway to escape it?", "author": "gaurabdg", "createdAt": "2020-05-13T07:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMDc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzMDYxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424230614", "bodyText": "Yes, https://stackoverflow.com/a/631839/3901853", "author": "strkkk", "createdAt": "2020-05-13T07:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMDc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc96358fb443b2442b9f16789f7efb09b21893e8", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex d5d508bd2..5f1c69b8a 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -27,6 +27,7 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n /**\n  * <p>\n  * Checks whether file contains code. Files which are considered to have no code:\n+ * </p>\n  * <ul>\n  * <li>\n  * File with no text\n"}}, {"oid": "bc96358fb443b2442b9f16789f7efb09b21893e8", "url": "https://github.com/checkstyle/checkstyle/commit/bc96358fb443b2442b9f16789f7efb09b21893e8", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-13T07:44:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2NjE4MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424266181", "bodyText": "no need to escape asterisk", "author": "strkkk", "createdAt": "2020-05-13T08:33:47Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,97 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether file contains code. Files which are considered to have no code:\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * File with no text\n+ * </li>\n+ * <li>\n+ * File with single line comment(s)\n+ * </li>\n+ * <li>\n+ * File with a multi line comment(s).\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"NoCodeInFile\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <p>\n+ * Content of the files:\n+ * </p>\n+ * <pre>\n+ * // single line comment // violation\n+ * </pre>\n+ * <pre>\n+ * /*\n+ *  block comment\n+ * &#42;&#47; // violation", "originalCommit": "bc96358fb443b2442b9f16789f7efb09b21893e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c69d348c80a8217be3b11a1483ac969a5c2da44", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex 5f1c69b8a..361c42965 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -55,9 +55,9 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n  * // single line comment // violation\n  * </pre>\n  * <pre>\n- * /*\n+ * /* // violation\n  *  block comment\n- * &#42;&#47; // violation\n+ * *&#47;\n  * </pre>\n  * @since 8.33\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2NzQyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r424267426", "bodyText": "violation is reported on line 1, so violation comment should be there as well", "author": "strkkk", "createdAt": "2020-05-13T08:35:42Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java", "diffHunk": "@@ -0,0 +1,97 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import com.puppycrawl.tools.checkstyle.StatelessCheck;\n+import com.puppycrawl.tools.checkstyle.api.AbstractCheck;\n+import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+/**\n+ * <p>\n+ * Checks whether file contains code. Files which are considered to have no code:\n+ * </p>\n+ * <ul>\n+ * <li>\n+ * File with no text\n+ * </li>\n+ * <li>\n+ * File with single line comment(s)\n+ * </li>\n+ * <li>\n+ * File with a multi line comment(s).\n+ * </li>\n+ * </ul>\n+ * <p>\n+ * To configure the check:\n+ * </p>\n+ * <pre>\n+ * &lt;module name=\"NoCodeInFile\"/&gt;\n+ * </pre>\n+ * <p>\n+ * Example:\n+ * </p>\n+ * <p>\n+ * Content of the files:\n+ * </p>\n+ * <pre>\n+ * // single line comment // violation\n+ * </pre>\n+ * <pre>\n+ * /*\n+ *  block comment\n+ * &#42;&#47; // violation", "originalCommit": "bc96358fb443b2442b9f16789f7efb09b21893e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c69d348c80a8217be3b11a1483ac969a5c2da44", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\nindex 5f1c69b8a..361c42965 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheck.java\n\n@@ -55,9 +55,9 @@ import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n  * // single line comment // violation\n  * </pre>\n  * <pre>\n- * /*\n+ * /* // violation\n  *  block comment\n- * &#42;&#47; // violation\n+ * *&#47;\n  * </pre>\n  * @since 8.33\n  */\n"}}, {"oid": "9c69d348c80a8217be3b11a1483ac969a5c2da44", "url": "https://github.com/checkstyle/checkstyle/commit/9c69d348c80a8217be3b11a1483ac969a5c2da44", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-13T08:59:40Z", "type": "forcePushed"}, {"oid": "2415ad5057175f7d6e0d225adc89928450ff9cab", "url": "https://github.com/checkstyle/checkstyle/commit/2415ad5057175f7d6e0d225adc89928450ff9cab", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-13T14:51:14Z", "type": "forcePushed"}, {"oid": "8d8a0e3bb980041b1184b71e06807d3644a9fb01", "url": "https://github.com/checkstyle/checkstyle/commit/8d8a0e3bb980041b1184b71e06807d3644a9fb01", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-15T10:58:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2ODUzMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r425968533", "bodyText": "Please use google.Truth here\nassertWithMessage(\"Required tokens array is not empty\")\n    .that(checkObj.getRequiredTokens())\n    .isEmpty();", "author": "pbludov", "createdAt": "2020-05-15T18:12:50Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package com.puppycrawl.tools.checkstyle.checks;\n+\n+import static com.puppycrawl.tools.checkstyle.checks.NoCodeInFileCheck.MSG_KEY_NO_CODE;\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.AbstractModuleTestSupport;\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n+\n+public class NoCodeInFileCheckTest extends AbstractModuleTestSupport {\n+\n+    @Override\n+    protected String getPackageLocation() {\n+        return \"com/puppycrawl/tools/checkstyle/checks/nocodeinfile\";\n+    }\n+\n+    @Test\n+    public void testGetRequiredTokens() {\n+        final NoCodeInFileCheck checkObj = new NoCodeInFileCheck();\n+        assertArrayEquals(CommonUtil.EMPTY_INT_ARRAY, checkObj.getRequiredTokens(),", "originalCommit": "8d8a0e3bb980041b1184b71e06807d3644a9fb01", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk3MTc4NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r425971784", "bodyText": "and same for similar cases in this file", "author": "pbludov", "createdAt": "2020-05-15T18:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2ODUzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI1MTIyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r426251220", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-05-17T11:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk2ODUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "a633dd162cde829c3ebc4cbebb7a1e911dea7b9b", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java\nindex 8c3272f66..d1a5cc57d 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/NoCodeInFileCheckTest.java\n\n@@ -19,8 +19,8 @@\n \n package com.puppycrawl.tools.checkstyle.checks;\n \n+import static com.google.common.truth.Truth.assertWithMessage;\n import static com.puppycrawl.tools.checkstyle.checks.NoCodeInFileCheck.MSG_KEY_NO_CODE;\n-import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n \n import org.junit.jupiter.api.Test;\n \n"}}, {"oid": "a633dd162cde829c3ebc4cbebb7a1e911dea7b9b", "url": "https://github.com/checkstyle/checkstyle/commit/a633dd162cde829c3ebc4cbebb7a1e911dea7b9b", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-17T11:48:15Z", "type": "forcePushed"}, {"oid": "400a1b6e9683da11259cc9042c2211c31336d220", "url": "https://github.com/checkstyle/checkstyle/commit/400a1b6e9683da11259cc9042c2211c31336d220", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-18T23:21:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUzOTIyNg==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r428539226", "bodyText": "Look at top text, it says are \"not compatible ... till ....\". This check will never be compatible. It always logs by line number since there is never any AST.\nWe need to follow pattern of other checks where we couldn't support them, Regexp and RegexpSinglelineJava and give a reason. xdoc should also be updated too.", "author": "rnveach", "createdAt": "2020-05-21T09:15:15Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java", "diffHunk": "@@ -59,6 +59,7 @@\n             \"Indentation\",\n             \"JavadocMethod\",\n             \"MissingJavadocType\",\n+            \"NoCodeInFile\",", "originalCommit": "400a1b6e9683da11259cc9042c2211c31336d220", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MzAyNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8161#discussion_r429563025", "bodyText": "Done.", "author": "gaurabdg", "createdAt": "2020-05-23T17:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUzOTIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "4e9a8c4e6ebb79fc54661b6f157c8eb5db00713d", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java\nindex 54a9e4a1c..632d5cdb7 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java\n\n@@ -59,7 +59,7 @@ public class XpathRegressionTest extends AbstractModuleTestSupport {\n             \"Indentation\",\n             \"JavadocMethod\",\n             \"MissingJavadocType\",\n-            \"NoCodeInFile\",\n+            \"NoCodeInFile (reason is that AST is not generated for a file not containing code)\",\n             \"Regexp (reason is at  #7759)\",\n             \"RegexpSinglelineJava (reason is at  #7759)\",\n             \"TodoComment\",\n"}}, {"oid": "4e9a8c4e6ebb79fc54661b6f157c8eb5db00713d", "url": "https://github.com/checkstyle/checkstyle/commit/4e9a8c4e6ebb79fc54661b6f157c8eb5db00713d", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-23T17:17:16Z", "type": "commit"}, {"oid": "4e9a8c4e6ebb79fc54661b6f157c8eb5db00713d", "url": "https://github.com/checkstyle/checkstyle/commit/4e9a8c4e6ebb79fc54661b6f157c8eb5db00713d", "message": "Issue #8132: Add NoCodeInFileCheck", "committedDate": "2020-05-23T17:17:16Z", "type": "forcePushed"}]}