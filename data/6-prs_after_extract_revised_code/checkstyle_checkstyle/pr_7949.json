{"pr_number": 7949, "pr_title": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameter\u2026", "pr_createdAt": "2020-03-23T19:02:10Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7949", "timeline": [{"oid": "b753c0b1090a4e86b6e04ac0387381b662fb9292", "url": "https://github.com/checkstyle/checkstyle/commit/b753c0b1090a4e86b6e04ac0387381b662fb9292", "message": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameterName", "committedDate": "2020-03-24T07:43:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjQ0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397252448", "bodyText": "Please use this variable in statement before", "author": "strkkk", "createdAt": "2020-03-24T15:40:49Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck;\n+import com.puppycrawl.tools.checkstyle.checks.naming.LambdaParameterNameCheck;\n+\n+public class XpathRegressionLambdaParameterNameTest extends AbstractXpathTestSupport {\n+\n+    private final String checkName = LambdaParameterNameCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionLambdaParameterName1.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(LambdaParameterNameCheck.class);\n+        final String defaultPattern = \"^[a-z][a-zA-Z0-9]*$\";\n+\n+        final String[] expectedViolation = {\n+            \"7:44: \" + getCheckMessage(LambdaParameterNameCheck.class,\n+                    AbstractNameCheck.MSG_INVALID_PATTERN, \"S\", defaultPattern),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+               \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionLambdaParameterName1']]\"\n+                       + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/SLIST/VARIABLE_DEF[\"\n+                       + \"./IDENT[@text='trimmer']]/ASSIGN/LAMBDA/IDENT[@text='S']\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionLambdaParameterName2.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(LambdaParameterNameCheck.class);\n+        moduleConfig.addAttribute(\"format\", \"^[_][a-zA-Z0-9]*$\");\n+        final String nonDefaultPattern = \"^[_][a-zA-Z0-9]*$\";", "originalCommit": "b753c0b1090a4e86b6e04ac0387381b662fb9292", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyNzUzMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397327531", "bodyText": "OK", "author": "Abhishek-kumar09", "createdAt": "2020-03-24T17:18:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MjQ0OA=="}], "type": "inlineReview", "revised_code": {"commit": "5f3b4fcb28b770d425017895f14d457cb5feaab2", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java\nindex b9caafab8..52b47a7db 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java\n\n@@ -67,10 +67,12 @@ public class XpathRegressionLambdaParameterNameTest extends AbstractXpathTestSup\n         final File fileToProcess =\n                 new File(getPath(\"SuppressionXpathRegressionLambdaParameterName2.java\"));\n \n+        final String nonDefaultPattern = \"^[_]*$\";\n+\n         final DefaultConfiguration moduleConfig =\n                 createModuleConfig(LambdaParameterNameCheck.class);\n-        moduleConfig.addAttribute(\"format\", \"^[_][a-zA-Z0-9]*$\");\n-        final String nonDefaultPattern = \"^[_][a-zA-Z0-9]*$\";\n+        moduleConfig.addAttribute(\"format\", nonDefaultPattern);\n+\n \n         final String[] expectedViolation = {\n             \"7:44: \" + getCheckMessage(LambdaParameterNameCheck.class,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzE3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397253171", "bodyText": "first group in regex is redundant, can be simplified to just underscore", "author": "strkkk", "createdAt": "2020-03-24T15:41:41Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck;\n+import com.puppycrawl.tools.checkstyle.checks.naming.LambdaParameterNameCheck;\n+\n+public class XpathRegressionLambdaParameterNameTest extends AbstractXpathTestSupport {\n+\n+    private final String checkName = LambdaParameterNameCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testOne() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionLambdaParameterName1.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(LambdaParameterNameCheck.class);\n+        final String defaultPattern = \"^[a-z][a-zA-Z0-9]*$\";\n+\n+        final String[] expectedViolation = {\n+            \"7:44: \" + getCheckMessage(LambdaParameterNameCheck.class,\n+                    AbstractNameCheck.MSG_INVALID_PATTERN, \"S\", defaultPattern),\n+        };\n+\n+        final List<String> expectedXpathQueries = Collections.singletonList(\n+               \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionLambdaParameterName1']]\"\n+                       + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/SLIST/VARIABLE_DEF[\"\n+                       + \"./IDENT[@text='trimmer']]/ASSIGN/LAMBDA/IDENT[@text='S']\"\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+    }\n+\n+    @Test\n+    public void testTwo() throws Exception {\n+        final File fileToProcess =\n+                new File(getPath(\"SuppressionXpathRegressionLambdaParameterName2.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(LambdaParameterNameCheck.class);\n+        moduleConfig.addAttribute(\"format\", \"^[_][a-zA-Z0-9]*$\");\n+        final String nonDefaultPattern = \"^[_][a-zA-Z0-9]*$\";", "originalCommit": "b753c0b1090a4e86b6e04ac0387381b662fb9292", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMyODA4MA==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397328080", "bodyText": "Done.", "author": "Abhishek-kumar09", "createdAt": "2020-03-24T17:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1NzMxOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397657318", "bodyText": "@Abhishek-kumar09 there is a misunderstanding. By first group I meant [_], this group can be simplified to _, no reason to delete rest of regex.\nPlease correct to ^_[a-zA-Z0-9]*$", "author": "strkkk", "createdAt": "2020-03-25T07:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5MjA2Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397792062", "bodyText": "Sorry, I misunderstood that.", "author": "Abhishek-kumar09", "createdAt": "2020-03-25T11:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1MzE3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5f3b4fcb28b770d425017895f14d457cb5feaab2", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java\nindex b9caafab8..52b47a7db 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionLambdaParameterNameTest.java\n\n@@ -67,10 +67,12 @@ public class XpathRegressionLambdaParameterNameTest extends AbstractXpathTestSup\n         final File fileToProcess =\n                 new File(getPath(\"SuppressionXpathRegressionLambdaParameterName2.java\"));\n \n+        final String nonDefaultPattern = \"^[_]*$\";\n+\n         final DefaultConfiguration moduleConfig =\n                 createModuleConfig(LambdaParameterNameCheck.class);\n-        moduleConfig.addAttribute(\"format\", \"^[_][a-zA-Z0-9]*$\");\n-        final String nonDefaultPattern = \"^[_][a-zA-Z0-9]*$\";\n+        moduleConfig.addAttribute(\"format\", nonDefaultPattern);\n+\n \n         final String[] expectedViolation = {\n             \"7:44: \" + getCheckMessage(LambdaParameterNameCheck.class,\n"}}, {"oid": "5f3b4fcb28b770d425017895f14d457cb5feaab2", "url": "https://github.com/checkstyle/checkstyle/commit/5f3b4fcb28b770d425017895f14d457cb5feaab2", "message": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameterName", "committedDate": "2020-03-24T17:17:50Z", "type": "forcePushed"}, {"oid": "aa4f93e2876c646c2df65a982b4ffe59af236241", "url": "https://github.com/checkstyle/checkstyle/commit/aa4f93e2876c646c2df65a982b4ffe59af236241", "message": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameterName", "committedDate": "2020-03-25T07:13:37Z", "type": "forcePushed"}, {"oid": "a516bbd8b8e994e6653169a870602b896fc338f6", "url": "https://github.com/checkstyle/checkstyle/commit/a516bbd8b8e994e6653169a870602b896fc338f6", "message": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameterName", "committedDate": "2020-03-25T11:42:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1NjkwNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r397956904", "bodyText": "Inputs between the 2 should be more unique.\nPlease add a parenthesis around the lambda parameter like \n  \n    \n      checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/naming/lambdaparametername/InputLambdaParameterName.java\n    \n    \n         Line 10\n      in\n      3835575\n    \n    \n    \n    \n\n        \n          \n           Function<String, String> badNamedParameterWithParenthesis = (st) -> st.trim().toLowerCase(); \n        \n    \n  \n\n /", "author": "rnveach", "createdAt": "2020-03-25T15:41:57Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/lambdaparametername/SuppressionXpathRegressionLambdaParameterName2.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.checkstyle.suppressionxpathfilter.lambdaparametername;\n+\n+import java.util.function.Function;\n+\n+public class SuppressionXpathRegressionLambdaParameterName2 {\n+    void test() {\n+        Function<String, String> trimmer = s -> s.trim(); // warn", "originalCommit": "a516bbd8b8e994e6653169a870602b896fc338f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA2NzkzNg==", "url": "https://github.com/checkstyle/checkstyle/pull/7949#discussion_r398067936", "bodyText": "OK,", "author": "Abhishek-kumar09", "createdAt": "2020-03-25T18:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1NjkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "53f38d7551f43ba34c327e4f58e6427a75bb00d2", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/lambdaparametername/SuppressionXpathRegressionLambdaParameterName2.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/lambdaparametername/SuppressionXpathRegressionLambdaParameterName2.java\nindex c50bb7f84..8b818ed11 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/lambdaparametername/SuppressionXpathRegressionLambdaParameterName2.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/lambdaparametername/SuppressionXpathRegressionLambdaParameterName2.java\n\n@@ -4,6 +4,6 @@ import java.util.function.Function;\n \n public class SuppressionXpathRegressionLambdaParameterName2 {\n     void test() {\n-        Function<String, String> trimmer = s -> s.trim(); // warn\n+        Function<String, String> trimmer = (s) -> s.trim(); // warn\n     }\n }\n"}}, {"oid": "53f38d7551f43ba34c327e4f58e6427a75bb00d2", "url": "https://github.com/checkstyle/checkstyle/commit/53f38d7551f43ba34c327e4f58e6427a75bb00d2", "message": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameterName", "committedDate": "2020-03-25T18:08:47Z", "type": "commit"}, {"oid": "53f38d7551f43ba34c327e4f58e6427a75bb00d2", "url": "https://github.com/checkstyle/checkstyle/commit/53f38d7551f43ba34c327e4f58e6427a75bb00d2", "message": "Issue #7742: Update AbstractChecks to log DetailAST - LambdaParameterName", "committedDate": "2020-03-25T18:08:47Z", "type": "forcePushed"}]}