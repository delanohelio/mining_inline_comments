{"pr_number": 7513, "pr_title": "Issue #7512: mark DetailAST::getNumberOfChildren deprecated", "pr_createdAt": "2020-01-28T13:55:10Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7513", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371819996", "bodyText": "Maybe I am confused, but this is changing from number of children to number of siblings?\nast.getParent().getNumberOfChildren() != 1\nto\nast.hasNextSibling() || ast.getParent().getFirstChild() != ast\nI am not grasping the equality of this.", "author": "rnveach", "createdAt": "2020-01-28T14:04:59Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "diffHunk": "@@ -135,12 +135,21 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST parent = ast.getParent();\n         if (parent.getType() == TokenTypes.SLIST\n-                && (!allowInSwitchCase\n-                    || parent.getNumberOfChildren() != 1)) {\n+                && (!allowInSwitchCase || hasSiblings(ast))) {\n             log(ast, MSG_KEY_BLOCK_NESTED);\n         }\n     }\n \n+    /**\n+     * Checks whether the AST node has any siblings or not.\n+     *\n+     * @param ast node to examine\n+     * @return {@code true} if the node has one or more siblings\n+     */\n+    private static boolean hasSiblings(DetailAST ast) {\n+        return ast.getNextSibling() != null || ast.getParent().getFirstChild() != ast;", "originalCommit": "9893e7cca80f05860f245ea737a5889c9a2c1e8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTkxNTk1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371915953", "bodyText": "The ast parent can't have zero children, as it already have one child: the ast itself.\nThis expression should be ast.getParent().getNumberOfChildren()  > 1.\nThe first version of this method was named isLonelyChild(ast), but was inverted later to avoid negation in (!allowInSwitchCase || !isLonelyChild(ast)).", "author": "pbludov", "createdAt": "2020-01-28T16:33:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MjUzMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371962531", "bodyText": "Thanks, it is clearer to me now.\n\nast.getParent().getFirstChild() != ast\n\nSince we are looking for a lonely child, would it be better to swap the above with ast.getPreviousSibling() != null? Then we are only looking at the next/previous sibling and not involving the parent.", "author": "rnveach", "createdAt": "2020-01-28T17:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5ODgxMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7513#discussion_r371998811", "bodyText": "Since we are looking for a lonely child, would it be better to swap the above with ast.getPreviousSibling() != null? Then we are only looking at the next/previous sibling and not involving the parent.\n\nThat makes sense. The method is rewritten.", "author": "pbludov", "createdAt": "2020-01-28T19:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxOTk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "71ce8f1ea251cd7481fdd5f879ecc7ba23600881", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\nindex 69497bb84..b626cfe4a 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\n\n@@ -147,7 +147,7 @@ public class AvoidNestedBlocksCheck extends AbstractCheck {\n      * @return {@code true} if the node has one or more siblings\n      */\n     private static boolean hasSiblings(DetailAST ast) {\n-        return ast.getNextSibling() != null || ast.getParent().getFirstChild() != ast;\n+        return ast.getPreviousSibling() != null || ast.getNextSibling() != null;\n     }\n \n     /**\n"}}, {"oid": "71ce8f1ea251cd7481fdd5f879ecc7ba23600881", "url": "https://github.com/checkstyle/checkstyle/commit/71ce8f1ea251cd7481fdd5f879ecc7ba23600881", "message": "Issue #7512: mark DetailAST::getNumberOfChildren deprecated", "committedDate": "2020-01-28T19:05:25Z", "type": "commit"}, {"oid": "71ce8f1ea251cd7481fdd5f879ecc7ba23600881", "url": "https://github.com/checkstyle/checkstyle/commit/71ce8f1ea251cd7481fdd5f879ecc7ba23600881", "message": "Issue #7512: mark DetailAST::getNumberOfChildren deprecated", "committedDate": "2020-01-28T19:05:25Z", "type": "forcePushed"}]}