{"pr_number": 7673, "pr_title": "Issue #7660: Add code example for StringLiteralEquality", "pr_createdAt": "2020-02-25T19:00:00Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7673", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI5OTY2NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384299664", "bodyText": "accepted -> OK\nclosing parentheses is missing", "author": "strkkk", "createdAt": "2020-02-26T06:43:40Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,19 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Examples of how the check works if this module is used:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") // violation\n+ * System.out.println(\"success!\")\n+ * if (status.equals(\"done\") // accepted", "originalCommit": "0149270db409ce322c8017badd327be48653b9c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 9a9e8af1e..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -47,17 +52,23 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n  * <p>\n- * Examples of how the check works if this module is used:\n+ * Examples of violations:\n  * </p>\n  * <pre>\n- * if (status == \"done\") // violation\n- * System.out.println(\"success!\")\n- * if (status.equals(\"done\") // accepted\n- * System.out.println(\"success!\")\n- * if (status != \"done\") // violation\n- * System.out.println(\"wait\")\n- * if (!status.equals(\"done\")) // accepted\n- * System.out.println(\"wait\")\n+ * String status = \"pending\";\n+ *\n+ * if (status == \"done\") {} // violation\n+ *\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n+ *\n+ * String name = \"X\";\n+ *\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDA1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384300057", "bodyText": "Examples of violations is enough", "author": "strkkk", "createdAt": "2020-02-26T06:45:07Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,19 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Examples of how the check works if this module is used:", "originalCommit": "0149270db409ce322c8017badd327be48653b9c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 9a9e8af1e..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -47,17 +52,23 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n  * <p>\n- * Examples of how the check works if this module is used:\n+ * Examples of violations:\n  * </p>\n  * <pre>\n- * if (status == \"done\") // violation\n- * System.out.println(\"success!\")\n- * if (status.equals(\"done\") // accepted\n- * System.out.println(\"success!\")\n- * if (status != \"done\") // violation\n- * System.out.println(\"wait\")\n- * if (!status.equals(\"done\")) // accepted\n- * System.out.println(\"wait\")\n+ * String status = \"pending\";\n+ *\n+ * if (status == \"done\") {} // violation\n+ *\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n+ *\n+ * String name = \"X\";\n+ *\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDE1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384300157", "bodyText": "indentation", "author": "strkkk", "createdAt": "2020-02-26T06:45:28Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,19 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n- *\n+ * <p>\n+ * Examples of how the check works if this module is used:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") // violation\n+ * System.out.println(\"success!\")\n+ * if (status.equals(\"done\") // accepted\n+ * System.out.println(\"success!\")\n+ * if (status != \"done\") // violation\n+ * System.out.println(\"wait\")\n+ * if (!status.equals(\"done\")) // accepted\n+ * System.out.println(\"wait\")", "originalCommit": "0149270db409ce322c8017badd327be48653b9c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 9a9e8af1e..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -47,17 +52,23 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n  * <p>\n- * Examples of how the check works if this module is used:\n+ * Examples of violations:\n  * </p>\n  * <pre>\n- * if (status == \"done\") // violation\n- * System.out.println(\"success!\")\n- * if (status.equals(\"done\") // accepted\n- * System.out.println(\"success!\")\n- * if (status != \"done\") // violation\n- * System.out.println(\"wait\")\n- * if (!status.equals(\"done\")) // accepted\n- * System.out.println(\"wait\")\n+ * String status = \"pending\";\n+ *\n+ * if (status == \"done\") {} // violation\n+ *\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n+ *\n+ * String name = \"X\";\n+ *\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwODc1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384308757", "bodyText": "no semicolon here and in statements above", "author": "strkkk", "createdAt": "2020-02-26T07:16:00Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,20 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\")            // violation\n+ *   System.out.println(\"success!\")\n+ * if (status.equals(\"done\"))       // OK\n+ *   System.out.println(\"success!\")\n  *\n+ * if (status != \"done\")            // violation\n+ *   System.out.println(\"wait\")\n+ * if (!status.equals(\"done\"))      // OK\n+ *   System.out.println(\"wait\")", "originalCommit": "aee31f9741be29f559f855c36d92b79e00e2aa4f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 5b04f0349..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -50,15 +55,20 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * Examples of violations:\n  * </p>\n  * <pre>\n- * if (status == \"done\")            // violation\n- *   System.out.println(\"success!\")\n- * if (status.equals(\"done\"))       // OK\n- *   System.out.println(\"success!\")\n+ * String status = \"pending\";\n+ *\n+ * if (status == \"done\") {} // violation\n+ *\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n+ *\n+ * String name = \"X\";\n  *\n- * if (status != \"done\")            // violation\n- *   System.out.println(\"wait\")\n- * if (!status.equals(\"done\"))      // OK\n- *   System.out.println(\"wait\")\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwOTExMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384309110", "bodyText": "please make this and other comments like if (status == \"done\") // violation, with only one white space separation", "author": "strkkk", "createdAt": "2020-02-26T07:17:07Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +46,20 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\")            // violation", "originalCommit": "aee31f9741be29f559f855c36d92b79e00e2aa4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0NzQ5NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r384347494", "bodyText": "@strkkk Applied all the changes, let me know if there's anything else to be changed", "author": "gaurabdg", "createdAt": "2020-02-26T08:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwOTExMA=="}], "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 5b04f0349..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -50,15 +55,20 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * Examples of violations:\n  * </p>\n  * <pre>\n- * if (status == \"done\")            // violation\n- *   System.out.println(\"success!\")\n- * if (status.equals(\"done\"))       // OK\n- *   System.out.println(\"success!\")\n+ * String status = \"pending\";\n+ *\n+ * if (status == \"done\") {} // violation\n+ *\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n+ *\n+ * String name = \"X\";\n  *\n- * if (status != \"done\")            // violation\n- *   System.out.println(\"wait\")\n- * if (!status.equals(\"done\"))      // OK\n- *   System.out.println(\"wait\")\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NzYzMw==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385067633", "bodyText": "addresses -> references", "author": "strkkk", "createdAt": "2020-02-27T11:25:49Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -25,8 +25,13 @@\n import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n \n /**\n- * <p>Checks that string literals are not used with\n- * {@code ==} or <code>&#33;=</code>.\n+ * <p>\n+ * Checks that string literals are not used with <code>==</code> or <code>&#33;=</code>.\n+ * Since <code>==</code> will compare the object addresses, not the actual value of the strings,", "originalCommit": "ca8a3aadc79a428b45710937c160a0ac66c8cc07", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 42e0e0b82..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -27,7 +27,7 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n /**\n  * <p>\n  * Checks that string literals are not used with <code>==</code> or <code>&#33;=</code>.\n- * Since <code>==</code> will compare the object addresses, not the actual value of the strings,\n+ * Since <code>==</code> will compare the object references, not the actual value of the strings,\n  * <code>String.equals()</code> should be used.\n  * More information can be found\n  * <a href=\"http://www.thejavageek.com/2013/07/27/string-comparison-with-equals-and-assignment-operator/\">\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3ODQ0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385278447", "bodyText": "It is not clear what \"OK\" means here as user sees no string except in the method parameter. I would remove the parameter to not confuse the user, keep the method call and name, and add to \"OK\"\nlimitation that check cannot tell runtime type returned from method call.", "author": "rnveach", "createdAt": "2020-02-27T18:03:02Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +51,18 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") {} // violation\n  *\n+ * boolean flag = (status == \"done\") // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")) // OK\n+ *\n+ * if (name == getName(\"x\")) {} // OK", "originalCommit": "956f1df311ddad6093b069038ffd6905a301caec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4MDAxNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385280014", "bodyText": "It may help to show with context status and name are string variables. Usually our examples are valid, java code to showcase a real example and not tiny snippets of the world that lead to interpretation.", "author": "rnveach", "createdAt": "2020-02-27T18:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3ODQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 76d2bde15..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -55,13 +55,20 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * Examples of violations:\n  * </p>\n  * <pre>\n+ * String status = \"pending\";\n+ *\n  * if (status == \"done\") {} // violation\n  *\n- * boolean flag = (status == \"done\") // violation\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n  *\n- * boolean flag = (status.equals(\"done\")) // OK\n+ * String name = \"X\";\n  *\n- * if (name == getName(\"x\")) {} // OK\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3ODg5MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7673#discussion_r385278891", "bodyText": "Add 1 more example of != that will cause a violation. Something distinct from the others like a loop.", "author": "rnveach", "createdAt": "2020-02-27T18:03:54Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "diffHunk": "@@ -46,7 +51,18 @@\n  * <pre>\n  * &lt;module name=&quot;StringLiteralEquality&quot;/&gt;\n  * </pre>\n+ * <p>\n+ * Examples of violations:\n+ * </p>\n+ * <pre>\n+ * if (status == \"done\") {} // violation\n  *\n+ * boolean flag = (status == \"done\") // violation", "originalCommit": "956f1df311ddad6093b069038ffd6905a301caec", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\nindex 76d2bde15..6218cebef 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java\n\n@@ -55,13 +55,20 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;\n  * Examples of violations:\n  * </p>\n  * <pre>\n+ * String status = \"pending\";\n+ *\n  * if (status == \"done\") {} // violation\n  *\n- * boolean flag = (status == \"done\") // violation\n+ * while (status != \"done\") {} // violation\n+ *\n+ * boolean flag = (status == \"done\"); // violation\n+ *\n+ * boolean flag = (status.equals(\"done\")); // OK\n  *\n- * boolean flag = (status.equals(\"done\")) // OK\n+ * String name = \"X\";\n  *\n- * if (name == getName(\"x\")) {} // OK\n+ * if (name == getName()) {}\n+ * // OK, limitation that check cannot tell runtime type returned from method call\n  * </pre>\n  * @since 3.2\n  * @noinspection HtmlTagCanBeJavadocTag\n"}}, {"oid": "7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "url": "https://github.com/checkstyle/checkstyle/commit/7ca159de86d98cd5f036f2b0a67bb2e49b359b28", "message": "Issue #7660: Add code example for StringLiteralEquality", "committedDate": "2020-02-29T06:32:40Z", "type": "commit"}]}