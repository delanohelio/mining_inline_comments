{"pr_number": 8786, "pr_title": "Issue #8785: Set tokenTypesSet as validationType for non base token properties", "pr_createdAt": "2020-09-04T22:30:07Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8786", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1OTA5MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8786#discussion_r483959090", "bodyText": "I removed this change ...\nUse should not place any files in repo, we can come back to this if become very annoying.", "author": "romani", "createdAt": "2020-09-05T15:06:20Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java", "diffHunk": "@@ -249,7 +251,8 @@ private static boolean shouldSkipInputFileNameCheck(String path, String fileName\n                 // special directory for files that can't be renamed or are secondary inputs\n                 || path.contains(File.separatorChar + \"inputs\" + File.separatorChar)\n                 // all inputs must start with 'messages'\n-                || path.contains(File.separatorChar + \"translation\" + File.separatorChar);\n+                || path.contains(File.separatorChar + \"translation\" + File.separatorChar)\n+                || fileName.charAt(0) == '.';", "originalCommit": "327fa4c7fb4495869a38f6db1c2f46811c2244d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2MTIzMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8786#discussion_r483961230", "bodyText": "It becomes auto generated in each folder for mac os", "author": "gaurabdg", "createdAt": "2020-09-05T15:32:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1OTA5MA=="}], "type": "inlineReview", "revised_code": {"commit": "e91be0668407c3357e6ac09be20d700397d30afa", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\nindex 64b0898b4..cf3d722d4 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\n\n@@ -251,8 +249,7 @@ public class AllTestsTest {\n                 // special directory for files that can't be renamed or are secondary inputs\n                 || path.contains(File.separatorChar + \"inputs\" + File.separatorChar)\n                 // all inputs must start with 'messages'\n-                || path.contains(File.separatorChar + \"translation\" + File.separatorChar)\n-                || fileName.charAt(0) == '.';\n+                || path.contains(File.separatorChar + \"translation\" + File.separatorChar);\n     }\n \n     private static String getSimplePath(String path) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1OTE2MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8786#discussion_r483959161", "bodyText": "this change is not logical, after removed it, all works as expected and no errors raised.", "author": "romani", "createdAt": "2020-09-05T15:07:18Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java", "diffHunk": "@@ -170,30 +170,32 @@ private static void verifyInputFile(Map<String, List<String>> allTests, File fil\n \n     private static void verifyInputFile(Map<String, List<String>> allTests, boolean skipFileNaming,\n             String path, String fileName) {\n-        List<String> classes;\n-        int slash = path.lastIndexOf(File.separatorChar);\n-        String packge = path.substring(0, slash);\n-        boolean found = false;\n-\n-        for (int depth = 0; depth < 4; depth++) {\n-            // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n-            // moved\n-            final String folderPath = packge;\n-            slash = packge.lastIndexOf(File.separatorChar);\n-            packge = path.substring(0, slash);\n-            classes = allTests.get(packge);\n-\n-            if (classes != null\n-                    && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n-                            fileName)) {\n-                found = true;\n-                break;\n+        if (!skipFileNaming) {\n+            List<String> classes;", "originalCommit": "327fa4c7fb4495869a38f6db1c2f46811c2244d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2MTE3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8786#discussion_r483961171", "bodyText": "Maybe because you are not running MacOS? It gives errors for me.", "author": "gaurabdg", "createdAt": "2020-09-05T15:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1OTE2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e91be0668407c3357e6ac09be20d700397d30afa", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\nindex 64b0898b4..cf3d722d4 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\n\n@@ -170,32 +170,30 @@ public class AllTestsTest {\n \n     private static void verifyInputFile(Map<String, List<String>> allTests, boolean skipFileNaming,\n             String path, String fileName) {\n-        if (!skipFileNaming) {\n-            List<String> classes;\n-            int slash = path.lastIndexOf(File.separatorChar);\n-            String packge = path.substring(0, slash);\n-            boolean found = false;\n-\n-            for (int depth = 0; depth < 4; depth++) {\n-                // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n-                // moved\n-                final String folderPath = packge;\n-                slash = packge.lastIndexOf(File.separatorChar);\n-                packge = path.substring(0, slash);\n-                classes = allTests.get(packge);\n-\n-                if (classes != null\n-                        && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n-                        fileName)) {\n-                    found = true;\n-                    break;\n-                }\n+        List<String> classes;\n+        int slash = path.lastIndexOf(File.separatorChar);\n+        String packge = path.substring(0, slash);\n+        boolean found = false;\n+\n+        for (int depth = 0; depth < 4; depth++) {\n+            // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n+            // moved\n+            final String folderPath = packge;\n+            slash = packge.lastIndexOf(File.separatorChar);\n+            packge = path.substring(0, slash);\n+            classes = allTests.get(packge);\n+\n+            if (classes != null\n+                    && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n+                            fileName)) {\n+                found = true;\n+                break;\n             }\n-\n-            assertTrue(found, \"Resource must be named after a Test like 'InputMyCustomCase.java' \"\n-                    + \"and be in the sub-package of the test like 'mycustom' \"\n-                    + \"for test 'MyCustomCheckTest': \" + path);\n         }\n+\n+        assertTrue(found, \"Resource must be named after a Test like 'InputMyCustomCase.java' \"\n+                + \"and be in the sub-package of the test like 'mycustom' \"\n+                + \"for test 'MyCustomCheckTest': \" + path);\n     }\n \n     private static void verifyHasProductionFile(Map<String, List<String>> allTests, File file) {\n"}}, {"oid": "e91be0668407c3357e6ac09be20d700397d30afa", "url": "https://github.com/checkstyle/checkstyle/commit/e91be0668407c3357e6ac09be20d700397d30afa", "message": "Issue #8785: Set tokenTypesSet as validationType for non base token properties", "committedDate": "2020-09-05T15:08:09Z", "type": "commit"}, {"oid": "e91be0668407c3357e6ac09be20d700397d30afa", "url": "https://github.com/checkstyle/checkstyle/commit/e91be0668407c3357e6ac09be20d700397d30afa", "message": "Issue #8785: Set tokenTypesSet as validationType for non base token properties", "committedDate": "2020-09-05T15:08:09Z", "type": "forcePushed"}]}