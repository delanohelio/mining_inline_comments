{"pr_number": 8093, "pr_title": "Issue #6332: Java9 try-with-resources", "pr_createdAt": "2020-04-13T18:33:32Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8093", "timeline": [{"oid": "f84ef94623dc657b1d30c1cebf873d6c6efa3cba", "url": "https://github.com/checkstyle/checkstyle/commit/f84ef94623dc657b1d30c1cebf873d6c6efa3cba", "message": "Issue #6332: Java9: try-with-resources should accept fields", "committedDate": "2020-04-13T18:36:43Z", "type": "forcePushed"}, {"oid": "d0e5015ba6386c478721e63886278ed943e8afca", "url": "https://github.com/checkstyle/checkstyle/commit/d0e5015ba6386c478721e63886278ed943e8afca", "message": "Issue checkstyle#6332: Java9: try-with-resources should accept fields", "committedDate": "2020-04-16T04:51:00Z", "type": "forcePushed"}, {"oid": "07e42aa514a3e1f137cfb8fb5e02e10ea39487f0", "url": "https://github.com/checkstyle/checkstyle/commit/07e42aa514a3e1f137cfb8fb5e02e10ea39487f0", "message": "Issue checkstyle#6332: Java9: try-with-resources should accept fields", "committedDate": "2020-04-16T04:53:02Z", "type": "forcePushed"}, {"oid": "0b23b8ffc0b49cdf331b36800181019e15af5ac2", "url": "https://github.com/checkstyle/checkstyle/commit/0b23b8ffc0b49cdf331b36800181019e15af5ac2", "message": "Issue checkstyle#6332: Java9 try-with-resources should accept fields", "committedDate": "2020-04-16T07:17:58Z", "type": "forcePushed"}, {"oid": "c925ffa16c931c20b03df2b33e8ed8611e55d05b", "url": "https://github.com/checkstyle/checkstyle/commit/c925ffa16c931c20b03df2b33e8ed8611e55d05b", "message": "Issue checkstyle#6332: Java9 try with resources should accept field", "committedDate": "2020-04-16T09:36:25Z", "type": "forcePushed"}, {"oid": "a75d1ee0d3cd058c6f2a10dd4308817303298204", "url": "https://github.com/checkstyle/checkstyle/commit/a75d1ee0d3cd058c6f2a10dd4308817303298204", "message": "Issue checkstyle#6332: Java9 try with resources should accept field", "committedDate": "2020-04-16T17:02:43Z", "type": "forcePushed"}, {"oid": "effa877bef96d704b21cf6826192113310e449e8", "url": "https://github.com/checkstyle/checkstyle/commit/effa877bef96d704b21cf6826192113310e449e8", "message": "Issue checkstyle#6332: Java9 try with resources accepts field", "committedDate": "2020-04-17T11:22:08Z", "type": "forcePushed"}, {"oid": "dc832ffdca84aafcadf8f09333cf670a52a03b41", "url": "https://github.com/checkstyle/checkstyle/commit/dc832ffdca84aafcadf8f09333cf670a52a03b41", "message": "Issue #6332: Java9 try with resources accepts field", "committedDate": "2020-04-17T16:14:03Z", "type": "forcePushed"}, {"oid": "453a5547e98b33c64ae5527ba5f9a663f9a37ccf", "url": "https://github.com/checkstyle/checkstyle/commit/453a5547e98b33c64ae5527ba5f9a663f9a37ccf", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-17T17:34:25Z", "type": "forcePushed"}, {"oid": "411c151b5ea89f71f8a06b6277d43897e968f862", "url": "https://github.com/checkstyle/checkstyle/commit/411c151b5ea89f71f8a06b6277d43897e968f862", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-18T12:08:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzYxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r410717612", "bodyText": "This line doesn\u2019t compile and is failing the Travis build - probably need to declare the variable \u201cv\u201d before the loop", "author": "esilkensen", "createdAt": "2020-04-18T16:16:55Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,39 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+\n+class Foo {\n+    static final Bar BAR = new Bar();\n+    static class Bar implements AutoCloseable {\n+        public void close() {\n+        }\n+    }\n+\n+\n+    final AutoCloseable closable = () -> {};\n+\n+    public void method1(TestClass cls) throws Exception {\n+        try (closable) {\n+        }\n+        try (cls.closable) {\n+        }\n+\n+    }\n+\n+    void method() {\n+        Foo.Bar bar = new Foo.Bar();\n+        try (Foo.BAR; BAR) {\n+        }\n+        try(this.BAR.bar){}\n+        try(this.BAR){\n+        }\n+        try(Foo.Bar b = new Foo.Bar()) {\n+        }\n+        try(Foo.super.BAR) {\n+        }\n+        try (new TwrForVariable1() { }.finalWrapper.finalField) {\n+        }\n+        try ((args.length > 0 ? v : new TwrForVariable1()).finalWrapper.finalField) {", "originalCommit": "411c151b5ea89f71f8a06b6277d43897e968f862", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "81e93b73c3045ac9386edb51c18ce4c172400fc8", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\nindex 2920f4188..2e6b7d695 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n\n@@ -21,38 +21,85 @@ public class InputJava9TryWithResources\n     }\n }\n \n-class Foo {\n-    static final Bar BAR = new Bar();\n-    static class Bar implements AutoCloseable {\n-        public void close() {\n-        }\n-    }\n+class TwrForVariable1 implements AutoCloseable  {\n+    private static int closeCount = 0;\n+    public static void main(String... args) throws Exception{\n \n+        TwrForVariable1 v = new TwrForVariable1();\n \n-    final AutoCloseable closable = () -> {};\n \n-    public void method1(TestClass cls) throws Exception {\n-        try (closable) {\n+        try (v) {\n         }\n-        try (cls.closable) {\n+\n+        try (v.finalWrapper.finalField) {\n         }\n \n-    }\n+        try (new TwrForVariable1() { }.finalWrapper.finalField) {\n+        }\n \n-    void method() {\n-        Foo.Bar bar = new Foo.Bar();\n-        try (Foo.BAR; BAR) {\n+        try ((args.length > 0 ? v : new TwrForVariable1()).finalWrapper.finalField) {\n         }\n-        try(this.BAR.bar){}\n-        try(this.BAR){\n+\n+        //More than one resource\n+        TwrForVariable1 i1 = new TwrForVariable1();\n+        try (i1; TwrForVariable1 i2 = new TwrForVariable1(true)) {\n         }\n-        try(Foo.Bar b = new Foo.Bar()) {\n+\n+        TwrForVariable1 m1 = new TwrForVariable1();\n+        try (m1; TwrForVariable1 m2 = m1; TwrForVariable1 m3 = m2;) {\n         }\n-        try(Foo.super.BAR) {\n+\n+        // Nested try\n+        try {\n+            throw new CloseableException();\n+        } catch (CloseableException ex) {\n+            try (ex) {\n+            }\n         }\n-        try (new TwrForVariable1() { }.finalWrapper.finalField) {\n+        // null test cases\n+        TwrForVariable1 n = null;\n+        try (n) {\n         }\n-        try ((args.length > 0 ? v : new TwrForVariable1()).finalWrapper.finalField) {\n+\n+        // anonymous class implementing AutoCloseable as variable in twr\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+    }\n+\n+    public void close() {\n+        closeCount++;\n+    }\n+\n+    final static FinalWrapper finalWrapper = new FinalWrapper();\n+    public void method() throws Exception {\n+        try(this.finalWrapper.finalField) {\n+        }\n+    }\n+    static class FinalWrapper {\n+        public final AutoCloseable finalField = new AutoCloseable() {\n+            @Override\n+            public void close() throws Exception {\n+                closeCount++;\n+            }\n+        };\n+    }\n+\n+    static class CloseableException extends Exception implements AutoCloseable {\n+        @Override\n+        public void close() {\n+            closeCount++;\n         }\n     }\n+\n+    public TwrForVariable1(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    public TwrForVariable1() {\n+        this(false);\n+    }\n }\n"}}, {"oid": "81e93b73c3045ac9386edb51c18ce4c172400fc8", "url": "https://github.com/checkstyle/checkstyle/commit/81e93b73c3045ac9386edb51c18ce4c172400fc8", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-18T20:12:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1MTE1MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r410851151", "bodyText": "While this compiles, I think it may be better to integrate the examples inside the existing InputJava9TryWithResources class rather than adding a separate top-level TwrForVariable1 class here. @harsh-kukreja, can you refactor?", "author": "esilkensen", "createdAt": "2020-04-19T08:31:12Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,86 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+\n+class TwrForVariable1 implements AutoCloseable  {", "originalCommit": "81e93b73c3045ac9386edb51c18ce4c172400fc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4MDQzOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r412680438", "bodyText": "@esilkensen can u resolve this?", "author": "harsh-kukreja", "createdAt": "2020-04-22T05:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg1MTE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\nindex 2e6b7d695..d86921964 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n\n@@ -4,75 +4,65 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n /**\n  * Input for Java 9 try-with-resources.\n  */\n-public class InputJava9TryWithResources\n+public class InputJava9TryWithResources implements AutoCloseable\n {\n-    public static class MyResource implements AutoCloseable {\n-        @Override\n-        public void close() throws Exception { }\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n     }\n \n-    public static void main(String[] args) throws Exception {\n-        MyResource resource = new MyResource();\n-        try (resource) { } finally { }\n-\n-        final MyResource resource1 = new MyResource();\n-        final MyResource resource2 = new MyResource();\n-        try (resource1;resource2) { } finally { }\n+    //Constructor\n+    public InputJava9TryWithResources() {\n+        this(false);\n     }\n-}\n \n-class TwrForVariable1 implements AutoCloseable  {\n-    private static int closeCount = 0;\n-    public static void main(String... args) throws Exception{\n-\n-        TwrForVariable1 v = new TwrForVariable1();\n-\n-\n-        try (v) {\n-        }\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputJava9TryWithResources v = new InputJava9TryWithResources();\n \n         try (v.finalWrapper.finalField) {\n         }\n \n-        try (new TwrForVariable1() { }.finalWrapper.finalField) {\n+        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n         }\n \n-        try ((args.length > 0 ? v : new TwrForVariable1()).finalWrapper.finalField) {\n+        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n         }\n \n         //More than one resource\n-        TwrForVariable1 i1 = new TwrForVariable1();\n-        try (i1; TwrForVariable1 i2 = new TwrForVariable1(true)) {\n+        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n+        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n         }\n \n-        TwrForVariable1 m1 = new TwrForVariable1();\n-        try (m1; TwrForVariable1 m2 = m1; TwrForVariable1 m3 = m2;) {\n+        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n+        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n         }\n \n         // Nested try\n         try {\n-            throw new CloseableException();\n-        } catch (CloseableException ex) {\n-            try (ex) {\n+        } catch (Exception ex) {\n+            try (v) {\n             }\n         }\n         // null test cases\n-        TwrForVariable1 n = null;\n+        InputJava9TryWithResources n = null;\n         try (n) {\n         }\n \n-        // anonymous class implementing AutoCloseable as variable in twr\n+        // anonymous class implementing AutoCloseable as variable in try\n         AutoCloseable a = new AutoCloseable() {\n             public void close() { };\n         };\n         try (a) {\n         } catch (Exception e) {}\n-    }\n \n-    public void close() {\n-        closeCount++;\n+\n     }\n \n+    private static int closeCount = 0;\n+\n+\n     final static FinalWrapper finalWrapper = new FinalWrapper();\n     public void method() throws Exception {\n         try(this.finalWrapper.finalField) {\n"}}, {"oid": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5", "url": "https://github.com/checkstyle/checkstyle/commit/0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-20T13:45:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNjM0NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416606345", "bodyText": "I do not see exactly this example. We never remove code in Inputs, the more the better, we should have all possible combitations of code.\nPlease create new Input file and place all advanced try to it.", "author": "romani", "createdAt": "2020-04-28T13:20:18Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -4,19 +4,81 @@\n /**\n  * Input for Java 9 try-with-resources.\n  */\n-public class InputJava9TryWithResources\n+public class InputJava9TryWithResources implements AutoCloseable\n {\n-    public static class MyResource implements AutoCloseable {\n-        @Override\n-        public void close() throws Exception { }\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n     }\n \n+    //Constructor\n+    public InputJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n     public static void main(String[] args) throws Exception {\n-        MyResource resource = new MyResource();\n-        try (resource) { } finally { }\n+        InputJava9TryWithResources v = new InputJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n+        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n+        }\n+\n+        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n+        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+\n+\n+    }\n+\n+    private static int closeCount = 0;\n+\n+\n+    final static FinalWrapper finalWrapper = new FinalWrapper();\n+    public void method() throws Exception {\n+        try(this.finalWrapper.finalField) {\n+        }\n+    }\n+    static class FinalWrapper {\n+        public final AutoCloseable finalField = new AutoCloseable() {\n+            @Override\n+            public void close() throws Exception {\n+                closeCount++;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n \n-        final MyResource resource1 = new MyResource();\n-        final MyResource resource2 = new MyResource();\n-        try (resource1;resource2) { } finally { }", "originalCommit": "0e4ada4a7544c0d97a1835f804fd8cd3b2d924b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMTcxMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416831713", "bodyText": "Done @romani", "author": "harsh-kukreja", "createdAt": "2020-04-28T18:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNjM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgzMjI3NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r416832274", "bodyText": "Also added the InputJava9TryWithResouce file to the AST tree @romani", "author": "harsh-kukreja", "createdAt": "2020-04-28T18:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYwNjM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7050503926f58a111ccd1413dee5cd3447ec7341", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\nindex d86921964..7d96f409f 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n\n@@ -4,81 +4,20 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n /**\n  * Input for Java 9 try-with-resources.\n  */\n-public class InputJava9TryWithResources implements AutoCloseable\n+public class InputJava9TryWithResources\n {\n-    //Constructor\n-    public InputJava9TryWithResources(boolean throwException) {\n-        if (throwException)\n-            throw new RuntimeException(\"Initialization exception\");\n+    public static class MyResource implements AutoCloseable {\n+        @Override\n+        public void close() throws Exception { }\n     }\n \n-    //Constructor\n-    public InputJava9TryWithResources() {\n-        this(false);\n-    }\n-\n-    //Main method\n     public static void main(String[] args) throws Exception {\n-        InputJava9TryWithResources v = new InputJava9TryWithResources();\n-\n-        try (v.finalWrapper.finalField) {\n-        }\n-\n-        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n-        }\n-\n-        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n-        }\n-\n-        //More than one resource\n-        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n-        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n-        }\n-\n-        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n-        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n-        }\n-\n-        // Nested try\n-        try {\n-        } catch (Exception ex) {\n-            try (v) {\n-            }\n-        }\n-        // null test cases\n-        InputJava9TryWithResources n = null;\n-        try (n) {\n-        }\n-\n-        // anonymous class implementing AutoCloseable as variable in try\n-        AutoCloseable a = new AutoCloseable() {\n-            public void close() { };\n-        };\n-        try (a) {\n-        } catch (Exception e) {}\n-\n-\n-    }\n-\n-    private static int closeCount = 0;\n-\n-\n-    final static FinalWrapper finalWrapper = new FinalWrapper();\n-    public void method() throws Exception {\n-        try(this.finalWrapper.finalField) {\n-        }\n-    }\n-    static class FinalWrapper {\n-        public final AutoCloseable finalField = new AutoCloseable() {\n-            @Override\n-            public void close() throws Exception {\n-                closeCount++;\n-            }\n-        };\n-    }\n-\n-    @Override\n-    public void close() throws Exception {\n+        MyResource resource = new MyResource();\n+        try (resource) { } finally { }\n \n+        final MyResource resource1 = new MyResource();\n+        final MyResource resource2 = new MyResource();\n+        try (resource1;resource2) { } finally { }\n     }\n }\n+\n"}}, {"oid": "7050503926f58a111ccd1413dee5cd3447ec7341", "url": "https://github.com/checkstyle/checkstyle/commit/7050503926f58a111ccd1413dee5cd3447ec7341", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-28T18:26:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTE5MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417069191", "bodyText": "Please update the ctor name", "author": "pbludov", "createdAt": "2020-04-29T05:07:12Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,84 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {", "originalCommit": "7050503926f58a111ccd1413dee5cd3447ec7341", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3MjIwMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417072200", "bodyText": "Done @pbludov, sorry!", "author": "harsh-kukreja", "createdAt": "2020-04-29T05:20:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTE5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fd35a9eb8f9021e9dd1caf6a24a02150169e5308", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 287b0cc73..3df14c83a 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -7,36 +7,36 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n     //Constructor\n-    public InputJava9TryWithResources(boolean throwException) {\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n         if (throwException)\n             throw new RuntimeException(\"Initialization exception\");\n     }\n \n     //Constructor\n-    public InputJava9TryWithResources() {\n+    public InputAdvanceJava9TryWithResources() {\n         this(false);\n     }\n \n     //Main method\n     public static void main(String[] args) throws Exception {\n-        InputJava9TryWithResources v = new InputJava9TryWithResources();\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n         try (v.finalWrapper.finalField) {\n         }\n \n-        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n         }\n \n-        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n+        try ((args.length > 0 ? v : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n         }\n \n         //More than one resource\n-        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n-        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 = new InputAdvanceJava9TryWithResources(true)) {\n         }\n \n-        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n-        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1; InputAdvanceJava9TryWithResources m3 = m2;) {\n         }\n \n         // Nested try\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTIxOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417069218", "bodyText": "Same here", "author": "pbludov", "createdAt": "2020-04-29T05:07:21Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,84 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputJava9TryWithResources() {", "originalCommit": "7050503926f58a111ccd1413dee5cd3447ec7341", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3MjIxNw==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417072217", "bodyText": "Done @pbludov, sorry!", "author": "harsh-kukreja", "createdAt": "2020-04-29T05:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2OTIxOA=="}], "type": "inlineReview", "revised_code": {"commit": "fd35a9eb8f9021e9dd1caf6a24a02150169e5308", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 287b0cc73..3df14c83a 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -7,36 +7,36 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n     //Constructor\n-    public InputJava9TryWithResources(boolean throwException) {\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n         if (throwException)\n             throw new RuntimeException(\"Initialization exception\");\n     }\n \n     //Constructor\n-    public InputJava9TryWithResources() {\n+    public InputAdvanceJava9TryWithResources() {\n         this(false);\n     }\n \n     //Main method\n     public static void main(String[] args) throws Exception {\n-        InputJava9TryWithResources v = new InputJava9TryWithResources();\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n         try (v.finalWrapper.finalField) {\n         }\n \n-        try (new InputJava9TryWithResources() { }.finalWrapper.finalField) {\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n         }\n \n-        try ((args.length > 0 ? v : new InputJava9TryWithResources()).finalWrapper.finalField) {\n+        try ((args.length > 0 ? v : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n         }\n \n         //More than one resource\n-        InputJava9TryWithResources i1 = new InputJava9TryWithResources();\n-        try (i1; InputJava9TryWithResources i2 = new InputJava9TryWithResources(true)) {\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 = new InputAdvanceJava9TryWithResources(true)) {\n         }\n \n-        InputJava9TryWithResources m1 = new InputJava9TryWithResources();\n-        try (m1; InputJava9TryWithResources m2 = m1; InputJava9TryWithResources m3 = m2;) {\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1; InputAdvanceJava9TryWithResources m3 = m2;) {\n         }\n \n         // Nested try\n"}}, {"oid": "fd35a9eb8f9021e9dd1caf6a24a02150169e5308", "url": "https://github.com/checkstyle/checkstyle/commit/fd35a9eb8f9021e9dd1caf6a24a02150169e5308", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-29T05:19:15Z", "type": "forcePushed"}, {"oid": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "url": "https://github.com/checkstyle/checkstyle/commit/b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-29T09:56:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5MjExMA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417292110", "bodyText": "please remove this change", "author": "romani", "createdAt": "2020-04-29T12:55:53Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java", "diffHunk": "@@ -20,3 +20,4 @@ public static void main(String[] args) throws Exception {\n         try (resource1;resource2) { } finally { }\n     }\n }\n+", "originalCommit": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e670aa66c571ae401158753682455fc07a86dc26", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\nindex 7d96f409f..4303cd27a 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputJava9TryWithResources.java\n\n@@ -20,4 +20,3 @@ public class InputJava9TryWithResources\n         try (resource1;resource2) { } finally { }\n     }\n }\n-\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NDA3Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417294072", "bodyText": "please remove comments over methods, the are not required.", "author": "romani", "createdAt": "2020-04-29T12:58:51Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor", "originalCommit": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e670aa66c571ae401158753682455fc07a86dc26", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 25119ec7d..1d2c21e93 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -6,18 +6,6 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n  */\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources(boolean throwException) {\n-        if (throwException)\n-            throw new RuntimeException(\"Initialization exception\");\n-    }\n-\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources() {\n-        this(false);\n-    }\n-\n-    //Main method\n     public static void main(String[] args) throws Exception {\n         InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NDg0NA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417294844", "bodyText": "please explain what for this c-tor.\nWe do not need extra code in Input.", "author": "romani", "createdAt": "2020-04-29T13:00:02Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {", "originalCommit": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e670aa66c571ae401158753682455fc07a86dc26", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 25119ec7d..1d2c21e93 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -6,18 +6,6 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n  */\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources(boolean throwException) {\n-        if (throwException)\n-            throw new RuntimeException(\"Initialization exception\");\n-    }\n-\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources() {\n-        this(false);\n-    }\n-\n-    //Main method\n     public static void main(String[] args) throws Exception {\n         InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NTE0Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417295143", "bodyText": "if this is not required - please remove.", "author": "romani", "createdAt": "2020-04-29T13:00:29Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);", "originalCommit": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e670aa66c571ae401158753682455fc07a86dc26", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 25119ec7d..1d2c21e93 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -6,18 +6,6 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n  */\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources(boolean throwException) {\n-        if (throwException)\n-            throw new RuntimeException(\"Initialization exception\");\n-    }\n-\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources() {\n-        this(false);\n-    }\n-\n-    //Main method\n     public static void main(String[] args) throws Exception {\n         InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5NjU5Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417296593", "bodyText": "please remove extra code from Input.", "author": "romani", "createdAt": "2020-04-29T13:02:38Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources(true)) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputAdvanceJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {\n+        } catch (Exception e) {}\n+\n+\n+    }\n+\n+    private static int closeCount = 0;", "originalCommit": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e670aa66c571ae401158753682455fc07a86dc26", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 25119ec7d..1d2c21e93 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -6,18 +6,6 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n  */\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources(boolean throwException) {\n-        if (throwException)\n-            throw new RuntimeException(\"Initialization exception\");\n-    }\n-\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources() {\n-        this(false);\n-    }\n-\n-    //Main method\n     public static void main(String[] args) throws Exception {\n         InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODM5MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r417298391", "bodyText": "please explain how this code is related to issue we try to resolve.\nhow it is different from:\n      InputAdvanceJava9TryWithResources n = null;\n        try (n) {\n\nparser do not care about values and logic in code.\nIf you just extending our code base with more Input for better coverage - awesome, but please move them to separate Input file. Here we need to focus on all possible cases of field usage in try", "author": "romani", "createdAt": "2020-04-29T13:05:49Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,87 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources(boolean throwException) {\n+        if (throwException)\n+            throw new RuntimeException(\"Initialization exception\");\n+    }\n+\n+    //Constructor\n+    public InputAdvanceJava9TryWithResources() {\n+        this(false);\n+    }\n+\n+    //Main method\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources(true)) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        // Nested try\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {\n+            }\n+        }\n+        // null test cases\n+        InputAdvanceJava9TryWithResources n = null;\n+        try (n) {\n+        }\n+\n+        // anonymous class implementing AutoCloseable as variable in try\n+        AutoCloseable a = new AutoCloseable() {\n+            public void close() { };\n+        };\n+        try (a) {", "originalCommit": "b9ec7aea322a0e6d49aa54f2fa1647b7de26f8b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3NjYwNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418076605", "bodyText": "I still do not see separate input file.", "author": "romani", "createdAt": "2020-04-30T15:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODM5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODg1NjA1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418856057", "bodyText": "As you said there is no need of this code, so i have removed the line and did not create a sperate file. @romani", "author": "harsh-kukreja", "createdAt": "2020-05-02T03:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI5ODM5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e670aa66c571ae401158753682455fc07a86dc26", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 25119ec7d..1d2c21e93 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -6,18 +6,6 @@ package com.puppycrawl.tools.checkstyle.grammar.java9;\n  */\n public class InputAdvanceJava9TryWithResources implements AutoCloseable\n {\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources(boolean throwException) {\n-        if (throwException)\n-            throw new RuntimeException(\"Initialization exception\");\n-    }\n-\n-    //Constructor\n-    public InputAdvanceJava9TryWithResources() {\n-        this(false);\n-    }\n-\n-    //Main method\n     public static void main(String[] args) throws Exception {\n         InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n \n"}}, {"oid": "e670aa66c571ae401158753682455fc07a86dc26", "url": "https://github.com/checkstyle/checkstyle/commit/e670aa66c571ae401158753682455fc07a86dc26", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-04-30T08:31:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418077989", "bodyText": "please explain what for we have this code in Input ?\nwhat case you try to cover?\nthe same question to code below //More than one resource", "author": "romani", "createdAt": "2020-04-30T15:02:25Z", "path": "src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java", "diffHunk": "@@ -0,0 +1,55 @@\n+//non-compiled with javac: Compilable with Java9\n+package com.puppycrawl.tools.checkstyle.grammar.java9;\n+\n+/**\n+ * Input for Advance Java 9 try-with-resources.\n+ */\n+public class InputAdvanceJava9TryWithResources implements AutoCloseable\n+{\n+    public static void main(String[] args) throws Exception {\n+        InputAdvanceJava9TryWithResources v = new InputAdvanceJava9TryWithResources();\n+\n+        try (v.finalWrapper.finalField) {\n+        }\n+\n+        try (new InputAdvanceJava9TryWithResources() { }.finalWrapper.finalField) {\n+        }\n+\n+        try ((args.length > 0 ? v\n+                : new InputAdvanceJava9TryWithResources()).finalWrapper.finalField) {\n+        }\n+\n+        //More than one resource\n+        InputAdvanceJava9TryWithResources i1 = new InputAdvanceJava9TryWithResources();\n+        try (i1; InputAdvanceJava9TryWithResources i2 =\n+                    new InputAdvanceJava9TryWithResources()) {\n+        }\n+\n+        InputAdvanceJava9TryWithResources m1 = new InputAdvanceJava9TryWithResources();\n+        try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n+                InputAdvanceJava9TryWithResources m3 = m2;) {\n+        }\n+\n+        try {\n+        } catch (Exception ex) {\n+            try (v) {", "originalCommit": "e670aa66c571ae401158753682455fc07a86dc26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODg1NzgyOA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418857828", "bodyText": "This covers the nested try case. If it is not relevant i will remove the code.\n//More than one resource for this it covers the case of multiple resources in a try statement.", "author": "harsh-kukreja", "createdAt": "2020-05-02T03:17:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk2NDMwMw==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r418964303", "bodyText": "I want only to separate all changes are essential for issue to implement and test AND one changes that good to have but they are not related. All unrelated changes can stay in PR, but should be moved to separate commit minor: extra test inputs for TRY blocks.\nplease remove them or move to separate commit.", "author": "romani", "createdAt": "2020-05-02T14:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA1NjQ3MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8093#discussion_r419056470", "bodyText": "I removed the code @romani please check", "author": "harsh-kukreja", "createdAt": "2020-05-03T06:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3Nzk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f5abf489f7ab00a21fa45fb16866075795dbe044", "chunk": "diff --git a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\nindex 1d2c21e93..885af6e5d 100644\n--- a/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n+++ b/src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/grammar/java9/InputAdvanceJava9TryWithResources.java\n\n@@ -29,12 +29,6 @@ public class InputAdvanceJava9TryWithResources implements AutoCloseable\n         try (m1; InputAdvanceJava9TryWithResources m2 = m1;\n                 InputAdvanceJava9TryWithResources m3 = m2;) {\n         }\n-\n-        try {\n-        } catch (Exception ex) {\n-            try (v) {\n-            }\n-        }\n     }\n \n     final static FinalWrapper finalWrapper = new FinalWrapper();\n"}}, {"oid": "f5abf489f7ab00a21fa45fb16866075795dbe044", "url": "https://github.com/checkstyle/checkstyle/commit/f5abf489f7ab00a21fa45fb16866075795dbe044", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-05-03T06:36:04Z", "type": "forcePushed"}, {"oid": "77252db6e66ae54734cacec4934b1391a07e21ce", "url": "https://github.com/checkstyle/checkstyle/commit/77252db6e66ae54734cacec4934b1391a07e21ce", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-05-03T06:43:45Z", "type": "commit"}, {"oid": "77252db6e66ae54734cacec4934b1391a07e21ce", "url": "https://github.com/checkstyle/checkstyle/commit/77252db6e66ae54734cacec4934b1391a07e21ce", "message": "Issue #6332: Java9 try with resource accept field", "committedDate": "2020-05-03T06:43:45Z", "type": "forcePushed"}]}