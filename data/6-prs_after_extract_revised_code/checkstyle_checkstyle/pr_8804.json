{"pr_number": 8804, "pr_title": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "pr_createdAt": "2020-09-07T16:24:00Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/8804", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxNTA5Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484515092", "bodyText": "please review PR one more time, and remove all unrelated changes.", "author": "romani", "createdAt": "2020-09-07T16:29:42Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java", "diffHunk": "@@ -170,30 +170,32 @@ private static void verifyInputFile(Map<String, List<String>> allTests, File fil\n \n     private static void verifyInputFile(Map<String, List<String>> allTests, boolean skipFileNaming,\n             String path, String fileName) {\n-        List<String> classes;\n-        int slash = path.lastIndexOf(File.separatorChar);\n-        String packge = path.substring(0, slash);\n-        boolean found = false;\n-\n-        for (int depth = 0; depth < 4; depth++) {\n-            // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n-            // moved\n-            final String folderPath = packge;\n-            slash = packge.lastIndexOf(File.separatorChar);\n-            packge = path.substring(0, slash);\n-            classes = allTests.get(packge);\n-\n-            if (classes != null\n-                    && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n-                            fileName)) {\n-                found = true;\n-                break;\n+        if (!skipFileNaming) {", "originalCommit": "39247ff3af2419ce301d9be161725d05319279f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e1efd045028f1c13106df1969d4ed3656a561c37", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\nindex 64b0898b4..97a7b2f20 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllTestsTest.java\n\n@@ -170,32 +170,31 @@ public class AllTestsTest {\n \n     private static void verifyInputFile(Map<String, List<String>> allTests, boolean skipFileNaming,\n             String path, String fileName) {\n-        if (!skipFileNaming) {\n-            List<String> classes;\n-            int slash = path.lastIndexOf(File.separatorChar);\n-            String packge = path.substring(0, slash);\n-            boolean found = false;\n-\n-            for (int depth = 0; depth < 4; depth++) {\n-                // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n-                // moved\n-                final String folderPath = packge;\n-                slash = packge.lastIndexOf(File.separatorChar);\n-                packge = path.substring(0, slash);\n-                classes = allTests.get(packge);\n-\n-                if (classes != null\n-                        && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n-                        fileName)) {\n-                    found = true;\n-                    break;\n-                }\n+        List<String> classes;\n+        int slash = path.lastIndexOf(File.separatorChar);\n+        String packge = path.substring(0, slash);\n+        boolean found = false;\n+\n+        for (int depth = 0; depth < 4; depth++) {\n+            // -@cs[MoveVariableInsideIf] assignment value is modified later so it can't be\n+            // moved\n+            final String folderPath = packge;\n+            slash = packge.lastIndexOf(File.separatorChar);\n+            packge = path.substring(0, slash);\n+            classes = allTests.get(packge);\n+\n+            if (classes != null\n+                    && checkInputMatchCorrectFileStructure(classes, folderPath, skipFileNaming,\n+                    fileName)) {\n+                found = true;\n+                break;\n             }\n-\n-            assertTrue(found, \"Resource must be named after a Test like 'InputMyCustomCase.java' \"\n-                    + \"and be in the sub-package of the test like 'mycustom' \"\n-                    + \"for test 'MyCustomCheckTest': \" + path);\n         }\n+\n+        assertTrue(found, \"Resource must be named after a Test like 'InputMyCustomCase.java' \"\n+                + \"and be in the sub-package of the test like 'mycustom' \"\n+                + \"for test 'MyCustomCheckTest': \" + path);\n+\n     }\n \n     private static void verifyHasProductionFile(Map<String, List<String>> allTests, File file) {\n"}}, {"oid": "5088be72695c2f03e63dfcb1c7e626a7830f2696", "url": "https://github.com/checkstyle/checkstyle/commit/5088be72695c2f03e63dfcb1c7e626a7830f2696", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-07T17:22:14Z", "type": "forcePushed"}, {"oid": "c0d0500f68f0471d048dbaf7072c9f2e77858d74", "url": "https://github.com/checkstyle/checkstyle/commit/c0d0500f68f0471d048dbaf7072c9f2e77858d74", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-07T17:40:35Z", "type": "forcePushed"}, {"oid": "1670f41b91c6e55f389a88e97e9119370710de46", "url": "https://github.com/checkstyle/checkstyle/commit/1670f41b91c6e55f389a88e97e9119370710de46", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-07T17:43:18Z", "type": "forcePushed"}, {"oid": "e1efd045028f1c13106df1969d4ed3656a561c37", "url": "https://github.com/checkstyle/checkstyle/commit/e1efd045028f1c13106df1969d4ed3656a561c37", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-07T17:58:29Z", "type": "forcePushed"}, {"oid": "651a905bbcbbfc5da47c6aed4d2be0dbe6327bcd", "url": "https://github.com/checkstyle/checkstyle/commit/651a905bbcbbfc5da47c6aed4d2be0dbe6327bcd", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-07T18:01:06Z", "type": "forcePushed"}, {"oid": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de", "url": "https://github.com/checkstyle/checkstyle/commit/73fec1002de45fb85cb33f7ef597ce4cdf1ec0de", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-07T18:04:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590056", "bodyText": "tokens  = CheckUtil.getTokenText(check.getAcceptableTokens(),\n                check.getRequiredTokens())\nif (tokens.size() == TOKEN_TYPE_TOTAL_COUNT) {\n expectedAcceptableTokenText = \"all tokens allTokenTypes\";\n} else {\n expectedAcceptableTokenText = \"subset of tokens \"\n                + tokens;\n}", "author": "romani", "createdAt": "2020-09-08T00:04:58Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -877,10 +878,13 @@ private static void validatePropertySectionPropertyTokens(String fileName, Strin\n                         + \"' should have the basic token description\");\n \n         final String acceptableTokenText = columns.get(2).getTextContent().trim();\n-        assertEquals(\"subset of tokens \"\n-                        + CheckUtil.getTokenText(check.getAcceptableTokens(),\n-                check.getRequiredTokens()),\n-                acceptableTokenText\n+        String expectedAcceptableTokenText = \"subset of tokens \"\n+                + CheckUtil.getTokenText(check.getAcceptableTokens(),\n+                check.getRequiredTokens());\n+        if (\"DescendantToken\".equals(sectionName)) {", "originalCommit": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2OTAxOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485169019", "bodyText": "But DescendantTokenCheck will satisfy that tokens.size() != TokenUtil.getAllTokenIds().length, and the test will fail. tokens.size() is zero.", "author": "gaurabdg", "createdAt": "2020-09-08T20:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTU3Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485345577", "bodyText": "check.getRequiredTokens() is empty for Check. getAcceptableTokens are all tokens. So tokens will be all tokens.\nAm I miss something?", "author": "romani", "createdAt": "2020-09-09T05:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NTM3Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485665372", "bodyText": "fixed.\nOne logic miss hardcode ... new problem was found and fixed.", "author": "romani", "createdAt": "2020-09-09T14:39:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDA1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "659efe2b62ee72988ba1203e9b0c25cedd6c6e12", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\nindex f8637f655..8179fecd5 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\n\n@@ -882,7 +882,7 @@ public class XdocsPagesTest {\n                 + CheckUtil.getTokenText(check.getAcceptableTokens(),\n                 check.getRequiredTokens());\n         if (\"DescendantToken\".equals(sectionName)) {\n-            expectedAcceptableTokenText = \"all tokens allTokenTypes\";\n+            expectedAcceptableTokenText = \"set of any supported tokens\";\n         }\n         assertEquals(expectedAcceptableTokenText, acceptableTokenText\n                         .replaceAll(\"\\\\s+\", \" \")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590497", "bodyText": "|| acceptableTokens.size() == TOKEN_TYPE_TOTAL_COUNT)\nbut why we need this condition, Arrays.equals will never be true.\nPlease remove.", "author": "romani", "createdAt": "2020-09-08T00:08:10Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java", "diffHunk": "@@ -745,7 +745,8 @@ else if (AbstractCheck.class.isAssignableFrom(clss)) {\n             Arrays.sort(requiredTokens);\n \n             if (!Arrays.equals(acceptableTokens, defaultTokens)\n-                    || !Arrays.equals(acceptableTokens, requiredTokens)) {\n+                    || !Arrays.equals(acceptableTokens, requiredTokens)\n+                    || \"DescendantToken\".equals(sectionName)) {", "originalCommit": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3MDU1MA==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485170550", "bodyText": "Why not? both acceptableTokens and defaultTokens is empty for DescendantTokenCheck, it is an exception for all the cases.", "author": "gaurabdg", "createdAt": "2020-09-08T20:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NDMyNA==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485344324", "bodyText": "checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java\n    \n    \n         Line 477\n      in\n      3686c0f\n    \n    \n    \n    \n\n        \n          \n           public int[] getAcceptableTokens() { \n        \n    \n  \n\n\nacceptableTokens is not empty.", "author": "romani", "createdAt": "2020-09-09T05:20:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2NTQ5MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485665491", "bodyText": "fixed.", "author": "romani", "createdAt": "2020-09-09T14:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDQ5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "02499152d1f51f99a26b262d89de0a0733705daa", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\nindex f8637f655..871a4dd61 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java\n\n@@ -745,8 +745,7 @@ public class XdocsPagesTest {\n             Arrays.sort(requiredTokens);\n \n             if (!Arrays.equals(acceptableTokens, defaultTokens)\n-                    || !Arrays.equals(acceptableTokens, requiredTokens)\n-                    || \"DescendantToken\".equals(sectionName)) {\n+                    || !Arrays.equals(acceptableTokens, requiredTokens)) {\n                 properties.add(\"tokens\");\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDYwMg==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590602", "bodyText": "set of any tokens is more logical, sorry for confusion from the beginning.", "author": "romani", "createdAt": "2020-09-08T00:09:12Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -317,32 +317,28 @@ private static String createPropertiesText() {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isPropertyTokenType = propertyType.contains(\"subset of tokens\")\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");", "originalCommit": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3Njc0Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485176742", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-09-08T20:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDYwMg=="}], "type": "inlineReview", "revised_code": {"commit": "659efe2b62ee72988ba1203e9b0c25cedd6c6e12", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\nindex c27698782..127c0ce05 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n\n@@ -317,7 +317,7 @@ public class XdocsJavaDocsTest extends AbstractModuleTestSupport {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"set of any supported\");\n             final boolean isPropertyTokenType = isSpecialAllTokensType\n                     || propertyType.contains(\"subset of tokens\")\n                     || propertyType.contains(\"subset of javadoc tokens\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDg4Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r484590882", "bodyText": "anyTokenTypesSet", "author": "romani", "createdAt": "2020-09-08T00:11:06Z", "path": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java", "diffHunk": "@@ -317,32 +317,28 @@ private static String createPropertiesText() {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isPropertyTokenType = propertyType.contains(\"subset of tokens\")\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");\n+            final boolean isPropertyTokenType = isSpecialAllTokensType\n+                    || propertyType.contains(\"subset of tokens\")\n                     || propertyType.contains(\"subset of javadoc tokens\");\n             if (!isPropertyTokenType) {\n-                final Node typeNode;\n-                if (property.get(2).getFirstChild().getFirstChild() == null) {\n-                    typeNode = property.get(2).getFirstChild().getNextSibling();\n-                }\n-                else {\n-                    typeNode = property.get(2).getFirstChild().getFirstChild();\n-                }\n-                final String typeName = typeNode.getTextContent().trim();\n+                final String typeName =\n+                        getCorrectNodeBasedOnPropertyType(property).getTextContent().trim();\n                 typeText = FULLY_QUALIFIED_CLASS_NAMES.get(typeName).getTypeName();\n             }\n+            if (isSpecialAllTokensType) {\n+                typeText = \"allTokenTypes\";", "originalCommit": "73fec1002de45fb85cb33f7ef597ce4cdf1ec0de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE3Njc4OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/8804#discussion_r485176789", "bodyText": "Done", "author": "gaurabdg", "createdAt": "2020-09-08T20:26:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU5MDg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "659efe2b62ee72988ba1203e9b0c25cedd6c6e12", "chunk": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\nindex c27698782..127c0ce05 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n\n@@ -317,7 +317,7 @@ public class XdocsJavaDocsTest extends AbstractModuleTestSupport {\n \n             String typeText = \"java.lang.String[]\";\n             final String propertyType = property.get(2).getTextContent();\n-            final boolean isSpecialAllTokensType = propertyType.contains(\"all tokens\");\n+            final boolean isSpecialAllTokensType = propertyType.contains(\"set of any supported\");\n             final boolean isPropertyTokenType = isSpecialAllTokensType\n                     || propertyType.contains(\"subset of tokens\")\n                     || propertyType.contains(\"subset of javadoc tokens\");\n"}}, {"oid": "659efe2b62ee72988ba1203e9b0c25cedd6c6e12", "url": "https://github.com/checkstyle/checkstyle/commit/659efe2b62ee72988ba1203e9b0c25cedd6c6e12", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-08T20:22:36Z", "type": "forcePushed"}, {"oid": "02499152d1f51f99a26b262d89de0a0733705daa", "url": "https://github.com/checkstyle/checkstyle/commit/02499152d1f51f99a26b262d89de0a0733705daa", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-09T14:38:02Z", "type": "forcePushed"}, {"oid": "778173ece277c1b657c28628ebf6274b46960b83", "url": "https://github.com/checkstyle/checkstyle/commit/778173ece277c1b657c28628ebf6274b46960b83", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-09T14:41:09Z", "type": "forcePushed"}, {"oid": "41d977719a239f580b5519b5c5aca7cf5dab7fe6", "url": "https://github.com/checkstyle/checkstyle/commit/41d977719a239f580b5519b5c5aca7cf5dab7fe6", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-09T14:43:53Z", "type": "forcePushed"}, {"oid": "ddb547a9c3e5e251459d63f85469fd09a4af627d", "url": "https://github.com/checkstyle/checkstyle/commit/ddb547a9c3e5e251459d63f85469fd09a4af627d", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-09T20:32:12Z", "type": "commit"}, {"oid": "ddb547a9c3e5e251459d63f85469fd09a4af627d", "url": "https://github.com/checkstyle/checkstyle/commit/ddb547a9c3e5e251459d63f85469fd09a4af627d", "message": "Issue #8801: Support for all Token Types as a Property Type for Module Metadata", "committedDate": "2020-09-09T20:32:12Z", "type": "forcePushed"}]}