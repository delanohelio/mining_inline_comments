{"pr_number": 7820, "pr_title": "Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride", "pr_createdAt": "2020-03-10T15:59:31Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7820", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDMzOQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390774339", "bodyText": "lcurly should be on previous line", "author": "strkkk", "createdAt": "2020-03-11T06:54:16Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideClass.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package org.checkstyle.suppressionxpathfilter.missingoverride;\n+\n+public class SuppressionXpathRegressionMissingOverrideClass {\n+    /**\n+     * {@inheritDoc}\n+     */\n+    public boolean equals(Object obj) // warn\n+    {", "originalCommit": "1d6b5a9c6a1b29cad56d221d2ae88e4e5965e312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMTA4Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390911082", "bodyText": "ok, done", "author": "HuGanghui", "createdAt": "2020-03-11T11:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideClass.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideClass.java\nindex 8db240306..4105a6589 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideClass.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideClass.java\n\n@@ -4,8 +4,7 @@ public class SuppressionXpathRegressionMissingOverrideClass {\n     /**\n      * {@inheritDoc}\n      */\n-    public boolean equals(Object obj) // warn\n-    {\n+    public boolean equals(Object obj) { // warn\n         return false;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDQ1Ng==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390774456", "bodyText": "* */ extra asterisk", "author": "strkkk", "createdAt": "2020-03-11T06:54:47Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid1.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.checkstyle.suppressionxpathfilter.missingoverride;\n+\n+public class SuppressionXpathRegressionMissingOverrideInheritDocInvalid1 {\n+    /**\n+     * {@inheritDoc}\n+     * */", "originalCommit": "1d6b5a9c6a1b29cad56d221d2ae88e4e5965e312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMTExNQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390911115", "bodyText": "done", "author": "HuGanghui", "createdAt": "2020-03-11T11:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDQ1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid1.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid1.java\nindex bacf4b52c..f946a95f5 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid1.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid1.java\n\n@@ -3,7 +3,7 @@ package org.checkstyle.suppressionxpathfilter.missingoverride;\n public class SuppressionXpathRegressionMissingOverrideInheritDocInvalid1 {\n     /**\n      * {@inheritDoc}\n-     * */\n+     */\n     private void test() { // warn\n \n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDUxMg==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390774512", "bodyText": "here too", "author": "strkkk", "createdAt": "2020-03-11T06:54:58Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.checkstyle.suppressionxpathfilter.missingoverride;\n+\n+public class SuppressionXpathRegressionMissingOverrideInheritDocInvalid2 {\n+    /**\n+     * {@inheritDoc}\n+     * */", "originalCommit": "1d6b5a9c6a1b29cad56d221d2ae88e4e5965e312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMTE0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390911147", "bodyText": "done", "author": "HuGanghui", "createdAt": "2020-03-11T11:37:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDUxMg=="}], "type": "inlineReview", "revised_code": {"commit": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\nindex 9c0c0a754..283ce5dff 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\n\n@@ -3,8 +3,8 @@ package org.checkstyle.suppressionxpathfilter.missingoverride;\n public class SuppressionXpathRegressionMissingOverrideInheritDocInvalid2 {\n     /**\n      * {@inheritDoc}\n-     * */\n-    public static void test(){ // warn\n+     */\n+    public static void test() { // warn\n \n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDU4Mg==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390774582", "bodyText": "test(){ -> test() {", "author": "strkkk", "createdAt": "2020-03-11T06:55:13Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.checkstyle.suppressionxpathfilter.missingoverride;\n+\n+public class SuppressionXpathRegressionMissingOverrideInheritDocInvalid2 {\n+    /**\n+     * {@inheritDoc}\n+     * */\n+    public static void test(){ // warn", "originalCommit": "1d6b5a9c6a1b29cad56d221d2ae88e4e5965e312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMTE5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390911195", "bodyText": "done", "author": "HuGanghui", "createdAt": "2020-03-11T11:37:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDU4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\nindex 9c0c0a754..283ce5dff 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\n\n@@ -3,8 +3,8 @@ package org.checkstyle.suppressionxpathfilter.missingoverride;\n public class SuppressionXpathRegressionMissingOverrideInheritDocInvalid2 {\n     /**\n      * {@inheritDoc}\n-     * */\n-    public static void test(){ // warn\n+     */\n+    public static void test() { // warn\n \n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDc5NQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390774795", "bodyText": "here javadoc is single-line, in other inputs it is multiline.\nIs there some reason for it?", "author": "strkkk", "createdAt": "2020-03-11T06:55:52Z", "path": "src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideAnonymous.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package org.checkstyle.suppressionxpathfilter.missingoverride;\n+\n+public class SuppressionXpathRegressionMissingOverrideAnonymous {\n+    Runnable r = new Runnable() {\n+\n+        /** {@inheritDoc} */", "originalCommit": "1d6b5a9c6a1b29cad56d221d2ae88e4e5965e312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMjQ2OQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390912469", "bodyText": "sorry, no some reason, just a small oversight", "author": "HuGanghui", "createdAt": "2020-03-11T11:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDc5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMjUxOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390912518", "bodyText": "done", "author": "HuGanghui", "createdAt": "2020-03-11T11:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NDc5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "chunk": "diff --git a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideAnonymous.java b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideAnonymous.java\nindex 216c32b52..8c9b87509 100644\n--- a/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideAnonymous.java\n+++ b/src/it/resources/org/checkstyle/suppressionxpathfilter/missingoverride/SuppressionXpathRegressionMissingOverrideAnonymous.java\n\n@@ -2,8 +2,9 @@ package org.checkstyle.suppressionxpathfilter.missingoverride;\n \n public class SuppressionXpathRegressionMissingOverrideAnonymous {\n     Runnable r = new Runnable() {\n-\n-        /** {@inheritDoc} */\n+        /**\n+         * {@inheritDoc}\n+         */\n         public void run() { // warn\n \n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NTQzMQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390775431", "bodyText": "It would be nice to have test with javaFiveCompatibility property set to true", "author": "strkkk", "createdAt": "2020-03-11T06:58:11Z", "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionMissingOverrideTest.java", "diffHunk": "@@ -0,0 +1,198 @@\n+////////////////////////////////////////////////////////////////////////////////\n+// checkstyle: Checks Java source code for adherence to a set of rules.\n+// Copyright (C) 2001-2020 the original author or authors.\n+//\n+// This library is free software; you can redistribute it and/or\n+// modify it under the terms of the GNU Lesser General Public\n+// License as published by the Free Software Foundation; either\n+// version 2.1 of the License, or (at your option) any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+// You should have received a copy of the GNU Lesser General Public\n+// License along with this library; if not, write to the Free Software\n+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+////////////////////////////////////////////////////////////////////////////////\n+\n+package org.checkstyle.suppressionxpathfilter;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n+import com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck;\n+\n+public class XpathRegressionMissingOverrideTest extends AbstractXpathTestSupport {\n+\n+    private final String checkName = MissingOverrideCheck.class.getSimpleName();\n+\n+    @Override\n+    protected String getCheckName() {\n+        return checkName;\n+    }\n+\n+    @Test\n+    public void testClass() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionMissingOverrideClass.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(MissingOverrideCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"7:5: \" + getCheckMessage(MissingOverrideCheck.class,\n+                MissingOverrideCheck.MSG_KEY_ANNOTATION_MISSING_OVERRIDE),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionMissingOverrideClass']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='equals']]\",\n+                \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionMissingOverrideClass']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='equals']]/MODIFIERS\",\n+                \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionMissingOverrideClass']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='equals']]/MODIFIERS/LITERAL_PUBLIC\"\n+\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+\n+    }\n+\n+    @Test\n+    public void testInterface() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionMissingOverrideInterface.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(MissingOverrideCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"7:5: \" + getCheckMessage(MissingOverrideCheck.class,\n+                MissingOverrideCheck.MSG_KEY_ANNOTATION_MISSING_OVERRIDE),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/INTERFACE_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInterface']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]\",\n+                \"/INTERFACE_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInterface']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/MODIFIERS\",\n+                \"/INTERFACE_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInterface']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/TYPE\",\n+                \"/INTERFACE_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInterface']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/TYPE/LITERAL_BOOLEAN\"\n+\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+\n+    }\n+\n+    @Test\n+    public void testAnonymous() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionMissingOverrideAnonymous.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(MissingOverrideCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"7:9: \" + getCheckMessage(MissingOverrideCheck.class,\n+                MissingOverrideCheck.MSG_KEY_ANNOTATION_MISSING_OVERRIDE),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideAnonymous']]\"\n+                        + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='r']]/ASSIGN/EXPR/\"\n+                        + \"LITERAL_NEW[./IDENT[@text='Runnable']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='run']]\",\n+                \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionMissingOverrideAnonymous']]\"\n+                        + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='r']]/ASSIGN/EXPR/\"\n+                        + \"LITERAL_NEW[./IDENT[@text='Runnable']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='run']]/MODIFIERS\",\n+                \"/CLASS_DEF[./IDENT[@text='SuppressionXpathRegressionMissingOverrideAnonymous']]\"\n+                        + \"/OBJBLOCK/VARIABLE_DEF[./IDENT[@text='r']]/ASSIGN/EXPR/\"\n+                        + \"LITERAL_NEW[./IDENT[@text='Runnable']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='run']]/MODIFIERS/LITERAL_PUBLIC\"\n+\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+\n+    }\n+\n+    @Test\n+    public void testInheritDocInvalid1() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionMissingOverrideInheritDocInvalid1.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(MissingOverrideCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"7:5: \" + getCheckMessage(MissingOverrideCheck.class,\n+                MissingOverrideCheck.MSG_KEY_TAG_NOT_VALID_ON, \"{@inheritDoc}\"),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInheritDocInvalid1']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]\",\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInheritDocInvalid1']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/MODIFIERS\",\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInheritDocInvalid1']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/MODIFIERS/LITERAL_PRIVATE\"\n+\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+\n+    }\n+\n+    @Test\n+    public void testInheritDocInvalid2() throws Exception {\n+        final File fileToProcess = new File(getPath(\n+                \"SuppressionXpathRegressionMissingOverrideInheritDocInvalid2.java\"));\n+\n+        final DefaultConfiguration moduleConfig =\n+                createModuleConfig(MissingOverrideCheck.class);\n+\n+        final String[] expectedViolation = {\n+            \"7:5: \" + getCheckMessage(MissingOverrideCheck.class,\n+                MissingOverrideCheck.MSG_KEY_TAG_NOT_VALID_ON, \"{@inheritDoc}\"),\n+        };\n+\n+        final List<String> expectedXpathQueries = Arrays.asList(\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInheritDocInvalid2']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]\",\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInheritDocInvalid2']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/MODIFIERS\",\n+                \"/CLASS_DEF[./IDENT\"\n+                        + \"[@text='SuppressionXpathRegressionMissingOverrideInheritDocInvalid2']]\"\n+                        + \"/OBJBLOCK/METHOD_DEF[./IDENT[@text='test']]/MODIFIERS/LITERAL_PUBLIC\"\n+\n+        );\n+\n+        runVerifications(moduleConfig, fileToProcess, expectedViolation,\n+                expectedXpathQueries);\n+\n+    }", "originalCommit": "1d6b5a9c6a1b29cad56d221d2ae88e4e5965e312", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMjU1Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7820#discussion_r390912557", "bodyText": "done", "author": "HuGanghui", "createdAt": "2020-03-11T11:39:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc3NTQzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "chunk": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionMissingOverrideTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionMissingOverrideTest.java\nindex dcb2838f2..d47a14d3a 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionMissingOverrideTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionMissingOverrideTest.java\n\n@@ -108,7 +108,7 @@ public class XpathRegressionMissingOverrideTest extends AbstractXpathTestSupport\n                 createModuleConfig(MissingOverrideCheck.class);\n \n         final String[] expectedViolation = {\n-            \"7:9: \" + getCheckMessage(MissingOverrideCheck.class,\n+            \"8:9: \" + getCheckMessage(MissingOverrideCheck.class,\n                 MissingOverrideCheck.MSG_KEY_ANNOTATION_MISSING_OVERRIDE),\n         };\n \n"}}, {"oid": "45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "url": "https://github.com/checkstyle/checkstyle/commit/45f0acbf8e78ee1fe1aca57545dc8c6dda6bf483", "message": "Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride", "committedDate": "2020-03-11T11:35:50Z", "type": "forcePushed"}, {"oid": "f705967383b95cbffd17cf93704b600dc99c6787", "url": "https://github.com/checkstyle/checkstyle/commit/f705967383b95cbffd17cf93704b600dc99c6787", "message": "Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride", "committedDate": "2020-03-13T10:09:03Z", "type": "commit"}, {"oid": "f705967383b95cbffd17cf93704b600dc99c6787", "url": "https://github.com/checkstyle/checkstyle/commit/f705967383b95cbffd17cf93704b600dc99c6787", "message": "Issue #7748: Update AbstractChecks to log DetailAST - MissingOverride", "committedDate": "2020-03-13T10:09:03Z", "type": "forcePushed"}]}