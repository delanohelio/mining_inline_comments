{"pr_number": 7536, "pr_title": "Issue #6104: fix GenericWhitespaceCheck for ctor calls", "pr_createdAt": "2020-02-06T02:46:51Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7536", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyODI0OA==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r376928248", "bodyText": "Please mark these lines with the // violation comment.", "author": "pbludov", "createdAt": "2020-02-10T08:50:25Z", "path": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/genericwhitespace/InputGenericWhitespaceDefault.java", "diffHunk": "@@ -77,5 +77,9 @@ public void beforeAndAfter() {\n         Map<Class<?>, Integer> a = new HashMap<Class<?>, Integer>();\n         Map<Class<?>, Integer> b = (Map<Class<?>, Integer>) a;\n     }\n+    Object ok = new <String>Object();\n+    Object notOkStart = new<String>Object();", "originalCommit": "888dc6dae13b1b764af48c516792bd650f6d5411", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzNDIyOA==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r376934228", "bodyText": "done", "author": "strkkk", "createdAt": "2020-02-10T09:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyODI0OA=="}], "type": "inlineReview", "revised_code": {"commit": "588c8d535cca2ae30da6dbf067675a95544208cd", "chunk": "diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/genericwhitespace/InputGenericWhitespaceDefault.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/genericwhitespace/InputGenericWhitespaceDefault.java\nindex 5a8060381..7d01c17e5 100644\n--- a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/genericwhitespace/InputGenericWhitespaceDefault.java\n+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/whitespace/genericwhitespace/InputGenericWhitespaceDefault.java\n\n@@ -78,8 +78,8 @@ Integer> x = new ArrayList<Integer\n         Map<Class<?>, Integer> b = (Map<Class<?>, Integer>) a;\n     }\n     Object ok = new <String>Object();\n-    Object notOkStart = new<String>Object();\n-    Object notOkEnd = new <String> Object();\n-    Object notOkStartAndEnd = new<String> Object();\n+    Object notOkStart = new<String>Object(); // violation\n+    Object notOkEnd = new <String> Object(); // violation\n+    Object notOkStartAndEnd = new<String> Object(); // violation\n }\n interface SupplierFunction<T> extends Map<List<T>, T> {}\n"}}, {"oid": "588c8d535cca2ae30da6dbf067675a95544208cd", "url": "https://github.com/checkstyle/checkstyle/commit/588c8d535cca2ae30da6dbf067675a95544208cd", "message": "Issue #6104: fix GenericWhitespaceCheck for ctor calls", "committedDate": "2020-02-10T09:03:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE3MTc0NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r377171744", "bodyText": "When is it not identifier?\nAnd does this cover things like new OuterClass.InnerClass() or new package.Class().", "author": "rnveach", "createdAt": "2020-02-10T16:27:58Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "diffHunk": "@@ -229,6 +229,16 @@ else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n         }\n     }\n \n+    /**\n+     * Checks if generic is before constructor invocation.\n+     * @param ast ast\n+     * @return true if generic before a constructor invocation\n+     */\n+    private static boolean isGenericBeforeCtor(DetailAST ast) {\n+        return ast.getParent().getParent().getType() == TokenTypes.LITERAL_NEW\n+                && ast.getParent().getNextSibling().getType() == TokenTypes.IDENT;", "originalCommit": "588c8d535cca2ae30da6dbf067675a95544208cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5Mjg0NA==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r377192844", "bodyText": "It is not identifier in cases like new ArrayList<String>()", "author": "strkkk", "createdAt": "2020-02-10T17:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE3MTc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyMjA0Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r377522047", "bodyText": "Done\nI added test cases and code changes to detect static classes and package", "author": "strkkk", "createdAt": "2020-02-11T09:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE3MTc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "189849ba6dda1ccbe1e37656d461c0c90d139e6a", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java\nindex 08a103341..e9582832c 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java\n\n@@ -235,8 +233,10 @@ public class GenericWhitespaceCheck extends AbstractCheck {\n      * @return true if generic before a constructor invocation\n      */\n     private static boolean isGenericBeforeCtor(DetailAST ast) {\n-        return ast.getParent().getParent().getType() == TokenTypes.LITERAL_NEW\n-                && ast.getParent().getNextSibling().getType() == TokenTypes.IDENT;\n+        final DetailAST parent = ast.getParent();\n+        return parent.getParent().getType() == TokenTypes.LITERAL_NEW\n+                && (parent.getNextSibling().getType() == TokenTypes.IDENT\n+                    || parent.getNextSibling().getType() == TokenTypes.DOT);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5MjI3Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r377192277", "bodyText": "Please remove upper comment completely.\nIt now becomes a bit misleading.\nPlease update doc https://checkstyle.org/config_whitespace.html#GenericWhitespace at description to make it\n- should not be preceded with whitespace when it is precede method name or constructor\n- should not be preceded with whitespace when following type name.\n\nAnd\nshould be followed with whitespace in almost all cases, except diamond operators and when preceding method name or contructor.\n\nPlease add example of correct ctor to Examples with correct spacing: under example for method", "author": "romani", "createdAt": "2020-02-10T17:00:51Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "diffHunk": "@@ -219,7 +219,7 @@ private void processSingleGeneric(DetailAST ast, String line, int after) {\n         //    Collections.<Object>emptySet();\n         //                        ^\n         //                        +--- whitespace not allowed\n-        if (isGenericBeforeMethod(ast)) {\n+        if (isGenericBeforeMethod(ast) || isGenericBeforeCtor(ast)) {", "originalCommit": "588c8d535cca2ae30da6dbf067675a95544208cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyMjEyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7536#discussion_r377522120", "bodyText": "Done", "author": "strkkk", "createdAt": "2020-02-11T09:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5MjI3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "189849ba6dda1ccbe1e37656d461c0c90d139e6a", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java\nindex 08a103341..e9582832c 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java\n\n@@ -214,11 +217,6 @@ public class GenericWhitespaceCheck extends AbstractCheck {\n      */\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter = line.charAt(after);\n-\n-        // Need to handle a number of cases. First is:\n-        //    Collections.<Object>emptySet();\n-        //                        ^\n-        //                        +--- whitespace not allowed\n         if (isGenericBeforeMethod(ast) || isGenericBeforeCtor(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n                 log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n"}}, {"oid": "189849ba6dda1ccbe1e37656d461c0c90d139e6a", "url": "https://github.com/checkstyle/checkstyle/commit/189849ba6dda1ccbe1e37656d461c0c90d139e6a", "message": "Issue #6104: fix GenericWhitespaceCheck for ctor calls", "committedDate": "2020-02-11T08:31:15Z", "type": "forcePushed"}, {"oid": "59c4186c60b6886bdfdbc65e7f7c781676b9537f", "url": "https://github.com/checkstyle/checkstyle/commit/59c4186c60b6886bdfdbc65e7f7c781676b9537f", "message": "Issue #6104: fix GenericWhitespaceCheck for ctor calls", "committedDate": "2020-02-11T09:00:42Z", "type": "commit"}, {"oid": "59c4186c60b6886bdfdbc65e7f7c781676b9537f", "url": "https://github.com/checkstyle/checkstyle/commit/59c4186c60b6886bdfdbc65e7f7c781676b9537f", "message": "Issue #6104: fix GenericWhitespaceCheck for ctor calls", "committedDate": "2020-02-11T09:00:42Z", "type": "forcePushed"}]}