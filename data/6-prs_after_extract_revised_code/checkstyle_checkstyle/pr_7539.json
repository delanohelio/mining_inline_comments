{"pr_number": 7539, "pr_title": "Issue #5832: add javadoc and xdoc Example for ParameterName", "pr_createdAt": "2020-02-08T07:07:21Z", "pr_url": "https://github.com/checkstyle/checkstyle/pull/7539", "timeline": [{"oid": "d355473dfea2354e31a4c4bb18da93315af34381", "url": "https://github.com/checkstyle/checkstyle/commit/d355473dfea2354e31a4c4bb18da93315af34381", "message": "Issue #5832: add javadoc and xdoc Example for ParameterName", "committedDate": "2020-02-08T07:22:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMDgxMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7539#discussion_r376720810", "bodyText": "@0blivious , why you escaping quotes ?\nit is ok, but it works now well for javadoc and website , the less quotes the better to my mind .", "author": "romani", "createdAt": "2020-02-08T16:59:31Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "diffHunk": "@@ -67,53 +67,97 @@\n  * An example of how to configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n+ * }\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n  * a lower case letter, followed by letters, digits, and underscores:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z][_a-zA-Z0-9]+$\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;", "originalCommit": "d355473dfea2354e31a4c4bb18da93315af34381", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMTk3MQ==", "url": "https://github.com/checkstyle/checkstyle/pull/7539#discussion_r376721971", "bodyText": "This was going on in the other PRs as well. If we wish to enforce one over the other, than we should add it as part of a UT or checkstyle.", "author": "rnveach", "createdAt": "2020-02-08T17:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMDgxMA=="}], "type": "inlineReview", "revised_code": {"commit": "9a94273ff52d1c171b306c5a5ef694159eb218ba", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\nindex b58305186..58d8f303f 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\n\n@@ -108,7 +108,9 @@ import com.puppycrawl.tools.checkstyle.utils.ScopeUtil;\n  *   void method1(int v1) {} // OK\n  *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n  *   &#064;Override\n- *   void method3(int V3) {} // OK\n+ *   public boolean equals(Object obj) { // OK\n+ *       return true;\n+ *   }\n  * }\n  * </pre>\n  * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczNDU1Mw==", "url": "https://github.com/checkstyle/checkstyle/pull/7539#discussion_r376734553", "bodyText": "How is this an overridden method?", "author": "rnveach", "createdAt": "2020-02-08T21:08:46Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "diffHunk": "@@ -67,53 +67,97 @@\n  * An example of how to configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n+ * }\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n  * a lower case letter, followed by letters, digits, and underscores:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z][_a-zA-Z0-9]+$\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z][_a-zA-Z0-9]+$&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int v_2) {} // OK\n+ *   void method3(int V3) {} // violation, name 'V3' must match pattern '^[a-z][_a-zA-Z0-9]+$'\n+ * }\n+ * </pre>\n  * <p>\n  * An example of how to configure the check to skip methods with Override annotation from\n  * validation:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"ignoreOverridden\" value=\"true\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;\n+ *   &lt;property name=&quot;ignoreOverridden&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *   &#064;Override\n+ *   void method3(int V3) {} // OK", "originalCommit": "d355473dfea2354e31a4c4bb18da93315af34381", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MjQzNA==", "url": "https://github.com/checkstyle/checkstyle/pull/7539#discussion_r376742434", "bodyText": "Please use some name of Object class", "author": "romani", "createdAt": "2020-02-08T23:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczNDU1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9a94273ff52d1c171b306c5a5ef694159eb218ba", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\nindex b58305186..58d8f303f 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\n\n@@ -108,7 +108,9 @@ import com.puppycrawl.tools.checkstyle.utils.ScopeUtil;\n  *   void method1(int v1) {} // OK\n  *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n  *   &#064;Override\n- *   void method3(int V3) {} // OK\n+ *   public boolean equals(Object obj) { // OK\n+ *       return true;\n+ *   }\n  * }\n  * </pre>\n  * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczNDcyMA==", "url": "https://github.com/checkstyle/checkstyle/pull/7539#discussion_r376734720", "bodyText": "@romani Do we really need message override? It is not in the description and the message is not that drastic different than the default.", "author": "rnveach", "createdAt": "2020-02-08T21:11:45Z", "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "diffHunk": "@@ -67,53 +67,97 @@\n  * An example of how to configure the check:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;/&gt;\n+ * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n+ * }\n  * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with\n  * a lower case letter, followed by letters, digits, and underscores:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z][_a-zA-Z0-9]+$\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z][_a-zA-Z0-9]+$&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int v_2) {} // OK\n+ *   void method3(int V3) {} // violation, name 'V3' must match pattern '^[a-z][_a-zA-Z0-9]+$'\n+ * }\n+ * </pre>\n  * <p>\n  * An example of how to configure the check to skip methods with Override annotation from\n  * validation:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"ignoreOverridden\" value=\"true\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;\n+ *   &lt;property name=&quot;ignoreOverridden&quot; value=&quot;true&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n+ *   &#064;Override\n+ *   void method3(int V3) {} // OK\n+ * }\n+ * </pre>\n  * <p>\n  * An example of how to configure the check for names that begin with a lower case letter, followed\n  * by letters and digits is:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z][a-zA-Z0-9]+$\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z][a-zA-Z0-9]+$&quot;/&gt;\n  * &lt;/module&gt;\n  * </pre>\n+ * <p>Code Example:</p>\n+ * <pre>\n+ * class MyClass {\n+ *   void method1(int v1) {} // OK\n+ *   void method2(int v_2) {} // violation, name 'v_2' must match pattern '^[a-z][a-zA-Z0-9]+$'\n+ *   void method3(int V3) {} // violation, name 'V3' must match pattern '^[a-z][a-zA-Z0-9]+$'\n+ * }\n+ * </pre>\n  * <p>\n  * The following configuration checks that the parameters always start with two lowercase\n  * characters and, in addition, that public method parameters cannot be one character long:\n  * </p>\n  * <pre>\n- * &lt;module name=\"ParameterName\"&gt;\n- *   &lt;property name=\"format\" value=\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/&gt;\n- *   &lt;property name=\"accessModifiers\" value=\"protected, package, private\"/&gt;\n- *   &lt;message key=\"name.invalidPattern\"\n- *     value=\"Parameter name ''{0}'' must match pattern ''{1}''\"/&gt;\n+ * &lt;module name=&quot;ParameterName&quot;&gt;\n+ *   &lt;property name=&quot;format&quot; value=&quot;^[a-z]([a-z0-9][a-zA-Z0-9]*)?$&quot;/&gt;\n+ *   &lt;property name=&quot;accessModifiers&quot;\n+ *     value=&quot;protected, package, private&quot;/&gt;\n+ *   &lt;message key=&quot;name.invalidPattern&quot;\n+ *     value=&quot;Parameter name ''{0}'' must match pattern ''{1}''&quot;/&gt;", "originalCommit": "d355473dfea2354e31a4c4bb18da93315af34381", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MzQ3Nw==", "url": "https://github.com/checkstyle/checkstyle/pull/7539#discussion_r376743477", "bodyText": "Let's keep it, not sure why it is there, Git history might able to answer.", "author": "romani", "createdAt": "2020-02-09T00:10:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczNDcyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9a94273ff52d1c171b306c5a5ef694159eb218ba", "chunk": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\nindex b58305186..58d8f303f 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java\n\n@@ -108,7 +108,9 @@ import com.puppycrawl.tools.checkstyle.utils.ScopeUtil;\n  *   void method1(int v1) {} // OK\n  *   void method2(int V2) {} // violation, name 'V2' must match pattern '^[a-z][a-zA-Z0-9]*$'\n  *   &#064;Override\n- *   void method3(int V3) {} // OK\n+ *   public boolean equals(Object obj) { // OK\n+ *       return true;\n+ *   }\n  * }\n  * </pre>\n  * <p>\n"}}, {"oid": "9a94273ff52d1c171b306c5a5ef694159eb218ba", "url": "https://github.com/checkstyle/checkstyle/commit/9a94273ff52d1c171b306c5a5ef694159eb218ba", "message": "Issue #5832: add javadoc and xdoc Example for ParameterName", "committedDate": "2020-02-10T07:53:03Z", "type": "forcePushed"}, {"oid": "ed955ab956213ca9c7ec8c214fbe74490fc3474a", "url": "https://github.com/checkstyle/checkstyle/commit/ed955ab956213ca9c7ec8c214fbe74490fc3474a", "message": "Issue #5832: add javadoc and xdoc Example for ParameterName", "committedDate": "2020-02-10T09:39:23Z", "type": "commit"}, {"oid": "ed955ab956213ca9c7ec8c214fbe74490fc3474a", "url": "https://github.com/checkstyle/checkstyle/commit/ed955ab956213ca9c7ec8c214fbe74490fc3474a", "message": "Issue #5832: add javadoc and xdoc Example for ParameterName", "committedDate": "2020-02-10T09:39:23Z", "type": "forcePushed"}]}