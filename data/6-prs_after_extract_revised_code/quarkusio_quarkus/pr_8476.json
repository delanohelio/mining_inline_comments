{"pr_number": 8476, "pr_title": "Adjust path of default cacerts depending on flavors of GraalVM", "pr_createdAt": "2020-04-08T15:35:01Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8476", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2OTgxNA==", "url": "https://github.com/quarkusio/quarkus/pull/8476#discussion_r405769814", "bodyText": "Since the only thing that changes is the Path, I'd just change that:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Path jdk8GraalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n          \n          \n            \n                            if (Files.exists(jdk8GraalVmCacertsPath)) {\n          \n          \n            \n                                sslTrustStoreSystemProperty\n          \n          \n            \n                                        .produce(new SslTrustStoreSystemPropertyBuildItem(jdk8GraalVmCacertsPath.toString()));\n          \n          \n            \n                            } else {\n          \n          \n            \n                                sslTrustStoreSystemProperty.produce(\n          \n          \n            \n                                        new SslTrustStoreSystemPropertyBuildItem(\n          \n          \n            \n                                                Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\").toString()));\n          \n          \n            \n                            }\n          \n          \n            \n                            Path graalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n          \n          \n            \n                            if (!Files.exists(graalVmCacertsPath)) {\n          \n          \n            \n                               graalVmCacertsPath = Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\");\n          \n          \n            \n                            }\n          \n          \n            \n                            // This is useful for testing but the user will have to override it.\n          \n          \n            \n                            sslTrustStoreSystemProperty.produce(new SslTrustStoreSystemPropertyBuildItem(graalVmCacertsPath.toString()));", "author": "gastaldi", "createdAt": "2020-04-08T19:43:35Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java", "diffHunk": "@@ -77,11 +78,18 @@ void build(SslContextConfigurationRecorder sslContextConfigurationRecorder,\n         Boolean sslNativeEnabled = isSslNativeEnabled(sslNativeConfig, extensionSslNativeSupport);\n         if (sslNativeEnabled) {\n             // This makes the native image dependent on the local path used to build it.\n+            // This is useful for testing but the user will have to override it.\n             String graalVmHome = System.getenv(\"GRAALVM_HOME\");\n             if (graalVmHome != null) {\n-                Path graalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n-                // This is useful for testing but the user will have to override it.\n-                sslTrustStoreSystemProperty.produce(new SslTrustStoreSystemPropertyBuildItem(graalVmCacertsPath.toString()));\n+                Path jdk8GraalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n+                if (Files.exists(jdk8GraalVmCacertsPath)) {\n+                    sslTrustStoreSystemProperty\n+                            .produce(new SslTrustStoreSystemPropertyBuildItem(jdk8GraalVmCacertsPath.toString()));\n+                } else {\n+                    sslTrustStoreSystemProperty.produce(\n+                            new SslTrustStoreSystemPropertyBuildItem(\n+                                    Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\").toString()));\n+                }", "originalCommit": "c618fa5514450e0ab7449e049aa3dbbb747581ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0MjQyMg==", "url": "https://github.com/quarkusio/quarkus/pull/8476#discussion_r406042422", "bodyText": "Next time I will just take my day off rather than trying to work :)\nDone, thanks!", "author": "gsmet", "createdAt": "2020-04-09T08:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2OTgxNA=="}], "type": "inlineReview", "revised_code": {"commit": "c50a8822c901408f2294d8b11ff3e04b9abc90db", "chunk": "diff --git a/core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java b/core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java\nindex 2588dd676c..7fac0136c6 100644\n--- a/core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java\n+++ b/core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java\n\n@@ -81,15 +81,14 @@ class NativeImageConfigBuildStep {\n             // This is useful for testing but the user will have to override it.\n             String graalVmHome = System.getenv(\"GRAALVM_HOME\");\n             if (graalVmHome != null) {\n-                Path jdk8GraalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n-                if (Files.exists(jdk8GraalVmCacertsPath)) {\n-                    sslTrustStoreSystemProperty\n-                            .produce(new SslTrustStoreSystemPropertyBuildItem(jdk8GraalVmCacertsPath.toString()));\n-                } else {\n-                    sslTrustStoreSystemProperty.produce(\n-                            new SslTrustStoreSystemPropertyBuildItem(\n-                                    Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\").toString()));\n+                // JDK 8 path\n+                Path graalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n+                if (!Files.exists(graalVmCacertsPath)) {\n+                    // Path starting with GraalVM JDK 11\n+                    graalVmCacertsPath = Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\");\n                 }\n+\n+                sslTrustStoreSystemProperty.produce(new SslTrustStoreSystemPropertyBuildItem(graalVmCacertsPath.toString()));\n             }\n         }\n         nativeImage.produce(new NativeImageSystemPropertyBuildItem(\"quarkus.ssl.native\", sslNativeEnabled.toString()));\n"}}, {"oid": "c50a8822c901408f2294d8b11ff3e04b9abc90db", "url": "https://github.com/quarkusio/quarkus/commit/c50a8822c901408f2294d8b11ff3e04b9abc90db", "message": "Adjust path of default cacerts depending on flavors of GraalVM", "committedDate": "2020-04-09T08:30:23Z", "type": "commit"}, {"oid": "c50a8822c901408f2294d8b11ff3e04b9abc90db", "url": "https://github.com/quarkusio/quarkus/commit/c50a8822c901408f2294d8b11ff3e04b9abc90db", "message": "Adjust path of default cacerts depending on flavors of GraalVM", "committedDate": "2020-04-09T08:30:23Z", "type": "forcePushed"}]}