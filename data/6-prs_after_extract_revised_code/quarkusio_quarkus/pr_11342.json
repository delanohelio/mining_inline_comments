{"pr_number": 11342, "pr_title": "Add Amazon Services transport truststore configuration", "pr_createdAt": "2020-08-12T09:45:15Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11342", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5Njk1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486496951", "bodyText": "Please add javadoc here explaining the purpose of this class", "author": "marcinczeczko", "createdAt": "2020-09-10T17:00:30Z", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {", "originalCommit": "dfedb5529a59f6544d1142f9137e413d3c78e108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0NDcwNw==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486844707", "bodyText": "Will do it.", "author": "antonwiens", "createdAt": "2020-09-11T08:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5Njk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "785dcf3d348a53cfdbb79c193b694b13ae9e3381", "chunk": "diff --git a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileStoreTlsTrustManagersProvider.java\nsimilarity index 79%\nrename from extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java\nrename to extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileStoreTlsTrustManagersProvider.java\nindex 5502427495..bb059c2b4f 100644\n--- a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java\n+++ b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileStoreTlsTrustManagersProvider.java\n\n@@ -17,13 +17,16 @@ import org.slf4j.LoggerFactory;\n \n import software.amazon.awssdk.http.TlsTrustManagersProvider;\n \n-public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {\n+/**\n+ * A TlsTrustManagersProvider for creating trustmanagers from a file-based truststore\n+ */\n+public class FileStoreTlsTrustManagersProvider implements TlsTrustManagersProvider {\n \n     private final Path path;\n     private final String type;\n     private final char[] password;\n \n-    public FileTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n+    public FileStoreTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n         path = fileStore.path.get();\n         type = fileStore.type.get();\n         password = fileStore.password.map(String::toCharArray).orElse(null);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMDM5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486500395", "bodyText": "Maybe it's safer to use platform default trustmanager algorithm via TrustManagerFactory.getDefaultAlgorithm() ?", "author": "marcinczeczko", "createdAt": "2020-09-10T17:06:24Z", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {\n+\n+    private final Path path;\n+    private final String type;\n+    private final char[] password;\n+\n+    public FileTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n+        path = fileStore.path.get();\n+        type = fileStore.type.get();\n+        password = fileStore.password.map(String::toCharArray).orElse(null);\n+    }\n+\n+    @Override\n+    public TrustManager[] trustManagers() {\n+        try (InputStream storeInputStream = Files.newInputStream(path)) {\n+            KeyStore keyStore = KeyStore.getInstance(type);\n+            keyStore.load(storeInputStream, password);\n+            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");", "originalCommit": "dfedb5529a59f6544d1142f9137e413d3c78e108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1OTExNA==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486859114", "bodyText": "Will do that.", "author": "antonwiens", "createdAt": "2020-09-11T08:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMDM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "785dcf3d348a53cfdbb79c193b694b13ae9e3381", "chunk": "diff --git a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileStoreTlsTrustManagersProvider.java\nsimilarity index 79%\nrename from extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java\nrename to extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileStoreTlsTrustManagersProvider.java\nindex 5502427495..bb059c2b4f 100644\n--- a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java\n+++ b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileStoreTlsTrustManagersProvider.java\n\n@@ -17,13 +17,16 @@ import org.slf4j.LoggerFactory;\n \n import software.amazon.awssdk.http.TlsTrustManagersProvider;\n \n-public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {\n+/**\n+ * A TlsTrustManagersProvider for creating trustmanagers from a file-based truststore\n+ */\n+public class FileStoreTlsTrustManagersProvider implements TlsTrustManagersProvider {\n \n     private final Path path;\n     private final String type;\n     private final char[] password;\n \n-    public FileTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n+    public FileStoreTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n         path = fileStore.path.get();\n         type = fileStore.type.get();\n         password = fileStore.password.map(String::toCharArray).orElse(null);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMTg4MA==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486501880", "bodyText": "Same here, please add some javadoc here", "author": "marcinczeczko", "createdAt": "2020-09-10T17:09:07Z", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.security.cert.X509Certificate;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class NoneTlsTrustManagersProvider implements TlsTrustManagersProvider {", "originalCommit": "dfedb5529a59f6544d1142f9137e413d3c78e108", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785dcf3d348a53cfdbb79c193b694b13ae9e3381", "chunk": "diff --git a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java\nindex c31b29de50..e4c0cf010c 100644\n--- a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java\n+++ b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java\n\n@@ -7,6 +7,9 @@ import javax.net.ssl.X509TrustManager;\n \n import software.amazon.awssdk.http.TlsTrustManagersProvider;\n \n+/**\n+ * A TlsTrustManagersProvider that creates a trustmanager trusting all certificates\n+ */\n public class NoneTlsTrustManagersProvider implements TlsTrustManagersProvider {\n     private static final NoneTlsTrustManagersProvider INSTANCE = new NoneTlsTrustManagersProvider();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMjkyMw==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486502923", "bodyText": "couple words explanations  (javadoc) would be usefull", "author": "marcinczeczko", "createdAt": "2020-09-10T17:10:52Z", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import javax.net.ssl.TrustManager;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class SystemPropertyTlsTrustManagersProvider implements TlsTrustManagersProvider {", "originalCommit": "dfedb5529a59f6544d1142f9137e413d3c78e108", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "785dcf3d348a53cfdbb79c193b694b13ae9e3381", "chunk": "diff --git a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java\nindex d28dd006e5..7292f5ce14 100644\n--- a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java\n+++ b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java\n\n@@ -4,15 +4,18 @@ import javax.net.ssl.TrustManager;\n \n import software.amazon.awssdk.http.TlsTrustManagersProvider;\n \n+/**\n+ * A TlsTrustManagersProvider for loading system default truststore configuration\n+ */\n public class SystemPropertyTlsTrustManagersProvider implements TlsTrustManagersProvider {\n-    private static final NoneTlsTrustManagersProvider INSTANCE = new NoneTlsTrustManagersProvider();\n+    private static final SystemPropertyTlsTrustManagersProvider INSTANCE = new SystemPropertyTlsTrustManagersProvider();\n \n     @Override\n     public TrustManager[] trustManagers() {\n         return null;\n     }\n \n-    public static NoneTlsTrustManagersProvider getInstance() {\n+    public static SystemPropertyTlsTrustManagersProvider getInstance() {\n         return INSTANCE;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzg0OA==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486503848", "bodyText": "maybe trust-all would be a better name, wdyt ?", "author": "marcinczeczko", "createdAt": "2020-09-10T17:12:17Z", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+@ConfigGroup\n+public class TlsTrustManagersProviderConfig {\n+\n+    // @formatter:off\n+    /**\n+     * TLS trust managers provider type.\n+     *\n+     * Available providers:\n+     *\n+     * * `insecure` - Use this provider if you don't want to validate the servers certificates.", "originalCommit": "dfedb5529a59f6544d1142f9137e413d3c78e108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1ODM5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486858399", "bodyText": "Trusting all certificates is generally a bad thing to do, thats why i choose a \"negative\" name. But i can change it to \"trust-all\" if you prefer it.", "author": "antonwiens", "createdAt": "2020-09-11T08:29:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkxNTk1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r500915955", "bodyText": "I'm a bit late to the party but let's go with trust-all. It's more consistent with the other parts of the code.", "author": "gsmet", "createdAt": "2020-10-07T10:48:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "71e563ee34920198918936d03eb9e61d0f0d0ca7", "chunk": "diff --git a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java\nindex 191e2e7f50..97f0f10150 100644\n--- a/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java\n+++ b/extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java\n\n@@ -12,7 +12,7 @@ public class TlsTrustManagersProviderConfig {\n      *\n      * Available providers:\n      *\n-     * * `insecure` - Use this provider if you don't want to validate the servers certificates.\n+     * * `trust-all` - Use this provider to disable the validation of servers certificates and therefor turst all server certificates.\n      * * `system-property` - Provider checks the standard `javax.net.ssl.keyStore`, `javax.net.ssl.keyStorePassword`, and\n      *                       `javax.net.ssl.keyStoreType` properties defined by the\n      *                        https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html[JSSE].\n"}}, {"oid": "785dcf3d348a53cfdbb79c193b694b13ae9e3381", "url": "https://github.com/quarkusio/quarkus/commit/785dcf3d348a53cfdbb79c193b694b13ae9e3381", "message": "use system default trustmanagerfactory algorithm", "committedDate": "2020-09-11T08:55:13Z", "type": "forcePushed"}, {"oid": "ad5a0866c55c28b94d759b18ccf159c7f26f171f", "url": "https://github.com/quarkusio/quarkus/commit/ad5a0866c55c28b94d759b18ccf159c7f26f171f", "message": "add seperate truststore config", "committedDate": "2020-09-18T22:04:50Z", "type": "commit"}, {"oid": "ad5a0866c55c28b94d759b18ccf159c7f26f171f", "url": "https://github.com/quarkusio/quarkus/commit/ad5a0866c55c28b94d759b18ccf159c7f26f171f", "message": "add seperate truststore config", "committedDate": "2020-09-18T22:04:50Z", "type": "forcePushed"}, {"oid": "71e563ee34920198918936d03eb9e61d0f0d0ca7", "url": "https://github.com/quarkusio/quarkus/commit/71e563ee34920198918936d03eb9e61d0f0d0ca7", "message": "rename TlsTrustManagersProviderType \"insecure\" to \"trust-all\"", "committedDate": "2020-10-07T12:01:02Z", "type": "commit"}]}