{"pr_number": 8572, "pr_title": "Replace kscript for the native cron report with jbang", "pr_createdAt": "2020-04-14T16:50:34Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8572", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5MjcwMw==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408292703", "bodyText": "Minor nitpick: this comment looks useless?", "author": "gsmet", "createdAt": "2020-04-14T16:59:22Z", "path": ".github/NativeBuildReport.java", "diffHunk": "@@ -0,0 +1,97 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+\n+//DEPS org.kohsuke:github-api:1.101\n+//DEPS info.picocli:picocli:4.2.0\n+\n+import org.kohsuke.github.*;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+import picocli.CommandLine.Parameters;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.concurrent.TimeUnit;\n+\n+@Command(name = \"report\", mixinStandardHelpOptions = true,\n+\t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")\n+class Report implements Runnable {\n+\n+\t@Option(names = \"token\", description = \"Github token to use when calling the Github API\")\n+\tprivate String token;\n+\n+\t@Option(names = \"status\", description = \"The status of the CI run\")\n+\tprivate String status;\n+\n+\t@Option(names = \"issueRepo\", description = \"The repository where the issue resides (i.e. quarkusio/quarkus)\")\n+\tprivate String issueRepo;\n+\n+\t@Option(names = \"issueNumber\", description = \"The issue to update\")\n+\tprivate Integer issueNumber;\n+\n+\t@Option(names = \"thisRepo\", description = \"The repository for which we are reporting the CI status\")\n+\tprivate String thisRepo;\n+\n+\t@Option(names = \"runId\", description = \"The ID of the Github Action run for  which we are reporting the CI status\")\n+\tprivate String runId;\n+\n+\t@Override\n+\tpublic void run() {\n+\t\ttry {\n+\t\t\tfinal boolean succeed = \"success\".equalsIgnoreCase(status);\n+\t\t\tif (\"cancelled\".equalsIgnoreCase(status)) {\n+\t\t\t\tSystem.out.println(\"Job status is `cancelled` - exiting\");\n+\t\t\t\tSystem.exit(0);\n+\t\t\t}\n+\n+\t\t\tSystem.out.println(String.format(\"The CI build had status %s.\", status));\n+\n+\t\t\tfinal GitHub github = new GitHubBuilder().withOAuthToken(token).build();\n+\t\t\tfinal GHRepository repository = github.getRepository(issueRepo);\n+\n+\t\t\tfinal GHIssue issue = repository.getIssue(issueNumber);\n+\t\t\tif (issue == null) {\n+\t\t\t\tSystem.out.println(String.format(\"Unable to find the issue %s in project %s\", issueNumber, issueRepo));\n+\t\t\t\tSystem.exit(-1);\n+\t\t\t} else {\n+\t\t\t\tSystem.out.println(String.format(\"Report issue found: %s - %s\", issue.getTitle(), issue.getHtmlUrl().toString()));\n+\t\t\t\tSystem.out.println(String.format(\"The issue is currently %s\", issue.getState().toString()));\n+\t\t\t}\n+\n+\t\t\tif (succeed) {\n+\t\t\t\tif (issue != null  && isOpen(issue)) {\n+\t\t\t\t\t// close issue with a comment\n+\t\t\t\t\tfinal GHIssueComment comment = issue.comment(String.format(\"Build fixed:\\n* Link to latest CI run: https://github.com/%s/actions/runs/%s\", thisRepo, runId));\n+\t\t\t\t\tissue.close();\n+\t\t\t\t\tSystem.out.println(String.format(\"Comment added on issue %s - %s, the issue has also been closed\", issue.getHtmlUrl().toString(), comment.getHtmlUrl().toString()));\n+\t\t\t\t} else {\n+\t\t\t\t\tSystem.out.println(\"Nothing to do - the build passed and the issue is already closed\");\n+\t\t\t\t}\n+\t\t\t} else  {\n+\t\t\t\tif (isOpen(issue)) {\n+\t\t\t\t\tfinal GHIssueComment comment = issue.comment(String.format(\"The build is still failing:\\n* Link to latest CI run: https://github.com/%s/actions/runs/%s\", thisRepo, runId));\n+\t\t\t\t\tSystem.out.println(String.format(\"Comment added on issue %s - %s\", issue.getHtmlUrl().toString(), comment.getHtmlUrl().toString()));\n+\t\t\t\t} else {\n+\t\t\t\t\tissue.reopen();\n+\t\t\t\t\tfinal GHIssueComment comment = issue.comment(String.format(\"Unfortunately, the build failed:\\n* Link to latest CI run: https://github.com/%s/actions/runs/%s\", thisRepo, runId));\n+\t\t\t\t\tSystem.out.println(String.format(\"Comment added on issue %s - %s, the issue has been re-opened\", issue.getHtmlUrl().toString(), comment.getHtmlUrl().toString()));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tcatch (IOException e) {\n+\t\t\tthrow new UncheckedIOException(e);\n+\t\t}\n+\t}\n+\n+\tprivate static boolean isOpen(GHIssue issue) {\n+\t\treturn (issue.getState() == GHIssueState.OPEN);\n+\t}\n+\n+\t// this example implements Callable, so parsing, error handling and handling user\n+\t// requests for usage help or version help can be done with one line of code.", "originalCommit": "e6292ae6742de3034648726cd4d3acfd4474de36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5NTcxNw==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408295717", "bodyText": "Oooops, fixed :)", "author": "geoand", "createdAt": "2020-04-14T17:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5MjcwMw=="}], "type": "inlineReview", "revised_code": {"commit": "c7fdfc0d0b3459e8264ac04994065272d4463211", "chunk": "diff --git a/.github/NativeBuildReport.java b/.github/NativeBuildReport.java\nindex 412e7c33de..89dc88db6e 100644\n--- a/.github/NativeBuildReport.java\n+++ b/.github/NativeBuildReport.java\n\n@@ -87,9 +87,7 @@ class Report implements Runnable {\n \tprivate static boolean isOpen(GHIssue issue) {\n \t\treturn (issue.getState() == GHIssueState.OPEN);\n \t}\n-\n-\t// this example implements Callable, so parsing, error handling and handling user\n-\t// requests for usage help or version help can be done with one line of code.\n+\t\n \tpublic static void main(String... args) {\n \t\tint exitCode = new CommandLine(new Report()).execute(args);\n \t\tSystem.exit(exitCode);\n"}}, {"oid": "c7fdfc0d0b3459e8264ac04994065272d4463211", "url": "https://github.com/quarkusio/quarkus/commit/c7fdfc0d0b3459e8264ac04994065272d4463211", "message": "Replace kscript for the native cron report with jbang\n\nAlso provide a deep link into the GH Action that run\n\nThis work was originally done for and tested with\nhttps://github.com/quarkusio/quarkus-ecosystem-ci", "committedDate": "2020-04-14T17:03:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxMzcwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408313705", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")\n          \n          \n            \n            \t\tdescription = \"Takes care of updating an issue depending on the status of the build\")", "author": "machi1990", "createdAt": "2020-04-14T17:33:05Z", "path": ".github/NativeBuildReport.java", "diffHunk": "@@ -0,0 +1,95 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+\n+//DEPS org.kohsuke:github-api:1.101\n+//DEPS info.picocli:picocli:4.2.0\n+\n+import org.kohsuke.github.*;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+import picocli.CommandLine.Parameters;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.concurrent.TimeUnit;\n+\n+@Command(name = \"report\", mixinStandardHelpOptions = true,\n+\t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")", "originalCommit": "c7fdfc0d0b3459e8264ac04994065272d4463211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxOTkzNw==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408319937", "bodyText": "Updated, thanks", "author": "geoand", "createdAt": "2020-04-14T17:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxMzcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "02df24696b85589100b1d471da144c028f0e1bf9", "chunk": "diff --git a/.github/NativeBuildReport.java b/.github/NativeBuildReport.java\nindex 89dc88db6e..6f0e6743d2 100644\n--- a/.github/NativeBuildReport.java\n+++ b/.github/NativeBuildReport.java\n\n@@ -15,7 +15,7 @@ import java.io.UncheckedIOException;\n import java.util.concurrent.TimeUnit;\n \n @Command(name = \"report\", mixinStandardHelpOptions = true,\n-\t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")\n+\t\tdescription = \"Takes care of updating the appropriate issue depending on the status of the build\")\n class Report implements Runnable {\n \n \t@Option(names = \"token\", description = \"Github token to use when calling the Github API\")\n"}}, {"oid": "02df24696b85589100b1d471da144c028f0e1bf9", "url": "https://github.com/quarkusio/quarkus/commit/02df24696b85589100b1d471da144c028f0e1bf9", "message": "Replace kscript for the native cron report with jbang\n\nAlso provide a deep link into the GH Action that run\n\nThis work was originally done for and tested with\nhttps://github.com/quarkusio/quarkus-ecosystem-ci", "committedDate": "2020-04-14T17:42:48Z", "type": "commit"}, {"oid": "02df24696b85589100b1d471da144c028f0e1bf9", "url": "https://github.com/quarkusio/quarkus/commit/02df24696b85589100b1d471da144c028f0e1bf9", "message": "Replace kscript for the native cron report with jbang\n\nAlso provide a deep link into the GH Action that run\n\nThis work was originally done for and tested with\nhttps://github.com/quarkusio/quarkus-ecosystem-ci", "committedDate": "2020-04-14T17:42:48Z", "type": "forcePushed"}]}