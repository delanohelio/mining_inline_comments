{"pr_number": 8933, "pr_title": "Allow extensions to configure Vertx", "pr_createdAt": "2020-04-29T01:07:33Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8933", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTQ3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8933#discussion_r417015473", "bodyText": "We try and avoid lambdas in runtime code, they are slower than normal for loops and use a lot more metaspace. It's not much taken individually, but if you have hundreds of places that are lambdas rather than for loops it uses significantly more memory.\nWe are less strict about deployment code, as it does not end up in the final application.", "author": "stuartwdouglas", "createdAt": "2020-04-29T01:11:12Z", "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/VertxCoreRecorder.java", "diffHunk": "@@ -318,18 +322,33 @@ public Integer get() {\n \n     static class VertxSupplier implements Supplier<Vertx> {\n         final VertxConfiguration config;\n+        final VertxOptionsCustomizer customizer;\n         Vertx v;\n \n-        VertxSupplier(VertxConfiguration config) {\n+        VertxSupplier(VertxConfiguration config, List<Consumer<VertxOptions>> customizers) {\n             this.config = config;\n+            this.customizer = new VertxOptionsCustomizer(customizers);\n         }\n \n         @Override\n         public synchronized Vertx get() {\n             if (v == null) {\n-                v = initialize(config);\n+                v = initialize(config, customizer);\n             }\n             return v;\n         }\n     }\n+\n+    static class VertxOptionsCustomizer {\n+        final List<Consumer<VertxOptions>> customizers;\n+\n+        VertxOptionsCustomizer(List<Consumer<VertxOptions>> customizers) {\n+            this.customizers = customizers;\n+        }\n+\n+        VertxOptions customize(VertxOptions options) {\n+            customizers.forEach(x -> x.accept(options));", "originalCommit": "a9a5f1ad3c5d1e103810ea62502db6b1d5cc892d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1ODE2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8933#discussion_r417358161", "bodyText": "Removed/undone. =)", "author": "ebullient", "createdAt": "2020-04-29T14:26:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNTQ3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f65a559e5e835fe3ed410fe4227e35c3e6483500", "chunk": "diff --git a/extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/VertxCoreRecorder.java b/extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/VertxCoreRecorder.java\nindex 34bac92164..5b3f0e203d 100644\n--- a/extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/VertxCoreRecorder.java\n+++ b/extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/VertxCoreRecorder.java\n\n@@ -347,7 +347,9 @@ public class VertxCoreRecorder {\n         }\n \n         VertxOptions customize(VertxOptions options) {\n-            customizers.forEach(x -> x.accept(options));\n+            for (Consumer<VertxOptions> x : customizers) {\n+                x.accept(options);\n+            }\n             return options;\n         }\n     }\n"}}, {"oid": "f65a559e5e835fe3ed410fe4227e35c3e6483500", "url": "https://github.com/quarkusio/quarkus/commit/f65a559e5e835fe3ed410fe4227e35c3e6483500", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-04-29T13:08:16Z", "type": "forcePushed"}, {"oid": "38a2a69a025930d1dcc12ff852d4f79c2807f503", "url": "https://github.com/quarkusio/quarkus/commit/38a2a69a025930d1dcc12ff852d4f79c2807f503", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-04-29T13:09:10Z", "type": "forcePushed"}, {"oid": "54171a0bcf22e7124af21e6dd8b999dc2ce4697e", "url": "https://github.com/quarkusio/quarkus/commit/54171a0bcf22e7124af21e6dd8b999dc2ce4697e", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-04-29T14:24:16Z", "type": "forcePushed"}, {"oid": "0fe701d329445289a5d692a4ac212b4f8face77a", "url": "https://github.com/quarkusio/quarkus/commit/0fe701d329445289a5d692a4ac212b4f8face77a", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-04-29T14:39:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MzcxOA==", "url": "https://github.com/quarkusio/quarkus/pull/8933#discussion_r417483718", "bodyText": "Minor complaint: You can use a specific size here since it's just the size of vertxOptionsConsumers", "author": "geoand", "createdAt": "2020-04-29T17:22:40Z", "path": "extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxCoreProcessor.java", "diffHunk": "@@ -66,11 +71,18 @@ IOThreadDetectorBuildItem ioThreadDetector(VertxCoreRecorder recorder) {\n     @Record(value = ExecutionTime.RUNTIME_INIT)\n     CoreVertxBuildItem build(VertxCoreRecorder recorder,\n             LaunchModeBuildItem launchMode, ShutdownContextBuildItem shutdown, VertxConfiguration config,\n+            List<VertxOptionsConsumerBuildItem> vertxOptionsConsumers,\n             BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer,\n             BuildProducer<ServiceStartBuildItem> serviceStartBuildItem) {\n \n+        Collections.sort(vertxOptionsConsumers);\n+        List<Consumer<VertxOptions>> consumers = new ArrayList<>();", "originalCommit": "0fe701d329445289a5d692a4ac212b4f8face77a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fae982ea69e47e641fb20136d5b26e511555f111", "chunk": "diff --git a/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxCoreProcessor.java b/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxCoreProcessor.java\nindex c6bd3d7217..66bfc97285 100644\n--- a/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxCoreProcessor.java\n+++ b/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxCoreProcessor.java\n\n@@ -76,7 +76,7 @@ class VertxCoreProcessor {\n             BuildProducer<ServiceStartBuildItem> serviceStartBuildItem) {\n \n         Collections.sort(vertxOptionsConsumers);\n-        List<Consumer<VertxOptions>> consumers = new ArrayList<>();\n+        List<Consumer<VertxOptions>> consumers = new ArrayList<>(vertxOptionsConsumers.size());\n         for (VertxOptionsConsumerBuildItem x : vertxOptionsConsumers) {\n             consumers.add(x.getConsumer());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4NDEyNg==", "url": "https://github.com/quarkusio/quarkus/pull/8933#discussion_r417484126", "bodyText": "Maybe add a note that the idea is to provide arbitrary customization of vertx?", "author": "geoand", "createdAt": "2020-04-29T17:23:22Z", "path": "extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxOptionsConsumerBuildItem.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.vertx.core.deployment;\n+\n+import java.util.function.Consumer;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+import io.vertx.core.VertxOptions;\n+\n+/**\n+ * Provide a consumer of VertxOptions.", "originalCommit": "0fe701d329445289a5d692a4ac212b4f8face77a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4ODgyNw==", "url": "https://github.com/quarkusio/quarkus/pull/8933#discussion_r417488827", "bodyText": "/**\n * Provide a consumer of VertxOptions to allow customization of\n * Vert.x system behavior, e.g. setting MetricsOptions to enable\n * and configure a metrics provider.\n * <p>\n * Consumers will be called in priority order (lowest to highest)\n * after VertxConfiguration has been read and applied.\n */", "author": "ebullient", "createdAt": "2020-04-29T17:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4NDEyNg=="}], "type": "inlineReview", "revised_code": {"commit": "fae982ea69e47e641fb20136d5b26e511555f111", "chunk": "diff --git a/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxOptionsConsumerBuildItem.java b/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxOptionsConsumerBuildItem.java\nindex 5d4e3c5929..6c5bddf410 100644\n--- a/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxOptionsConsumerBuildItem.java\n+++ b/extensions/vertx-core/deployment/src/main/java/io/quarkus/vertx/core/deployment/VertxOptionsConsumerBuildItem.java\n\n@@ -6,9 +6,12 @@ import io.quarkus.builder.item.MultiBuildItem;\n import io.vertx.core.VertxOptions;\n \n /**\n- * Provide a consumer of VertxOptions.\n+ * Provide a consumer of VertxOptions to allow customization of\n+ * Vert.x system behavior, e.g. setting MetricsOptions to enable\n+ * and configure a metrics provider.\n  * <p>\n  * Consumers will be called in priority order (lowest to highest)\n+ * after VertxConfiguration has been read and applied.\n  */\n public final class VertxOptionsConsumerBuildItem extends MultiBuildItem implements Comparable<VertxOptionsConsumerBuildItem> {\n     private final Consumer<VertxOptions> optionsConsumer;\n"}}, {"oid": "fae982ea69e47e641fb20136d5b26e511555f111", "url": "https://github.com/quarkusio/quarkus/commit/fae982ea69e47e641fb20136d5b26e511555f111", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-04-29T17:32:59Z", "type": "forcePushed"}, {"oid": "e92e64eb5222312a18c90d226cdaa2f35cdbdac8", "url": "https://github.com/quarkusio/quarkus/commit/e92e64eb5222312a18c90d226cdaa2f35cdbdac8", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-05-01T12:35:40Z", "type": "commit"}, {"oid": "e92e64eb5222312a18c90d226cdaa2f35cdbdac8", "url": "https://github.com/quarkusio/quarkus/commit/e92e64eb5222312a18c90d226cdaa2f35cdbdac8", "message": "Allow extensions to configure Vertx\n\nCreate a build item allowing other extensions to specify\nconsumers of VertxOptions. These consumers will be invoked\n(in priority order) with VertxOptions after user configuration\nhas been read, but before Vert.x has started.", "committedDate": "2020-05-01T12:35:40Z", "type": "forcePushed"}]}