{"pr_number": 7418, "pr_title": "Prevent redirect loops and support a cookie path parameter", "pr_createdAt": "2020-02-25T15:20:56Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7418", "timeline": [{"oid": "b71a49f88a1c35b133efe429715eff0833acffda", "url": "https://github.com/quarkusio/quarkus/commit/b71a49f88a1c35b133efe429715eff0833acffda", "message": "Prevent redirect loops and support a cookie path parameter", "committedDate": "2020-02-25T17:31:24Z", "type": "forcePushed"}, {"oid": "7d1dba601c920770a02c30c5cf7d0d7902209cde", "url": "https://github.com/quarkusio/quarkus/commit/7d1dba601c920770a02c30c5cf7d0d7902209cde", "message": "Prevent redirect loops and support a cookie path parameter", "committedDate": "2020-02-25T22:05:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4NDAzOA==", "url": "https://github.com/quarkusio/quarkus/pull/7418#discussion_r384184038", "bodyText": "This should be DEBUG if it is something a user can trigger with a malformed request. In general you don't want to log anything that a user can trigger higher than DEBUG, as it opens you up to DOS attacks because logging is very expensive.", "author": "stuartwdouglas", "createdAt": "2020-02-25T23:13:20Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -182,16 +188,19 @@ private static QuarkusSecurityIdentity augmentIdentity(SecurityIdentity security\n \n         configContext.auth.authenticate(params, userAsyncResult -> {\n             if (userAsyncResult.failed()) {\n-                cf.completeExceptionally(new AuthenticationFailedException());\n+                if (userAsyncResult.cause() != null) {\n+                    LOG.warnf(\"Exception during the code to token exchange: %s\", userAsyncResult.cause().getMessage());", "originalCommit": "7d1dba601c920770a02c30c5cf7d0d7902209cde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3NzYzNA==", "url": "https://github.com/quarkusio/quarkus/pull/7418#discussion_r384377634", "bodyText": "@stuartwdouglas done", "author": "sberyozkin", "createdAt": "2020-02-26T09:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4NDAzOA=="}], "type": "inlineReview", "revised_code": {"commit": "ff1425ba3f87e2963026306620e22581ba3df309", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java\nindex ba46818ee1..7b1dc748eb 100644\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java\n+++ b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java\n\n@@ -189,7 +189,7 @@ public class CodeAuthenticationMechanism extends AbstractOidcAuthenticationMecha\n         configContext.auth.authenticate(params, userAsyncResult -> {\n             if (userAsyncResult.failed()) {\n                 if (userAsyncResult.cause() != null) {\n-                    LOG.warnf(\"Exception during the code to token exchange: %s\", userAsyncResult.cause().getMessage());\n+                    LOG.debugf(\"Exception during the code to token exchange: %s\", userAsyncResult.cause().getMessage());\n                 }\n                 cf.completeExceptionally(new AuthenticationCompletionException(userAsyncResult.cause()));\n             } else {\n"}}, {"oid": "ff1425ba3f87e2963026306620e22581ba3df309", "url": "https://github.com/quarkusio/quarkus/commit/ff1425ba3f87e2963026306620e22581ba3df309", "message": "Prevent redirect loops and support a cookie path parameter", "committedDate": "2020-02-26T09:42:27Z", "type": "commit"}, {"oid": "ff1425ba3f87e2963026306620e22581ba3df309", "url": "https://github.com/quarkusio/quarkus/commit/ff1425ba3f87e2963026306620e22581ba3df309", "message": "Prevent redirect loops and support a cookie path parameter", "committedDate": "2020-02-26T09:42:27Z", "type": "forcePushed"}]}