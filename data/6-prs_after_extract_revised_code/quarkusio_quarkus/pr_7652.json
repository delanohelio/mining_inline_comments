{"pr_number": 7652, "pr_title": "Support Kubernetes expose property via Quarkus configuration", "pr_createdAt": "2020-03-06T15:34:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7652", "timeline": [{"oid": "8329e73238935b6380689754d61994f92ef8db3c", "url": "https://github.com/quarkusio/quarkus/commit/8329e73238935b6380689754d61994f92ef8db3c", "message": "Support expose Kubernetes expose property via Quarkus configuration\n\nFixes: #7650", "committedDate": "2020-03-06T16:08:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzM2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7652#discussion_r389247363", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n          \n          \n            \n                    for (String generator : EXPOSABLE_GENERATORS) {\n          \n          \n            \n                        Optional<Boolean> unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME,\n          \n          \n            \n                                Boolean.class);\n          \n          \n            \n                        Optional<Boolean> prefixedExpose = config\n          \n          \n            \n                                .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class);\n          \n          \n            \n                        if ((unprefixedExpose.isPresent() && unprefixedExpose.get())\n          \n          \n            \n                                || (prefixedExpose.isPresent() && prefixedExpose.get())) {\n          \n          \n            \n                            unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n          \n            \n                private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n          \n          \n            \n                    for (String generator : EXPOSABLE_GENERATORS) {\n          \n          \n            \n                        boolean unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class)\n          \n          \n            \n                                .orElse(false);\n          \n          \n            \n                        boolean prefixedExpose = config.getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class)\n          \n          \n            \n                                .orElse(false);\n          \n          \n            \n                        if (unprefixedExpose || prefixedExpose) {\n          \n          \n            \n                            unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nTo simply the if condition a bit. WDYT? @geoand", "author": "machi1990", "createdAt": "2020-03-07T11:15:39Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -74,12 +79,28 @@\n             }\n         }\n \n+        // hard-coded support for exposed\n+        handleExpose(config, unPrefixed);\n+\n         result.putAll(unPrefixed);\n         result.putAll(quarkusPrefixed);\n         result.putAll(toS2iProperties(quarkusPrefixed));\n         return result;\n     }\n \n+    private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n+        for (String generator : EXPOSABLE_GENERATORS) {\n+            Optional<Boolean> unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME,\n+                    Boolean.class);\n+            Optional<Boolean> prefixedExpose = config\n+                    .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class);\n+            if ((unprefixedExpose.isPresent() && unprefixedExpose.get())\n+                    || (prefixedExpose.isPresent() && prefixedExpose.get())) {\n+                unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+            }\n+        }\n+    }", "originalCommit": "8329e73238935b6380689754d61994f92ef8db3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0OTMwMw==", "url": "https://github.com/quarkusio/quarkus/pull/7652#discussion_r389249303", "bodyText": "Updated, thanks", "author": "geoand", "createdAt": "2020-03-07T11:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "91ad4149d997f7ab148f05bb315b43a18cf53517", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java\nindex 0e8c00b1c3..0f9fcbf13e 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java\n\n@@ -90,12 +89,12 @@ public class KubernetesConfigUtil {\n \n     private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n         for (String generator : EXPOSABLE_GENERATORS) {\n-            Optional<Boolean> unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME,\n-                    Boolean.class);\n-            Optional<Boolean> prefixedExpose = config\n-                    .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class);\n-            if ((unprefixedExpose.isPresent() && unprefixedExpose.get())\n-                    || (prefixedExpose.isPresent() && prefixedExpose.get())) {\n+            boolean unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class)\n+                    .orElse(false);\n+            boolean prefixedExpose = config\n+                    .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class)\n+                    .orElse(false);\n+            if (unprefixedExpose || prefixedExpose) {\n                 unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n             }\n         }\n"}}, {"oid": "91ad4149d997f7ab148f05bb315b43a18cf53517", "url": "https://github.com/quarkusio/quarkus/commit/91ad4149d997f7ab148f05bb315b43a18cf53517", "message": "Support expose Kubernetes expose property via Quarkus configuration\n\nFixes: #7650\n\nCo-Authored-By: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>", "committedDate": "2020-03-07T11:48:19Z", "type": "commit"}, {"oid": "91ad4149d997f7ab148f05bb315b43a18cf53517", "url": "https://github.com/quarkusio/quarkus/commit/91ad4149d997f7ab148f05bb315b43a18cf53517", "message": "Support expose Kubernetes expose property via Quarkus configuration\n\nFixes: #7650\n\nCo-Authored-By: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>", "committedDate": "2020-03-07T11:48:19Z", "type": "forcePushed"}]}