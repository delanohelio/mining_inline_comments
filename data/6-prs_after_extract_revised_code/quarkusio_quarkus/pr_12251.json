{"pr_number": 12251, "pr_title": "Forward protoc log to console for gradle project", "pr_createdAt": "2020-09-22T09:04:33Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12251", "timeline": [{"oid": "0cc11021aed54c30895a591da65acc188e38e458", "url": "https://github.com/quarkusio/quarkus/commit/0cc11021aed54c30895a591da65acc188e38e458", "message": "print protoc log to console for gradle project", "committedDate": "2020-09-22T09:01:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwOTIxNA==", "url": "https://github.com/quarkusio/quarkus/pull/12251#discussion_r493609214", "bodyText": "Does this initAndRun get called only for Gradle build? In which case this change looks good. The reason why the ProcessUtil has been conditionally used is to avoid streaming the STDOUT and STDERR when Maven tool is being used and instead just rely on inheriting IO. So as long as this gets called only for Gradle, the change looks fine to me.", "author": "jaikiran", "createdAt": "2020-09-23T13:51:08Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/CodeGenerator.java", "diffHunk": "@@ -26,6 +26,7 @@ public static void initAndRun(ClassLoader classLoader,\n             AppModel appModel) throws CodeGenException {\n         List<CodeGenData> generators = init(classLoader, sourceParentDirs, generatedSourcesDir, buildDir, sourceRegistrar);\n         for (CodeGenData generator : generators) {\n+            generator.setRedirectIO(true);", "originalCommit": "0cc11021aed54c30895a591da65acc188e38e458", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzNjQ1NA==", "url": "https://github.com/quarkusio/quarkus/pull/12251#discussion_r493636454", "bodyText": "Yes, I ran a search on all the project and this is only used by gradle. Maven OTOH, uses the init and the trigger method.", "author": "glefloch", "createdAt": "2020-09-23T14:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwOTIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0MTMzNA==", "url": "https://github.com/quarkusio/quarkus/pull/12251#discussion_r493641334", "bodyText": "Thank you for confirming that.", "author": "jaikiran", "createdAt": "2020-09-23T14:31:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwOTIxNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkzNzQzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12251#discussion_r493937435", "bodyText": "why redirectIO and not inheritIO ?", "author": "michalszynkiewicz", "createdAt": "2020-09-23T22:48:53Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/CodeGenContext.java", "diffHunk": "@@ -9,12 +9,14 @@\n     private final Path outDir;\n     private final Path workDir;\n     private final Path inputDir;\n+    private final boolean redirectIO;\n \n-    public CodeGenContext(AppModel model, Path outDir, Path workDir, Path inputDir) {\n+    public CodeGenContext(AppModel model, Path outDir, Path workDir, Path inputDir, boolean redirectIO) {\n         this.model = model;\n         this.outDir = outDir;\n         this.workDir = workDir;\n         this.inputDir = inputDir;\n+        this.redirectIO = redirectIO;", "originalCommit": "0cc11021aed54c30895a591da65acc188e38e458", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzMDk5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12251#discussion_r494130997", "bodyText": "At the beginning named it like that. But after updating the ProcessUtil class from:\npublic static Process launchProcess(final ProcessBuilder builder, final Optional<ProcessInheritIODisabled> processInheritIODisabled)\n\nto have this method signature:\npublic static Process launchProcess(final ProcessBuilder builder, final boolean shouldRedirectIO)\n\ncalling this method from the native build step wth a ProcessInheritIODisabled would have give something like :\nlaunch(p, !processInheritIODisabled.isPresent())\n\nSo I preferred moving the negation in the launchProcess method.", "author": "glefloch", "createdAt": "2020-09-24T08:25:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkzNzQzNQ=="}], "type": "inlineReview", "revised_code": null}]}