{"pr_number": 12108, "pr_title": "Add support for passing custom headers in Spring Cloud Config", "pr_createdAt": "2020-09-15T11:13:51Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12108", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NzQxOQ==", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488687419", "bodyText": "The HTTP spec RFC 2616 allows multiple values for a single HTTP header:\n\nMultiple message-header fields with the same field-name MAY be present in a message if and only if the entire field-value for that header field is defined as a comma-separated list [i.e., #(values)]. It MUST be possible to combine the multiple header fields into one \"field-name: field-value\" pair, without changing the semantics of the message, by appending each subsequent field-value to the first, each separated by a comma. The order in which header fields with the same field-name are received is therefore significant to the interpretation of the combined field value, and thus a proxy MUST NOT change the order of these field values when a message is forwarded.\n\nWhat this means is that you can send multiple values in a single header by concatenating them with commas. Do you want to support that here or that wouldn't matter?", "author": "gastaldi", "createdAt": "2020-09-15T13:55:03Z", "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java", "diffHunk": "@@ -96,7 +97,13 @@\n      * When using HTTPS and no keyStore has been specified, whether or not to trust all certificates\n      */\n     @ConfigItem(defaultValue = \"false\")\n-    boolean trustCerts;\n+    public boolean trustCerts;\n+\n+    /**\n+     * Custom headers to pass the Spring Cloud Config Server when performing the HTTP request\n+     */\n+    @ConfigItem\n+    public Map<String, String> headers;", "originalCommit": "9f88f43c642c979ea6926d0204d775d772415a5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MDA0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488690041", "bodyText": "Yeah I know, but I really don't think it's necessary. Best keep the common case easy to use.", "author": "geoand", "createdAt": "2020-09-15T13:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NzQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7d6b34f1c76bb6130c1b6feeee8c26bbcfe4acf0", "chunk": "diff --git a/extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java b/extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java\nindex 0dc1649bd5..4c3ad9b2e6 100644\n--- a/extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java\n+++ b/extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java\n\n@@ -97,13 +96,7 @@ public class SpringCloudConfigClientConfig {\n      * When using HTTPS and no keyStore has been specified, whether or not to trust all certificates\n      */\n     @ConfigItem(defaultValue = \"false\")\n-    public boolean trustCerts;\n-\n-    /**\n-     * Custom headers to pass the Spring Cloud Config Server when performing the HTTP request\n-     */\n-    @ConfigItem\n-    public Map<String, String> headers;\n+    boolean trustCerts;\n \n     public boolean usernameAndPasswordSet() {\n         return username.isPresent() && password.isPresent();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MTM0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488691342", "bodyText": "Uppercase them?", "author": "gastaldi", "createdAt": "2020-09-15T13:59:56Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java", "diffHunk": "@@ -1630,4 +1640,16 @@ private static boolean isFieldEligibleForDirectAccess(ClassDefinition.ClassMembe\n                 && Modifier.isPublic(classMember.getEnclosingDefinition().getConfigurationClass().getModifiers())\n                 && Modifier.isPublic(classMember.getField().getType().getModifiers());\n     }\n+\n+    private enum Type {\n+        BuildTime(\"si\"),\n+        Bootstrap(\"bs\"),\n+        Runtime(\"rt\");", "originalCommit": "9f88f43c642c979ea6926d0204d775d772415a5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MjMxNg==", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488692316", "bodyText": "Yeah I guess most of our enums are upper case, so I'll fix it", "author": "geoand", "createdAt": "2020-09-15T14:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MTM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMTUwNg==", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488811506", "bodyText": "Fixed", "author": "geoand", "createdAt": "2020-09-15T16:44:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MTM0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7d6b34f1c76bb6130c1b6feeee8c26bbcfe4acf0", "chunk": "diff --git a/core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java b/core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java\nindex daed7af6da..afe3fdfa9a 100644\n--- a/core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java\n+++ b/core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java\n\n@@ -1642,9 +1642,9 @@ public final class RunTimeConfigurationGenerator {\n     }\n \n     private enum Type {\n-        BuildTime(\"si\"),\n-        Bootstrap(\"bs\"),\n-        Runtime(\"rt\");\n+        BUILD_TIME(\"si\"),\n+        BOOTSTRAP(\"bs\"),\n+        RUNTIME(\"rt\");\n \n         final String methodPrefix;\n \n"}}, {"oid": "7d6b34f1c76bb6130c1b6feeee8c26bbcfe4acf0", "url": "https://github.com/quarkusio/quarkus/commit/7d6b34f1c76bb6130c1b6feeee8c26bbcfe4acf0", "message": "Allow Map types in bootstrap config", "committedDate": "2020-09-15T16:44:05Z", "type": "commit"}, {"oid": "57abc6464429bbbefcca424ae1ce86ae5059f6b0", "url": "https://github.com/quarkusio/quarkus/commit/57abc6464429bbbefcca424ae1ce86ae5059f6b0", "message": "Add support for passing custom headers in Spring Cloud Config\n\nFixes: #12099", "committedDate": "2020-09-15T16:44:05Z", "type": "commit"}, {"oid": "57abc6464429bbbefcca424ae1ce86ae5059f6b0", "url": "https://github.com/quarkusio/quarkus/commit/57abc6464429bbbefcca424ae1ce86ae5059f6b0", "message": "Add support for passing custom headers in Spring Cloud Config\n\nFixes: #12099", "committedDate": "2020-09-15T16:44:05Z", "type": "forcePushed"}]}