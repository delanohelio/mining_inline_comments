{"pr_number": 12198, "pr_title": "Add OIDC SecurityEvent", "pr_createdAt": "2020-09-18T17:25:18Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12198", "timeline": [{"oid": "550a522c220209b2d9a12167ada84a9d58523609", "url": "https://github.com/quarkusio/quarkus/commit/550a522c220209b2d9a12167ada84a9d58523609", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-18T17:30:04Z", "type": "forcePushed"}, {"oid": "fc8f4bfd187fc00c71e954ee8758324018e06c86", "url": "https://github.com/quarkusio/quarkus/commit/fc8f4bfd187fc00c71e954ee8758324018e06c86", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-20T17:05:41Z", "type": "forcePushed"}, {"oid": "1513299a79fbe98bed39ff873be1ae091d859788", "url": "https://github.com/quarkusio/quarkus/commit/1513299a79fbe98bed39ff873be1ae091d859788", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-21T16:36:34Z", "type": "forcePushed"}, {"oid": "41925637c81fcc269dac552d33062b2ef02586a5", "url": "https://github.com/quarkusio/quarkus/commit/41925637c81fcc269dac552d33062b2ef02586a5", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-23T12:51:52Z", "type": "forcePushed"}, {"oid": "5526efcf20b91a11c81771cb1c9007389146f539", "url": "https://github.com/quarkusio/quarkus/commit/5526efcf20b91a11c81771cb1c9007389146f539", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-23T12:57:22Z", "type": "forcePushed"}, {"oid": "15059f7e362e5000e86ec5727506b9ffce3702db", "url": "https://github.com/quarkusio/quarkus/commit/15059f7e362e5000e86ec5727506b9ffce3702db", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-24T10:35:05Z", "type": "forcePushed"}, {"oid": "8596f3c9e5e9265e7dd8bf00ed38c9220b9a8bac", "url": "https://github.com/quarkusio/quarkus/commit/8596f3c9e5e9265e7dd8bf00ed38c9220b9a8bac", "message": "Add OIDC CodeAuthenticationListener", "committedDate": "2020-09-24T16:22:41Z", "type": "forcePushed"}, {"oid": "578b8e445273e53dbcf120250caf107a595669c1", "url": "https://github.com/quarkusio/quarkus/commit/578b8e445273e53dbcf120250caf107a595669c1", "message": "Add OIDC SecurityEvent", "committedDate": "2020-09-29T16:14:15Z", "type": "forcePushed"}, {"oid": "9ad2aa4bffb7cf34375b329a74cec07148a1ab59", "url": "https://github.com/quarkusio/quarkus/commit/9ad2aa4bffb7cf34375b329a74cec07148a1ab59", "message": "Add OIDC SecurityEvent", "committedDate": "2020-09-29T16:29:08Z", "type": "forcePushed"}, {"oid": "65667ad317c5abe7393f6fc25c67eb1238141289", "url": "https://github.com/quarkusio/quarkus/commit/65667ad317c5abe7393f6fc25c67eb1238141289", "message": "Add OIDC SecurityEvent", "committedDate": "2020-09-30T15:07:07Z", "type": "forcePushed"}, {"oid": "4e15e67f9f74eadbd985d2c057330da12421e4c9", "url": "https://github.com/quarkusio/quarkus/commit/4e15e67f9f74eadbd985d2c057330da12421e4c9", "message": "Add OIDC SecurityEvent", "committedDate": "2020-09-30T17:47:24Z", "type": "forcePushed"}, {"oid": "ed81d0310be40cafb2e4d8d2dca308cba2dcf0ce", "url": "https://github.com/quarkusio/quarkus/commit/ed81d0310be40cafb2e4d8d2dca308cba2dcf0ce", "message": "Add OIDC SecurityEvent", "committedDate": "2020-09-30T20:02:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2MzA4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498063085", "bodyText": "You should read the ValidationPhaseBuildItem javadoc more carefully ;-). Your build step should produce or pretend that it produces a ValidationErrorBuildItem.", "author": "mkouba", "createdAt": "2020-10-01T08:15:07Z", "path": "extensions/oidc/deployment/src/main/java/io/quarkus/oidc/deployment/OidcBuildStep.java", "diffHunk": "@@ -90,6 +97,18 @@ public SyntheticBeanBuildItem setup(\n                 .done();\n     }\n \n+    @BuildStep(onlyIf = IsEnabled.class)\n+    @Record(ExecutionTime.RUNTIME_INIT)\n+    public void findSecurityEventObservers(\n+            OidcRecorder recorder,\n+            ValidationPhaseBuildItem validationPhase) {", "originalCommit": "ed81d0310be40cafb2e4d8d2dca308cba2dcf0ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa6f2014bd41130e6e99816ae029bff18c5c7373", "chunk": "diff --git a/extensions/oidc/deployment/src/main/java/io/quarkus/oidc/deployment/OidcBuildStep.java b/extensions/oidc/deployment/src/main/java/io/quarkus/oidc/deployment/OidcBuildStep.java\nindex f1a76510d5..9d18737d22 100644\n--- a/extensions/oidc/deployment/src/main/java/io/quarkus/oidc/deployment/OidcBuildStep.java\n+++ b/extensions/oidc/deployment/src/main/java/io/quarkus/oidc/deployment/OidcBuildStep.java\n\n@@ -99,14 +100,14 @@ public class OidcBuildStep {\n \n     @BuildStep(onlyIf = IsEnabled.class)\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    public void findSecurityEventObservers(\n+    public ValidationErrorBuildItem findSecurityEventObservers(\n             OidcRecorder recorder,\n             ValidationPhaseBuildItem validationPhase) {\n         Collection<ObserverInfo> observers = validationPhase.getContext().get(BuildExtension.Key.OBSERVERS);\n         boolean isSecurityEventObserved = observers.stream()\n                 .anyMatch(observer -> observer.asObserver().getObservedType().name().equals(DOTNAME_SECURITY_EVENT));\n         recorder.setSecurityEventObserved(isSecurityEventObserved);\n-\n+        return new ValidationErrorBuildItem();\n     }\n \n     static class IsEnabled implements BooleanSupplier {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NTM0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498065347", "bodyText": "You should rather create and cache an Event object for perf reasons, i.e. Event<SecurityEvent> event = Arc.container().beanManager().getEvent().select(SecurityEvent.class) and then event.fire(...).", "author": "mkouba", "createdAt": "2020-10-01T08:18:57Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -390,6 +396,13 @@ private void processSuccessfulAuthentication(RoutingContext context,\n             maxAge += configContext.oidcConfig.authentication.sessionAgeExtension.getSeconds();\n         }\n         createCookie(context, configContext, getSessionCookieName(configContext), cookieValue, maxAge);\n+        fireEvent(SecurityEvent.Type.OIDC_LOGIN, securityIdentity);\n+    }\n+\n+    private void fireEvent(SecurityEvent.Type eventType, SecurityIdentity securityIdentity) {\n+        if (resolver.isSecurityEventObserved()) {\n+            Arc.container().beanManager().fireEvent(new SecurityEvent(eventType, securityIdentity));", "originalCommit": "ed81d0310be40cafb2e4d8d2dca308cba2dcf0ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NjA0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498066042", "bodyText": "Or even inject the Event object if possible...", "author": "mkouba", "createdAt": "2020-10-01T08:20:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEyODAzNA==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498128034", "bodyText": "Hi Martin @mkouba so if it gets injected as an Instance, ex, Instance<Event<SecurityEvent>> securityEvent, then securityEvent.isResolvable() (=> if true then it means there must be at least one Observer available) would make the build step with ValidationPhaseBuildItem and the securityEventObserved property redundant ? Or would securityEvent.isResolvable() check be a bit more expensive than using the ValidationPhaseBuildItem approach ?\nAt the moment I've added Event<SecurityEvent> event = Arc.container().beanManager().getEvent().select(SecurityEvent.class)", "author": "sberyozkin", "createdAt": "2020-10-01T10:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEzNzY0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498137641", "bodyText": "Or if injection this Event will only lead to a slightly better cache creation time then maybe Arc.container().beanManager().getEvent().select(SecurityEvent.class)  will do ?", "author": "sberyozkin", "createdAt": "2020-10-01T10:19:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEzOTMyMw==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498139323", "bodyText": "You should not use Instance but Event<SecurityEvent> (Event is a built-in bean and is always available). And no, securityEvent.isResolvable() does not care about observers. Arc.container().beanManager().getEvent().select(SecurityEvent.class) is fine.", "author": "mkouba", "createdAt": "2020-10-01T10:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3Mjk5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498172992", "bodyText": "Hi @mkouba OK, thanks, so I've just injected the event and also moved the boolean property to the same bean, and now it all looks very compact, and it is also very optimal performance wise :-), how does it all look to you now ?\nI did not want to hide it all in DefaultTenantConfigResolver as it is mainly about resolving different OIDC properties/config... so for now keeping checking and firing the events in CodeAuthenticationMechanism\nthanks", "author": "sberyozkin", "createdAt": "2020-10-01T11:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NTM0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "fa6f2014bd41130e6e99816ae029bff18c5c7373", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java\nindex 9a60ddb0fa..bdf75206c3 100644\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java\n+++ b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java\n\n@@ -401,7 +402,8 @@ public class CodeAuthenticationMechanism extends AbstractOidcAuthenticationMecha\n \n     private void fireEvent(SecurityEvent.Type eventType, SecurityIdentity securityIdentity) {\n         if (resolver.isSecurityEventObserved()) {\n-            Arc.container().beanManager().fireEvent(new SecurityEvent(eventType, securityIdentity));\n+            Event<SecurityEvent> event = Arc.container().beanManager().getEvent().select(SecurityEvent.class);\n+            event.fire(new SecurityEvent(eventType, securityIdentity));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2Njc5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/12198#discussion_r498066799", "bodyText": "This field should be probably volatile...", "author": "mkouba", "createdAt": "2020-10-01T08:21:20Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/TenantConfigBean.java", "diffHunk": "@@ -10,6 +10,7 @@\n     private final Map<String, TenantConfigContext> staticTenantsConfig;\n     private final TenantConfigContext defaultTenant;\n     private final Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;\n+    private boolean securityEventObserved;", "originalCommit": "ed81d0310be40cafb2e4d8d2dca308cba2dcf0ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa6f2014bd41130e6e99816ae029bff18c5c7373", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/TenantConfigBean.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/TenantConfigBean.java\nindex fed177b745..587139224d 100644\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/TenantConfigBean.java\n+++ b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/TenantConfigBean.java\n\n@@ -10,7 +10,7 @@ public class TenantConfigBean {\n     private final Map<String, TenantConfigContext> staticTenantsConfig;\n     private final TenantConfigContext defaultTenant;\n     private final Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;\n-    private boolean securityEventObserved;\n+    private volatile boolean securityEventObserved;\n \n     public TenantConfigBean(Map<String, TenantConfigContext> staticTenantsConfig, TenantConfigContext defaultTenant,\n             Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory) {\n"}}, {"oid": "fa6f2014bd41130e6e99816ae029bff18c5c7373", "url": "https://github.com/quarkusio/quarkus/commit/fa6f2014bd41130e6e99816ae029bff18c5c7373", "message": "Add OIDC SecurityEvent", "committedDate": "2020-10-01T09:48:10Z", "type": "forcePushed"}, {"oid": "a0f4eac26f78ad92827b0e548dd68c1030f143ea", "url": "https://github.com/quarkusio/quarkus/commit/a0f4eac26f78ad92827b0e548dd68c1030f143ea", "message": "Add OIDC SecurityEvent", "committedDate": "2020-10-01T11:27:25Z", "type": "commit"}, {"oid": "a0f4eac26f78ad92827b0e548dd68c1030f143ea", "url": "https://github.com/quarkusio/quarkus/commit/a0f4eac26f78ad92827b0e548dd68c1030f143ea", "message": "Add OIDC SecurityEvent", "committedDate": "2020-10-01T11:27:25Z", "type": "forcePushed"}]}