{"pr_number": 10847, "pr_title": "Added support for mocking void methods in PanacheMock", "pr_createdAt": "2020-07-20T09:47:17Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10847", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1MzExNA==", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457353114", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static PanacheStubber doAnser(Answer answer) {\n          \n          \n            \n                public static PanacheStubber doAnswer(Answer answer) {", "author": "geoand", "createdAt": "2020-07-20T12:50:00Z", "path": "extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java", "diffHunk": "@@ -107,4 +108,35 @@ public Object invoke() throws Throwable {\n \n     }\n \n+    public static PanacheStubber doAnser(Answer answer) {", "originalCommit": "ad204a7980e3b59baaf8f06190e09b592a69e901", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b71e0809fd0292655e1fcfeb600557a4aba1de", "chunk": "diff --git a/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java b/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java\nindex 97931352f0..f0bcfe098a 100644\n--- a/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java\n+++ b/extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java\n\n@@ -108,7 +108,7 @@ public class PanacheMock {\n \n     }\n \n-    public static PanacheStubber doAnser(Answer answer) {\n+    public static PanacheStubber doAnswer(Answer answer) {\n         return new PanacheStubber(Mockito.doAnswer(answer));\n     }\n \n"}}, {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de", "url": "https://github.com/quarkusio/quarkus/commit/47b71e0809fd0292655e1fcfeb600557a4aba1de", "message": "Added support for mocking void methods in PanacheMock", "committedDate": "2020-07-20T13:05:51Z", "type": "commit"}, {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de", "url": "https://github.com/quarkusio/quarkus/commit/47b71e0809fd0292655e1fcfeb600557a4aba1de", "message": "Added support for mocking void methods in PanacheMock", "committedDate": "2020-07-20T13:05:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NDAxNg==", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457594016", "bodyText": "You can also use the AssertJ API for improved readability:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        Person.voidMethod();\n          \n          \n            \n                        Assertions.fail();\n          \n          \n            \n                    } catch (RuntimeException x) {\n          \n          \n            \n                        Assertions.assertEquals(\"Stef\", x.getMessage());\n          \n          \n            \n                    }\n          \n          \n            \n                    assertThatExceptionOfType(RuntimeException.class)\n          \n          \n            \n                            .isThrownBy(Person::voidMethod)\n          \n          \n            \n                            .withMessage(\"Stef\");", "author": "gastaldi", "createdAt": "2020-07-20T18:01:30Z", "path": "integration-tests/hibernate-orm-panache/src/test/java/io/quarkus/it/panache/PanacheMockingTest.java", "diffHunk": "@@ -25,6 +25,40 @@\n     public void testPanacheMocking() {\n         PanacheMock.mock(Person.class);\n \n+        // does not throw (defaults to doNothing)\n+        Person.voidMethod();\n+\n+        // make it throw our exception\n+        Mockito.doThrow(new RuntimeException(\"Stef\")).when(PanacheMock.getMock(Person.class)).voidMethod();\n+        try {\n+            Person.voidMethod();\n+            Assertions.fail();\n+        } catch (RuntimeException x) {\n+            Assertions.assertEquals(\"Stef\", x.getMessage());\n+        }", "originalCommit": "47b71e0809fd0292655e1fcfeb600557a4aba1de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxODk5OA==", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457918998", "bodyText": "Given that static method references don't work the same as normal static method calls, I'd rather not introduce this style which can lead to surprises.", "author": "FroMage", "createdAt": "2020-07-21T08:16:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NDAxNg=="}], "type": "inlineReview", "revised_code": null}]}