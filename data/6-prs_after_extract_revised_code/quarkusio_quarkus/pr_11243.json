{"pr_number": 11243, "pr_title": "cloud codestarts", "pr_createdAt": "2020-08-06T00:33:29Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11243", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466361203", "bodyText": "The convention is kebab-case for the naming, I would also prefer to have those in a specific parent, wdyt of gen-info?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    data.put(\"codestartTimestamp\", System.currentTimeMillis());\n          \n          \n            \n                    data.put(\"gen-info\", Collections.singletonMap(\"time\", System.currentTimeMillis()));", "author": "ia3andy", "createdAt": "2020-08-06T11:59:46Z", "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -54,6 +55,11 @@ void process(final Codestart codestart) throws IOException {\n         });\n     }\n \n+    void addBuiltinData() {\n+        // needed for azure functions codestart\n+        data.put(\"codestartTimestamp\", System.currentTimeMillis());", "originalCommit": "1feec1c441be5acf45e69c2499c642788fe1dcbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NjYwNw==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466376607", "bodyText": "timestamp instead of time?", "author": "patriot1burke", "createdAt": "2020-08-06T12:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4NDYzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466384635", "bodyText": "well, timestamp is often called time, but as you prefer \ud83d\udc4d", "author": "ia3andy", "createdAt": "2020-08-06T12:44:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMjE4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466402186", "bodyText": "yeah, i guess you're right.", "author": "patriot1burke", "createdAt": "2020-08-06T13:14:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "0c343eb9b4222f9e7c28d8be03127e2ae8e99105", "chunk": "diff --git a/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java b/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java\nindex 28c64cb78e..ffd03ffbf0 100644\n--- a/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java\n+++ b/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java\n\n@@ -57,7 +58,7 @@ final class CodestartProcessor {\n \n     void addBuiltinData() {\n         // needed for azure functions codestart\n-        data.put(\"codestartTimestamp\", System.currentTimeMillis());\n+        data.put(\"gen-info\", Collections.singletonMap(\"time\", System.currentTimeMillis()));\n     }\n \n     void processCodestartDir(final Path sourceDirectory, final Map<String, Object> finalData) {\n"}}, {"oid": "0c343eb9b4222f9e7c28d8be03127e2ae8e99105", "url": "https://github.com/quarkusio/quarkus/commit/0c343eb9b4222f9e7c28d8be03127e2ae8e99105", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags", "committedDate": "2020-08-06T14:43:34Z", "type": "forcePushed"}, {"oid": "e02f3e96ababe5c839ce01eadfd43ef54b61a219", "url": "https://github.com/quarkusio/quarkus/commit/e02f3e96ababe5c839ce01eadfd43ef54b61a219", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc", "committedDate": "2020-08-06T14:47:54Z", "type": "forcePushed"}, {"oid": "ff41908803efb252166301fe583612b07c17c3b1", "url": "https://github.com/quarkusio/quarkus/commit/ff41908803efb252166301fe583612b07c17c3b1", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc", "committedDate": "2020-08-10T13:17:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwOTQ5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467909499", "bodyText": "I think we need to have a namespace for @Named (to avoid conflict)", "author": "ia3andy", "createdAt": "2020-08-10T13:38:41Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/StreamLambda.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.acme.lambda;\n+\n+import javax.inject.Named;\n+\n+import com.amazonaws.services.lambda.runtime.Context;\n+import com.amazonaws.services.lambda.runtime.RequestStreamHandler;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.IOException;\n+\n+@Named(\"stream\")", "originalCommit": "ff41908803efb252166301fe583612b07c17c3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57b8287f37910d5d789b823fd5062c7a1c959d26", "chunk": "diff --git a/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/StreamLambda.java b/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/StreamLambda.java\ndeleted file mode 100644\nindex 59b2938aee..0000000000\n--- a/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/StreamLambda.java\n+++ /dev/null\n\n@@ -1,23 +0,0 @@\n-package org.acme.lambda;\n-\n-import javax.inject.Named;\n-\n-import com.amazonaws.services.lambda.runtime.Context;\n-import com.amazonaws.services.lambda.runtime.RequestStreamHandler;\n-\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.IOException;\n-\n-@Named(\"stream\")\n-public class StreamLambda implements RequestStreamHandler {\n-\n-    @Override\n-    public void handleRequest(InputStream inputStream, OutputStream outputStream, Context context) throws IOException {\n-        int letter;\n-        while ((letter = inputStream.read()) != -1) {\n-            int character = Character.toUpperCase(letter);\n-            outputStream.write(character);\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwOTgxMg==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467909812", "bodyText": "Same here, this need to be namespaced.", "author": "ia3andy", "createdAt": "2020-08-10T13:39:09Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/TestLambda.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.acme.lambda;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import com.amazonaws.services.lambda.runtime.Context;\n+import com.amazonaws.services.lambda.runtime.RequestHandler;\n+\n+@Named(\"test\")", "originalCommit": "ff41908803efb252166301fe583612b07c17c3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57b8287f37910d5d789b823fd5062c7a1c959d26", "chunk": "diff --git a/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/TestLambda.java b/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/TestLambda.java\ndeleted file mode 100644\nindex 37d2f2d03a..0000000000\n--- a/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/TestLambda.java\n+++ /dev/null\n\n@@ -1,19 +0,0 @@\n-package org.acme.lambda;\n-\n-import javax.inject.Inject;\n-import javax.inject.Named;\n-\n-import com.amazonaws.services.lambda.runtime.Context;\n-import com.amazonaws.services.lambda.runtime.RequestHandler;\n-\n-@Named(\"test\")\n-public class TestLambda implements RequestHandler<InputObject, OutputObject> {\n-\n-    @Inject\n-    ProcessingService service;\n-\n-    @Override\n-    public OutputObject handleRequest(InputObject input, Context context) {\n-        return service.process(input).setRequestId(context.getAwsRequestId());\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNTAzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467915039", "bodyText": "I am not sure of how this work for funqy but don't we need to namespace those path too?", "author": "ia3andy", "createdAt": "2020-08-10T13:46:58Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.acme.funqy;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+\n+@QuarkusTest\n+public class FunqyTest {\n+\n+    @Test\n+    public void testHello() {\n+        given()\n+                .given().get(\"/hello\")", "originalCommit": "ff41908803efb252166301fe583612b07c17c3b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57b8287f37910d5d789b823fd5062c7a1c959d26", "chunk": "diff --git a/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java b/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java\nindex b9913eaf99..14c4ebc9fb 100644\n--- a/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java\n+++ b/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java\n\n@@ -9,58 +9,16 @@ import static org.hamcrest.CoreMatchers.equalTo;\n @QuarkusTest\n public class FunqyTest {\n \n-    @Test\n-    public void testHello() {\n-        given()\n-                .given().get(\"/hello\")\n-                .then()\n-                .statusCode(200)\n-                .body(equalTo(\"\\\"Hello World\\\"\"));\n-    }\n-\n-    @Test\n-    public void testLowercase() {\n-        given()\n-                .given()\n-                .contentType(\"application/json\")\n-                .body(\"\\\"HELLO WORLD\\\"\")\n-                .post(\"/toLowerCase\")\n-                .then()\n-                .statusCode(200)\n-                .body(equalTo(\"\\\"hello world\\\"\"));\n-    }\n-\n-    @Test\n-    public void testDouble() {\n-        given()\n-                .given()\n-                .contentType(\"application/json\")\n-                .body(\"\\\"2\\\"\")\n-                .post(\"/double\")\n-                .then()\n-                .statusCode(200)\n-                .body(equalTo(\"4\"));\n-    }\n-\n     @Test\n     public void testGreeting() {\n         given()\n                 .given()\n                 .contentType(\"application/json\")\n                 .body(\"{\\\"name\\\": \\\"Bill\\\"}\")\n-                .post(\"/greet\")\n-                .then()\n-                .statusCode(200)\n-                .body(\"message\", equalTo(\"Hello Bill\"));\n-\n-        given()\n-                .given()\n-                .contentType(\"application/json\")\n-                .body(new Friend(\"John\"))\n-                .post(\"/greet\")\n+                .post(\"/myFunqyGreeting\")\n                 .then()\n                 .statusCode(200)\n-                .body(\"message\", equalTo(\"Hello John\"));\n+                .body(equalTo(\"\\\"Hello Bill\\\"\"));\n     }\n \n }\n"}}, {"oid": "57b8287f37910d5d789b823fd5062c7a1c959d26", "url": "https://github.com/quarkusio/quarkus/commit/57b8287f37910d5d789b823fd5062c7a1c959d26", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc\n\ncodestart finished?", "committedDate": "2020-08-10T21:03:37Z", "type": "forcePushed"}, {"oid": "380854c75b92c5e7b64c2110389b57e490485943", "url": "https://github.com/quarkusio/quarkus/commit/380854c75b92c5e7b64c2110389b57e490485943", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc\n\ncodestart finished?", "committedDate": "2020-08-10T21:03:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM5MTI5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r468391291", "bodyText": "you have two given()", "author": "ia3andy", "createdAt": "2020-08-11T07:49:50Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.acme.funqy;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+\n+@QuarkusTest\n+public class FunqyTest {\n+\n+    @Test\n+    public void testGreeting() {\n+        given()\n+                .given()", "originalCommit": "380854c75b92c5e7b64c2110389b57e490485943", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "chunk": "diff --git a/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java b/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java\nindex 14c4ebc9fb..f25e65b60c 100644\n--- a/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java\n+++ b/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java\n\n@@ -12,7 +12,6 @@ public class FunqyTest {\n     @Test\n     public void testGreeting() {\n         given()\n-                .given()\n                 .contentType(\"application/json\")\n                 .body(\"{\\\"name\\\": \\\"Bill\\\"}\")\n                 .post(\"/myFunqyGreeting\")\n"}}, {"oid": "15ec0d0e529ec04bcefe82e3a1efc4cc2f5eb85f", "url": "https://github.com/quarkusio/quarkus/commit/15ec0d0e529ec04bcefe82e3a1efc4cc2f5eb85f", "message": "SmartPomMergeCodestartFileStrategyHandler ignores non-maven", "committedDate": "2020-08-11T20:34:48Z", "type": "forcePushed"}, {"oid": "58b2f70cb39af668fde3c46af4a7c1af372797ca", "url": "https://github.com/quarkusio/quarkus/commit/58b2f70cb39af668fde3c46af4a7c1af372797ca", "message": "SmartPomMergeCodestartFileStrategyHandler ignores non-maven", "committedDate": "2020-08-11T20:35:20Z", "type": "forcePushed"}, {"oid": "7590c1030d3c60a7e7171afd7fe112caedc2fad4", "url": "https://github.com/quarkusio/quarkus/commit/7590c1030d3c60a7e7171afd7fe112caedc2fad4", "message": "SmartPomMergeCodestartFileStrategyHandler ignores non-maven\n\ncomment smart", "committedDate": "2020-08-11T20:38:25Z", "type": "forcePushed"}, {"oid": "562d5c7622f5c5fc2bd45a3ed26cbe9b9f956823", "url": "https://github.com/quarkusio/quarkus/commit/562d5c7622f5c5fc2bd45a3ed26cbe9b9f956823", "message": "SmartPomMergeCodestartFileStrategyHandler ignores non-maven\n\ncomment smart", "committedDate": "2020-08-12T13:03:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI4MjYyNw==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r469282627", "bodyText": "This seems wrongly copied?", "author": "ia3andy", "createdAt": "2020-08-12T14:01:50Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/test/NativeHelloResourceIT.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.acme.qute;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+\n+@NativeImageTest\n+public class NativeHelloResourceIT extends HelloResourceTest {", "originalCommit": "618353ca18eeab186a91a9d2073be05e834a6c44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "chunk": "diff --git a/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/test/NativeHelloResourceIT.java b/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/LambdaHandlerTestIT.java\nsimilarity index 57%\nrename from devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/test/NativeHelloResourceIT.java\nrename to devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/LambdaHandlerTestIT.java\nindex 51e21a7106..477313b413 100644\n--- a/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/test/NativeHelloResourceIT.java\n+++ b/devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/LambdaHandlerTestIT.java\n\n@@ -1,9 +1,9 @@\n-package org.acme.qute;\n+package org.acme.lambda;\n \n import io.quarkus.test.junit.NativeImageTest;\n \n @NativeImageTest\n-public class NativeHelloResourceIT extends HelloResourceTest {\n+public class LambdaHandlerTestIT extends LambdaHandlerTest {\n \n     // Execute the same tests but in native mode.\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI4MzE1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r469283156", "bodyText": "unused..\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.quarkus.funqy.Context;", "author": "ia3andy", "createdAt": "2020-08-12T14:02:32Z", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/CloudEventGreeting.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package org.acme.funqy;\n+\n+import io.quarkus.funqy.Context;", "originalCommit": "618353ca18eeab186a91a9d2073be05e834a6c44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "chunk": "diff --git a/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/CloudEventGreeting.java b/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/cloudevent/CloudEventGreeting.java\nsimilarity index 83%\nrename from devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/CloudEventGreeting.java\nrename to devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/cloudevent/CloudEventGreeting.java\nindex d308c20752..7756cf108a 100644\n--- a/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/CloudEventGreeting.java\n+++ b/devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/cloudevent/CloudEventGreeting.java\n\n@@ -1,6 +1,5 @@\n-package org.acme.funqy;\n+package org.acme.funqy.cloudevent;\n \n-import io.quarkus.funqy.Context;\n import io.quarkus.funqy.Funq;\n import org.jboss.logging.Logger;\n \n"}}, {"oid": "9fc038a6ee160216ba043ad92bf0206bdf41de2a", "url": "https://github.com/quarkusio/quarkus/commit/9fc038a6ee160216ba043ad92bf0206bdf41de2a", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc\n\ncodestart finished?\n\nSmartPomMergeCodestartFileStrategyHandler ignores non-maven\n\ncomment smart\n\nrevert SmartPomMergeCodestart\n\nadd Andys suggestions", "committedDate": "2020-08-12T15:54:59Z", "type": "forcePushed"}, {"oid": "5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "url": "https://github.com/quarkusio/quarkus/commit/5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc\n\ncodestart finished?\n\nSmartPomMergeCodestartFileStrategyHandler ignores non-maven\n\ncomment smart\n\nrevert SmartPomMergeCodestart\n\nadd Andys suggestions\n\nfix codestarts", "committedDate": "2020-08-14T13:44:07Z", "type": "commit"}, {"oid": "5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "url": "https://github.com/quarkusio/quarkus/commit/5e7d40d4dc153ccdcc62adf306fcb6912131bae7", "message": "lambda codestart\n\nlambda finish\n\nfix amazon-lambda-http archetype\n\nazure functions codestart\n\nfunqy codestarts\n\ncodestart supports flags\n\ncodestart doc\n\ncodestart finished?\n\nSmartPomMergeCodestartFileStrategyHandler ignores non-maven\n\ncomment smart\n\nrevert SmartPomMergeCodestart\n\nadd Andys suggestions\n\nfix codestarts", "committedDate": "2020-08-14T13:44:07Z", "type": "forcePushed"}]}