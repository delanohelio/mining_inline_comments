{"pr_number": 9099, "pr_title": "Gradle dev mode test support and basic test", "pr_createdAt": "2020-05-05T22:51:31Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9099", "timeline": [{"oid": "563c4c43c34fd37fd8bc12515a5e0f43285c5690", "url": "https://github.com/quarkusio/quarkus/commit/563c4c43c34fd37fd8bc12515a5e0f43285c5690", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-05T23:03:20Z", "type": "forcePushed"}, {"oid": "47e4959f3ae48a5c374260b84635d8d2ddbe3faa", "url": "https://github.com/quarkusio/quarkus/commit/47e4959f3ae48a5c374260b84635d8d2ddbe3faa", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-06T09:22:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjE1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9099#discussion_r420666152", "bodyText": "This may need adjustment. Previously it used to look for the markers in the deployment classloader, which includes more resources than the list of the deployment deps the resolver returns.", "author": "aloubyansky", "createdAt": "2020-05-06T09:43:16Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java", "diffHunk": "@@ -171,47 +169,41 @@ ApplicationArchivesBuildItem build(\n         return ret;\n     }\n \n-    private static Collection<? extends Path> getMarkerFilePaths(ClassLoader classLoader, Set<String> applicationArchiveFiles,\n-            ArchiveRootBuildItem root)\n+    private static void addMarkerFilePaths(Set<String> applicationArchiveFiles,\n+            ArchiveRootBuildItem root, CurateOutcomeBuildItem curateOutcomeBuildItem, Set<Path> depsToIndex)\n             throws IOException {\n-        List<Path> ret = new ArrayList<>();\n-        for (String file : applicationArchiveFiles) {\n-            Enumeration<URL> e = classLoader.getResources(file);\n-            while (e.hasMoreElements()) {\n-                final URL url = e.nextElement();\n-                final Path path = urlToPath(url, file);\n-                if (!root.isExcludedFromIndexing(path)) {\n-                    ret.add(path);\n+        for (AppDependency dep : curateOutcomeBuildItem.getEffectiveModel().getFullDeploymentDeps()) {", "originalCommit": "47e4959f3ae48a5c374260b84635d8d2ddbe3faa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAxMzgyMg==", "url": "https://github.com/quarkusio/quarkus/pull/9099#discussion_r422013822", "bodyText": "Yea, this needs to be user deps, not deployment deps.", "author": "stuartwdouglas", "createdAt": "2020-05-08T08:22:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA0MzA4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/9099#discussion_r422043081", "bodyText": "Done.", "author": "aloubyansky", "createdAt": "2020-05-08T09:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e914ab0cf753ecee7129636c33fdbbe13897be57", "chunk": "diff --git a/core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java b/core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java\nindex fa862a8669..df9d5ea3a1 100644\n--- a/core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java\n+++ b/core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java\n\n@@ -147,42 +157,40 @@ public class ApplicationArchiveBuildStep {\n         }\n     }\n \n-    private static List<ApplicationArchive> indexPaths(\n-            QuarkusBuildCloseablesBuildItem buildCloseables,\n-            ArchiveRootBuildItem rootArchiveBuildItem,\n-            Set<Path> dependenciesToIndex, ClassLoader classLoader, IndexCache indexCache)\n-            throws IOException {\n-        List<ApplicationArchive> ret = new ArrayList<>();\n-\n-        for (final Path dep : dependenciesToIndex) {\n-            LOGGER.debugf(\"Indexing dependency: %s\", dep);\n-            if (Files.isDirectory(dep)) {\n-                IndexView indexView = handleFilePath(dep);\n-                ret.add(new ApplicationArchiveImpl(indexView, dep, null, false, dep));\n-            } else {\n-                IndexView index = handleJarPath(dep, indexCache);\n-                FileSystem fs = buildCloseables.add(FileSystems.newFileSystem(dep, classLoader));\n-                ret.add(new ApplicationArchiveImpl(index, fs.getRootDirectories().iterator().next(), fs, true, dep));\n-            }\n-        }\n+    private static ApplicationArchive createApplicationArchive(QuarkusBuildCloseablesBuildItem buildCloseables,\n+            ClassLoader classLoader,\n+            IndexCache indexCache, Path dep) throws IOException {\n+        final FileSystem fs = Files.isDirectory(dep) ? null : buildCloseables.add(FileSystems.newFileSystem(dep, classLoader));\n+        return new ApplicationArchiveImpl(indexPath(indexCache, dep),\n+                fs == null ? dep : fs.getRootDirectories().iterator().next(), fs, fs != null, dep);\n+    }\n \n-        return ret;\n+    private static IndexView indexPath(IndexCache indexCache, Path dep) throws IOException {\n+        LOGGER.debugf(\"Indexing dependency: %s\", dep);\n+        return Files.isDirectory(dep) ? handleFilePath(dep) : handleJarPath(dep, indexCache);\n     }\n \n     private static void addMarkerFilePaths(Set<String> applicationArchiveFiles,\n-            ArchiveRootBuildItem root, CurateOutcomeBuildItem curateOutcomeBuildItem, Set<Path> depsToIndex)\n+            ArchiveRootBuildItem root, CurateOutcomeBuildItem curateOutcomeBuildItem, Set<Path> indexedPaths,\n+            List<ApplicationArchive> appArchives, QuarkusBuildCloseablesBuildItem buildCloseables, ClassLoader classLoader,\n+            IndexCache indexCache)\n             throws IOException {\n         for (AppDependency dep : curateOutcomeBuildItem.getEffectiveModel().getFullDeploymentDeps()) {\n             final PathsCollection artifactPaths = dep.getArtifact().getPaths();\n+            boolean containsMarker = false;\n             for (Path p : artifactPaths) {\n                 if (root.isExcludedFromIndexing(p)) {\n                     continue;\n                 }\n                 if (Files.isDirectory(p)) {\n-                    addMarkerFilePaths(p, applicationArchiveFiles, artifactPaths, depsToIndex);\n+                    if (containsMarker = containsMarker(p, applicationArchiveFiles)) {\n+                        break;\n+                    }\n                 } else {\n-                    try (FileSystem fs = FileSystems.newFileSystem(p, null)) {\n-                        addMarkerFilePaths(fs.getPath(\"/\"), applicationArchiveFiles, artifactPaths, depsToIndex);\n+                    try (FileSystem fs = FileSystems.newFileSystem(p, classLoader)) {\n+                        if (containsMarker = containsMarker(fs.getPath(\"/\"), applicationArchiveFiles)) {\n+                            break;\n+                        }\n                     } catch (ProviderNotFoundException e) {\n                         // that is pretty much an exceptional case\n                         // it's not a dir and not a jar, it could be anything (e.g. a pom file that\n"}}, {"oid": "d344774ca87ff830f3ae7f610aee9410eb83019c", "url": "https://github.com/quarkusio/quarkus/commit/d344774ca87ff830f3ae7f610aee9410eb83019c", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-06T10:35:35Z", "type": "forcePushed"}, {"oid": "3bb0ec868858504d5640c5e13e136c9704550c60", "url": "https://github.com/quarkusio/quarkus/commit/3bb0ec868858504d5640c5e13e136c9704550c60", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-06T11:38:30Z", "type": "forcePushed"}, {"oid": "e914ab0cf753ecee7129636c33fdbbe13897be57", "url": "https://github.com/quarkusio/quarkus/commit/e914ab0cf753ecee7129636c33fdbbe13897be57", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-07T15:09:08Z", "type": "forcePushed"}, {"oid": "37edb11ee7db9539d5ec36ff0f2ef98f32a3d528", "url": "https://github.com/quarkusio/quarkus/commit/37edb11ee7db9539d5ec36ff0f2ef98f32a3d528", "message": "trying something for windows", "committedDate": "2020-05-07T22:59:25Z", "type": "forcePushed"}, {"oid": "638b22b3b8edc3755e3dd8ad67d508bda4097a90", "url": "https://github.com/quarkusio/quarkus/commit/638b22b3b8edc3755e3dd8ad67d508bda4097a90", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-08T09:26:13Z", "type": "commit"}, {"oid": "638b22b3b8edc3755e3dd8ad67d508bda4097a90", "url": "https://github.com/quarkusio/quarkus/commit/638b22b3b8edc3755e3dd8ad67d508bda4097a90", "message": "* Basic Gradle quarkusDev test\n* Include resources directories into the build classpath in dev mode\n* Include all the artifact's paths into the index if at least one of the artifact's dirs contains a marker file", "committedDate": "2020-05-08T09:26:13Z", "type": "forcePushed"}]}