{"pr_number": 12140, "pr_title": "Check for null context (oidc logout flow)", "pr_createdAt": "2020-09-16T14:52:53Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12140", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489545535", "bodyText": "It's minor and you don't have to fix it this time but we usually recommend to do:\nif (socketMetric == null) {\n    return socketMetric; // or return null\n}\n\nrather than nesting ifs.\nIt's far more readable to just take care of the exceptional cases at the beginning of your method and then do your logic.", "author": "gsmet", "createdAt": "2020-09-16T15:52:11Z", "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -77,12 +77,14 @@\n     @Override\n     public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n-        String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n-        if (path != null) {\n-            registry.counter(nameHttpServerPush,\n-                    Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n-                            VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n-                    .increment();\n+        if (socketMetric != null) {", "originalCommit": "18688019277ff1af422dabcfeca23ad1e9ff78c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NTg3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489555873", "bodyText": "I actually thought of doing that first as I prefer positive checks, too. Give me a few minutes", "author": "ebullient", "createdAt": "2020-09-16T16:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1OTkwNg==", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489559906", "bodyText": "Yeah it's not really about positive checks, I would have said the same thing if it would have been a negative one. The idea is to keep the normal flow as simple as possible by evacuating special cases first.", "author": "gsmet", "createdAt": "2020-09-16T16:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NTU1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489575553", "bodyText": "I simplified a few, and clarified javadoc re: null params & return values.", "author": "ebullient", "createdAt": "2020-09-16T16:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c5f4c49bbd5d1b0f7ea8fbb13f6f58cd52aa9438", "chunk": "diff --git a/extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java b/extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java\nindex 69be8b3996..23794a7903 100644\n--- a/extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java\n+++ b/extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java\n\n@@ -68,23 +68,21 @@ public class VertxHttpServerMetrics extends VertxTcpMetrics\n     /**\n      * Called when an http server response is pushed.\n      *\n-     * @param socketMetric the socket metric\n+     * @param socketMetric a MetricsContext object for socket metric context\n      * @param method the pushed response method\n      * @param uri the pushed response uri\n      * @param response the http server response\n-     * @return the request metric\n+     * @return a MetricsContext object for request metric context or null\n      */\n     @Override\n     public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n-        if (socketMetric != null) {\n-            String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n-            if (path != null) {\n-                registry.counter(nameHttpServerPush,\n-                        Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n-                                VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n-                        .increment();\n-            }\n+        String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n+        if (path != null) {\n+            registry.counter(nameHttpServerPush,\n+                    Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n+                            VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n+                    .increment();\n         }\n         return socketMetric;\n     }\n"}}, {"oid": "c5f4c49bbd5d1b0f7ea8fbb13f6f58cd52aa9438", "url": "https://github.com/quarkusio/quarkus/commit/c5f4c49bbd5d1b0f7ea8fbb13f6f58cd52aa9438", "message": "Check for null context (oidc logout flow)", "committedDate": "2020-09-16T16:38:43Z", "type": "commit"}, {"oid": "c5f4c49bbd5d1b0f7ea8fbb13f6f58cd52aa9438", "url": "https://github.com/quarkusio/quarkus/commit/c5f4c49bbd5d1b0f7ea8fbb13f6f58cd52aa9438", "message": "Check for null context (oidc logout flow)", "committedDate": "2020-09-16T16:38:43Z", "type": "forcePushed"}]}