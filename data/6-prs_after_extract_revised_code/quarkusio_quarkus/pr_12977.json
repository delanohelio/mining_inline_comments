{"pr_number": 12977, "pr_title": "Reimplement the QuarkusJTAPlatform to avoid leaking the ORM registry", "pr_createdAt": "2020-10-27T11:30:02Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12977", "timeline": [{"oid": "a33daeae19c81846bf61b817d7a2f76297792d47", "url": "https://github.com/quarkusio/quarkus/commit/a33daeae19c81846bf61b817d7a2f76297792d47", "message": "Reimplement the QuarkusJTAPlatform to avoid leaking the ORM registry", "committedDate": "2020-10-27T11:29:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzOTQ0OA==", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512939448", "bodyText": "Looks like some double checked locking except I don't see the synchronized part.\nIs it safe?", "author": "gsmet", "createdAt": "2020-10-27T18:39:36Z", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "diffHunk": "@@ -1,26 +1,72 @@\n package io.quarkus.hibernate.orm.runtime.customized;\n \n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.UserTransaction;\n \n-import org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n+import org.hibernate.engine.transaction.jta.platform.internal.JtaSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;\n \n-public final class QuarkusJtaPlatform extends AbstractJtaPlatform {\n+public final class QuarkusJtaPlatform implements JtaPlatform, TransactionManagerAccess {\n \n     public static final QuarkusJtaPlatform INSTANCE = new QuarkusJtaPlatform();\n \n+    private final JtaSynchronizationStrategy tmSynchronizationStrategy = new TransactionManagerBasedSynchronizationStrategy(\n+            this);\n+    private volatile TransactionManager transactionManager;\n+    private volatile UserTransaction userTransaction;\n+\n     private QuarkusJtaPlatform() {\n         //nothing\n     }\n \n     @Override\n-    protected TransactionManager locateTransactionManager() {\n-        return com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    public TransactionManager retrieveTransactionManager() {\n+        TransactionManager transactionManager = this.transactionManager;\n+        if (transactionManager == null) {", "originalCommit": "a33daeae19c81846bf61b817d7a2f76297792d47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MzQ1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512943453", "bodyText": "it's safe as the method we invoke is synchronized and returns a singleton.", "author": "Sanne", "createdAt": "2020-10-27T18:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzOTQ0OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MDEyNw==", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512940127", "bodyText": "Same question here.", "author": "gsmet", "createdAt": "2020-10-27T18:40:43Z", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "diffHunk": "@@ -1,26 +1,72 @@\n package io.quarkus.hibernate.orm.runtime.customized;\n \n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.UserTransaction;\n \n-import org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n+import org.hibernate.engine.transaction.jta.platform.internal.JtaSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;\n \n-public final class QuarkusJtaPlatform extends AbstractJtaPlatform {\n+public final class QuarkusJtaPlatform implements JtaPlatform, TransactionManagerAccess {\n \n     public static final QuarkusJtaPlatform INSTANCE = new QuarkusJtaPlatform();\n \n+    private final JtaSynchronizationStrategy tmSynchronizationStrategy = new TransactionManagerBasedSynchronizationStrategy(\n+            this);\n+    private volatile TransactionManager transactionManager;\n+    private volatile UserTransaction userTransaction;\n+\n     private QuarkusJtaPlatform() {\n         //nothing\n     }\n \n     @Override\n-    protected TransactionManager locateTransactionManager() {\n-        return com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    public TransactionManager retrieveTransactionManager() {\n+        TransactionManager transactionManager = this.transactionManager;\n+        if (transactionManager == null) {\n+            transactionManager = com.arjuna.ats.jta.TransactionManager.transactionManager();\n+            this.transactionManager = transactionManager;\n+        }\n+        return transactionManager;\n+    }\n+\n+    @Override\n+    public TransactionManager getTransactionManager() {\n+        return retrieveTransactionManager();\n+    }\n+\n+    @Override\n+    public UserTransaction retrieveUserTransaction() {\n+        UserTransaction userTransaction = this.userTransaction;\n+        if (this.userTransaction == null) {\n+            userTransaction = com.arjuna.ats.jta.UserTransaction.userTransaction();\n+            this.userTransaction = userTransaction;\n+        }", "originalCommit": "a33daeae19c81846bf61b817d7a2f76297792d47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0Mzk0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512943943", "bodyText": "same :)", "author": "Sanne", "createdAt": "2020-10-27T18:46:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MDEyNw=="}], "type": "inlineReview", "revised_code": null}]}