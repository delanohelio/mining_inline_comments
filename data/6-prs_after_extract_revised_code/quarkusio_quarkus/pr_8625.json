{"pr_number": 8625, "pr_title": "Drop OIDC code flow query params before the endpoint is called", "pr_createdAt": "2020-04-16T16:59:21Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8625", "timeline": [{"oid": "4ad033230869904c09d2b80c7467b3b717432a8a", "url": "https://github.com/quarkusio/quarkus/commit/4ad033230869904c09d2b80c7467b3b717432a8a", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-16T21:51:37Z", "type": "forcePushed"}, {"oid": "a3d86b743668ea4d8c47c1397e864de81e8f908d", "url": "https://github.com/quarkusio/quarkus/commit/a3d86b743668ea4d8c47c1397e864de81e8f908d", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-17T14:38:39Z", "type": "forcePushed"}, {"oid": "64cd6182a91054bdcc0319a0199c19ed50cfd1a4", "url": "https://github.com/quarkusio/quarkus/commit/64cd6182a91054bdcc0319a0199c19ed50cfd1a4", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-17T15:13:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0MDcwMg==", "url": "https://github.com/quarkusio/quarkus/pull/8625#discussion_r410740702", "bodyText": "Any reason why this and other tests are marked as @Disabled ?", "author": "pedroigor", "createdAt": "2020-04-18T19:29:59Z", "path": "integration-tests/oidc-code-flow/src/test/java/io/quarkus/it/keycloak/CodeFlowTest.java", "diffHunk": "@@ -112,6 +125,7 @@ public void testTokenTimeoutLogout() throws IOException, InterruptedException {\n     }\n \n     @Test\n+    @Disabled", "originalCommit": "64cd6182a91054bdcc0319a0199c19ed50cfd1a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI0NzExNw==", "url": "https://github.com/quarkusio/quarkus/pull/8625#discussion_r411247117", "bodyText": "@pedroigor Forgot to re-enable, the timeout test was failing so I was looking at that test only, sorry", "author": "sberyozkin", "createdAt": "2020-04-20T09:54:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0MDcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "1f1cfad0a17bca1cfe90ca9413f44e29f741ce53", "chunk": "diff --git a/integration-tests/oidc-code-flow/src/test/java/io/quarkus/it/keycloak/CodeFlowTest.java b/integration-tests/oidc-code-flow/src/test/java/io/quarkus/it/keycloak/CodeFlowTest.java\nindex 851bebbae1..17de4f9d06 100644\n--- a/integration-tests/oidc-code-flow/src/test/java/io/quarkus/it/keycloak/CodeFlowTest.java\n+++ b/integration-tests/oidc-code-flow/src/test/java/io/quarkus/it/keycloak/CodeFlowTest.java\n\n@@ -125,7 +123,84 @@ public class CodeFlowTest {\n     }\n \n     @Test\n-    @Disabled\n+    public void testRPInitiatedLogout() throws IOException {\n+        try (final WebClient webClient = createWebClient()) {\n+            HtmlPage page = webClient.getPage(\"http://localhost:8081/tenant-logout\");\n+            assertEquals(\"Log in to logout-realm\", page.getTitleText());\n+            HtmlForm loginForm = page.getForms().get(0);\n+            loginForm.getInputByName(\"username\").setValueAttribute(\"alice\");\n+            loginForm.getInputByName(\"password\").setValueAttribute(\"alice\");\n+            page = loginForm.getInputByName(\"login\").click();\n+            assertTrue(page.asText().contains(\"Tenant Logout\"));\n+            assertNotNull(getSessionCookie(webClient));\n+\n+            page = webClient.getPage(\"http://localhost:8081/tenant-logout/logout\");\n+            assertTrue(page.asText().contains(\"You were logged out\"));\n+            assertNull(getSessionCookie(webClient));\n+\n+            page = webClient.getPage(\"http://localhost:8081/tenant-logout\");\n+            assertEquals(\"Log in to logout-realm\", page.getTitleText());\n+            loginForm = page.getForms().get(0);\n+            loginForm.getInputByName(\"username\").setValueAttribute(\"alice\");\n+            loginForm.getInputByName(\"password\").setValueAttribute(\"alice\");\n+            page = loginForm.getInputByName(\"login\").click();\n+            assertTrue(page.asText().contains(\"Tenant Logout\"));\n+\n+            Cookie sessionCookie = getSessionCookie(webClient);\n+            assertNotNull(sessionCookie);\n+            String idToken = getIdToken(sessionCookie);\n+\n+            //wait now so that we reach the refresh timeout\n+            await().atMost(10, TimeUnit.SECONDS)\n+                    .pollInterval(Duration.ofSeconds(1))\n+                    .until(new Callable<Boolean>() {\n+                        @Override\n+                        public Boolean call() throws Exception {\n+                            webClient.getOptions().setRedirectEnabled(false);\n+                            WebResponse webResponse = webClient\n+                                    .loadWebResponse(new WebRequest(URI.create(\"http://localhost:8081/tenant-logout\").toURL()));\n+                            // Should not redirect to OP but silently refresh token\n+                            Cookie newSessionCookie = getSessionCookie(webClient);\n+                            assertNotNull(newSessionCookie);\n+                            return !idToken.equals(getIdToken(newSessionCookie));\n+                        }\n+                    });\n+\n+            // local session refreshed and still valid\n+            page = webClient.getPage(\"http://localhost:8081/tenant-logout\");\n+            assertTrue(page.asText().contains(\"Tenant Logout\"));\n+            assertNotNull(getSessionCookie(webClient));\n+\n+            //wait now so that we reach the refresh timeout\n+            await().atMost(20, TimeUnit.SECONDS)\n+                    .pollInterval(Duration.ofSeconds(1))\n+                    .until(new Callable<Boolean>() {\n+                        @Override\n+                        public Boolean call() throws Exception {\n+                            webClient.getOptions().setRedirectEnabled(false);\n+                            WebResponse webResponse = webClient\n+                                    .loadWebResponse(new WebRequest(URI.create(\"http://localhost:8081/tenant-logout\").toURL()));\n+                            // Should redirect to login page given that session is now expired at the OP\n+                            int statusCode = webResponse.getStatusCode();\n+\n+                            if (statusCode == 302) {\n+                                assertNull(getSessionCookie(webClient));\n+                                return true;\n+                            }\n+\n+                            return false;\n+                        }\n+                    });\n+\n+            // session invalidated because it ended at the OP, should redirect to login page at the OP\n+            webClient.getOptions().setRedirectEnabled(true);\n+            page = webClient.getPage(\"http://localhost:8081/tenant-logout\");\n+            assertNull(getSessionCookie(webClient));\n+            assertEquals(\"Log in to logout-realm\", page.getTitleText());\n+        }\n+    }\n+\n+    @Test\n     public void testIdTokenInjection() throws IOException {\n         try (final WebClient webClient = createWebClient()) {\n             HtmlPage page = webClient.getPage(\"http://localhost:8081/index.html\");\n"}}, {"oid": "1f1cfad0a17bca1cfe90ca9413f44e29f741ce53", "url": "https://github.com/quarkusio/quarkus/commit/1f1cfad0a17bca1cfe90ca9413f44e29f741ce53", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-20T21:33:09Z", "type": "forcePushed"}, {"oid": "42bd41886215a1f1f71b1b7e2ec7b634b537767a", "url": "https://github.com/quarkusio/quarkus/commit/42bd41886215a1f1f71b1b7e2ec7b634b537767a", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-21T08:25:55Z", "type": "forcePushed"}, {"oid": "1f12e20b279ffd98f6f26717223b94a68da1d89d", "url": "https://github.com/quarkusio/quarkus/commit/1f12e20b279ffd98f6f26717223b94a68da1d89d", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-24T16:55:04Z", "type": "forcePushed"}, {"oid": "59aa669babdf0039cbdee2a0799edffc1849743b", "url": "https://github.com/quarkusio/quarkus/commit/59aa669babdf0039cbdee2a0799edffc1849743b", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-24T21:58:45Z", "type": "commit"}, {"oid": "59aa669babdf0039cbdee2a0799edffc1849743b", "url": "https://github.com/quarkusio/quarkus/commit/59aa669babdf0039cbdee2a0799edffc1849743b", "message": "Drop OIDC code flow query params before the endpoint is called", "committedDate": "2020-04-24T21:58:45Z", "type": "forcePushed"}]}