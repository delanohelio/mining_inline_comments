{"pr_number": 12224, "pr_title": "Solves quarkus kakfa-streams extension devmode issue", "pr_createdAt": "2020-09-21T08:19:04Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12224", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwMjkwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/12224#discussion_r492002909", "bodyText": "Instead of having to reason about the two booleans, how about establishing an enum which exposes all the potential states the producer can be in, e.g. enum State { RUNNING, RUNNING_NON_STOPPABLE, STOPPED}?", "author": "gunnarmorling", "createdAt": "2020-09-21T12:27:06Z", "path": "extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java", "diffHunk": "@@ -54,6 +54,8 @@\n     private static final Logger LOGGER = Logger.getLogger(KafkaStreamsProducer.class.getName());\n     private static volatile boolean shutdown = false;\n \n+    public static volatile boolean ignoreShutdownFlag = false;", "originalCommit": "d08186f6e93a240f0a72b37f11b299651834a066", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwNzg0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/12224#discussion_r492107849", "bodyText": "I'll drop the 2nd boolean", "author": "vietk", "createdAt": "2020-09-21T14:48:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwMjkwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "12c66131b67525c5f563a5eb1d027519aff16031", "chunk": "diff --git a/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java b/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java\nindex b4ab7f8b6b..b9587c916d 100644\n--- a/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java\n+++ b/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java\n\n@@ -54,8 +54,6 @@ public class KafkaStreamsProducer {\n     private static final Logger LOGGER = Logger.getLogger(KafkaStreamsProducer.class.getName());\n     private static volatile boolean shutdown = false;\n \n-    public static volatile boolean ignoreShutdownFlag = false;\n-\n     private final ExecutorService executorService;\n     private final KafkaStreams kafkaStreams;\n     private final KafkaStreamsTopologyManager kafkaStreamsTopologyManager;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwMzM2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12224#discussion_r492003363", "bodyText": "Won't this cause things to not shut down properly? If a shutdown request comes in while this flag is set, this request will be ignored, but it seems we'd never do the shutdown later on then?", "author": "gunnarmorling", "createdAt": "2020-09-21T12:27:54Z", "path": "extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/devmode/KafkaStreamsHotReplacementSetup.java", "diffHunk": "@@ -32,11 +33,14 @@ public void run() {\n                             @Override\n                             public void run() {\n                                 try {\n+                                    KafkaStreamsProducer.ignoreShutdownFlag = true;", "originalCommit": "d08186f6e93a240f0a72b37f11b299651834a066", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwNzYwNw==", "url": "https://github.com/quarkusio/quarkus/pull/12224#discussion_r492107607", "bodyText": "I think @rquinio's comment make sense in fact.\nThe producer bean is recreated however, the class is still the same as loaded before, however shutdown flag is set to true because if the first shutdown from dev mode. So putting the state back to the initial value in the constructor should make the trick", "author": "vietk", "createdAt": "2020-09-21T14:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwMzM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "12c66131b67525c5f563a5eb1d027519aff16031", "chunk": "diff --git a/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/devmode/KafkaStreamsHotReplacementSetup.java b/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/devmode/KafkaStreamsHotReplacementSetup.java\nindex 7aa7ee99ca..d5bbcac879 100644\n--- a/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/devmode/KafkaStreamsHotReplacementSetup.java\n+++ b/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/devmode/KafkaStreamsHotReplacementSetup.java\n\n@@ -33,14 +32,11 @@ public class KafkaStreamsHotReplacementSetup implements HotReplacementSetup {\n                             @Override\n                             public void run() {\n                                 try {\n-                                    KafkaStreamsProducer.ignoreShutdownFlag = true;\n                                     context.doScan(true);\n                                 } catch (RuntimeException e) {\n                                     throw e;\n                                 } catch (Exception e) {\n                                     throw new RuntimeException(e);\n-                                } finally {\n-                                    KafkaStreamsProducer.ignoreShutdownFlag = false;\n                                 }\n                             }\n                         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwNTA1NA==", "url": "https://github.com/quarkusio/quarkus/pull/12224#discussion_r492005054", "bodyText": "It may be simpler to set shutdown to false in KafkaStreamsProducer constructor ?\nIf injection is being re-triggered, I suppose it means a restart is happening in same classloader.", "author": "rquinio", "createdAt": "2020-09-21T12:29:52Z", "path": "extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java", "diffHunk": "@@ -103,7 +105,9 @@ public KafkaStreamsTopologyManager kafkaStreamsTopologyManager() {\n     }\n \n     void onStop(@Observes ShutdownEvent event) {\n-        shutdown = true;\n+        if (!ignoreShutdownFlag) {", "originalCommit": "d08186f6e93a240f0a72b37f11b299651834a066", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEyMTU1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12224#discussion_r492121555", "bodyText": "makes sense, tested it works", "author": "vietk", "createdAt": "2020-09-21T15:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAwNTA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "12c66131b67525c5f563a5eb1d027519aff16031", "chunk": "diff --git a/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java b/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java\nindex b4ab7f8b6b..b9587c916d 100644\n--- a/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java\n+++ b/extensions/kafka-streams/runtime/src/main/java/io/quarkus/kafka/streams/runtime/KafkaStreamsProducer.java\n\n@@ -105,9 +104,7 @@ public class KafkaStreamsProducer {\n     }\n \n     void onStop(@Observes ShutdownEvent event) {\n-        if (!ignoreShutdownFlag) {\n-            shutdown = true;\n-        }\n+        shutdown = true;\n         if (executorService != null) {\n             executorService.shutdown();\n         }\n"}}, {"oid": "12c66131b67525c5f563a5eb1d027519aff16031", "url": "https://github.com/quarkusio/quarkus/commit/12c66131b67525c5f563a5eb1d027519aff16031", "message": "Solves quarkus kakfa-streams extension devmode issue", "committedDate": "2020-09-21T15:01:00Z", "type": "commit"}, {"oid": "12c66131b67525c5f563a5eb1d027519aff16031", "url": "https://github.com/quarkusio/quarkus/commit/12c66131b67525c5f563a5eb1d027519aff16031", "message": "Solves quarkus kakfa-streams extension devmode issue", "committedDate": "2020-09-21T15:01:00Z", "type": "forcePushed"}]}