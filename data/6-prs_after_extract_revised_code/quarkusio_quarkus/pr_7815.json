{"pr_number": 7815, "pr_title": "Move Kogito extension out of the Quarkus core repository", "pr_createdAt": "2020-03-12T13:30:22Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7815", "timeline": [{"oid": "84abed8d2c48c004dcfc6edc27d6d30a41ca999c", "url": "https://github.com/quarkusio/quarkus/commit/84abed8d2c48c004dcfc6edc27d6d30a41ca999c", "message": "remove kogito extension from quarkus codebase", "committedDate": "2020-03-12T13:27:39Z", "type": "commit"}, {"oid": "c74ab7d97d2d40aabf5c31088cb54ae5dca795ac", "url": "https://github.com/quarkusio/quarkus/commit/c74ab7d97d2d40aabf5c31088cb54ae5dca795ac", "message": "Fix Optaplanner integration test", "committedDate": "2020-03-12T13:27:39Z", "type": "commit"}, {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359", "url": "https://github.com/quarkusio/quarkus/commit/c3625ade52d34fca4bb13314e33a7ebd053d1359", "message": "remove kogito from CI", "committedDate": "2020-03-12T14:52:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392118712", "bodyText": "-1\nThis is a substitution that should happen in Kogito (= Drools), not in OptaPlanner. It's not OptaPlanner alone that will suffer from it.  OptaPlanner should not work around it, Kogito should fix it. Kogito 0.8.0 is borked, we need a Kogito 0.8.1 release.", "author": "ge0ffrey", "createdAt": "2020-03-13T09:35:19Z", "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "originalCommit": "c3625ade52d34fca4bb13314e33a7ebd053d1359", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExOTc0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392119749", "bodyText": "If we want to get the PR in, there is no other way. If you folks want to wait for a Kogito release that doesn't suffer from this, that's up to you :).\nBut if you want it in no, there is no other way", "author": "geoand", "createdAt": "2020-03-13T09:37:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MDI4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392150281", "bodyText": "I am willing to comprise to merge it like this for Quarkus 1.3.0 as a temporarily workaround (*), if there's a commitment to revert it by Quarkus 1.3.1 by releasing and using Kogito 0.8.1. @mariofusco wdyt?\n(*) Let's add a comment stating that it's a temporarily workaround.", "author": "ge0ffrey", "createdAt": "2020-03-13T10:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MTUwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392151509", "bodyText": "In any case, this PR isn't making it into any 1.3.x line. We are talking purely for 1.4, whether it goes in as is, or with a new Kogito version", "author": "geoand", "createdAt": "2020-03-13T10:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392387784", "bodyText": "Why is the class name different from KogitoSubstitutions?", "author": "gastaldi", "createdAt": "2020-03-13T18:01:57Z", "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "originalCommit": "c3625ade52d34fca4bb13314e33a7ebd053d1359", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4OTM5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392389396", "bodyText": "It doesn't really matter since it's going away really really soon \ud83d\ude0e", "author": "geoand", "createdAt": "2020-03-13T18:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MDg4OA==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392390888", "bodyText": "Well yeah, it's just that it's confusing to look at this class and see another name :)", "author": "gastaldi", "createdAt": "2020-03-13T18:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MjM1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392392355", "bodyText": "The idea was that multiple substitutions might have been needed. For example like Netty.\nIt turned out that it wasn't needed \ud83d\ude0a", "author": "geoand", "createdAt": "2020-03-13T18:11:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA=="}], "type": "inlineReview", "revised_code": null}]}