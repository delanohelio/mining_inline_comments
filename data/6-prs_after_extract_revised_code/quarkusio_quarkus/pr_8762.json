{"pr_number": 8762, "pr_title": "Fix broken Kafka Quickstarts", "pr_createdAt": "2020-04-22T17:04:38Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8762", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2ODc4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8762#discussion_r413568785", "bodyText": "Should we add ByteBuffer in the reflection list. The cleaner method may be removed during the native compilation. The class returned by the \"cleaner\" method should also be registered.", "author": "cescoffier", "createdAt": "2020-04-23T07:15:10Z", "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/ByteBufferUnmapper.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.quarkus.kafka.client.runtime.graal;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import java.nio.ByteBuffer;\n+\n+import org.apache.kafka.common.utils.ByteBufferUnmapper;\n+\n+import com.oracle.svm.core.annotate.Substitute;\n+import com.oracle.svm.core.annotate.TargetClass;\n+import com.oracle.svm.core.jdk.JDK8OrEarlier;\n+\n+@TargetClass(value = ByteBufferUnmapper.class, onlyWith = JDK8OrEarlier.class)\n+final class Target_org_apache_kafka_common_utils_ByteBufferUnmapper {\n+\n+    @Substitute\n+    public static void unmap(String resourceDescription, ByteBuffer buffer) throws IOException {\n+        if (!buffer.isDirect())\n+            throw new IllegalArgumentException(\"Unmapping only works with direct buffers\");\n+        try {\n+            Method cleanerMethod = buffer.getClass().getMethod(\"cleaner\");", "originalCommit": "2b117fbc38967fd3f35cb820be3e4ac73aa9f602", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MDU0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8762#discussion_r413580543", "bodyText": "Done", "author": "geoand", "createdAt": "2020-04-23T07:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2ODc4NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2f35a3a58cceaca401b12a729fac6c9447f8f684", "url": "https://github.com/quarkusio/quarkus/commit/2f35a3a58cceaca401b12a729fac6c9447f8f684", "message": "Fix broken Kafka Quickstarts\n\nThis problem was introduced by our bump to Kafka 2.5.\nThe substitution uses simple reflection to invoke the cleaner\non a DirectByteBuffer", "committedDate": "2020-04-23T07:34:22Z", "type": "commit"}, {"oid": "2f35a3a58cceaca401b12a729fac6c9447f8f684", "url": "https://github.com/quarkusio/quarkus/commit/2f35a3a58cceaca401b12a729fac6c9447f8f684", "message": "Fix broken Kafka Quickstarts\n\nThis problem was introduced by our bump to Kafka 2.5.\nThe substitution uses simple reflection to invoke the cleaner\non a DirectByteBuffer", "committedDate": "2020-04-23T07:34:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzMjUyNA==", "url": "https://github.com/quarkusio/quarkus/pull/8762#discussion_r413632524", "bodyText": "Wondering if that would fail on Java 11... The CI will let us now.", "author": "cescoffier", "createdAt": "2020-04-23T08:49:06Z", "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -105,6 +105,10 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n         reflectiveClass.produce(new ReflectiveClassBuildItem(false, false, RangeAssignor.class.getName()));\n         reflectiveClass.produce(new ReflectiveClassBuildItem(false, false, RoundRobinAssignor.class.getName()));\n         reflectiveClass.produce(new ReflectiveClassBuildItem(false, false, StickyAssignor.class.getName()));\n+\n+        // classes needed to perform reflection on DirectByteBuffer - only really needed for Java 8\n+        reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"java.nio.DirectByteBuffer\"));\n+        reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"sun.misc.Cleaner\"));", "originalCommit": "2f35a3a58cceaca401b12a729fac6c9447f8f684", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzNDAwOA==", "url": "https://github.com/quarkusio/quarkus/pull/8762#discussion_r413634008", "bodyText": "It won't. I tried all combinations :)", "author": "geoand", "createdAt": "2020-04-23T08:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYzMjUyNA=="}], "type": "inlineReview", "revised_code": null}]}