{"pr_number": 10176, "pr_title": "Make sure request resumes on correct thread", "pr_createdAt": "2020-06-23T02:28:48Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10176", "timeline": [{"oid": "91c3744217f35352c5d2a3e5e8b8bf177baa8568", "url": "https://github.com/quarkusio/quarkus/commit/91c3744217f35352c5d2a3e5e8b8bf177baa8568", "message": "Make sure request resumes on correct thread\n\nFixes #9693", "committedDate": "2020-06-23T02:57:43Z", "type": "forcePushed"}, {"oid": "573372278f96f0277bb8386aa49f4f913affeeb0", "url": "https://github.com/quarkusio/quarkus/commit/573372278f96f0277bb8386aa49f4f913affeeb0", "message": "Make sure request resumes on correct thread\n\nFixes #9693", "committedDate": "2020-07-06T02:41:46Z", "type": "forcePushed"}, {"oid": "73e1aaa9e91cd8ee7e7b9c31e0958c0d59aacf78", "url": "https://github.com/quarkusio/quarkus/commit/73e1aaa9e91cd8ee7e7b9c31e0958c0d59aacf78", "message": "Make sure request resumes on correct thread\n\nFixes #9693", "committedDate": "2020-07-06T09:32:19Z", "type": "forcePushed"}, {"oid": "a1496926893a4027c4797022d1ad6fe7f7c7fe64", "url": "https://github.com/quarkusio/quarkus/commit/a1496926893a4027c4797022d1ad6fe7f7c7fe64", "message": "Make sure request resumes on correct thread\n\nFixes #9693", "committedDate": "2020-07-07T04:39:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTgxMw==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r450819813", "bodyText": "This change shouldn't be needed anymore.", "author": "tsegismont", "createdAt": "2020-07-07T12:16:46Z", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/devmode/VertxHttpHotReplacementSetup.java", "diffHunk": "@@ -39,7 +40,8 @@ void handleHotReplacementRequest(RoutingContext routingContext) {\n             routingContext.next();\n             return;\n         }\n-        routingContext.vertx().executeBlocking(new Handler<Promise<Boolean>>() {\n+        ConnectionBase connectionBase = (ConnectionBase) routingContext.request().connection();", "originalCommit": "629de0a9434817f3e41821f604e4a340f920b86f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgzMTYzMQ==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r450831631", "bodyText": "It is, the old code could resume on a different IO thread in the same vert.x instance, this makes sure it is the same thread that will be delivering the IO notifications.", "author": "stuartwdouglas", "createdAt": "2020-07-07T12:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg3NDA3OA==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r450874078", "bodyText": "Sorry I can't see how, do you have a simple example in mind?", "author": "tsegismont", "createdAt": "2020-07-07T13:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIwNTI5NA==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r451205294", "bodyText": "Actually the original code should be safe now, as it stores the original context. Either way though this code is fine.", "author": "stuartwdouglas", "createdAt": "2020-07-07T23:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTgxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUyMzIyNw==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r451523227", "bodyText": "OK", "author": "tsegismont", "createdAt": "2020-07-08T12:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTgxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMjM2NA==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r450822364", "bodyText": "How about updating TestRoute so that the handler calls executing blocking, and we verify that the context when calling executingBlocking and when the callback is involved is the same:\nVertx vertx = rc.vertx()\nexpected = vertx.getOrCreateContext();\nvertx.executeBlocking(Promise::complete, ar -> {\n  actual = vertx.getOrCreateContext();\n  // expected should be the same as actual\n  // before AND after hot reload\n})", "author": "tsegismont", "createdAt": "2020-07-07T12:21:41Z", "path": "extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/VertxWebDevModeTestCase.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.quarkus.vertx.web;\n+\n+import java.util.function.Function;\n+\n+import org.hamcrest.Matchers;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusDevModeTest;\n+import io.restassured.RestAssured;\n+\n+public class VertxWebDevModeTestCase {\n+\n+    @RegisterExtension\n+    static QuarkusDevModeTest runner = new QuarkusDevModeTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(TestRoute.class));\n+\n+    @Test\n+    public void testRunningInDevMode() {\n+        RestAssured.given()\n+                .body(\"OK\")\n+                .post(\"/test\")\n+                .then().statusCode(200)\n+                .body(Matchers.equalTo(\"test route\"));\n+\n+        runner.modifySourceFile(TestRoute.class, new Function<String, String>() {", "originalCommit": "629de0a9434817f3e41821f604e4a340f920b86f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0ODEwNg==", "url": "https://github.com/quarkusio/quarkus/pull/10176#discussion_r451548106", "bodyText": "I have updated the test to verify the connection vertx instance matches the current vertx instance.", "author": "stuartwdouglas", "createdAt": "2020-07-08T13:34:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMjM2NA=="}], "type": "inlineReview", "revised_code": {"commit": "59e314f9159ccccf6db014e290095e4d258dd1f6", "chunk": "diff --git a/extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/VertxWebDevModeTestCase.java b/extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/VertxWebDevModeTestCase.java\nindex e6237d509e..908fe16848 100644\n--- a/extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/VertxWebDevModeTestCase.java\n+++ b/extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/VertxWebDevModeTestCase.java\n\n@@ -16,7 +16,7 @@ public class VertxWebDevModeTestCase {\n     @RegisterExtension\n     static QuarkusDevModeTest runner = new QuarkusDevModeTest()\n             .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n-                    .addClasses(TestRoute.class));\n+                    .addClasses(DevModeRoute.class));\n \n     @Test\n     public void testRunningInDevMode() {\n"}}, {"oid": "d42e123b4eda3095a14ef45fb0737b15d90bea67", "url": "https://github.com/quarkusio/quarkus/commit/d42e123b4eda3095a14ef45fb0737b15d90bea67", "message": "Make sure request resumes on correct thread\n\nFixes #9693", "committedDate": "2020-07-08T13:26:19Z", "type": "commit"}, {"oid": "59e314f9159ccccf6db014e290095e4d258dd1f6", "url": "https://github.com/quarkusio/quarkus/commit/59e314f9159ccccf6db014e290095e4d258dd1f6", "message": "Don't create a new Vert.x on dev mode restart", "committedDate": "2020-07-08T13:33:53Z", "type": "forcePushed"}, {"oid": "6f781d24f1626d9fa55a60a577f2d6c92e099240", "url": "https://github.com/quarkusio/quarkus/commit/6f781d24f1626d9fa55a60a577f2d6c92e099240", "message": "Don't create a new Vert.x on dev mode restart", "committedDate": "2020-07-08T13:36:00Z", "type": "commit"}, {"oid": "6f781d24f1626d9fa55a60a577f2d6c92e099240", "url": "https://github.com/quarkusio/quarkus/commit/6f781d24f1626d9fa55a60a577f2d6c92e099240", "message": "Don't create a new Vert.x on dev mode restart", "committedDate": "2020-07-08T13:36:00Z", "type": "forcePushed"}]}