{"pr_number": 9823, "pr_title": "UnremovableBuildItem - introduce convenient factory methods ", "pr_createdAt": "2020-06-05T11:59:01Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9823", "timeline": [{"oid": "9a138726494bd0dc8bec4d690904ae86a56f3b4e", "url": "https://github.com/quarkusio/quarkus/commit/9a138726494bd0dc8bec4d690904ae86a56f3b4e", "message": "Introduce UnremovableBuildItem.Builder\n\n- also fix AnnotatedUnremovableClassesProcessor that used\nSet<AnnotationTarget> (ClassInfo does not implement equals/hashCode)", "committedDate": "2020-06-05T12:06:07Z", "type": "forcePushed"}, {"oid": "1cae5f10b062e714a464d37b39b3203bf993f322", "url": "https://github.com/quarkusio/quarkus/commit/1cae5f10b062e714a464d37b39b3203bf993f322", "message": "Introduce UnremovableBuildItem.Builder\n\n- also fix AnnotatedUnremovableClassesProcessor that used\nSet<AnnotationTarget> (ClassInfo does not implement equals/hashCode)", "committedDate": "2020-06-05T12:17:33Z", "type": "forcePushed"}, {"oid": "6dcf24e80e6145ab76a2849856057d4dab3295f4", "url": "https://github.com/quarkusio/quarkus/commit/6dcf24e80e6145ab76a2849856057d4dab3295f4", "message": "UnremovableBuildItem - introduce convenient factory methods\n\n- also fix AnnotatedUnremovableClassesProcessor that used\nSet<AnnotationTarget> (ClassInfo does not implement equals/hashCode)", "committedDate": "2020-06-08T07:26:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxNTQyMQ==", "url": "https://github.com/quarkusio/quarkus/pull/9823#discussion_r437415421", "bodyText": "Leftover from the builder pattern?", "author": "manovotn", "createdAt": "2020-06-09T13:26:59Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/UnremovableBeanBuildItem.java", "diffHunk": "@@ -20,6 +28,11 @@\n \n     private final Predicate<BeanInfo> predicate;\n \n+    /**\n+     * \n+     * @param predicate\n+     * @see Builder", "originalCommit": "6dcf24e80e6145ab76a2849856057d4dab3295f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "44e356211b3705d28ab0b7c59bf8bacf50c5b5c3", "chunk": "diff --git a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/UnremovableBeanBuildItem.java b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/UnremovableBeanBuildItem.java\nindex b7c241d1bb..58e3728cc5 100644\n--- a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/UnremovableBeanBuildItem.java\n+++ b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/UnremovableBeanBuildItem.java\n\n@@ -23,16 +23,28 @@ import io.quarkus.builder.item.MultiBuildItem;\n /**\n  * This build item is used to exclude beans that would be normally removed if the config property\n  * {@link ArcConfig#removeUnusedBeans} is set to true.\n+ * <p>\n+ * Consider using one of the convenient static factory methods such as {@link #beanTypes(Class...)}:\n+ * <pre>\n+ * &#64;BuildStep\n+ * UnremovableBeanBuildItem unremovable() {\n+ *   // Any bean that has MyService in its set of bean types is considered unremovable\n+ *   return UnremovableBeanBuildItem.beanTypes(MyService.class);\n+ * }\n+ * </pre>\n+ * Alternatively, you could make use of the pre-built predicate classes such as {@link BeanClassNameExclusion}:\n+ * <pre>\n+ * &#64;BuildStep\n+ * UnremovableBeanBuildItem unremovable() {\n+ *   // A bean whose bean class FQCN is equal to org.acme.MyService is considered unremovable\n+ *   return new UnremovableBeanBuildItem(new BeanClassNameExclusion(\"org.acme.MyService\"));\n+ * }\n+ * </pre>\n  */\n public final class UnremovableBeanBuildItem extends MultiBuildItem {\n \n     private final Predicate<BeanInfo> predicate;\n \n-    /**\n-     * \n-     * @param predicate\n-     * @see Builder\n-     */\n     public UnremovableBeanBuildItem(Predicate<BeanInfo> predicate) {\n         this.predicate = predicate;\n     }\n"}}, {"oid": "44e356211b3705d28ab0b7c59bf8bacf50c5b5c3", "url": "https://github.com/quarkusio/quarkus/commit/44e356211b3705d28ab0b7c59bf8bacf50c5b5c3", "message": "UnremovableBuildItem - introduce convenient factory methods\n\n- also fix AnnotatedUnremovableClassesProcessor that used\nSet<AnnotationTarget> (ClassInfo does not implement equals/hashCode)", "committedDate": "2020-06-09T13:57:35Z", "type": "forcePushed"}, {"oid": "45267f40c2a5a2ff5353725fc82c9e783a447a0d", "url": "https://github.com/quarkusio/quarkus/commit/45267f40c2a5a2ff5353725fc82c9e783a447a0d", "message": "UnremovableBuildItem - introduce convenient factory methods\n\n- also fix AnnotatedUnremovableClassesProcessor that used\nSet<AnnotationTarget> (ClassInfo does not implement equals/hashCode)", "committedDate": "2020-06-09T14:23:53Z", "type": "commit"}, {"oid": "45267f40c2a5a2ff5353725fc82c9e783a447a0d", "url": "https://github.com/quarkusio/quarkus/commit/45267f40c2a5a2ff5353725fc82c9e783a447a0d", "message": "UnremovableBuildItem - introduce convenient factory methods\n\n- also fix AnnotatedUnremovableClassesProcessor that used\nSet<AnnotationTarget> (ClassInfo does not implement equals/hashCode)", "committedDate": "2020-06-09T14:23:53Z", "type": "forcePushed"}]}