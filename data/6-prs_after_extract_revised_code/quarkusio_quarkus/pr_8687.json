{"pr_number": 8687, "pr_title": "Resteasy: do not use Jandex's ClassInfo in a Set", "pr_createdAt": "2020-04-20T09:05:28Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8687", "timeline": [{"oid": "dd4de25e3a3fdf4207999518824d129615b46f38", "url": "https://github.com/quarkusio/quarkus/commit/dd4de25e3a3fdf4207999518824d129615b46f38", "message": "Resteasy: do not use Jandex's ClassInfo in a Set, since it implements neither equals() nor hashCode()", "committedDate": "2020-04-20T09:03:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411257757", "bodyText": "Shouldn't these be outside of the if (!withoutDefaultCtor.containsKey(clazz.name())) check?", "author": "geoand", "createdAt": "2020-04-20T10:11:11Z", "path": "extensions/resteasy-server-common/deployment/src/main/java/io/quarkus/resteasy/server/common/deployment/ResteasyServerCommonProcessor.java", "diffHunk": "@@ -229,19 +229,21 @@ public void build(\n \n         Map<DotName, ClassInfo> scannedResources = new HashMap<>();\n         Set<DotName> pathInterfaces = new HashSet<>();\n-        Set<ClassInfo> withoutDefaultCtor = new HashSet<>();\n+        Map<DotName, ClassInfo> withoutDefaultCtor = new HashMap<>();\n         for (AnnotationInstance annotation : allPaths) {\n             if (annotation.target().kind() == AnnotationTarget.Kind.CLASS) {\n                 ClassInfo clazz = annotation.target().asClass();\n                 if (!Modifier.isInterface(clazz.flags())) {\n-                    String className = clazz.name().toString();\n-                    if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n-                        scannedResources.putIfAbsent(clazz.name(), clazz);\n-                    }\n-                    reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));\n+                    if (!withoutDefaultCtor.containsKey(clazz.name())) {\n+                        String className = clazz.name().toString();\n+                        if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n+                            scannedResources.putIfAbsent(clazz.name(), clazz);\n+                        }\n+                        reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));", "originalCommit": "dd4de25e3a3fdf4207999518824d129615b46f38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI2NzYzNA==", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411267634", "bodyText": "If it's in withoutDefaultCtor it's already been processed, hasn't it?", "author": "aloubyansky", "createdAt": "2020-04-20T10:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI4MTYxMA==", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411281610", "bodyText": "That is certainly true, but the point of withoutDefaultCtor wasn't really to guard against that case.\nI do understand what your checking here, it just seems odd to reuse withoutDefaultCtor to perform this check.", "author": "geoand", "createdAt": "2020-04-20T10:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5MzEzNg==", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411293136", "bodyText": "I could introduce another Set for that purpose.", "author": "aloubyansky", "createdAt": "2020-04-20T11:12:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw=="}], "type": "inlineReview", "revised_code": null}]}