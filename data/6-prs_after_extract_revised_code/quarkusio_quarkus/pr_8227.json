{"pr_number": 8227, "pr_title": "Propagate context inside quarkus-cache async computations", "pr_createdAt": "2020-03-27T23:15:58Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8227", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4MzEzNg==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r399583136", "bodyText": "We need to manually propagate the context using the Quarkus ManagedExecutor to fix #8166 and this executor is initialized in generated bytecode executed at ExecutionTime.RUNTIME_INIT. That's why I moved the caches intialization from STATIC_INIT to RUNTIME_INIT here.", "author": "gwenneg", "createdAt": "2020-03-27T23:34:45Z", "path": "extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java", "diffHunk": "@@ -74,9 +75,9 @@ ValidationErrorBuildItem validateBeanDeployment(ValidationPhaseBuildItem validat\n     }\n \n     @BuildStep\n-    @Record(STATIC_INIT)\n+    @Record(RUNTIME_INIT)", "originalCommit": "e91426dc3b17662878276689bffd43cef9d1e5e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "92fe28c8e3805720cfbc9e85be5efe5fa01dacf4", "chunk": "diff --git a/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java b/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java\nindex 864c761f91..f98a6f41c0 100644\n--- a/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java\n+++ b/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java\n\n@@ -77,7 +77,7 @@ class CacheProcessor {\n     @BuildStep\n     @Record(RUNTIME_INIT)\n     void recordCachesBuild(CombinedIndexBuildItem combinedIndex, BeanContainerBuildItem beanContainer, CacheConfig config,\n-            CaffeineCacheBuildRecorder caffeineRecorder, ManagedExecutorBuildItem managedExecutor) {\n+            CaffeineCacheBuildRecorder caffeineRecorder, ManagedExecutorInitializedBuildItem managedExecutorInitialized) {\n         Set<String> cacheNames = getCacheNames(combinedIndex.getIndex());\n         switch (config.type) {\n             case CacheDeploymentConstants.CAFFEINE_CACHE_TYPE:\n"}}, {"oid": "19770d7b13f9eb59f5c28fcffcde4ceb03475867", "url": "https://github.com/quarkusio/quarkus/commit/19770d7b13f9eb59f5c28fcffcde4ceb03475867", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-28T00:38:16Z", "type": "forcePushed"}, {"oid": "8ca1ccedc08ee33eb3a3c817c60190d759af991e", "url": "https://github.com/quarkusio/quarkus/commit/8ca1ccedc08ee33eb3a3c817c60190d759af991e", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-28T23:45:17Z", "type": "forcePushed"}, {"oid": "fdec537c840a37499e5663247379fc4d0c06a7c7", "url": "https://github.com/quarkusio/quarkus/commit/fdec537c840a37499e5663247379fc4d0c06a7c7", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-29T06:14:35Z", "type": "forcePushed"}, {"oid": "8d2e3a5497cc95699ccd51ad26f656538acf630e", "url": "https://github.com/quarkusio/quarkus/commit/8d2e3a5497cc95699ccd51ad26f656538acf630e", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-29T06:15:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNDM1OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400324359", "bodyText": "Can't you use the BeanContainer since you pass it?", "author": "gsmet", "createdAt": "2020-03-30T16:23:39Z", "path": "extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/caffeine/CaffeineCacheBuildRecorder.java", "diffHunk": "@@ -19,14 +21,15 @@ public void buildCaches(BeanContainer beanContainer, Set<CaffeineCacheInfo> cach\n         // The number of caches is known at build time so we can use fixed initialCapacity and loadFactor for the caches map.\n         Map<String, CaffeineCache> caches = new HashMap<>(cacheInfos.size() + 1, 1.0F);\n \n+        ManagedExecutor managedExecutor = Arc.container().instance(ManagedExecutor.class).get();", "originalCommit": "8d2e3a5497cc95699ccd51ad26f656538acf630e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3MDc2MA==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400470760", "bodyText": "Good catch. I tried a few build time solutions based on BeanContainer that didn't work, but I forgot to try it from the recorder.", "author": "gwenneg", "createdAt": "2020-03-30T20:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNDM1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "92fe28c8e3805720cfbc9e85be5efe5fa01dacf4", "chunk": "diff --git a/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/caffeine/CaffeineCacheBuildRecorder.java b/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/caffeine/CaffeineCacheBuildRecorder.java\nindex 8e7ac1b7f1..cd3d7f2095 100644\n--- a/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/caffeine/CaffeineCacheBuildRecorder.java\n+++ b/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/caffeine/CaffeineCacheBuildRecorder.java\n\n@@ -21,7 +20,7 @@ public class CaffeineCacheBuildRecorder {\n         // The number of caches is known at build time so we can use fixed initialCapacity and loadFactor for the caches map.\n         Map<String, CaffeineCache> caches = new HashMap<>(cacheInfos.size() + 1, 1.0F);\n \n-        ManagedExecutor managedExecutor = Arc.container().instance(ManagedExecutor.class).get();\n+        ManagedExecutor managedExecutor = beanContainer.instance(ManagedExecutor.class);\n         for (CaffeineCacheInfo cacheInfo : cacheInfos) {\n             if (LOGGER.isDebugEnabled()) {\n                 LOGGER.debugf(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNjU3OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400326579", "bodyText": "Since it doesn't pass the ManagedExecutor, I would have named it ManagedExecutorInitialized.", "author": "gsmet", "createdAt": "2020-03-30T16:26:55Z", "path": "extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorBuildItem.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.quarkus.smallrye.context.deployment;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+/**\n+ * This build item can be injected in an extension {@link io.quarkus.deployment.annotations.BuildStep BuildStep} to make sure\n+ * the Quarkus {@link org.eclipse.microprofile.context.ManagedExecutor ManagedExecutor} instance is available for injection\n+ * during bytecode recording. The executor can only be used from generated bytecode executed at\n+ * {@link io.quarkus.deployment.annotations.ExecutionTime#RUNTIME_INIT ExecutionTime.RUNTIME_INIT}.\n+ */\n+public final class ManagedExecutorBuildItem extends SimpleBuildItem {", "originalCommit": "8d2e3a5497cc95699ccd51ad26f656538acf630e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3MTMxMw==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400471313", "bodyText": "Done. That's a better name indeed.", "author": "gwenneg", "createdAt": "2020-03-30T20:24:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNjU3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "92fe28c8e3805720cfbc9e85be5efe5fa01dacf4", "chunk": "diff --git a/extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorBuildItem.java b/extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorInitializedBuildItem.java\nsimilarity index 87%\nrename from extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorBuildItem.java\nrename to extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorInitializedBuildItem.java\nindex b6bad4dbf9..a9346e1de1 100644\n--- a/extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorBuildItem.java\n+++ b/extensions/smallrye-context-propagation/deployment/src/main/java/io/quarkus/smallrye/context/deployment/ManagedExecutorInitializedBuildItem.java\n\n@@ -8,5 +8,5 @@ import io.quarkus.builder.item.SimpleBuildItem;\n  * during bytecode recording. The executor can only be used from generated bytecode executed at\n  * {@link io.quarkus.deployment.annotations.ExecutionTime#RUNTIME_INIT ExecutionTime.RUNTIME_INIT}.\n  */\n-public final class ManagedExecutorBuildItem extends SimpleBuildItem {\n+public final class ManagedExecutorInitializedBuildItem extends SimpleBuildItem {\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNzYzNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400327635", "bodyText": "If we initialize the caches at runtime, it opens the gate for making the cache configuration partly runtime? At least the size of the caches?", "author": "gsmet", "createdAt": "2020-03-30T16:28:28Z", "path": "extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java", "diffHunk": "@@ -74,9 +75,9 @@ ValidationErrorBuildItem validateBeanDeployment(ValidationPhaseBuildItem validat\n     }\n \n     @BuildStep\n-    @Record(STATIC_INIT)\n+    @Record(RUNTIME_INIT)\n     void recordCachesBuild(CombinedIndexBuildItem combinedIndex, BeanContainerBuildItem beanContainer, CacheConfig config,", "originalCommit": "8d2e3a5497cc95699ccd51ad26f656538acf630e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3MzEwMQ==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400473101", "bodyText": "Yes, it does. I would probably make the entire CaffeineConfig class runtime config. WDYT?", "author": "gwenneg", "createdAt": "2020-03-30T20:28:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNzYzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3ODI3NA==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r400478274", "bodyText": "exactly what I had in mind. But let's make it another PR once this one is in.", "author": "gsmet", "createdAt": "2020-03-30T20:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNzYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "92fe28c8e3805720cfbc9e85be5efe5fa01dacf4", "chunk": "diff --git a/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java b/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java\nindex 864c761f91..f98a6f41c0 100644\n--- a/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java\n+++ b/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/CacheProcessor.java\n\n@@ -77,7 +77,7 @@ class CacheProcessor {\n     @BuildStep\n     @Record(RUNTIME_INIT)\n     void recordCachesBuild(CombinedIndexBuildItem combinedIndex, BeanContainerBuildItem beanContainer, CacheConfig config,\n-            CaffeineCacheBuildRecorder caffeineRecorder, ManagedExecutorBuildItem managedExecutor) {\n+            CaffeineCacheBuildRecorder caffeineRecorder, ManagedExecutorInitializedBuildItem managedExecutorInitialized) {\n         Set<String> cacheNames = getCacheNames(combinedIndex.getIndex());\n         switch (config.type) {\n             case CacheDeploymentConstants.CAFFEINE_CACHE_TYPE:\n"}}, {"oid": "92fe28c8e3805720cfbc9e85be5efe5fa01dacf4", "url": "https://github.com/quarkusio/quarkus/commit/92fe28c8e3805720cfbc9e85be5efe5fa01dacf4", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-30T20:20:17Z", "type": "forcePushed"}, {"oid": "b445da9b7b0405151e18a4fef454e4be14f416a4", "url": "https://github.com/quarkusio/quarkus/commit/b445da9b7b0405151e18a4fef454e4be14f416a4", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-31T11:15:08Z", "type": "forcePushed"}, {"oid": "4f6b9a8d7a480c2571e03953f134b2a585a4eb27", "url": "https://github.com/quarkusio/quarkus/commit/4f6b9a8d7a480c2571e03953f134b2a585a4eb27", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-31T11:32:06Z", "type": "forcePushed"}, {"oid": "34c45fac7c4aa1e7b38d5d9ee37aa6d0adf4eb64", "url": "https://github.com/quarkusio/quarkus/commit/34c45fac7c4aa1e7b38d5d9ee37aa6d0adf4eb64", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-31T19:30:00Z", "type": "forcePushed"}, {"oid": "c4c15909052704af6310c8ea914164506b82900e", "url": "https://github.com/quarkusio/quarkus/commit/c4c15909052704af6310c8ea914164506b82900e", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-03-31T19:32:33Z", "type": "forcePushed"}, {"oid": "146c52a2bcff9e44a3b9662ebc0097ed818ebd5c", "url": "https://github.com/quarkusio/quarkus/commit/146c52a2bcff9e44a3b9662ebc0097ed818ebd5c", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-04-01T21:04:47Z", "type": "forcePushed"}, {"oid": "4d543b451aaa8c0e6f242556ebb8e662d4ee5e46", "url": "https://github.com/quarkusio/quarkus/commit/4d543b451aaa8c0e6f242556ebb8e662d4ee5e46", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-04-01T21:11:15Z", "type": "forcePushed"}, {"oid": "51916a1ed91e5b4b987f7eaa38878c3b0f0b44c0", "url": "https://github.com/quarkusio/quarkus/commit/51916a1ed91e5b4b987f7eaa38878c3b0f0b44c0", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-04-01T21:23:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxOTk3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8227#discussion_r408319976", "bodyText": "I wonder if this should be in a SPI module rather than in core. But we can move it later.", "author": "gsmet", "createdAt": "2020-04-14T17:43:23Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/ManagedExecutorInitializedBuildItem.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package io.quarkus.deployment.builditem;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+/**\n+ * <p>\n+ * This build item can be injected in an extension {@link io.quarkus.deployment.annotations.BuildStep BuildStep} to make sure\n+ * the Quarkus {@link org.eclipse.microprofile.context.ManagedExecutor ManagedExecutor} instance is available for injection\n+ * during bytecode recording. The executor can only be used from generated bytecode executed at\n+ * {@link io.quarkus.deployment.annotations.ExecutionTime#RUNTIME_INIT ExecutionTime.RUNTIME_INIT}.\n+ * </p>\n+ * <p>\n+ * This build item will only be produced if the quarkus-smallrye-context-propagation extension is part of the project\n+ * dependencies. Therefore, it must be injected as an {@link java.util.Optional Optional} build item.\n+ * </p>\n+ * <p>\n+ * Example code:\n+ * \n+ * <pre>\n+ * public class MyProcessor {\n+ *     {@literal @}BuildStep\n+ *     {@literal @}Record(ExecutionTime.RUNTIME_INIT)\n+ *     void buildStep({@code Optional<ManagedExecutorInitializedBuildItem>} managedExecutorInitialized,\n+ *             BeanContainerBuildItem beanContainer, MyRecorder myRecorder) {\n+ *         myRecorder.record(managedExecutorInitialized.isPresent(), beanContainer.value());\n+ *     }\n+ * }\n+ * \n+ * {@literal @}Recorder\n+ * public class MyRecorder {\n+ *    public void record(boolean managedExecutorInitialized, BeanContainer beanContainer) {\n+ *        if (managedExecutorInitialized) {\n+ *            ManagedExecutor managedExecutor = beanContainer.instance(ManagedExecutor.class);\n+ *            // Use it...\n+ *        }\n+ *    }\n+ * }\n+ * </pre>\n+ * </p>\n+ */\n+public final class ManagedExecutorInitializedBuildItem extends SimpleBuildItem {", "originalCommit": "51916a1ed91e5b4b987f7eaa38878c3b0f0b44c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "f639a91a388c4dc525f407e804c53023f34c3679", "url": "https://github.com/quarkusio/quarkus/commit/f639a91a388c4dc525f407e804c53023f34c3679", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-04-24T08:50:35Z", "type": "commit"}, {"oid": "f639a91a388c4dc525f407e804c53023f34c3679", "url": "https://github.com/quarkusio/quarkus/commit/f639a91a388c4dc525f407e804c53023f34c3679", "message": "Propagate context inside quarkus-cache async computations", "committedDate": "2020-04-24T08:50:35Z", "type": "forcePushed"}]}