{"pr_number": 13903, "pr_title": "Fix overflow handling in RESTEasy Reactive", "pr_createdAt": "2020-12-15T16:43:40Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13903", "timeline": [{"oid": "aeab968c0f69926e44290c332bf5323a8f9ed3fc", "url": "https://github.com/quarkusio/quarkus/commit/aeab968c0f69926e44290c332bf5323a8f9ed3fc", "message": "Fix overflow handling in RESTEasy Reactive\n\nThis is last fix needed for #13852", "committedDate": "2020-12-15T16:48:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzQ2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/13903#discussion_r543723463", "bodyText": "This double write does not look correct, although I don't think the code path will actually be used at the moment as for now we only allocate direct buffers.", "author": "stuartwdouglas", "createdAt": "2020-12-15T22:10:22Z", "path": "independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/ResteasyReactiveOutputStream.java", "diffHunk": "@@ -87,8 +87,12 @@ public void write(ByteBuf data, boolean last) throws IOException {\n                     if (overflow == null) {\n                         overflow = new ByteArrayOutputStream();\n                     }\n-                    overflow.write(data.array(), data.arrayOffset() + data.readerIndex(),\n-                            data.arrayOffset() + data.writerIndex());\n+                    if (data.hasArray()) {\n+                        overflow.write(data.array());", "originalCommit": "aeab968c0f69926e44290c332bf5323a8f9ed3fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAyOTQ2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/13903#discussion_r544029466", "bodyText": "Oops! The first write is left over... Let me fix it", "author": "geoand", "createdAt": "2020-12-16T06:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzMTQyNA==", "url": "https://github.com/quarkusio/quarkus/pull/13903#discussion_r544031424", "bodyText": "Fixed", "author": "geoand", "createdAt": "2020-12-16T06:38:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fb320b8b237b36229855ceed733e198c92312408", "chunk": "diff --git a/independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/ResteasyReactiveOutputStream.java b/independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/ResteasyReactiveOutputStream.java\nindex da20f45782..6a3716004d 100644\n--- a/independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/ResteasyReactiveOutputStream.java\n+++ b/independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/ResteasyReactiveOutputStream.java\n\n@@ -88,7 +88,6 @@ public class ResteasyReactiveOutputStream extends OutputStream {\n                         overflow = new ByteArrayOutputStream();\n                     }\n                     if (data.hasArray()) {\n-                        overflow.write(data.array());\n                         overflow.write(data.array(), data.arrayOffset() + data.readerIndex(), data.readableBytes());\n                     } else {\n                         data.getBytes(data.readerIndex(), overflow, data.readableBytes());\n"}}, {"oid": "fb320b8b237b36229855ceed733e198c92312408", "url": "https://github.com/quarkusio/quarkus/commit/fb320b8b237b36229855ceed733e198c92312408", "message": "Fix overflow handling in RESTEasy Reactive\n\nThis is last fix needed for #13852", "committedDate": "2020-12-16T06:37:48Z", "type": "commit"}, {"oid": "fb320b8b237b36229855ceed733e198c92312408", "url": "https://github.com/quarkusio/quarkus/commit/fb320b8b237b36229855ceed733e198c92312408", "message": "Fix overflow handling in RESTEasy Reactive\n\nThis is last fix needed for #13852", "committedDate": "2020-12-16T06:37:48Z", "type": "forcePushed"}]}