{"pr_number": 9732, "pr_title": "Reactive db2 client", "pr_createdAt": "2020-06-02T17:25:06Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9732", "timeline": [{"oid": "bab9a32ec1efe81787111c919d44edc51804130c", "url": "https://github.com/quarkusio/quarkus/commit/bab9a32ec1efe81787111c919d44edc51804130c", "message": "Add reactive DB2 client to CI jobs", "committedDate": "2020-06-02T20:23:21Z", "type": "forcePushed"}, {"oid": "61676922c539b8248d9cd7fa941034eab2094d62", "url": "https://github.com/quarkusio/quarkus/commit/61676922c539b8248d9cd7fa941034eab2094d62", "message": "Add reactive DB2 client to CI jobs", "committedDate": "2020-06-02T23:25:05Z", "type": "forcePushed"}, {"oid": "07492d51146d85b3478dd2f4d6ce02cdcda7ae24", "url": "https://github.com/quarkusio/quarkus/commit/07492d51146d85b3478dd2f4d6ce02cdcda7ae24", "message": "Add reactive DB2 client to CI jobs", "committedDate": "2020-06-03T03:16:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2OTYxNg==", "url": "https://github.com/quarkusio/quarkus/pull/9732#discussion_r434369616", "bodyText": "Probably more a question for @mkouba, but what's the reason to not use a regular @Inject or an Instance?", "author": "cescoffier", "createdAt": "2020-06-03T07:40:47Z", "path": "extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.reactive.db2.client.runtime.health;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.health.HealthCheck;\n+import org.eclipse.microprofile.health.HealthCheckResponse;\n+import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n+import org.eclipse.microprofile.health.Readiness;\n+\n+import io.quarkus.arc.Arc;\n+import io.vertx.db2client.DB2Pool;\n+\n+@Readiness\n+@ApplicationScoped\n+public class ReactiveDB2DataSourceHealthCheck implements HealthCheck {\n+    private DB2Pool db2Pool;\n+\n+    @PostConstruct\n+    protected void init() {\n+        db2Pool = Arc.container().instance(DB2Pool.class).get();", "originalCommit": "07492d51146d85b3478dd2f4d6ce02cdcda7ae24", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3MzYwMw==", "url": "https://github.com/quarkusio/quarkus/pull/9732#discussion_r434373603", "bodyText": "+1 for @Inject or Instance.", "author": "mkouba", "createdAt": "2020-06-03T07:48:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2OTYxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxMjE2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/9732#discussion_r434612163", "bodyText": "This was copied from the other reactive DB health checks, will update this to use @Inject", "author": "aguibert", "createdAt": "2020-06-03T14:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2OTYxNg=="}], "type": "inlineReview", "revised_code": {"commit": "c96108bbc10b76bb24f860526b0d7f8e83e62d48", "chunk": "diff --git a/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java b/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java\nindex 124b89c8ea..b1871ab3b4 100644\n--- a/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java\n+++ b/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java\n\n@@ -1,43 +1,32 @@\n package io.quarkus.reactive.db2.client.runtime.health;\n \n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.TimeUnit;\n+import java.time.Duration;\n \n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n-import io.quarkus.arc.Arc;\n-import io.vertx.db2client.DB2Pool;\n+import io.vertx.mutiny.db2client.DB2Pool;\n \n @Readiness\n @ApplicationScoped\n public class ReactiveDB2DataSourceHealthCheck implements HealthCheck {\n-    private DB2Pool db2Pool;\n \n-    @PostConstruct\n-    protected void init() {\n-        db2Pool = Arc.container().instance(DB2Pool.class).get();\n-    }\n+    @Inject\n+    DB2Pool db2Pool;\n \n     @Override\n     public HealthCheckResponse call() {\n         HealthCheckResponseBuilder builder = HealthCheckResponse.named(\"Reactive DB2 connection health check\").up();\n \n         try {\n-            CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();\n             db2Pool.query(\"SELECT 1 FROM SYSIBM.SYSDUMMY1\")\n-                    .execute(ar -> {\n-                        if (ar.failed()) {\n-                            builder.down();\n-                        }\n-                        databaseConnectionAttempt.complete(null);\n-                    });\n-            databaseConnectionAttempt.get(10, TimeUnit.SECONDS);\n+                    .execute()\n+                    .await().atMost(Duration.ofSeconds(10));\n         } catch (Exception exception) {\n             builder.down();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3MDI1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/9732#discussion_r434370253", "bodyText": "Using the Mutiny version would simplify this to:\npool.query(...).await().atMost(Duration.ofSeconds(10))", "author": "cescoffier", "createdAt": "2020-06-03T07:42:00Z", "path": "extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.reactive.db2.client.runtime.health;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.health.HealthCheck;\n+import org.eclipse.microprofile.health.HealthCheckResponse;\n+import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n+import org.eclipse.microprofile.health.Readiness;\n+\n+import io.quarkus.arc.Arc;\n+import io.vertx.db2client.DB2Pool;\n+\n+@Readiness\n+@ApplicationScoped\n+public class ReactiveDB2DataSourceHealthCheck implements HealthCheck {\n+    private DB2Pool db2Pool;\n+\n+    @PostConstruct\n+    protected void init() {\n+        db2Pool = Arc.container().instance(DB2Pool.class).get();\n+    }\n+\n+    @Override\n+    public HealthCheckResponse call() {\n+        HealthCheckResponseBuilder builder = HealthCheckResponse.named(\"Reactive DB2 connection health check\").up();\n+\n+        try {\n+            CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();", "originalCommit": "07492d51146d85b3478dd2f4d6ce02cdcda7ae24", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c96108bbc10b76bb24f860526b0d7f8e83e62d48", "chunk": "diff --git a/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java b/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java\nindex 124b89c8ea..b1871ab3b4 100644\n--- a/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java\n+++ b/extensions/reactive-db2-client/runtime/src/main/java/io/quarkus/reactive/db2/client/runtime/health/ReactiveDB2DataSourceHealthCheck.java\n\n@@ -1,43 +1,32 @@\n package io.quarkus.reactive.db2.client.runtime.health;\n \n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.TimeUnit;\n+import java.time.Duration;\n \n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n-import io.quarkus.arc.Arc;\n-import io.vertx.db2client.DB2Pool;\n+import io.vertx.mutiny.db2client.DB2Pool;\n \n @Readiness\n @ApplicationScoped\n public class ReactiveDB2DataSourceHealthCheck implements HealthCheck {\n-    private DB2Pool db2Pool;\n \n-    @PostConstruct\n-    protected void init() {\n-        db2Pool = Arc.container().instance(DB2Pool.class).get();\n-    }\n+    @Inject\n+    DB2Pool db2Pool;\n \n     @Override\n     public HealthCheckResponse call() {\n         HealthCheckResponseBuilder builder = HealthCheckResponse.named(\"Reactive DB2 connection health check\").up();\n \n         try {\n-            CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();\n             db2Pool.query(\"SELECT 1 FROM SYSIBM.SYSDUMMY1\")\n-                    .execute(ar -> {\n-                        if (ar.failed()) {\n-                            builder.down();\n-                        }\n-                        databaseConnectionAttempt.complete(null);\n-                    });\n-            databaseConnectionAttempt.get(10, TimeUnit.SECONDS);\n+                    .execute()\n+                    .await().atMost(Duration.ofSeconds(10));\n         } catch (Exception exception) {\n             builder.down();\n         }\n"}}, {"oid": "da301af2c745dec6c733035fcc7ff3e5f56185db", "url": "https://github.com/quarkusio/quarkus/commit/da301af2c745dec6c733035fcc7ff3e5f56185db", "message": "Initial copy of the reactive DB2 client extension", "committedDate": "2020-06-04T13:57:14Z", "type": "commit"}, {"oid": "aa81a609cf528dfcfceab17820ed31f857c6b198", "url": "https://github.com/quarkusio/quarkus/commit/aa81a609cf528dfcfceab17820ed31f857c6b198", "message": "Add Mutiny integration to reactive-db2-client", "committedDate": "2020-06-04T13:57:15Z", "type": "commit"}, {"oid": "1f43a2304e6b3940483872083d04c7b1b8ed911f", "url": "https://github.com/quarkusio/quarkus/commit/1f43a2304e6b3940483872083d04c7b1b8ed911f", "message": "Add integration test module for reactive DB2 client", "committedDate": "2020-06-04T13:57:15Z", "type": "commit"}, {"oid": "7ef374d2d7909a293a46f1ca46778a6cc2462714", "url": "https://github.com/quarkusio/quarkus/commit/7ef374d2d7909a293a46f1ca46778a6cc2462714", "message": "Add documentation for reactive DB2 client", "committedDate": "2020-06-04T13:57:15Z", "type": "commit"}, {"oid": "39c6adc99fbbff942c4f1af3abd78b57c25f1b7c", "url": "https://github.com/quarkusio/quarkus/commit/39c6adc99fbbff942c4f1af3abd78b57c25f1b7c", "message": "Add reactive DB2 client to CI jobs", "committedDate": "2020-06-04T13:57:15Z", "type": "commit"}, {"oid": "c96108bbc10b76bb24f860526b0d7f8e83e62d48", "url": "https://github.com/quarkusio/quarkus/commit/c96108bbc10b76bb24f860526b0d7f8e83e62d48", "message": "Address review comments from Clement", "committedDate": "2020-06-04T13:57:15Z", "type": "commit"}, {"oid": "c96108bbc10b76bb24f860526b0d7f8e83e62d48", "url": "https://github.com/quarkusio/quarkus/commit/c96108bbc10b76bb24f860526b0d7f8e83e62d48", "message": "Address review comments from Clement", "committedDate": "2020-06-04T13:57:15Z", "type": "forcePushed"}]}