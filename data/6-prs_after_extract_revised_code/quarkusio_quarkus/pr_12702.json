{"pr_number": 12702, "pr_title": "Add integration test for kafka reactive messaging", "pr_createdAt": "2020-10-14T05:28:26Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12702", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjc4NA==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r504436784", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void consume(String json) {\n          \n          \n            \n                    Person person = new JsonObject(json).mapTo(Person.class);\n          \n          \n            \n                    list.add(person);\n          \n          \n            \n                }\n          \n          \n            \n                public void consume(Person json) {\n          \n          \n            \n                    list.add(person);\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nGood PR. Should we use the value deserializer since we have it in config?", "author": "machi1990", "createdAt": "2020-10-14T06:41:55Z", "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package io.quarkus.it.kafka;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.jboss.logging.Logger;\n+\n+import io.vertx.core.json.JsonObject;\n+\n+public class PeopleManager {\n+\n+    private final Logger log = Logger.getLogger(PeopleManager.class);\n+\n+    private final List<Person> list = new CopyOnWriteArrayList<>();\n+\n+    @Incoming(\"people-in\")\n+    public void consume(String json) {\n+        Person person = new JsonObject(json).mapTo(Person.class);\n+        list.add(person);\n+    }", "originalCommit": "fff241d2318b14f8b9c49247e1c11c6ab8fe37f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4MDE2MA==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r504880160", "bodyText": "Yes, you are right.", "author": "geoandri", "createdAt": "2020-10-14T18:19:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjc4NA=="}], "type": "inlineReview", "revised_code": {"commit": "2cd7573c133a57b804375deb2d39ee1ad2762543", "chunk": "diff --git a/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java b/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java\nindex 62f8f0570b..64a408e3b0 100644\n--- a/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java\n+++ b/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java\n\n@@ -3,11 +3,12 @@ package io.quarkus.it.kafka;\n import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n+import javax.enterprise.context.ApplicationScoped;\n+\n import org.eclipse.microprofile.reactive.messaging.Incoming;\n import org.jboss.logging.Logger;\n \n-import io.vertx.core.json.JsonObject;\n-\n+@ApplicationScoped\n public class PeopleManager {\n \n     private final Logger log = Logger.getLogger(PeopleManager.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MzM4NA==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505153384", "bodyText": "Add @ApplicationScoped", "author": "cescoffier", "createdAt": "2020-10-15T04:14:02Z", "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.it.kafka;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.jboss.logging.Logger;\n+\n+public class PeopleManager {", "originalCommit": "ced77b63f239a728216d01650ca5126b448f6a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2cd7573c133a57b804375deb2d39ee1ad2762543", "chunk": "diff --git a/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java b/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java\nindex 80f482d420..64a408e3b0 100644\n--- a/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java\n+++ b/integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java\n\n@@ -3,9 +3,12 @@ package io.quarkus.it.kafka;\n import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n+import javax.enterprise.context.ApplicationScoped;\n+\n import org.eclipse.microprofile.reactive.messaging.Incoming;\n import org.jboss.logging.Logger;\n \n+@ApplicationScoped\n public class PeopleManager {\n \n     private final Logger log = Logger.getLogger(PeopleManager.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjExMw==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505182113", "bodyText": "I would use await().untilAsserted", "author": "cescoffier", "createdAt": "2020-10-15T05:58:24Z", "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {\n+    private static final Logger log = Logger.getLogger(KafkaTestResource.class);\n+\n+    protected static final TypeRef<List<Person>> TYPE_REF = new TypeRef<List<Person>>() {\n+    };\n+\n+    @Test\n+    public void test() {\n+        log.info(\"Test run\");\n+        try {\n+            await()", "originalCommit": "ced77b63f239a728216d01650ca5126b448f6a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0NTg1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505245855", "bodyText": "@Test\npublic void test() {\n        await().untilAsserted(() -> \n           Assertions.assertEquals(get(\"/kafka/people\").as(TYPE_REF).size(), 6));\n}", "author": "cescoffier", "createdAt": "2020-10-15T07:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NTg4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505665885", "bodyText": "Done in the latest commit.", "author": "geoandri", "createdAt": "2020-10-15T16:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjExMw=="}], "type": "inlineReview", "revised_code": {"commit": "2cd7573c133a57b804375deb2d39ee1ad2762543", "chunk": "diff --git a/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java b/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java\nindex 8816233614..716033d65b 100644\n--- a/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java\n+++ b/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java\n\n@@ -23,15 +23,7 @@ public class KafkaConnectorTest {\n \n     @Test\n     public void test() {\n-        log.info(\"Test run\");\n-        try {\n-            await()\n-                    .until(() -> get(\"/kafka/people\").as(TYPE_REF).size() >= 6);\n-            return;\n-        } catch (Exception e) {\n-            Assertions.fail(e);\n-            return;\n-        }\n+        await().untilAsserted(() -> Assertions.assertEquals(get(\"/kafka/people\").as(TYPE_REF).size(), 6));\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDkwNA==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505240904", "bodyText": "Could you add the associated native tests?\npackage io.quarkus.it.kafka;\n\nimport io.quarkus.test.junit.NativeImageTest;\n\n@NativeImageTest\npublic class KafkaConnectorIT extends KafkaConnectorTest {\n\n}", "author": "cescoffier", "createdAt": "2020-10-15T07:08:00Z", "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {", "originalCommit": "ced77b63f239a728216d01650ca5126b448f6a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NzE2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505667162", "bodyText": "Done", "author": "geoandri", "createdAt": "2020-10-15T16:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "2cd7573c133a57b804375deb2d39ee1ad2762543", "chunk": "diff --git a/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java b/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java\nindex 8816233614..716033d65b 100644\n--- a/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java\n+++ b/integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java\n\n@@ -23,15 +23,7 @@ public class KafkaConnectorTest {\n \n     @Test\n     public void test() {\n-        log.info(\"Test run\");\n-        try {\n-            await()\n-                    .until(() -> get(\"/kafka/people\").as(TYPE_REF).size() >= 6);\n-            return;\n-        } catch (Exception e) {\n-            Assertions.fail(e);\n-            return;\n-        }\n+        await().untilAsserted(() -> Assertions.assertEquals(get(\"/kafka/people\").as(TYPE_REF).size(), 6));\n     }\n \n }\n"}}, {"oid": "2cd7573c133a57b804375deb2d39ee1ad2762543", "url": "https://github.com/quarkusio/quarkus/commit/2cd7573c133a57b804375deb2d39ee1ad2762543", "message": "Add integration test for kafka reactive messaging", "committedDate": "2020-10-15T19:21:06Z", "type": "commit"}, {"oid": "2cd7573c133a57b804375deb2d39ee1ad2762543", "url": "https://github.com/quarkusio/quarkus/commit/2cd7573c133a57b804375deb2d39ee1ad2762543", "message": "Add integration test for kafka reactive messaging", "committedDate": "2020-10-15T19:21:06Z", "type": "forcePushed"}]}