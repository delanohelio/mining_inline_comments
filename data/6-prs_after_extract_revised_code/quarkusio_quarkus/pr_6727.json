{"pr_number": 6727, "pr_title": "Make optional the oauth2 configuration when the extension is disabled", "pr_createdAt": "2020-01-22T15:59:24Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6727", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA==", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369649368", "bodyText": "should it be a ConfigurationException instead?", "author": "machi1990", "createdAt": "2020-01-22T16:01:52Z", "path": "extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java", "diffHunk": "@@ -29,13 +30,17 @@\n \n @Recorder\n public class OAuth2Recorder {\n+    private static final Logger LOG = Logger.getLogger(OAuth2Recorder.class);\n \n     public RuntimeValue<SecurityRealm> createRealm(OAuth2Config config)\n             throws IOException, NoSuchAlgorithmException, CertificateException, KeyStoreException, KeyManagementException {\n+        if (!config.clientId.isPresent() || !config.clientSecret.isPresent() || !config.introspectionUrl.isPresent()) {\n+            LOG.error(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");", "originalCommit": "e8bd88290f0c57448bc5f9befb819dfb3d693cf7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDI4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369650283", "bodyText": "It will be a NoSuchElementException with the current impl.\nMaybe a ConfigurationException is better yes :)", "author": "loicmathieu", "createdAt": "2020-01-22T16:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1NTg3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369655871", "bodyText": "Yes we need it to be an exception. +1 for ConfigurationException.", "author": "gsmet", "createdAt": "2020-01-22T16:12:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2NDk5MA==", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369664990", "bodyText": "done", "author": "loicmathieu", "createdAt": "2020-01-22T16:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA=="}], "type": "inlineReview", "revised_code": {"commit": "e51e47df68d3c61a3fb3e53631ad649cb4292c37", "chunk": "diff --git a/extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java b/extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java\nindex a8203a17b5..707abd6b1c 100644\n--- a/extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java\n+++ b/extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java\n\n@@ -30,13 +30,13 @@ import io.quarkus.runtime.annotations.Recorder;\n \n @Recorder\n public class OAuth2Recorder {\n-    private static final Logger LOG = Logger.getLogger(OAuth2Recorder.class);\n \n     public RuntimeValue<SecurityRealm> createRealm(OAuth2Config config)\n             throws IOException, NoSuchAlgorithmException, CertificateException, KeyStoreException, KeyManagementException {\n         if (!config.clientId.isPresent() || !config.clientSecret.isPresent() || !config.introspectionUrl.isPresent()) {\n-            LOG.error(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");\n+            throw new ConfigurationException(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");\n         }\n+        \n         OAuth2IntrospectValidator.Builder validatorBuilder = OAuth2IntrospectValidator.builder()\n                 .clientId(config.clientId.get())\n                 .clientSecret(config.clientSecret.get())\n"}}, {"oid": "e51e47df68d3c61a3fb3e53631ad649cb4292c37", "url": "https://github.com/quarkusio/quarkus/commit/e51e47df68d3c61a3fb3e53631ad649cb4292c37", "message": "Make optional the oauth2 configuration when the extension is disabled", "committedDate": "2020-01-22T16:27:04Z", "type": "forcePushed"}, {"oid": "e2d1aede8fb7237f20f773aec36d3e2db756c19b", "url": "https://github.com/quarkusio/quarkus/commit/e2d1aede8fb7237f20f773aec36d3e2db756c19b", "message": "Make optional the oauth2 configuration when the extension is disabled", "committedDate": "2020-01-22T16:51:19Z", "type": "forcePushed"}, {"oid": "8cde0ba1c2f619e5f002515650fd67ce8daac3f6", "url": "https://github.com/quarkusio/quarkus/commit/8cde0ba1c2f619e5f002515650fd67ce8daac3f6", "message": "Make optional the oauth2 configuration when the extension is disabled", "committedDate": "2020-01-22T17:42:00Z", "type": "commit"}, {"oid": "8cde0ba1c2f619e5f002515650fd67ce8daac3f6", "url": "https://github.com/quarkusio/quarkus/commit/8cde0ba1c2f619e5f002515650fd67ce8daac3f6", "message": "Make optional the oauth2 configuration when the extension is disabled", "committedDate": "2020-01-22T17:42:00Z", "type": "forcePushed"}]}