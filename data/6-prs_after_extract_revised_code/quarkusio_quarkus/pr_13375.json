{"pr_number": 13375, "pr_title": "Ability to exclude particular data sources from the health check", "pr_createdAt": "2020-11-19T11:21:58Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13375", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgwMjkxOA==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r526802918", "bodyText": "You don't need the name, it will be the one generated.", "author": "gsmet", "createdAt": "2020-11-19T11:43:01Z", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,12 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled. By default, the health check includes\n+     * all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(name = \"health-check-exclude\", defaultValue = \"false\")", "originalCommit": "70809325902908d6f5e75779a502429ceedd79a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b", "chunk": "diff --git a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\nindex cfc16a0314..53c08bbd77 100644\n--- a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n+++ b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n\n@@ -21,7 +21,7 @@ public class DataSourceBuildTimeConfig {\n      * the general health check for data sources is enabled. By default, the health check includes\n      * all configured data sources (if it is enabled).\n      */\n-    @ConfigItem(name = \"health-check-exclude\", defaultValue = \"false\")\n+    @ConfigItem(defaultValue = \"false\")\n     public boolean healthCheckExclude;\n \n }\n"}}, {"oid": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b", "url": "https://github.com/quarkusio/quarkus/commit/e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2020-11-20T10:15:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTU1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527655555", "bodyText": "Can we use a proper \n  \n    \n      quarkus/extensions/datasource/common/src/main/java/io/quarkus/datasource/common/runtime/DataSourceUtil.java\n    \n    \n         Line 7\n      in\n      e963fe4\n    \n    \n    \n    \n\n        \n          \n           public static final String DEFAULT_DATASOURCE_NAME = \"<default>\"; \n        \n    \n  \n\n instead of null?", "author": "machi1990", "createdAt": "2020-11-20T12:21:28Z", "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java", "diffHunk": "@@ -29,4 +35,24 @@ public AgroalDataSource get() {\n         };\n     }\n \n+    public Supplier<DataSourcesExcludedFromHealthChecks> dataSourcesExcludedFromHealthChecks(\n+            DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig) {\n+        return new Supplier<DataSourcesExcludedFromHealthChecks>() {\n+            @Override\n+            public DataSourcesExcludedFromHealthChecks get() {\n+                List<String> excludedNames = new ArrayList<>();\n+                if (dataSourcesBuildTimeConfig.defaultDataSource.healthCheckExclude) {\n+                    excludedNames.add(null);", "originalCommit": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2NTg4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527665886", "bodyText": "done", "author": "jmartisk", "createdAt": "2020-11-20T12:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTU1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0cae756d47fb23cd849380b21bde45ac232bf61c", "chunk": "diff --git a/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java b/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java\nindex bb9061f0fb..a0770a1818 100644\n--- a/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java\n+++ b/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java\n\n@@ -42,7 +43,7 @@ public class AgroalRecorder {\n             public DataSourcesExcludedFromHealthChecks get() {\n                 List<String> excludedNames = new ArrayList<>();\n                 if (dataSourcesBuildTimeConfig.defaultDataSource.healthCheckExclude) {\n-                    excludedNames.add(null);\n+                    excludedNames.add(DataSourceUtil.DEFAULT_DATASOURCE_NAME);\n                 }\n                 for (Map.Entry<String, DataSourceBuildTimeConfig> dataSource : dataSourcesBuildTimeConfig.namedDataSources\n                         .entrySet()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTgwMA==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527655800", "bodyText": "Let's replace the null usage by something like \n  \n    \n      quarkus/extensions/datasource/common/src/main/java/io/quarkus/datasource/common/runtime/DataSourceUtil.java\n    \n    \n         Line 7\n      in\n      e963fe4\n    \n    \n    \n    \n\n        \n          \n           public static final String DEFAULT_DATASOURCE_NAME = \"<default>\";", "author": "machi1990", "createdAt": "2020-11-20T12:21:59Z", "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java", "diffHunk": "@@ -27,14 +29,21 @@\n     @PostConstruct\n     protected void init() {\n         Set<Bean<?>> beans = Arc.container().beanManager().getBeans(DataSource.class);\n+        DataSourcesExcludedFromHealthChecks excluded = Arc.container().instance(DataSourcesExcludedFromHealthChecks.class)\n+                .get();\n+        List<String> excludedNames = excluded.getExcludedNames();\n         for (Bean<?> bean : beans) {\n             if (bean.getName() == null) {\n-                // this is the default DataSource: retrieve it by type\n-                DataSource defaultDs = Arc.container().instance(DataSource.class).get();\n-                dataSources.put(DEFAULT_DS, defaultDs);\n+                if (!excludedNames.contains(null)) {", "originalCommit": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2NTkxOQ==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527665919", "bodyText": "done", "author": "jmartisk", "createdAt": "2020-11-20T12:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTgwMA=="}], "type": "inlineReview", "revised_code": {"commit": "0cae756d47fb23cd849380b21bde45ac232bf61c", "chunk": "diff --git a/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java b/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java\nindex ca9b29202f..4a3e470f67 100644\n--- a/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java\n+++ b/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java\n\n@@ -34,7 +35,7 @@ public class DataSourceHealthCheck implements HealthCheck {\n         List<String> excludedNames = excluded.getExcludedNames();\n         for (Bean<?> bean : beans) {\n             if (bean.getName() == null) {\n-                if (!excludedNames.contains(null)) {\n+                if (!excludedNames.contains(DataSourceUtil.DEFAULT_DATASOURCE_NAME)) {\n                     // this is the default DataSource: retrieve it by type\n                     DataSource defaultDs = Arc.container().instance(DataSource.class).get();\n                     dataSources.put(DEFAULT_DS, defaultDs);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1Njc5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527656795", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Whether this particular data source should be excluded from the health check if\n          \n          \n            \n                 * the general health check for data sources is enabled. By default, the health check includes\n          \n          \n            \n                 * all configured data sources (if it is enabled).\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Whether this particular data source should be excluded from the health check if\n          \n          \n            \n                 * the general health check for data sources is enabled. \n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * By default, the health check includes all configured data sources (if it is enabled).\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nIntroduce <p> to render out nicely the generated doc.", "author": "machi1990", "createdAt": "2020-11-20T12:24:04Z", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,12 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled. By default, the health check includes\n+     * all configured data sources (if it is enabled).\n+     */", "originalCommit": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0cae756d47fb23cd849380b21bde45ac232bf61c", "chunk": "diff --git a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\nindex 53c08bbd77..1bbae7eeb9 100644\n--- a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n+++ b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n\n@@ -18,8 +18,9 @@ public class DataSourceBuildTimeConfig {\n \n     /**\n      * Whether this particular data source should be excluded from the health check if\n-     * the general health check for data sources is enabled. By default, the health check includes\n-     * all configured data sources (if it is enabled).\n+     * the general health check for data sources is enabled. \n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n      */\n     @ConfigItem(defaultValue = \"false\")\n     public boolean healthCheckExclude;\n"}}, {"oid": "0cae756d47fb23cd849380b21bde45ac232bf61c", "url": "https://github.com/quarkusio/quarkus/commit/0cae756d47fb23cd849380b21bde45ac232bf61c", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2020-11-20T12:40:27Z", "type": "forcePushed"}, {"oid": "40d50f196b074f142920c391ece21d1de34ff60d", "url": "https://github.com/quarkusio/quarkus/commit/40d50f196b074f142920c391ece21d1de34ff60d", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2020-11-23T09:34:12Z", "type": "forcePushed"}, {"oid": "80c5ed1929d4f90f200029cc90ecf14980c86349", "url": "https://github.com/quarkusio/quarkus/commit/80c5ed1929d4f90f200029cc90ecf14980c86349", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2020-12-01T11:31:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0ODkxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551448911", "bodyText": "Could we maybe have something like health.exclude instead? That looks a bit more in line with health.enabled.", "author": "gsmet", "createdAt": "2021-01-04T17:09:56Z", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthCheckExclude;", "originalCommit": "80c5ed1929d4f90f200029cc90ecf14980c86349", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4NTEzNg==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551785136", "bodyText": "Done", "author": "jmartisk", "createdAt": "2021-01-05T08:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0ODkxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "009018b58e868147104ae470024911dbf6795236", "chunk": "diff --git a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\nindex c34d7b3da5..40386a5f0c 100644\n--- a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n+++ b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n\n@@ -23,6 +23,6 @@ public class DataSourceBuildTimeConfig {\n      * By default, the health check includes all configured data sources (if it is enabled).\n      */\n     @ConfigItem(defaultValue = \"false\")\n-    public boolean healthCheckExclude;\n+    public boolean healthExclude;\n \n }\n"}}, {"oid": "009018b58e868147104ae470024911dbf6795236", "url": "https://github.com/quarkusio/quarkus/commit/009018b58e868147104ae470024911dbf6795236", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2021-01-05T08:34:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551918360", "bodyText": "That will make it health-exclude not health.exclude. Also shouldn't we have a test?", "author": "gsmet", "createdAt": "2021-01-05T13:03:07Z", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthExclude;", "originalCommit": "009018b58e868147104ae470024911dbf6795236", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk4MTgyNQ==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551981825", "bodyText": "Hmm. Maybe we should keep it at health-exclude, becausequarkus.datasource.health.enabled is a setting that is only used globally, whereas the exclusions are per each datasource. If we used health.enabled here, then we would get\n\nquarkus.datasource.health.enabled for the global setting\nquarkus.datasource.health.exclude would be to exclude the DEFAULT data source, but it would look very similar to the previous one (it shares the complete segment namespace) and therefore it would look like it's a global setting too, but it's not... Hope my explanation is understandable\n\nAnyway I've added a test as you requested", "author": "jmartisk", "createdAt": "2021-01-05T14:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDMxNzA2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r574317063", "bodyText": "Hey @gsmet so what do you think? We got a user asking when this will be released. Still insist on renaming?", "author": "jmartisk", "createdAt": "2021-02-11T08:26:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjA4NzE0Mg==", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r602087142", "bodyText": "Hi @gsmet we need this for many production container, can we help on this PR so that can be merged soon?\nThanks", "author": "masini", "createdAt": "2021-03-26T08:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "b07147912fe29a156e5778d9c98e4c8211debc27", "chunk": "diff --git a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\nindex 40386a5f0c..ac6a376536 100644\n--- a/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n+++ b/extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java\n\n@@ -16,6 +16,12 @@ public class DataSourceBuildTimeConfig {\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Configuration for DevServices. DevServices allows Quarkus to automatically start a database in dev and test mode.\n+     */\n+    @ConfigItem\n+    public DevServicesBuildTimeConfig devservices;\n+\n     /**\n      * Whether this particular data source should be excluded from the health check if\n      * the general health check for data sources is enabled.\n"}}, {"oid": "92732ea8994edab5a810576e0513eb283bb2dc44", "url": "https://github.com/quarkusio/quarkus/commit/92732ea8994edab5a810576e0513eb283bb2dc44", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2021-01-05T14:53:50Z", "type": "forcePushed"}, {"oid": "021423b746ad0750b1de8e9abb550bb712cdbda5", "url": "https://github.com/quarkusio/quarkus/commit/021423b746ad0750b1de8e9abb550bb712cdbda5", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2021-02-11T08:27:57Z", "type": "forcePushed"}, {"oid": "b07147912fe29a156e5778d9c98e4c8211debc27", "url": "https://github.com/quarkusio/quarkus/commit/b07147912fe29a156e5778d9c98e4c8211debc27", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2021-03-26T09:06:44Z", "type": "forcePushed"}, {"oid": "1749f00e3aec88868522e15f65e3d23cc6a715b1", "url": "https://github.com/quarkusio/quarkus/commit/1749f00e3aec88868522e15f65e3d23cc6a715b1", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2021-04-01T11:17:30Z", "type": "commit"}, {"oid": "1749f00e3aec88868522e15f65e3d23cc6a715b1", "url": "https://github.com/quarkusio/quarkus/commit/1749f00e3aec88868522e15f65e3d23cc6a715b1", "message": "Ability to exclude particular data sources from the health check", "committedDate": "2021-04-01T11:17:30Z", "type": "forcePushed"}]}