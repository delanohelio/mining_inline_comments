{"pr_number": 12197, "pr_title": "Re-introduce removed configuration in Redis extension to support minimum backward compatibility", "pr_createdAt": "2020-09-18T17:08:57Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12197", "timeline": [{"oid": "cc9f24027ae4d66015359e978079a83697549e5b", "url": "https://github.com/quarkusio/quarkus/commit/cc9f24027ae4d66015359e978079a83697549e5b", "message": "chore(redis): reduce container wait time to 5s since 20s was probably too high", "committedDate": "2020-09-18T17:03:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzUwOA==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491087508", "bodyText": "Could you also add the @deprecated Javadoc one?", "author": "gsmet", "createdAt": "2020-09-18T17:20:02Z", "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java", "diffHunk": "@@ -54,6 +55,36 @@\n \n     @ConfigGroup\n     public static class RedisConfiguration {\n+        /**\n+         * The redis password\n+         * <p>\n+         * It should be removed in the 1.10 release.\n+         * Follows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724", "originalCommit": "8343b383e34f7b1ba47f2f1de3aab764f260cff8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2de271aada2f0235539cf5658c4f1e459643313", "chunk": "diff --git a/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java b/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java\nindex b1b87c548e..4812001fc6 100644\n--- a/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java\n+++ b/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java\n\n@@ -58,8 +58,9 @@ public class RedisConfig {\n         /**\n          * The redis password\n          * <p>\n-         * It should be removed in the 1.10 release.\n-         * Follows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724\n+         * \n+         * @deprecated It should be removed in the 1.10 release.\n+         *             Follows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724\n          */\n         @ConfigItem\n         @Deprecated\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491087924", "bodyText": "I /think/ I would throw an error here if any of the deprecated Optional bits are defined.", "author": "gsmet", "createdAt": "2020-09-18T17:20:51Z", "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisClientUtil.java", "diffHunk": "@@ -60,4 +62,59 @@ public static boolean isDefault(String clientName) {\n     public static RedisConfiguration getConfiguration(RedisConfig config, String name) {\n         return isDefault(name) ? config.defaultClient : config.additionalRedisClients.get(name);\n     }\n+\n+    /**\n+     * This method was only added to support minimal backward compatibility.\n+     * <p>\n+     * It should be removed in the 1.10 release.\n+     * Follows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724\n+     */\n+    private static String buildConnectionString(RedisConfiguration config, URI host, String clientName) {\n+        final String address = host.toString();\n+        if (address.contains(\"://\")) {\n+            return address;", "originalCommit": "8343b383e34f7b1ba47f2f1de3aab764f260cff8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4ODU5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491088593", "bodyText": "If we throw an error we won't be backward compatible anymore.", "author": "machi1990", "createdAt": "2020-09-18T17:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4ODkyNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491088925", "bodyText": "Did we support having :// in the address before?", "author": "gsmet", "createdAt": "2020-09-18T17:22:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4OTExNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491089115", "bodyText": "If we did, yes, what I suggested is stupid :). If we didn't, it makes sense :).", "author": "gsmet", "createdAt": "2020-09-18T17:23:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA5MTI2MA==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491091260", "bodyText": "No we did not.  The scheme got introduced only with the new way of configuring the Redis connection string.\nMeaning that if the host does not contain it, the it's the old way of doing things and throwing an error won't be backward compatible anymore. Hence me the need to re-construct the connection string as it was previous done.\nMaybe I am missing something.", "author": "machi1990", "createdAt": "2020-09-18T17:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA5NzI5OA==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491097298", "bodyText": "I added my comment at exactly the place I wanted us to throw the error.\nIf address contains :// then it's the new way of doing things so, in this case if any of these fields is defined we could throw an error? Or am I missing something?", "author": "gsmet", "createdAt": "2020-09-18T17:39:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA5NzgzMQ==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491097831", "bodyText": "(Note that I might be missing something, I'm exhausted :))", "author": "gsmet", "createdAt": "2020-09-18T17:40:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MjQ1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/12197#discussion_r491162456", "bodyText": "I added my comment at exactly the place I wanted us to throw the error.\nIf address contains :// then it's the new way of doing things so, in this case if any of these fields is defined we could throw an error? Or am I missing something?\n\nI get your comment now.\nSorry it took me long to realize it since the comment appear just after the return address; statement  and I read your comment all wrong - (that it concerned the old way).\nYes, you are right we could throw.  I think the old way made it impossible to define the host with the scheme  i.e :// part. So if they enter that line, it is by following the new way of doing things and chances are low that they'll mix it with the deprecated configs since they'll be hidden. If it happens to be the case,  I think we can be lenient here and just start the application with the right configuration and ignore the old ones. They'll get a nice warning message if they keep on using the old property once we remove them post 1.9.x release.\nHope it makes sense.", "author": "machi1990", "createdAt": "2020-09-18T19:59:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4NzkyNA=="}], "type": "inlineReview", "revised_code": {"commit": "fc3f648a99ba53354e1c166117daacc0d36cc66a", "chunk": "diff --git a/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisClientUtil.java b/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisClientUtil.java\nindex 5ebcdd4103..d76fc216d3 100644\n--- a/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisClientUtil.java\n+++ b/extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisClientUtil.java\n\n@@ -64,10 +64,10 @@ public class RedisClientUtil {\n     }\n \n     /**\n-     * This method was only added to support minimal backward compatibility.\n-     * <p>\n-     * It should be removed in the 1.10 release.\n-     * Follows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724\n+     * @deprecated It should be removed in the 1.10 release.\n+     *             This method was only added to support minimal backward compatibility.\n+     *             <p>\n+     *             Follows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724\n      */\n     private static String buildConnectionString(RedisConfiguration config, URI host, String clientName) {\n         final String address = host.toString();\n"}}, {"oid": "c2de271aada2f0235539cf5658c4f1e459643313", "url": "https://github.com/quarkusio/quarkus/commit/c2de271aada2f0235539cf5658c4f1e459643313", "message": "fix(redis): re-introduce \"ssl\", \"database\" and \"password\" configuration for backward compatibility\n\nFollows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724", "committedDate": "2020-09-18T17:24:18Z", "type": "forcePushed"}, {"oid": "fc3f648a99ba53354e1c166117daacc0d36cc66a", "url": "https://github.com/quarkusio/quarkus/commit/fc3f648a99ba53354e1c166117daacc0d36cc66a", "message": "fix(redis): re-introduce \"ssl\", \"database\" and \"password\" configuration for backward compatibility\n\nFollows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724", "committedDate": "2020-09-18T17:35:33Z", "type": "commit"}, {"oid": "fc3f648a99ba53354e1c166117daacc0d36cc66a", "url": "https://github.com/quarkusio/quarkus/commit/fc3f648a99ba53354e1c166117daacc0d36cc66a", "message": "fix(redis): re-introduce \"ssl\", \"database\" and \"password\" configuration for backward compatibility\n\nFollows up https://github.com/quarkusio/quarkus/pull/11908#issuecomment-694794724", "committedDate": "2020-09-18T17:35:33Z", "type": "forcePushed"}]}