{"pr_number": 13088, "pr_title": "Fix narayana-jta ClassNotFoundException in native mode", "pr_createdAt": "2020-11-03T12:39:51Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13088", "timeline": [{"oid": "996c7c8f522b50947614a32f0a57f893186e8730", "url": "https://github.com/quarkusio/quarkus/commit/996c7c8f522b50947614a32f0a57f893186e8730", "message": "Fix #10180 narayana-jta ClassNotFoundException in native mode", "committedDate": "2020-11-04T15:13:23Z", "type": "forcePushed"}, {"oid": "f60cd0581e226c733281019e2224f8bba60adc29", "url": "https://github.com/quarkusio/quarkus/commit/f60cd0581e226c733281019e2224f8bba60adc29", "message": "Fix #10180 narayana-jta ClassNotFoundException in native mode", "committedDate": "2020-11-05T02:35:20Z", "type": "forcePushed"}, {"oid": "817eced11465869689fa225c4d0f1236f7bcc0ea", "url": "https://github.com/quarkusio/quarkus/commit/817eced11465869689fa225c4d0f1236f7bcc0ea", "message": "Fix #10180 narayana-jta ClassNotFoundException in native mode", "committedDate": "2020-11-05T02:36:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r517881251", "bodyText": "This test only says that there is a transaction. A more comprehensive test is to check that there is both a transaction and that it is active/running. So if you return String.valueOf(txn.getStatus()); then that will test much more than the presence of a transaction. Then TransactionalTestCase can verify that it was running by checking that the response body has the value  javax.transaction.Status.STATUS_ACTIVE (ie given().when().get(\"/hello\").then().body(is(\"0\"));`). Here the value zero corresponds to STATUS_ACTIVE. To make the test clearer you could test against the constant field instead of \"0\".\nNote also that this would work regardless of the format of transaction uids since it is testing at the level of the JTA specification.", "author": "mmusgrov", "createdAt": "2020-11-05T08:48:05Z", "path": "integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionalResource.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.narayana.jta;\n+\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import com.arjuna.ats.arjuna.common.Uid;\n+import com.arjuna.ats.jta.TransactionManager;\n+\n+@Path(\"/txuid\")\n+public class TransactionalResource {\n+\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    @Transactional\n+    public String txuid() throws javax.transaction.SystemException {\n+        Transaction txn = TransactionManager.transactionManager().getTransaction();\n+        Uid uid = ((com.arjuna.ats.jta.transaction.Transaction) txn).get_uid();\n+        return uid.toString();", "originalCommit": "817eced11465869689fa225c4d0f1236f7bcc0ea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyODM0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r517928343", "bodyText": "Thanks @mmusgrov - good pointing here !\nI will add a new test case to check the transaction status.", "author": "zhfeng", "createdAt": "2020-11-05T10:01:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk3NzI1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r517977251", "bodyText": "And if there is no transaction associated with the calling thread then the spec says that txn.getStatus() will throw SystemException and the test will fail which is what we want to happen.\nOtherwise the PR looks good to go.", "author": "mmusgrov", "createdAt": "2020-11-05T11:22:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA3MTg4NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518071885", "bodyText": "if there is no transaction associated with the calling thread then the spec says that txn.getStatus() will throw SystemException\n\n@mmusgrov I can not find this describtion in the JTA spec. Also from the javaee docs\nint getStatus()\n       throws SystemException\nObtain the status of the transaction associated with the target Transaction object.\nReturns:\nThe transaction status. If no transaction is associated with the target object, this method returns the Status.NoTransaction value.\nThrows:\nSystemException - Thrown if the transaction manager encounters an unexpected error condition.\n\nDo I miss something ?", "author": "zhfeng", "createdAt": "2020-11-05T14:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEyMjg3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518122871", "bodyText": "Ah yes, it will return Status.NoTransaction so the test will fail which is what we want.\nSimilarly if the call to getStatus throws a SystemException.", "author": "mmusgrov", "createdAt": "2020-11-05T15:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMDA3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518130075", "bodyText": "But basically if the call to getStatus does not return STATUS_ACTIVE then the test will fail because the later test which checks the response will not match.", "author": "mmusgrov", "createdAt": "2020-11-05T15:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzODU1NA==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518138554", "bodyText": "sure, it makes sense.", "author": "zhfeng", "createdAt": "2020-11-05T15:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4MTI1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "93c833f949ac7aaf2a6d393de0833472df487d88", "chunk": "diff --git a/integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionalResource.java b/integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionalResource.java\nindex 2d4e669338..b9f7f447ef 100644\n--- a/integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionalResource.java\n+++ b/integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionalResource.java\n\n@@ -1,24 +1,25 @@\n package io.quarkus.narayana.jta;\n \n+import javax.inject.Inject;\n import javax.transaction.Transaction;\n+import javax.transaction.TransactionManager;\n import javax.transaction.Transactional;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n-import com.arjuna.ats.arjuna.common.Uid;\n-import com.arjuna.ats.jta.TransactionManager;\n-\n-@Path(\"/txuid\")\n+@Path(\"/tx\")\n public class TransactionalResource {\n+    @Inject\n+    TransactionManager tm;\n \n+    @Path(\"/status\")\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     @Transactional\n-    public String txuid() throws javax.transaction.SystemException {\n-        Transaction txn = TransactionManager.transactionManager().getTransaction();\n-        Uid uid = ((com.arjuna.ats.jta.transaction.Transaction) txn).get_uid();\n-        return uid.toString();\n+    public String status() throws javax.transaction.SystemException {\n+        Transaction txn = tm.getTransaction();\n+        return String.valueOf(txn.getStatus());\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518207888", "bodyText": "Our Uid format is internal and if we change the format then this will break (similarly if Quarkus replaces the underlying transaction engine).\nTesting uid format does not provide any positive benefit?\nHowever the test that verifies that the @Transactional annotation correctly starts a transaction is valid and is sufficient.", "author": "mmusgrov", "createdAt": "2020-11-05T16:58:59Z", "path": "integration-tests/narayana-jta/src/test/java/io/quarkus/narayana/jta/TransactionalTestCase.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.narayana.jta;\n+\n+import static org.hamcrest.core.Is.is;\n+\n+import org.hamcrest.text.MatchesPattern;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.http.TestHTTPEndpoint;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+\n+@QuarkusTest\n+@TestHTTPEndpoint(TransactionalResource.class)\n+public class TransactionalTestCase {\n+\n+    @Test\n+    public void test() {\n+        RestAssured.when().get(\"/uid\").then().assertThat().body(MatchesPattern.matchesPattern(\"[:0-9a-f]+\"));", "originalCommit": "033c1ca6f45b4844cfeaf9ee8c165db61133d58e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyNzk4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518427987", "bodyText": "Yeah, I see. It is just used to verify the fix for #10180. We can only see the warning messages when the SocketProcessId can not be loaded in the native mode, but the test will not fail. So I just use the [:0-9a-f]+ to check there is not -1 in the uid which means the process_id is correct. Do you have any better way to check the value of process_id ?", "author": "zhfeng", "createdAt": "2020-11-05T23:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczODQ3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518738477", "bodyText": "The test method TransactionalResource.status() is marked with @Transactional so we will try to start a transaction.\nStarting a transaction will then attempt to load the SocketProcessId class and if the class is not available then we throw an exception. This will cause the test that invokes TransactionalResource.status() to fail which again is what you want.\nIn other words there is no need for any more tests since the test TransactionalTestCase#test() is sufficient.\nNote also that the calls arjPropertyManager.getCoreEnvironmentBean().getProcessImplementation();, Utility.getpid() and new Uid() would all do the same but we do not need to test any of those since starting a transaction is enough.", "author": "mmusgrov", "createdAt": "2020-11-06T13:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc0MjcxMg==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518742712", "bodyText": "Just as I said, it will not throw an exception if the SocketProcessId is not available and only show the warning mesage. So the test does not fail. The process_id will follow to -1 and that is the reason I try to check the uid.", "author": "zhfeng", "createdAt": "2020-11-06T13:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1MDUwOA==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518750508", "bodyText": "see https://github.com/jbosstm/narayana/blob/master/ArjunaCore/arjuna/classes/com/arjuna/ats/arjuna/utils/Utility.java#L287", "author": "zhfeng", "createdAt": "2020-11-06T13:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxMDE1NA==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r518910154", "bodyText": "I'm still not clear on why you want to test our process id class, it's private.\nYou should only be testing that you are able to start a new transaction.\nIf you really did need to check SocketProcessId (though I don't see any benefit in doing so, notice that we don't test any of the many other classes that we configure in the deployment processor, NarayanaJtaProcessor) then something like following would test it:\n        try {\n            int pid = com.arjuna.ats.arjuna.utils.Utility.getpid();\n            Assertions.assertNotEquals(-1, pid);\n            Class clazz = arjPropertyManager.getCoreEnvironmentBean().getProcessImplementation().getClass();\n            com.arjuna.ats.internal.arjuna.utils.SocketProcessId.class.getName();\n            // success\n        } catch (Exception e) {\n            Assertions.fail(\"expectation failed\", e);\n        }\nBut like I say I would advise against testing it like this.", "author": "mmusgrov", "createdAt": "2020-11-06T17:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU1MzQ2MA==", "url": "https://github.com/quarkusio/quarkus/pull/13088#discussion_r519553460", "bodyText": "OK, I undrestand.\nYeah, it should be better to remove this case for Uid in the integration tests since it is just the internal one in Narayana. Also note there is only WARN messages in the surefire tests output when the SocketProcessId can not be loaded in the native mode without this fix, the status test case will not fail.", "author": "zhfeng", "createdAt": "2020-11-09T04:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIwNzg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "93c833f949ac7aaf2a6d393de0833472df487d88", "chunk": "diff --git a/integration-tests/narayana-jta/src/test/java/io/quarkus/narayana/jta/TransactionalTestCase.java b/integration-tests/narayana-jta/src/test/java/io/quarkus/narayana/jta/TransactionalTestCase.java\nindex f229e7a645..99435165d5 100644\n--- a/integration-tests/narayana-jta/src/test/java/io/quarkus/narayana/jta/TransactionalTestCase.java\n+++ b/integration-tests/narayana-jta/src/test/java/io/quarkus/narayana/jta/TransactionalTestCase.java\n\n@@ -15,8 +15,6 @@ public class TransactionalTestCase {\n \n     @Test\n     public void test() {\n-        RestAssured.when().get(\"/uid\").then().assertThat().body(MatchesPattern.matchesPattern(\"[:0-9a-f]+\"));\n-\n         RestAssured.when().get(\"/status\").then().body(is(\"0\"));\n     }\n }\n"}}, {"oid": "93c833f949ac7aaf2a6d393de0833472df487d88", "url": "https://github.com/quarkusio/quarkus/commit/93c833f949ac7aaf2a6d393de0833472df487d88", "message": "remove the uid test case", "committedDate": "2020-11-09T05:00:31Z", "type": "forcePushed"}, {"oid": "d040247c95c1752e7134c85af9e6ba47d24e3fdc", "url": "https://github.com/quarkusio/quarkus/commit/d040247c95c1752e7134c85af9e6ba47d24e3fdc", "message": "remove the uid test case", "committedDate": "2020-11-09T05:29:29Z", "type": "forcePushed"}, {"oid": "846290b9e46b38494d34eece6d981db85a8a3836", "url": "https://github.com/quarkusio/quarkus/commit/846290b9e46b38494d34eece6d981db85a8a3836", "message": "Fix #10180 narayana-jta ClassNotFoundException in native mode", "committedDate": "2020-11-30T10:17:44Z", "type": "commit"}, {"oid": "846290b9e46b38494d34eece6d981db85a8a3836", "url": "https://github.com/quarkusio/quarkus/commit/846290b9e46b38494d34eece6d981db85a8a3836", "message": "Fix #10180 narayana-jta ClassNotFoundException in native mode", "committedDate": "2020-11-30T10:17:44Z", "type": "forcePushed"}]}