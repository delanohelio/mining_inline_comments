{"pr_number": 12009, "pr_title": "Rest Client - support injection for @RegisterClientHeaders", "pr_createdAt": "2020-09-09T13:50:28Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12009", "timeline": [{"oid": "c8944ee2a8f18927ade69a461bb7b3ee3e425205", "url": "https://github.com/quarkusio/quarkus/commit/c8944ee2a8f18927ade69a461bb7b3ee3e425205", "message": "Rest Client - support injection for @RegisterClientHeaders\n\n- resolves #9301", "committedDate": "2020-09-09T14:36:46Z", "type": "forcePushed"}, {"oid": "9e9438bd0a2361c57ba5b287a5f9519de99225de", "url": "https://github.com/quarkusio/quarkus/commit/9e9438bd0a2361c57ba5b287a5f9519de99225de", "message": "Rest Client - support injection for @RegisterClientHeaders\n\n- resolves #9301", "committedDate": "2020-09-09T15:03:53Z", "type": "commit"}, {"oid": "9e9438bd0a2361c57ba5b287a5f9519de99225de", "url": "https://github.com/quarkusio/quarkus/commit/9e9438bd0a2361c57ba5b287a5f9519de99225de", "message": "Rest Client - support injection for @RegisterClientHeaders\n\n- resolves #9301", "committedDate": "2020-09-09T15:03:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NjAwMg==", "url": "https://github.com/quarkusio/quarkus/pull/12009#discussion_r485846002", "bodyText": "I usually recommend to use .name().toString(). The main reason is that for class it's ok but for types the toString() can lead to a non valid class name. Thus I think it's better to get used to always use name().toString().", "author": "gsmet", "createdAt": "2020-09-09T19:02:52Z", "path": "extensions/rest-client/deployment/src/main/java/io/quarkus/restclient/deployment/RestClientProcessor.java", "diffHunk": "@@ -421,6 +423,15 @@ void registerProviders(BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n                     .produce(new ReflectiveClassBuildItem(false, false, annotationInstance.value().asClass().toString()));\n         }\n \n+        // Register @RegisterClientHeaders for reflection\n+        for (AnnotationInstance annotationInstance : index.getAnnotations(REGISTER_CLIENT_HEADERS)) {\n+            AnnotationValue value = annotationInstance.value();\n+            if (value != null) {\n+                reflectiveClass\n+                        .produce(new ReflectiveClassBuildItem(false, false, annotationInstance.value().asClass().toString()));", "originalCommit": "9e9438bd0a2361c57ba5b287a5f9519de99225de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4ODY5OA==", "url": "https://github.com/quarkusio/quarkus/pull/12009#discussion_r486088698", "bodyText": "Hm, that's a good point. I just copied the code and did not realize there is ClassInfo.toString(). However, for ClassInfo it should be safe, in contrast with org.jboss.jandex.ClassType...", "author": "mkouba", "createdAt": "2020-09-10T06:13:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NjAwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA5MzAxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12009#discussion_r486093015", "bodyText": "ClassInfo.toString is safe, although yeah, calling .name() first does remove any possible reason to doubt the code :)", "author": "geoand", "createdAt": "2020-09-10T06:24:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0NjAwMg=="}], "type": "inlineReview", "revised_code": null}]}