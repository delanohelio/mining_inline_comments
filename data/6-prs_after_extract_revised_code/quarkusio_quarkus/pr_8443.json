{"pr_number": 8443, "pr_title": "Prevent looking up a parent if there is none", "pr_createdAt": "2020-04-07T10:22:25Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8443", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTU1OA==", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404701558", "bodyText": "I think you should still test for a null return value here.", "author": "gsmet", "createdAt": "2020-04-07T10:24:09Z", "path": "extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java", "diffHunk": "@@ -225,11 +225,11 @@ private boolean hasFTAnnotations(IndexView index, AnnotationStore annotationStor\n \n         // then check on the parent\n         DotName parentClassName = info.superName();\n-        ClassInfo parentClassInfo = index.getClassByName(parentClassName);\n-        if (parentClassName.equals(DotNames.OBJECT) || parentClassInfo == null) {\n-            return false; //no more parents\n+        if (parentClassName == null || parentClassName.equals(DotNames.OBJECT)) {\n+            return false;\n         }\n \n+        ClassInfo parentClassInfo = index.getClassByName(parentClassName);", "originalCommit": "0c1d7eaf942af90b4d6e1eb59dbc1a1bd0c8a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcxMDg3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404710876", "bodyText": "Ok, we're never safe enough", "author": "jmartisk", "createdAt": "2020-04-07T10:41:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTU1OA=="}], "type": "inlineReview", "revised_code": {"commit": "bd4b0b302bca07efee2ade5957f916df2eaf8faf", "chunk": "diff --git a/extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java b/extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java\nindex d1f94e08d0..a867d1b1ca 100644\n--- a/extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java\n+++ b/extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java\n\n@@ -228,8 +228,10 @@ public class SmallRyeFaultToleranceProcessor {\n         if (parentClassName == null || parentClassName.equals(DotNames.OBJECT)) {\n             return false;\n         }\n-\n         ClassInfo parentClassInfo = index.getClassByName(parentClassName);\n+        if (parentClassInfo == null) {\n+            return false;\n+        }\n         return hasFTAnnotations(index, annotationStore, parentClassInfo);\n     }\n \n"}}, {"oid": "bd4b0b302bca07efee2ade5957f916df2eaf8faf", "url": "https://github.com/quarkusio/quarkus/commit/bd4b0b302bca07efee2ade5957f916df2eaf8faf", "message": "Prevent looking up a parent if there is none", "committedDate": "2020-04-07T10:39:40Z", "type": "commit"}, {"oid": "bd4b0b302bca07efee2ade5957f916df2eaf8faf", "url": "https://github.com/quarkusio/quarkus/commit/bd4b0b302bca07efee2ade5957f916df2eaf8faf", "message": "Prevent looking up a parent if there is none", "committedDate": "2020-04-07T10:39:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA==", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404730768", "bodyText": "There's no FT in the test at all?", "author": "Ladicek", "createdAt": "2020-04-07T11:17:59Z", "path": "extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/ObjectBeanTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.smallrye.faulttolerance.test;\n+\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+/**\n+ * Verify that Fault Tolerance does not break if there is a CDI bean without a superclass", "originalCommit": "bd4b0b302bca07efee2ade5957f916df2eaf8faf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMTQ3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404731475", "bodyText": "I guess it's about the object being processed by the FTProcessor, right? Gotcha. It looks weird, but it's probably enough.", "author": "Ladicek", "createdAt": "2020-04-07T11:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0MzM0MA==", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404743340", "bodyText": "Yep, this is enough to reproduce the original issue if I deliberately remove the fix", "author": "jmartisk", "createdAt": "2020-04-07T11:41:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc4NDcxMg==", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404784712", "bodyText": "Nice, thanks!", "author": "Ladicek", "createdAt": "2020-04-07T12:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA=="}], "type": "inlineReview", "revised_code": null}]}