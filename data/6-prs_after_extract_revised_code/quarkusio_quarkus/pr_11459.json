{"pr_number": 11459, "pr_title": "Fix registration of GraphQL application classes for reflection", "pr_createdAt": "2020-08-19T07:41:54Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11459", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2Nzc5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11459#discussion_r473767791", "bodyText": "I'm not sure it's the right fix.\nWhat I think would be right is:\n\nregister the owner with a class build item\nregister the return types of the GraphQL methods with a hierarchy build item\n\nIf you have a hierarchy of complex objects for the return type, I think what you did will not work.", "author": "gsmet", "createdAt": "2020-08-20T08:38:09Z", "path": "extensions/smallrye-graphql/deployment/src/main/java/io/quarkus/smallrye/graphql/deployment/SmallRyeGraphQLProcessor.java", "diffHunk": "@@ -156,11 +155,7 @@ void buildExecutionService(\n         recorder.createExecutionService(beanContainer.getValue(), schema);\n \n         // Make sure the complex object from the application can work in native mode\n-        for (String c : getClassesToRegisterForReflection(schema)) {\n-            DotName name = DotName.createSimple(c);\n-            org.jboss.jandex.Type type = org.jboss.jandex.Type.create(name, org.jboss.jandex.Type.Kind.CLASS);\n-            reflectiveHierarchyProducer.produce(new ReflectiveHierarchyBuildItem(type, index));\n-        }\n+        reflectiveClassProducer.produce(new ReflectiveClassBuildItem(true, true, getSchemaJavaClasses(schema)));", "originalCommit": "88fe7aff41b6040dd429edbca0da710b60052d80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3MjE2OA==", "url": "https://github.com/quarkusio/quarkus/pull/11459#discussion_r473772168", "bodyText": "We already know the hierarchy as the model build that, but I am happy to change as you suggest. Let me add a test case with that scenario then we can see.", "author": "phillip-kruger", "createdAt": "2020-08-20T08:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2Nzc5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkyMDAyNw==", "url": "https://github.com/quarkusio/quarkus/pull/11459#discussion_r473920027", "bodyText": "Hey @gsmet - I added some tests to test parent and child classes. All seems ok. The model we build already discover all the classes needed. So this fix should be ok. Let me know.", "author": "phillip-kruger", "createdAt": "2020-08-20T12:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2Nzc5MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5c3d4dc3a5aad2ebf7f6c0d2331d8cddea9c1bed", "url": "https://github.com/quarkusio/quarkus/commit/5c3d4dc3a5aad2ebf7f6c0d2331d8cddea9c1bed", "message": "Fix registration of application classes for reflection\n\nSigned-off-by: Phillip Kruger <phillip.kruger@gmail.com>", "committedDate": "2020-08-20T12:05:18Z", "type": "commit"}]}