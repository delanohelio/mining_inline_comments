{"pr_number": 13865, "pr_title": "Add test for MTLS+Basic Auth", "pr_createdAt": "2020-12-14T06:26:58Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13865", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODc3OQ==", "url": "https://github.com/quarkusio/quarkus/pull/13865#discussion_r542288779", "bodyText": "Hi Stuart @stuartwdouglas , this is probably it, should be urlNoTls here", "author": "sberyozkin", "createdAt": "2020-12-14T10:49:57Z", "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package io.quarkus.vertx.http.security;\n+\n+import static org.hamcrest.Matchers.is;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.vertx.http.runtime.security.QuarkusHttpUser;\n+import io.restassured.RestAssured;\n+import io.vertx.ext.web.Router;\n+\n+public class MtlsRequestBasicAuthTest {\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = true)\n+    URL url;\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = false)\n+    URL urlNoTls;\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(MyBean.class)\n+                    .addClasses(TestIdentityProvider.class, TestTrustedIdentityProvider.class, TestIdentityController.class)\n+                    .addAsResource(\"conf/mtls/mtls-basic-jks.conf\", \"application.properties\")\n+                    .addAsResource(\"conf/mtls/server-keystore.jks\", \"server-keystore.jks\")\n+                    .addAsResource(\"conf/mtls/server-truststore.jks\", \"server-truststore.jks\"));\n+\n+    @BeforeAll\n+    public static void setup() {\n+        TestIdentityController.resetRoles()\n+                .add(\"admin\", \"admin\", \"admin\");\n+    }\n+\n+    @Test\n+    public void testClientAuthentication() {\n+        RestAssured.given()\n+                .keyStore(new File(\"src/test/resources/conf/mtls/client-keystore.jks\"), \"password\")\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"CN=client,OU=cert,O=quarkus,L=city,ST=state,C=AU\"));\n+    }\n+\n+    @Test\n+    public void testNoClientCert() {\n+        RestAssured.given()\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"\"));\n+    }\n+\n+    @Test\n+    public void testNoClientCertBasicAuth() {\n+        RestAssured.given()\n+                .auth()\n+                .preemptive()\n+                .basic(\"admin\", \"admin\")\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"admin\"));", "originalCommit": "aa62b9c2dc91e2a19fd0410642e862990fb6e972", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4OTczMQ==", "url": "https://github.com/quarkusio/quarkus/pull/13865#discussion_r542289731", "bodyText": "Ignore it, sorry :-)", "author": "sberyozkin", "createdAt": "2020-12-14T10:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODc3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c5bd959845cb4096abb7239e1cea3f749e68bb52", "chunk": "diff --git a/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java b/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java\nindex a246400721..f722f16cc5 100644\n--- a/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java\n+++ b/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java\n\n@@ -27,9 +27,6 @@ public class MtlsRequestBasicAuthTest {\n     @TestHTTPResource(value = \"/mtls\", ssl = true)\n     URL url;\n \n-    @TestHTTPResource(value = \"/mtls\", ssl = false)\n-    URL urlNoTls;\n-\n     @RegisterExtension\n     static final QuarkusUnitTest config = new QuarkusUnitTest()\n             .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MDU5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13865#discussion_r542290597", "bodyText": "Did you plan to use this property as well ?", "author": "sberyozkin", "createdAt": "2020-12-14T10:52:36Z", "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package io.quarkus.vertx.http.security;\n+\n+import static org.hamcrest.Matchers.is;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.vertx.http.runtime.security.QuarkusHttpUser;\n+import io.restassured.RestAssured;\n+import io.vertx.ext.web.Router;\n+\n+public class MtlsRequestBasicAuthTest {\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = true)\n+    URL url;\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = false)\n+    URL urlNoTls;", "originalCommit": "aa62b9c2dc91e2a19fd0410642e862990fb6e972", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c5bd959845cb4096abb7239e1cea3f749e68bb52", "chunk": "diff --git a/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java b/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java\nindex a246400721..f722f16cc5 100644\n--- a/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java\n+++ b/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java\n\n@@ -27,9 +27,6 @@ public class MtlsRequestBasicAuthTest {\n     @TestHTTPResource(value = \"/mtls\", ssl = true)\n     URL url;\n \n-    @TestHTTPResource(value = \"/mtls\", ssl = false)\n-    URL urlNoTls;\n-\n     @RegisterExtension\n     static final QuarkusUnitTest config = new QuarkusUnitTest()\n             .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n"}}, {"oid": "c5bd959845cb4096abb7239e1cea3f749e68bb52", "url": "https://github.com/quarkusio/quarkus/commit/c5bd959845cb4096abb7239e1cea3f749e68bb52", "message": "Add test for MTLS+Basic Auth", "committedDate": "2020-12-15T00:25:53Z", "type": "commit"}, {"oid": "c5bd959845cb4096abb7239e1cea3f749e68bb52", "url": "https://github.com/quarkusio/quarkus/commit/c5bd959845cb4096abb7239e1cea3f749e68bb52", "message": "Add test for MTLS+Basic Auth", "committedDate": "2020-12-15T00:25:53Z", "type": "forcePushed"}]}