{"pr_number": 8312, "pr_title": "Bug/kubernetes extension replicas fix", "pr_createdAt": "2020-03-31T21:34:07Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8312", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2MjIwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401362209", "bodyText": "This is the \"legacy\" way of doing things and we would really like to avoid it", "author": "geoand", "createdAt": "2020-04-01T05:22:59Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -63,6 +63,7 @@\n             p.getPartOf().ifPresent(g -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".part-of\", g));\n             p.getName().ifPresent(n -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".name\", n));\n             p.getVersion().ifPresent(v -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".version\", v));\n+            p.getReplicas().ifPresent(r -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".replicas\", r));", "originalCommit": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6393fe6649062b5ca2f2b634b2509ec6f8b19121", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java\nindex b5ed10f666..7ef1084d8f 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java\n\n@@ -63,7 +63,6 @@ public class KubernetesConfigUtil {\n             p.getPartOf().ifPresent(g -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".part-of\", g));\n             p.getName().ifPresent(n -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".name\", n));\n             p.getVersion().ifPresent(v -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".version\", v));\n-            p.getReplicas().ifPresent(r -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".replicas\", r));\n         });\n \n         Map<String, Object> unPrefixed = StreamSupport.stream(config.getPropertyNames().spliterator(), false)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401401718", "bodyText": "I think we should probably use:\n    @ConfigItem(defaultValue = \"1\")\n    Integer replicas;\n\nIt will make the default more visible.", "author": "geoand", "createdAt": "2020-04-01T07:15:00Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "originalCommit": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjA2NA==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401402064", "bodyText": "Okey sounds like a good idea. I will update the pull request", "author": "cemnura", "createdAt": "2020-04-01T07:15:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1ODcyMA==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402258720", "bodyText": "Oh sorry, I missed this. Any reason to not use Integer instead of OptionalInt?", "author": "geoand", "createdAt": "2020-04-02T12:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4NzE2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402587165", "bodyText": "Sorry missed this. Not really I preferred OptionalInt to be able to check the value and create ApplyReplicasDecorator. But I am assuming that since the default value is now 1 this field is basically never empty therefore no need to check if the value exists? If so then that sounds like a good idea. Shall I update it?", "author": "cemnura", "createdAt": "2020-04-02T20:22:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNjY5MA==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402726690", "bodyText": "Once this is addressed, we can merge", "author": "geoand", "createdAt": "2020-04-03T04:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg3OTU4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402879586", "bodyText": "Yeah, it's never empty now, if the user doesn't specify a value 1 will be used by Quarkus so there is no need to be defensive.", "author": "geoand", "createdAt": "2020-04-03T09:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}], "type": "inlineReview", "revised_code": {"commit": "70ea4edfd58af43acaf84a8595f8b46b90a25613", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java\nindex 98c02e43f5..a009db0741 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java\n\n@@ -99,7 +99,7 @@ public class KubernetesConfig implements PlatformConfiguration {\n     /**\n      * The number of desired pods\n      */\n-    @ConfigItem\n+    @ConfigItem(defaultValue = \"1\")\n     OptionalInt replicas;\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401401957", "bodyText": "I guess we need to drop this since Knative doesn't seem to have replicas.", "author": "geoand", "createdAt": "2020-04-01T07:15:32Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "originalCommit": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTgyNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401411825", "bodyText": "How would you recommend this? Should I delete the method from the PlatformConfiguration as well?\nDeleting the method would mean that I wouldn't be able use PlatformConfiguration in KubernetesConfigUtil#toMap", "author": "cemnura", "createdAt": "2020-04-01T07:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzE5MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401413191", "bodyText": "Yeah, we'll have to remove it from PlatformConfiguration.\nIf we follow the latest suggestion from @iocanel then what you mention won't be a problem since the field won't be used in toMap", "author": "geoand", "createdAt": "2020-04-01T07:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTAxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402169011", "bodyText": "Okey I will remove that form PlatformConfiguration", "author": "cemnura", "createdAt": "2020-04-02T09:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "df692696ac70848902a247ba8197d1926d9ec6fd", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java\nindex 1b52a81d5a..7332e020fc 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java\n\n@@ -96,12 +95,6 @@ public class KnativeConfig implements PlatformConfiguration {\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n-    /**\n-     * The number of desired pods\n-     */\n-    @ConfigItem\n-    OptionalInt replicas;\n-\n     /**\n      * The type of service that will be generated for the application\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjA0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401402045", "bodyText": "Same comment as the KubernetesConfig", "author": "geoand", "createdAt": "2020-04-01T07:15:48Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "diffHunk": "@@ -96,6 +97,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "originalCommit": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70ea4edfd58af43acaf84a8595f8b46b90a25613", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java\nindex 45b82e18f4..0607cb6a5b 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java\n\n@@ -100,7 +100,7 @@ public class OpenshiftConfig implements PlatformConfiguration {\n     /**\n      * The number of desired pods\n      */\n-    @ConfigItem\n+    @ConfigItem(defaultValue = \"1\")\n     OptionalInt replicas;\n \n     /**\n"}}, {"oid": "6393fe6649062b5ca2f2b634b2509ec6f8b19121", "url": "https://github.com/quarkusio/quarkus/commit/6393fe6649062b5ca2f2b634b2509ec6f8b19121", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-02T09:09:47Z", "type": "forcePushed"}, {"oid": "70ea4edfd58af43acaf84a8595f8b46b90a25613", "url": "https://github.com/quarkusio/quarkus/commit/70ea4edfd58af43acaf84a8595f8b46b90a25613", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-02T09:49:24Z", "type": "forcePushed"}, {"oid": "98e3cbe6c3bad7780380418f3147ddfce0992c7f", "url": "https://github.com/quarkusio/quarkus/commit/98e3cbe6c3bad7780380418f3147ddfce0992c7f", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-02T10:09:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMzMxOA==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402203318", "bodyText": "@iocanel what do you think about this? Would you have a different suggestion on how to override after() method", "author": "cemnura", "createdAt": "2020-04-02T10:14:39Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+import io.dekorate.openshift.decorator.ApplyReplicasDecorator;\n+\n+public class OpenshiftApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public OpenshiftApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };\n+    }\n+\n+}", "originalCommit": "98e3cbe6c3bad7780380418f3147ddfce0992c7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2NTg1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r403965851", "bodyText": "I would prefer if it also included ApplyReplicasDecorator (same reasoning as the kubernetes variant).", "author": "iocanel", "createdAt": "2020-04-06T09:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMzMxOA=="}], "type": "inlineReview", "revised_code": {"commit": "6106870c0fb6e4b69a92e702f4615ba15c43576b", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java\nindex 10295ba18b..c8e16c59c7 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java\n\n@@ -1,7 +1,6 @@\n package io.quarkus.kubernetes.deployment;\n \n import io.dekorate.kubernetes.decorator.Decorator;\n-import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n import io.dekorate.openshift.decorator.ApplyReplicasDecorator;\n \n public class OpenshiftApplyReplicasDecorator extends ApplyReplicasDecorator {\n"}}, {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd", "url": "https://github.com/quarkusio/quarkus/commit/df692696ac70848902a247ba8197d1926d9ec6fd", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-02T11:26:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0MzU0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402243547", "bodyText": "@geoand I deleted the getReplicas() method from PlatformConfiguration and applied the decator addition for kubernetes and openshift like this. Would you have any suggestions?", "author": "cemnura", "createdAt": "2020-04-02T11:32:05Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -403,6 +403,11 @@ private void applyBuildItems(Session session,\n         configMap.put(OPENSHIFT, openshiftConfig);\n         configMap.put(KNATIVE, knativeConfig);\n \n+        //Replicas\n+        kubernetesConfig.getReplicas()\n+                .ifPresent(i -> session.resources().decorate(new KubernetesApplyReplicasDecorator(kubernetesName, i)));\n+        openshiftConfig.getReplicas().ifPresent(i -> session.resources().decorate(new OpenshiftApplyReplicasDecorator(i)));\n+", "originalCommit": "df692696ac70848902a247ba8197d1926d9ec6fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MjUwNw==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402252507", "bodyText": "I looks good to me, \ud83d\udc4d", "author": "geoand", "createdAt": "2020-04-02T11:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0MzU0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDc2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402254766", "bodyText": "Glad to hear @geoand  :)", "author": "cemnura", "createdAt": "2020-04-02T11:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0MzU0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "6a1897771a5631b0c622549848fef0c19e5aad19", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java\nindex be6d878434..34c91fb364 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java\n\n@@ -404,9 +404,8 @@ class KubernetesProcessor {\n         configMap.put(KNATIVE, knativeConfig);\n \n         //Replicas\n-        kubernetesConfig.getReplicas()\n-                .ifPresent(i -> session.resources().decorate(new KubernetesApplyReplicasDecorator(kubernetesName, i)));\n-        openshiftConfig.getReplicas().ifPresent(i -> session.resources().decorate(new OpenshiftApplyReplicasDecorator(i)));\n+        session.resources().decorate(new KubernetesApplyReplicasDecorator(kubernetesName, kubernetesConfig.getReplicas()));\n+        session.resources().decorate(new OpenshiftApplyReplicasDecorator(openshiftConfig.getReplicas()));\n \n         kubernetesAnnotations.forEach(a -> {\n             session.resources().decorate(a.getTarget(), new AddAnnotationDecorator(new Annotation(a.getKey(), a.getValue())));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402252749", "bodyText": "Please don't use \"star\" imports in Quarkus.", "author": "geoand", "createdAt": "2020-04-02T11:50:50Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.*;", "originalCommit": "df692696ac70848902a247ba8197d1926d9ec6fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MzM4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402253381", "bodyText": "Other than this, I don't have any more objections and we should be good to go.", "author": "geoand", "createdAt": "2020-04-02T11:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDAwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402254009", "bodyText": "Okey will fix this.", "author": "cemnura", "createdAt": "2020-04-02T11:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Njg3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402256872", "bodyText": "Removed \"star\" imports", "author": "cemnura", "createdAt": "2020-04-02T11:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f24a71d31e9182a98668b5d6c42b37151426fd20", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java\nindex b51803512b..d05c3e81a8 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java\n\n@@ -1,6 +1,8 @@\n package io.quarkus.kubernetes.deployment;\n \n-import io.dekorate.kubernetes.decorator.*;\n+import io.dekorate.kubernetes.decorator.ApplyReplicasDecorator;\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n \n public class KubernetesApplyReplicasDecorator extends ApplyReplicasDecorator {\n \n"}}, {"oid": "f24a71d31e9182a98668b5d6c42b37151426fd20", "url": "https://github.com/quarkusio/quarkus/commit/f24a71d31e9182a98668b5d6c42b37151426fd20", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-02T11:55:49Z", "type": "forcePushed"}, {"oid": "6a1897771a5631b0c622549848fef0c19e5aad19", "url": "https://github.com/quarkusio/quarkus/commit/6a1897771a5631b0c622549848fef0c19e5aad19", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-03T09:20:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2MzE4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r403963187", "bodyText": "Just to be on the safe side of things, I would explicitly express that I want to it to be called after the ApplyReplicasDecorator. Why?\n\nIt justifies the purpose of the class\nIt makes it easy to understand which dekorator is applied first. (e.g. atm I can't understand which will be applied first without checking the sources of AppliedReplicasDecorator).", "author": "iocanel", "createdAt": "2020-04-06T09:47:42Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.ApplyReplicasDecorator;\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+\n+public class KubernetesApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public KubernetesApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    public KubernetesApplyReplicasDecorator(String deploymentName, int replicas) {\n+        super(deploymentName, replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };", "originalCommit": "6a1897771a5631b0c622549848fef0c19e5aad19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE5MDk1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r404190952", "bodyText": "Hi @iocanel this was my initial intension and I had implemented it but failed. I now changed it as your said and it seems to be working. I think I had a package problem.\nMy intension was to enable this decorator to work after all NamedResourceDecorators. However, the method you suggested is much more understandable.", "author": "cemnura", "createdAt": "2020-04-06T15:40:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2MzE4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE5NTI5OA==", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r404195298", "bodyText": "I change the after call to ApplyReplicasDecorator", "author": "cemnura", "createdAt": "2020-04-06T15:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2MzE4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "6106870c0fb6e4b69a92e702f4615ba15c43576b", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java\nindex d05c3e81a8..f37bafddf9 100644\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java\n+++ b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java\n\n@@ -2,7 +2,6 @@ package io.quarkus.kubernetes.deployment;\n \n import io.dekorate.kubernetes.decorator.ApplyReplicasDecorator;\n import io.dekorate.kubernetes.decorator.Decorator;\n-import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n \n public class KubernetesApplyReplicasDecorator extends ApplyReplicasDecorator {\n \n"}}, {"oid": "6106870c0fb6e4b69a92e702f4615ba15c43576b", "url": "https://github.com/quarkusio/quarkus/commit/6106870c0fb6e4b69a92e702f4615ba15c43576b", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-06T15:40:18Z", "type": "commit"}, {"oid": "6106870c0fb6e4b69a92e702f4615ba15c43576b", "url": "https://github.com/quarkusio/quarkus/commit/6106870c0fb6e4b69a92e702f4615ba15c43576b", "message": "Enabled replicas configuration for kubernetes and openshift to be generated\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-06T15:40:18Z", "type": "forcePushed"}]}