{"pr_number": 10598, "pr_title": "ArC - fix AnnotationStore", "pr_createdAt": "2020-07-09T08:43:30Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10598", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4ODEwMA==", "url": "https://github.com/quarkusio/quarkus/pull/10598#discussion_r452588100", "bodyText": "Small typo \ud83d\ude09\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static IllegalArgumentException unsupportedAnnoationTarget(AnnotationTarget target) {\n          \n          \n            \n                private static IllegalArgumentException unsupportedAnnotationTarget(AnnotationTarget target) {", "author": "gastaldi", "createdAt": "2020-07-10T02:24:30Z", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java", "diffHunk": "@@ -144,4 +148,65 @@ public Transformation transform() {\n \n     }\n \n+    /**\n+     * We cannot use annotation target directly as a key in a Map. Only {@link MethodInfo} overrides equals/hashCode.\n+     */\n+    static final class AnnotationTargetKey {\n+\n+        final AnnotationTarget target;\n+\n+        public AnnotationTargetKey(AnnotationTarget target) {\n+            this.target = target;\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj) {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if (obj == null) {\n+                return false;\n+            }\n+            if (getClass() != obj.getClass()) {\n+                return false;\n+            }\n+            AnnotationTargetKey other = (AnnotationTargetKey) obj;\n+            if (target.kind() != other.target.kind()) {\n+                return false;\n+            }\n+            switch (target.kind()) {\n+                case METHOD:\n+                    return target.asMethod().equals(other.target);\n+                case FIELD:\n+                    FieldInfo field = target.asField();\n+                    FieldInfo otherField = other.target.asField();\n+                    return Objects.equals(field.name(), otherField.name())\n+                            && Objects.equals(field.declaringClass().name(), otherField.declaringClass().name());\n+                case CLASS:\n+                    return target.asClass().name().equals(other.target.asClass().name());\n+                default:\n+                    throw unsupportedAnnoationTarget(target);\n+            }\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            switch (target.kind()) {\n+                case METHOD:\n+                    return target.asMethod().hashCode();\n+                case FIELD:\n+                    return Objects.hash(target.asField().name(), target.asField().declaringClass().name());\n+                case CLASS:\n+                    return target.asClass().name().hashCode();\n+                default:\n+                    throw unsupportedAnnoationTarget(target);\n+            }\n+        }\n+\n+    }\n+\n+    private static IllegalArgumentException unsupportedAnnoationTarget(AnnotationTarget target) {", "originalCommit": "2f42ce973299c4420608f1f8af2a52ca8f91614d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f33d1e36f77889484b597efada770bcd23c7e01", "chunk": "diff --git a/independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java b/independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java\nindex e8333d3a24..583c5d52a0 100644\n--- a/independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java\n+++ b/independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java\n\n@@ -185,7 +185,7 @@ public final class AnnotationStore {\n                 case CLASS:\n                     return target.asClass().name().equals(other.target.asClass().name());\n                 default:\n-                    throw unsupportedAnnoationTarget(target);\n+                    throw unsupportedAnnotationTarget(target);\n             }\n         }\n \n"}}, {"oid": "7f33d1e36f77889484b597efada770bcd23c7e01", "url": "https://github.com/quarkusio/quarkus/commit/7f33d1e36f77889484b597efada770bcd23c7e01", "message": "ArC - fix AnnotationStore\n\n- AnnotationTarget was incorrectly used as a key in a Map\n- resolves #10593", "committedDate": "2020-07-10T08:02:45Z", "type": "commit"}, {"oid": "7f33d1e36f77889484b597efada770bcd23c7e01", "url": "https://github.com/quarkusio/quarkus/commit/7f33d1e36f77889484b597efada770bcd23c7e01", "message": "ArC - fix AnnotationStore\n\n- AnnotationTarget was incorrectly used as a key in a Map\n- resolves #10593", "committedDate": "2020-07-10T08:02:45Z", "type": "forcePushed"}]}