{"pr_number": 10004, "pr_title": "Enable programmatic security in SmallRye GraphQL endpoints", "pr_createdAt": "2020-06-15T09:19:17Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10004", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNjgwMw==", "url": "https://github.com/quarkusio/quarkus/pull/10004#discussion_r441616803", "bodyText": "We try to avoid star imports but as it's a test, I'll let it slide.", "author": "gsmet", "createdAt": "2020-06-17T15:04:22Z", "path": "extensions/smallrye-graphql/deployment/src/test/java/io/quarkus/smallrye/graphql/deployment/SecurityTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package io.quarkus.smallrye.graphql.deployment;\n+\n+import static org.hamcrest.Matchers.*;", "originalCommit": "a456828971f66390dabda130d1df171109f7b985", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1Nzk4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/10004#discussion_r442057986", "bodyText": "Fixed", "author": "jmartisk", "createdAt": "2020-06-18T08:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNjgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "677ad4b95afc944401bee33b96b81975738614be", "chunk": "diff --git a/extensions/smallrye-graphql/deployment/src/test/java/io/quarkus/smallrye/graphql/deployment/SecurityTest.java b/extensions/smallrye-graphql/deployment/src/test/java/io/quarkus/smallrye/graphql/deployment/SecurityTest.java\nindex 24b22955d3..d156ab94a2 100644\n--- a/extensions/smallrye-graphql/deployment/src/test/java/io/quarkus/smallrye/graphql/deployment/SecurityTest.java\n+++ b/extensions/smallrye-graphql/deployment/src/test/java/io/quarkus/smallrye/graphql/deployment/SecurityTest.java\n\n@@ -1,6 +1,8 @@\n package io.quarkus.smallrye.graphql.deployment;\n \n-import static org.hamcrest.Matchers.*;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.hamcrest.Matchers.nullValue;\n \n import javax.annotation.security.RolesAllowed;\n import javax.enterprise.context.ApplicationScoped;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNzI5NA==", "url": "https://github.com/quarkusio/quarkus/pull/10004#discussion_r441617294", "bodyText": "@stuartwdouglas could you check that one? Looks like a good backport candidate.", "author": "gsmet", "createdAt": "2020-06-17T15:05:00Z", "path": "extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java", "diffHunk": "@@ -50,6 +53,11 @@ public void handle(final RoutingContext ctx) {\n     }\n \n     private void doHandle(final RoutingContext ctx) {\n+        Instance<CurrentIdentityAssociation> association = Arc.container().select(CurrentIdentityAssociation.class);\n+        if (association.isResolvable()) {\n+            association.get().setIdentity(QuarkusHttpUser.getSecurityIdentity(ctx, null));\n+        }", "originalCommit": "a456828971f66390dabda130d1df171109f7b985", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "677ad4b95afc944401bee33b96b81975738614be", "chunk": "diff --git a/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java b/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java\nindex 38902ac80d..9343d1fc4b 100644\n--- a/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java\n+++ b/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java\n\n@@ -53,9 +54,8 @@ public class SmallRyeGraphQLExecutionHandler implements Handler<RoutingContext>\n     }\n \n     private void doHandle(final RoutingContext ctx) {\n-        Instance<CurrentIdentityAssociation> association = Arc.container().select(CurrentIdentityAssociation.class);\n-        if (association.isResolvable()) {\n-            association.get().setIdentity(QuarkusHttpUser.getSecurityIdentity(ctx, null));\n+        if (currentIdentityAssociation != null) {\n+            currentIdentityAssociation.setIdentity(QuarkusHttpUser.getSecurityIdentity(ctx, null));\n         }\n \n         HttpServerRequest request = ctx.request();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODQxMw==", "url": "https://github.com/quarkusio/quarkus/pull/10004#discussion_r441888413", "bodyText": "This should not be resolved per request, it should either be looked up in the constructor of cached in a volatile to improve performance.", "author": "stuartwdouglas", "createdAt": "2020-06-17T23:32:11Z", "path": "extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java", "diffHunk": "@@ -50,6 +53,11 @@ public void handle(final RoutingContext ctx) {\n     }\n \n     private void doHandle(final RoutingContext ctx) {\n+        Instance<CurrentIdentityAssociation> association = Arc.container().select(CurrentIdentityAssociation.class);", "originalCommit": "a456828971f66390dabda130d1df171109f7b985", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAxMjQ5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/10004#discussion_r442012495", "bodyText": "I'm not quite sure how to do this.\nI can't do that in the constructor, because that is called from a recorder, so Arc.container() doesn't work yet.\nIf I store it into a volatile variable, I need to be able to store null in some cases, in which case I won't be able to say whether the association is really null, or just not attempted to resolve yet, therefore I'll need to keep a boolean field somewhere to distinguish this, and check it every time, so the performance improvement might not be worth it anymore?", "author": "jmartisk", "createdAt": "2020-06-18T07:08:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzNjYxMA==", "url": "https://github.com/quarkusio/quarkus/pull/10004#discussion_r442036610", "bodyText": "You should be able to depend on BeanContainerBuildItem in your processor and then just pass the container into the recorder.", "author": "stuartwdouglas", "createdAt": "2020-06-18T07:54:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "677ad4b95afc944401bee33b96b81975738614be", "chunk": "diff --git a/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java b/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java\nindex 38902ac80d..9343d1fc4b 100644\n--- a/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java\n+++ b/extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java\n\n@@ -53,9 +54,8 @@ public class SmallRyeGraphQLExecutionHandler implements Handler<RoutingContext>\n     }\n \n     private void doHandle(final RoutingContext ctx) {\n-        Instance<CurrentIdentityAssociation> association = Arc.container().select(CurrentIdentityAssociation.class);\n-        if (association.isResolvable()) {\n-            association.get().setIdentity(QuarkusHttpUser.getSecurityIdentity(ctx, null));\n+        if (currentIdentityAssociation != null) {\n+            currentIdentityAssociation.setIdentity(QuarkusHttpUser.getSecurityIdentity(ctx, null));\n         }\n \n         HttpServerRequest request = ctx.request();\n"}}, {"oid": "677ad4b95afc944401bee33b96b81975738614be", "url": "https://github.com/quarkusio/quarkus/commit/677ad4b95afc944401bee33b96b81975738614be", "message": "Enable programmatic security in SmallRye GraphQL endpoints", "committedDate": "2020-06-18T08:28:53Z", "type": "forcePushed"}, {"oid": "a7192fec1fa960f6421bbe3ac654cb759a1a69fe", "url": "https://github.com/quarkusio/quarkus/commit/a7192fec1fa960f6421bbe3ac654cb759a1a69fe", "message": "Enable programmatic security in SmallRye GraphQL endpoints", "committedDate": "2020-06-18T10:43:08Z", "type": "forcePushed"}, {"oid": "1b5ff563197fdbd5879dd6fd7435122f9b1d125b", "url": "https://github.com/quarkusio/quarkus/commit/1b5ff563197fdbd5879dd6fd7435122f9b1d125b", "message": "Enable programmatic security in SmallRye GraphQL endpoints", "committedDate": "2020-06-18T10:53:52Z", "type": "commit"}, {"oid": "1b5ff563197fdbd5879dd6fd7435122f9b1d125b", "url": "https://github.com/quarkusio/quarkus/commit/1b5ff563197fdbd5879dd6fd7435122f9b1d125b", "message": "Enable programmatic security in SmallRye GraphQL endpoints", "committedDate": "2020-06-18T10:53:52Z", "type": "forcePushed"}]}