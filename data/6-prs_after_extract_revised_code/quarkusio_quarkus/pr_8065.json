{"pr_number": 8065, "pr_title": "fix(flyway): multiple datasource migration does not work on native", "pr_createdAt": "2020-03-22T20:07:12Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8065", "timeline": [{"oid": "ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "url": "https://github.com/quarkusio/quarkus/commit/ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "message": "fix(flyway): multiple datasource migration does not work on native\n\nThe QuarkusPathLocationScanner returned all migrations locations by default, this risked to cause\ncollision when we have a same filename for a migration script which is handled by different\ndatasources - a behaviour encountered on the issue #7685. Let's avoid this case by making sure that\nthe scanner only returns migration that it can recognize.\n\nFixes #7685", "committedDate": "2020-03-22T21:00:01Z", "type": "commit"}, {"oid": "ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "url": "https://github.com/quarkusio/quarkus/commit/ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "message": "fix(flyway): multiple datasource migration does not work on native\n\nThe QuarkusPathLocationScanner returned all migrations locations by default, this risked to cause\ncollision when we have a same filename for a migration script which is handled by different\ndatasources - a behaviour encountered on the issue #7685. Let's avoid this case by making sure that\nthe scanner only returns migration that it can recognize.\n\nFixes #7685", "committedDate": "2020-03-22T21:00:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5NjY0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r396296641", "bodyText": "Could you clean up all these useless comments? I did it in the Liquibase extension that was based on it. It should be done in a separate commit.", "author": "gsmet", "createdAt": "2020-03-23T09:00:34Z", "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -88,19 +82,20 @@ void build(BuildProducer<AdditionalBeanBuildItem> additionalBeanProducer,\n                 .collect(Collectors.toSet());\n         new FlywayDatasourceBeanGenerator(dataSourceNames, generatedBeanBuildItem).createFlywayProducerBean();\n \n-        registerNativeImageResources(resourceProducer, generatedResourceProducer,\n-                discoverApplicationMigrations(getMigrationLocations(dataSourceNames)));\n+        List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n+        recorder.setApplicationMigrationFiles(applicationMigrations);\n \n-        containerListenerProducer.produce(\n-                new BeanContainerListenerBuildItem(recorder.setFlywayBuildConfig(flywayBuildConfig)));\n+        resourceProducer.produce(new NativeImageResourceBuildItem(applicationMigrations.toArray(new String[0])));\n+\n+        containerListenerProducer.produce(new BeanContainerListenerBuildItem(recorder.setFlywayBuildConfig(flywayBuildConfig)));\n     }\n \n     /**\n      * Handles all the operations that can be recorded in the RUNTIME_INIT execution time phase\n      *\n      * @param recorder Used to set the runtime config\n      * @param flywayRuntimeConfig The Flyway configuration\n-     * @param dataSourceInitializedBuildItem Added this dependency to be sure that Agroal is initialized first\n+     * @param jdbcDataSourceBuildItems Added this dependency to be sure that Agroal is initialized first", "originalCommit": "ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxOTc3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r396319776", "bodyText": "Done.", "author": "machi1990", "createdAt": "2020-03-23T09:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5NjY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0f4b720562c008abb35b679760512cd1aa4acba0", "chunk": "diff --git a/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java b/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java\nindex 138ff83dc6..58aea32175 100644\n--- a/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java\n+++ b/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java\n\n@@ -90,15 +88,8 @@ class FlywayProcessor {\n         containerListenerProducer.produce(new BeanContainerListenerBuildItem(recorder.setFlywayBuildConfig(flywayBuildConfig)));\n     }\n \n-    /**\n-     * Handles all the operations that can be recorded in the RUNTIME_INIT execution time phase\n-     *\n-     * @param recorder Used to set the runtime config\n-     * @param flywayRuntimeConfig The Flyway configuration\n-     * @param jdbcDataSourceBuildItems Added this dependency to be sure that Agroal is initialized first\n-     */\n-    @Record(ExecutionTime.RUNTIME_INIT)\n     @BuildStep\n+    @Record(ExecutionTime.RUNTIME_INIT)\n     ServiceStartBuildItem configureRuntimeProperties(FlywayRecorder recorder,\n             FlywayRuntimeConfig flywayRuntimeConfig,\n             BeanContainerBuildItem beanContainer,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5ODIwNA==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r396298204", "bodyText": "It might be a silly idea but shouldn't we have a Map<Datasource name, Migration files>?", "author": "gsmet", "createdAt": "2020-03-23T09:03:13Z", "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -88,19 +82,20 @@ void build(BuildProducer<AdditionalBeanBuildItem> additionalBeanProducer,\n                 .collect(Collectors.toSet());\n         new FlywayDatasourceBeanGenerator(dataSourceNames, generatedBeanBuildItem).createFlywayProducerBean();\n \n-        registerNativeImageResources(resourceProducer, generatedResourceProducer,\n-                discoverApplicationMigrations(getMigrationLocations(dataSourceNames)));\n+        List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n+        recorder.setApplicationMigrationFiles(applicationMigrations);", "originalCommit": "ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxMDAwMg==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r396310002", "bodyText": "I see the idea but then we do not have the Datasource name during scanning so we can't exploit the Map as we'd have liked.", "author": "machi1990", "createdAt": "2020-03-23T09:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5ODIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "0f4b720562c008abb35b679760512cd1aa4acba0", "chunk": "diff --git a/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java b/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java\nindex 138ff83dc6..58aea32175 100644\n--- a/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java\n+++ b/extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java\n\n@@ -90,15 +88,8 @@ class FlywayProcessor {\n         containerListenerProducer.produce(new BeanContainerListenerBuildItem(recorder.setFlywayBuildConfig(flywayBuildConfig)));\n     }\n \n-    /**\n-     * Handles all the operations that can be recorded in the RUNTIME_INIT execution time phase\n-     *\n-     * @param recorder Used to set the runtime config\n-     * @param flywayRuntimeConfig The Flyway configuration\n-     * @param jdbcDataSourceBuildItems Added this dependency to be sure that Agroal is initialized first\n-     */\n-    @Record(ExecutionTime.RUNTIME_INIT)\n     @BuildStep\n+    @Record(ExecutionTime.RUNTIME_INIT)\n     ServiceStartBuildItem configureRuntimeProperties(FlywayRecorder recorder,\n             FlywayRuntimeConfig flywayRuntimeConfig,\n             BeanContainerBuildItem beanContainer,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5ODc4OA==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r396298788", "bodyText": "It was preexisiting bug we would need to use debugf here. I fixed a few in the Liquibase extension.", "author": "gsmet", "createdAt": "2020-03-23T09:04:19Z", "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/graal/QuarkusPathLocationScanner.java", "diffHunk": "@@ -21,32 +15,46 @@\n \n public final class QuarkusPathLocationScanner implements ResourceAndClassScanner {\n     private static final Log LOG = LogFactory.getLog(QuarkusPathLocationScanner.class);\n-    /**\n-     * File with the migrations list. It is generated dynamically in the Flyway Quarkus Processor\n-     */\n-    public final static String MIGRATIONS_LIST_FILE = \"META-INF/flyway-migrations.txt\";\n+    private static final String LOCATION_SEPARATOR = \"/\";\n+    private static List<String> applicationMigrationFiles;\n+\n+    private final Collection<LoadableResource> scannedResources;\n+\n+    public QuarkusPathLocationScanner(Collection<Location> locations) {\n+        this.scannedResources = new ArrayList<>();\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+\n+        for (String migrationFile : applicationMigrationFiles) {\n+            if (canHandleMigrationFile(locations, migrationFile)) {\n+                LOG.debug(\"Loading \" + migrationFile);", "originalCommit": "ecddfb0a2eeb5283fd1ebbf1830737f78cf15d0b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxOTkwNA==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r396319904", "bodyText": "Done", "author": "machi1990", "createdAt": "2020-03-23T09:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5ODc4OA=="}], "type": "inlineReview", "revised_code": {"commit": "469204f363c096afd5773edfed9e95ce9940bdee", "chunk": "diff --git a/extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/graal/QuarkusPathLocationScanner.java b/extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/graal/QuarkusPathLocationScanner.java\nindex 7612e414b8..1b50906be9 100644\n--- a/extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/graal/QuarkusPathLocationScanner.java\n+++ b/extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/graal/QuarkusPathLocationScanner.java\n\n@@ -7,14 +7,13 @@ import java.util.Collections;\n import java.util.List;\n \n import org.flywaydb.core.api.Location;\n-import org.flywaydb.core.api.logging.Log;\n-import org.flywaydb.core.api.logging.LogFactory;\n import org.flywaydb.core.internal.resource.LoadableResource;\n import org.flywaydb.core.internal.resource.classpath.ClassPathResource;\n import org.flywaydb.core.internal.scanner.classpath.ResourceAndClassScanner;\n+import org.jboss.logging.Logger;\n \n public final class QuarkusPathLocationScanner implements ResourceAndClassScanner {\n-    private static final Log LOG = LogFactory.getLog(QuarkusPathLocationScanner.class);\n+    private static final Logger LOGGER = Logger.getLogger(QuarkusPathLocationScanner.class);\n     private static final String LOCATION_SEPARATOR = \"/\";\n     private static List<String> applicationMigrationFiles;\n \n"}}, {"oid": "469204f363c096afd5773edfed9e95ce9940bdee", "url": "https://github.com/quarkusio/quarkus/commit/469204f363c096afd5773edfed9e95ce9940bdee", "message": "refactor: use JBoss logging api in QuarkusPathLocationScanner", "committedDate": "2020-03-23T09:39:12Z", "type": "commit"}, {"oid": "0f4b720562c008abb35b679760512cd1aa4acba0", "url": "https://github.com/quarkusio/quarkus/commit/0f4b720562c008abb35b679760512cd1aa4acba0", "message": "refactor: remove useless comments from FlywayProcessor", "committedDate": "2020-03-23T09:39:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzExNzYxMw==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r397117613", "bodyText": "Dunno, this doesn't seem useless to me :)", "author": "gastaldi", "createdAt": "2020-03-24T12:34:23Z", "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -117,10 +108,6 @@ ServiceStartBuildItem configureRuntimeProperties(FlywayRecorder recorder,\n \n     /**\n      * Collects the configured migration locations for the default and all named DataSources.\n-     * <p>\n-     * A {@link LinkedHashSet} is used to avoid duplications.", "originalCommit": "0f4b720562c008abb35b679760512cd1aa4acba0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyMTU3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8065#discussion_r397121576", "bodyText": "Well, I don't think we should add a comment every time we choose a data structure. Otherwise, we will have a loooot of comments.\nIf you use a Set, that's usually to avoid duplications :). I think just using it is enough documentation.", "author": "gsmet", "createdAt": "2020-03-24T12:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzExNzYxMw=="}], "type": "inlineReview", "revised_code": null}]}