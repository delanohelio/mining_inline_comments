{"pr_number": 7860, "pr_title": "Add healthcheck for reactive datasources", "pr_createdAt": "2020-03-13T22:11:27Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7860", "timeline": [{"oid": "f546849399ae4434152d91f00ab69528d1c54201", "url": "https://github.com/quarkusio/quarkus/commit/f546849399ae4434152d91f00ab69528d1c54201", "message": "feat: add healthcheck for reactive datasources\n\nthe datasource config had a health check enabled option which was only consumed by Agroal Datasource\nand not the reactive ones. Let's use this option for reactive datasource too and send appropriate\ncheck status when database is down.", "committedDate": "2020-03-13T22:10:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MDIyOA==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r392850228", "bodyText": "can't we get more than one?", "author": "cescoffier", "createdAt": "2020-03-16T08:26:03Z", "path": "extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.reactive.mysql.client.runtime.health;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.health.HealthCheck;\n+import org.eclipse.microprofile.health.HealthCheckResponse;\n+import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n+import org.eclipse.microprofile.health.Readiness;\n+\n+import io.quarkus.arc.Arc;\n+import io.vertx.mysqlclient.MySQLPool;\n+\n+@Readiness\n+@ApplicationScoped\n+public class ReactiveMySQLDataSourceHealthCheck implements HealthCheck {\n+\n+    private MySQLPool mySQLPool;\n+\n+    @PostConstruct\n+    protected void init() {\n+        mySQLPool = Arc.container().instance(MySQLPool.class).get();", "originalCommit": "f546849399ae4434152d91f00ab69528d1c54201", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ce89c66456079143d3bbeee17c1ca7eff7aa7d3", "chunk": "diff --git a/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java b/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java\nindex 4c40646031..588cf83b75 100644\n--- a/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java\n+++ b/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java\n\n@@ -1,6 +1,7 @@\n package io.quarkus.reactive.mysql.client.runtime.health;\n \n import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n \n import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTAxMw==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r392851013", "bodyText": "You need to check you are not on the IO Thread, because if so you cannot block.", "author": "cescoffier", "createdAt": "2020-03-16T08:27:40Z", "path": "extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.reactive.mysql.client.runtime.health;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.health.HealthCheck;\n+import org.eclipse.microprofile.health.HealthCheckResponse;\n+import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n+import org.eclipse.microprofile.health.Readiness;\n+\n+import io.quarkus.arc.Arc;\n+import io.vertx.mysqlclient.MySQLPool;\n+\n+@Readiness\n+@ApplicationScoped\n+public class ReactiveMySQLDataSourceHealthCheck implements HealthCheck {\n+\n+    private MySQLPool mySQLPool;\n+\n+    @PostConstruct\n+    protected void init() {\n+        mySQLPool = Arc.container().instance(MySQLPool.class).get();\n+    }\n+\n+    @Override\n+    public HealthCheckResponse call() {\n+        HealthCheckResponseBuilder builder = HealthCheckResponse.named(\"Reactive MySQL connection health check\").up();\n+\n+        try {\n+            CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();\n+            mySQLPool.query(\"SELECT 1\", ar -> {\n+                if (ar.failed()) {\n+                    builder.down();", "originalCommit": "f546849399ae4434152d91f00ab69528d1c54201", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ce89c66456079143d3bbeee17c1ca7eff7aa7d3", "chunk": "diff --git a/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java b/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java\nindex 4c40646031..588cf83b75 100644\n--- a/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java\n+++ b/extensions/reactive-mysql-client/runtime/src/main/java/io/quarkus/reactive/mysql/client/runtime/health/ReactiveMySQLDataSourceHealthCheck.java\n\n@@ -1,6 +1,7 @@\n package io.quarkus.reactive.mysql.client.runtime.health;\n \n import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n \n import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r392851847", "bodyText": "Same comments:\n\nhow to handle when there are several Pools\nyou need to be sure to not block the IO Thread.", "author": "cescoffier", "createdAt": "2020-03-16T08:29:27Z", "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.reactive.pg.client.runtime.health;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.health.HealthCheck;\n+import org.eclipse.microprofile.health.HealthCheckResponse;\n+import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n+import org.eclipse.microprofile.health.Readiness;\n+\n+import io.quarkus.arc.Arc;\n+import io.vertx.pgclient.PgPool;\n+\n+@Readiness\n+@ApplicationScoped\n+public class ReactivePgDataSourceHealthCheck implements HealthCheck {\n+    private PgPool pgPool;\n+\n+    @PostConstruct\n+    protected void init() {\n+        pgPool = Arc.container().instance(PgPool.class).get();\n+    }\n+\n+    @Override\n+    public HealthCheckResponse call() {\n+        HealthCheckResponseBuilder builder = HealthCheckResponse.named(\"Reactive PostgreSQL connection health check\").up();\n+\n+        try {\n+            CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();\n+            pgPool.query(\"SELECT 1\", ar -> {\n+                if (ar.failed()) {\n+                    builder.down();\n+                }\n+                databaseConnectionAttempt.complete(null);\n+            });\n+            databaseConnectionAttempt.join();", "originalCommit": "f546849399ae4434152d91f00ab69528d1c54201", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3NDUxOA==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r392974518", "bodyText": "@cescoffier thanks for the review.\n\nSame comments:\n\nhow to handle when there are several Pools\n\n\nIn the meantime multiple reactive datasources are not handled, once added we will for sure need to handle them the same way we have handled them for the Agroal connection healthcheck.\n\n\nyou need to be sure to not block the IO Thread.\n\n\nOkay,  are there constructs (a bean that I can inject ) that I can use to check if in IO Thread?\nAnd if in IO Thread case, what should be done?", "author": "machi1990", "createdAt": "2020-03-16T12:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk5ODU0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r392998546", "bodyText": "I think this will always be in the IO thread\nIs this still a problem even if we  mark the Health handler as blocking though? https://github.com/quarkusio/quarkus/blob/1.3.0.Final/extensions/smallrye-health/deployment/src/main/java/io/quarkus/smallrye/health/deployment/SmallRyeHealthProcessor.java#L106", "author": "jmartisk", "createdAt": "2020-03-16T12:47:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwMTA1OA==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r393001058", "bodyText": "If it's a problem then I suppose we would need a change to run the health checks (probably all, not just this one) in a different thread pool (which one?)", "author": "jmartisk", "createdAt": "2020-03-16T12:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMxNTMwNw==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r393315307", "bodyText": "I think this will always be in the IO thread\nIs this still a problem even if we mark the Health handler as blocking though? https://github.com/quarkusio/quarkus/blob/1.3.0.Final/extensions/smallrye-health/deployment/src/main/java/io/quarkus/smallrye/health/deployment/SmallRyeHealthProcessor.java#L106\n\nThanks @jmartisk for the clarifications and pointers.\n\nIf it's a problem then I suppose we would need a change to run the health checks (probably all, not just this one) in a different thread pool (which one?)\n\nYes, I think so too. @cescoffier WDYT? Preferably we should do it in another followup PR. I can take it if given enough inputs.", "author": "machi1990", "createdAt": "2020-03-16T21:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA2ODU0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r397068541", "bodyText": "+1 for moving this to another PR", "author": "jmartisk", "createdAt": "2020-03-24T11:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA3NDMyMA==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r397074320", "bodyText": "@cescoffier ping", "author": "machi1990", "createdAt": "2020-03-24T11:14:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwMzE2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r397103166", "bodyText": "yes, it's a blocking route. Still, a blocking route should not be blocked indefinitely.\nI would recommend adding a timeout (10 seconds) because we may not answer at all. The client (Kubernetes) would get an HTTP timeout, but we would consume and waste one of the threads of the worker thread pool.", "author": "cescoffier", "createdAt": "2020-03-24T12:07:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyNjcwNw==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r397126707", "bodyText": "Where should we ideally process it though? Does the health extension need to maintain its own thread pool or is there a common thread pool that would be appropriate to use?", "author": "jmartisk", "createdAt": "2020-03-24T12:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMzNjkxNg==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r397336916", "bodyText": "@cescoffier I have added a 10s timeout.\n+1 with @jmartisk question up there. Should help with the next step.", "author": "machi1990", "createdAt": "2020-03-24T17:32:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3MDU0MA==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r410170540", "bodyText": "@cescoffier do you have sometime to have another look and see if all comments have been addressed? Thanks.", "author": "machi1990", "createdAt": "2020-04-17T11:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1MTg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9ce89c66456079143d3bbeee17c1ca7eff7aa7d3", "chunk": "diff --git a/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java b/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java\nindex c1863d99b4..df65bc86e4 100644\n--- a/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java\n+++ b/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java\n\n@@ -1,6 +1,7 @@\n package io.quarkus.reactive.pg.client.runtime.health;\n \n import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n \n import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n"}}, {"oid": "9ce89c66456079143d3bbeee17c1ca7eff7aa7d3", "url": "https://github.com/quarkusio/quarkus/commit/9ce89c66456079143d3bbeee17c1ca7eff7aa7d3", "message": "feat: add healthcheck for reactive datasources\n\nthe datasource config had a health check enabled option which was only consumed by Agroal Datasource\nand not the reactive ones. Let's use this option for reactive datasource too and send appropriate\ncheck status when database is down.", "committedDate": "2020-03-24T12:28:58Z", "type": "forcePushed"}, {"oid": "5e168564bf5a3a5d3e9dc3057462829420363705", "url": "https://github.com/quarkusio/quarkus/commit/5e168564bf5a3a5d3e9dc3057462829420363705", "message": "feat: add healthcheck for reactive datasources\n\nthe datasource config had a health check enabled option which was only consumed by Agroal Datasource\nand not the reactive ones. Let's use this option for reactive datasource too and send appropriate\ncheck status when database is down.", "committedDate": "2020-04-08T16:02:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3MzQwNw==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r410173407", "bodyText": "Does \"SELECT 1\" trigger a roundtrip with the database?\nJust want to be sure.", "author": "cescoffier", "createdAt": "2020-04-17T11:54:28Z", "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.reactive.pg.client.runtime.health;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.health.HealthCheck;\n+import org.eclipse.microprofile.health.HealthCheckResponse;\n+import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n+import org.eclipse.microprofile.health.Readiness;\n+\n+import io.quarkus.arc.Arc;\n+import io.vertx.pgclient.PgPool;\n+\n+@Readiness\n+@ApplicationScoped\n+public class ReactivePgDataSourceHealthCheck implements HealthCheck {\n+    private PgPool pgPool;\n+\n+    @PostConstruct\n+    protected void init() {\n+        pgPool = Arc.container().instance(PgPool.class).get();\n+    }\n+\n+    @Override\n+    public HealthCheckResponse call() {\n+        HealthCheckResponseBuilder builder = HealthCheckResponse.named(\"Reactive PostgreSQL connection health check\").up();\n+\n+        try {\n+            CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();\n+            pgPool.query(\"SELECT 1\", ar -> {", "originalCommit": "5e168564bf5a3a5d3e9dc3057462829420363705", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyNzk2Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7860#discussion_r418227963", "bodyText": "It should except if they do some weird magic in the driver but that would be surprising.", "author": "gsmet", "createdAt": "2020-04-30T19:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3MzQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "bce832c00681c3ec21d0bc270ddb8a3544a3ac63", "chunk": "diff --git a/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java b/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java\nindex df65bc86e4..4fae36e7a3 100644\n--- a/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java\n+++ b/extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/health/ReactivePgDataSourceHealthCheck.java\n\n@@ -30,12 +30,13 @@ public class ReactivePgDataSourceHealthCheck implements HealthCheck {\n \n         try {\n             CompletableFuture<Void> databaseConnectionAttempt = new CompletableFuture<>();\n-            pgPool.query(\"SELECT 1\", ar -> {\n-                if (ar.failed()) {\n-                    builder.down();\n-                }\n-                databaseConnectionAttempt.complete(null);\n-            });\n+            pgPool.query(\"SELECT 1\")\n+                    .execute(ar -> {\n+                        if (ar.failed()) {\n+                            builder.down();\n+                        }\n+                        databaseConnectionAttempt.complete(null);\n+                    });\n             databaseConnectionAttempt.get(10, TimeUnit.SECONDS);\n         } catch (Exception exception) {\n             builder.down();\n"}}, {"oid": "bce832c00681c3ec21d0bc270ddb8a3544a3ac63", "url": "https://github.com/quarkusio/quarkus/commit/bce832c00681c3ec21d0bc270ddb8a3544a3ac63", "message": "feat: add healthcheck for reactive datasources\n\nthe datasource config had a health check enabled option which was only consumed by Agroal Datasource\nand not the reactive ones. Let's use this option for reactive datasource too and send appropriate\ncheck status when database is down.", "committedDate": "2020-04-24T16:13:28Z", "type": "commit"}, {"oid": "bce832c00681c3ec21d0bc270ddb8a3544a3ac63", "url": "https://github.com/quarkusio/quarkus/commit/bce832c00681c3ec21d0bc270ddb8a3544a3ac63", "message": "feat: add healthcheck for reactive datasources\n\nthe datasource config had a health check enabled option which was only consumed by Agroal Datasource\nand not the reactive ones. Let's use this option for reactive datasource too and send appropriate\ncheck status when database is down.", "committedDate": "2020-04-24T16:13:28Z", "type": "forcePushed"}]}