{"pr_number": 9160, "pr_title": "Add necessary reflective classes for Jaeger", "pr_createdAt": "2020-05-07T14:17:41Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9160", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0MjE2NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9160#discussion_r421542165", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    reflectiveClasses.produce(ReflectiveClassBuildItem\n          \n          \n            \n                            .builder(\"io.jaegertracing.internal.samplers.http.SamplingStrategyResponse\")\n          \n          \n            \n                            .finalFieldsWritable(true)\n          \n          \n            \n                            .build());\n          \n          \n            \n                    reflectiveClasses.produce(ReflectiveClassBuildItem\n          \n          \n            \n                            .builder(\"io.jaegertracing.internal.samplers.http.ProbabilisticSamplingStrategy\")\n          \n          \n            \n                            .finalFieldsWritable(true)\n          \n          \n            \n                            .build());\n          \n          \n            \n                    reflectiveClasses.produce(ReflectiveClassBuildItem\n          \n          \n            \n                            .builder(\"io.jaegertracing.internal.samplers.http.SamplingStrategyResponse\", \"io.jaegertracing.internal.samplers.http.ProbabilisticSamplingStrategy\")\n          \n          \n            \n                            .finalFieldsWritable(true)\n          \n          \n            \n                            .build());", "author": "machi1990", "createdAt": "2020-05-07T14:20:26Z", "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -50,6 +51,18 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    @BuildStep\n+    public void reflectiveClasses(BuildProducer<ReflectiveClassBuildItem> reflectiveClasses) {\n+        reflectiveClasses.produce(ReflectiveClassBuildItem\n+                .builder(\"io.jaegertracing.internal.samplers.http.SamplingStrategyResponse\")\n+                .finalFieldsWritable(true)\n+                .build());\n+        reflectiveClasses.produce(ReflectiveClassBuildItem\n+                .builder(\"io.jaegertracing.internal.samplers.http.ProbabilisticSamplingStrategy\")\n+                .finalFieldsWritable(true)\n+                .build());", "originalCommit": "fe9c7bf85e3fe7e75c2ee04c539a795b10d541c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "05b50415da3b6e383cfd74f69673f28e1faa1e02", "chunk": "diff --git a/extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java b/extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java\nindex 07f780e3da..ddb853661a 100644\n--- a/extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java\n+++ b/extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java\n\n@@ -54,11 +54,8 @@ public class JaegerProcessor {\n     @BuildStep\n     public void reflectiveClasses(BuildProducer<ReflectiveClassBuildItem> reflectiveClasses) {\n         reflectiveClasses.produce(ReflectiveClassBuildItem\n-                .builder(\"io.jaegertracing.internal.samplers.http.SamplingStrategyResponse\")\n-                .finalFieldsWritable(true)\n-                .build());\n-        reflectiveClasses.produce(ReflectiveClassBuildItem\n-                .builder(\"io.jaegertracing.internal.samplers.http.ProbabilisticSamplingStrategy\")\n+                .builder(\"io.jaegertracing.internal.samplers.http.SamplingStrategyResponse\",\n+                        \"io.jaegertracing.internal.samplers.http.ProbabilisticSamplingStrategy\")\n                 .finalFieldsWritable(true)\n                 .build());\n     }\n"}}, {"oid": "05b50415da3b6e383cfd74f69673f28e1faa1e02", "url": "https://github.com/quarkusio/quarkus/commit/05b50415da3b6e383cfd74f69673f28e1faa1e02", "message": "Add necessary reflective classes for Jaeger", "committedDate": "2020-05-11T12:37:21Z", "type": "commit"}, {"oid": "05b50415da3b6e383cfd74f69673f28e1faa1e02", "url": "https://github.com/quarkusio/quarkus/commit/05b50415da3b6e383cfd74f69673f28e1faa1e02", "message": "Add necessary reflective classes for Jaeger", "committedDate": "2020-05-11T12:37:21Z", "type": "forcePushed"}]}