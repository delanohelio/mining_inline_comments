{"pr_number": 11796, "pr_title": "Define a deterministic ordering for ConfigMap and Secret ConfigSources", "pr_createdAt": "2020-09-01T20:38:23Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11796", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgzOTY2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11796#discussion_r481839669", "bodyText": "Haha, I was thinking about this too :-) I think you're right here.", "author": "Ladicek", "createdAt": "2020-09-02T07:39:21Z", "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/AbstractKubernetesConfigSourceUtil.java", "diffHunk": "@@ -79,6 +81,17 @@ abstract ConfigSource createPropertiesConfigSource(String kubernetesConfigSource\n         return result;\n     }\n \n+    private int getOrdinal(int ordinalOffset) {\n+        final OrdinalData ordinalData = ordinalData();\n+        /*\n+         * We don't want a large list of sources to cause an \"overflow\" into an Ordinal of another ConfigSource\n+         * so we just let the last ones all use the max ordinal\n+         * this is not fool proof, but it's very unlikely that an application will need to define\n+         * a list with 10+ sources...", "originalCommit": "2a89cf0545a0a014261db8805a5491df859bb8ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MDI4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11796#discussion_r481840281", "bodyText": "Glad to hear it :)", "author": "geoand", "createdAt": "2020-09-02T07:40:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgzOTY2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MDMxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11796#discussion_r481840311", "bodyText": "last -> list", "author": "Ladicek", "createdAt": "2020-09-02T07:40:09Z", "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java", "diffHunk": "@@ -23,14 +23,20 @@\n     public boolean failOnMissingConfig;\n \n     /**\n-     * ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for\n+     * ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for.\n+     * ConfigMaps defined later in this last have a higher priority that ConfigMaps defined earlier", "originalCommit": "2a89cf0545a0a014261db8805a5491df859bb8ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2be637fbb5a9d92e97f36292a3d4d708de114a32", "chunk": "diff --git a/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java b/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java\nindex b493caaac6..6941174c61 100644\n--- a/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java\n+++ b/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java\n\n@@ -24,7 +24,7 @@ public class KubernetesConfigSourceConfig {\n \n     /**\n      * ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for.\n-     * ConfigMaps defined later in this last have a higher priority that ConfigMaps defined earlier\n+     * ConfigMaps defined later in this list have a higher priority that ConfigMaps defined earlier\n      * in this list.\n      * Furthermore any Secrets defined in {@code secrets}, will have higher priorities than all ConfigMaps.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MDM2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11796#discussion_r481840362", "bodyText": "last -> list", "author": "Ladicek", "createdAt": "2020-09-02T07:40:12Z", "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java", "diffHunk": "@@ -23,14 +23,20 @@\n     public boolean failOnMissingConfig;\n \n     /**\n-     * ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for\n+     * ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for.\n+     * ConfigMaps defined later in this last have a higher priority that ConfigMaps defined earlier\n+     * in this list.\n+     * Furthermore any Secrets defined in {@code secrets}, will have higher priorities than all ConfigMaps.\n      */\n     @ConfigItem\n     public Optional<List<String>> configMaps;\n \n     /**\n      * Secrets to look for in the namespace that the Kubernetes Client has been configured for.\n      * If you use this, you probably want to enable {@code quarkus.kubernetes-config.secrets.enabled}.\n+     * Secrets defined later in this last have a higher priority that ConfigMaps defined earlier", "originalCommit": "2a89cf0545a0a014261db8805a5491df859bb8ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2be637fbb5a9d92e97f36292a3d4d708de114a32", "chunk": "diff --git a/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java b/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java\nindex b493caaac6..6941174c61 100644\n--- a/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java\n+++ b/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesConfigSourceConfig.java\n\n@@ -24,7 +24,7 @@ public class KubernetesConfigSourceConfig {\n \n     /**\n      * ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for.\n-     * ConfigMaps defined later in this last have a higher priority that ConfigMaps defined earlier\n+     * ConfigMaps defined later in this list have a higher priority that ConfigMaps defined earlier\n      * in this list.\n      * Furthermore any Secrets defined in {@code secrets}, will have higher priorities than all ConfigMaps.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MTMyMw==", "url": "https://github.com/quarkusio/quarkus/pull/11796#discussion_r481841323", "bodyText": "I'd make this an enum, but that's just me.", "author": "Ladicek", "createdAt": "2020-09-02T07:41:19Z", "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/OrdinalData.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.kubernetes.client.runtime;\n+\n+final class OrdinalData {", "originalCommit": "2a89cf0545a0a014261db8805a5491df859bb8ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1ODU2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11796#discussion_r481858562", "bodyText": "Good point, I'll fix it", "author": "geoand", "createdAt": "2020-09-02T08:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0MTMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "2be637fbb5a9d92e97f36292a3d4d708de114a32", "chunk": "diff --git a/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/OrdinalData.java b/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/OrdinalData.java\nindex 93c2751759..3138733919 100644\n--- a/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/OrdinalData.java\n+++ b/extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/OrdinalData.java\n\n@@ -1,13 +1,13 @@\n package io.quarkus.kubernetes.client.runtime;\n \n-final class OrdinalData {\n+enum OrdinalData {\n \n-    static final OrdinalData CONFIG_MAP = new OrdinalData(\n+    CONFIG_MAP(\n             270, // this is higher than the file system or jar ordinals, but lower than env vars\n             284 // this is one less than the ordinal of Secret\n-    );\n+    ),\n \n-    static final OrdinalData SECRET = new OrdinalData(\n+    SECRET(\n             285, // this is one less than the ordinal of ConfigMap\n             299 // this is one less than env vars\n     );\n"}}, {"oid": "2be637fbb5a9d92e97f36292a3d4d708de114a32", "url": "https://github.com/quarkusio/quarkus/commit/2be637fbb5a9d92e97f36292a3d4d708de114a32", "message": "Define a deterministic ordering for ConfigMap and Secret ConfigSources", "committedDate": "2020-09-02T08:08:08Z", "type": "commit"}, {"oid": "2be637fbb5a9d92e97f36292a3d4d708de114a32", "url": "https://github.com/quarkusio/quarkus/commit/2be637fbb5a9d92e97f36292a3d4d708de114a32", "message": "Define a deterministic ordering for ConfigMap and Secret ConfigSources", "committedDate": "2020-09-02T08:08:08Z", "type": "forcePushed"}]}