{"pr_number": 13843, "pr_title": "Register Liquibase Precondition services", "pr_createdAt": "2020-12-11T16:28:31Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13843", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541090175", "bodyText": "Maybe it makes sense to only have Precondition do this and keep the others like they are?", "author": "geoand", "createdAt": "2020-12-11T16:58:35Z", "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java", "diffHunk": "@@ -169,7 +170,7 @@ private void addService(BuildProducer<ServiceProviderBuildItem> services,\n                     service);\n             services.produce(new ServiceProviderBuildItem(serviceClass.getName(), implementations.toArray(new String[0])));\n \n-            reflective.produce(new ReflectiveClassBuildItem(true, true, false, implementations.toArray(new String[0])));\n+            reflective.produce(new ReflectiveClassBuildItem(true, true, true, implementations.toArray(new String[0])));", "originalCommit": "7ab2e42af2062e5444dee956585dd0ca9561e16b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzMjA5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541132096", "bodyText": "We can do that. I thought so too but I think the reason I went with this implementation is that the others do not have fields that are set reflectively.", "author": "machi1990", "createdAt": "2020-12-11T18:07:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzMjI2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541132267", "bodyText": "We can make it explicit and it won't be a harm.", "author": "machi1990", "createdAt": "2020-12-11T18:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MTAzOA==", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541141038", "bodyText": "Done", "author": "machi1990", "createdAt": "2020-12-11T18:23:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b5919d7c262d88e8e9a8dc35d9964136b0c97f5f", "chunk": "diff --git a/extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java b/extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java\nindex 791c386dbc..e71b98b060 100644\n--- a/extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java\n+++ b/extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java\n\n@@ -170,7 +168,7 @@ class LiquibaseProcessor {\n                     service);\n             services.produce(new ServiceProviderBuildItem(serviceClass.getName(), implementations.toArray(new String[0])));\n \n-            reflective.produce(new ReflectiveClassBuildItem(true, true, true, implementations.toArray(new String[0])));\n+            reflective.produce(new ReflectiveClassBuildItem(true, true, false, implementations.toArray(new String[0])));\n         } catch (IOException ex) {\n             throw new IllegalStateException(ex);\n         }\n"}}, {"oid": "b5919d7c262d88e8e9a8dc35d9964136b0c97f5f", "url": "https://github.com/quarkusio/quarkus/commit/b5919d7c262d88e8e9a8dc35d9964136b0c97f5f", "message": "refactor(liquibase): remove unused import", "committedDate": "2020-12-11T18:17:20Z", "type": "commit"}, {"oid": "25c925bf32d89f34c9708521337e0626ee1f42da", "url": "https://github.com/quarkusio/quarkus/commit/25c925bf32d89f34c9708521337e0626ee1f42da", "message": "fix(liquibase): register Precondition services\n\nFixes https://github.com/quarkusio/quarkus/issues/13839", "committedDate": "2020-12-11T18:18:42Z", "type": "forcePushed"}, {"oid": "b2f80ed7d3e1ae1441eff6024f31cca386dcd01b", "url": "https://github.com/quarkusio/quarkus/commit/b2f80ed7d3e1ae1441eff6024f31cca386dcd01b", "message": "fix(liquibase): register Precondition services\n\nFixes https://github.com/quarkusio/quarkus/issues/13839", "committedDate": "2020-12-11T20:20:13Z", "type": "commit"}, {"oid": "b2f80ed7d3e1ae1441eff6024f31cca386dcd01b", "url": "https://github.com/quarkusio/quarkus/commit/b2f80ed7d3e1ae1441eff6024f31cca386dcd01b", "message": "fix(liquibase): register Precondition services\n\nFixes https://github.com/quarkusio/quarkus/issues/13839", "committedDate": "2020-12-11T20:20:13Z", "type": "forcePushed"}]}