{"pr_number": 12555, "pr_title": "Create default OIDC TokenStateManager", "pr_createdAt": "2020-10-06T17:12:15Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12555", "timeline": [{"oid": "551be881f58e2f19e21dd0924d36b49408207bc9", "url": "https://github.com/quarkusio/quarkus/commit/551be881f58e2f19e21dd0924d36b49408207bc9", "message": "Create default OIDC SessionManager", "committedDate": "2020-10-06T17:26:33Z", "type": "forcePushed"}, {"oid": "2e615675089e7896ef105272792f47f249e37b90", "url": "https://github.com/quarkusio/quarkus/commit/2e615675089e7896ef105272792f47f249e37b90", "message": "Create default OIDC SessionManager", "committedDate": "2020-10-06T17:30:23Z", "type": "forcePushed"}, {"oid": "0dde0c06be643a481f048d9b712c76b207784749", "url": "https://github.com/quarkusio/quarkus/commit/0dde0c06be643a481f048d9b712c76b207784749", "message": "Create default OIDC SessionManager", "committedDate": "2020-10-06T17:32:37Z", "type": "forcePushed"}, {"oid": "7336fbfbc73e3a0aa70fd6dc64a59c9f042125cd", "url": "https://github.com/quarkusio/quarkus/commit/7336fbfbc73e3a0aa70fd6dc64a59c9f042125cd", "message": "Create default OIDC SessionManager", "committedDate": "2020-10-06T21:39:54Z", "type": "forcePushed"}, {"oid": "b6a1a74085de89a210c99e1ece2930e982c74c31", "url": "https://github.com/quarkusio/quarkus/commit/b6a1a74085de89a210c99e1ece2930e982c74c31", "message": "Create default OIDC SessionManager", "committedDate": "2020-10-07T12:21:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NTE0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501645146", "bodyText": "Maybe rename this to CookieManager ?", "author": "pedroigor", "createdAt": "2020-10-08T11:25:44Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java", "diffHunk": "@@ -229,6 +235,45 @@ public void setPostLogoutPath(Optional<String> postLogoutPath) {\n         }\n     }\n \n+    /**\n+     * Default session manager configuration\n+     */\n+    @ConfigGroup\n+    public static class SessionManager {", "originalCommit": "b6a1a74085de89a210c99e1ece2930e982c74c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3MzE2Mg==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501773162", "bodyText": "@pedroigor I'd prefer not to, please see the comment below", "author": "sberyozkin", "createdAt": "2020-10-08T14:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NTE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b4bf3ed874012acb2464f3cdc7b860701a3f2ce4", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java\nindex f8302e1391..90e8d1373e 100644\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java\n+++ b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java\n\n@@ -236,20 +236,31 @@ public class OidcTenantConfig {\n     }\n \n     /**\n-     * Default session manager configuration\n+     * Default Authorization Code token state manager configuration\n      */\n     @ConfigGroup\n-    public static class SessionManager {\n+    public static class TokenStateManager {\n+\n+        public enum Strategy {\n+            /**\n+             * Keep ID, access and refresh tokens.\n+             */\n+            KEEP_ALL_TOKENS,\n+\n+            /**\n+             * Keep ID token only\n+             */\n+            ID_TOKEN_ONLY\n+        }\n \n         /**\n-         * Default SessionManager will only keep ID token out of three tokens (ID, access and refresh)\n-         * returned in the authorization code grant response if this property is enabled.\n+         * Default TokenStateManager strategy.\n          */\n-        @ConfigItem(defaultValue = \"false\")\n-        public boolean keepIdTokenOnly;\n+        @ConfigItem(defaultValue = \"keep_all_tokens\")\n+        public Strategy strategy;\n \n         /**\n-         * Default SessionManager keeps all three tokens (ID, access and refresh)\n+         * Default TokenStateManager keeps all tokens (ID, access and refresh)\n          * returned in the authorization code grant response in a single session cookie by default.\n          * \n          * Enable this property to minimize a session cookie size\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0ODU3OA==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501648578", "bodyText": "Maybe an enum such as CookieStrategy which SINGLE, SPLIT, IDTOKEN, ACCESSTOKEN, REFRESHTOKEN.\nWhere people could choose what type of token should be included in the token. For instance, ACCESSTOKEN might be useful if the application wants to relay the token to other services while still tracking session lifetime by either a local introspection or a call to the introspection endpoint.", "author": "pedroigor", "createdAt": "2020-10-08T11:31:58Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java", "diffHunk": "@@ -229,6 +235,45 @@ public void setPostLogoutPath(Optional<String> postLogoutPath) {\n         }\n     }\n \n+    /**\n+     * Default session manager configuration\n+     */\n+    @ConfigGroup\n+    public static class SessionManager {\n+\n+        /**\n+         * Default SessionManager will only keep ID token out of three tokens (ID, access and refresh)\n+         * returned in the authorization code grant response if this property is enabled.\n+         */\n+        @ConfigItem(defaultValue = \"false\")\n+        public boolean keepIdTokenOnly;", "originalCommit": "b6a1a74085de89a210c99e1ece2930e982c74c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4MjIyMQ==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501782221", "bodyText": "@pedroigor I'm really not sure about SINGLE, SPLIT, IDTOKEN, ACCESSTOKEN, REFRESHTOKEN. One thing that we always need to keep is the ID token. AT and RT are optional. ID token is what represents the user authentication so we can't ever drop it.\nWhat would ACCESSTOKEN mean - keep ID token and ACCESSTOKEN ? You said the local introspection but this is not ID token, they are not really the same thing... We've also had the user issues to do with the binary access tokens not remotely introspectable due to Azure, Google, etc not having an introspection endpoint - you may recall the users started saying their Quarkus apps stopped working after I updated OIDC to verify the code flow AT tokens by default :-)\nHow about this though, I will introduce the enum instead but keep ID token only there - this way we will be able to add more options like ID and access token (combined), etc...\nsplitTokens should still remain a boolean though I think - as it will work with 1 or more tokens combined", "author": "sberyozkin", "createdAt": "2020-10-08T14:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0ODU3OA=="}], "type": "inlineReview", "revised_code": {"commit": "b4bf3ed874012acb2464f3cdc7b860701a3f2ce4", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java\nindex f8302e1391..90e8d1373e 100644\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java\n+++ b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java\n\n@@ -236,20 +236,31 @@ public class OidcTenantConfig {\n     }\n \n     /**\n-     * Default session manager configuration\n+     * Default Authorization Code token state manager configuration\n      */\n     @ConfigGroup\n-    public static class SessionManager {\n+    public static class TokenStateManager {\n+\n+        public enum Strategy {\n+            /**\n+             * Keep ID, access and refresh tokens.\n+             */\n+            KEEP_ALL_TOKENS,\n+\n+            /**\n+             * Keep ID token only\n+             */\n+            ID_TOKEN_ONLY\n+        }\n \n         /**\n-         * Default SessionManager will only keep ID token out of three tokens (ID, access and refresh)\n-         * returned in the authorization code grant response if this property is enabled.\n+         * Default TokenStateManager strategy.\n          */\n-        @ConfigItem(defaultValue = \"false\")\n-        public boolean keepIdTokenOnly;\n+        @ConfigItem(defaultValue = \"keep_all_tokens\")\n+        public Strategy strategy;\n \n         /**\n-         * Default SessionManager keeps all three tokens (ID, access and refresh)\n+         * Default TokenStateManager keeps all tokens (ID, access and refresh)\n          * returned in the authorization code grant response in a single session cookie by default.\n          * \n          * Enable this property to minimize a session cookie size\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0OTMxNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501649315", "bodyText": "Perhaps SessionState ?", "author": "pedroigor", "createdAt": "2020-10-08T11:33:18Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionContent.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.quarkus.oidc;\n+\n+/**\n+ * Authorization Code Flow Session content\n+ */\n+public class SessionContent {", "originalCommit": "b6a1a74085de89a210c99e1ece2930e982c74c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwNTY3MA==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501805670", "bodyText": "Hi Pedro @pedroigor So, as said below, the idea is that the session manager returns a state which encapsulates somehow the tokens, the default one returns them concatenated by default, but the DB one will return a reference to them etc.\nPerhaps instead of SessionContent we should simply have AuthorizationCodeTokens ? SessionManager is translating AuthorizationCodeTokens into a session state.", "author": "sberyozkin", "createdAt": "2020-10-08T15:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0OTMxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b4bf3ed874012acb2464f3cdc7b860701a3f2ce4", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionContent.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/AuthorizationCodeTokens.java\nsimilarity index 78%\nrename from extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionContent.java\nrename to extensions/oidc/runtime/src/main/java/io/quarkus/oidc/AuthorizationCodeTokens.java\nindex 2cc04f47ab..f9e2a1b5d2 100644\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionContent.java\n+++ b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/AuthorizationCodeTokens.java\n\n@@ -1,18 +1,18 @@\n package io.quarkus.oidc;\n \n /**\n- * Authorization Code Flow Session content\n+ * Authorization Code Flow Session State\n  */\n-public class SessionContent {\n+public class AuthorizationCodeTokens {\n \n     private String idToken;\n     private String accessToken;\n     private String refreshToken;\n \n-    public SessionContent() {\n+    public AuthorizationCodeTokens() {\n     }\n \n-    public SessionContent(String idToken, String accessToken, String refreshToken) {\n+    public AuthorizationCodeTokens(String idToken, String accessToken, String refreshToken) {\n         this.setIdToken(idToken);\n         this.setAccessToken(accessToken);\n         this.setRefreshToken(refreshToken);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTgwMg==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501651802", "bodyText": "Perhaps SessionManager should be solely responsible for managing cookies and this method just returns void. My point is that we remove any session cookie related code from the mechanism and move here.\nI would then just rename these methods to create, get and delete.", "author": "pedroigor", "createdAt": "2020-10-08T11:38:09Z", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionManager.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.oidc;\n+\n+import io.vertx.ext.web.RoutingContext;\n+\n+/**\n+ * Authorization Code Flow Session Manager\n+ */\n+public interface SessionManager {\n+\n+    String createSessionState(RoutingContext routingContext, OidcTenantConfig oidcConfig, SessionContent sessionContent);", "originalCommit": "b6a1a74085de89a210c99e1ece2930e982c74c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxMDMxMw==", "url": "https://github.com/quarkusio/quarkus/pull/12555#discussion_r501810313", "bodyText": "@pedroigor As I've tried to justify, it is actually a SessionManager :-)", "author": "sberyozkin", "createdAt": "2020-10-08T15:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY1MTgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "b4bf3ed874012acb2464f3cdc7b860701a3f2ce4", "chunk": "diff --git a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionManager.java b/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionManager.java\ndeleted file mode 100644\nindex 25c010f41f..0000000000\n--- a/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/SessionManager.java\n+++ /dev/null\n\n@@ -1,15 +0,0 @@\n-package io.quarkus.oidc;\n-\n-import io.vertx.ext.web.RoutingContext;\n-\n-/**\n- * Authorization Code Flow Session Manager\n- */\n-public interface SessionManager {\n-\n-    String createSessionState(RoutingContext routingContext, OidcTenantConfig oidcConfig, SessionContent sessionContent);\n-\n-    SessionContent getSessionContent(RoutingContext routingContext, OidcTenantConfig oidcConfig, String sessionState);\n-\n-    void deleteSessionContent(RoutingContext routingContext, OidcTenantConfig oidcConfig, String sessionState);\n-}\n"}}, {"oid": "b4bf3ed874012acb2464f3cdc7b860701a3f2ce4", "url": "https://github.com/quarkusio/quarkus/commit/b4bf3ed874012acb2464f3cdc7b860701a3f2ce4", "message": "Create default OIDC TokenStateManager", "committedDate": "2020-10-12T10:56:32Z", "type": "forcePushed"}, {"oid": "187f0f6b9b7f8415b48ca0f418360e475df66ca1", "url": "https://github.com/quarkusio/quarkus/commit/187f0f6b9b7f8415b48ca0f418360e475df66ca1", "message": "Create default OIDC TokenStateManager", "committedDate": "2020-10-13T09:36:59Z", "type": "commit"}, {"oid": "187f0f6b9b7f8415b48ca0f418360e475df66ca1", "url": "https://github.com/quarkusio/quarkus/commit/187f0f6b9b7f8415b48ca0f418360e475df66ca1", "message": "Create default OIDC TokenStateManager", "committedDate": "2020-10-13T09:36:59Z", "type": "forcePushed"}]}