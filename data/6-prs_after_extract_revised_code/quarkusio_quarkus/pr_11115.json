{"pr_number": 11115, "pr_title": "Export Neo4j driver as dedicated BuildItem.", "pr_createdAt": "2020-07-31T07:35:11Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11115", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r463674882", "bodyText": "I don't think that will work, you need to use a RuntimeValue<Driver>. We have plenty of examples if you look for RuntimeValue in the code.", "author": "gsmet", "createdAt": "2020-07-31T15:21:51Z", "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "diffHunk": "@@ -33,11 +35,13 @@ AdditionalBeanBuildItem createDriverProducer() {\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    void configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n+    Neo4jDriverBuildItem configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), configuration, shutdownContext);\n+        Driver driver = recorder.initializeDriver(configuration, shutdownContext);", "originalCommit": "6726974f8b5fc11d458d52c2e16c470cfabf5ddd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NDg1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r463694853", "bodyText": "Yes, this is absolutely correct. It might work even without it, but there is no point in risking it and not using RuntimeValue", "author": "geoand", "createdAt": "2020-07-31T15:58:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwODAyOQ==", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r465708029", "bodyText": "Just to clarify why this worked without RuntimeValue: It worked because Driver is an interface and as such the bytecode recorder knew to just create a proxy for it.\nIf however the class was not an interface, the whole endeavor would have failed \ud83d\ude09", "author": "geoand", "createdAt": "2020-08-05T12:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwODkxNA==", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r465708914", "bodyText": "Thanks for getting back with this info. Might come in handy some time to know this!", "author": "michael-simons", "createdAt": "2020-08-05T13:00:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwOTQ3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r465709472", "bodyText": "You are welcome!", "author": "geoand", "createdAt": "2020-08-05T13:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a2c95c29fbb6d7e51f680c69a39c000b4e358324", "chunk": "diff --git a/extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java b/extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java\nindex 7c4750af44..808a32ae21 100644\n--- a/extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java\n+++ b/extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java\n\n@@ -39,9 +40,9 @@ class Neo4jDriverProcessor {\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        Driver driver = recorder.initializeDriver(configuration, shutdownContext);\n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), driver);\n-        return new Neo4jDriverBuildItem(driver);\n+        RuntimeValue<Driver> driverHolder = recorder.initializeDriver(configuration, shutdownContext);\n+        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), driverHolder);\n+        return new Neo4jDriverBuildItem(driverHolder);\n     }\n \n     @BuildStep\n"}}, {"oid": "a2c95c29fbb6d7e51f680c69a39c000b4e358324", "url": "https://github.com/quarkusio/quarkus/commit/a2c95c29fbb6d7e51f680c69a39c000b4e358324", "message": "Export Neo4j driver as dedicated BuildItem.\n\nThis change allows other extensions to retrieve the driver during their deployment process and use it as dependency. The driver is wrapped as  RuntimeValue<Driver> so that it can be safely passed between different runtime steps.", "committedDate": "2020-08-03T09:44:38Z", "type": "commit"}, {"oid": "a2c95c29fbb6d7e51f680c69a39c000b4e358324", "url": "https://github.com/quarkusio/quarkus/commit/a2c95c29fbb6d7e51f680c69a39c000b4e358324", "message": "Export Neo4j driver as dedicated BuildItem.\n\nThis change allows other extensions to retrieve the driver during their deployment process and use it as dependency. The driver is wrapped as  RuntimeValue<Driver> so that it can be safely passed between different runtime steps.", "committedDate": "2020-08-03T09:44:38Z", "type": "forcePushed"}]}