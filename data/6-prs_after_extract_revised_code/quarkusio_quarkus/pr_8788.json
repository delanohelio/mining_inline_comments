{"pr_number": 8788, "pr_title": "Fix case where MongoDB and MariaDB extensions fail in native", "pr_createdAt": "2020-04-23T12:26:01Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8788", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413816733", "bodyText": "Since this substitution targets a class which isn't MongoDB specific, does it belong here?\nMy concern is that if such subtitutions are kept within an extension, then they will eventually conflict with other extensions.\nI guess it could be acceptable as a temporary solution, if there's an issue tracking a further improvement.", "author": "Sanne", "createdAt": "2020-04-23T13:57:18Z", "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java", "diffHunk": "@@ -173,3 +173,13 @@ public String resolveAdditionalQueryParametersFromTxtRecords(final String host)\n         throw new UnsupportedOperationException(\"mongo+srv:// not supported in native mode\");\n     }\n }\n+\n+@TargetClass(com.sun.jna.Native.class)\n+final class JnaNativeSubstitutions {", "originalCommit": "84e6e4bd92721adf0a208a880f06705b64aa5ac4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNDQxMA==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413824410", "bodyText": "Yeah, the ideal situation would be to have a jna extension that does these substitutions just like we have with Netty.\nThat's probably a good thing to follow up with - an easy thing for someone to contribute as their first contribution.", "author": "geoand", "createdAt": "2020-04-23T14:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzMTM2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413831366", "bodyText": "We usually put that ones in core considering they are targetting JDK classes.", "author": "gsmet", "createdAt": "2020-04-23T14:13:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzNDU1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413834553", "bodyText": "This isn't a JDK class however. It's coming from this dependency: \n  \n    \n      quarkus/bom/runtime/pom.xml\n    \n    \n         Line 1786\n      in\n      6a612a8\n    \n    \n    \n    \n\n        \n          \n           <groupId>net.java.dev.jna</groupId>", "author": "geoand", "createdAt": "2020-04-23T14:17:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw=="}], "type": "inlineReview", "revised_code": {"commit": "490f29ece2a49e7bf9d4412688962db9a9e23bd2", "chunk": "diff --git a/extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java b/extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java\nindex efdbe95814..d6b024599a 100644\n--- a/extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java\n+++ b/extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java\n\n@@ -174,6 +174,7 @@ final class DefaultDnsResolverSubstitution {\n     }\n }\n \n+//TODO: move to a dedicated jna extension that will simply collect JNA substitutions\n @TargetClass(com.sun.jna.Native.class)\n final class JnaNativeSubstitutions {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzY0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413817647", "bodyText": "should this perhaps log a warning or throw an exception if a MariaDB feature is being disabled?\nWe shouldn't silentily ignore configuration.", "author": "Sanne", "createdAt": "2020-04-23T13:58:26Z", "path": "extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.jdbc.mariadb.runtime.graal;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import org.mariadb.jdbc.internal.io.socket.SocketHandlerFunction;\n+import org.mariadb.jdbc.internal.util.Utils;\n+import org.mariadb.jdbc.util.Options;\n+\n+public class SimpleSocketHandlerFunction implements SocketHandlerFunction {\n+    @Override\n+    public Socket apply(Options options, String host) throws IOException {\n+        return Utils.standardSocket(options, host);", "originalCommit": "84e6e4bd92721adf0a208a880f06705b64aa5ac4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNTQ2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413825466", "bodyText": "Good idea yeah! Throwing an exception I think it the proper way to go. WDYT?", "author": "geoand", "createdAt": "2020-04-23T14:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzY0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg2MTY0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413861645", "bodyText": "Updated", "author": "geoand", "createdAt": "2020-04-23T14:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzY0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "490f29ece2a49e7bf9d4412688962db9a9e23bd2", "chunk": "diff --git a/extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java b/extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java\nindex ba7a4c3d57..02c0136984 100644\n--- a/extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java\n+++ b/extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java\n\n@@ -10,6 +10,18 @@ import org.mariadb.jdbc.util.Options;\n public class SimpleSocketHandlerFunction implements SocketHandlerFunction {\n     @Override\n     public Socket apply(Options options, String host) throws IOException {\n+        if (options.pipe != null) {\n+            throw new IllegalArgumentException(getErrorMessage(\"pipe\"));\n+        } else if (options.localSocket != null) {\n+            throw new IllegalArgumentException(getErrorMessage(\"localSocket\"));\n+        } else if (options.sharedMemory != null) {\n+            throw new IllegalArgumentException(getErrorMessage(\"sharedMemory\"));\n+        }\n+\n         return Utils.standardSocket(options, host);\n     }\n+\n+    private String getErrorMessage(String option) {\n+        return \"Option '\" + option + \"' is not available for MariaDB in native mode\";\n+    }\n }\n"}}, {"oid": "490f29ece2a49e7bf9d4412688962db9a9e23bd2", "url": "https://github.com/quarkusio/quarkus/commit/490f29ece2a49e7bf9d4412688962db9a9e23bd2", "message": "Ensure that MariaDB never uses JNA", "committedDate": "2020-04-23T14:44:28Z", "type": "forcePushed"}, {"oid": "06bd301fb86c6880a133b84ec30efc07471c6afa", "url": "https://github.com/quarkusio/quarkus/commit/06bd301fb86c6880a133b84ec30efc07471c6afa", "message": "Add substitution that ensures Classloader#library is never used in native\n\nFixes: #8785", "committedDate": "2020-04-23T16:34:41Z", "type": "commit"}, {"oid": "aa89e92054784d38ec9bf70285188a6bacad0076", "url": "https://github.com/quarkusio/quarkus/commit/aa89e92054784d38ec9bf70285188a6bacad0076", "message": "Ensure that MariaDB never uses JNA", "committedDate": "2020-04-23T16:34:41Z", "type": "commit"}, {"oid": "aa89e92054784d38ec9bf70285188a6bacad0076", "url": "https://github.com/quarkusio/quarkus/commit/aa89e92054784d38ec9bf70285188a6bacad0076", "message": "Ensure that MariaDB never uses JNA", "committedDate": "2020-04-23T16:34:41Z", "type": "forcePushed"}]}