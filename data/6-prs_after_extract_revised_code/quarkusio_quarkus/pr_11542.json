{"pr_number": 11542, "pr_title": "Enable jbang integration in Quarkus", "pr_createdAt": "2020-08-23T01:26:12Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11542", "timeline": [{"oid": "2d66517db48a7843421e77d1f2daabddcfd05ee0", "url": "https://github.com/quarkusio/quarkus/commit/2d66517db48a7843421e77d1f2daabddcfd05ee0", "message": "formatting fixes and pass launch argument hints back", "committedDate": "2020-08-28T22:15:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1OTM5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11542#discussion_r479559399", "bodyText": "Avoid star imports", "author": "gastaldi", "createdAt": "2020-08-28T22:26:14Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/jbang/JBangAugmentorImpl.java", "diffHunk": "@@ -0,0 +1,156 @@\n+package io.quarkus.deployment.jbang;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.*;", "originalCommit": "8696209663be4d7e10443da4827a446380e23a2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzM3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11542#discussion_r479567371", "bodyText": "yeah, I don't use them but recently the formatter seem to make them happen.", "author": "maxandersen", "createdAt": "2020-08-28T22:59:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1OTM5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1OTgwMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11542#discussion_r479559801", "bodyText": "This snippet locks the JAR file in Windows.", "author": "gastaldi", "createdAt": "2020-08-28T22:27:46Z", "path": "core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java", "diffHunk": "@@ -33,7 +31,14 @@ public static void launch(String callingClass, String quarkusApplication, Consum\n             path = path.substring(0, path.length() - classResource.length());\n             URL newResource = new URL(resource.getProtocol(), resource.getHost(), resource.getPort(), path);\n \n-            Path appClasses = Paths.get(newResource.toURI());\n+            URI uri = newResource.toURI();\n+            Path appClasses;\n+            if (\"jar\".equals(uri.getScheme())) {\n+                JarURLConnection connection = (JarURLConnection) uri.toURL().openConnection();", "originalCommit": "8696209663be4d7e10443da4827a446380e23a2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2MDM0NA==", "url": "https://github.com/quarkusio/quarkus/pull/11542#discussion_r479560344", "bodyText": "Call setDefaultUseCaches(false) in the JarlUrlConnection to avoid locking the file in Windows", "author": "gastaldi", "createdAt": "2020-08-28T22:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1OTgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2ODY1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/11542#discussion_r479568655", "bodyText": "pushed.", "author": "maxandersen", "createdAt": "2020-08-28T23:05:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1OTgwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc977040b33480ba853539b3453adbbe364f196e", "chunk": "diff --git a/core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java b/core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java\nindex 778dfb6c31..e079387127 100644\n--- a/core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java\n+++ b/core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java\n\n@@ -35,6 +35,7 @@ public class QuarkusLauncher {\n             Path appClasses;\n             if (\"jar\".equals(uri.getScheme())) {\n                 JarURLConnection connection = (JarURLConnection) uri.toURL().openConnection();\n+                connection.setDefaultUseCaches(false);\n                 appClasses = Paths.get(connection.getJarFileURL().toURI());\n             } else {\n                 appClasses = Paths.get(uri);\n"}}, {"oid": "ad0988d2aba56c5c29fb4505d2ee7cfeed7648e8", "url": "https://github.com/quarkusio/quarkus/commit/ad0988d2aba56c5c29fb4505d2ee7cfeed7648e8", "message": "formatting fixes and pass launch argument hints back", "committedDate": "2020-08-28T22:28:36Z", "type": "forcePushed"}, {"oid": "bc977040b33480ba853539b3453adbbe364f196e", "url": "https://github.com/quarkusio/quarkus/commit/bc977040b33480ba853539b3453adbbe364f196e", "message": "Adding support for jbang integration\n\nDone by implementing jbang experimental\nSPI to let Quarkus participate in the build of a jar\n+ passing //Q:CONFIG in as system properties.\n\nInitial version supports building jar as well as native\nimage via docker.\n\n - various fixes for handling default packages in arc and metrics.\n - fixes a few places of class.forname not honoring TCCL\n - slightly open up appmodel to enable this but still reliant\n   on pom.xml being bundled (future versions shouldn't)", "committedDate": "2020-08-29T05:47:04Z", "type": "forcePushed"}, {"oid": "545eff5efbe34abb1961a47c0ef08662bc844872", "url": "https://github.com/quarkusio/quarkus/commit/545eff5efbe34abb1961a47c0ef08662bc844872", "message": "Adding support for jbang integration\n\nDone by implementing jbang experimental\nSPI to let Quarkus participate in the build of a jar\n+ passing //Q:CONFIG in as system properties.\n\nInitial version supports building jar as well as native\nimage via docker.\n\n - various fixes for handling default packages in arc and metrics.\n - fixes a few places of class.forname not honoring TCCL\n - slightly open up appmodel to enable this but still reliant\n   on pom.xml being bundled (future versions shouldn't)\n\nCo-Authored: Alexey Loubyansky <olubyans@redhat.com>\nCo-Authored: Stuart Douglas <stuart.w.douglas@gmail.com>", "committedDate": "2020-08-29T05:52:53Z", "type": "commit"}, {"oid": "545eff5efbe34abb1961a47c0ef08662bc844872", "url": "https://github.com/quarkusio/quarkus/commit/545eff5efbe34abb1961a47c0ef08662bc844872", "message": "Adding support for jbang integration\n\nDone by implementing jbang experimental\nSPI to let Quarkus participate in the build of a jar\n+ passing //Q:CONFIG in as system properties.\n\nInitial version supports building jar as well as native\nimage via docker.\n\n - various fixes for handling default packages in arc and metrics.\n - fixes a few places of class.forname not honoring TCCL\n - slightly open up appmodel to enable this but still reliant\n   on pom.xml being bundled (future versions shouldn't)\n\nCo-Authored: Alexey Loubyansky <olubyans@redhat.com>\nCo-Authored: Stuart Douglas <stuart.w.douglas@gmail.com>", "committedDate": "2020-08-29T05:52:53Z", "type": "forcePushed"}]}