{"pr_number": 11255, "pr_title": "Avoid including platform BOM twice in the Gradle plugin", "pr_createdAt": "2020-08-06T13:10:29Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11255", "timeline": [{"oid": "fdf085b03a97a5161a49b4dad47c095132b3bc85", "url": "https://github.com/quarkusio/quarkus/commit/fdf085b03a97a5161a49b4dad47c095132b3bc85", "message": "Avoid including platform BOM twice in the Gradle plugin\n\nFixes #11251\n\nAdd test", "committedDate": "2020-08-06T13:10:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNTUxNw==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466415517", "bodyText": "Do we really want to compare with the version?", "author": "gsmet", "createdAt": "2020-08-06T13:34:00Z", "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java", "diffHunk": "@@ -61,11 +61,30 @@ protected boolean addDependency(AppArtifactCoords coords, boolean managed) {\n     }\n \n     static boolean addDependencyInModel(Model model, AppArtifactCoords coords, boolean managed) {\n-        StringBuilder newDependency = new StringBuilder()\n-                .append(\"    implementation '\")\n-                .append(coords.getGroupId())\n-                .append(\":\")\n-                .append(coords.getArtifactId());\n+        boolean isBOM = \"pom\".equals(coords.getType());\n+        StringBuilder newDependency;\n+        if (isBOM) {\n+            // Check if BOM is not included already\n+            String resolvedPlatform = String\n+                    .format(\"%s:%s:%s\", getProperty(model, \"quarkusPlatformGroupId\"),\n+                            getProperty(model, \"quarkusPlatformArtifactId\"),\n+                            getProperty(model, \"quarkusPlatformVersion\"));\n+            String thisBOM = String.format(\"%s:%s:%s\", coords.getGroupId(), coords.getArtifactId(), coords.getVersion());", "originalCommit": "fdf085b03a97a5161a49b4dad47c095132b3bc85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxOTYwNA==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466419604", "bodyText": "The version will (or should) always be the same here", "author": "gastaldi", "createdAt": "2020-08-06T13:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNTUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMDQ0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466420446", "bodyText": "@gastaldi as @gsmet pointed out, I think we should have the same bahavior as for extensions which is to skip it if it's already there whatever the version.", "author": "ia3andy", "createdAt": "2020-08-06T13:41:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNTUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMzg0NA==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466423844", "bodyText": "@ia3andy although working with the model as a big String in the case of Gradle is a PITA, I think that might make sense, let's do that in a separate PR", "author": "gastaldi", "createdAt": "2020-08-06T13:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNTUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "9e5b108d0a58d6d4536dc5000409fabb47d47b31", "chunk": "diff --git a/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java b/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java\nindex 1701953276..097a14936b 100644\n--- a/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java\n+++ b/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java\n\n@@ -66,17 +66,16 @@ public abstract class AbstractGradleBuildFile extends BuildFile {\n         if (isBOM) {\n             // Check if BOM is not included already\n             String resolvedPlatform = String\n-                    .format(\"%s:%s:%s\", getProperty(model, \"quarkusPlatformGroupId\"),\n-                            getProperty(model, \"quarkusPlatformArtifactId\"),\n-                            getProperty(model, \"quarkusPlatformVersion\"));\n-            String thisBOM = String.format(\"%s:%s:%s\", coords.getGroupId(), coords.getArtifactId(), coords.getVersion());\n+                    .format(\"%s:%s\", getProperty(model, \"quarkusPlatformGroupId\"),\n+                            getProperty(model, \"quarkusPlatformArtifactId\"));\n+            String thisBOM = String.format(\"%s:%s\", coords.getGroupId(), coords.getArtifactId());\n             if (thisBOM.equals(resolvedPlatform)) {\n                 // BOM matches the platform, no need to do anything\n                 return false;\n             }\n             newDependency = new StringBuilder()\n                     .append(\"    implementation enforcedPlatform(\\\"\")\n-                    .append(thisBOM)\n+                    .append(thisBOM).append(\":\").append(coords.getVersion())\n                     .append(\"\\\")'\");\n         } else {\n             newDependency = new StringBuilder()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466417296", "bodyText": "It seems really weird to have the quarkus bom insertion as part of the addDependencyInModel", "author": "ia3andy", "createdAt": "2020-08-06T13:36:39Z", "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java", "diffHunk": "@@ -61,11 +61,30 @@ protected boolean addDependency(AppArtifactCoords coords, boolean managed) {\n     }\n \n     static boolean addDependencyInModel(Model model, AppArtifactCoords coords, boolean managed) {\n-        StringBuilder newDependency = new StringBuilder()\n-                .append(\"    implementation '\")\n-                .append(coords.getGroupId())\n-                .append(\":\")\n-                .append(coords.getArtifactId());\n+        boolean isBOM = \"pom\".equals(coords.getType());\n+        StringBuilder newDependency;", "originalCommit": "fdf085b03a97a5161a49b4dad47c095132b3bc85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxODQ5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466418495", "bodyText": "Why? You can have other BOMs when using the extension registry", "author": "gastaldi", "createdAt": "2020-08-06T13:38:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxOTY0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466419646", "bodyText": "aww right, I forgot about that :)", "author": "ia3andy", "createdAt": "2020-08-06T13:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMDM3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466420372", "bodyText": "The extension registry creates an ExtensionInstallPlan with the extensions and BOMs needed to work, which then it's up to the ExtensionManager to decide what needs to be added/changed/etc", "author": "gastaldi", "createdAt": "2020-08-06T13:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMzQ1MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466423451", "bodyText": "@gastaldi do you use the currently installed extensions to create that plan?", "author": "ia3andy", "createdAt": "2020-08-06T13:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyNzEwMw==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466427103", "bodyText": "No, it's up to the ExtensionManager to decide what to do with the ExtensionInstallPlan and the currently installed extensions", "author": "gastaldi", "createdAt": "2020-08-06T13:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyODM4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466428383", "bodyText": "ok ;-) I just wanted to make sure that my other comment about the version was relevant..", "author": "ia3andy", "createdAt": "2020-08-06T13:52:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNzI5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9e5b108d0a58d6d4536dc5000409fabb47d47b31", "chunk": "diff --git a/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java b/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java\nindex 1701953276..097a14936b 100644\n--- a/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java\n+++ b/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java\n\n@@ -66,17 +66,16 @@ public abstract class AbstractGradleBuildFile extends BuildFile {\n         if (isBOM) {\n             // Check if BOM is not included already\n             String resolvedPlatform = String\n-                    .format(\"%s:%s:%s\", getProperty(model, \"quarkusPlatformGroupId\"),\n-                            getProperty(model, \"quarkusPlatformArtifactId\"),\n-                            getProperty(model, \"quarkusPlatformVersion\"));\n-            String thisBOM = String.format(\"%s:%s:%s\", coords.getGroupId(), coords.getArtifactId(), coords.getVersion());\n+                    .format(\"%s:%s\", getProperty(model, \"quarkusPlatformGroupId\"),\n+                            getProperty(model, \"quarkusPlatformArtifactId\"));\n+            String thisBOM = String.format(\"%s:%s\", coords.getGroupId(), coords.getArtifactId());\n             if (thisBOM.equals(resolvedPlatform)) {\n                 // BOM matches the platform, no need to do anything\n                 return false;\n             }\n             newDependency = new StringBuilder()\n                     .append(\"    implementation enforcedPlatform(\\\"\")\n-                    .append(thisBOM)\n+                    .append(thisBOM).append(\":\").append(coords.getVersion())\n                     .append(\"\\\")'\");\n         } else {\n             newDependency = new StringBuilder()\n"}}, {"oid": "9e5b108d0a58d6d4536dc5000409fabb47d47b31", "url": "https://github.com/quarkusio/quarkus/commit/9e5b108d0a58d6d4536dc5000409fabb47d47b31", "message": "Do not check the version when comparing the BOM", "committedDate": "2020-08-06T14:16:26Z", "type": "commit"}, {"oid": "c869bc7111fdf1fb626ce6e9f684eb6a33d04fcc", "url": "https://github.com/quarkusio/quarkus/commit/c869bc7111fdf1fb626ce6e9f684eb6a33d04fcc", "message": "Fixed minor IDE warnings", "committedDate": "2020-08-06T14:18:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyODIxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11255#discussion_r466628211", "bodyText": "It's better but works on the assumption that these properties are used. In general there could be any property or direct coordinates.", "author": "aloubyansky", "createdAt": "2020-08-06T19:10:30Z", "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/buildfile/AbstractGradleBuildFile.java", "diffHunk": "@@ -61,11 +61,29 @@ protected boolean addDependency(AppArtifactCoords coords, boolean managed) {\n     }\n \n     static boolean addDependencyInModel(Model model, AppArtifactCoords coords, boolean managed) {\n-        StringBuilder newDependency = new StringBuilder()\n-                .append(\"    implementation '\")\n-                .append(coords.getGroupId())\n-                .append(\":\")\n-                .append(coords.getArtifactId());\n+        boolean isBOM = \"pom\".equals(coords.getType());\n+        StringBuilder newDependency;\n+        if (isBOM) {\n+            // Check if BOM is not included already\n+            String resolvedPlatform = String\n+                    .format(\"%s:%s\", getProperty(model, \"quarkusPlatformGroupId\"),\n+                            getProperty(model, \"quarkusPlatformArtifactId\"));", "originalCommit": "c869bc7111fdf1fb626ce6e9f684eb6a33d04fcc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}