{"pr_number": 11200, "pr_title": "A bunch of new stuff for codestarts", "pr_createdAt": "2020-08-04T15:38:06Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11200", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NTQ1NQ==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465185455", "bodyText": "If you're merging them, it would be nice to use a LinkedHashSet instead", "author": "gastaldi", "createdAt": "2020-08-04T16:41:53Z", "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/NestedMaps.java", "diffHunk": "@@ -38,6 +40,11 @@ public static void deepMerge(Map left, Map right) {\n                 Map leftChild = (Map) left.get(key);\n                 Map rightChild = (Map) right.get(key);\n                 deepMerge(leftChild, rightChild);\n+            } else if (right.get(key) instanceof Collection && left.get(key) instanceof Collection) {\n+                Collection c = new ArrayList();", "originalCommit": "c9916710018de6a5e6358f722eb1c676a358a44d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MjE1NA==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465242154", "bodyText": "Ok done :)", "author": "ia3andy", "createdAt": "2020-08-04T18:20:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NTQ1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fbf4faa069dd934d8b5a6ce06e71edcb60b1b7fc", "chunk": "diff --git a/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/NestedMaps.java b/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/NestedMaps.java\nindex d4507e90bf..45bcd24045 100644\n--- a/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/NestedMaps.java\n+++ b/independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/NestedMaps.java\n\n@@ -41,7 +41,7 @@ public final class NestedMaps {\n                 Map rightChild = (Map) right.get(key);\n                 deepMerge(leftChild, rightChild);\n             } else if (right.get(key) instanceof Collection && left.get(key) instanceof Collection) {\n-                Collection c = new ArrayList();\n+                Collection c = new LinkedHashSet();\n                 c.addAll((Collection) left.get(key));\n                 c.addAll((Collection) right.get(key));\n                 left.put(key, c);\n"}}, {"oid": "2445907523462710b123d903e0a55a9f6b9c8309", "url": "https://github.com/quarkusio/quarkus/commit/2445907523462710b123d903e0a55a9f6b9c8309", "message": "Add Kotlin for qute and commandmode codestarts", "committedDate": "2020-08-04T18:10:09Z", "type": "forcePushed"}, {"oid": "fbf4faa069dd934d8b5a6ce06e71edcb60b1b7fc", "url": "https://github.com/quarkusio/quarkus/commit/fbf4faa069dd934d8b5a6ce06e71edcb60b1b7fc", "message": "A bunch of new stuff for codestarts", "committedDate": "2020-08-04T18:20:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTMyMg==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465319322", "bodyText": "Why not use the primitive boolean here instead?", "author": "gastaldi", "createdAt": "2020-08-04T20:44:34Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java", "diffHunk": "@@ -77,8 +77,8 @@\n     @Parameter(property = \"codestartsEnabled\", defaultValue = \"false\")\n     private Boolean codestartsEnabled;\n \n-    @Parameter(property = \"withExampleCode\", defaultValue = \"true\")\n-    private Boolean withExampleCode;\n+    @Parameter(property = \"withoutExampleCode\", defaultValue = \"false\")\n+    private Boolean withoutExampleCode;", "originalCommit": "fbf4faa069dd934d8b5a6ce06e71edcb60b1b7fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNDU3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465324577", "bodyText": "If default value is false, we could..", "author": "ia3andy", "createdAt": "2020-08-04T20:54:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTMyMg=="}], "type": "inlineReview", "revised_code": {"commit": "aa0c2595bed1ec26b01baaf73d664e1f10a76492", "chunk": "diff --git a/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java b/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java\nindex 40fa0376d2..eb743c2e7c 100644\n--- a/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java\n+++ b/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java\n\n@@ -75,10 +75,10 @@ public class CreateProjectMojo extends AbstractMojo {\n     private String projectVersion;\n \n     @Parameter(property = \"codestartsEnabled\", defaultValue = \"false\")\n-    private Boolean codestartsEnabled;\n+    private boolean codestartsEnabled;\n \n-    @Parameter(property = \"withoutExampleCode\", defaultValue = \"false\")\n-    private Boolean withoutExampleCode;\n+    @Parameter(property = \"skipExample\", defaultValue = \"false\")\n+    private boolean skipExample;\n \n     /**\n      * Group ID of the target platform BOM\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465319641", "bodyText": "Not sure I like renaming this, it's confusing compared to the original setting", "author": "gastaldi", "createdAt": "2020-08-04T20:45:06Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java", "diffHunk": "@@ -77,8 +77,8 @@\n     @Parameter(property = \"codestartsEnabled\", defaultValue = \"false\")\n     private Boolean codestartsEnabled;\n \n-    @Parameter(property = \"withExampleCode\", defaultValue = \"true\")\n-    private Boolean withExampleCode;\n+    @Parameter(property = \"withoutExampleCode\", defaultValue = \"false\")\n+    private Boolean withoutExampleCode;", "originalCommit": "fbf4faa069dd934d8b5a6ce06e71edcb60b1b7fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNDQxNw==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465324417", "bodyText": "Since default is with example, IMO it makes more sense to say withoutExampleCode when you don't want it.", "author": "ia3andy", "createdAt": "2020-08-04T20:54:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyOTczNg==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465329736", "bodyText": "Then IMHO it's more natural to say something like -DgenerateExample=false", "author": "gastaldi", "createdAt": "2020-08-04T21:05:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0ODI0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465348243", "bodyText": "-DemptyExample\n-DnoExample\n-DskipExample\n?", "author": "maxandersen", "createdAt": "2020-08-04T21:45:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0ODQ1MA==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465348450", "bodyText": "I think my favorite is skipExample :)", "author": "maxandersen", "createdAt": "2020-08-04T21:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5NjkwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465396909", "bodyText": "\ud83d\udc4d, I like skipExample too", "author": "gastaldi", "createdAt": "2020-08-05T00:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMDA4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11200#discussion_r465520083", "bodyText": "I'll go with skipExample using primitives", "author": "ia3andy", "createdAt": "2020-08-05T07:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxOTY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "aa0c2595bed1ec26b01baaf73d664e1f10a76492", "chunk": "diff --git a/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java b/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java\nindex 40fa0376d2..eb743c2e7c 100644\n--- a/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java\n+++ b/devtools/maven/src/main/java/io/quarkus/maven/CreateProjectMojo.java\n\n@@ -75,10 +75,10 @@ public class CreateProjectMojo extends AbstractMojo {\n     private String projectVersion;\n \n     @Parameter(property = \"codestartsEnabled\", defaultValue = \"false\")\n-    private Boolean codestartsEnabled;\n+    private boolean codestartsEnabled;\n \n-    @Parameter(property = \"withoutExampleCode\", defaultValue = \"false\")\n-    private Boolean withoutExampleCode;\n+    @Parameter(property = \"skipExample\", defaultValue = \"false\")\n+    private boolean skipExample;\n \n     /**\n      * Group ID of the target platform BOM\n"}}, {"oid": "aa0c2595bed1ec26b01baaf73d664e1f10a76492", "url": "https://github.com/quarkusio/quarkus/commit/aa0c2595bed1ec26b01baaf73d664e1f10a76492", "message": "A bunch of new stuff for codestarts", "committedDate": "2020-08-05T07:25:37Z", "type": "commit"}, {"oid": "aa0c2595bed1ec26b01baaf73d664e1f10a76492", "url": "https://github.com/quarkusio/quarkus/commit/aa0c2595bed1ec26b01baaf73d664e1f10a76492", "message": "A bunch of new stuff for codestarts", "committedDate": "2020-08-05T07:25:37Z", "type": "forcePushed"}]}