{"pr_number": 11410, "pr_title": "SmallRye Context Propagation 1.0.16", "pr_createdAt": "2020-08-17T08:36:28Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11410", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2MDI3MA==", "url": "https://github.com/quarkusio/quarkus/pull/11410#discussion_r471460270", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public class SynthBean {\n          \n          \n            \n                static class SynthBean {", "author": "manovotn", "createdAt": "2020-08-17T12:58:18Z", "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/SynthProxiableBeanWithoutNoArgConstructorTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package io.quarkus.arc.test.unproxyable;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Vetoed;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.arc.InstanceHandle;\n+import io.quarkus.arc.deployment.BeanRegistrarBuildItem;\n+import io.quarkus.arc.processor.BeanRegistrar;\n+import io.quarkus.builder.BuildChainBuilder;\n+import io.quarkus.builder.BuildContext;\n+import io.quarkus.builder.BuildStep;\n+import io.quarkus.gizmo.MethodDescriptor;\n+import io.quarkus.gizmo.ResultHandle;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class SynthProxiableBeanWithoutNoArgConstructorTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(SynthBean.class))\n+            .addBuildChainCustomizer(buildCustomizer());\n+\n+    static Consumer<BuildChainBuilder> buildCustomizer() {\n+        return new Consumer<BuildChainBuilder>() {\n+\n+            @Override\n+            public void accept(BuildChainBuilder builder) {\n+                builder.addBuildStep(new BuildStep() {\n+\n+                    @Override\n+                    public void execute(BuildContext context) {\n+                        context.produce(new BeanRegistrarBuildItem(new BeanRegistrar() {\n+                            @Override\n+                            public void register(RegistrationContext context) {\n+                                context.configure(SynthBean.class)\n+                                        .scope(ApplicationScoped.class)\n+                                        .types(SynthBean.class)\n+                                        .unremovable()\n+                                        .creator(mc -> {\n+                                            ResultHandle ret = mc.newInstance(\n+                                                    MethodDescriptor.ofConstructor(SynthBean.class, String.class),\n+                                                    mc.load(\"foo\"));\n+                                            mc.returnValue(ret);\n+                                        })\n+                                        .done();\n+                            }\n+                        }));\n+                    }\n+                }).produces(BeanRegistrarBuildItem.class).build();\n+            }\n+        };\n+    }\n+\n+    @Test\n+    public void testSyntheticBean() {\n+        InstanceHandle<SynthBean> instance = Arc.container().instance(SynthBean.class);\n+        assertTrue(instance.isAvailable());\n+        assertEquals(\"foo\", instance.get().getString());\n+    }\n+\n+    @Vetoed\n+    public class SynthBean {", "originalCommit": "14fe38c5ac511c6fd3fd19c4f1ab430588920bef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2MDc3OA==", "url": "https://github.com/quarkusio/quarkus/pull/11410#discussion_r471460778", "bodyText": "@FroMage this should do it. Sorry, it's my bad, I forgot to push that into my branch on Thu once I figured why it fails...", "author": "manovotn", "createdAt": "2020-08-17T12:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2MDI3MA=="}], "type": "inlineReview", "revised_code": {"commit": "b4585e5d2b9aa51137cf73afdce7de8ed62805d7", "chunk": "diff --git a/extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/SynthProxiableBeanWithoutNoArgConstructorTest.java b/extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/SynthProxiableBeanWithoutNoArgConstructorTest.java\nindex 9ab95a7bab..cb9f1a0fb0 100644\n--- a/extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/SynthProxiableBeanWithoutNoArgConstructorTest.java\n+++ b/extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/SynthProxiableBeanWithoutNoArgConstructorTest.java\n\n@@ -71,7 +71,7 @@ public class SynthProxiableBeanWithoutNoArgConstructorTest {\n     }\n \n     @Vetoed\n-    public class SynthBean {\n+    static class SynthBean {\n         private String s;\n \n         public SynthBean(String s) {\n"}}, {"oid": "b4585e5d2b9aa51137cf73afdce7de8ed62805d7", "url": "https://github.com/quarkusio/quarkus/commit/b4585e5d2b9aa51137cf73afdce7de8ed62805d7", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-08-18T09:55:52Z", "type": "forcePushed"}, {"oid": "acc9f566d38e3dff669efcb8ca5515ed15f938f5", "url": "https://github.com/quarkusio/quarkus/commit/acc9f566d38e3dff669efcb8ca5515ed15f938f5", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-08-20T09:54:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0MDQyMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11410#discussion_r473840421", "bodyText": "@FroMage forgot to erase debugging evidence? ;-)", "author": "manovotn", "createdAt": "2020-08-20T10:03:28Z", "path": "test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java", "diffHunk": "@@ -195,6 +195,7 @@ public void execute(BuildContext context) {\n             Thread.currentThread().setContextClassLoader(runningQuarkusApplication.getClassLoader());\n             // Instantiate the real test instance\n             testInstance = TestInstantiator.instantiateTest(testJavaClass, runningQuarkusApplication.getClassLoader());\n+            System.err.println(\"Setting testInstance to \" + testInstance);", "originalCommit": "800f73f759401c112b6f3feb62e6c055244703dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0Mjc0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/11410#discussion_r473842741", "bodyText": "DAMNIT", "author": "FroMage", "createdAt": "2020-08-20T10:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0MDQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0NjQ5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11410#discussion_r473846499", "bodyText": "OK should be fixed, thanks a lot :)", "author": "FroMage", "createdAt": "2020-08-20T10:10:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0MDQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "714572c41d7d1a4a26ca2a01d22297e5d26be9d8", "chunk": "diff --git a/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java b/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java\nindex 8a2298459a..513b469de8 100644\n--- a/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java\n+++ b/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java\n\n@@ -195,7 +195,6 @@ public class QuarkusDeployableContainer implements DeployableContainer<QuarkusCo\n             Thread.currentThread().setContextClassLoader(runningQuarkusApplication.getClassLoader());\n             // Instantiate the real test instance\n             testInstance = TestInstantiator.instantiateTest(testJavaClass, runningQuarkusApplication.getClassLoader());\n-            System.err.println(\"Setting testInstance to \" + testInstance);\n \n             //so this is pretty bogus, but some of the TCK tests set static's in their @Deployment methods\n             //we can probably challenge them, but for now we just copy the field values over\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0MDUzMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11410#discussion_r473840531", "bodyText": "Same as above", "author": "manovotn", "createdAt": "2020-08-20T10:03:36Z", "path": "test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java", "diffHunk": "@@ -259,6 +260,7 @@ public void undeploy(Archive<?> archive) throws DeploymentException {\n                 Thread.currentThread().setContextClassLoader(runningApp.get().getClassLoader());\n             }\n             testInstance = null;\n+            System.err.println(\"UnSetting testInstance\");", "originalCommit": "800f73f759401c112b6f3feb62e6c055244703dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "714572c41d7d1a4a26ca2a01d22297e5d26be9d8", "chunk": "diff --git a/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java b/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java\nindex 8a2298459a..513b469de8 100644\n--- a/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java\n+++ b/test-framework/arquillian/src/main/java/io/quarkus/arquillian/QuarkusDeployableContainer.java\n\n@@ -260,7 +259,6 @@ public class QuarkusDeployableContainer implements DeployableContainer<QuarkusCo\n                 Thread.currentThread().setContextClassLoader(runningApp.get().getClassLoader());\n             }\n             testInstance = null;\n-            System.err.println(\"UnSetting testInstance\");\n             Path location = deploymentLocation.get();\n             if (location != null) {\n                 try {\n"}}, {"oid": "714572c41d7d1a4a26ca2a01d22297e5d26be9d8", "url": "https://github.com/quarkusio/quarkus/commit/714572c41d7d1a4a26ca2a01d22297e5d26be9d8", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-08-20T10:10:31Z", "type": "forcePushed"}, {"oid": "a9c08a9da3b593e2a644995dc033ac4fc2b46e1d", "url": "https://github.com/quarkusio/quarkus/commit/a9c08a9da3b593e2a644995dc033ac4fc2b46e1d", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-08-20T13:32:11Z", "type": "forcePushed"}, {"oid": "90050317993daa6b9d5d8b8747035d1cf0969710", "url": "https://github.com/quarkusio/quarkus/commit/90050317993daa6b9d5d8b8747035d1cf0969710", "message": "Upgrade to SmallRye-ContextPropagation 1.0.16\n\nCan now inject SmallRye variants which have more features", "committedDate": "2020-08-27T11:00:46Z", "type": "forcePushed"}, {"oid": "ea62e0d80f7ef75510e436054959f841a8bffa58", "url": "https://github.com/quarkusio/quarkus/commit/ea62e0d80f7ef75510e436054959f841a8bffa58", "message": "Upgrade to SmallRye-ContextPropagation 1.0.16\n\nCan now inject SmallRye variants which have more features", "committedDate": "2020-08-27T11:01:01Z", "type": "forcePushed"}, {"oid": "98d5725a25ccf68e735eb58f4f421d6f4baec28f", "url": "https://github.com/quarkusio/quarkus/commit/98d5725a25ccf68e735eb58f4f421d6f4baec28f", "message": "Upgrade to SmallRye-ContextPropagation 1.0.16\n\nCan now inject SmallRye variants which have more features", "committedDate": "2020-08-31T09:26:51Z", "type": "forcePushed"}, {"oid": "bf963e3d753dd72f1e116f49469052ca9a4b43ce", "url": "https://github.com/quarkusio/quarkus/commit/bf963e3d753dd72f1e116f49469052ca9a4b43ce", "message": "Upgrade to SmallRye-ContextPropagation 1.0.16\n\nCan now inject SmallRye variants which have more features", "committedDate": "2020-08-31T15:55:18Z", "type": "forcePushed"}, {"oid": "ae1a00a8b0ccdd2d6248e6396470c3c7dcb8e7a8", "url": "https://github.com/quarkusio/quarkus/commit/ae1a00a8b0ccdd2d6248e6396470c3c7dcb8e7a8", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-10-21T13:35:00Z", "type": "forcePushed"}, {"oid": "97305e999e28db1df435504a7238faad5790505d", "url": "https://github.com/quarkusio/quarkus/commit/97305e999e28db1df435504a7238faad5790505d", "message": "Upgrade to SmallRye-ContextPropagation 1.0.19\n\nCan now inject SmallRye variants which have more features", "committedDate": "2020-10-21T15:22:22Z", "type": "commit"}, {"oid": "efb657ec9620c84d7fe133dae5850b7109fc76a2", "url": "https://github.com/quarkusio/quarkus/commit/efb657ec9620c84d7fe133dae5850b7109fc76a2", "message": "Automagically add no-args constructor to synthetic beans.", "committedDate": "2020-10-21T15:22:29Z", "type": "commit"}, {"oid": "0059ed98614d89f82bdf8f468325508a73aef581", "url": "https://github.com/quarkusio/quarkus/commit/0059ed98614d89f82bdf8f468325508a73aef581", "message": "Update extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/SynthProxiableBeanWithoutNoArgConstructorTest.java\n\nCo-authored-by: Matej Novotny <matej.novotny2@gmail.com>", "committedDate": "2020-10-21T15:22:29Z", "type": "commit"}, {"oid": "ef92b493fd0cad9ce596e913767cf36e5595d4e6", "url": "https://github.com/quarkusio/quarkus/commit/ef92b493fd0cad9ce596e913767cf36e5595d4e6", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-10-21T15:22:29Z", "type": "commit"}, {"oid": "ef92b493fd0cad9ce596e913767cf36e5595d4e6", "url": "https://github.com/quarkusio/quarkus/commit/ef92b493fd0cad9ce596e913767cf36e5595d4e6", "message": "Multi release jar ClassLoader fixes", "committedDate": "2020-10-21T15:22:29Z", "type": "forcePushed"}, {"oid": "cb54c9204ed7859690d3e71945b149c7a19cb36e", "url": "https://github.com/quarkusio/quarkus/commit/cb54c9204ed7859690d3e71945b149c7a19cb36e", "message": "Bump to SR-FT 4.3.2", "committedDate": "2020-10-27T16:45:53Z", "type": "commit"}]}