{"pr_number": 6969, "pr_title": "Introduce Startup annotation", "pr_createdAt": "2020-02-03T15:01:25Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6969", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2MDIzMg==", "url": "https://github.com/quarkusio/quarkus/pull/6969#discussion_r374160232", "bodyText": "Nice test, \ud83d\udc4d", "author": "geoand", "createdAt": "2020-02-03T15:16:47Z", "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/startup/StartupAnnotationTest.java", "diffHunk": "@@ -0,0 +1,174 @@\n+package io.quarkus.arc.test.startup;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PostConstruct;\n+import javax.annotation.PreDestroy;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+import javax.enterprise.inject.spi.ObserverMethod;\n+import javax.inject.Singleton;\n+\n+import org.jboss.jandex.AnnotationTarget;\n+import org.jboss.jandex.AnnotationTarget.Kind;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.arc.deployment.AnnotationsTransformerBuildItem;\n+import io.quarkus.arc.processor.AnnotationsTransformer;\n+import io.quarkus.builder.BuildChainBuilder;\n+import io.quarkus.builder.BuildContext;\n+import io.quarkus.builder.BuildStep;\n+import io.quarkus.runtime.Startup;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class StartupAnnotationTest {\n+\n+    static final List<String> LOG = new CopyOnWriteArrayList<String>();\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(StartMe.class, SingletonStartMe.class, DependentStartMe.class, ProducerStartMe.class))\n+            .addBuildChainCustomizer(buildCustomizer());\n+\n+    static Consumer<BuildChainBuilder> buildCustomizer() {", "originalCommit": "aa00df1d83381148fa96e3d32488dc07bba6817f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "622f3e7a50dbcf116a8633964094f293bed9aaa5", "url": "https://github.com/quarkusio/quarkus/commit/622f3e7a50dbcf116a8633964094f293bed9aaa5", "message": "Introduce Startup annotation\n\n- resolves #5955", "committedDate": "2020-02-04T11:06:27Z", "type": "commit"}, {"oid": "622f3e7a50dbcf116a8633964094f293bed9aaa5", "url": "https://github.com/quarkusio/quarkus/commit/622f3e7a50dbcf116a8633964094f293bed9aaa5", "message": "Introduce Startup annotation\n\n- resolves #5955", "committedDate": "2020-02-04T11:06:27Z", "type": "forcePushed"}]}