{"pr_number": 9621, "pr_title": "Add JPA static model classes to native image", "pr_createdAt": "2020-05-26T20:42:16Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9621", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzAzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430963039", "bodyText": "Do you really need the null test? I don't think so. Javadoc of the method says @return a non-null list of annotation instances.", "author": "gsmet", "createdAt": "2020-05-27T08:57:30Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {", "originalCommit": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODc4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028789", "bodyText": "Done", "author": "andrejpetras", "createdAt": "2020-05-27T10:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzAzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "6660d9a98431ea5a4858de5ff88bcb2c5a5d4e66", "chunk": "diff --git a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\nindex 2081e72407..868874bed2 100644\n--- a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n+++ b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n\n@@ -912,15 +912,13 @@ public final class HibernateOrmProcessor {\n     public void test(CombinedIndexBuildItem index,\n             BuildProducer<ReflectiveClassBuildItem> reflective) {\n         Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n-        if (annotationInstance != null) {\n+        if (!annotationInstance.isEmpty()) {\n \n             String[] metamodel = annotationInstance.stream()\n-                    .map(a -> a.target().asClass().toString())\n+                    .map(a -> a.target().asClass().name().toString())\n                     .toArray(String[]::new);\n \n-            if (metamodel.length > 0) {\n-                reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n-            }\n+            reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzQ0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430963445", "bodyText": "Please use name().toString() instead of the ClassInfo#toString(). In this case, it makes no difference but we had some issues with that before.", "author": "gsmet", "createdAt": "2020-05-27T08:58:06Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {\n+\n+            String[] metamodel = annotationInstance.stream()\n+                    .map(a -> a.target().asClass().toString())", "originalCommit": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODczNw==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028737", "bodyText": "Done", "author": "andrejpetras", "createdAt": "2020-05-27T10:51:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzQ0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6660d9a98431ea5a4858de5ff88bcb2c5a5d4e66", "chunk": "diff --git a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\nindex 2081e72407..868874bed2 100644\n--- a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n+++ b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n\n@@ -912,15 +912,13 @@ public final class HibernateOrmProcessor {\n     public void test(CombinedIndexBuildItem index,\n             BuildProducer<ReflectiveClassBuildItem> reflective) {\n         Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n-        if (annotationInstance != null) {\n+        if (!annotationInstance.isEmpty()) {\n \n             String[] metamodel = annotationInstance.stream()\n-                    .map(a -> a.target().asClass().toString())\n+                    .map(a -> a.target().asClass().name().toString())\n                     .toArray(String[]::new);\n \n-            if (metamodel.length > 0) {\n-                reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n-            }\n+            reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2ODgxMw==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430968813", "bodyText": "Thinking about it a bit more, just test if the collection is empty above instead of null and drop that check.", "author": "gsmet", "createdAt": "2020-05-27T09:06:37Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {\n+\n+            String[] metamodel = annotationInstance.stream()\n+                    .map(a -> a.target().asClass().toString())\n+                    .toArray(String[]::new);\n+\n+            if (metamodel.length > 0) {", "originalCommit": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODY3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028676", "bodyText": "Done", "author": "andrejpetras", "createdAt": "2020-05-27T10:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2ODgxMw=="}], "type": "inlineReview", "revised_code": {"commit": "6660d9a98431ea5a4858de5ff88bcb2c5a5d4e66", "chunk": "diff --git a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\nindex 2081e72407..868874bed2 100644\n--- a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n+++ b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n\n@@ -912,15 +912,13 @@ public final class HibernateOrmProcessor {\n     public void test(CombinedIndexBuildItem index,\n             BuildProducer<ReflectiveClassBuildItem> reflective) {\n         Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n-        if (annotationInstance != null) {\n+        if (!annotationInstance.isEmpty()) {\n \n             String[] metamodel = annotationInstance.stream()\n-                    .map(a -> a.target().asClass().toString())\n+                    .map(a -> a.target().asClass().name().toString())\n                     .toArray(String[]::new);\n \n-            if (metamodel.length > 0) {\n-                reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n-            }\n+            reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2OTA3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430969075", "bodyText": "Could you make the variable plural? It would be less confusing.", "author": "gsmet", "createdAt": "2020-05-27T09:06:58Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);", "originalCommit": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODYzMw==", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028633", "bodyText": "Done", "author": "andrejpetras", "createdAt": "2020-05-27T10:51:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2OTA3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6660d9a98431ea5a4858de5ff88bcb2c5a5d4e66", "chunk": "diff --git a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\nindex 2081e72407..868874bed2 100644\n--- a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n+++ b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n\n@@ -912,15 +912,13 @@ public final class HibernateOrmProcessor {\n     public void test(CombinedIndexBuildItem index,\n             BuildProducer<ReflectiveClassBuildItem> reflective) {\n         Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n-        if (annotationInstance != null) {\n+        if (!annotationInstance.isEmpty()) {\n \n             String[] metamodel = annotationInstance.stream()\n-                    .map(a -> a.target().asClass().toString())\n+                    .map(a -> a.target().asClass().name().toString())\n                     .toArray(String[]::new);\n \n-            if (metamodel.length > 0) {\n-                reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n-            }\n+            reflective.produce(new ReflectiveClassBuildItem(false, false, true, metamodel));\n         }\n     }\n \n"}}, {"oid": "6660d9a98431ea5a4858de5ff88bcb2c5a5d4e66", "url": "https://github.com/quarkusio/quarkus/commit/6660d9a98431ea5a4858de5ff88bcb2c5a5d4e66", "message": "Add JPA static model classes to native image", "committedDate": "2020-05-27T10:48:03Z", "type": "forcePushed"}, {"oid": "266d80de3532202f6bcec0a7fa5f74d39fc75f9f", "url": "https://github.com/quarkusio/quarkus/commit/266d80de3532202f6bcec0a7fa5f74d39fc75f9f", "message": "Add JPA static model classes to native image", "committedDate": "2020-05-27T10:50:06Z", "type": "commit"}, {"oid": "266d80de3532202f6bcec0a7fa5f74d39fc75f9f", "url": "https://github.com/quarkusio/quarkus/commit/266d80de3532202f6bcec0a7fa5f74d39fc75f9f", "message": "Add JPA static model classes to native image", "committedDate": "2020-05-27T10:50:06Z", "type": "forcePushed"}]}