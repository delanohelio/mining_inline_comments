{"pr_number": 10675, "pr_title": "Make sure that test callbacks always work on the proper test method", "pr_createdAt": "2020-07-13T10:54:00Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10675", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453602149", "bodyText": "This is done for every class in hierarchy (until the method is found). Wouldn't once be sufficient?", "author": "famod", "createdAt": "2020-07-13T12:06:56Z", "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -363,14 +370,45 @@ public void afterEach(ExtensionContext context) throws Exception {\n         }\n     }\n \n+    // We need the usual ClassLoader hacks in order to present the callbacks with the proper test object and context\n     private Map.Entry<Class<?>, ?> createQuarkusTestMethodContextTuple(ExtensionContext context) throws Exception {\n+        ClassLoader classLoader = runningQuarkusApplication.getClassLoader();\n         if (quarkusTestMethodContextClass == null) {\n-            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true,\n-                    runningQuarkusApplication.getClassLoader());\n+            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true, classLoader);\n         }\n+\n+        Method originalTestMethod = context.getRequiredTestMethod();\n+        Class<?>[] originalParameterTypes = originalTestMethod.getParameterTypes();\n+        Method actualTestMethod = null;\n+\n+        // go up the class hierachy to fetch the proper test method\n+        Class<?> c = actualTestClass;\n+        while (c != Object.class) {\n+            try {\n+                List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n+                for (Class<?> type : originalParameterTypes) {", "originalCommit": "f3813efab4ed9ce3c60294be5398c4e118f5ab31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMzg1OA==", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453603858", "bodyText": "You're right! It got moved into the loop when I added the it (the initial implementation didn't have it)", "author": "geoand", "createdAt": "2020-07-13T12:10:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNDk2OA==", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453604968", "bodyText": "the initial implementation didn't have it\n\nYeah, I noticed that. So you even fixed three problems! \ud83c\udf89", "author": "famod", "createdAt": "2020-07-13T12:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNzk5MA==", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453607990", "bodyText": "I didn't set off to do so, that's for sure :)", "author": "geoand", "createdAt": "2020-07-13T12:18:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a7ec72bfb619886f836b37b6a49cae2a124200a5", "chunk": "diff --git a/test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java b/test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java\nindex f83fc62ee9..125e573b9b 100644\n--- a/test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java\n+++ b/test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java\n\n@@ -383,19 +383,19 @@ public class QuarkusTestExtension\n \n         // go up the class hierachy to fetch the proper test method\n         Class<?> c = actualTestClass;\n+        List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n+        for (Class<?> type : originalParameterTypes) {\n+            if (type.isPrimitive()) {\n+                parameterTypesFromTccl.add(type);\n+            } else {\n+                parameterTypesFromTccl\n+                        .add(Class.forName(type.getName(), true, classLoader));\n+            }\n+        }\n+        final Class<?>[] parameterTypes = parameterTypesFromTccl.toArray(new Class[0]);\n         while (c != Object.class) {\n             try {\n-                List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n-                for (Class<?> type : originalParameterTypes) {\n-                    if (type.isPrimitive()) {\n-                        parameterTypesFromTccl.add(type);\n-                    } else {\n-                        parameterTypesFromTccl\n-                                .add(Class.forName(type.getName(), true, classLoader));\n-                    }\n-                }\n-                actualTestMethod = c.getDeclaredMethod(originalTestMethod.getName(),\n-                        parameterTypesFromTccl.toArray(new Class[0]));\n+                actualTestMethod = c.getDeclaredMethod(originalTestMethod.getName(), parameterTypes);\n                 break;\n             } catch (NoSuchMethodException ignored) {\n \n"}}, {"oid": "a7ec72bfb619886f836b37b6a49cae2a124200a5", "url": "https://github.com/quarkusio/quarkus/commit/a7ec72bfb619886f836b37b6a49cae2a124200a5", "message": "Make sure that test callbacks always work on the proper test method\n\nFixes: #10623", "committedDate": "2020-07-13T12:28:58Z", "type": "forcePushed"}, {"oid": "9e439f2bdc673836caa958909c2e067883665bbf", "url": "https://github.com/quarkusio/quarkus/commit/9e439f2bdc673836caa958909c2e067883665bbf", "message": "Make sure that test callbacks always work on the proper test method\n\nFixes: #10623", "committedDate": "2020-07-13T12:29:13Z", "type": "forcePushed"}, {"oid": "ec45cc2063d92b25e1c6a5b2e840b3027301580a", "url": "https://github.com/quarkusio/quarkus/commit/ec45cc2063d92b25e1c6a5b2e840b3027301580a", "message": "Make sure that test callbacks always work on the proper test method\n\nFixes: #10623", "committedDate": "2020-07-13T12:31:21Z", "type": "forcePushed"}, {"oid": "3be2f5254d422ec256bfce36644c3f0c370a982e", "url": "https://github.com/quarkusio/quarkus/commit/3be2f5254d422ec256bfce36644c3f0c370a982e", "message": "Make sure that test callbacks always work on the proper test method\n\nFixes: #10623", "committedDate": "2020-07-14T06:27:33Z", "type": "commit"}, {"oid": "3be2f5254d422ec256bfce36644c3f0c370a982e", "url": "https://github.com/quarkusio/quarkus/commit/3be2f5254d422ec256bfce36644c3f0c370a982e", "message": "Make sure that test callbacks always work on the proper test method\n\nFixes: #10623", "committedDate": "2020-07-14T06:27:33Z", "type": "forcePushed"}]}