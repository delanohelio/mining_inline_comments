{"pr_number": 6472, "pr_title": "Add support for kebab case in @ConfigProperties", "pr_createdAt": "2020-01-09T08:20:30Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6472", "timeline": [{"oid": "ca45d47cfb239215d42a98dc7f3423f3fd144507", "url": "https://github.com/quarkusio/quarkus/commit/ca45d47cfb239215d42a98dc7f3423f3fd144507", "message": "Add support for kebab case in @ConfigProperties\n\nFixes: #6457", "committedDate": "2020-01-09T08:34:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDUzMg==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364610532", "bodyText": "Small thing, but maybe move this inline with applicationIndex, configProperties);", "author": "gytis", "createdAt": "2020-01-09T08:32:41Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java", "diffHunk": "@@ -167,7 +170,8 @@ static boolean addProducerMethodForClassConfigProperties(ClassLoader classLoader\n                 configObjectClassStr, produceMethodParameterTypes)) {\n             methodCreator.addAnnotation(Produces.class);\n \n-            ResultHandle configObject = populateConfigObject(classLoader, configPropertiesClassInfo, prefixStr, methodCreator,\n+            ResultHandle configObject = populateConfigObject(classLoader, configPropertiesClassInfo, prefixStr, namingStrategy,\n+                    methodCreator,", "originalCommit": "52e180483bd62579787f7e253ab4179615aa60e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f82409d57a398e5ec7178617bc2a133d5aa15a4", "chunk": "diff --git a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\nindex d212ad0b9d..c272449642 100644\n--- a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\n+++ b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\n\n@@ -171,8 +170,7 @@ final class ClassConfigPropertiesUtil {\n             methodCreator.addAnnotation(Produces.class);\n \n             ResultHandle configObject = populateConfigObject(classLoader, configPropertiesClassInfo, prefixStr, namingStrategy,\n-                    methodCreator,\n-                    applicationIndex, configProperties);\n+                    methodCreator, applicationIndex, configProperties);\n \n             if (needsValidation) {\n                 createValidationCodePath(methodCreator, configObject, prefixStr);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNTk5NA==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364615994", "bodyText": "How about checking for a getter in here the same as in the default case? Looking at the original issue (#6457), this seems to be the expected scenario i.e. schema-location > getSchemaLocation", "author": "gytis", "createdAt": "2020-01-09T08:45:17Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/InterfaceConfigPropertiesUtil.java", "diffHunk": "@@ -196,26 +199,33 @@ private static boolean isDefault(short flags) {\n         return ((flags & (Modifier.ABSTRACT | Modifier.PUBLIC | Modifier.STATIC)) == Modifier.PUBLIC);\n     }\n \n-    private static NameAndDefaultValue determinePropertyNameAndDefaultValue(MethodInfo method) {\n+    private static NameAndDefaultValue determinePropertyNameAndDefaultValue(MethodInfo method,\n+            ConfigProperties.NamingStrategy namingStrategy) {\n         AnnotationInstance configPropertyAnnotation = method.annotation(DotNames.CONFIG_PROPERTY);\n         if (configPropertyAnnotation != null) {\n             AnnotationValue nameValue = configPropertyAnnotation.value(\"name\");\n-            String name = (nameValue == null) || nameValue.asString().isEmpty() ? getPropertyNameFromMethodName(method)\n+            String name = (nameValue == null) || nameValue.asString().isEmpty() ? getPropertyName(method, namingStrategy)\n                     : nameValue.asString();\n             AnnotationValue defaultValue = configPropertyAnnotation.value(\"defaultValue\");\n \n             return new NameAndDefaultValue(name, defaultValue != null ? defaultValue.asString() : null);\n         }\n \n-        return new NameAndDefaultValue(getPropertyNameFromMethodName(method));\n+        return new NameAndDefaultValue(getPropertyName(method, namingStrategy));\n     }\n \n-    private static String getPropertyNameFromMethodName(MethodInfo method) {\n-        try {\n-            return JavaBeanUtil.getPropertyNameFromGetter(method.name());\n-        } catch (IllegalArgumentException e) {\n-            throw new IllegalArgumentException(\"Method \" + method.name() + \" of interface \" + method.declaringClass()\n-                    + \" is not a getter method. Either rename the method to follow getter name conventions or annotate the method with @ConfigProperty\");\n+    private static String getPropertyName(MethodInfo method, ConfigProperties.NamingStrategy namingStrategy) {\n+        if (namingStrategy == ConfigProperties.NamingStrategy.DEFAULT) {\n+            try {\n+                return JavaBeanUtil.getPropertyNameFromGetter(method.name());\n+            } catch (IllegalArgumentException e) {\n+                throw new IllegalArgumentException(\"Method \" + method.name() + \" of interface \" + method.declaringClass()\n+                        + \" is not a getter method. Either rename the method to follow getter name conventions or annotate the method with @ConfigProperty\");\n+            }\n+        } else if (namingStrategy == ConfigProperties.NamingStrategy.KEBAB_CASE) {\n+            return StringUtil.hyphenate(method.name());", "originalCommit": "ca45d47cfb239215d42a98dc7f3423f3fd144507", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNjM3OA==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364616378", "bodyText": "Good idea", "author": "geoand", "createdAt": "2020-01-09T08:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNTk5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxOTYyNg==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364619626", "bodyText": "Done", "author": "geoand", "createdAt": "2020-01-09T08:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNTk5NA=="}], "type": "inlineReview", "revised_code": {"commit": "b9b293dbae090b535e07dbb98bc58420fde958f8", "chunk": "diff --git a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/InterfaceConfigPropertiesUtil.java b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/InterfaceConfigPropertiesUtil.java\nindex 733325c07b..bb35a5fd90 100644\n--- a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/InterfaceConfigPropertiesUtil.java\n+++ b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/InterfaceConfigPropertiesUtil.java\n\n@@ -223,7 +223,11 @@ final class InterfaceConfigPropertiesUtil {\n                         + \" is not a getter method. Either rename the method to follow getter name conventions or annotate the method with @ConfigProperty\");\n             }\n         } else if (namingStrategy == ConfigProperties.NamingStrategy.KEBAB_CASE) {\n-            return StringUtil.hyphenate(method.name());\n+            try {\n+                return StringUtil.hyphenate(JavaBeanUtil.getPropertyNameFromGetter(method.name()));\n+            } catch (IllegalArgumentException ignored) {\n+                return StringUtil.hyphenate(method.name());\n+            }\n         } else {\n             throw new IllegalStateException(\"Unsupported naming strategy \" + namingStrategy);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNjEyNg==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364616126", "bodyText": "Move inline with defaultConfigValues, configProperties);?", "author": "gytis", "createdAt": "2020-01-09T08:45:37Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ConfigPropertiesBuildStep.java", "diffHunk": "@@ -74,6 +74,7 @@ void setup(CombinedIndexBuildItem combinedIndex,\n \n                 String generatedClassName = InterfaceConfigPropertiesUtil.generateImplementationForInterfaceConfigProperties(\n                         classInfo, nonBeansClassOutput, combinedIndex.getIndex(), configPropertiesMetadata.getPrefix(),\n+                        configPropertiesMetadata.getNamingStrategy(),", "originalCommit": "ca45d47cfb239215d42a98dc7f3423f3fd144507", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxOTU2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364619566", "bodyText": "Done", "author": "geoand", "createdAt": "2020-01-09T08:54:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxNjEyNg=="}], "type": "inlineReview", "revised_code": {"commit": "b9b293dbae090b535e07dbb98bc58420fde958f8", "chunk": "diff --git a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ConfigPropertiesBuildStep.java b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ConfigPropertiesBuildStep.java\nindex f2c7901bda..cf561ca837 100644\n--- a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ConfigPropertiesBuildStep.java\n+++ b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ConfigPropertiesBuildStep.java\n\n@@ -74,8 +74,7 @@ public class ConfigPropertiesBuildStep {\n \n                 String generatedClassName = InterfaceConfigPropertiesUtil.generateImplementationForInterfaceConfigProperties(\n                         classInfo, nonBeansClassOutput, combinedIndex.getIndex(), configPropertiesMetadata.getPrefix(),\n-                        configPropertiesMetadata.getNamingStrategy(),\n-                        defaultConfigValues, configProperties);\n+                        configPropertiesMetadata.getNamingStrategy(), defaultConfigValues, configProperties);\n                 InterfaceConfigPropertiesUtil.addProducerMethodForInterfaceConfigProperties(producerClassCreator,\n                         classInfo.name(), generatedClassName);\n \n"}}, {"oid": "b9b293dbae090b535e07dbb98bc58420fde958f8", "url": "https://github.com/quarkusio/quarkus/commit/b9b293dbae090b535e07dbb98bc58420fde958f8", "message": "Add support for kebab case in @ConfigProperties\n\nFixes: #6457", "committedDate": "2020-01-09T08:54:16Z", "type": "forcePushed"}, {"oid": "41571585f12f9ef525b865586656e932ff94594f", "url": "https://github.com/quarkusio/quarkus/commit/41571585f12f9ef525b865586656e932ff94594f", "message": "Add support for kebab case in @ConfigProperties\n\nFixes: #6457", "committedDate": "2020-01-09T09:23:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDc3NA==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364870774", "bodyText": "Maybe move this behavior to a method in the NamingStrategy enum? eg. String getPropertyName(String name). Then you could simply do namingStrategy.getPropertyName(field.name())", "author": "gastaldi", "createdAt": "2020-01-09T17:34:24Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java", "diffHunk": "@@ -316,6 +322,15 @@ private static ResultHandle populateConfigObject(ClassLoader classLoader, ClassI\n         return configObject;\n     }\n \n+    private static String getPropertyName(FieldInfo field, ConfigProperties.NamingStrategy namingStrategy) {\n+        if (namingStrategy == ConfigProperties.NamingStrategy.DEFAULT) {\n+            return field.name();\n+        } else if (namingStrategy == ConfigProperties.NamingStrategy.KEBAB_CASE) {\n+            return StringUtil.hyphenate(field.name());\n+        }", "originalCommit": "41571585f12f9ef525b865586656e932ff94594f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MTc1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364871756", "bodyText": "That makes sense, I'll update it soon", "author": "geoand", "createdAt": "2020-01-09T17:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4MzE0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364883141", "bodyText": "Done", "author": "geoand", "createdAt": "2020-01-09T18:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3MDc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "2e2613a84c8404d6206c7ad3f670648a32e0c3ae", "chunk": "diff --git a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\nindex d212ad0b9d..13fe623e1d 100644\n--- a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\n+++ b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\n\n@@ -323,12 +322,7 @@ final class ClassConfigPropertiesUtil {\n     }\n \n     private static String getPropertyName(FieldInfo field, ConfigProperties.NamingStrategy namingStrategy) {\n-        if (namingStrategy == ConfigProperties.NamingStrategy.DEFAULT) {\n-            return field.name();\n-        } else if (namingStrategy == ConfigProperties.NamingStrategy.KEBAB_CASE) {\n-            return StringUtil.hyphenate(field.name());\n-        }\n-        throw new IllegalStateException(\"Unsupported naming strategy \" + namingStrategy);\n+        return namingStrategy.getName(field.name());\n     }\n \n     private static void createWriteValue(BytecodeCreator bytecodeCreator, ResultHandle configObject, FieldInfo field,\n"}}, {"oid": "2e2613a84c8404d6206c7ad3f670648a32e0c3ae", "url": "https://github.com/quarkusio/quarkus/commit/2e2613a84c8404d6206c7ad3f670648a32e0c3ae", "message": "Add support for kebab case in @ConfigProperties\n\nFixes: #6457", "committedDate": "2020-01-09T18:03:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDIwNw==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364884207", "bodyText": "Is this method still needed? I think you can call namingStrategy.getName(field.name()) directly, no?", "author": "gastaldi", "createdAt": "2020-01-09T18:06:06Z", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java", "diffHunk": "@@ -316,6 +321,10 @@ private static ResultHandle populateConfigObject(ClassLoader classLoader, ClassI\n         return configObject;\n     }\n \n+    private static String getPropertyName(FieldInfo field, ConfigProperties.NamingStrategy namingStrategy) {", "originalCommit": "2e2613a84c8404d6206c7ad3f670648a32e0c3ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDUzNg==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364884536", "bodyText": "Yeah, you are right. should have got rid of it, but I got mixed up because of the similar (but not exactly the same) case for interfaces", "author": "geoand", "createdAt": "2020-01-09T18:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDIwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDkxMA==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364884910", "bodyText": "So now it should be properly done :)", "author": "geoand", "createdAt": "2020-01-09T18:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDIwNw=="}], "type": "inlineReview", "revised_code": {"commit": "a660187855e0f59d20c89234cc98580099780cc3", "chunk": "diff --git a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\nindex 13fe623e1d..8960b84268 100644\n--- a/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\n+++ b/extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/configproperties/ClassConfigPropertiesUtil.java\n\n@@ -321,10 +321,6 @@ final class ClassConfigPropertiesUtil {\n         return configObject;\n     }\n \n-    private static String getPropertyName(FieldInfo field, ConfigProperties.NamingStrategy namingStrategy) {\n-        return namingStrategy.getName(field.name());\n-    }\n-\n     private static void createWriteValue(BytecodeCreator bytecodeCreator, ResultHandle configObject, FieldInfo field,\n             MethodInfo setter, boolean useFieldAccess, ResultHandle value) {\n         if (useFieldAccess) {\n"}}, {"oid": "a660187855e0f59d20c89234cc98580099780cc3", "url": "https://github.com/quarkusio/quarkus/commit/a660187855e0f59d20c89234cc98580099780cc3", "message": "Add support for kebab case in @ConfigProperties\n\nFixes: #6457", "committedDate": "2020-01-09T18:08:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NjgwMw==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364886803", "bodyText": "This method can be declared as abstract", "author": "gastaldi", "createdAt": "2020-01-09T18:12:40Z", "path": "extensions/arc/runtime/src/main/java/io/quarkus/arc/config/ConfigProperties.java", "diffHunk": "@@ -19,4 +21,47 @@\n      * If the default is used, the class name will be used to determine the proper prefix\n      */\n     String prefix() default UNSET_PREFIX;\n+\n+    /**\n+     * The naming strategy to use for the corresponding property. This only matters for fields or method names that contain\n+     * both lower case and upper case characters.\n+     *\n+     * {@code NamingStrategy.DEFAULT} means that whatever the name of the field / method is, that will be the name of the\n+     * property.\n+     * {@code NamingStrategy.KEBAB_CASE} means that the name of property is derived by replacing case changes with a dash.\n+     * For a example:\n+     *\n+     * /**\n+     * \n+     * <pre>\n+     * &#64;ConfigProperties(prefix=\"whatever\")\n+     * public class SomeConfig {\n+     *   public fooBar;\n+     * }\n+     * </pre>\n+     *\n+     * Then to set the {@code fooBar} field, the corresponding property would be {@code whatever.fooBar}.\n+     * If {@code namingStrategy=NamingStrategy.KEBAB_CASE} were being used, then the corresponding property would be\n+     * {@code whatever.foo-bar}\n+     */\n+    NamingStrategy namingStrategy() default NamingStrategy.DEFAULT;\n+\n+    enum NamingStrategy {\n+        DEFAULT {\n+            @Override\n+            public String getName(String name) {\n+                return name;\n+            }\n+        },\n+        KEBAB_CASE {\n+            @Override\n+            public String getName(String name) {\n+                return StringUtil.hyphenate(name);\n+            }\n+        };\n+\n+        public String getName(String name) {", "originalCommit": "a660187855e0f59d20c89234cc98580099780cc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5NjQ0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364896446", "bodyText": "Damn why didn't I think of that...", "author": "geoand", "createdAt": "2020-01-09T18:34:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5NjU1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364896556", "bodyText": "I'll push a fix in a few hours", "author": "geoand", "createdAt": "2020-01-09T18:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3NzgzNw==", "url": "https://github.com/quarkusio/quarkus/pull/6472#discussion_r364977837", "bodyText": "Thanks for catching this, it should be fixed now", "author": "geoand", "createdAt": "2020-01-09T21:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NjgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "17c91c0a8529d6df0a617130743bddb48c3652b5", "chunk": "diff --git a/extensions/arc/runtime/src/main/java/io/quarkus/arc/config/ConfigProperties.java b/extensions/arc/runtime/src/main/java/io/quarkus/arc/config/ConfigProperties.java\nindex 4e3cf7fa56..a7662f3668 100644\n--- a/extensions/arc/runtime/src/main/java/io/quarkus/arc/config/ConfigProperties.java\n+++ b/extensions/arc/runtime/src/main/java/io/quarkus/arc/config/ConfigProperties.java\n\n@@ -26,7 +26,7 @@ public @interface ConfigProperties {\n      * The naming strategy to use for the corresponding property. This only matters for fields or method names that contain\n      * both lower case and upper case characters.\n      *\n-     * {@code NamingStrategy.DEFAULT} means that whatever the name of the field / method is, that will be the name of the\n+     * {@code NamingStrategy.VERBATIM} means that whatever the name of the field / method is, that will be the name of the\n      * property.\n      * {@code NamingStrategy.KEBAB_CASE} means that the name of property is derived by replacing case changes with a dash.\n      * For a example:\n"}}, {"oid": "17c91c0a8529d6df0a617130743bddb48c3652b5", "url": "https://github.com/quarkusio/quarkus/commit/17c91c0a8529d6df0a617130743bddb48c3652b5", "message": "Make kebab case the default in @ConfigProperties", "committedDate": "2020-01-10T11:12:04Z", "type": "forcePushed"}, {"oid": "0f82409d57a398e5ec7178617bc2a133d5aa15a4", "url": "https://github.com/quarkusio/quarkus/commit/0f82409d57a398e5ec7178617bc2a133d5aa15a4", "message": "Add support for kebab case in @ConfigProperties\n\nFixes: #6457", "committedDate": "2020-01-10T11:28:31Z", "type": "commit"}, {"oid": "6f95145f48d28992ce9aeee71562bec0ec0d1279", "url": "https://github.com/quarkusio/quarkus/commit/6f95145f48d28992ce9aeee71562bec0ec0d1279", "message": "Make kebab case the default in @ConfigProperties", "committedDate": "2020-01-10T11:28:35Z", "type": "commit"}, {"oid": "6f95145f48d28992ce9aeee71562bec0ec0d1279", "url": "https://github.com/quarkusio/quarkus/commit/6f95145f48d28992ce9aeee71562bec0ec0d1279", "message": "Make kebab case the default in @ConfigProperties", "committedDate": "2020-01-10T11:28:35Z", "type": "forcePushed"}]}