{"pr_number": 6938, "pr_title": "Configure all Test tasks properly (#3552)", "pr_createdAt": "2020-02-01T20:59:10Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/6938", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374007956", "bodyText": "This doesn't work in JDK 8 AFAIK", "author": "gastaldi", "createdAt": "2020-02-03T09:52:29Z", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());", "originalCommit": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAyODkyNQ==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374028925", "bodyText": "Really?\nWould the compiler not have caught that - source/target level is 8.\nBut I will test it on java8 as well.", "author": "jskov-jyskebank-dk", "createdAt": "2020-02-03T10:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MjAyNw==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374092027", "bodyText": "Pretty sure it won't work if you compile with JDK 8: https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#readAllBytes--", "author": "gastaldi", "createdAt": "2020-02-03T13:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NzQwMg==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374267402", "bodyText": "What a pain in the butt. Gradle, Maven, and Eclipse all conspire to hide this when using a newer JDK.\nTIL!", "author": "jskov", "createdAt": "2020-02-03T18:32:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d76978ad9e21b192644675e220d9ec14a894605f", "chunk": "diff --git a/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java b/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java\nindex 4d5435a1af..66b76e0ed9 100644\n--- a/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java\n+++ b/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java\n\n@@ -2,6 +2,7 @@ package io.quarkus.gradle;\n \n import static org.assertj.core.api.Assertions.assertThat;\n \n+import java.io.BufferedInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.file.Files;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MjM1NA==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374092354", "bodyText": "tasks.withType(Test.class).whenTaskAdded(configureTestTask) ?", "author": "gastaldi", "createdAt": "2020-02-03T13:10:40Z", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java", "diffHunk": "@@ -104,15 +105,18 @@ private void registerTasks(Project project) {\n                     Task testNative = tasks.create(TEST_NATIVE_TASK_NAME, QuarkusTestNative.class);\n                     testNative.dependsOn(buildNative);\n                     testNative.setShouldRunAfter(Collections.singletonList(tasks.findByName(JavaPlugin.TEST_TASK_NAME)));\n-                    tasks.withType(Test.class).forEach(t -> {\n+\n+                    Consumer<Test> configureTestTask = t -> {\n                         // Quarkus test configuration task which should be executed before any Quarkus test\n                         t.dependsOn(quarkusTestConfig);\n                         // also make each task use the JUnit platform since it's the only supported test environment\n                         t.useJUnitPlatform();\n-                    });\n+                    };\n+                    tasks.withType(Test.class).forEach(configureTestTask);\n+                    tasks.withType(Test.class).whenTaskAdded(t -> configureTestTask.accept(t));", "originalCommit": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NjQ3MA==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374266470", "bodyText": "Can't. It takes an Action, which is not compatible with Consumer.", "author": "jskov", "createdAt": "2020-02-03T18:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MjM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "d76978ad9e21b192644675e220d9ec14a894605f", "chunk": "diff --git a/devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java b/devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java\nindex f8f77495bf..99b9d06864 100644\n--- a/devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java\n+++ b/devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java\n\n@@ -116,7 +116,7 @@ public class QuarkusPlugin implements Plugin<Project> {\n                     tasks.withType(Test.class).whenTaskAdded(t -> configureTestTask.accept(t));\n                 });\n     }\n-    \n+\n     private void verifyGradleVersion() {\n         if (GradleVersion.current().compareTo(GradleVersion.version(\"5.0\")) < 0) {\n             throw new GradleException(\"Quarkus plugin requires Gradle 5.0 or later. Current version is: \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MzA4NA==", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374093084", "bodyText": "This is also not compatible with JDK 8 as Files.writeString was introduced in JDK 11", "author": "gastaldi", "createdAt": "2020-02-03T13:12:26Z", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());\n+            Files.writeString(buildFile, txt);", "originalCommit": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d76978ad9e21b192644675e220d9ec14a894605f", "chunk": "diff --git a/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java b/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java\nindex 4d5435a1af..66b76e0ed9 100644\n--- a/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java\n+++ b/devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java\n\n@@ -2,6 +2,7 @@ package io.quarkus.gradle;\n \n import static org.assertj.core.api.Assertions.assertThat;\n \n+import java.io.BufferedInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.file.Files;\n"}}, {"oid": "d76978ad9e21b192644675e220d9ec14a894605f", "url": "https://github.com/quarkusio/quarkus/commit/d76978ad9e21b192644675e220d9ec14a894605f", "message": "Configure all Test tasks properly (#3552)\n\nAlso configure test tasks that are created (in the build file, or\nin other plugins) after the quarkus plugin is applied.", "committedDate": "2020-02-11T16:53:42Z", "type": "commit"}]}