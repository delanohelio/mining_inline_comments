{"pr_number": 9872, "pr_title": "Block usage of persistence.xml for Hibernate Reactive", "pr_createdAt": "2020-06-08T23:00:02Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9872", "timeline": [{"oid": "581d31a6fa34088d68d5e3a6832f730d6ed6532c", "url": "https://github.com/quarkusio/quarkus/commit/581d31a6fa34088d68d5e3a6832f730d6ed6532c", "message": "Remove beans.xml from Hibernate Reactive ITs", "committedDate": "2020-06-09T03:28:04Z", "type": "forcePushed"}, {"oid": "0b2b6526649d5bead89127c1e5e06024809e216d", "url": "https://github.com/quarkusio/quarkus/commit/0b2b6526649d5bead89127c1e5e06024809e216d", "message": "Remove beans.xml from Hibernate Reactive ITs", "committedDate": "2020-06-09T13:34:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTg3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437469872", "bodyText": "This way the mere presence of the HIBERNATE_REACTIVE capability would break existing ORM applications, I don't think we can have that. Can you think of a better way?", "author": "Sanne", "createdAt": "2020-06-09T14:32:06Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -208,8 +210,12 @@ public void configurationDescriptorBuilding(\n         for (PersistenceXmlDescriptorBuildItem persistenceXmlDescriptorBuildItem : persistenceXmlDescriptors) {\n             allDescriptors.add(persistenceXmlDescriptorBuildItem.getDescriptor());\n         }\n-        handleHibernateORMWithNoPersistenceXml(allDescriptors, resourceProducer, systemPropertyProducer,\n-                defaultJdbcDataSourceBuildItem, applicationArchivesBuildItem, launchMode.getLaunchMode());\n+\n+        final boolean hibernateReactivePresent = capabilities.isCapabilityPresent(Capabilities.HIBERNATE_REACTIVE);\n+        if (!hibernateReactivePresent) {", "originalCommit": "0b2b6526649d5bead89127c1e5e06024809e216d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1MDM3Nw==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437550377", "bodyText": "For now, simultaneous usage of Hibernate ORM and Reactive is not really tested, and therefore not supported (yet), so that is a current limitation.\nExisting ORM apps should still work if they have persistence.xml based config, but once they pull in HR it is assumed that the default PU is a reactive one.\nPerhaps we could key this off of the default datasource configuration also? So if the default JDBC datasource is NOT enabled (i.e. quarkus.datasource.jdbc=false) then this can stay as-is, but if the default JDBC datasource IS enabled, then we'd still want to produce this somehow. But this goes back to the current limitation of not being able to use ORM and HR at the same time.", "author": "aguibert", "createdAt": "2020-06-09T16:08:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0NDgzNw==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437644837", "bodyText": "ok, fair enough - especially as I don't have a better idea to suggest :)", "author": "Sanne", "createdAt": "2020-06-09T18:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2OTg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ff28fd71898934ef45999bf4588ca9db396362bb", "chunk": "diff --git a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\nindex dd915ea418..c73427df0c 100644\n--- a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n+++ b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n\n@@ -211,7 +213,7 @@ public final class HibernateOrmProcessor {\n             allDescriptors.add(persistenceXmlDescriptorBuildItem.getDescriptor());\n         }\n \n-        final boolean hibernateReactivePresent = capabilities.isCapabilityPresent(Capabilities.HIBERNATE_REACTIVE);\n+        final boolean hibernateReactivePresent = capabilities.isPresent(Capability.HIBERNATE_REACTIVE);\n         if (!hibernateReactivePresent) {\n             handleHibernateORMWithNoPersistenceXml(allDescriptors, resourceProducer, systemPropertyProducer,\n                     defaultJdbcDataSourceBuildItem, applicationArchivesBuildItem, launchMode.getLaunchMode());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MDY2MA==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437470660", "bodyText": "Since we don't have the same drivers for Hibernate Reactive, should it have its own code for this?", "author": "Sanne", "createdAt": "2020-06-09T14:33:05Z", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -934,11 +940,14 @@ public void test(CombinedIndexBuildItem index,\n         }\n     }\n \n-    private Optional<String> guessDialect(Optional<String> dbKind) {\n+    public static Optional<String> guessDialect(Optional<String> dbKind) {", "originalCommit": "0b2b6526649d5bead89127c1e5e06024809e216d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4ODEwOQ==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437488109", "bodyText": "We don't have the same drivers, but we do have the same dialects. The same SQL should be valid in either JDBC or Vertx. If that ever changes and we need to make special reactive-only dialects we can revisit this, but I don't foresee that happening.", "author": "aguibert", "createdAt": "2020-06-09T14:55:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MDY2MA=="}], "type": "inlineReview", "revised_code": {"commit": "cfa2d644d290501f0f3bfa076ada88b366501618", "chunk": "diff --git a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\nindex dd915ea418..0ec7b68261 100644\n--- a/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n+++ b/extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java\n\n@@ -945,9 +946,6 @@ public final class HibernateOrmProcessor {\n         // later, we can keep doing that but also avoid DCE\n         // of all the dialects we want in so that people can override them\n         String resolvedDbKind = dbKind.orElse(\"NO_DATABASE_KIND\");\n-        if (DatabaseKind.isDB2(resolvedDbKind)) {\n-            return Optional.of(DB297Dialect.class.getName());\n-        }\n         if (DatabaseKind.isPostgreSQL(resolvedDbKind)) {\n             return Optional.of(QuarkusPostgreSQL10Dialect.class.getName());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MzE4MQ==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437473181", "bodyText": "This looks like largely copied from the blocking ORM processor. Could you add a comment to highlight what's similar and what's intentionally different?", "author": "Sanne", "createdAt": "2020-06-09T14:36:29Z", "path": "extensions/hibernate-reactive/deployment/src/main/java/io/quarkus/hibernate/reactive/deployment/HibernateReactiveProcessor.java", "diffHunk": "@@ -61,6 +97,194 @@ public void build(RecorderContext recorderContext,\n         recorder.callHibernateReactiveFeatureInit(enableRx);\n     }\n \n+    @BuildStep", "originalCommit": "0b2b6526649d5bead89127c1e5e06024809e216d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1NzIwMQ==", "url": "https://github.com/quarkusio/quarkus/pull/9872#discussion_r437557201", "bodyText": "Sure thing, just pushed another commit with the comments", "author": "aguibert", "createdAt": "2020-06-09T16:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MzE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "cfa2d644d290501f0f3bfa076ada88b366501618", "chunk": "diff --git a/extensions/hibernate-reactive/deployment/src/main/java/io/quarkus/hibernate/reactive/deployment/HibernateReactiveProcessor.java b/extensions/hibernate-reactive/deployment/src/main/java/io/quarkus/hibernate/reactive/deployment/HibernateReactiveProcessor.java\nindex aee48d48f4..25aaa67091 100644\n--- a/extensions/hibernate-reactive/deployment/src/main/java/io/quarkus/hibernate/reactive/deployment/HibernateReactiveProcessor.java\n+++ b/extensions/hibernate-reactive/deployment/src/main/java/io/quarkus/hibernate/reactive/deployment/HibernateReactiveProcessor.java\n\n@@ -208,6 +209,8 @@ public final class HibernateReactiveProcessor {\n                 defaultNullOrdering -> desc.getProperties().setProperty(AvailableSettings.DEFAULT_NULL_ORDERING,\n                         defaultNullOrdering));\n \n+        // TODO @AGG hibernate reactive properties\n+\n         // Logging\n         if (hibernateConfig.log.sql) {\n             desc.getProperties().setProperty(AvailableSettings.SHOW_SQL, \"true\");\n"}}, {"oid": "cfa2d644d290501f0f3bfa076ada88b366501618", "url": "https://github.com/quarkusio/quarkus/commit/cfa2d644d290501f0f3bfa076ada88b366501618", "message": "Block usage of persistence.xml for Hibernate Reactive", "committedDate": "2020-06-10T14:15:06Z", "type": "commit"}, {"oid": "08c17bdc91ea9923cb92aa9665af9eb284becae4", "url": "https://github.com/quarkusio/quarkus/commit/08c17bdc91ea9923cb92aa9665af9eb284becae4", "message": "Remove beans.xml from Hibernate Reactive ITs", "committedDate": "2020-06-10T14:15:08Z", "type": "commit"}, {"oid": "b2faaf14b79c0fb637c61f61ad5d6031bd7984df", "url": "https://github.com/quarkusio/quarkus/commit/b2faaf14b79c0fb637c61f61ad5d6031bd7984df", "message": "Review comments from Sanne", "committedDate": "2020-06-10T14:21:55Z", "type": "forcePushed"}, {"oid": "ff28fd71898934ef45999bf4588ca9db396362bb", "url": "https://github.com/quarkusio/quarkus/commit/ff28fd71898934ef45999bf4588ca9db396362bb", "message": "Merges and review comments from Sanne", "committedDate": "2020-06-10T14:44:26Z", "type": "commit"}, {"oid": "ff28fd71898934ef45999bf4588ca9db396362bb", "url": "https://github.com/quarkusio/quarkus/commit/ff28fd71898934ef45999bf4588ca9db396362bb", "message": "Merges and review comments from Sanne", "committedDate": "2020-06-10T14:44:26Z", "type": "forcePushed"}]}