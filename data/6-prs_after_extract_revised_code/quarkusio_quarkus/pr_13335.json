{"pr_number": 13335, "pr_title": "Create a new Resteasy Context Map", "pr_createdAt": "2020-11-17T07:29:22Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13335", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTkxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/13335#discussion_r524969911", "bodyText": "I think you should be using the variant that creates a new Closeable context : addCloseableContextDataLevel that you can use in a try-with-resource.", "author": "FroMage", "createdAt": "2020-11-17T08:32:23Z", "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java", "diffHunk": "@@ -127,8 +129,10 @@ private void dispatch(RoutingContext routingContext, InputStream is, VertxOutput\n                     dispatcher.getDispatcher(), vertxResponse, requestContext, executor);\n             vertxRequest.setInputStream(is);\n             try {\n-                ResteasyContext.pushContext(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n-                ResteasyContext.pushContext(RoutingContext.class, routingContext);\n+                Map<Class<?>, Object> map = new HashMap<>();\n+                map.put(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n+                map.put(RoutingContext.class, routingContext);\n+                ResteasyContext.pushContextDataMap(map);", "originalCommit": "8eab583c28406ca229b3383c6137aa5571268ada", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMzM4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/13335#discussion_r525033383", "bodyText": "What about async requests?", "author": "stuartwdouglas", "createdAt": "2020-11-17T10:08:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTkxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1OTczNw==", "url": "https://github.com/quarkusio/quarkus/pull/13335#discussion_r525159737", "bodyText": "Async requests need to capture this context anyway, since we've no idea what thread they'll be in when they get executed. This doesn't destroy anything, BTW. It just pops it from the current context stack and restore the previous context map.", "author": "FroMage", "createdAt": "2020-11-17T13:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTkxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "912d62eb7832d1f3914c847671be45e3212695b4", "chunk": "diff --git a/extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java b/extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java\nindex 7b5b9ecd2c..38502bac3d 100644\n--- a/extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java\n+++ b/extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java\n\n@@ -128,11 +128,10 @@ public class VertxRequestHandler implements Handler<RoutingContext> {\n                     hostSupplier,\n                     dispatcher.getDispatcher(), vertxResponse, requestContext, executor);\n             vertxRequest.setInputStream(is);\n-            try {\n-                Map<Class<?>, Object> map = new HashMap<>();\n-                map.put(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n-                map.put(RoutingContext.class, routingContext);\n-                ResteasyContext.pushContextDataMap(map);\n+            Map<Class<?>, Object> map = new HashMap<>();\n+            map.put(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n+            map.put(RoutingContext.class, routingContext);\n+            try (ResteasyContext.CloseableContext restCtx = ResteasyContext.addCloseableContextDataLevel(map)) {\n                 ContextUtil.pushContext(routingContext);\n                 dispatcher.service(ctx, request, response, vertxRequest, vertxResponse, true);\n             } catch (Failure e1) {\n"}}, {"oid": "912d62eb7832d1f3914c847671be45e3212695b4", "url": "https://github.com/quarkusio/quarkus/commit/912d62eb7832d1f3914c847671be45e3212695b4", "message": "Create a new Resteasy Context Map\n\nThis provides a slight performance advantage,\nbut most importantly will prevent an existing\nclient context from interfering with the server one.\n\nThis can happen if the authentication layer is using\nthe REST client to access external services.\n\nFixes #13317", "committedDate": "2020-11-17T21:45:52Z", "type": "commit"}, {"oid": "912d62eb7832d1f3914c847671be45e3212695b4", "url": "https://github.com/quarkusio/quarkus/commit/912d62eb7832d1f3914c847671be45e3212695b4", "message": "Create a new Resteasy Context Map\n\nThis provides a slight performance advantage,\nbut most importantly will prevent an existing\nclient context from interfering with the server one.\n\nThis can happen if the authentication layer is using\nthe REST client to access external services.\n\nFixes #13317", "committedDate": "2020-11-17T21:45:52Z", "type": "forcePushed"}]}