{"pr_number": 12610, "pr_title": "Externalize gradle/maven wrapper command from codestart template", "pr_createdAt": "2020-10-08T18:52:50Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12610", "timeline": [{"oid": "cb5fa666695413a8345c5f46a8a23b9bb9514e9e", "url": "https://github.com/quarkusio/quarkus/commit/cb5fa666695413a8345c5f46a8a23b9bb9514e9e", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-10T06:28:57Z", "type": "forcePushed"}, {"oid": "4cf3a7f1096786ebf395e1f3d44803c73ae9574d", "url": "https://github.com/quarkusio/quarkus/commit/4cf3a7f1096786ebf395e1f3d44803c73ae9574d", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-12T15:29:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxOTI3MA==", "url": "https://github.com/quarkusio/quarkus/pull/12610#discussion_r503819270", "bodyText": "I think those tests would fit better in QuarkusCodestartGenerationTest, QuarkusCodestartRunIT is there to run the generated codestarts..", "author": "ia3andy", "createdAt": "2020-10-13T09:51:22Z", "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/QuarkusCodestartRunIT.java", "diffHunk": "@@ -93,6 +94,49 @@ public void generateAzureFunctionsHttpExampleProjectRun() throws Exception {\n                 Collections.emptyMap());\n     }\n \n+    @Test\n+    public void generateGradleWrapperGithubAction() throws Exception {", "originalCommit": "4cf3a7f1096786ebf395e1f3d44803c73ae9574d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "647a3e0e2bbf3bc4bdf34122c937a0b254ff7ecf", "chunk": "diff --git a/integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/QuarkusCodestartRunIT.java b/integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/QuarkusCodestartRunIT.java\nindex 1254e1caa6..882c6b595b 100644\n--- a/integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/QuarkusCodestartRunIT.java\n+++ b/integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/QuarkusCodestartRunIT.java\n\n@@ -94,49 +93,6 @@ class QuarkusCodestartRunIT extends PlatformAwareTestBase {\n                 Collections.emptyMap());\n     }\n \n-    @Test\n-    public void generateGradleWrapperGithubAction() throws Exception {\n-        final String buildTool = \"gradle\";\n-        final String language = \"java\";\n-        final List<String> codestarts = Collections.singletonList(\"github-action\");\n-        final Path path = generateProject(buildTool, language, codestarts, Collections.emptyMap(),\n-                genName(buildTool, language, codestarts));\n-\n-        Path ciFile = path.resolve(\".github\").resolve(\"workflows\").resolve(\"ci.yml\");\n-        assertThat(ciFile).exists();\n-        List<String> content = Files.lines(ciFile).map(String::trim).collect(Collectors.toList());\n-        ;\n-        assertThat(content).contains(\"run: ./gradlew build\");\n-    }\n-\n-    @Test\n-    public void generateGradleNoWrapperGithubAction() throws Exception {\n-        final String buildTool = \"gradle\";\n-        final String language = \"kotlin\";\n-        final List<String> codestarts = Collections.singletonList(\"github-action\");\n-\n-        final String name = genName(buildTool, language, codestarts);\n-        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n-                .addData(getTestInputData(Collections.singletonMap(\"artifact-id\", name)))\n-                .buildTool(BuildTool.findTool(buildTool))\n-                .noBuildToolWrapper()\n-                .addCodestarts(codestarts)\n-                .addCodestart(language)\n-                .addData(Collections.emptyMap())\n-                .putData(DataKey.JAVA_VERSION.getKey(), System.getProperty(\"java.specification.version\"))\n-                .messageWriter(MessageWriter.debug())\n-                .build();\n-        final CodestartProjectDefinition projectDefinition = getCatalog().createProject(input);\n-        Path projectDir = testDirPath.resolve(name);\n-        projectDefinition.generate(projectDir);\n-\n-        Path ciFile = projectDir.resolve(\".github\").resolve(\"workflows\").resolve(\"ci.yml\");\n-        assertThat(ciFile).exists();\n-        List<String> content = Files.lines(ciFile).map(String::trim).collect(Collectors.toList());\n-        assertThat(content).contains(\"uses: eskatos/gradle-command-action@v1\");\n-        assertThat(content).contains(\"arguments: build\");\n-    }\n-\n     @Test\n     public void generateCustomizedRESTEasyProjectRun() throws Exception {\n         final HashMap<String, Object> data = new HashMap<>();\n"}}, {"oid": "647a3e0e2bbf3bc4bdf34122c937a0b254ff7ecf", "url": "https://github.com/quarkusio/quarkus/commit/647a3e0e2bbf3bc4bdf34122c937a0b254ff7ecf", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-13T19:36:47Z", "type": "forcePushed"}, {"oid": "97663c6112c56cbba6db7127bf83caba74b0e746", "url": "https://github.com/quarkusio/quarkus/commit/97663c6112c56cbba6db7127bf83caba74b0e746", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-14T08:33:39Z", "type": "forcePushed"}, {"oid": "de44915394bc0ee2db23769a5a668cb77958fb7e", "url": "https://github.com/quarkusio/quarkus/commit/de44915394bc0ee2db23769a5a668cb77958fb7e", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-14T09:59:31Z", "type": "forcePushed"}, {"oid": "a917d81c5fd6f4aeb58052045a90b0e214eebc10", "url": "https://github.com/quarkusio/quarkus/commit/a917d81c5fd6f4aeb58052045a90b0e214eebc10", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-14T16:50:37Z", "type": "commit"}, {"oid": "a917d81c5fd6f4aeb58052045a90b0e214eebc10", "url": "https://github.com/quarkusio/quarkus/commit/a917d81c5fd6f4aeb58052045a90b0e214eebc10", "message": "Externaliza gradle/maven command", "committedDate": "2020-10-14T16:50:37Z", "type": "forcePushed"}]}