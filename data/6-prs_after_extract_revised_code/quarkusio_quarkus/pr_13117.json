{"pr_number": 13117, "pr_title": "Knative traffic splitting", "pr_createdAt": "2020-11-04T14:01:45Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13117", "timeline": [{"oid": "5e69b2d981b34ed7592b6aab545c9ad1f15ffa4c", "url": "https://github.com/quarkusio/quarkus/commit/5e69b2d981b34ed7592b6aab545c9ad1f15ffa4c", "message": "feat: Introduce knative traffic splitting", "committedDate": "2020-11-04T13:37:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM2NTY4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/13117#discussion_r517365689", "bodyText": "Where is this class being used? I can't seem to find it anywhere else", "author": "geoand", "createdAt": "2020-11-04T14:04:47Z", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/RevisionTemplateConfig.java", "diffHunk": "@@ -0,0 +1,306 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.dekorate.kubernetes.annotation.ImagePullPolicy;\n+import io.dekorate.kubernetes.annotation.ServiceType;\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+@ConfigGroup\n+public class RevisionTemplateConfig {", "originalCommit": "b1db92edefdc8d4ce84ecbf2c371a21492c0745e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3MjE5Nw==", "url": "https://github.com/quarkusio/quarkus/pull/13117#discussion_r517372197", "bodyText": "Nowhere, I will remove it!", "author": "iocanel", "createdAt": "2020-11-04T14:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM2NTY4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b6c8a06fd478f759de818c1a65384c7e4723306f", "chunk": "diff --git a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/RevisionTemplateConfig.java b/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/RevisionTemplateConfig.java\ndeleted file mode 100644\nindex ddbd371eca..0000000000\n--- a/extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/RevisionTemplateConfig.java\n+++ /dev/null\n\n@@ -1,306 +0,0 @@\n-package io.quarkus.kubernetes.deployment;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-\n-import io.dekorate.kubernetes.annotation.ImagePullPolicy;\n-import io.dekorate.kubernetes.annotation.ServiceType;\n-import io.quarkus.runtime.annotations.ConfigGroup;\n-import io.quarkus.runtime.annotations.ConfigItem;\n-\n-@ConfigGroup\n-public class RevisionTemplateConfig {\n-\n-    /**\n-     * The name of the group this component belongs to\n-     */\n-    @ConfigItem\n-    Optional<String> partOf;\n-\n-    /**\n-     * The name of the revision.\n-     */\n-    @ConfigItem(defaultValue = \"${quarkus.container-image.name}\")\n-    Optional<String> name;\n-\n-    /**\n-     * The version of the revision.\n-     */\n-    @ConfigItem(defaultValue = \"${quarkus.container-image.tag}\")\n-    Optional<String> version;\n-\n-    /**\n-     * Custom labels to add to all resources\n-     */\n-    @ConfigItem\n-    Map<String, String> labels;\n-\n-    /**\n-     * Custom annotations to add to all resources\n-     */\n-    @ConfigItem\n-    Map<String, String> annotations;\n-\n-    /**\n-     * Environment variables to add to all containers.\n-     */\n-    @ConfigItem\n-    EnvVarsConfig env;\n-\n-    /**\n-     * Working directory\n-     */\n-    @ConfigItem\n-    Optional<String> workingDir;\n-\n-    /**\n-     * The commands\n-     */\n-    @ConfigItem\n-    Optional<List<String>> command;\n-\n-    /**\n-     * The arguments\n-     *\n-     * @return The arguments\n-     */\n-    @ConfigItem\n-    Optional<List<String>> arguments;\n-\n-    /**\n-     * The service account\n-     */\n-    @ConfigItem\n-    Optional<String> serviceAccount;\n-\n-    /**\n-     * The host under which the application is going to be exposed\n-     */\n-    @ConfigItem\n-    Optional<String> host;\n-\n-    /**\n-     * The application ports\n-     */\n-    @ConfigItem\n-    Map<String, PortConfig> ports;\n-\n-    /**\n-     * The type of service that will be generated for the application\n-     */\n-    @ConfigItem(defaultValue = \"ClusterIP\")\n-    ServiceType serviceType;\n-\n-    /**\n-     * Image pull policy\n-     */\n-    @ConfigItem(defaultValue = \"Always\")\n-    ImagePullPolicy imagePullPolicy;\n-\n-    /**\n-     * The image pull secret\n-     */\n-    @ConfigItem\n-    Optional<List<String>> imagePullSecrets;\n-\n-    /**\n-     * The liveness probe\n-     */\n-    @ConfigItem\n-    ProbeConfig livenessProbe;\n-\n-    /**\n-     * The readiness probe\n-     */\n-    @ConfigItem\n-    ProbeConfig readinessProbe;\n-\n-    /**\n-     * Volume mounts\n-     */\n-    @ConfigItem\n-    Map<String, MountConfig> mounts;\n-\n-    /**\n-     * Secret volumes\n-     */\n-    @ConfigItem\n-    Map<String, SecretVolumeConfig> secretVolumes;\n-\n-    /**\n-     * ConfigMap volumes\n-     */\n-    @ConfigItem\n-    Map<String, ConfigMapVolumeConfig> configMapVolumes;\n-\n-    /**\n-     * Git Repository volumes\n-     */\n-    @ConfigItem\n-    Map<String, GitRepoVolumeConfig> gitRepoVolumes;\n-\n-    /**\n-     * Persistent Volume Claim volumes\n-     */\n-    @ConfigItem\n-    Map<String, PvcVolumeConfig> pvcVolumes;\n-\n-    /**\n-     * AWS Elastic BlockStore volumes\n-     */\n-    @ConfigItem\n-    Map<String, AwsElasticBlockStoreVolumeConfig> awsElasticBlockStoreVolumes;\n-\n-    /**\n-     * Azure file volumes\n-     */\n-    @ConfigItem\n-    Map<String, AzureFileVolumeConfig> azureFileVolumes;\n-\n-    /**\n-     * Azure disk volumes\n-     */\n-    @ConfigItem\n-    Map<String, AzureDiskVolumeConfig> azureDiskVolumes;\n-\n-    /**\n-     * Init containers\n-     */\n-    @ConfigItem\n-    Map<String, ContainerConfig> initContainers;\n-\n-    /**\n-     * Sidecar containers\n-     */\n-    @ConfigItem\n-    Map<String, ContainerConfig> containers;\n-\n-    /**\n-     * The host aliases\n-     */\n-    @ConfigItem\n-    Map<String, HostAliasConfig> hostAliases;\n-\n-    /**\n-     * Resources requirements\n-     */\n-    @ConfigItem\n-    ResourcesConfig resources;\n-\n-    public Optional<String> getPartOf() {\n-        return partOf;\n-    }\n-\n-    public Optional<String> getName() {\n-        return name;\n-    }\n-\n-    public Optional<String> getVersion() {\n-        return version;\n-    }\n-\n-    public Map<String, String> getLabels() {\n-        return labels;\n-    }\n-\n-    public Map<String, String> getAnnotations() {\n-        return annotations;\n-    }\n-\n-    public Optional<String> getWorkingDir() {\n-        return workingDir;\n-    }\n-\n-    public Optional<List<String>> getCommand() {\n-        return command;\n-    }\n-\n-    public Optional<List<String>> getArguments() {\n-        return arguments;\n-    }\n-\n-    public Optional<String> getServiceAccount() {\n-        return serviceAccount;\n-    }\n-\n-    public Optional<String> getHost() {\n-        return host;\n-    }\n-\n-    public Map<String, PortConfig> getPorts() {\n-        return ports;\n-    }\n-\n-    public ServiceType getServiceType() {\n-        return serviceType;\n-    }\n-\n-    public ImagePullPolicy getImagePullPolicy() {\n-        return imagePullPolicy;\n-    }\n-\n-    public Optional<List<String>> getImagePullSecrets() {\n-        return imagePullSecrets;\n-    }\n-\n-    public ProbeConfig getLivenessProbe() {\n-        return livenessProbe;\n-    }\n-\n-    public ProbeConfig getReadinessProbe() {\n-        return readinessProbe;\n-    }\n-\n-    public Map<String, MountConfig> getMounts() {\n-        return mounts;\n-    }\n-\n-    public Map<String, SecretVolumeConfig> getSecretVolumes() {\n-        return secretVolumes;\n-    }\n-\n-    public Map<String, ConfigMapVolumeConfig> getConfigMapVolumes() {\n-        return configMapVolumes;\n-    }\n-\n-    public Map<String, GitRepoVolumeConfig> getGitRepoVolumes() {\n-        return gitRepoVolumes;\n-    }\n-\n-    public Map<String, PvcVolumeConfig> getPvcVolumes() {\n-        return pvcVolumes;\n-    }\n-\n-    public Map<String, AwsElasticBlockStoreVolumeConfig> getAwsElasticBlockStoreVolumes() {\n-        return awsElasticBlockStoreVolumes;\n-    }\n-\n-    public Map<String, AzureFileVolumeConfig> getAzureFileVolumes() {\n-        return azureFileVolumes;\n-    }\n-\n-    public Map<String, AzureDiskVolumeConfig> getAzureDiskVolumes() {\n-        return azureDiskVolumes;\n-    }\n-\n-    public Map<String, ContainerConfig> getInitContainers() {\n-        return initContainers;\n-    }\n-\n-    public Map<String, ContainerConfig> getSidecars() {\n-        return containers;\n-    }\n-\n-    public Map<String, HostAliasConfig> getHostAliases() {\n-        return hostAliases;\n-    }\n-\n-    public ResourcesConfig getResources() {\n-        return resources;\n-    }\n-\n-    public EnvVarsConfig getEnv() {\n-        return env;\n-    }\n-}\n"}}, {"oid": "b6c8a06fd478f759de818c1a65384c7e4723306f", "url": "https://github.com/quarkusio/quarkus/commit/b6c8a06fd478f759de818c1a65384c7e4723306f", "message": "doc: knative traffic splitting configuration", "committedDate": "2020-11-04T14:23:45Z", "type": "forcePushed"}, {"oid": "b6c8a06fd478f759de818c1a65384c7e4723306f", "url": "https://github.com/quarkusio/quarkus/commit/b6c8a06fd478f759de818c1a65384c7e4723306f", "message": "doc: knative traffic splitting configuration", "committedDate": "2020-11-04T14:23:45Z", "type": "commit"}]}