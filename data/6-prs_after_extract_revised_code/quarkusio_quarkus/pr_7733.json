{"pr_number": 7733, "pr_title": "Qute enhancements", "pr_createdAt": "2020-03-10T13:55:40Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7733", "timeline": [{"oid": "c7d105653826f5892215aef509885dc7ac721c59", "url": "https://github.com/quarkusio/quarkus/commit/c7d105653826f5892215aef509885dc7ac721c59", "message": "Tests for checked templates", "committedDate": "2020-03-10T14:59:07Z", "type": "forcePushed"}, {"oid": "6b6b195bf2d57cde907d3529d33998e6b33ffe1e", "url": "https://github.com/quarkusio/quarkus/commit/6b6b195bf2d57cde907d3529d33998e6b33ffe1e", "message": "Added support for native method variant", "committedDate": "2020-04-21T14:56:43Z", "type": "forcePushed"}, {"oid": "04c932cdf93cab95d5dd4fcdd632847db396b43b", "url": "https://github.com/quarkusio/quarkus/commit/04c932cdf93cab95d5dd4fcdd632847db396b43b", "message": "For some reason, the tests don't pass if I don't explicitely add this config", "committedDate": "2020-05-19T09:18:49Z", "type": "forcePushed"}, {"oid": "b5e26b311cd815380ac88874e1b7bc18fef84f53", "url": "https://github.com/quarkusio/quarkus/commit/b5e26b311cd815380ac88874e1b7bc18fef84f53", "message": "Support native methods for mail templates, check native method return types", "committedDate": "2020-05-26T15:59:32Z", "type": "forcePushed"}, {"oid": "32618a78acb45923e692efc971b818a1fc3e4949", "url": "https://github.com/quarkusio/quarkus/commit/32618a78acb45923e692efc971b818a1fc3e4949", "message": "Backport #9635 since I've moved JandexUtil into AsmUtil", "committedDate": "2020-05-27T14:18:31Z", "type": "forcePushed"}, {"oid": "99e180ccf7432ea3b9a99cb698587ed0450bd708", "url": "https://github.com/quarkusio/quarkus/commit/99e180ccf7432ea3b9a99cb698587ed0450bd708", "message": "Documented the new type-safe native methods", "committedDate": "2020-05-28T12:26:39Z", "type": "forcePushed"}, {"oid": "4daf855e9a474b72c080d6084a47407e9490aac9", "url": "https://github.com/quarkusio/quarkus/commit/4daf855e9a474b72c080d6084a47407e9490aac9", "message": "Documented the new type-safe native methods", "committedDate": "2020-06-03T14:29:44Z", "type": "forcePushed"}, {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "url": "https://github.com/quarkusio/quarkus/commit/618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "message": "Documented the new type-safe native methods", "committedDate": "2020-06-11T09:23:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5NDg0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438694849", "bodyText": "We should add some javadoc here...", "author": "mkouba", "createdAt": "2020-06-11T10:37:31Z", "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.quarkus.qute.api;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+public @interface CheckedTemplate {", "originalCommit": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwMzMxMw==", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r440703313", "bodyText": "Indeed.", "author": "FroMage", "createdAt": "2020-06-16T09:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5NDg0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "chunk": "diff --git a/extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java b/extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java\nindex 190481c8f2..5d67cb64c2 100644\n--- a/extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java\n+++ b/extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java\n\n@@ -6,6 +6,51 @@ import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\n \n+import io.quarkus.qute.TemplateInstance;\n+\n+/**\n+ * <p>\n+ * If you place this annotation on a class, all its <code>native static</code> methods will be used to declare\n+ * templates and the list of parameters they require.\n+ * <p>\n+ * If this is placed on an inner class of the class <code>X</code>, a <code>native static</code> method of the name\n+ * <code>foo</code> will refer to a template at the path <code>X/foo</code> (template file extensions are\n+ * not part of the method name) relative to your templates root.\n+ * <p>\n+ * If this is placed on a toplevel class, a <code>native static</code> method of the name\n+ * <code>foo</code> will refer to a template at the path <code>foo</code> (template file extensions are\n+ * not part of the method name) at the toplevel of your templates root.\n+ * <p>\n+ * Each parameter of the <code>native static</code> will be used to validate the template at build time, to\n+ * make sure that those parameters are used properly in a type-safe manner. The return type of each\n+ * <code>native static</code> method should be {@link TemplateInstance}.\n+ * <p>\n+ * Example:\n+ * <p>\n+ * \n+ * <pre>\n+ * {\n+ *     &#64;code\n+ *     &#64;Path(\"item\")\n+ *     public class ItemResource {\n+ * \n+ *         &#64;CheckedTemplate\n+ *         class Templates {\n+ *             // defines a template at ItemResource/item, taking an Item parameter named item\n+ *             public static native TemplateInstance item(Item item);\n+ *         }\n+ * \n+ *         &#64;GET\n+ *         &#64;Path(\"{id}\")\n+ *         &#64;Produces(MediaType.TEXT_HTML)\n+ *         public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+ *             // instantiate that template and pass it the required template parameter\n+ *             return Templates.item(service.findItem(id));\n+ *         }\n+ *     }\n+ * }\n+ * </pre>\n+ */\n @Documented\n @Retention(RetentionPolicy.RUNTIME)\n @Target(ElementType.TYPE)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Nzk0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438697947", "bodyText": "I'm not sure about the name... maybe just RestTemplate? IDK maybe it's OK. But it should reside in the io.quarkus.resteasy.qute package as it's a public API. Plus it wouldn't hurt to make it final with a private constructor.", "author": "mkouba", "createdAt": "2020-06-11T10:44:22Z", "path": "extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.resteasy.qute.runtime;\n+\n+import javax.ws.rs.container.ResourceInfo;\n+\n+import org.jboss.resteasy.core.ResteasyContext;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.qute.Engine;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.TemplateInstance;\n+\n+public class ResteasyTemplate {", "originalCommit": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyNDQwNA==", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r440724404", "bodyText": "OK changed.", "author": "FroMage", "createdAt": "2020-06-16T09:45:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Nzk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "chunk": "diff --git a/extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java b/extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/RestTemplate.java\nsimilarity index 89%\nrename from extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java\nrename to extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/RestTemplate.java\nindex c14b22e6eb..dc8780c303 100644\n--- a/extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java\n+++ b/extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/RestTemplate.java\n\n@@ -1,4 +1,4 @@\n-package io.quarkus.resteasy.qute.runtime;\n+package io.quarkus.resteasy.qute;\n \n import javax.ws.rs.container.ResourceInfo;\n \n"}}, {"oid": "3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "url": "https://github.com/quarkusio/quarkus/commit/3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "message": "PR comment fixes", "committedDate": "2020-06-16T09:44:46Z", "type": "forcePushed"}, {"oid": "7917f25e963ddc7e44363400f2dfd59fc00d79a1", "url": "https://github.com/quarkusio/quarkus/commit/7917f25e963ddc7e44363400f2dfd59fc00d79a1", "message": "Qute: add parser hook to set up parser before it parses", "committedDate": "2020-06-17T14:46:36Z", "type": "commit"}, {"oid": "7917f25e963ddc7e44363400f2dfd59fc00d79a1", "url": "https://github.com/quarkusio/quarkus/commit/7917f25e963ddc7e44363400f2dfd59fc00d79a1", "message": "Qute: add parser hook to set up parser before it parses", "committedDate": "2020-06-17T14:46:36Z", "type": "forcePushed"}]}