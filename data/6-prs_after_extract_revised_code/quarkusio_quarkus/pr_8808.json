{"pr_number": 8808, "pr_title": "Cache the Java compiler objects", "pr_createdAt": "2020-04-24T05:10:12Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8808", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMwOTExNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8808#discussion_r414309115", "bodyText": "Does fileManager.close() need to be called before this?", "author": "geoand", "createdAt": "2020-04-24T05:44:13Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/JavaCompilationProvider.java", "diffHunk": "@@ -64,6 +74,14 @@ public void compile(Set<File> filesToCompile, Context context) {\n                 System.out.format(\"%s, line %d in %s\", diagnostic.getMessage(null), diagnostic.getLineNumber(),\n                         diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n             }\n+            if (!fileManagerDiagnostics.getDiagnostics().isEmpty()) {\n+                for (Diagnostic<? extends JavaFileObject> diagnostic : fileManagerDiagnostics.getDiagnostics()) {\n+                    System.out.format(\"%s, line %d in %s\", diagnostic.getMessage(null), diagnostic.getLineNumber(),\n+                            diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n+                }\n+                fileManagerDiagnostics = null;\n+                fileManager = null;", "originalCommit": "e3eaca20b3767e5a5afa22ea9fe7acebf964a12c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7dcf8c6f332eed4f6daeb200ca6e1740cd8dfcbb", "chunk": "diff --git a/core/deployment/src/main/java/io/quarkus/deployment/dev/JavaCompilationProvider.java b/core/deployment/src/main/java/io/quarkus/deployment/dev/JavaCompilationProvider.java\nindex 01c073f814..149e86a37b 100644\n--- a/core/deployment/src/main/java/io/quarkus/deployment/dev/JavaCompilationProvider.java\n+++ b/core/deployment/src/main/java/io/quarkus/deployment/dev/JavaCompilationProvider.java\n\n@@ -79,6 +79,7 @@ public class JavaCompilationProvider implements CompilationProvider {\n                     System.out.format(\"%s, line %d in %s\", diagnostic.getMessage(null), diagnostic.getLineNumber(),\n                             diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n                 }\n+                fileManager.close();\n                 fileManagerDiagnostics = null;\n                 fileManager = null;\n             }\n"}}, {"oid": "7dcf8c6f332eed4f6daeb200ca6e1740cd8dfcbb", "url": "https://github.com/quarkusio/quarkus/commit/7dcf8c6f332eed4f6daeb200ca6e1740cd8dfcbb", "message": "Cache the Java compiler objects\n\nThis seems to give around 100ms restart speed boost", "committedDate": "2020-04-24T07:05:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0Nzg5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/8808#discussion_r414347895", "bodyText": "Maybe we could add default close method on this interface?\nSaying that because kogito's implementation (cc @evacchi) would break otherwise.", "author": "geoand", "createdAt": "2020-04-24T07:12:32Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/CompilationProvider.java", "diffHunk": "@@ -9,7 +10,7 @@\n import java.util.List;\n import java.util.Set;\n \n-public interface CompilationProvider {\n+public interface CompilationProvider extends Closeable {", "originalCommit": "7dcf8c6f332eed4f6daeb200ca6e1740cd8dfcbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MTQxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/8808#discussion_r414441411", "bodyText": "IIRC we extend JavaCompilationProvider /cc @mariofusco", "author": "evacchi", "createdAt": "2020-04-24T09:43:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0Nzg5NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8ffee4ecbce2a2a3ba8b62df8168d163d84e13e1", "url": "https://github.com/quarkusio/quarkus/commit/8ffee4ecbce2a2a3ba8b62df8168d163d84e13e1", "message": "Cache the Java compiler objects\n\nThis seems to give around 100ms restart speed boost", "committedDate": "2020-04-24T08:10:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4MzMxOA==", "url": "https://github.com/quarkusio/quarkus/pull/8808#discussion_r414383318", "bodyText": "This won't work :).", "author": "gsmet", "createdAt": "2020-04-24T08:13:07Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/recording/BytecodeRecorderImpl.java", "diffHunk": "@@ -81,7 +81,7 @@\n  * - Any arbitrary object via the {@link #registerSubstitution(Class, Class, Class)} mechanism\n  * - arrays, lists and maps of the above\n  */\n-public class BytecodeRecorderImpl implements RecorderContext {\n+public class BytecodeRecorderImpl implements RecorderContext {proxy-cache", "originalCommit": "8ffee4ecbce2a2a3ba8b62df8168d163d84e13e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "960f0457c4a13c5efd0701e2acfe9775690335da", "chunk": "diff --git a/core/deployment/src/main/java/io/quarkus/deployment/recording/BytecodeRecorderImpl.java b/core/deployment/src/main/java/io/quarkus/deployment/recording/BytecodeRecorderImpl.java\nindex 018fec8b63..9176291ea0 100644\n--- a/core/deployment/src/main/java/io/quarkus/deployment/recording/BytecodeRecorderImpl.java\n+++ b/core/deployment/src/main/java/io/quarkus/deployment/recording/BytecodeRecorderImpl.java\n\n@@ -81,7 +81,7 @@ import io.quarkus.runtime.StartupTask;\n  * - Any arbitrary object via the {@link #registerSubstitution(Class, Class, Class)} mechanism\n  * - arrays, lists and maps of the above\n  */\n-public class BytecodeRecorderImpl implements RecorderContext {proxy-cache\n+public class BytecodeRecorderImpl implements RecorderContext {\n \n     private static final Class<?> SINGLETON_LIST_CLASS = Collections.singletonList(1).getClass();\n     private static final Class<?> SINGLETON_SET_CLASS = Collections.singleton(1).getClass();\n"}}, {"oid": "960f0457c4a13c5efd0701e2acfe9775690335da", "url": "https://github.com/quarkusio/quarkus/commit/960f0457c4a13c5efd0701e2acfe9775690335da", "message": "Cache the Java compiler objects\n\nThis seems to give around 100ms restart speed boost", "committedDate": "2020-04-24T08:57:37Z", "type": "forcePushed"}, {"oid": "175665d862b98b13c8e33a85c9fbbc352952b12e", "url": "https://github.com/quarkusio/quarkus/commit/175665d862b98b13c8e33a85c9fbbc352952b12e", "message": "Cache the Java compiler objects\n\nThis seems to give around 100ms restart speed boost", "committedDate": "2020-04-24T11:14:55Z", "type": "commit"}, {"oid": "175665d862b98b13c8e33a85c9fbbc352952b12e", "url": "https://github.com/quarkusio/quarkus/commit/175665d862b98b13c8e33a85c9fbbc352952b12e", "message": "Cache the Java compiler objects\n\nThis seems to give around 100ms restart speed boost", "committedDate": "2020-04-24T11:14:55Z", "type": "forcePushed"}]}