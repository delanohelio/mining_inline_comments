{"pr_number": 11798, "pr_title": "Add the @TestTransaction annotation", "pr_createdAt": "2020-09-02T02:59:30Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/11798", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NjY0NA==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r481866644", "bodyText": "\"The allows\" is a typo probably?", "author": "mkouba", "createdAt": "2020-09-02T08:10:14Z", "path": "test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.test;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.interceptor.InterceptorBinding;\n+\n+/**\n+ * Indicates that this method should be run in a rollback only transaction.\n+ *\n+ * The allows the test method to modify the database as required, and then have", "originalCommit": "f7b47c80524d067315cbc541a1d3903e21084f2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNzk1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484207952", "bodyText": "Typo still present...", "author": "mkouba", "createdAt": "2020-09-07T06:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NjY0NA=="}], "type": "inlineReview", "revised_code": {"commit": "3a2e6701a38388f7e4e5d2d7cbbb4eeec809810c", "chunk": "diff --git a/test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java b/test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java\nindex 64abd0a6b1..8359b584bf 100644\n--- a/test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java\n+++ b/test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java\n\n@@ -10,7 +10,7 @@ import javax.interceptor.InterceptorBinding;\n /**\n  * Indicates that this method should be run in a rollback only transaction.\n  *\n- * The allows the test method to modify the database as required, and then have\n+ * This allows the test method to modify the database as required, and then have\n  * these changes reverted at the end of the method.\n  *\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjU0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r481872545", "bodyText": "Hm, so you generate an interceptor class because you can't add the @TestTransaction interceptor binding, right? Ok, that's probably the simplest solution. However, I'd move as much as possible logic to the parent class, i.e. injection field of UserTransaction and the whole @AroundInvoke method. If it doesn't work then we have a bug in ArC...", "author": "mkouba", "createdAt": "2020-09-02T08:16:50Z", "path": "extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java", "diffHunk": "@@ -96,6 +114,40 @@ public void build(NarayanaJtaRecorder recorder,\n         recorder.setDefaultTimeout(transactions);\n     }\n \n+    @BuildStep\n+    void testTx(LaunchModeBuildItem lm, BuildProducer<GeneratedBeanBuildItem> generatedBeanBuildItemBuildProducer) {", "originalCommit": "f7b47c80524d067315cbc541a1d3903e21084f2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNjIxNg==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r482716216", "bodyText": "It didn't work, although I did not have time to look into why.", "author": "stuartwdouglas", "createdAt": "2020-09-03T05:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyMTMxMA==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r482721310", "bodyText": "Maybe it's because the parent class is not part of the index?", "author": "mkouba", "createdAt": "2020-09-03T05:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf", "chunk": "diff --git a/extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java b/extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java\nindex 565a927bbd..70128739c5 100644\n--- a/extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java\n+++ b/extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java\n\n@@ -114,38 +107,22 @@ class NarayanaJtaProcessor {\n         recorder.setDefaultTimeout(transactions);\n     }\n \n-    @BuildStep\n-    void testTx(LaunchModeBuildItem lm, BuildProducer<GeneratedBeanBuildItem> generatedBeanBuildItemBuildProducer) {\n-        if (lm.getLaunchMode() != LaunchMode.TEST) {\n-            return;\n-        }\n+    @BuildStep(onlyIf = IsTest.class)\n+    void testTx(BuildProducer<GeneratedBeanBuildItem> generatedBeanBuildItemBuildProducer,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans) {\n         //generate the annotated interceptor with gizmo\n         //all the logic is in the parent, but we don't have access to the\n         //binding annotation here\n-        try (ClassCreator c = new ClassCreator(new GeneratedBeanGizmoAdaptor(generatedBeanBuildItemBuildProducer),\n-                TestTransactionInterceptor.class.getName() + \"Generated\", null, TestTransactionInterceptor.class.getName())) {\n-            c.addAnnotation(\"io.quarkus.test.TestTransaction\");\n+        try (ClassCreator c = ClassCreator.builder()\n+                .classOutput(new GeneratedBeanGizmoAdaptor(generatedBeanBuildItemBuildProducer)).className(\n+                        TestTransactionInterceptor.class.getName() + \"Generated\")\n+                .superClass(TestTransactionInterceptor.class).build()) {\n+            c.addAnnotation(TEST_TRANSACTION);\n             c.addAnnotation(Interceptor.class.getName());\n             c.addAnnotation(Priority.class).addValue(\"value\", Interceptor.Priority.PLATFORM_BEFORE + 200);\n-\n-            FieldCreator field = c.getFieldCreator(\"ut\", UserTransaction.class);\n-            field.setModifiers(Modifier.PUBLIC);\n-            field\n-                    .addAnnotation(Inject.class);\n-\n-            MethodCreator m = c.getMethodCreator(\"work\", Object.class, InvocationContext.class);\n-            m.addAnnotation(AroundInvoke.class);\n-            m.addException(Exception.class);\n-\n-            ResultHandle ut = m.readInstanceField(FieldDescriptor.of(c.getClassName(), \"ut\", UserTransaction.class),\n-                    m.getThis());\n-            ResultHandle result = m\n-                    .invokeStaticMethod(MethodDescriptor.ofMethod(TestTransactionInterceptor.class, \"intercept\", Object.class,\n-                            UserTransaction.class, InvocationContext.class), ut, m.getMethodParam(0));\n-\n-            m.returnValue(result);\n         }\n-\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClass(TestTransactionInterceptor.class)\n+                .addBeanClass(TEST_TRANSACTION).build());\n     }\n \n     @BuildStep\n"}}, {"oid": "cda28c3221ed1c3e6f3b7a6d40d486a7f36801f4", "url": "https://github.com/quarkusio/quarkus/commit/cda28c3221ed1c3e6f3b7a6d40d486a7f36801f4", "message": "Add the @TestTransaction annotation\n\nThis allows you to run tests in a rollback only transaction.\n\nFixes #6463", "committedDate": "2020-09-07T05:15:51Z", "type": "forcePushed"}, {"oid": "3a2e6701a38388f7e4e5d2d7cbbb4eeec809810c", "url": "https://github.com/quarkusio/quarkus/commit/3a2e6701a38388f7e4e5d2d7cbbb4eeec809810c", "message": "Add the @TestTransaction annotation\n\nThis allows you to run tests in a rollback only transaction.\n\nFixes #6463", "committedDate": "2020-09-07T06:32:15Z", "type": "forcePushed"}, {"oid": "84d816cd4336781ed13cbdc7d56ee3bb26020448", "url": "https://github.com/quarkusio/quarkus/commit/84d816cd4336781ed13cbdc7d56ee3bb26020448", "message": "Add the @TestTransaction annotation\n\nThis allows you to run tests in a rollback only transaction.\n\nFixes #6463", "committedDate": "2020-09-07T12:46:23Z", "type": "commit"}, {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf", "url": "https://github.com/quarkusio/quarkus/commit/a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf", "message": "@TestTransaction - move logic to the TestTransactionInterceptor class\n\n- add basic support for interceptor's inheritance\n- other unsupported use cases are described here:\nhttps://github.com/quarkusio/quarkus/issues/11942", "committedDate": "2020-09-07T14:00:59Z", "type": "commit"}, {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf", "url": "https://github.com/quarkusio/quarkus/commit/a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf", "message": "@TestTransaction - move logic to the TestTransactionInterceptor class\n\n- add basic support for interceptor's inheritance\n- other unsupported use cases are described here:\nhttps://github.com/quarkusio/quarkus/issues/11942", "committedDate": "2020-09-07T14:00:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484473799", "bodyText": "Thanks for having considered my flush()-suggestion. Very cool approach with this new TestTransactionInterceptor!\nI am wondering whether this block could kick in cases where it is not really needed? Usually ServiceLoader calls are not super-cheap.\nI used to apply https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom in my projects but I don't know whether this would make any difference here.", "author": "famod", "createdAt": "2020-09-07T14:45:23Z", "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.narayana.jta.runtime.interceptor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.InvocationContext;\n+import javax.transaction.UserTransaction;\n+\n+import io.quarkus.narayana.jta.runtime.test.TestTransactionCallback;\n+\n+public class TestTransactionInterceptor {\n+\n+    static final List<TestTransactionCallback> CALLBACKS;\n+\n+    static {", "originalCommit": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3ODQxMQ==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484478411", "bodyText": "Hm, the callbacks are only loaded once per test config...", "author": "mkouba", "createdAt": "2020-09-07T14:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3OTc3OA==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484479778", "bodyText": "That said, we could easily turn the list into a io.quarkus.arc.impl.LazyValue<List<TestTransactionCallback>> ...", "author": "mkouba", "createdAt": "2020-09-07T14:57:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2OTY3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484569673", "bodyText": "The current code is fine. ServiceLoader is expensive in terms of 'don't do this every request so you are doing it tens of thousands of times per second', its fine for this.", "author": "stuartwdouglas", "createdAt": "2020-09-07T21:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MTA4Nw==", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484571087", "bodyText": "Ok, thanks for your feedback.", "author": "famod", "createdAt": "2020-09-07T21:35:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}], "type": "inlineReview", "revised_code": null}]}