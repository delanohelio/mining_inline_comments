{"pr_number": 7526, "pr_title": "Fix metrics of the default Agroal data source", "pr_createdAt": "2020-03-03T08:27:24Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7526", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4NzY5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7526#discussion_r386887695", "bodyText": "Sorry I missed that but... could we adjust that, pass the name to the gauge and counter and use DataSourceUtil.isDefault() there?\nThat would be more consistent and avoid this sort of issues.", "author": "gsmet", "createdAt": "2020-03-03T09:19:15Z", "path": "extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java", "diffHunk": "@@ -551,89 +551,91 @@ void registerMetrics(\n             boolean metricsEnabledForThisDatasource = dataSourcesBuildTimeConfig.metricsEnabled &&\n                     aggregatedDataSourceBuildTimeConfig.getJdbcConfig().enableMetrics.orElse(true);\n             Tag tag = new Tag(\"datasource\", DataSourceUtil.isDefault(dataSourceName) ? \"default\" : dataSourceName);\n+            // Metric classes expect null as the name for the default DS\n+            String dataSourceNameOrNull = DataSourceUtil.isDefault(dataSourceName) ? null : dataSourceName;", "originalCommit": "0518b2b1962ffdf392bc46fb06f1adf9f01055b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg5NzEwOA==", "url": "https://github.com/quarkusio/quarkus/pull/7526#discussion_r386897108", "bodyText": "Sounds like a good idea. Done", "author": "jmartisk", "createdAt": "2020-03-03T09:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4NzY5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8c7a54ac156dcaa82bb9ae2b55a36e9e49c530d9", "chunk": "diff --git a/extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java b/extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java\nindex a096c7cb16..c2f06df026 100644\n--- a/extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java\n+++ b/extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java\n\n@@ -551,91 +551,89 @@ class AgroalProcessor {\n             boolean metricsEnabledForThisDatasource = dataSourcesBuildTimeConfig.metricsEnabled &&\n                     aggregatedDataSourceBuildTimeConfig.getJdbcConfig().enableMetrics.orElse(true);\n             Tag tag = new Tag(\"datasource\", DataSourceUtil.isDefault(dataSourceName) ? \"default\" : dataSourceName);\n-            // Metric classes expect null as the name for the default DS\n-            String dataSourceNameOrNull = DataSourceUtil.isDefault(dataSourceName) ? null : dataSourceName;\n             String configRootName = \"datasource\";\n             metrics.produce(new MetricBuildItem(activeCountMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"activeCount\"),\n+                    new AgroalGauge(dataSourceName, \"activeCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(maxUsedCountMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"maxUsedCount\"),\n+                    new AgroalGauge(dataSourceName, \"maxUsedCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(awaitingCountMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"awaitingCount\"),\n+                    new AgroalGauge(dataSourceName, \"awaitingCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(availableCountMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"availableCount\"),\n+                    new AgroalGauge(dataSourceName, \"availableCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(blockingTimeAverageMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"blockingTimeAverage\"),\n+                    new AgroalGauge(dataSourceName, \"blockingTimeAverage\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(blockingTimeMaxMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"blockingTimeMax\"),\n+                    new AgroalGauge(dataSourceName, \"blockingTimeMax\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(blockingTimeTotalMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"blockingTimeTotal\"),\n+                    new AgroalGauge(dataSourceName, \"blockingTimeTotal\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(creationTimeAverageMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"creationTimeAverage\"),\n+                    new AgroalGauge(dataSourceName, \"creationTimeAverage\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(creationTimeMaxMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"creationTimeMax\"),\n+                    new AgroalGauge(dataSourceName, \"creationTimeMax\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(creationTimeTotalMetadata,\n-                    new AgroalGauge(dataSourceNameOrNull, \"creationTimeTotal\"),\n+                    new AgroalGauge(dataSourceName, \"creationTimeTotal\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(acquireCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"acquireCount\"),\n+                    new AgroalCounter(dataSourceName, \"acquireCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(creationCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"creationCount\"),\n+                    new AgroalCounter(dataSourceName, \"creationCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(leakDetectionCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"leakDetectionCount\"),\n+                    new AgroalCounter(dataSourceName, \"leakDetectionCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(destroyCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"destroyCount\"),\n+                    new AgroalCounter(dataSourceName, \"destroyCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(flushCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"flushCount\"),\n+                    new AgroalCounter(dataSourceName, \"flushCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(invalidCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"invalidCount\"),\n+                    new AgroalCounter(dataSourceName, \"invalidCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n             metrics.produce(new MetricBuildItem(reapCountMetadata,\n-                    new AgroalCounter(dataSourceNameOrNull, \"reapCount\"),\n+                    new AgroalCounter(dataSourceName, \"reapCount\"),\n                     metricsEnabledForThisDatasource,\n                     configRootName,\n                     tag));\n"}}, {"oid": "8c7a54ac156dcaa82bb9ae2b55a36e9e49c530d9", "url": "https://github.com/quarkusio/quarkus/commit/8c7a54ac156dcaa82bb9ae2b55a36e9e49c530d9", "message": "Fix metrics of the default Agroal data source", "committedDate": "2020-03-03T09:34:06Z", "type": "forcePushed"}, {"oid": "88a86bf88281e26a4232767582c7fa926c5349b5", "url": "https://github.com/quarkusio/quarkus/commit/88a86bf88281e26a4232767582c7fa926c5349b5", "message": "Fix metrics of the default Agroal data source", "committedDate": "2020-03-03T11:05:22Z", "type": "commit"}, {"oid": "88a86bf88281e26a4232767582c7fa926c5349b5", "url": "https://github.com/quarkusio/quarkus/commit/88a86bf88281e26a4232767582c7fa926c5349b5", "message": "Fix metrics of the default Agroal data source", "committedDate": "2020-03-03T11:05:22Z", "type": "forcePushed"}]}