{"pr_number": 10070, "pr_title": "Make YAML configuration work for Bootstrap Config", "pr_createdAt": "2020-06-17T09:40:58Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10070", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwMTg1OA==", "url": "https://github.com/quarkusio/quarkus/pull/10070#discussion_r441501858", "bodyText": "Maybe it's me, but the name is kinda confusing. Maybe something like AdditionalConfigSourceProviderBuildItem ?", "author": "gastaldi", "createdAt": "2020-06-17T12:20:32Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigProviderBuildItem.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.deployment.builditem;\n+\n+import org.eclipse.microprofile.config.spi.ConfigSourceProvider;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+\n+/**\n+ * Build item to use when an additional {@link ConfigSourceProvider} needs to be\n+ * registered to the Bootstrap Config setup.\n+ * This is needed because during Bootstrap Config setup, we don't auto-discover providers\n+ * but we do want for example the YAML provider to be enabled.\n+ */\n+public final class AdditionalBootstrapConfigProviderBuildItem extends MultiBuildItem {", "originalCommit": "5e0a473034c361a26628f1515ab3d5c4f6503f95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwNTYxOA==", "url": "https://github.com/quarkusio/quarkus/pull/10070#discussion_r441505618", "bodyText": "You have a point, I'll make it AdditionalBootstrapConfigSourceProviderBuildItem", "author": "geoand", "createdAt": "2020-06-17T12:27:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwMTg1OA=="}], "type": "inlineReview", "revised_code": {"commit": "b7cff0d3a9f6e0c0c066b3433f3765bb5e33a78a", "chunk": "diff --git a/core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigProviderBuildItem.java b/core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigSourceProviderBuildItem.java\nsimilarity index 77%\nrename from core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigProviderBuildItem.java\nrename to core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigSourceProviderBuildItem.java\nindex e3dcd2faee..6120348bb6 100644\n--- a/core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigProviderBuildItem.java\n+++ b/core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigSourceProviderBuildItem.java\n\n@@ -10,11 +10,11 @@ import io.quarkus.builder.item.MultiBuildItem;\n  * This is needed because during Bootstrap Config setup, we don't auto-discover providers\n  * but we do want for example the YAML provider to be enabled.\n  */\n-public final class AdditionalBootstrapConfigProviderBuildItem extends MultiBuildItem {\n+public final class AdditionalBootstrapConfigSourceProviderBuildItem extends MultiBuildItem {\n \n     private final String providerClassName;\n \n-    public AdditionalBootstrapConfigProviderBuildItem(String providerClassName) {\n+    public AdditionalBootstrapConfigSourceProviderBuildItem(String providerClassName) {\n         this.providerClassName = providerClassName;\n     }\n \n"}}, {"oid": "b7cff0d3a9f6e0c0c066b3433f3765bb5e33a78a", "url": "https://github.com/quarkusio/quarkus/commit/b7cff0d3a9f6e0c0c066b3433f3765bb5e33a78a", "message": "Make YAML configuration work for Bootstrap Config\n\nFixes: #9973", "committedDate": "2020-06-17T12:31:26Z", "type": "commit"}, {"oid": "b7cff0d3a9f6e0c0c066b3433f3765bb5e33a78a", "url": "https://github.com/quarkusio/quarkus/commit/b7cff0d3a9f6e0c0c066b3433f3765bb5e33a78a", "message": "Make YAML configuration work for Bootstrap Config\n\nFixes: #9973", "committedDate": "2020-06-17T12:31:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxNjU0Mw==", "url": "https://github.com/quarkusio/quarkus/pull/10070#discussion_r441516543", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public AdditionalBootstrapConfigSourceProviderBuildItem(String providerClassName) {\n          \n          \n            \n                    this.providerClassName = providerClassName;\n          \n          \n            \n                }\n          \n          \n            \n                public AdditionalBootstrapConfigSourceProviderBuildItem(String providerClassName) {\n          \n          \n            \n                    this.providerClassName = providerClassName;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                public AdditionalBootstrapConfigSourceProviderBuildItem(Class<? extends ConfigSourceProvider> providerClass) {\n          \n          \n            \n                    this.providerClassName = providerClass.getName();\n          \n          \n            \n                }", "author": "gastaldi", "createdAt": "2020-06-17T12:45:58Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/AdditionalBootstrapConfigSourceProviderBuildItem.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.deployment.builditem;\n+\n+import org.eclipse.microprofile.config.spi.ConfigSourceProvider;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+\n+/**\n+ * Build item to use when an additional {@link ConfigSourceProvider} needs to be\n+ * registered to the Bootstrap Config setup.\n+ * This is needed because during Bootstrap Config setup, we don't auto-discover providers\n+ * but we do want for example the YAML provider to be enabled.\n+ */\n+public final class AdditionalBootstrapConfigSourceProviderBuildItem extends MultiBuildItem {\n+\n+    private final String providerClassName;\n+\n+    public AdditionalBootstrapConfigSourceProviderBuildItem(String providerClassName) {\n+        this.providerClassName = providerClassName;\n+    }", "originalCommit": "b7cff0d3a9f6e0c0c066b3433f3765bb5e33a78a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyMDUwNA==", "url": "https://github.com/quarkusio/quarkus/pull/10070#discussion_r441520504", "bodyText": "We generally don't pass classes around in BuildItems", "author": "geoand", "createdAt": "2020-06-17T12:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxNjU0Mw=="}], "type": "inlineReview", "revised_code": null}]}