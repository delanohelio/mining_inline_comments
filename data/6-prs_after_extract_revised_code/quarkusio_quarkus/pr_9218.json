{"pr_number": 9218, "pr_title": "Fix #9025: turn non-distinct single columns into count(*), throw for \u2026", "pr_createdAt": "2020-05-11T16:01:08Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9218", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NjYyNA==", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423156624", "bodyText": "Maybe throw a PanacheQueryException instead ?", "author": "loicmathieu", "createdAt": "2020-05-11T16:16:06Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);", "originalCommit": "9b1b9ebc3aa205db2c6174625d672cabac255c52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczNTc5NA==", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423735794", "bodyText": "Fine, done.", "author": "FroMage", "createdAt": "2020-05-12T13:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NjYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "775d967690ee00ffadf889bb2138d74565bf5296", "chunk": "diff --git a/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java b/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java\nindex c1e59e74f2..33b24a1b1c 100644\n--- a/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java\n+++ b/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java\n\n@@ -211,7 +211,7 @@ public class CommonPanacheQueryImpl<Entity> {\n                 String secondSelection = selectMatcher.group(2);\n                 // we can only count distinct single columns\n                 if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n-                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);\n+                    throw new PanacheQueryException(\"Count query not supported for select query: \" + query);\n                 }\n                 countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n             } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NzAzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423157039", "bodyText": "Maybe throw a PanacheQueryException instead ?", "author": "loicmathieu", "createdAt": "2020-05-11T16:16:50Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);\n+                }\n+                countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n+            } else {\n+                // it's not distinct, forget the column list\n+                countQuery = \"SELECT COUNT(*) \" + selectMatcher.group(3);\n+            }\n+        } else if (FROM_PATTERN.matcher(query).matches()) {\n             countQuery = \"SELECT COUNT(*) \" + query;\n+        } else {\n+            throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);", "originalCommit": "9b1b9ebc3aa205db2c6174625d672cabac255c52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczNTY5NQ==", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423735695", "bodyText": "Fine, done.", "author": "FroMage", "createdAt": "2020-05-12T13:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NzAzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "775d967690ee00ffadf889bb2138d74565bf5296", "chunk": "diff --git a/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java b/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java\nindex c1e59e74f2..33b24a1b1c 100644\n--- a/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java\n+++ b/extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java\n\n@@ -211,7 +211,7 @@ public class CommonPanacheQueryImpl<Entity> {\n                 String secondSelection = selectMatcher.group(2);\n                 // we can only count distinct single columns\n                 if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n-                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);\n+                    throw new PanacheQueryException(\"Count query not supported for select query: \" + query);\n                 }\n                 countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n             } else {\n"}}, {"oid": "775d967690ee00ffadf889bb2138d74565bf5296", "url": "https://github.com/quarkusio/quarkus/commit/775d967690ee00ffadf889bb2138d74565bf5296", "message": "Fix #9025: turn non-distinct single columns into count(*), throw for distinct multi columns\n\nThis will support:\n\n- non-distinct single/multi-column selects by turning them into count(*)\n- distinct single column by turning them into count(distinct col)\n- from.* into count(*)...\n\nAnd barf at unsupported use-cases such as select distinct col1, col2...", "committedDate": "2020-05-12T13:32:42Z", "type": "commit"}, {"oid": "775d967690ee00ffadf889bb2138d74565bf5296", "url": "https://github.com/quarkusio/quarkus/commit/775d967690ee00ffadf889bb2138d74565bf5296", "message": "Fix #9025: turn non-distinct single columns into count(*), throw for distinct multi columns\n\nThis will support:\n\n- non-distinct single/multi-column selects by turning them into count(*)\n- distinct single column by turning them into count(distinct col)\n- from.* into count(*)...\n\nAnd barf at unsupported use-cases such as select distinct col1, col2...", "committedDate": "2020-05-12T13:32:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzOTEzMg==", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r424539132", "bodyText": "I generally think it's a good idea to enclose this type of output in quotes, but I'll leave it up to you :)", "author": "geoand", "createdAt": "2020-05-13T15:41:47Z", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new PanacheQueryException(\"Count query not supported for select query: \" + query);\n+                }\n+                countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n+            } else {\n+                // it's not distinct, forget the column list\n+                countQuery = \"SELECT COUNT(*) \" + selectMatcher.group(3);\n+            }\n+        } else if (FROM_PATTERN.matcher(query).matches()) {\n             countQuery = \"SELECT COUNT(*) \" + query;\n+        } else {\n+            throw new PanacheQueryException(\"Count query not supported for select query: \" + query);", "originalCommit": "775d967690ee00ffadf889bb2138d74565bf5296", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}