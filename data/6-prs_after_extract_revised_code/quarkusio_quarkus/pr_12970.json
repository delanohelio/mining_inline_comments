{"pr_number": 12970, "pr_title": "Introduced io.quarkus.restclient.NoopHostnameVerifier", "pr_createdAt": "2020-10-27T01:50:34Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/12970", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512441204", "bodyText": "This doesn't seem to retry as the existing code does. The reason I added the retry is because I had seen the external service the test hits, be a tad unstable", "author": "geoand", "createdAt": "2020-10-27T06:23:25Z", "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();\n+        return String.valueOf(client.invoke().getStatus());", "originalCommit": "2b910061b1ec10f7b0a92c6abdcfc3686c28ab1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2MjAzMw==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512662033", "bodyText": "Ah good catch. Probably should use FT here or the Junit's @Retry. WDYT?", "author": "gastaldi", "createdAt": "2020-10-27T12:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NDA5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512664099", "bodyText": "Both sound fine to me", "author": "geoand", "createdAt": "2020-10-27T12:50:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwOTM4MA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512809380", "bodyText": "Ok, I used FT and it retries now. Thanks!", "author": "gastaldi", "createdAt": "2020-10-27T15:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "314fcfe238ce26b2dd9ba619b68a51bae40f4731", "chunk": "diff --git a/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java b/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java\nindex 74f49a2c2f..f62a6f7d67 100644\n--- a/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java\n+++ b/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java\n\n@@ -1,15 +1,14 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n+import java.net.URL;\n \n-import javax.inject.Inject;\n+import javax.net.ssl.HttpsURLConnection;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n-import org.eclipse.microprofile.rest.client.inject.RestClient;\n-\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n"}}, {"oid": "a0edfde2c17b96b6ee36823ce49afbe0de564462", "url": "https://github.com/quarkusio/quarkus/commit/a0edfde2c17b96b6ee36823ce49afbe0de564462", "message": "Introduced io.quarkus.restclient.runtime.NoopHostnameVerifier\n\nThis should be used in the rest-client when hostname verification needs to be disabled for a specific client endpoint\nAlso tests were improved to use what's provided in the rest-client extension", "committedDate": "2020-10-27T15:30:01Z", "type": "forcePushed"}, {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c", "url": "https://github.com/quarkusio/quarkus/commit/7b2e2abce89525d43834344b8cb8e9165a73d06c", "message": "Introduced io.quarkus.restclient.runtime.NoopHostnameVerifier\n\nThis should be used in the rest-client when hostname verification needs to be disabled for a specific client endpoint\nAlso tests were improved to use what's provided in the rest-client extension", "committedDate": "2020-10-27T15:49:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512813088", "bodyText": "Actually, now that I think of it, I think that this block was meant to test that that the truststore is used by default. With the change it won't be doing that as the truststore is specific to the rest client", "author": "geoand", "createdAt": "2020-10-27T15:52:25Z", "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "originalCommit": "7b2e2abce89525d43834344b8cb8e9165a73d06c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxNjAwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512816005", "bodyText": "Sounds like a test smell to me :)", "author": "gastaldi", "createdAt": "2020-10-27T15:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxOTIwNw==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512819207", "bodyText": "Maybe... But what other way do you have of testing that the truststore works in native mode?", "author": "geoand", "createdAt": "2020-10-27T15:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg0Nzk5NA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512847994", "bodyText": "Well, setting the truststore specifically in the TestResource class for the rest client works in native, maybe that's how we should do it to keep tests isolated", "author": "gastaldi", "createdAt": "2020-10-27T16:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg1MTI3Ng==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512851276", "bodyText": "The thing is that for native, truststore isn't settable at runtime IIRC", "author": "geoand", "createdAt": "2020-10-27T16:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMzNDI0OA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r513334248", "bodyText": "I am still against this change. The rest looks real good", "author": "geoand", "createdAt": "2020-10-28T10:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2Mzg4OA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r513463888", "bodyText": "I am probably missing something, but how do you set the default trust store in this test? I don't see that being done in the existing test, can you point me to where that is set?", "author": "gastaldi", "createdAt": "2020-10-28T13:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5ODQ3NQ==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r513598475", "bodyText": "I'll take a closer look tomorrow", "author": "geoand", "createdAt": "2020-10-28T16:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzM3OA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r514927378", "bodyText": "What I said above is indeed why it was done this way. And it works because of: \n  \n    \n      quarkus/integration-tests/rest-client/pom.xml\n    \n    \n         Line 105\n      in\n      22c529e\n    \n    \n    \n    \n\n        \n          \n           <javax.net.ssl.trustStore>${self-signed.trust-store}</javax.net.ssl.trustStore> \n        \n    \n  \n\n\nSo I really think this part of the PR should be reverted, otherwise we have no way of testing the default trust-store handling in native image", "author": "geoand", "createdAt": "2020-10-30T08:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTY3Mw==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515649673", "bodyText": "@geoand this wasn't changed, the system properties are still set when the test runs and the specified trust-store is still loaded as the default in both tests.\nNote that there isn't a QuarkusTestResourceLifecycleManager associated with the ExternalSelfSignedTestCase, so the self-signed.trust-store is used only in the javax.net.ssl.trustStore property", "author": "gastaldi", "createdAt": "2020-11-01T17:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTgxNw==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515649817", "bodyText": "Yeah, but unless I am misreading the PR, now there is nowhere where the default trust-store is exercised. This is what the existing code is meant to do", "author": "geoand", "createdAt": "2020-11-01T17:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MDIxOQ==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515650219", "bodyText": "I see, but is this the right place to test this feature? I mean, this is not related to the rest-client integration, right?", "author": "gastaldi", "createdAt": "2020-11-01T17:41:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MDY0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515650649", "bodyText": "Yes and no.\nI added it here because this came about when I fixed the SSL handling a little while a back (it broke when we moved to 19.3).\nAnd unless we have this sort of test, it can easily break again.\nSure there are perhaps better places to put it, but I don't really see a lot of value in moving it", "author": "geoand", "createdAt": "2020-11-01T17:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MTMxNg==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515651316", "bodyText": "Cool, I'm convinced now. Thanks for the explanation \ud83d\ude09", "author": "gastaldi", "createdAt": "2020-11-01T17:52:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MTM4MA==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515651380", "bodyText": "Sure thing \ud83d\udc4c", "author": "geoand", "createdAt": "2020-11-01T17:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}], "type": "inlineReview", "revised_code": {"commit": "314fcfe238ce26b2dd9ba619b68a51bae40f4731", "chunk": "diff --git a/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java b/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java\nindex 74f49a2c2f..f62a6f7d67 100644\n--- a/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java\n+++ b/integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java\n\n@@ -1,15 +1,14 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n+import java.net.URL;\n \n-import javax.inject.Inject;\n+import javax.net.ssl.HttpsURLConnection;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n-import org.eclipse.microprofile.rest.client.inject.RestClient;\n-\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzNjg0Ng==", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512936846", "bodyText": "If it's exposed to the user and not some implementation detail, it should be at the root, not in the runtime package.", "author": "gsmet", "createdAt": "2020-10-27T18:35:04Z", "path": "extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/runtime/NoopHostnameVerifier.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.restclient.runtime;", "originalCommit": "7b2e2abce89525d43834344b8cb8e9165a73d06c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e1cf4ce631ed423da857d5c2af35b68cced58e26", "chunk": "diff --git a/extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/runtime/NoopHostnameVerifier.java b/extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/NoopHostnameVerifier.java\nsimilarity index 91%\nrename from extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/runtime/NoopHostnameVerifier.java\nrename to extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/NoopHostnameVerifier.java\nindex 755331dd54..892005f39c 100644\n--- a/extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/runtime/NoopHostnameVerifier.java\n+++ b/extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/NoopHostnameVerifier.java\n\n@@ -1,4 +1,4 @@\n-package io.quarkus.restclient.runtime;\n+package io.quarkus.restclient;\n \n import javax.net.ssl.HostnameVerifier;\n import javax.net.ssl.SSLSession;\n"}}, {"oid": "e1cf4ce631ed423da857d5c2af35b68cced58e26", "url": "https://github.com/quarkusio/quarkus/commit/e1cf4ce631ed423da857d5c2af35b68cced58e26", "message": "Introduced io.quarkus.restclient.NoopHostnameVerifier\n\nThis should be used in the rest-client when hostname verification needs to be disabled for a specific client endpoint\nAlso tests were improved to use what's provided in the rest-client extension", "committedDate": "2020-10-27T19:57:06Z", "type": "forcePushed"}, {"oid": "314fcfe238ce26b2dd9ba619b68a51bae40f4731", "url": "https://github.com/quarkusio/quarkus/commit/314fcfe238ce26b2dd9ba619b68a51bae40f4731", "message": "Fixed error message and removed deprecated warning in JDK 11", "committedDate": "2020-11-01T17:33:29Z", "type": "commit"}, {"oid": "5e4eb66c346aca25b6fd6cb4cef1ab0a43fe1f54", "url": "https://github.com/quarkusio/quarkus/commit/5e4eb66c346aca25b6fd6cb4cef1ab0a43fe1f54", "message": "Introduced io.quarkus.restclient.NoopHostnameVerifier\n\nThis should be used in the rest-client when hostname verification needs to be disabled for a specific client endpoint\nAlso tests were improved to use what's provided in the rest-client extension", "committedDate": "2020-11-01T17:50:33Z", "type": "commit"}, {"oid": "5e4eb66c346aca25b6fd6cb4cef1ab0a43fe1f54", "url": "https://github.com/quarkusio/quarkus/commit/5e4eb66c346aca25b6fd6cb4cef1ab0a43fe1f54", "message": "Introduced io.quarkus.restclient.NoopHostnameVerifier\n\nThis should be used in the rest-client when hostname verification needs to be disabled for a specific client endpoint\nAlso tests were improved to use what's provided in the rest-client extension", "committedDate": "2020-11-01T17:50:33Z", "type": "forcePushed"}]}