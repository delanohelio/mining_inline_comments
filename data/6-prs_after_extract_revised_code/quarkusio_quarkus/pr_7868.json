{"pr_number": 7868, "pr_title": "Update to MongoDB Java driver 4.0.0", "pr_createdAt": "2020-03-14T18:53:32Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7868", "timeline": [{"oid": "36650ac7409c579d9cbd074ff8460b1c9fd4fd43", "url": "https://github.com/quarkusio/quarkus/commit/36650ac7409c579d9cbd074ff8460b1c9fd4fd43", "message": "Update to mongo java driver 4.0.0", "committedDate": "2020-03-14T11:32:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMDc2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7868#discussion_r392610766", "bodyText": "Maybe we should also break reactive mongo panache compatibility, by returning a Uni<InsertOneResult> here?\nBut we should at least try to be consistent between reactive mongo and reactive panache mongo.", "author": "Postremus", "createdAt": "2020-03-14T18:55:20Z", "path": "extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/reactive/runtime/ReactiveMongoOperations.java", "diffHunk": "@@ -217,11 +216,11 @@ public static ReactiveMongoDatabase mongoDatabase(Class<?> entityClass) {\n     }\n \n     private static Uni<Void> persist(ReactiveMongoCollection collection, Object entity) {", "originalCommit": "36650ac7409c579d9cbd074ff8460b1c9fd4fd43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NjQ4Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7868#discussion_r392666483", "bodyText": "@Postremus we try to avoid returning mongodb specific objects inside Panache.\nUpdate and delete didn't return UpdateResult nor DeleteResult so I prefer to keep void here.", "author": "loicmathieu", "createdAt": "2020-03-15T11:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMDc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0ODI5Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7868#discussion_r392848292", "bodyText": "Not sure if it's possible, but maybe we could return the updated entity?", "author": "cescoffier", "createdAt": "2020-03-16T08:22:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMDc2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0NjA1NA==", "url": "https://github.com/quarkusio/quarkus/pull/7868#discussion_r392846054", "bodyText": "I'm not sure if this should be considered as a breaking change.\nInitially, it only contained Document, now it can be any type.\nFirst I would use TDocument as in the driver to indicate that it's not any type, but must be somehow a document. The lack of constraint in the driver is a bit odd.", "author": "cescoffier", "createdAt": "2020-03-16T08:16:59Z", "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/ReactiveMongoCollection.java", "diffHunk": "@@ -478,7 +502,7 @@\n      * @param pipeline the aggregate pipeline\n      * @return a stream containing the result of the aggregation operation\n      */\n-    AggregatePublisher<Document> aggregateAsPublisher(List<? extends Bson> pipeline);\n+    AggregatePublisher<T> aggregateAsPublisher(List<? extends Bson> pipeline);", "originalCommit": "36650ac7409c579d9cbd074ff8460b1c9fd4fd43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkxOTc2OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7868#discussion_r392919769", "bodyText": "@cescoffier TDocument means any type T that can be converted to a document. I agree this is a bit odd as it didn't convey any constraint. As we register the Pojo Codec, almost any type can be converted automatically (except for some deep generic types). So maybe T is OK.", "author": "loicmathieu", "createdAt": "2020-03-16T10:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg0NjA1NA=="}], "type": "inlineReview", "revised_code": null}]}