{"pr_number": 440, "pr_title": "KOGITO-3262 - allow usage of hardly separable datasets", "pr_createdAt": "2020-09-04T10:41:13Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/440", "timeline": [{"oid": "bcb32a1b8da293cbb33cd4d1a3aa7c920ba56beb", "url": "https://github.com/kiegroup/kogito-apps/commit/bcb32a1b8da293cbb33cd4d1a3aa7c920ba56beb", "message": "KOGITO-3262 - allow usage of hardly separable datasets", "committedDate": "2020-09-04T10:22:15Z", "type": "commit"}, {"oid": "7d54f224963735f506b8ecca46eb55652877ec87", "url": "https://github.com/kiegroup/kogito-apps/commit/7d54f224963735f506b8ecca46eb55652877ec87", "message": "KOGITO-3262 - fixed log formatting", "committedDate": "2020-09-04T12:07:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDQyMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624421", "bodyText": "Can you please move noOfRetries == 0 to a local variable to improve readability?\nBtw are you sure of this check? I think it should be == 1.\nThe if condition for the recursion is noOfRetries > 0 so the only reason why you can get a 0 here is because this is the init value and it has probably no sense :)", "author": "danielezonca", "createdAt": "2020-09-04T13:44:09Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -149,7 +149,7 @@ public int getNoOfRetries() {\n         return model.predictAsync(perturbedInputs)\n                 .thenCompose(predictionOutputs -> {\n                     try {\n-                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs);\n+                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs, noOfRetries == 0);", "originalCommit": "7d54f224963735f506b8ecca46eb55652877ec87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzU4Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627583", "bodyText": "sure, of course you're right, the check is strict when you can do more retries, so boolean strict = noOfRetries > 0", "author": "tteofili", "createdAt": "2020-09-04T13:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "chunk": "diff --git a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\nindex 8a46ea5d9..e7e2da8b7 100644\n--- a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n+++ b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n\n@@ -149,7 +149,8 @@ public class LimeExplainer implements LocalExplainer<Map<String, Saliency>> {\n         return model.predictAsync(perturbedInputs)\n                 .thenCompose(predictionOutputs -> {\n                     try {\n-                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs, noOfRetries == 0);\n+                        boolean strict = noOfRetries > 0;\n+                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs, strict);\n                         return completedFuture(getSaliencies(targetInput, linearizedTargetInputFeatures, actualOutputs, limeInputsList));\n                     } catch (DatasetNotSeparableException e) {\n                         if (noOfRetries > 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDYwNQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624605", "bodyText": "New line\nCan you please add a javadoc?", "author": "danielezonca", "createdAt": "2020-09-04T13:44:28Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -163,12 +163,12 @@ public int getNoOfRetries() {\n     private List<LimeInputs> getLimeInputs(List<Feature> linearizedTargetInputFeatures,\n                                            List<Output> actualOutputs,\n                                            List<PredictionInput> perturbedInputs,\n-                                           List<PredictionOutput> predictionOutputs) {\n+                                           List<PredictionOutput> predictionOutputs, boolean strict) {", "originalCommit": "7d54f224963735f506b8ecca46eb55652877ec87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzY3OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627678", "bodyText": "ok", "author": "tteofili", "createdAt": "2020-09-04T13:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "chunk": "diff --git a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\nindex 8a46ea5d9..e7e2da8b7 100644\n--- a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n+++ b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n\n@@ -160,10 +161,21 @@ public class LimeExplainer implements LocalExplainer<Map<String, Saliency>> {\n                 });\n     }\n \n+    /**\n+     * Obtain the inputs to the LIME algorithm, for each output in the original prediction.\n+     *\n+     * @param linearizedTargetInputFeatures the linarized features\n+     * @param actualOutputs the list of outputs to generate the explanations for\n+     * @param perturbedInputs the list of perturbed inputs\n+     * @param predictionOutputs the list of outputs associated to each perturbed input\n+     * @param strict whether accepting unique values for a given output in the {@code perturbedOutputs}\n+     * @return a list of inputs to the LIME algorithm\n+     */\n     private List<LimeInputs> getLimeInputs(List<Feature> linearizedTargetInputFeatures,\n                                            List<Output> actualOutputs,\n                                            List<PredictionInput> perturbedInputs,\n-                                           List<PredictionOutput> predictionOutputs, boolean strict) {\n+                                           List<PredictionOutput> predictionOutputs,\n+                                           boolean strict) {\n         List<LimeInputs> limeInputsList = new LinkedList<>();\n         for (int o = 0; o < actualOutputs.size(); o++) {\n             Output currentOutput = actualOutputs.get(o);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDc1MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624751", "bodyText": "New line", "author": "danielezonca", "createdAt": "2020-09-04T13:44:41Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -221,7 +221,7 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n                                      List<PredictionOutput> perturbedOutputs,\n                                      List<Feature> linearizedTargetInputFeatures,\n                                      int o,\n-                                     Output currentOutput) {\n+                                     Output currentOutput, boolean strict) {", "originalCommit": "7d54f224963735f506b8ecca46eb55652877ec87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzc2OA==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627768", "bodyText": "ok", "author": "tteofili", "createdAt": "2020-09-04T13:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "chunk": "diff --git a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\nindex 8a46ea5d9..e7e2da8b7 100644\n--- a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n+++ b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n\n@@ -213,9 +225,11 @@ public class LimeExplainer implements LocalExplainer<Map<String, Saliency>> {\n     }\n \n     /**\n-     * Perturb the inputs so that the perturbed dataset contains more than just one output class, otherwise\n-     * it would be impossible to linearly separate it, and hence learn meaningful weights to be used as\n+     * Check the perturbed inputs so that the dataset of perturbed input / outputs contains more than just one output\n+     * class, otherwise it would be impossible to linearly separate it, and hence learn meaningful weights to be used as\n      * feature importance scores.\n+     * The check can be {@code strict} or not, if so it will throw a {@code DatasetNotSeparableException} when the dataset\n+     * for a given output is not separable.\n      */\n     private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n                                      List<PredictionOutput> perturbedOutputs,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNTI0OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483625249", "bodyText": "Can you add a test?", "author": "danielezonca", "createdAt": "2020-09-04T13:45:30Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +232,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n             }", "originalCommit": "7d54f224963735f506b8ecca46eb55652877ec87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzg4Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627886", "bodyText": "ok", "author": "tteofili", "createdAt": "2020-09-04T13:50:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNTI0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5a53e543346b8a13dbb4b71f7f967510d295f2ad", "chunk": "diff --git a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\nindex 8a46ea5d9..b7161164c 100644\n--- a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n+++ b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n\n@@ -246,7 +260,7 @@ public class LimeExplainer implements LocalExplainer<Map<String, Saliency>> {\n             } else {\n                 LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n                             currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n-                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n             }\n         } else {\n             return new LimeInputs(false, linearizedTargetInputFeatures, currentOutput, emptyList(), emptyList());\n"}}, {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "url": "https://github.com/kiegroup/kogito-apps/commit/32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "message": "KOGITO-3262 - added missing test covering fixed outputs, minor fixes", "committedDate": "2020-09-04T14:32:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjI3Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484716276", "bodyText": "why remove public?", "author": "r00ta", "createdAt": "2020-09-08T07:43:41Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java", "diffHunk": "@@ -21,11 +21,11 @@\n import org.kie.kogito.explainability.model.Output;\n \n /**\n- * Exception for when a dataset encoded for LIME is not (linearly) separable.\n+ * Exception thrown when a dataset encoded for LIME is not (linearly) separable.\n  */\n-public class DatasetNotSeparableException extends LocalExplanationException {\n+class DatasetNotSeparableException extends LocalExplanationException {", "originalCommit": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMjAxNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484732017", "bodyText": "because now this exception is never \"reaching\" the end user / consumer of LimeExplainer (it is only used as part of the retry mechanism); but we can keep it public in case we decide to change the behaviour again in the future.", "author": "tteofili", "createdAt": "2020-09-08T08:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjI3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5a53e543346b8a13dbb4b71f7f967510d295f2ad", "chunk": "diff --git a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java\nindex 904e843c8..bbe536d91 100644\n--- a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java\n+++ b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java\n\n@@ -23,9 +23,9 @@ import org.kie.kogito.explainability.model.Output;\n /**\n  * Exception thrown when a dataset encoded for LIME is not (linearly) separable.\n  */\n-class DatasetNotSeparableException extends LocalExplanationException {\n+public class DatasetNotSeparableException extends LocalExplanationException {\n \n-    DatasetNotSeparableException(Output output, Map<Double, Long> classBalance) {\n+    public DatasetNotSeparableException(Output output, Map<Double, Long> classBalance) {\n         super(\"LIME dataset not separable for output '\" + output.getName() + \"' of type '\" + output.getType() + \"' with '\"\n                       + output.getValue() + \"' (\" + classBalance + \")\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODQ3Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484718472", "bodyText": "return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);?", "author": "r00ta", "createdAt": "2020-09-08T07:47:43Z", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +246,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);", "originalCommit": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMjY5Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484732696", "bodyText": "sure", "author": "tteofili", "createdAt": "2020-09-08T08:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5a53e543346b8a13dbb4b71f7f967510d295f2ad", "chunk": "diff --git a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\nindex e7e2da8b7..b7161164c 100644\n--- a/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n+++ b/explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java\n\n@@ -260,7 +260,7 @@ public class LimeExplainer implements LocalExplainer<Map<String, Saliency>> {\n             } else {\n                 LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n                             currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n-                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n             }\n         } else {\n             return new LimeInputs(false, linearizedTargetInputFeatures, currentOutput, emptyList(), emptyList());\n"}}, {"oid": "5a53e543346b8a13dbb4b71f7f967510d295f2ad", "url": "https://github.com/kiegroup/kogito-apps/commit/5a53e543346b8a13dbb4b71f7f967510d295f2ad", "message": "KOGITO-3262 - review based fixes", "committedDate": "2020-09-08T08:16:28Z", "type": "commit"}]}