{"pr_number": 491, "pr_title": "KOGITO-3596 Bump to Quarkus 1.9", "pr_createdAt": "2020-10-19T14:09:18Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/491", "timeline": [{"oid": "2a9aba75b54841e03361a04a08c019337e53da62", "url": "https://github.com/kiegroup/kogito-apps/commit/2a9aba75b54841e03361a04a08c019337e53da62", "message": "KOGITO-3596 Bump to Quarkus 1.9\n\nuse alternative to read file, as apparently on CI\nreadAllBytes() with a classpath resource behaves\nin a weird way (FileSystemNotFoundException)", "committedDate": "2020-10-19T14:04:50Z", "type": "commit"}, {"oid": "e92a1ab54c672cefcf5a041cdbca6d7dbb9174f5", "url": "https://github.com/kiegroup/kogito-apps/commit/e92a1ab54c672cefcf5a041cdbca6d7dbb9174f5", "message": "add integration-tests-common to dep management _also_ in integration-tests-quarkus", "committedDate": "2020-10-21T13:43:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwNDAxNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/491#discussion_r509804017", "bodyText": "@evacchi can you just make sure all of these streams are closed, it's just that I've seen some exception on CI regarding too many open files, just to be on the safe side even though this is just a test class.", "author": "cristianonicolai", "createdAt": "2020-10-22T00:06:34Z", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/TestUtils.java", "diffHunk": "@@ -65,9 +70,17 @@ public static String getTravelsProtoBufferFile() throws Exception {\n         return readFileContent(\"travels.proto\");\n     }\n \n-    public static String readFileContent(String file) throws URISyntaxException, IOException {\n-        Path path = Paths.get(Thread.currentThread().getContextClassLoader().getResource(file).toURI());\n-        return new String(Files.readAllBytes(path));\n+    public static String readFileContent(String file) throws IOException {\n+        InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(file);", "originalCommit": "e92a1ab54c672cefcf5a041cdbca6d7dbb9174f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk3NDI3Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/491#discussion_r509974277", "bodyText": "right", "author": "evacchi", "createdAt": "2020-10-22T08:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwNDAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "0e0c2aac2d5b025e3b8b847fef0b3198ba3f10ec", "chunk": "diff --git a/data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/TestUtils.java b/data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/TestUtils.java\nindex e21ac8faf..2b32fd6b5 100644\n--- a/data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/TestUtils.java\n+++ b/data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/TestUtils.java\n\n@@ -71,16 +71,31 @@ public final class TestUtils {\n     }\n \n     public static String readFileContent(String file) throws IOException {\n-        InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(file);\n-        Objects.requireNonNull(inputStream, \"Could not resolve file path: \" + file);\n-        BufferedInputStream bis = new BufferedInputStream(inputStream);\n-        ByteArrayOutputStream buf = new ByteArrayOutputStream();\n-        int result = bis.read();\n-        while (result != -1) {\n-            buf.write((byte) result);\n-            result = bis.read();\n+        InputStream inputStream = null;\n+        BufferedInputStream bis = null;\n+        ByteArrayOutputStream buf = null;\n+        try {\n+            inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(file);\n+            Objects.requireNonNull(inputStream, \"Could not resolve file path: \" + file);\n+            bis = new BufferedInputStream(inputStream);\n+            buf = new ByteArrayOutputStream();\n+            int result = bis.read();\n+            while (result != -1) {\n+                buf.write((byte) result);\n+                result = bis.read();\n+            }\n+            return buf.toString(StandardCharsets.UTF_8.name());\n+        } finally {\n+            if (inputStream != null) {\n+                inputStream.close();\n+            }\n+            if (bis != null) {\n+                bis.close();\n+            }\n+            if (buf != null) {\n+                buf.close();\n+            }\n         }\n-        return buf.toString(StandardCharsets.UTF_8.name());\n     }\n \n     public static KogitoProcessCloudEvent getProcessCloudEvent(String processId, String processInstanceId, ProcessInstanceState status, String rootProcessInstanceId, String rootProcessId, String parentProcessInstanceId) {\n"}}, {"oid": "0e0c2aac2d5b025e3b8b847fef0b3198ba3f10ec", "url": "https://github.com/kiegroup/kogito-apps/commit/0e0c2aac2d5b025e3b8b847fef0b3198ba3f10ec", "message": "ensure streams are closed", "committedDate": "2020-10-22T08:32:35Z", "type": "commit"}]}