{"pr_number": 4457, "pr_title": "CUSTCOM-24 Restore Persistent EJB Timers on Payara Micro Restart", "pr_createdAt": "2020-01-27T11:04:18Z", "pr_url": "https://github.com/payara/Payara/pull/4457", "timeline": [{"oid": "463bd2cef9e7be6de62ec4fea7e1af51d741971b", "url": "https://github.com/payara/Payara/commit/463bd2cef9e7be6de62ec4fea7e1af51d741971b", "message": "CUSTCOM-24 Prevent NPE in JobCleanUpService\n\nWhen starting Payara Micro, the cleanup service will return a NPE due to\nthe executor also being null. This change allows the service to disable\nitself, and doing so will cause each method to be disabled.\n\nThis was a bug introduced in 5033d8edb3bb22d797cd8ddf0aa4b47380e1a227.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-27T11:08:22Z", "type": "forcePushed"}, {"oid": "9e7fe2d38700121fb7b919fee0bdce89a5a45426", "url": "https://github.com/payara/Payara/commit/9e7fe2d38700121fb7b919fee0bdce89a5a45426", "message": "CUSTCOM-24 Prevent NPE in JobCleanUpService\n\nWhen starting Payara Micro, the cleanup service will return a NPE due to\nthe executor also being null. This change allows the service to disable\nitself, and doing so will cause each method to be disabled.\n\nThis was a bug introduced in 5033d8edb3bb22d797cd8ddf0aa4b47380e1a227.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-27T11:10:32Z", "type": "forcePushed"}, {"oid": "3b2dd2982411f98217848400337369dd286fbb5c", "url": "https://github.com/payara/Payara/commit/3b2dd2982411f98217848400337369dd286fbb5c", "message": "CUSTCOM-24 Save application unique ID on app load\n\nEJB timers firing rely on the container ID being consistent, which is\ndetermined in turn by the application unique ID. This change saves the\nunique ID of the first deployment to the clustered store, so be used on\nfuture redeployments.\n\nThis functionality was removed in Payara 5 with\n3cd40212ec11cbbe9a3740100a3ef3a5449364a9.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-27T11:11:44Z", "type": "commit"}, {"oid": "c908357e36037a3ccf939ea4172687ce23b6a7d1", "url": "https://github.com/payara/Payara/commit/c908357e36037a3ccf939ea4172687ce23b6a7d1", "message": "CUSTCOM-24 Reenable Micro clustered store access\n\nThe Payara Micro main thread didn't have access to the clustered store,\nbut this was required to save the application unique ID to the store on\ninitialisation.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-27T11:11:52Z", "type": "commit"}, {"oid": "8128054a32d9bb546b0e799726c8848236fdea3e", "url": "https://github.com/payara/Payara/commit/8128054a32d9bb546b0e799726c8848236fdea3e", "message": "CUSTCOM-24 Prevent NPE in JobCleanUpService\n\nWhen starting Payara Micro, the cleanup service will return a NPE due to\nthe executor also being null. This change allows the service to disable\nitself, and doing so will cause each method to be disabled.\n\nThis was a bug introduced in 5033d8edb3bb22d797cd8ddf0aa4b47380e1a227.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-27T11:11:55Z", "type": "forcePushed"}, {"oid": "c908357e36037a3ccf939ea4172687ce23b6a7d1", "url": "https://github.com/payara/Payara/commit/c908357e36037a3ccf939ea4172687ce23b6a7d1", "message": "CUSTCOM-24 Reenable Micro clustered store access\n\nThe Payara Micro main thread didn't have access to the clustered store,\nbut this was required to save the application unique ID to the store on\ninitialisation.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-27T11:11:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyOTA2Ng==", "url": "https://github.com/payara/Payara/pull/4457#discussion_r372229066", "bodyText": "If this solves the issue and we agree, that this is how hazelcast bootstrap should work (pre-boot, rather than post boot), then entire code for handling \"threadlocaldisabled\" should be removed as well, as it has no other usage.", "author": "pdudits", "createdAt": "2020-01-29T07:43:13Z", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1043,7 +1043,6 @@ public PayaraMicroRuntime bootStrap() throws BootstrapException {\n \n             // boot the server\n             preBootCommands.executeCommands(gf.getCommandRunner());\n-            HazelcastCore.setThreadLocalDisabled(true);\n             try {", "originalCommit": "c908357e36037a3ccf939ea4172687ce23b6a7d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd07f55c8f6b0ce789b83f744fc16efb87d00648", "chunk": "diff --git a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\nindex 05404a93ce..44f1f8c86a 100644\n--- a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n+++ b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n\n@@ -1043,18 +1043,14 @@ public class PayaraMicroImpl implements PayaraMicroBoot {\n \n             // boot the server\n             preBootCommands.executeCommands(gf.getCommandRunner());\n-            try {\n-                gf.start();\n+            gf.start();\n \n-                // Execute post boot commands\n-                postBootCommands.executeCommands(gf.getCommandRunner());\n-                this.runtime = new PayaraMicroRuntimeImpl(gf, gfruntime);\n+            // Execute post boot commands\n+            postBootCommands.executeCommands(gf.getCommandRunner());\n+            this.runtime = new PayaraMicroRuntimeImpl(gf, gfruntime);\n \n-                // load all applications, but do not start them until Hazelcast gets a chance to initialize\n-                deployAll();\n-            } finally {\n-                HazelcastCore.setThreadLocalDisabled(false);\n-            }\n+            // load all applications, but do not start them until Hazelcast gets a chance to initialize\n+            deployAll();\n             if (!noCluster) {\n                 gf.getCommandRunner().run(\"set-hazelcast-configuration\", \"--enabled\", \"true\", \"--dynamic\", \"true\", \"--target\", \"server-config\", \"--hostawarepartitioning\", Boolean.toString(hostAware), \"--lite\", Boolean.toString(liteMember));\n             }\n"}}, {"oid": "3570a653fceb413ca04ea198e415206371e48592", "url": "https://github.com/payara/Payara/commit/3570a653fceb413ca04ea198e415206371e48592", "message": "CUSTCOM-24 Remove ThreadLocal Hazelcast disable\n\nThe ThreadLocal variable used to restrict Hazelcast access to the Payara\nMicro main thread is no longer used, so can be removed.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-29T14:42:44Z", "type": "forcePushed"}, {"oid": "dd07f55c8f6b0ce789b83f744fc16efb87d00648", "url": "https://github.com/payara/Payara/commit/dd07f55c8f6b0ce789b83f744fc16efb87d00648", "message": "CUSTCOM-24 Remove ThreadLocal Hazelcast disable\n\nThe ThreadLocal variable used to restrict Hazelcast access to the Payara\nMicro main thread is no longer used, so can be removed.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-29T15:32:14Z", "type": "commit"}, {"oid": "dd07f55c8f6b0ce789b83f744fc16efb87d00648", "url": "https://github.com/payara/Payara/commit/dd07f55c8f6b0ce789b83f744fc16efb87d00648", "message": "CUSTCOM-24 Remove ThreadLocal Hazelcast disable\n\nThe ThreadLocal variable used to restrict Hazelcast access to the Payara\nMicro main thread is no longer used, so can be removed.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-29T15:32:14Z", "type": "forcePushed"}, {"oid": "84d1d5c366f720d0473f8a59ac00feb2c3550164", "url": "https://github.com/payara/Payara/commit/84d1d5c366f720d0473f8a59ac00feb2c3550164", "message": "Merge branch 'master' of github.com:payara/Payara into CUSTCOM-24", "committedDate": "2020-01-29T15:51:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDU3Nw==", "url": "https://github.com/payara/Payara/pull/4457#discussion_r372900577", "bodyText": "If all the reproducers we mentioned work with this configuration, would you let try swapping these two statements, finalizing config before deploy?", "author": "pdudits", "createdAt": "2020-01-30T11:38:19Z", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1043,19 +1043,14 @@ public PayaraMicroRuntime bootStrap() throws BootstrapException {\n \n             // boot the server\n             preBootCommands.executeCommands(gf.getCommandRunner());\n-            HazelcastCore.setThreadLocalDisabled(true);\n-            try {\n-                gf.start();\n+            gf.start();\n \n-                // Execute post boot commands\n-                postBootCommands.executeCommands(gf.getCommandRunner());\n-                this.runtime = new PayaraMicroRuntimeImpl(gf, gfruntime);\n+            // Execute post boot commands\n+            postBootCommands.executeCommands(gf.getCommandRunner());\n+            this.runtime = new PayaraMicroRuntimeImpl(gf, gfruntime);\n \n-                // load all applications, but do not start them until Hazelcast gets a chance to initialize\n-                deployAll();\n-            } finally {\n-                HazelcastCore.setThreadLocalDisabled(false);\n-            }\n+            // load all applications, but do not start them until Hazelcast gets a chance to initialize\n+            deployAll();\n             if (!noCluster) {\n                 gf.getCommandRunner().run(\"set-hazelcast-configuration\", \"--enabled\", \"true\", \"--dynamic\", \"true\", \"--target\", \"server-config\", \"--hostawarepartitioning\", Boolean.toString(hostAware), \"--lite\", Boolean.toString(liteMember));\n             }", "originalCommit": "dd07f55c8f6b0ce789b83f744fc16efb87d00648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyMTk4NA==", "url": "https://github.com/payara/Payara/pull/4457#discussion_r373021984", "bodyText": "I've swapped them and my reproducer seems to work fine, so I agree this is a good change. I'm going to commit it, I just need to test the other reproducers before I merge this", "author": "MattGill98", "createdAt": "2020-01-30T15:36:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjkwMDU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ef3dc1ebd9c0e9737c538bb582902cecf0cc64c5", "chunk": "diff --git a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\nindex 44f1f8c86a..3d853d418c 100644\n--- a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n+++ b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n\n@@ -1049,12 +1049,14 @@ public class PayaraMicroImpl implements PayaraMicroBoot {\n             postBootCommands.executeCommands(gf.getCommandRunner());\n             this.runtime = new PayaraMicroRuntimeImpl(gf, gfruntime);\n \n-            // load all applications, but do not start them until Hazelcast gets a chance to initialize\n-            deployAll();\n+            // Enable hazelcast\n             if (!noCluster) {\n                 gf.getCommandRunner().run(\"set-hazelcast-configuration\", \"--enabled\", \"true\", \"--dynamic\", \"true\", \"--target\", \"server-config\", \"--hostawarepartitioning\", Boolean.toString(hostAware), \"--lite\", Boolean.toString(liteMember));\n             }\n \n+            // deploy all applications and then initialize them\n+            deployAll();\n+            // These steps are separated in case any steps need to be done in between\n             gf.getCommandRunner().run(\"initialize-all-applications\");\n \n             postDeployCommands.executeCommands(gf.getCommandRunner());\n"}}, {"oid": "ef3dc1ebd9c0e9737c538bb582902cecf0cc64c5", "url": "https://github.com/payara/Payara/commit/ef3dc1ebd9c0e9737c538bb582902cecf0cc64c5", "message": "CUSTCOM-24 Enable hazelcast before application load\n\nFixes have been made to Hazelcast that mean that it can be initialised\nearlier in the startup lifecycle. This should simplify the startup\nprocess which should, in turn, provide protection against future race\nconditions or complications caused by the complexity of Hazelcast\ninitialisation.\n\nSigned-off-by: Matt Gill <matthew.gill@live.co.uk>", "committedDate": "2020-01-30T15:42:50Z", "type": "commit"}]}