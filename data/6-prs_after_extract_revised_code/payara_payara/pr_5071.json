{"pr_number": 5071, "pr_title": "Add appropriate application name to GAV deployments / FISH-1015", "pr_createdAt": "2020-12-25T11:15:20Z", "pr_url": "https://github.com/payara/Payara/pull/5071", "timeline": [{"oid": "509f86641151792864d70129ef25f23004d2901e", "url": "https://github.com/payara/Payara/commit/509f86641151792864d70129ef25f23004d2901e", "message": "Fix GAV deployment", "committedDate": "2020-12-25T10:53:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg1ODkzNA==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r548858934", "bodyText": "Could this be extracted to (tested) method?\nCould this variable be renamed to something like nameWithExtension - and above comment removed?", "author": "pzygielo", "createdAt": "2020-12-25T11:24:04Z", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1662,9 +1662,15 @@ private void deployAll() throws GlassFishException {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        deployer.deploy(artefactURI, \"--availabilityenabled\",\n-                                \"true\", \"--contextroot\",\n-                                deploymentMapEntry.getKey(), \"--force=true\", \"--loadOnly\", \"true\");\n+                        String artefactName= artefactURI.getPath().substring(artefactURI.getPath().lastIndexOf('/') + 1);\n+                        // artefact name always has a valid extension\n+                        String name = artefactName.substring(0, artefactName.length() - 4);", "originalCommit": "509f86641151792864d70129ef25f23004d2901e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3f4383074f5c7473284aab086156dc9e3858f83e", "chunk": "diff --git a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\nindex 29998e7293..ad875a3f6a 100644\n--- a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n+++ b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n\n@@ -1662,8 +1662,7 @@ public class PayaraMicroImpl implements PayaraMicroBoot {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        String artefactName= artefactURI.getPath().substring(artefactURI.getPath().lastIndexOf('/') + 1);\n-                        // artefact name always has a valid extension\n+                        String artefactName = getFileName(artefactURI.getPath());\n                         String name = artefactName.substring(0, artefactName.length() - 4);\n \n                         deployer.deploy(artefactURI,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg1OTI5Nw==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r548859297", "bodyText": "With above comment implemented - could new method be used here?", "author": "pzygielo", "createdAt": "2020-12-25T11:26:50Z", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -2063,7 +2073,12 @@ private void getGAVURLs() throws GlassFishException {\n                     contextRoot = null; // use only once\n                 }\n \n-                deploymentURLsMap.put(defaultContext, artefactMapEntry.getValue());\n+                URL artefactURL = artefactMapEntry.getValue();\n+                String artefactName = artefactURL.getPath().substring(artefactURL.getPath().lastIndexOf('/') + 1);\n+", "originalCommit": "509f86641151792864d70129ef25f23004d2901e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MTczNQ==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r548861735", "bodyText": "Same code also in UberJarCreator class. Maybe make sense move this to utility class? Or such class already exists?", "author": "avpinchuk", "createdAt": "2020-12-25T11:46:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg1OTI5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3f4383074f5c7473284aab086156dc9e3858f83e", "chunk": "diff --git a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\nindex 29998e7293..ad875a3f6a 100644\n--- a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n+++ b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n\n@@ -2074,7 +2077,7 @@ public class PayaraMicroImpl implements PayaraMicroBoot {\n                 }\n \n                 URL artefactURL = artefactMapEntry.getValue();\n-                String artefactName = artefactURL.getPath().substring(artefactURL.getPath().lastIndexOf('/') + 1);\n+                String artefactName = getFileName(artefactURL.getPath());\n \n                 deploymentURLsMap.put(defaultContext, artefactURL);\n \n"}}, {"oid": "3f4383074f5c7473284aab086156dc9e3858f83e", "url": "https://github.com/payara/Payara/commit/3f4383074f5c7473284aab086156dc9e3858f83e", "message": "Add utility method for getting filename", "committedDate": "2020-12-26T11:44:15Z", "type": "commit"}, {"oid": "d18fc907f3e7ed53999d4d59c6b9c00e87dfc0db", "url": "https://github.com/payara/Payara/commit/d18fc907f3e7ed53999d4d59c6b9c00e87dfc0db", "message": "Fix GAV write order", "committedDate": "2020-12-27T18:52:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4OTA0MA==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r549789040", "bodyText": "Yes, this will break in so many ways, I cannot count \ud83d\udc4d", "author": "lprimak", "createdAt": "2020-12-29T17:35:04Z", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1662,9 +1662,14 @@ private void deployAll() throws GlassFishException {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        deployer.deploy(artefactURI, \"--availabilityenabled\",\n-                                \"true\", \"--contextroot\",\n-                                deploymentMapEntry.getKey(), \"--force=true\", \"--loadOnly\", \"true\");\n+                        String artefactName = getFileName(artefactURI.getPath());\n+                        String name = artefactName.substring(0, artefactName.length() - 4);", "originalCommit": "d18fc907f3e7ed53999d4d59c6b9c00e87dfc0db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5OTY1OA==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r549799658", "bodyText": "Thanks I understand. May be try to fix this by writing artifact with actual file name to a temporary directory instead of temp file?\nThere is reproducer https://github.com/avpinchuk/issue-gav\nInstall to your local repo and run micro (from current master)\njava -jar payara-micro.jar --deployFromGAV org.apache.activemq:actevemq-rar:5.16.0 --deployFromGAV org.example:issue-gav:1.0 --additionalRepository file:///path/to/your/local/repo", "author": "avpinchuk", "createdAt": "2020-12-29T18:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4OTA0MA=="}], "type": "inlineReview", "revised_code": {"commit": "1451ebdecd46867c0730444f92663ee795e9d6e2", "chunk": "diff --git a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\nindex fb92c48a9a..6a01805522 100644\n--- a/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n+++ b/appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java\n\n@@ -1662,13 +1661,15 @@ public class PayaraMicroImpl implements PayaraMicroBoot {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        String artefactName = getFileName(artefactURI.getPath());\n-                        String name = artefactName.substring(0, artefactName.length() - 4);\n+                        String artefactName = new File(artefactURI).getName();\n+                        if (hasJavaArchiveExtension(artefactName)) {\n+                            artefactName = artefactName.substring(0, artefactName.length() - 4);\n+                        }\n \n                         deployer.deploy(artefactURI,\n                                 \"--availabilityenabled\", \"true\",\n                                 \"--contextroot\", deploymentMapEntry.getKey(),\n-                                \"--name\", name,\n+                                \"--name\", artefactName,\n                                 \"--force=true\", \"--loadOnly\", \"true\");\n \n                         deploymentCount++;\n"}}, {"oid": "1451ebdecd46867c0730444f92663ee795e9d6e2", "url": "https://github.com/payara/Payara/commit/1451ebdecd46867c0730444f92663ee795e9d6e2", "message": "refactored primitive obsession when getting file name from path to existing java File() class", "committedDate": "2020-12-29T20:51:27Z", "type": "commit"}, {"oid": "1d9a532691c8052344734067301227def2787b8d", "url": "https://github.com/payara/Payara/commit/1d9a532691c8052344734067301227def2787b8d", "message": "factore out removeJavaArchiveExtension()", "committedDate": "2020-12-29T20:59:19Z", "type": "commit"}, {"oid": "6501fee90ab23a967e45302f0ab431dc4a7917ed", "url": "https://github.com/payara/Payara/commit/6501fee90ab23a967e45302f0ab431dc4a7917ed", "message": "Merge pull request #1 from flowlogix/gav-branch\n\nrefactored primitive obsession when getting file name from path to ex\u2026", "committedDate": "2020-12-30T19:11:06Z", "type": "commit"}, {"oid": "361e8ec4ad46baf3ca4e10390da998c58b222bf6", "url": "https://github.com/payara/Payara/commit/361e8ec4ad46baf3ca4e10390da998c58b222bf6", "message": "Fix IllegalArgumentException for remote maven artifacts", "committedDate": "2020-12-30T20:07:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMwMzM3Mw==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r553303373", "bodyText": "I'm probably being blind, but is there a reason this is being made static?", "author": "Pandrex247", "createdAt": "2021-01-07T12:39:57Z", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1679,7 +1673,18 @@ private void deployAll() throws GlassFishException {\n         LOGGER.log(Level.INFO, \"Deployed {0} archive(s)\", deploymentCount);\n     }\n \n-    private boolean hasJavaArchiveExtension(String filePath) {\n+    private String removeJavaArchiveExtension(String fileName) {\n+        if (hasJavaArchiveExtension(fileName)) {\n+            return fileName.substring(0, fileName.length() - 4);\n+        } else {\n+            return fileName;\n+        }\n+    }\n+\n+    private static boolean hasJavaArchiveExtension(String filePath) {", "originalCommit": "361e8ec4ad46baf3ca4e10390da998c58b222bf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM5NTE0NA==", "url": "https://github.com/payara/Payara/pull/5071#discussion_r553395144", "bodyText": "Because it has no access to fields. Good enough reason for me :)", "author": "lprimak", "createdAt": "2021-01-07T15:23:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMwMzM3Mw=="}], "type": "inlineReview", "revised_code": null}]}