{"pr_number": 4451, "pr_title": "APPSERV-22 Remove Derby", "pr_createdAt": "2020-01-23T09:06:50Z", "pr_url": "https://github.com/payara/Payara/pull/4451", "timeline": [{"oid": "acce8755955cd641e5a65ba99911f6c6c646c73a", "url": "https://github.com/payara/Payara/commit/acce8755955cd641e5a65ba99911f6c6c646c73a", "message": "Remove Derby from the following:\n* Database related asadmin commands\n* Core code of JBatch", "committedDate": "2019-12-17T14:41:56Z", "type": "commit"}, {"oid": "0dd4e81317fb4071ac8f4e7c73695a876bd884b3", "url": "https://github.com/payara/Payara/commit/0dd4e81317fb4071ac8f4e7c73695a876bd884b3", "message": "Removed Derby from QuickLook tests", "committedDate": "2020-01-08T15:42:23Z", "type": "commit"}, {"oid": "dde35a970b0d5b37bfdc192c75b4c14a4670dfa8", "url": "https://github.com/payara/Payara/commit/dde35a970b0d5b37bfdc192c75b4c14a4670dfa8", "message": "Removed Derby from JDBC related code", "committedDate": "2020-01-08T15:50:18Z", "type": "commit"}, {"oid": "513c5df69c63739f2484e750e443f4ee18e75525", "url": "https://github.com/payara/Payara/commit/513c5df69c63739f2484e750e443f4ee18e75525", "message": "Removed derby related code from nucleus/admin/config-api module", "committedDate": "2020-01-08T15:51:19Z", "type": "commit"}, {"oid": "048fa15c6818f1bde7ddaebaaebe699d79079c3e", "url": "https://github.com/payara/Payara/commit/048fa15c6818f1bde7ddaebaaebe699d79079c3e", "message": "Removed Derby related code from nucleus folder", "committedDate": "2020-01-08T15:52:34Z", "type": "commit"}, {"oid": "98b67b98f80dde55a51f4316f8452daf6887d415", "url": "https://github.com/payara/Payara/commit/98b67b98f80dde55a51f4316f8452daf6887d415", "message": "Removed derby related code from appserver folder", "committedDate": "2020-01-08T15:57:14Z", "type": "commit"}, {"oid": "096028a509a807217d2f4bc07911a80d00d33d28", "url": "https://github.com/payara/Payara/commit/096028a509a807217d2f4bc07911a80d00d33d28", "message": "Updated the Jenkins script files to use H2 database", "committedDate": "2020-01-27T13:23:03Z", "type": "commit"}, {"oid": "c372ec85a0ce80e1997b842d5c2f31ac904360d5", "url": "https://github.com/payara/Payara/commit/c372ec85a0ce80e1997b842d5c2f31ac904360d5", "message": "Update the properties on JDBC-RA to use H2 properties", "committedDate": "2020-01-27T13:30:27Z", "type": "commit"}, {"oid": "ce10b914b3c7b43c1f982c644d5c98467082a4ef", "url": "https://github.com/payara/Payara/commit/ce10b914b3c7b43c1f982c644d5c98467082a4ef", "message": "Update JVM options to use H2 database", "committedDate": "2020-01-27T13:32:39Z", "type": "commit"}, {"oid": "7a2dcad252253489126a30ec0f591313ff70fbdd", "url": "https://github.com/payara/Payara/commit/7a2dcad252253489126a30ec0f591313ff70fbdd", "message": "Fixed the false positive where the QuickLook tests were displaying as passing even after failing to insert data into the database", "committedDate": "2020-01-27T13:36:25Z", "type": "commit"}, {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0", "url": "https://github.com/payara/Payara/commit/d39e5fd63c563b9c295fdee833ce7cce89eaf9b0", "message": "Merge branch 'master' of https://github.com/payara/Payara into APPSERV-22", "committedDate": "2020-01-27T13:51:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMzk2MA==", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373403960", "bodyText": "I assume this is not needed for H2 for some reason?", "author": "jbee", "createdAt": "2020-01-31T10:11:05Z", "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "diffHunk": "@@ -211,8 +206,6 @@ public void init(IBatchConfig batchConfig) throws BatchContainerServiceException\n     public CheckpointData getCheckpointData(CheckpointDataKey key) {\n         logger.entering(CLASSNAME, \"getCheckpointData\", key == null ? \"<null>\" : key);\n \n-        tryObtainTableLock();", "originalCommit": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI0NDA5Nw==", "url": "https://github.com/payara/Payara/pull/4451#discussion_r378244097", "bodyText": "This was written specifically for Derby", "author": "MeroRai", "createdAt": "2020-02-12T13:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMzk2MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNDgxMw==", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373404813", "bodyText": "These contains checks were changed from doing lower case (case-less) comparison to case-sensitive ones. I feel this could be a source of error. Is this a intentional change?", "author": "jbee", "createdAt": "2020-01-31T10:13:10Z", "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "diffHunk": "@@ -255,2216 +246,2203 @@ public void updateCheckpointData(CheckpointDataKey key, CheckpointData value) {\n      */\n     @Override\n     public void createCheckpointData(CheckpointDataKey key, CheckpointData value) {\n-        logger.entering(CLASSNAME, \"createCheckpointData\", new Object[] { key, value });\n+        logger.entering(CLASSNAME, \"createCheckpointData\", new Object[]{key, value});\n \n         insertCheckpointData(key.getCommaSeparatedKey(), value);\n \n         logger.exiting(CLASSNAME, \"createCheckpointData\");\n     }\n \n     /**\n-     * Set the default schema to the username obtained from the connection based on the datasource\n+     * Set the default schema to the username obtained from the connection based\n+     * on the datasource\n      *\n      * @return the name of the default database schema\n      * @throws SQLException\n      */\n     public String setDefaultSchema() throws SQLException {\n-\t\tlogger.finest(\"Entering setDefaultSchema\");\n+        logger.finest(\"Entering setDefaultSchema\");\n+\n+        logger.finest(\"Java EE mode, getting connection from data source\");\n+        try (Connection connection = dataSource.getConnection()) {\n+\n+            DatabaseMetaData dbmd = connection.getMetaData();\n+            schema = dbmd.getUserName();\n+            String databaseProductName = dbmd.getDatabaseProductName();\n+            if (databaseProductName.contains(\"MySQL\")) {", "originalCommit": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edef8d75448cdfcfab58caedc3a7684729b4ce25", "chunk": "diff --git a/appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java b/appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java\nindex a5ce48e7cc..0767a3b553 100644\n--- a/appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java\n+++ b/appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java\n\n@@ -268,12 +268,12 @@ public class JBatchJDBCPersistenceManager implements\n \n             DatabaseMetaData dbmd = connection.getMetaData();\n             schema = dbmd.getUserName();\n-            String databaseProductName = dbmd.getDatabaseProductName();\n-            if (databaseProductName.contains(\"MySQL\")) {\n+            String databaseProductName = dbmd.getDatabaseProductName().toLowerCase();\n+            if (databaseProductName.contains(\"mysql\")) {\n                 schema = \"test\";\n-            } else if (databaseProductName.contains(\"PostgreSQL\")) {\n+            } else if (databaseProductName.contains(\"postgres\")) {\n                 schema = \"public\";\n-            } else if (databaseProductName.contains(\"H2\")) {\n+            } else if (databaseProductName.contains(\"h2\")) {\n                 schema = \"PUBLIC\";\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxMjIxNg==", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373412216", "bodyText": "Remove?", "author": "jbee", "createdAt": "2020-01-31T10:30:12Z", "path": "appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java", "diffHunk": "@@ -337,7 +337,7 @@ private void insertInfo(Roster myRoster) {\n \n        try {\n            // Leagues\n-\n+System.out.println(\"Adding things\");", "originalCommit": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edef8d75448cdfcfab58caedc3a7684729b4ce25", "chunk": "diff --git a/appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java b/appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java\nindex 2c3439c18e..c9541f88d2 100644\n--- a/appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java\n+++ b/appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java\n\n@@ -337,7 +337,6 @@ public class RosterServlet extends HttpServlet{\n \n        try {\n            // Leagues\n-System.out.println(\"Adding things\");\n            myRoster.createLeague(new LeagueDetails(\n               \"L1\", \"Mountain\", \"Soccer\"));\n \n"}}, {"oid": "edef8d75448cdfcfab58caedc3a7684729b4ce25", "url": "https://github.com/payara/Payara/commit/edef8d75448cdfcfab58caedc3a7684729b4ce25", "message": "* Made the database product name case-less.\n* Removed the debug print line", "committedDate": "2020-02-11T15:11:35Z", "type": "commit"}, {"oid": "62877d3309cc5ad8999e4b011591b169f8390f0b", "url": "https://github.com/payara/Payara/commit/62877d3309cc5ad8999e4b011591b169f8390f0b", "message": "Added copyright headers", "committedDate": "2020-02-12T11:41:02Z", "type": "commit"}, {"oid": "b6c8855b87473465a21beb853ed8a0145e891bae", "url": "https://github.com/payara/Payara/commit/b6c8855b87473465a21beb853ed8a0145e891bae", "message": "Fixed QuickLook issue where a package was not imported", "committedDate": "2020-02-12T13:05:08Z", "type": "commit"}, {"oid": "1e9b608735c3401298a08b79b00410aa8cd9b84d", "url": "https://github.com/payara/Payara/commit/1e9b608735c3401298a08b79b00410aa8cd9b84d", "message": "Added back the required Derby related code. This was done to support Derby during the JDBC Connection pool creation.", "committedDate": "2020-02-18T13:47:50Z", "type": "commit"}, {"oid": "6808460735acacd1abf856a38056cea5a9c2bf8f", "url": "https://github.com/payara/Payara/commit/6808460735acacd1abf856a38056cea5a9c2bf8f", "message": "Fixed Could not initialize class isue on DBVendorTypeHelper", "committedDate": "2020-02-19T09:23:49Z", "type": "commit"}, {"oid": "23880c03f6d3067725d91d8c9a6711e3e933209d", "url": "https://github.com/payara/Payara/commit/23880c03f6d3067725d91d8c9a6711e3e933209d", "message": "Fixed the conflicts on the domain.xml files", "committedDate": "2020-02-19T10:20:47Z", "type": "commit"}]}