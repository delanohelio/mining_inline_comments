{"pr_number": 4622, "pr_title": "CUSTCOM-133 Code cleanup in security", "pr_createdAt": "2020-04-15T07:46:47Z", "pr_url": "https://github.com/payara/Payara/pull/4622", "timeline": [{"oid": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b", "url": "https://github.com/payara/Payara/commit/d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b", "message": "CUSTCOM-133 Cleanups around security\n\n- trimmed white spaces, manual formatting\n- more logging\n- added javadocs\n- enhanced loops\n- WebContainer:1812\n  - removed dead code, simplified\n- WebModuleConfig\n  - new method isSystemObjectType; it was weird to make this comparison outside\n    the object", "committedDate": "2020-04-16T11:09:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTAwOQ==", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409625009", "bodyText": "(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    initialize(appname);\n          \n          \n            \n                    initialise(appname);", "author": "Pandrex247", "createdAt": "2020-04-16T14:57:39Z", "path": "appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java", "diffHunk": "@@ -181,38 +178,36 @@ public JaccWebAuthorizationManager(WebBundleDescriptor webBundleDescriptor, Serv\n         this.CONTEXT_ID = getContextID(webBundleDescriptor);\n         this.serverContext = serverContext;\n         this.webSecurityManagerFactory = webSecurityManagerFactory;\n-        \n-        String appname = getAppId();\n \n-        postConstruct();\n-        \n+        String appname = getAppId();\n+        SecurityRoleMapperFactoryGen.getSecurityRoleMapperFactory().setAppNameForContext(getAppId(), CONTEXT_ID);\n         // Initialize this class and specifically load permissions into the JACC Policy Configuration.\n-        initialise(appname);\n+        initialize(appname);", "originalCommit": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1MTg1MQ==", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409651851", "bodyText": "Funny, I knew that there are differences between uk and us, but I assumed this is a mistake even in UK :D\nhttps://english.stackexchange.com/questions/459553/initialised-or-initialized-which-one-is-correct-spelling\nIn czech variant of this word is \"s\" variant obsoleted. I don't want to start any long discussion, but generally, should we prefer us or uk when we are EU-based?\nI did some \"research\" in Payara sources:\n\n\n\nprobably we should be more consistent at least ...", "author": "dmatej", "createdAt": "2020-04-16T15:33:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NTgyNQ==", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409665825", "bodyText": "I will revert it back, as it is not the only requested change and payara sources don't use consistent language, this change can be done in separate issue making the language consistent.", "author": "dmatej", "createdAt": "2020-04-16T15:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTAwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "37627552b2006849ae6a3835f6d6fb0898e91ad6", "chunk": "diff --git a/appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java b/appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java\nindex 0458202db3..6cee49355e 100644\n--- a/appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java\n+++ b/appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java\n\n@@ -181,8 +181,7 @@ public class JaccWebAuthorizationManager {\n \n         String appname = getAppId();\n         SecurityRoleMapperFactoryGen.getSecurityRoleMapperFactory().setAppNameForContext(getAppId(), CONTEXT_ID);\n-        // Initialize this class and specifically load permissions into the JACC Policy Configuration.\n-        initialize(appname);\n+        initialise(appname);\n     }\n \n     // fix for CR 6155144\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzMzIwNA==", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409633204", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param defaultRealmName - this realm name will be used as a default if there will not be\n          \n          \n            \n                 * @param defaultRealmName - this realm name will be used as a default if there is not\n          \n      \n    \n    \n  \n\nGrammar", "author": "Pandrex247", "createdAt": "2020-04-16T15:08:19Z", "path": "nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java", "diffHunk": "@@ -37,22 +37,38 @@\n  * only if the new code is made subject to such option by the copyright\n  * holder.\n  */\n-// Portions Copyright [2019] [Payara Foundation and/or its affiliates]\n+// Portions Copyright [2019-2020] [Payara Foundation and/or its affiliates]\n package com.sun.enterprise.security.integration;\n \n /**\n  * Interface to facilitate Initialization of the injected Realm Instance with Application Descriptor info.\n- * \n+ *\n  * <p>\n  * See com.sun.enterprise.web.WebContainer and com.sun.web.security.RealmAdapter\n  */\n public interface RealmInitializer {\n \n-    void initializeRealm(Object bundledescriptor, boolean isSystemApp, String realmName);\n+    /**\n+     * Initializes the internal state of this instance with provided parameters.\n+     *\n+     * @param bundleDescriptor - contains bundle-specific configuration\n+     * @param isSystemApp - realm may have different behavior for system applications\n+     * @param defaultRealmName - this realm name will be used as a default if there will not be", "originalCommit": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37627552b2006849ae6a3835f6d6fb0898e91ad6", "chunk": "diff --git a/nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java b/nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java\nindex 4de7ace884..1515b804b2 100644\n--- a/nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java\n+++ b/nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java\n\n@@ -53,7 +53,7 @@ public interface RealmInitializer {\n      *\n      * @param bundleDescriptor - contains bundle-specific configuration\n      * @param isSystemApp - realm may have different behavior for system applications\n-     * @param defaultRealmName - this realm name will be used as a default if there will not be\n+     * @param defaultRealmName - this realm name will be used as a default if there is not\n      *            any other configured in the descriptor.\n      */\n     void initializeRealm(Object bundleDescriptor, boolean isSystemApp, String defaultRealmName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzNTEwOA==", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409635108", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if ( listener == null ) {\n          \n          \n            \n                    if (listener == null) {", "author": "Pandrex247", "createdAt": "2020-04-16T15:10:59Z", "path": "appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java", "diffHunk": "@@ -1266,7 +1264,9 @@ protected void addValve(org.glassfish.web.deployment.runtime.Valve valveDescript\n     protected void addCatalinaListener(String listenerName) {\n         Object listener = loadInstance(listenerName);\n \n-        if ( listener == null ) return;\n+        if ( listener == null ) {", "originalCommit": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37627552b2006849ae6a3835f6d6fb0898e91ad6", "chunk": "diff --git a/appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java b/appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java\nindex 8040917b98..d2940f0465 100644\n--- a/appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java\n+++ b/appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java\n\n@@ -1262,9 +1262,8 @@ public class WebModule extends PwcWebModule implements Context {\n      * @param listenerName The fully qualified class name of the listener\n      */\n     protected void addCatalinaListener(String listenerName) {\n-        Object listener = loadInstance(listenerName);\n-\n-        if ( listener == null ) {\n+        final Object listener = loadInstance(listenerName);\n+        if (listener == null) {\n             return;\n         }\n \n"}}, {"oid": "37627552b2006849ae6a3835f6d6fb0898e91ad6", "url": "https://github.com/payara/Payara/commit/37627552b2006849ae6a3835f6d6fb0898e91ad6", "message": "CUSTCOM-133 Cleanups around security\n\n- trimmed white spaces, manual formatting\n- more logging\n- added javadocs\n- enhanced loops\n- WebContainer:1812\n  - removed dead code, simplified\n- WebModuleConfig\n  - new method isSystemObjectType; it was weird to make this comparison outside\n    the object", "committedDate": "2020-04-16T16:27:40Z", "type": "commit"}, {"oid": "37627552b2006849ae6a3835f6d6fb0898e91ad6", "url": "https://github.com/payara/Payara/commit/37627552b2006849ae6a3835f6d6fb0898e91ad6", "message": "CUSTCOM-133 Cleanups around security\n\n- trimmed white spaces, manual formatting\n- more logging\n- added javadocs\n- enhanced loops\n- WebContainer:1812\n  - removed dead code, simplified\n- WebModuleConfig\n  - new method isSystemObjectType; it was weird to make this comparison outside\n    the object", "committedDate": "2020-04-16T16:27:40Z", "type": "forcePushed"}]}