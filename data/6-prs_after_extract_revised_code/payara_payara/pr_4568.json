{"pr_number": 4568, "pr_title": "APPSERV-57 Updates to MicroProfile Fault Tolerance 2.1", "pr_createdAt": "2020-03-09T14:35:16Z", "pr_url": "https://github.com/payara/Payara/pull/4568", "timeline": [{"oid": "924324f016f2a36921ed7ba80755320640d853c5", "url": "https://github.com/payara/Payara/commit/924324f016f2a36921ed7ba80755320640d853c5", "message": "APPSERV-57 FT 2.1 baseline", "committedDate": "2020-03-09T12:27:53Z", "type": "commit"}, {"oid": "891ad719f7b72d9eae1cefe63b7455abda973ad9", "url": "https://github.com/payara/Payara/commit/891ad719f7b72d9eae1cefe63b7455abda973ad9", "message": "APPSERV-57 adds Bulkhead CompletionStage special semantics", "committedDate": "2020-03-09T14:12:44Z", "type": "commit"}, {"oid": "ee5695fb9cdb89d184896d1a2768a30bbf13fab8", "url": "https://github.com/payara/Payara/commit/ee5695fb9cdb89d184896d1a2768a30bbf13fab8", "message": "APPSERV-57 fixes special bulkhead semantics only applied for async methods", "committedDate": "2020-03-09T15:12:02Z", "type": "commit"}, {"oid": "c7815826dd567c0787e28f27f7cc3cce18a90b79", "url": "https://github.com/payara/Payara/commit/c7815826dd567c0787e28f27f7cc3cce18a90b79", "message": "APPSERV-57 adds unit tests for special bulkhead semantics, updates copyright headers", "committedDate": "2020-03-09T16:10:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyMjYzNQ==", "url": "https://github.com/payara/Payara/pull/4568#discussion_r394922635", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return True if the exception is considered a failure, false if it is considered a success (anyway).\n          \n          \n            \n                 * @return True if the exception is considered a failure, false if it is considered a success.", "author": "Pandrex247", "createdAt": "2020-03-19T10:21:00Z", "path": "appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/CircuitBreakerPolicy.java", "diffHunk": "@@ -95,12 +96,23 @@ public static CircuitBreakerPolicy create(InvocationContext context, FaultTolera\n     }\n \n     /**\n-     * Helper method that checks whether or not the given exception is included in the failOn parameter.\n+     * Helper method that checks whether or not the given exception is considered a success or failure.\n+     * \n+     * Relevant part from the {@link CircuitBreaker} documentation:\n+     * <blockquote>\n+     * When a method returns a result, the following rules are applied to determine whether the result is a success or a failure:\n+     * <ul>\n+     * <li>If the method does not throw a {@link Throwable}, it is considered a success\n+     * <li>Otherwise, if the thrown object is assignable to any value in the {@link #skipOn()} parameter, is is considered a success\n+     * <li>Otherwise, if the thrown object is assignable to any value in the {@link #failOn()} parameter, it is considered a failure\n+     * <li>Otherwise it is considered a success\n+     * </ul>\n+     * </blockquote>\n      * \n      * @param ex The exception to check\n-     * @return True if the exception is covered by {@link #failOn} list of this policy\n+     * @return True if the exception is considered a failure, false if it is considered a success (anyway).", "originalCommit": "c7815826dd567c0787e28f27f7cc3cce18a90b79", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4cbdb4c3da68096afb7e606974e7354db7bdf4f1", "chunk": "diff --git a/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/CircuitBreakerPolicy.java b/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/CircuitBreakerPolicy.java\nindex 3811ac811f..531bc693dd 100644\n--- a/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/CircuitBreakerPolicy.java\n+++ b/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/CircuitBreakerPolicy.java\n\n@@ -110,7 +110,7 @@ public final class CircuitBreakerPolicy extends Policy {\n      * </blockquote>\n      * \n      * @param ex The exception to check\n-     * @return True if the exception is considered a failure, false if it is considered a success (anyway).\n+     * @return True if the exception is considered a failure, false if it is considered a success.\n      */\n     public boolean isFailure(Throwable ex) {\n         return !Policy.isCaught(ex, skipOn) && Policy.isCaught(ex, failOn);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk2MzM2Mw==", "url": "https://github.com/payara/Payara/pull/4568#discussion_r394963363", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    return ((CompletionStage<?>) res).whenComplete((value, excetion) -> {\n          \n          \n            \n                                    return ((CompletionStage<?>) res).whenComplete((value, exception) -> {\n          \n      \n    \n    \n  \n\nPresumably meant to be exception?", "author": "Pandrex247", "createdAt": "2020-03-19T11:37:42Z", "path": "appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/FaultTolerancePolicy.java", "diffHunk": "@@ -579,15 +601,28 @@ private Object processBulkheadStage(FaultToleranceInvocation invocation) throws\n                     try {\n                         logger.log(Level.FINE, \"Entered bulkhead execution.\");\n                         // ok, lets run\n-                        return proceed(invocation);\n+                        Object res = proceed(invocation);\n+                        if (!exitOnCompletion) {\n+                            return res;\n+                        }\n+                        return ((CompletionStage<?>) res).whenComplete((value, excetion) -> {", "originalCommit": "c7815826dd567c0787e28f27f7cc3cce18a90b79", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e056a4e3c62256fe478120ae156179ae34c156a", "chunk": "diff --git a/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/FaultTolerancePolicy.java b/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/FaultTolerancePolicy.java\nindex f608c60582..bdcbaae338 100644\n--- a/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/FaultTolerancePolicy.java\n+++ b/appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/FaultTolerancePolicy.java\n\n@@ -605,7 +605,7 @@ public final class FaultTolerancePolicy implements Serializable {\n                         if (!exitOnCompletion) {\n                             return res;\n                         }\n-                        return ((CompletionStage<?>) res).whenComplete((value, excetion) -> {\n+                        return ((CompletionStage<?>) res).whenComplete((value, exception) -> {\n                             invocation.metrics.addBulkheadExecutionDuration(Math.max(1, System.nanoTime() - executionSince));\n                             // successful or not, we are out...\n                             running.remove(currentThread);\n"}}, {"oid": "7e056a4e3c62256fe478120ae156179ae34c156a", "url": "https://github.com/payara/Payara/commit/7e056a4e3c62256fe478120ae156179ae34c156a", "message": "Update appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/FaultTolerancePolicy.java\n\nCo-Authored-By: Andrew Pielage <pandrex247@hotmail.com>", "committedDate": "2020-03-19T12:51:11Z", "type": "commit"}, {"oid": "4cbdb4c3da68096afb7e606974e7354db7bdf4f1", "url": "https://github.com/payara/Payara/commit/4cbdb4c3da68096afb7e606974e7354db7bdf4f1", "message": "Update appserver/payara-appserver-modules/microprofile/fault-tolerance/src/main/java/fish/payara/microprofile/faulttolerance/policy/CircuitBreakerPolicy.java\n\nCo-Authored-By: Andrew Pielage <pandrex247@hotmail.com>", "committedDate": "2020-03-19T12:51:28Z", "type": "commit"}]}