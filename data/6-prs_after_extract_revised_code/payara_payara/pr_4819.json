{"pr_number": 4819, "pr_title": "FISH-257 Adds RAG Status metrics and watches for MP Health Checks", "pr_createdAt": "2020-08-06T16:51:18Z", "pr_url": "https://github.com/payara/Payara/pull/4819", "timeline": [{"oid": "a408a3ef8023720b76e23e71d6e3197b4b371440", "url": "https://github.com/payara/Payara/commit/a408a3ef8023720b76e23e71d6e3197b4b371440", "message": "FISH-257 adds MP health series and watch collection with aggregates", "committedDate": "2020-08-06T10:27:33Z", "type": "commit"}, {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561", "url": "https://github.com/payara/Payara/commit/d17a793ae50b3edd737573acbe2221dee60fa561", "message": "FISH-257 details adjustments", "committedDate": "2020-08-06T15:22:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2MDAwOA==", "url": "https://github.com/payara/Payara/pull/4819#discussion_r466860008", "bodyText": "This is a hit left for people looking into FISH-367", "author": "jbee", "createdAt": "2020-08-07T07:04:43Z", "path": "appserver/payara-appserver-modules/microprofile/healthcheck/src/main/java/fish/payara/microprofile/healthcheck/HealthCheckService.java", "diffHunk": "@@ -231,6 +370,7 @@ public void registerClassLoader(String appName, ClassLoader classloader) {\n                         oldValue.addAll(newValue);\n                         return oldValue;\n                     });\n+            //FIXME most likely this unintentionally changes the fields", "originalCommit": "d17a793ae50b3edd737573acbe2221dee60fa561", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2MDQ5NA==", "url": "https://github.com/payara/Payara/pull/4819#discussion_r466860494", "bodyText": "FYI: This state is needed to know when collecting watches which metrics have been collected before.", "author": "jbee", "createdAt": "2020-08-07T07:05:51Z", "path": "appserver/payara-appserver-modules/microprofile/healthcheck/src/main/java/fish/payara/microprofile/healthcheck/HealthCheckService.java", "diffHunk": "@@ -115,6 +125,8 @@\n     private final Map<String, ClassLoader> applicationClassLoaders = new ConcurrentHashMap<>();\n     private final List<String> applicationsLoaded = new CopyOnWriteArrayList<>();\n \n+    private final AtomicReference<Map<String, Set<String>>> checksCollected = new AtomicReference<>();", "originalCommit": "d17a793ae50b3edd737573acbe2221dee60fa561", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}