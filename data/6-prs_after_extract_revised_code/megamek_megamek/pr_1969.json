{"pr_number": 1969, "pr_title": "Draw larger arrow for final facing of move", "pr_createdAt": "2020-05-21T05:57:18Z", "pr_url": "https://github.com/MegaMek/megamek/pull/1969", "timeline": [{"oid": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "url": "https://github.com/MegaMek/megamek/commit/dcf74a590f51232602f6595bf5b555b8e1b2a06e", "message": "Draw larger arrow for final facing of legal move, this includes showing facing for hex just entered.  Cleanup variable names.", "committedDate": "2020-05-21T05:46:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNjY1NQ==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428606655", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (int dir: allDirections)\n          \n          \n            \n                    {\n          \n          \n            \n                    for (int dir : allDirections) {", "author": "Windchild292", "createdAt": "2020-05-21T11:53:49Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -4620,8 +4621,26 @@ public void initPolys() {\n         facingPolys = new Shape[8];\n         for (int dir: allDirections)\n         {\n-            facingPolys[dir] = FacingRotate.createTransformedShape(facingPoly_tmp);\n-            FacingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+            facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+        }\n+\n+        // final facing polygons\n+        Polygon finalFacingPoly_tmp = new Polygon();\n+        finalFacingPoly_tmp.addPoint(41, 3);\n+        finalFacingPoly_tmp.addPoint(21, 18);\n+        finalFacingPoly_tmp.addPoint(41, 14);\n+        finalFacingPoly_tmp.addPoint(42, 14);\n+        finalFacingPoly_tmp.addPoint(61, 18);\n+        finalFacingPoly_tmp.addPoint(42, 3);\n+\n+        // create the rotated shapes\n+        facingRotate.setToIdentity();\n+        finalFacingPolys = new Shape[8];\n+        for (int dir: allDirections)\n+        {", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex 6d695cd52b..d826f534f3 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -4609,80 +4609,77 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n         AffineTransform facingRotate = new AffineTransform();\n \n         // facing polygons\n-        Polygon facingPoly_tmp = new Polygon();\n-        facingPoly_tmp.addPoint(41, 3);\n-        facingPoly_tmp.addPoint(35, 9);\n-        facingPoly_tmp.addPoint(41, 7);\n-        facingPoly_tmp.addPoint(42, 7);\n-        facingPoly_tmp.addPoint(48, 9);\n-        facingPoly_tmp.addPoint(42, 3);\n+        Polygon facingPolyTmp = new Polygon();\n+        facingPolyTmp.addPoint(41, 3);\n+        facingPolyTmp.addPoint(35, 9);\n+        facingPolyTmp.addPoint(41, 7);\n+        facingPolyTmp.addPoint(42, 7);\n+        facingPolyTmp.addPoint(48, 9);\n+        facingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+        for (int dir : allDirections) {\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // final facing polygons\n-        Polygon finalFacingPoly_tmp = new Polygon();\n-        finalFacingPoly_tmp.addPoint(41, 3);\n-        finalFacingPoly_tmp.addPoint(21, 18);\n-        finalFacingPoly_tmp.addPoint(41, 14);\n-        finalFacingPoly_tmp.addPoint(42, 14);\n-        finalFacingPoly_tmp.addPoint(61, 18);\n-        finalFacingPoly_tmp.addPoint(42, 3);\n+        Polygon finalFacingPolyTmp = new Polygon();\n+        finalFacingPolyTmp.addPoint(41, 3);\n+        finalFacingPolyTmp.addPoint(21, 18);\n+        finalFacingPolyTmp.addPoint(41, 14);\n+        finalFacingPolyTmp.addPoint(42, 14);\n+        finalFacingPolyTmp.addPoint(61, 18);\n+        finalFacingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         finalFacingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPoly_tmp);\n+        for (int dir : allDirections) {\n+            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // movement polygons\n-        Polygon movementPoly_tmp = new Polygon();\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(48, 66);\n-        movementPoly_tmp.addPoint(42, 62);\n-        movementPoly_tmp.addPoint(41, 62);\n-        movementPoly_tmp.addPoint(35, 66);\n-        movementPoly_tmp.addPoint(36, 67);\n-\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(45, 68);\n-        movementPoly_tmp.addPoint(38, 68);\n-        movementPoly_tmp.addPoint(38, 69);\n-        movementPoly_tmp.addPoint(45, 69);\n-        movementPoly_tmp.addPoint(45, 68);\n-\n-        movementPoly_tmp.addPoint(45, 70);\n-        movementPoly_tmp.addPoint(38, 70);\n-        movementPoly_tmp.addPoint(38, 71);\n-        movementPoly_tmp.addPoint(45, 71);\n-        movementPoly_tmp.addPoint(45, 68);\n+        Polygon movementPolyTmp = new Polygon();\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(48, 66);\n+        movementPolyTmp.addPoint(42, 62);\n+        movementPolyTmp.addPoint(41, 62);\n+        movementPolyTmp.addPoint(35, 66);\n+        movementPolyTmp.addPoint(36, 67);\n+\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(45, 68);\n+        movementPolyTmp.addPoint(38, 68);\n+        movementPolyTmp.addPoint(38, 69);\n+        movementPolyTmp.addPoint(45, 69);\n+        movementPolyTmp.addPoint(45, 68);\n+\n+        movementPolyTmp.addPoint(45, 70);\n+        movementPolyTmp.addPoint(38, 70);\n+        movementPolyTmp.addPoint(38, 71);\n+        movementPolyTmp.addPoint(45, 71);\n+        movementPolyTmp.addPoint(45, 68);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+        for (int dir : allDirections) {\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // Up and Down Arrows\n         facingRotate.setToIdentity();\n         facingRotate.translate(0, -31);\n-        upArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        upArrow = facingRotate.createTransformedShape(movementPolyTmp);\n \n         facingRotate.setToIdentity();\n         facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n         facingRotate.translate(0, -31);\n-        downArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        downArrow = facingRotate.createTransformedShape(movementPolyTmp);\n     }\n \n     synchronized boolean doMoveUnits(long idleTime) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNjg2MA==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428606860", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n          \n          \n            \n                        facingRotate.rotate(Math.toRadians(60), HEX_W / 2, HEX_H / 2);", "author": "Windchild292", "createdAt": "2020-05-21T11:54:19Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -4620,8 +4621,26 @@ public void initPolys() {\n         facingPolys = new Shape[8];\n         for (int dir: allDirections)\n         {\n-            facingPolys[dir] = FacingRotate.createTransformedShape(facingPoly_tmp);\n-            FacingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+            facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+        }\n+\n+        // final facing polygons\n+        Polygon finalFacingPoly_tmp = new Polygon();\n+        finalFacingPoly_tmp.addPoint(41, 3);\n+        finalFacingPoly_tmp.addPoint(21, 18);\n+        finalFacingPoly_tmp.addPoint(41, 14);\n+        finalFacingPoly_tmp.addPoint(42, 14);\n+        finalFacingPoly_tmp.addPoint(61, 18);\n+        finalFacingPoly_tmp.addPoint(42, 3);\n+\n+        // create the rotated shapes\n+        facingRotate.setToIdentity();\n+        finalFacingPolys = new Shape[8];\n+        for (int dir: allDirections)\n+        {\n+            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPoly_tmp);\n+            facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex 6d695cd52b..d826f534f3 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -4609,80 +4609,77 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n         AffineTransform facingRotate = new AffineTransform();\n \n         // facing polygons\n-        Polygon facingPoly_tmp = new Polygon();\n-        facingPoly_tmp.addPoint(41, 3);\n-        facingPoly_tmp.addPoint(35, 9);\n-        facingPoly_tmp.addPoint(41, 7);\n-        facingPoly_tmp.addPoint(42, 7);\n-        facingPoly_tmp.addPoint(48, 9);\n-        facingPoly_tmp.addPoint(42, 3);\n+        Polygon facingPolyTmp = new Polygon();\n+        facingPolyTmp.addPoint(41, 3);\n+        facingPolyTmp.addPoint(35, 9);\n+        facingPolyTmp.addPoint(41, 7);\n+        facingPolyTmp.addPoint(42, 7);\n+        facingPolyTmp.addPoint(48, 9);\n+        facingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+        for (int dir : allDirections) {\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // final facing polygons\n-        Polygon finalFacingPoly_tmp = new Polygon();\n-        finalFacingPoly_tmp.addPoint(41, 3);\n-        finalFacingPoly_tmp.addPoint(21, 18);\n-        finalFacingPoly_tmp.addPoint(41, 14);\n-        finalFacingPoly_tmp.addPoint(42, 14);\n-        finalFacingPoly_tmp.addPoint(61, 18);\n-        finalFacingPoly_tmp.addPoint(42, 3);\n+        Polygon finalFacingPolyTmp = new Polygon();\n+        finalFacingPolyTmp.addPoint(41, 3);\n+        finalFacingPolyTmp.addPoint(21, 18);\n+        finalFacingPolyTmp.addPoint(41, 14);\n+        finalFacingPolyTmp.addPoint(42, 14);\n+        finalFacingPolyTmp.addPoint(61, 18);\n+        finalFacingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         finalFacingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPoly_tmp);\n+        for (int dir : allDirections) {\n+            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // movement polygons\n-        Polygon movementPoly_tmp = new Polygon();\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(48, 66);\n-        movementPoly_tmp.addPoint(42, 62);\n-        movementPoly_tmp.addPoint(41, 62);\n-        movementPoly_tmp.addPoint(35, 66);\n-        movementPoly_tmp.addPoint(36, 67);\n-\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(45, 68);\n-        movementPoly_tmp.addPoint(38, 68);\n-        movementPoly_tmp.addPoint(38, 69);\n-        movementPoly_tmp.addPoint(45, 69);\n-        movementPoly_tmp.addPoint(45, 68);\n-\n-        movementPoly_tmp.addPoint(45, 70);\n-        movementPoly_tmp.addPoint(38, 70);\n-        movementPoly_tmp.addPoint(38, 71);\n-        movementPoly_tmp.addPoint(45, 71);\n-        movementPoly_tmp.addPoint(45, 68);\n+        Polygon movementPolyTmp = new Polygon();\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(48, 66);\n+        movementPolyTmp.addPoint(42, 62);\n+        movementPolyTmp.addPoint(41, 62);\n+        movementPolyTmp.addPoint(35, 66);\n+        movementPolyTmp.addPoint(36, 67);\n+\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(45, 68);\n+        movementPolyTmp.addPoint(38, 68);\n+        movementPolyTmp.addPoint(38, 69);\n+        movementPolyTmp.addPoint(45, 69);\n+        movementPolyTmp.addPoint(45, 68);\n+\n+        movementPolyTmp.addPoint(45, 70);\n+        movementPolyTmp.addPoint(38, 70);\n+        movementPolyTmp.addPoint(38, 71);\n+        movementPolyTmp.addPoint(45, 71);\n+        movementPolyTmp.addPoint(45, 68);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+        for (int dir : allDirections) {\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // Up and Down Arrows\n         facingRotate.setToIdentity();\n         facingRotate.translate(0, -31);\n-        upArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        upArrow = facingRotate.createTransformedShape(movementPolyTmp);\n \n         facingRotate.setToIdentity();\n         facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n         facingRotate.translate(0, -31);\n-        downArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        downArrow = facingRotate.createTransformedShape(movementPolyTmp);\n     }\n \n     synchronized boolean doMoveUnits(long idleTime) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzAxNA==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428607014", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n          \n          \n            \n                        facingRotate.rotate(Math.toRadians(60), HEX_W / 2, HEX_H / 2);", "author": "Windchild292", "createdAt": "2020-05-21T11:54:46Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -4647,23 +4666,23 @@ public void initPolys() {\n         movementPoly_tmp.addPoint(45, 68);\n \n         // create the rotated shapes\n-        FacingRotate.setToIdentity();\n+        facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n         for (int dir: allDirections)\n         {\n-            movementPolys[dir] = FacingRotate.createTransformedShape(movementPoly_tmp);\n-            FacingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+            facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex 6d695cd52b..d826f534f3 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -4609,80 +4609,77 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n         AffineTransform facingRotate = new AffineTransform();\n \n         // facing polygons\n-        Polygon facingPoly_tmp = new Polygon();\n-        facingPoly_tmp.addPoint(41, 3);\n-        facingPoly_tmp.addPoint(35, 9);\n-        facingPoly_tmp.addPoint(41, 7);\n-        facingPoly_tmp.addPoint(42, 7);\n-        facingPoly_tmp.addPoint(48, 9);\n-        facingPoly_tmp.addPoint(42, 3);\n+        Polygon facingPolyTmp = new Polygon();\n+        facingPolyTmp.addPoint(41, 3);\n+        facingPolyTmp.addPoint(35, 9);\n+        facingPolyTmp.addPoint(41, 7);\n+        facingPolyTmp.addPoint(42, 7);\n+        facingPolyTmp.addPoint(48, 9);\n+        facingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+        for (int dir : allDirections) {\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // final facing polygons\n-        Polygon finalFacingPoly_tmp = new Polygon();\n-        finalFacingPoly_tmp.addPoint(41, 3);\n-        finalFacingPoly_tmp.addPoint(21, 18);\n-        finalFacingPoly_tmp.addPoint(41, 14);\n-        finalFacingPoly_tmp.addPoint(42, 14);\n-        finalFacingPoly_tmp.addPoint(61, 18);\n-        finalFacingPoly_tmp.addPoint(42, 3);\n+        Polygon finalFacingPolyTmp = new Polygon();\n+        finalFacingPolyTmp.addPoint(41, 3);\n+        finalFacingPolyTmp.addPoint(21, 18);\n+        finalFacingPolyTmp.addPoint(41, 14);\n+        finalFacingPolyTmp.addPoint(42, 14);\n+        finalFacingPolyTmp.addPoint(61, 18);\n+        finalFacingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         finalFacingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPoly_tmp);\n+        for (int dir : allDirections) {\n+            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // movement polygons\n-        Polygon movementPoly_tmp = new Polygon();\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(48, 66);\n-        movementPoly_tmp.addPoint(42, 62);\n-        movementPoly_tmp.addPoint(41, 62);\n-        movementPoly_tmp.addPoint(35, 66);\n-        movementPoly_tmp.addPoint(36, 67);\n-\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(45, 68);\n-        movementPoly_tmp.addPoint(38, 68);\n-        movementPoly_tmp.addPoint(38, 69);\n-        movementPoly_tmp.addPoint(45, 69);\n-        movementPoly_tmp.addPoint(45, 68);\n-\n-        movementPoly_tmp.addPoint(45, 70);\n-        movementPoly_tmp.addPoint(38, 70);\n-        movementPoly_tmp.addPoint(38, 71);\n-        movementPoly_tmp.addPoint(45, 71);\n-        movementPoly_tmp.addPoint(45, 68);\n+        Polygon movementPolyTmp = new Polygon();\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(48, 66);\n+        movementPolyTmp.addPoint(42, 62);\n+        movementPolyTmp.addPoint(41, 62);\n+        movementPolyTmp.addPoint(35, 66);\n+        movementPolyTmp.addPoint(36, 67);\n+\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(45, 68);\n+        movementPolyTmp.addPoint(38, 68);\n+        movementPolyTmp.addPoint(38, 69);\n+        movementPolyTmp.addPoint(45, 69);\n+        movementPolyTmp.addPoint(45, 68);\n+\n+        movementPolyTmp.addPoint(45, 70);\n+        movementPolyTmp.addPoint(38, 70);\n+        movementPolyTmp.addPoint(38, 71);\n+        movementPolyTmp.addPoint(45, 71);\n+        movementPolyTmp.addPoint(45, 68);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+        for (int dir : allDirections) {\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // Up and Down Arrows\n         facingRotate.setToIdentity();\n         facingRotate.translate(0, -31);\n-        upArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        upArrow = facingRotate.createTransformedShape(movementPolyTmp);\n \n         facingRotate.setToIdentity();\n         facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n         facingRotate.translate(0, -31);\n-        downArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        downArrow = facingRotate.createTransformedShape(movementPolyTmp);\n     }\n \n     synchronized boolean doMoveUnits(long idleTime) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzE3Ng==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428607176", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n          \n          \n            \n                    facingRotate.rotate(Math.toRadians(180), HEX_W / 2, HEX_H / 2);", "author": "Windchild292", "createdAt": "2020-05-21T11:55:08Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -4647,23 +4666,23 @@ public void initPolys() {\n         movementPoly_tmp.addPoint(45, 68);\n \n         // create the rotated shapes\n-        FacingRotate.setToIdentity();\n+        facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n         for (int dir: allDirections)\n         {\n-            movementPolys[dir] = FacingRotate.createTransformedShape(movementPoly_tmp);\n-            FacingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+            facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // Up and Down Arrows\n-        FacingRotate.setToIdentity();\n-        FacingRotate.translate(0, -31);\n-        upArrow = FacingRotate.createTransformedShape(movementPoly_tmp);\n-\n-        FacingRotate.setToIdentity();\n-        FacingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n-        FacingRotate.translate(0, -31);\n-        downArrow = FacingRotate.createTransformedShape(movementPoly_tmp);\n+        facingRotate.setToIdentity();\n+        facingRotate.translate(0, -31);\n+        upArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+\n+        facingRotate.setToIdentity();\n+        facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex 6d695cd52b..d826f534f3 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -4609,80 +4609,77 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n         AffineTransform facingRotate = new AffineTransform();\n \n         // facing polygons\n-        Polygon facingPoly_tmp = new Polygon();\n-        facingPoly_tmp.addPoint(41, 3);\n-        facingPoly_tmp.addPoint(35, 9);\n-        facingPoly_tmp.addPoint(41, 7);\n-        facingPoly_tmp.addPoint(42, 7);\n-        facingPoly_tmp.addPoint(48, 9);\n-        facingPoly_tmp.addPoint(42, 3);\n+        Polygon facingPolyTmp = new Polygon();\n+        facingPolyTmp.addPoint(41, 3);\n+        facingPolyTmp.addPoint(35, 9);\n+        facingPolyTmp.addPoint(41, 7);\n+        facingPolyTmp.addPoint(42, 7);\n+        facingPolyTmp.addPoint(48, 9);\n+        facingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+        for (int dir : allDirections) {\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // final facing polygons\n-        Polygon finalFacingPoly_tmp = new Polygon();\n-        finalFacingPoly_tmp.addPoint(41, 3);\n-        finalFacingPoly_tmp.addPoint(21, 18);\n-        finalFacingPoly_tmp.addPoint(41, 14);\n-        finalFacingPoly_tmp.addPoint(42, 14);\n-        finalFacingPoly_tmp.addPoint(61, 18);\n-        finalFacingPoly_tmp.addPoint(42, 3);\n+        Polygon finalFacingPolyTmp = new Polygon();\n+        finalFacingPolyTmp.addPoint(41, 3);\n+        finalFacingPolyTmp.addPoint(21, 18);\n+        finalFacingPolyTmp.addPoint(41, 14);\n+        finalFacingPolyTmp.addPoint(42, 14);\n+        finalFacingPolyTmp.addPoint(61, 18);\n+        finalFacingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         finalFacingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPoly_tmp);\n+        for (int dir : allDirections) {\n+            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // movement polygons\n-        Polygon movementPoly_tmp = new Polygon();\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(48, 66);\n-        movementPoly_tmp.addPoint(42, 62);\n-        movementPoly_tmp.addPoint(41, 62);\n-        movementPoly_tmp.addPoint(35, 66);\n-        movementPoly_tmp.addPoint(36, 67);\n-\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(45, 68);\n-        movementPoly_tmp.addPoint(38, 68);\n-        movementPoly_tmp.addPoint(38, 69);\n-        movementPoly_tmp.addPoint(45, 69);\n-        movementPoly_tmp.addPoint(45, 68);\n-\n-        movementPoly_tmp.addPoint(45, 70);\n-        movementPoly_tmp.addPoint(38, 70);\n-        movementPoly_tmp.addPoint(38, 71);\n-        movementPoly_tmp.addPoint(45, 71);\n-        movementPoly_tmp.addPoint(45, 68);\n+        Polygon movementPolyTmp = new Polygon();\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(48, 66);\n+        movementPolyTmp.addPoint(42, 62);\n+        movementPolyTmp.addPoint(41, 62);\n+        movementPolyTmp.addPoint(35, 66);\n+        movementPolyTmp.addPoint(36, 67);\n+\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(45, 68);\n+        movementPolyTmp.addPoint(38, 68);\n+        movementPolyTmp.addPoint(38, 69);\n+        movementPolyTmp.addPoint(45, 69);\n+        movementPolyTmp.addPoint(45, 68);\n+\n+        movementPolyTmp.addPoint(45, 70);\n+        movementPolyTmp.addPoint(38, 70);\n+        movementPolyTmp.addPoint(38, 71);\n+        movementPolyTmp.addPoint(45, 71);\n+        movementPolyTmp.addPoint(45, 68);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+        for (int dir : allDirections) {\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // Up and Down Arrows\n         facingRotate.setToIdentity();\n         facingRotate.translate(0, -31);\n-        upArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        upArrow = facingRotate.createTransformedShape(movementPolyTmp);\n \n         facingRotate.setToIdentity();\n         facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n         facingRotate.translate(0, -31);\n-        downArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        downArrow = facingRotate.createTransformedShape(movementPolyTmp);\n     }\n \n     synchronized boolean doMoveUnits(long idleTime) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzM0Nw==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428607347", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n          \n          \n            \n                        facingRotate.rotate(Math.toRadians(60), HEX_W / 2, HEX_H / 2);", "author": "Windchild292", "createdAt": "2020-05-21T11:55:36Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -4620,8 +4621,26 @@ public void initPolys() {\n         facingPolys = new Shape[8];\n         for (int dir: allDirections)\n         {\n-            facingPolys[dir] = FacingRotate.createTransformedShape(facingPoly_tmp);\n-            FacingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+            facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex 6d695cd52b..d826f534f3 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -4609,80 +4609,77 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n         AffineTransform facingRotate = new AffineTransform();\n \n         // facing polygons\n-        Polygon facingPoly_tmp = new Polygon();\n-        facingPoly_tmp.addPoint(41, 3);\n-        facingPoly_tmp.addPoint(35, 9);\n-        facingPoly_tmp.addPoint(41, 7);\n-        facingPoly_tmp.addPoint(42, 7);\n-        facingPoly_tmp.addPoint(48, 9);\n-        facingPoly_tmp.addPoint(42, 3);\n+        Polygon facingPolyTmp = new Polygon();\n+        facingPolyTmp.addPoint(41, 3);\n+        facingPolyTmp.addPoint(35, 9);\n+        facingPolyTmp.addPoint(41, 7);\n+        facingPolyTmp.addPoint(42, 7);\n+        facingPolyTmp.addPoint(48, 9);\n+        facingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            facingPolys[dir] = facingRotate.createTransformedShape(facingPoly_tmp);\n+        for (int dir : allDirections) {\n+            facingPolys[dir] = facingRotate.createTransformedShape(facingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // final facing polygons\n-        Polygon finalFacingPoly_tmp = new Polygon();\n-        finalFacingPoly_tmp.addPoint(41, 3);\n-        finalFacingPoly_tmp.addPoint(21, 18);\n-        finalFacingPoly_tmp.addPoint(41, 14);\n-        finalFacingPoly_tmp.addPoint(42, 14);\n-        finalFacingPoly_tmp.addPoint(61, 18);\n-        finalFacingPoly_tmp.addPoint(42, 3);\n+        Polygon finalFacingPolyTmp = new Polygon();\n+        finalFacingPolyTmp.addPoint(41, 3);\n+        finalFacingPolyTmp.addPoint(21, 18);\n+        finalFacingPolyTmp.addPoint(41, 14);\n+        finalFacingPolyTmp.addPoint(42, 14);\n+        finalFacingPolyTmp.addPoint(61, 18);\n+        finalFacingPolyTmp.addPoint(42, 3);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         finalFacingPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPoly_tmp);\n+        for (int dir : allDirections) {\n+            finalFacingPolys[dir] = facingRotate.createTransformedShape(finalFacingPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // movement polygons\n-        Polygon movementPoly_tmp = new Polygon();\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(48, 66);\n-        movementPoly_tmp.addPoint(42, 62);\n-        movementPoly_tmp.addPoint(41, 62);\n-        movementPoly_tmp.addPoint(35, 66);\n-        movementPoly_tmp.addPoint(36, 67);\n-\n-        movementPoly_tmp.addPoint(47, 67);\n-        movementPoly_tmp.addPoint(45, 68);\n-        movementPoly_tmp.addPoint(38, 68);\n-        movementPoly_tmp.addPoint(38, 69);\n-        movementPoly_tmp.addPoint(45, 69);\n-        movementPoly_tmp.addPoint(45, 68);\n-\n-        movementPoly_tmp.addPoint(45, 70);\n-        movementPoly_tmp.addPoint(38, 70);\n-        movementPoly_tmp.addPoint(38, 71);\n-        movementPoly_tmp.addPoint(45, 71);\n-        movementPoly_tmp.addPoint(45, 68);\n+        Polygon movementPolyTmp = new Polygon();\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(48, 66);\n+        movementPolyTmp.addPoint(42, 62);\n+        movementPolyTmp.addPoint(41, 62);\n+        movementPolyTmp.addPoint(35, 66);\n+        movementPolyTmp.addPoint(36, 67);\n+\n+        movementPolyTmp.addPoint(47, 67);\n+        movementPolyTmp.addPoint(45, 68);\n+        movementPolyTmp.addPoint(38, 68);\n+        movementPolyTmp.addPoint(38, 69);\n+        movementPolyTmp.addPoint(45, 69);\n+        movementPolyTmp.addPoint(45, 68);\n+\n+        movementPolyTmp.addPoint(45, 70);\n+        movementPolyTmp.addPoint(38, 70);\n+        movementPolyTmp.addPoint(38, 71);\n+        movementPolyTmp.addPoint(45, 71);\n+        movementPolyTmp.addPoint(45, 68);\n \n         // create the rotated shapes\n         facingRotate.setToIdentity();\n         movementPolys = new Shape[8];\n-        for (int dir: allDirections)\n-        {\n-            movementPolys[dir] = facingRotate.createTransformedShape(movementPoly_tmp);\n+        for (int dir : allDirections) {\n+            movementPolys[dir] = facingRotate.createTransformedShape(movementPolyTmp);\n             facingRotate.rotate(Math.toRadians(60),HEX_W/2,HEX_H/2);\n         }\n \n         // Up and Down Arrows\n         facingRotate.setToIdentity();\n         facingRotate.translate(0, -31);\n-        upArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        upArrow = facingRotate.createTransformedShape(movementPolyTmp);\n \n         facingRotate.setToIdentity();\n         facingRotate.rotate(Math.toRadians(180),HEX_W/2,HEX_H/2);\n         facingRotate.translate(0, -31);\n-        downArrow = facingRotate.createTransformedShape(movementPoly_tmp);\n+        downArrow = facingRotate.createTransformedShape(movementPolyTmp);\n     }\n \n     synchronized boolean doMoveUnits(long idleTime) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzYzNg==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428607636", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {\n          \n          \n            \n                    if (isLastStep && (step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL)) {", "author": "Windchild292", "createdAt": "2020-05-21T11:56:26Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -79,20 +79,25 @@ public void prepare() {\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n         \n-        Shape FacingArrow = bv.facingPolys[step.getFacing()];\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n+        Shape facingArrow;\n+        if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\nindex 66fa42c7a2..593c75920f 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n\n@@ -72,16 +71,17 @@ class StepSprite extends Sprite {\n         }\n \n         // fill with key color\n-        graph.setColor(new Color(0,0,0,0));\n+        graph.setColor(new Color(0, 0, 0, 0));\n         graph.fillRect(0, 0, BoardView1.HEX_W, BoardView1.HEX_H);\n \n         // setup some variables\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n-        \n+\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n         Shape facingArrow;\n-        if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {\n+        if (isLastStep &&\n+                (step.getMovementType(true) != EntityMovementType.MOVE_ILLEGAL)) {\n             facingArrow = bv.finalFacingPolys[step.getFacing()];\n         } else {\n             facingArrow = bv.facingPolys[step.getFacing()];\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwNzk1NA==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428607954", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    upDownOffset.translate(-30,0);\n          \n          \n            \n                    upDownOffset.translate(-30, 0);", "author": "Windchild292", "createdAt": "2020-05-21T11:57:16Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -79,20 +79,25 @@ public void prepare() {\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n         \n-        Shape FacingArrow = bv.facingPolys[step.getFacing()];\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n+        Shape facingArrow;\n+        if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {\n+            facingArrow = bv.finalFacingPolys[step.getFacing()];\n+        } else {\n+            facingArrow = bv.facingPolys[step.getFacing()];\n+        }\n+\n+        AffineTransform stepOffset = new AffineTransform();\n+        stepOffset.translate(stepPos.x + 1, stepPos.y + 1);   //when is stepPos ever <> 0?\n         \n-        AffineTransform StepOffset = new AffineTransform();\n-        StepOffset.translate(stepPos.x + 1, stepPos.y + 1);   //when is stepPos ever <> 0?\n-        \n-        AffineTransform ShadowOffset = new AffineTransform();\n-        ShadowOffset.translate(-1,-1);\n+        AffineTransform shadowOffset = new AffineTransform();\n+        shadowOffset.translate(-1,-1);\n         \n-        AffineTransform UpDownOffset = new AffineTransform();\n-        UpDownOffset.translate(-30,0);\n+        AffineTransform upDownOffset = new AffineTransform();\n+        upDownOffset.translate(-30,0);", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\nindex 66fa42c7a2..593c75920f 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n\n@@ -72,16 +71,17 @@ class StepSprite extends Sprite {\n         }\n \n         // fill with key color\n-        graph.setColor(new Color(0,0,0,0));\n+        graph.setColor(new Color(0, 0, 0, 0));\n         graph.fillRect(0, 0, BoardView1.HEX_W, BoardView1.HEX_H);\n \n         // setup some variables\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n-        \n+\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n         Shape facingArrow;\n-        if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {\n+        if (isLastStep &&\n+                (step.getMovementType(true) != EntityMovementType.MOVE_ILLEGAL)) {\n             facingArrow = bv.finalFacingPolys[step.getFacing()];\n         } else {\n             facingArrow = bv.facingPolys[step.getFacing()];\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYwODA2OA==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r428608068", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    shadowOffset.translate(-1,-1);\n          \n          \n            \n                    shadowOffset.translate(-1, -1);", "author": "Windchild292", "createdAt": "2020-05-21T11:57:31Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -79,20 +79,25 @@ public void prepare() {\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n         \n-        Shape FacingArrow = bv.facingPolys[step.getFacing()];\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n+        Shape facingArrow;\n+        if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {\n+            facingArrow = bv.finalFacingPolys[step.getFacing()];\n+        } else {\n+            facingArrow = bv.facingPolys[step.getFacing()];\n+        }\n+\n+        AffineTransform stepOffset = new AffineTransform();\n+        stepOffset.translate(stepPos.x + 1, stepPos.y + 1);   //when is stepPos ever <> 0?\n         \n-        AffineTransform StepOffset = new AffineTransform();\n-        StepOffset.translate(stepPos.x + 1, stepPos.y + 1);   //when is stepPos ever <> 0?\n-        \n-        AffineTransform ShadowOffset = new AffineTransform();\n-        ShadowOffset.translate(-1,-1);\n+        AffineTransform shadowOffset = new AffineTransform();\n+        shadowOffset.translate(-1,-1);", "originalCommit": "dcf74a590f51232602f6595bf5b555b8e1b2a06e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\nindex 66fa42c7a2..593c75920f 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n\n@@ -72,16 +71,17 @@ class StepSprite extends Sprite {\n         }\n \n         // fill with key color\n-        graph.setColor(new Color(0,0,0,0));\n+        graph.setColor(new Color(0, 0, 0, 0));\n         graph.fillRect(0, 0, BoardView1.HEX_W, BoardView1.HEX_H);\n \n         // setup some variables\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n-        \n+\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n         Shape facingArrow;\n-        if (isLastStep && step.getMovementType(isLastStep) != EntityMovementType.MOVE_ILLEGAL) {\n+        if (isLastStep &&\n+                (step.getMovementType(true) != EntityMovementType.MOVE_ILLEGAL)) {\n             facingArrow = bv.finalFacingPolys[step.getFacing()];\n         } else {\n             facingArrow = bv.facingPolys[step.getFacing()];\n"}}, {"oid": "4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "url": "https://github.com/MegaMek/megamek/commit/4bebbf2abfaf6c84b4f854c026b0e343da0ed420", "message": "Addressed formatting PR comments.  Applied formatting to StepSprite file and cleaned up most linter warnings.", "committedDate": "2020-05-22T17:48:40Z", "type": "commit"}, {"oid": "cefe584f0cbe0ee8f96a2a29b89ae0b0c29284a7", "url": "https://github.com/MegaMek/megamek/commit/cefe584f0cbe0ee8f96a2a29b89ae0b0c29284a7", "message": "Addressed formatting PR comments.  Applied formatting to StepSprite file and cleaned up most linter warnings.", "committedDate": "2020-05-22T18:28:18Z", "type": "commit"}, {"oid": "f002c1e51dfc3385314791d3930878d82578545d", "url": "https://github.com/MegaMek/megamek/commit/f002c1e51dfc3385314791d3930878d82578545d", "message": "Draw final facing in all scenarios for final legal step.  Draw regular facing for all other facing change steps before and after final legal step.", "committedDate": "2020-05-22T19:04:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODc1OQ==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r429428759", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                StepSprite(BoardView1 boardView1, final MoveStep step,\n          \n          \n            \n                public StepSprite(BoardView1 boardView1, final MoveStep step,", "author": "Windchild292", "createdAt": "2020-05-22T19:51:59Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -30,11 +30,11 @@\n class StepSprite extends Sprite {\n \n     private MoveStep step;\n-    boolean isLastStep = false;\n+    private boolean isLastStep;\n     private Image baseScaleImage;\n-    \n-    public StepSprite(BoardView1 boardView1, final MoveStep step,\n-            boolean isLastStep) {\n+\n+    StepSprite(BoardView1 boardView1, final MoveStep step,", "originalCommit": "f002c1e51dfc3385314791d3930878d82578545d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MDUwMg==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r429450502", "bodyText": "The class was already package-private so I didn't see a reason to keep the constructor public.  Is this a style for the project?", "author": "sagnam", "createdAt": "2020-05-22T21:03:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ5NTczNg==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r429495736", "bodyText": "Style in a legacy project like this is a strong word. Generally speaking \"when in Rome,\" is best, but we are not opposed to meaningful improvements in style if coupled with meaningful work.\nIn this very specific case I'd say we prefer explicit access modifiers on all members.", "author": "sixlettervariables", "createdAt": "2020-05-23T00:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjQxMw==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r429666413", "bodyText": "Done", "author": "sagnam", "createdAt": "2020-05-24T19:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb8270e909166dd2c917c2e54b2149e6800075a8", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\nindex 8c667c0f11..dda0d9e555 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n\n@@ -33,7 +33,7 @@ class StepSprite extends Sprite {\n     private boolean isLastStep;\n     private Image baseScaleImage;\n \n-    StepSprite(BoardView1 boardView1, final MoveStep step,\n+    public StepSprite(BoardView1 boardView1, final MoveStep step,\n                boolean isLastStep) {\n         super(boardView1);\n         this.step = step;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzMjA4NA==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r429432084", "bodyText": "I think this is redundant.", "author": "Windchild292", "createdAt": "2020-05-22T20:03:36Z", "path": "megamek/src/megamek/client/ui/swing/boardview/StepSprite.java", "diffHunk": "@@ -64,35 +63,39 @@ public void prepare() {\n         Image tempImage = new BufferedImage(BoardView1.HEX_W, BoardView1.HEX_H,\n                 BufferedImage.TYPE_INT_ARGB);\n         Graphics graph = tempImage.getGraphics();\n-        \n+\n         if (GUIPreferences.getInstance().getAntiAliasing()) {\n             ((Graphics2D) graph).setRenderingHint(\n                     RenderingHints.KEY_ANTIALIASING,\n                     RenderingHints.VALUE_ANTIALIAS_ON);\n         }\n \n         // fill with key color\n-        graph.setColor(new Color(0,0,0,0));\n+        graph.setColor(new Color(0, 0, 0, 0));\n         graph.fillRect(0, 0, BoardView1.HEX_W, BoardView1.HEX_H);\n \n         // setup some variables\n         final Point stepPos = bv.getHexLocation(step.getPosition());\n         stepPos.translate(-bounds.x, -bounds.y);\n-        \n-        Shape FacingArrow = bv.facingPolys[step.getFacing()];\n+\n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n-        \n-        AffineTransform StepOffset = new AffineTransform();\n-        StepOffset.translate(stepPos.x + 1, stepPos.y + 1);   //when is stepPos ever <> 0?\n-        \n-        AffineTransform ShadowOffset = new AffineTransform();\n-        ShadowOffset.translate(-1,-1);\n-        \n-        AffineTransform UpDownOffset = new AffineTransform();\n-        UpDownOffset.translate(-30,0);\n-        \n+        Shape facingArrow = bv.facingPolys[step.getFacing()];\n+        Shape finalFacingArrow = bv.finalFacingPolys[step.getFacing()];\n+        if (isLastStep &&\n+                (step.getMovementType(true) != EntityMovementType.MOVE_ILLEGAL)) {\n+            facingArrow = bv.facingPolys[step.getFacing()];\n+        }", "originalCommit": "f002c1e51dfc3385314791d3930878d82578545d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MTA0OA==", "url": "https://github.com/MegaMek/megamek/pull/1969#discussion_r429451048", "bodyText": "Ooops!", "author": "sagnam", "createdAt": "2020-05-22T21:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQzMjA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "2d758a03de38aa47cab72f1da9d092f9917e5109", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\nindex 8c667c0f11..8caaafd458 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/StepSprite.java\n\n@@ -80,11 +80,9 @@ class StepSprite extends Sprite {\n \n         Shape moveArrow = bv.movementPolys[step.getFacing()];\n         Shape facingArrow = bv.facingPolys[step.getFacing()];\n-        Shape finalFacingArrow = bv.finalFacingPolys[step.getFacing()];\n-        if (isLastStep &&\n-                (step.getMovementType(true) != EntityMovementType.MOVE_ILLEGAL)) {\n-            facingArrow = bv.facingPolys[step.getFacing()];\n-        }\n+\n+        boolean isLastLegalStep = isLastStep &&\n+                (step.getMovementType(true) != EntityMovementType.MOVE_ILLEGAL);\n \n         AffineTransform stepOffset = new AffineTransform();\n         stepOffset.translate(stepPos.x + 1, stepPos.y + 1);   //when is stepPos ever <> 0?\n"}}, {"oid": "2d758a03de38aa47cab72f1da9d092f9917e5109", "url": "https://github.com/MegaMek/megamek/commit/2d758a03de38aa47cab72f1da9d092f9917e5109", "message": "Fixed facing arrow logic to not draw arrow only is the case where the larger arrow will be drawn instead.  Removing unnecessary assignment and only getting final facing asset if needed.", "committedDate": "2020-05-22T22:17:50Z", "type": "commit"}, {"oid": "fb8270e909166dd2c917c2e54b2149e6800075a8", "url": "https://github.com/MegaMek/megamek/commit/fb8270e909166dd2c917c2e54b2149e6800075a8", "message": "Restoring of Step Sprite constructor access modifier to public.", "committedDate": "2020-05-23T05:26:39Z", "type": "commit"}]}