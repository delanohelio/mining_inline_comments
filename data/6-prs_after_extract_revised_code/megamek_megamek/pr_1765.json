{"pr_number": 1765, "pr_title": "Issue1583 map editor", "pr_createdAt": "2020-03-14T10:48:41Z", "pr_url": "https://github.com/MegaMek/megamek/pull/1765", "timeline": [{"oid": "8576cf4950845ae8be98991d9b12f1bdf37257fd", "url": "https://github.com/MegaMek/megamek/commit/8576cf4950845ae8be98991d9b12f1bdf37257fd", "message": "MapEditor Validation for Buildings", "committedDate": "2020-03-14T06:27:52Z", "type": "commit"}, {"oid": "7db87d026711a203a26e95e84d785263922d669a", "url": "https://github.com/MegaMek/megamek/commit/7db87d026711a203a26e95e84d785263922d669a", "message": "MapEditor Validation Updates", "committedDate": "2020-03-14T08:48:34Z", "type": "commit"}, {"oid": "3d6feb724ad59c32595e39555e052d370172a33c", "url": "https://github.com/MegaMek/megamek/commit/3d6feb724ad59c32595e39555e052d370172a33c", "message": "Adjustments", "committedDate": "2020-03-14T09:56:03Z", "type": "commit"}, {"oid": "ebfced3b2a2cb934317da966df391f093ef980aa", "url": "https://github.com/MegaMek/megamek/commit/ebfced3b2a2cb934317da966df391f093ef980aa", "message": "Tabs replaced with white spaces", "committedDate": "2020-03-14T09:58:27Z", "type": "commit"}, {"oid": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "url": "https://github.com/MegaMek/megamek/commit/51276a5806b93f153d53eb6a4e6fa523edde4eba", "message": "Remove double validation report", "committedDate": "2020-03-14T10:31:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4OTUxOQ==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392589519", "bodyText": "Then why keep the code?", "author": "Windchild292", "createdAt": "2020-03-14T13:45:12Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -5120,7 +5120,7 @@ public synchronized void boardChangedHex(BoardEvent b) {\n      */\n     public synchronized void boardChangedAllHexes(BoardEvent b) {\n         clearHexImageCache();\n-        tileManager.loadAllHexes();\n+//        tileManager.loadAllHexes(); Creates long load times and seems unnecessary ", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex d6ec4750c6..25b8d1c458 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -5120,7 +5120,6 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n      */\n     public synchronized void boardChangedAllHexes(BoardEvent b) {\n         clearHexImageCache();\n-//        tileManager.loadAllHexes(); Creates long load times and seems unnecessary \n         clearShadowMap();\n         repaint();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4OTYxMA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392589610", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (errBuff.length()>0)\n          \n          \n            \n                                    errBuff.append(\"----\\n\");\n          \n          \n            \n                                if (errBuff.length() > 0) {\n          \n          \n            \n                                    errBuff.append(\"----\\n\");\n          \n          \n            \n                                }", "author": "Windchild292", "createdAt": "2020-03-14T13:46:19Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {\n+                            if (adjHex.getTerrain(Terrains.BUILDING).getLevel() != hex.getTerrain(Terrains.BUILDING).getLevel()) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit to a building of another Building Type (Light, Medium...).\\n\");\n+                            }\n+                            if (hex.containsTerrain(Terrains.BLDG_CLASS) \n+                                    && ((adjHex.containsTerrain(Terrains.BLDG_CLASS) \n+                                            && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())\n+                                            || (!adjHex.containsTerrain(Terrains.BLDG_CLASS) )  )) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit in direction \"+dir+\" to a building of another Building Class.\\n\");\n+                            }\n+                        }\n+                    }\n+                }\n+                \n                 // Return early if we aren't logging errors\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    errBuff.append(\"Hex \" + String.format(\"%1$02d%02$2d\", x + 1, y + 1) + \" is invalid!\\n\");\n-                    errBuff.append(currBuff.toString().replaceAll(\"^\", \"\\t\"));\n+                    if (errBuff.length()>0)\n+                        errBuff.append(\"----\\n\");", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4OTYzNw==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392589637", "bodyText": "Just easier to read", "author": "Windchild292", "createdAt": "2020-03-14T13:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4OTYxMA=="}], "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU4OTY4Mg==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392589682", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Coords c = new Coords(x,y);\n          \n          \n            \n                                Coords c = new Coords(x, y);", "author": "Windchild292", "createdAt": "2020-03-14T13:47:22Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {\n+                            if (adjHex.getTerrain(Terrains.BUILDING).getLevel() != hex.getTerrain(Terrains.BUILDING).getLevel()) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit to a building of another Building Type (Light, Medium...).\\n\");\n+                            }\n+                            if (hex.containsTerrain(Terrains.BLDG_CLASS) \n+                                    && ((adjHex.containsTerrain(Terrains.BLDG_CLASS) \n+                                            && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())\n+                                            || (!adjHex.containsTerrain(Terrains.BLDG_CLASS) )  )) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit in direction \"+dir+\" to a building of another Building Class.\\n\");\n+                            }\n+                        }\n+                    }\n+                }\n+                \n                 // Return early if we aren't logging errors\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    errBuff.append(\"Hex \" + String.format(\"%1$02d%02$2d\", x + 1, y + 1) + \" is invalid!\\n\");\n-                    errBuff.append(currBuff.toString().replaceAll(\"^\", \"\\t\"));\n+                    if (errBuff.length()>0)\n+                        errBuff.append(\"----\\n\");\n+                    Coords c = new Coords(x,y);", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDEyMg==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590122", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n          \n          \n            \n                                errBuff.append(currBuff.toString());\n          \n          \n            \n                                errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\")\n          \n          \n            \n                                        .append(currBuff.toString());", "author": "Windchild292", "createdAt": "2020-03-14T13:53:51Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {\n+                            if (adjHex.getTerrain(Terrains.BUILDING).getLevel() != hex.getTerrain(Terrains.BUILDING).getLevel()) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit to a building of another Building Type (Light, Medium...).\\n\");\n+                            }\n+                            if (hex.containsTerrain(Terrains.BLDG_CLASS) \n+                                    && ((adjHex.containsTerrain(Terrains.BLDG_CLASS) \n+                                            && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())\n+                                            || (!adjHex.containsTerrain(Terrains.BLDG_CLASS) )  )) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit in direction \"+dir+\" to a building of another Building Class.\\n\");\n+                            }\n+                        }\n+                    }\n+                }\n+                \n                 // Return early if we aren't logging errors\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    errBuff.append(\"Hex \" + String.format(\"%1$02d%02$2d\", x + 1, y + 1) + \" is invalid!\\n\");\n-                    errBuff.append(currBuff.toString().replaceAll(\"^\", \"\\t\"));\n+                    if (errBuff.length()>0)\n+                        errBuff.append(\"----\\n\");\n+                    Coords c = new Coords(x,y);\n+                    errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n+                    errBuff.append(currBuff.toString());", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDIwMA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590200", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (type == Terrains.BRIDGE && level < 1) {\n          \n          \n            \n                    } else if ((type == Terrains.BRIDGE) && (level < 1)) {", "author": "Windchild292", "createdAt": "2020-03-14T13:55:03Z", "path": "megamek/src/megamek/common/Terrain.java", "diffHunk": "@@ -633,6 +633,8 @@ public boolean isValid(StringBuffer errBuff) {\n             rv = false;\n         } else if (type == Terrains.TUNDRA && level != 1) {\n             rv = false;\n+        } else if (type == Terrains.BRIDGE && level < 1) {", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDI3NA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590274", "bodyText": "Suggested change", "author": "Windchild292", "createdAt": "2020-03-14T13:55:49Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -33,13 +33,21 @@\n  */\n public class Building implements Serializable {\n ", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/common/Building.java b/megamek/src/megamek/common/Building.java\nindex 9a91f04f0a..7ea60fe54f 100644\n--- a/megamek/src/megamek/common/Building.java\n+++ b/megamek/src/megamek/common/Building.java\n\n@@ -32,9 +32,13 @@ import java.util.Vector;\n  * @version $Revision$\n  */\n public class Building implements Serializable {\n-\n     private static final long serialVersionUID = -8236017592012683793L;\n \n+    /**\n+     * Generic flag for uninitialized values.\n+     */\n+    protected static final int UNKNOWN = -1;\n+    \n     // The Building Types\n     public static final int LIGHT = 1;\n     public static final int MEDIUM = 2;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDMwMg==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590302", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // The Building Class\n          \n          \n            \n                // The Building Classes", "author": "Windchild292", "createdAt": "2020-03-14T13:56:07Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -33,13 +33,21 @@\n  */\n public class Building implements Serializable {\n \n-    // Private attributes and helper functions.\n-\n-    /**\n-     *\n-     */\n     private static final long serialVersionUID = -8236017592012683793L;\n \n+    // The Building Types\n+    public static final int LIGHT = 1;\n+    public static final int MEDIUM = 2;\n+    public static final int HEAVY = 3;\n+    public static final int HARDENED = 4;\n+    public static final int WALL = 5;\n+    \n+    // The Building Class", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/common/Building.java b/megamek/src/megamek/common/Building.java\nindex 9a91f04f0a..7ea60fe54f 100644\n--- a/megamek/src/megamek/common/Building.java\n+++ b/megamek/src/megamek/common/Building.java\n\n@@ -32,9 +32,13 @@ import java.util.Vector;\n  * @version $Revision$\n  */\n public class Building implements Serializable {\n-\n     private static final long serialVersionUID = -8236017592012683793L;\n \n+    /**\n+     * Generic flag for uninitialized values.\n+     */\n+    protected static final int UNKNOWN = -1;\n+    \n     // The Building Types\n     public static final int LIGHT = 1;\n     public static final int MEDIUM = 2;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDM4OA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590388", "bodyText": "Remove this comment and the CASTLE_BRIAN constant, and move it to be commented out under the building classes above", "author": "Windchild292", "createdAt": "2020-03-14T13:57:40Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -268,22 +279,6 @@ public static BasementType getType(int value) {\n         }\n     }\n \n-    /**\n-     * Various construction types.\n-     */\n-    public static final int LIGHT = 1;\n-    public static final int MEDIUM = 2;\n-    public static final int HEAVY = 3;\n-    public static final int HARDENED = 4;\n-    public static final int WALL = 5;\n-\n-    /**\n-     * Various building types\n-     */\n-    public static final int STANDARD = 0;\n-    public static final int HANGAR = 1;\n-    public static final int FORTRESS = 2;\n-    public static final int GUN_EMPLACEMENT = 3;\n \n     // TODO: leaving out Castles Brian until issues with damage scaling are\n     // resolved", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/common/Building.java b/megamek/src/megamek/common/Building.java\nindex 9a91f04f0a..7ea60fe54f 100644\n--- a/megamek/src/megamek/common/Building.java\n+++ b/megamek/src/megamek/common/Building.java\n\n@@ -279,11 +279,6 @@ public class Building implements Serializable {\n         }\n     }\n \n-\n-    // TODO: leaving out Castles Brian until issues with damage scaling are\n-    // resolved\n-    // public static final int CASTLE_BRIAN = 3;\n-\n     /**\n      * Construct a building for the given coordinates from the board's\n      * information. If the building covers multiple hexes, every hex will be\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDQ0Mg==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590442", "bodyText": "Does this not error out if the Construction factor changes? IIRC, shouldn't that be enforced too?", "author": "Windchild292", "createdAt": "2020-03-14T13:58:35Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -167,7 +178,7 @@ protected void include(Coords coords, IBoard board, int structureType) {\n         }\n \n         if (structureType == Terrains.BUILDING) {\n-            // Error off if the building type, or CF is off.\n+            // Error if the Building Type (Light, Medium...) or Building Class (Standard, Hangar...) is off.", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyNzM5MQ==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r395327391", "bodyText": "Don't know much about building rules but a building with different CFs in different hexes at least loads without error. Therefore I'd like to keep it like that for now.", "author": "SJuliez", "createdAt": "2020-03-19T21:22:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDQ0Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDY4MQ==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590681", "bodyText": "UNKNOWN should probably be moved up here from line 235.", "author": "Windchild292", "createdAt": "2020-03-14T14:02:14Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -33,13 +33,21 @@\n  */\n public class Building implements Serializable {\n \n-    // Private attributes and helper functions.\n-\n-    /**\n-     *\n-     */\n     private static final long serialVersionUID = -8236017592012683793L;\n \n+    // The Building Types", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/common/Building.java b/megamek/src/megamek/common/Building.java\nindex 9a91f04f0a..7ea60fe54f 100644\n--- a/megamek/src/megamek/common/Building.java\n+++ b/megamek/src/megamek/common/Building.java\n\n@@ -32,9 +32,13 @@ import java.util.Vector;\n  * @version $Revision$\n  */\n public class Building implements Serializable {\n-\n     private static final long serialVersionUID = -8236017592012683793L;\n \n+    /**\n+     * Generic flag for uninitialized values.\n+     */\n+    protected static final int UNKNOWN = -1;\n+    \n     // The Building Types\n     public static final int LIGHT = 1;\n     public static final int MEDIUM = 2;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDc4Mw==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590783", "bodyText": "Maybe move this to be listed under the classes instead of having a comment that might go out of date?", "author": "Windchild292", "createdAt": "2020-03-14T14:04:01Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -51,16 +59,19 @@\n     private Vector<Coords> coordinates = new Vector<Coords>();\n \n     /**\n-     * The construction type of the building.\n+     * The Construction Type of the building; equal to the terrain elevation of the BUILDING terrain of a hex.\n+     * Types: LIGHT, MEDIUM, HEAVY, HARDENED, WALL\n      */\n     private int type = Building.UNKNOWN;\n \n     /**\n      * The Basement type of the building.\n      */\n     private Map<Coords,BasementType> basement = new HashMap<Coords,BasementType>();\n+    \n     /**\n-     * the class of the building\n+     * The Building Class of the building; equal to the terrain elevation of the BUILDING CLASS terrain of a hex.\n+     * Types: STANDARD, HANGAR, FORTRESS, GUN_EMPLACEMENT \n      */\n     private int bldgClass = Building.STANDARD;", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/common/Building.java b/megamek/src/megamek/common/Building.java\nindex 9a91f04f0a..7ea60fe54f 100644\n--- a/megamek/src/megamek/common/Building.java\n+++ b/megamek/src/megamek/common/Building.java\n\n@@ -58,22 +74,10 @@ public class Building implements Serializable {\n      */\n     private Vector<Coords> coordinates = new Vector<Coords>();\n \n-    /**\n-     * The Construction Type of the building; equal to the terrain elevation of the BUILDING terrain of a hex.\n-     * Types: LIGHT, MEDIUM, HEAVY, HARDENED, WALL\n-     */\n-    private int type = Building.UNKNOWN;\n-\n     /**\n      * The Basement type of the building.\n      */\n     private Map<Coords,BasementType> basement = new HashMap<Coords,BasementType>();\n-    \n-    /**\n-     * The Building Class of the building; equal to the terrain elevation of the BUILDING CLASS terrain of a hex.\n-     * Types: STANDARD, HANGAR, FORTRESS, GUN_EMPLACEMENT \n-     */\n-    private int bldgClass = Building.STANDARD;\n \n     private int collapsedHexes = 0;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDgwMw==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590803", "bodyText": "Maybe move this to be under the list of types instead of a comment?", "author": "Windchild292", "createdAt": "2020-03-14T14:04:22Z", "path": "megamek/src/megamek/common/Building.java", "diffHunk": "@@ -51,16 +59,19 @@\n     private Vector<Coords> coordinates = new Vector<Coords>();\n \n     /**\n-     * The construction type of the building.\n+     * The Construction Type of the building; equal to the terrain elevation of the BUILDING terrain of a hex.\n+     * Types: LIGHT, MEDIUM, HEAVY, HARDENED, WALL\n      */\n     private int type = Building.UNKNOWN;", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "chunk": "diff --git a/megamek/src/megamek/common/Building.java b/megamek/src/megamek/common/Building.java\nindex 9a91f04f0a..7ea60fe54f 100644\n--- a/megamek/src/megamek/common/Building.java\n+++ b/megamek/src/megamek/common/Building.java\n\n@@ -58,22 +74,10 @@ public class Building implements Serializable {\n      */\n     private Vector<Coords> coordinates = new Vector<Coords>();\n \n-    /**\n-     * The Construction Type of the building; equal to the terrain elevation of the BUILDING terrain of a hex.\n-     * Types: LIGHT, MEDIUM, HEAVY, HARDENED, WALL\n-     */\n-    private int type = Building.UNKNOWN;\n-\n     /**\n      * The Basement type of the building.\n      */\n     private Map<Coords,BasementType> basement = new HashMap<Coords,BasementType>();\n-    \n-    /**\n-     * The Building Class of the building; equal to the terrain elevation of the BUILDING CLASS terrain of a hex.\n-     * Types: STANDARD, HANGAR, FORTRESS, GUN_EMPLACEMENT \n-     */\n-    private int bldgClass = Building.STANDARD;\n \n     private int collapsedHexes = 0;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDg1MA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392590850", "bodyText": "Why use a StringBuffer? Does this require thread safety?", "author": "Windchild292", "createdAt": "2020-03-14T14:05:19Z", "path": "megamek/src/megamek/client/ui/swing/BoardEditor.java", "diffHunk": "@@ -1440,12 +1440,32 @@ public String getDescription() {\n         mapSettings.setBoardSize(board.getWidth(), board.getHeight());\n         refreshTerrainList();\n     }\n+    \n+    /**\n+     * Will do board.initializeHex() for all hexes, correcting \n+     * building and road connection issues for those hexes that do not have\n+     * the exits check set.\n+     */\n+    private void correctExits() {\n+        for (int x = 0; x < board.getWidth(); x++) {\n+            for (int y = 0; y < board.getHeight(); y++) {\n+                board.initializeHex(x, y);\n+            }\n+        }\n+    }\n \n     /**\n      * Checks to see if there is already a path and name stored; if not, calls\n      * \"save as\"; otherwise, saves the board to the specified file.\n      */\n     private void boardSave() {\n+        // First, correct connection issues and do a validation.\n+        correctExits();\n+        StringBuffer errBuff = new StringBuffer();\n+        board.isValid(errBuff);\n+        if (errBuff.length() > 0) {\n+            showBoardValidationReport(errBuff);\n+        }", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMyODg0Ng==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r395328846", "bodyText": "I didn't introduce it and I didn't really think about that.", "author": "SJuliez", "createdAt": "2020-03-19T21:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MDg1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTA0NA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392591044", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n          \n          \n            \n                                    {\n          \n          \n            \n                                            && hex.containsTerrainExit(Terrains.BUILDING, dir)) {", "author": "Windchild292", "createdAt": "2020-03-14T14:08:32Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTA2NA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392591064", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if (adjHex != null \n          \n          \n            \n                                    if ((adjHex != null)", "author": "Windchild292", "createdAt": "2020-03-14T14:08:42Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null ", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTEzMQ==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392591131", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                        && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())\n          \n          \n            \n                                                        && (adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel()))", "author": "Windchild292", "createdAt": "2020-03-14T14:09:36Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {\n+                            if (adjHex.getTerrain(Terrains.BUILDING).getLevel() != hex.getTerrain(Terrains.BUILDING).getLevel()) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit to a building of another Building Type (Light, Medium...).\\n\");\n+                            }\n+                            if (hex.containsTerrain(Terrains.BLDG_CLASS) \n+                                    && ((adjHex.containsTerrain(Terrains.BLDG_CLASS) \n+                                            && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTE0NQ==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392591145", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                        || (!adjHex.containsTerrain(Terrains.BLDG_CLASS) )  )) {\n          \n          \n            \n                                                        || (!adjHex.containsTerrain(Terrains.BLDG_CLASS)))) {", "author": "Windchild292", "createdAt": "2020-03-14T14:09:50Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {\n+                            if (adjHex.getTerrain(Terrains.BUILDING).getLevel() != hex.getTerrain(Terrains.BUILDING).getLevel()) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit to a building of another Building Type (Light, Medium...).\\n\");\n+                            }\n+                            if (hex.containsTerrain(Terrains.BLDG_CLASS) \n+                                    && ((adjHex.containsTerrain(Terrains.BLDG_CLASS) \n+                                            && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())\n+                                            || (!adjHex.containsTerrain(Terrains.BLDG_CLASS) )  )) {", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTE4Mw==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r392591183", "bodyText": "Replace the + dir + with chained append calls.", "author": "Windchild292", "createdAt": "2020-03-14T14:10:38Z", "path": "megamek/src/megamek/common/Board.java", "diffHunk": "@@ -971,12 +971,40 @@ private boolean isValid(IHex[] data, int width, int height, StringBuffer errBuff\n                 }\n                 StringBuffer currBuff = new StringBuffer();\n                 boolean valid = hex.isValid(currBuff);\n+                \n+                // Multi-hex problems \n+                // A building hex must only have exits to other building hexes of the same Building Type and Class\n+                if (hex.containsTerrain(Terrains.BUILDING) && hex.getTerrain(Terrains.BUILDING).hasExitsSpecified()) {\n+                    for (int dir = 0; dir < 6; dir++) {\n+                        IHex adjHex = getHexInDir(x, y, dir);\n+                        if (adjHex != null \n+                                && adjHex.containsTerrain(Terrains.BUILDING) \n+                                && hex.containsTerrainExit(Terrains.BUILDING, dir)) \n+                        {\n+                            if (adjHex.getTerrain(Terrains.BUILDING).getLevel() != hex.getTerrain(Terrains.BUILDING).getLevel()) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit to a building of another Building Type (Light, Medium...).\\n\");\n+                            }\n+                            if (hex.containsTerrain(Terrains.BLDG_CLASS) \n+                                    && ((adjHex.containsTerrain(Terrains.BLDG_CLASS) \n+                                            && adjHex.getTerrain(Terrains.BLDG_CLASS).getLevel() != hex.getTerrain(Terrains.BLDG_CLASS).getLevel())\n+                                            || (!adjHex.containsTerrain(Terrains.BLDG_CLASS) )  )) {\n+                                valid = false;\n+                                currBuff.append(\"Building has an exit in direction \"+dir+\" to a building of another Building Class.\\n\");", "originalCommit": "51276a5806b93f153d53eb6a4e6fa523edde4eba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzMDUyMA==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r395330520", "bodyText": "Why? much longer. Effortlessly readable as is.", "author": "SJuliez", "createdAt": "2020-03-19T21:29:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzMTc2MQ==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r395331761", "bodyText": "Faster processing and more consistent code", "author": "Windchild292", "createdAt": "2020-03-19T21:32:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzODY4Ng==", "url": "https://github.com/MegaMek/megamek/pull/1765#discussion_r395338686", "bodyText": "For the sake of not arguing about irrelevant issues I've changed it. I also followed most of your suggestions above (I think I just didnt add the parenthesis clutter in Terrain.java as this would be inconsistent :D but everything else). Thanks for looking at it.", "author": "SJuliez", "createdAt": "2020-03-19T21:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5MTE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "370df68b1b560e07446676e285da7960b477cfd2", "chunk": "diff --git a/megamek/src/megamek/common/Board.java b/megamek/src/megamek/common/Board.java\nindex afd35fb658..e042d97daf 100644\n--- a/megamek/src/megamek/common/Board.java\n+++ b/megamek/src/megamek/common/Board.java\n\n@@ -1000,8 +1000,9 @@ public class Board implements Serializable, IBoard {\n                 if (!valid && (errBuff == null)) {\n                     return false;\n                 } else if (!valid) { // Otherwise, log the error for later output\n-                    if (errBuff.length()>0)\n+                    if (errBuff.length() > 0) {\n                         errBuff.append(\"----\\n\");\n+                    }\n                     Coords c = new Coords(x,y);\n                     errBuff.append(\"Hex \" + c.getBoardNum() + \" is invalid:\\n\");\n                     errBuff.append(currBuff.toString());\n"}}, {"oid": "370df68b1b560e07446676e285da7960b477cfd2", "url": "https://github.com/MegaMek/megamek/commit/370df68b1b560e07446676e285da7960b477cfd2", "message": "Update megamek/src/megamek/common/Board.java\n\nCo-Authored-By: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-03-19T21:08:23Z", "type": "commit"}, {"oid": "547ce93bb109fc309bdfca4d19c54e0691df50ab", "url": "https://github.com/MegaMek/megamek/commit/547ce93bb109fc309bdfca4d19c54e0691df50ab", "message": "Formatting", "committedDate": "2020-03-19T21:30:10Z", "type": "commit"}, {"oid": "7dab6f588dbbeaee547189d1fd7dfced1adc7c9c", "url": "https://github.com/MegaMek/megamek/commit/7dab6f588dbbeaee547189d1fd7dfced1adc7c9c", "message": "Merge remote-tracking branch 'JuliezFork/Issue1583_MapEditor' into\nIssue1583_Bridge0\n\nConflicts:\n\tmegamek/src/megamek/common/Board.java", "committedDate": "2020-03-19T21:32:06Z", "type": "commit"}, {"oid": "4daec8ddf817d7086754961c8f1ea53a65537cc2", "url": "https://github.com/MegaMek/megamek/commit/4daec8ddf817d7086754961c8f1ea53a65537cc2", "message": "Merge branch 'master' into Issue1583_MapEditor", "committedDate": "2020-03-19T21:35:00Z", "type": "commit"}, {"oid": "281dd39e9c1a1a1ee28fea6ed4cd14c1e898f58f", "url": "https://github.com/MegaMek/megamek/commit/281dd39e9c1a1a1ee28fea6ed4cd14c1e898f58f", "message": "Small change", "committedDate": "2020-03-19T21:41:06Z", "type": "commit"}, {"oid": "059dd8fa79617e30cd069c12f2ad3b8c50e44b4c", "url": "https://github.com/MegaMek/megamek/commit/059dd8fa79617e30cd069c12f2ad3b8c50e44b4c", "message": "Merge remote-tracking branch 'JuliezFork/Issue1583_MapEditor' into Issue1583_Bridge0", "committedDate": "2020-03-19T21:42:15Z", "type": "commit"}]}