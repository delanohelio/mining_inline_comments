{"pr_number": 2278, "pr_title": "Further Logger changes", "pr_createdAt": "2020-09-30T13:56:10Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2278", "timeline": [{"oid": "db83474cd68fafa78f3fbdd4ec0bc11acc582042", "url": "https://github.com/MegaMek/megamek/commit/db83474cd68fafa78f3fbdd4ec0bc11acc582042", "message": "Further Logger simplification", "committedDate": "2020-09-28T14:14:55Z", "type": "commit"}, {"oid": "a3705404f7857df886e37a668af2234d7d48ef6e", "url": "https://github.com/MegaMek/megamek/commit/a3705404f7857df886e37a668af2234d7d48ef6e", "message": "Removing deprecated logger method calls", "committedDate": "2020-09-29T21:01:52Z", "type": "commit"}, {"oid": "7e8634d6932e697d22ad80629c66592af6b962de", "url": "https://github.com/MegaMek/megamek/commit/7e8634d6932e697d22ad80629c66592af6b962de", "message": "SetLogLevel Simplification", "committedDate": "2020-09-30T13:34:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NTQ4MQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497575481", "bodyText": "Does dynamically retrieving this information e.g. class name, method name have any negative performance impact? Probably not, compared to disk I/O, but worth asking.", "author": "NickAragua", "createdAt": "2020-09-30T14:53:46Z", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -368,36 +455,76 @@ public void warning(final Object callingObject, final String message) {\n                                            final T throwable) {\n         return log(callingObject.getClass(), getCallingMethod(), LogLevel.WARNING, message, throwable);\n     }\n+    \n+    @Override\n+    public <T extends Throwable> T warning(final String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), LogLevel.WARNING, message, throwable);\n+    }\n     //endregion Warning\n     \n     @Override\n     public void methodBegin(final Class<?> callingClass, final String methodName) {\n         log(callingClass, methodName, LogLevel.DEBUG, METHOD_BEGIN + methodName);\n     }\n     \n+    @Override\n+    public void methodBegin() {\n+        log(getCallingClass(), getCallingMethod(), LogLevel.DEBUG, METHOD_BEGIN, null);\n+    }\n+\n+    \n     @Override\n     public void methodEnd(final Class<?> callingClass, final String methodName) {\n         log(callingClass, methodName, LogLevel.DEBUG, METHOD_END + methodName);\n     }\n+    \n+    @Override\n+    public void methodEnd() {\n+        log(getCallingClass(), getCallingMethod(), LogLevel.DEBUG, METHOD_END, null);\n+    }\n \n     @Override\n     public void methodCalled(final Class<?> callingClass, final String methodName) {\n         log(callingClass, methodName, LogLevel.DEBUG, METHOD_CALLED + methodName);\n     }\n+    \n+    @Override\n+    public void methodCalled() {\n+        log(getCallingClass(), getCallingMethod(), LogLevel.DEBUG, METHOD_CALLED, null);\n+    }\n+\n \n     /**\n-     * Retrieves the name of the method calling log/info/error etc.\n-     * from the stack trace.\n+     * Retrieves the name of the method and the line number \n+     * calling log/info/error etc. from the stack trace.\n      *\n      * This method MUST be called from a top-level method (such as info or fatal)\n      * as it depends on the call stack depth of exactly three methods between\n      * internally calling getStackTrace and the user's code.\n      */\n     private String getCallingMethod() {\n         try {\n-            return Thread.currentThread().getStackTrace()[3].getMethodName() + \"()\";\n+            String result = Thread.currentThread().getStackTrace()[3].getMethodName() + \"()\";\n+            result += \", line \" + Thread.currentThread().getStackTrace()[3].getLineNumber();\n+            return result;\n+        } catch (Exception e) {\n+            return \"DefaultMMLogger Error: Could not obtain method name.\";\n+        }\n+    }\n+    \n+    /**\n+     * Retrieves the name of the class calling log/info/error etc.\n+     * from the stack trace.\n+     *\n+     * This method MUST be called from a top-level method (such as info or fatal)\n+     * as it depends on the call stack depth of exactly three methods between\n+     * internally calling getStackTrace and the user's code.\n+     */\n+    private String getCallingClass() {\n+        try {\n+            return Thread.currentThread().getStackTrace()[3].getClassName();", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5MTkxMg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497591912", "bodyText": "It shouldn't, but.. I'll test on my potato laptop before we merge the story just to be on the safe side", "author": "Windchild292", "createdAt": "2020-09-30T15:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NTQ4MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MTk2OQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497561969", "bodyText": "I don't understand why we are creating an IOException just for logging, unless it is to display a stacktrace?", "author": "Windchild292", "createdAt": "2020-09-30T14:36:49Z", "path": "megamek/src/megamek/MegaMek.java", "diffHunk": "@@ -597,12 +595,12 @@ private void processUnitValidator() throws ParseException {\n                 }\n \n                 if (ms == null) {\n-                    getLogger().error(this, new IOException(filename + \" not found.  Try using \\\"chassis model\\\" for input.\"));\n+                    getLogger().error(new IOException(filename + \" not found.  Try using \\\"chassis model\\\" for input.\"));", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMxMzk0MQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r498313941", "bodyText": "I noticed it but seeing the number of changes for this one, I simply didn't want to think about it. Another time :)", "author": "SJuliez", "createdAt": "2020-10-01T15:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MTk2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NjUwMA==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497566500", "bodyText": "Something odd here in the formatting (I'd bet tab/space)", "author": "Windchild292", "createdAt": "2020-09-30T14:42:26Z", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -346,10 +341,10 @@ public boolean shouldStay(MovePath movePath) {\n             \n             return true;\n         } catch(Exception e) {\n-        \tMegaMek.getLogger().error(this, e.toString());\n+        \tMegaMek.getLogger().error(e.toString());\n         \treturn false;\n         } finally {\n-            getOwner().methodEnd(getClass(), METHOD_NAME);\n+            getOwner().getLogger().methodEnd();", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/client/bot/princess/PathEnumerator.java b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\nindex 708652518e..64bc57da1c 100644\n--- a/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n+++ b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n\n@@ -338,11 +338,11 @@ public class PathEnumerator {\n             myArea.addCoordFacingCombos(getUnitPotentialLocations().get(\n                     mover.getId()).iterator());\n             getUnitMovableAreas().put(mover.getId(), myArea);\n-            \n+\n             return true;\n         } catch(Exception e) {\n-        \tMegaMek.getLogger().error(e.toString());\n-        \treturn false;\n+            MegaMek.getLogger().error(e.toString());\n+            return false;\n         } finally {\n             getOwner().getLogger().methodEnd();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NzcwNg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497567706", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            getOwner().getLogger().warning(\"Invalid home edge.  Defaulting to NORTH.\");\n          \n          \n            \n                            getOwner().getLogger().warning(\"Invalid home edge. Defaulting to NORTH.\");", "author": "Windchild292", "createdAt": "2020-09-30T14:43:58Z", "path": "megamek/src/megamek/client/bot/princess/PathRanker.java", "diffHunk": "@@ -403,18 +398,18 @@ public int distanceToHomeEdge(Coords position, CardinalEdge homeEdge, IGame game\n                 edgeCoords = new Coords(boardWidth, position.getY());\n             } else {\n                 msg.append(\"Default\");\n-                getOwner().log(getClass(), METHOD_NAME, LogLevel.WARNING, \"Invalid home edge.  Defaulting to NORTH.\");\n+                getOwner().getLogger().warning(\"Invalid home edge.  Defaulting to NORTH.\");", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "chunk": "diff --git a/megamek/src/megamek/client/bot/princess/PathRanker.java b/megamek/src/megamek/client/bot/princess/PathRanker.java\nindex 0df0a186b9..e974666c4c 100644\n--- a/megamek/src/megamek/client/bot/princess/PathRanker.java\n+++ b/megamek/src/megamek/client/bot/princess/PathRanker.java\n\n@@ -398,7 +398,7 @@ public abstract class PathRanker implements IPathRanker {\n                 edgeCoords = new Coords(boardWidth, position.getY());\n             } else {\n                 msg.append(\"Default\");\n-                getOwner().getLogger().warning(\"Invalid home edge.  Defaulting to NORTH.\");\n+                getOwner().getLogger().warning(\"Invalid home edge. Defaulting to NORTH.\");\n                 edgeCoords = new Coords(boardWidth / 2, 0);\n             }\n             msg.append(edgeCoords.toFriendlyString());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3Mjg3OQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497572879", "bodyText": "Formatting looks screwy", "author": "Windchild292", "createdAt": "2020-09-30T14:50:30Z", "path": "megamek/src/megamek/client/ratgenerator/ChassisRecord.java", "diffHunk": "@@ -49,8 +48,7 @@ public void addModel(ModelRecord model) {\n \tpublic int totalModelWeight(int era, String fKey) {\n \t\tFactionRecord fRec = RATGenerator.getInstance().getFaction(fKey);\n \t\tif (fRec == null) {\n-            DefaultMmLogger.getInstance().log(getClass(), \"totalModelWeight(int, String)\", LogLevel.WARNING,\n-                    \"Attempt to find totalModelWeight for non-existent faction \" + fKey);\n+\t\t    MegaMek.getLogger().warning(\"Attempt to find totalModelWeight for non-existent faction \" + fKey);\n \t\t\treturn 0;", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/client/ratgenerator/ChassisRecord.java b/megamek/src/megamek/client/ratgenerator/ChassisRecord.java\nindex 5d36c5a827..d31ded800d 100644\n--- a/megamek/src/megamek/client/ratgenerator/ChassisRecord.java\n+++ b/megamek/src/megamek/client/ratgenerator/ChassisRecord.java\n\n@@ -27,45 +27,45 @@ import megamek.MegaMek;\n  */\n public class ChassisRecord extends AbstractUnitRecord {\n \n-\tprotected HashSet<ModelRecord> models;\n-\t\n-\tpublic ChassisRecord(String chassis) {\n-\t\tsuper(chassis);\n-\t\tmodels = new HashSet<ModelRecord>();\n-\t}\n-\t\n-\tpublic void addModel(ModelRecord model) {\n-\t\tmodels.add(model);\n-\t\tif (introYear == 0 || model.getIntroYear() < getIntroYear()) {\n-\t\t\tintroYear = model.getIntroYear();\n-\t\t}\n-\t}\n-\t\n-\tpublic HashSet<ModelRecord> getModels() {\n-\t\treturn models;\n-\t}\n-\t\n-\tpublic int totalModelWeight(int era, String fKey) {\n-\t\tFactionRecord fRec = RATGenerator.getInstance().getFaction(fKey);\n-\t\tif (fRec == null) {\n-\t\t    MegaMek.getLogger().warning(\"Attempt to find totalModelWeight for non-existent faction \" + fKey);\n-\t\t\treturn 0;\n-\t\t}\n-\t\treturn totalModelWeight(era, fRec);\n-\t}\n-\t\n-\tpublic int totalModelWeight(int era, FactionRecord fRec) {\n-\t\tint retVal = 0;\n-\t\tRATGenerator rg = RATGenerator.getInstance();\n-\t\t\n-\t\tfor (ModelRecord mr : models) {\n-\t\t\tAvailabilityRating ar = rg.findModelAvailabilityRecord(era,\n-\t\t\t\t\tmr.getKey(), fRec);\n-\t\t\tif (ar != null) {\n-\t\t\t\tretVal += AvailabilityRating.calcWeight(ar.getAvailability());\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\treturn retVal;\n-\t}\n+    protected HashSet<ModelRecord> models;\n+    \n+    public ChassisRecord(String chassis) {\n+        super(chassis);\n+        models = new HashSet<ModelRecord>();\n+    }\n+    \n+    public void addModel(ModelRecord model) {\n+        models.add(model);\n+        if (introYear == 0 || model.getIntroYear() < getIntroYear()) {\n+            introYear = model.getIntroYear();\n+        }\n+    }\n+    \n+    public HashSet<ModelRecord> getModels() {\n+        return models;\n+    }\n+    \n+    public int totalModelWeight(int era, String fKey) {\n+        FactionRecord fRec = RATGenerator.getInstance().getFaction(fKey);\n+        if (fRec == null) {\n+            MegaMek.getLogger().warning(\"Attempt to find totalModelWeight for non-existent faction \" + fKey);\n+            return 0;\n+        }\n+        return totalModelWeight(era, fRec);\n+    }\n+    \n+    public int totalModelWeight(int era, FactionRecord fRec) {\n+        int retVal = 0;\n+        RATGenerator rg = RATGenerator.getInstance();\n+        \n+        for (ModelRecord mr : models) {\n+            AvailabilityRating ar = rg.findModelAvailabilityRecord(era,\n+                    mr.getKey(), fRec);\n+            if (ar != null) {\n+                retVal += AvailabilityRating.calcWeight(ar.getAvailability());\n+            }\n+        }\n+        \n+        return retVal;\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NDI2MQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497574261", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]), null);\n          \n          \n            \n                                    + (((unitType == UnitType.AERO) || (unitType == UnitType.CONV_FIGHTER)) ? airEschelonNames[eschelon] : eschelonNames[eschelon]), null);", "author": "Windchild292", "createdAt": "2020-09-30T14:52:16Z", "path": "megamek/src/megamek/client/ratgenerator/ForceDescriptor.java", "diffHunk": "@@ -1725,9 +1715,8 @@ public void show(String indent, LogLevel logLevel) {\n                 \"Element\", \"(1)\", \"(2)\", \"Flight\", \"Squadron\", \"Group\", \"Wing\", \"Regiment\"\n         };\n \n-        DefaultMmLogger.getInstance().log(getClass(), \"show(String, LogLevel)\",\n-                logLevel, indent + weightClass + \" \" + unitType + \" \"\n-                        + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]));\n+        MegaMek.getLogger().log(logLevel, indent + weightClass + \" \" + unitType + \" \"\n+                        + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]), null);", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "chunk": "diff --git a/megamek/src/megamek/client/ratgenerator/ForceDescriptor.java b/megamek/src/megamek/client/ratgenerator/ForceDescriptor.java\nindex 09ff237452..ff199d0e9f 100644\n--- a/megamek/src/megamek/client/ratgenerator/ForceDescriptor.java\n+++ b/megamek/src/megamek/client/ratgenerator/ForceDescriptor.java\n\n@@ -1716,7 +1716,7 @@ public class ForceDescriptor {\n         };\n \n         MegaMek.getLogger().log(logLevel, indent + weightClass + \" \" + unitType + \" \"\n-                        + ((unitType == UnitType.AERO || unitType == UnitType.CONV_FIGHTER)?airEschelonNames[eschelon]:eschelonNames[eschelon]), null);\n+                        + (((unitType == UnitType.AERO) || (unitType == UnitType.CONV_FIGHTER)) ? airEschelonNames[eschelon] : eschelonNames[eschelon]), null);\n         for (ForceDescriptor sub : subforces) {\n             sub.show(indent + \"  \", logLevel);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NjM3Mw==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497576373", "bodyText": "Probably should remove  the method being passed in here.", "author": "Windchild292", "createdAt": "2020-09-30T14:54:46Z", "path": "megamek/src/megamek/client/ui/swing/BotConfigDialog.java", "diffHunk": "@@ -576,7 +576,7 @@ public void actionPerformed(ActionEvent e) {\n \n     private void handleError(String method, Throwable t) {", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/BotConfigDialog.java b/megamek/src/megamek/client/ui/swing/BotConfigDialog.java\nindex 800e0925d2..31816ffdd7 100644\n--- a/megamek/src/megamek/client/ui/swing/BotConfigDialog.java\n+++ b/megamek/src/megamek/client/ui/swing/BotConfigDialog.java\n\n@@ -574,7 +574,7 @@ public class BotConfigDialog extends JDialog implements ActionListener, KeyListe\n         }\n     }\n \n-    private void handleError(String method, Throwable t) {\n+    private void handleError(Throwable t) {\n         JOptionPane.showMessageDialog(this, t.getMessage(), \"ERROR\", JOptionPane.ERROR_MESSAGE);\n         MegaMek.getLogger().error(t);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3NzMzNQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497577335", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * MegaMek - Copyright (C) 2020 - The MegaMek Team  \n          \n          \n            \n            * MegaMek - Copyright (C) 2013-2020 - The MegaMek Team", "author": "Windchild292", "createdAt": "2020-09-30T14:55:56Z", "path": "megamek/src/megamek/client/ui/swing/HelpDialog.java", "diffHunk": "@@ -1,8 +1,19 @@\n+/*  \r\n+* MegaMek - Copyright (C) 2020 - The MegaMek Team  \r", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/HelpDialog.java b/megamek/src/megamek/client/ui/swing/HelpDialog.java\nindex b38f77bf99..c0c8ea4e95 100644\n--- a/megamek/src/megamek/client/ui/swing/HelpDialog.java\n+++ b/megamek/src/megamek/client/ui/swing/HelpDialog.java\n\n@@ -1,5 +1,6 @@\n /*  \n-* MegaMek - Copyright (C) 2020 - The MegaMek Team  \n+* MegaMek - Copyright (C) 2013-2020 - The MegaMek Team  \n+\n *  \n * This program is free software; you can redistribute it and/or modify it under  \n * the terms of the GNU General Public License as published by the Free Software  \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3ODU3Nw==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497578577", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        DefaultMmLogger.getInstance().error(\"A null color was passed.\");\n          \n          \n            \n                        MegaMek.getLogger().error(\"A null color was passed.\");", "author": "Windchild292", "createdAt": "2020-09-30T14:57:28Z", "path": "megamek/src/megamek/client/ui/swing/tileset/CamoManager.java", "diffHunk": "@@ -229,7 +228,7 @@ public static Image getEntityCamoImage(Entity entity) {\n      */\r\n     public static BufferedImage colorCamoImage(Color color) {\r\n         if (color == null) {\r\n-            DefaultMmLogger.getInstance().error(CamoManager.class, \"A null color was passed.\");\r\n+            DefaultMmLogger.getInstance().error(\"A null color was passed.\");\r", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/tileset/CamoManager.java b/megamek/src/megamek/client/ui/swing/tileset/CamoManager.java\nindex a4406ca7be..2ac7b716f5 100644\n--- a/megamek/src/megamek/client/ui/swing/tileset/CamoManager.java\n+++ b/megamek/src/megamek/client/ui/swing/tileset/CamoManager.java\n\n@@ -228,7 +228,8 @@ public final class CamoManager {\n      */\n     public static BufferedImage colorCamoImage(Color color) {\n         if (color == null) {\n-            DefaultMmLogger.getInstance().error(\"A null color was passed.\");\n+            MegaMek.getLogger().error(\"A null color was passed.\");\n+\n             return ImageUtil.failStandardImage();\n         }\n         BufferedImage result = new BufferedImage(84, 72, BufferedImage.TYPE_INT_RGB);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3OTQ1NA==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497579454", "bodyText": "Does this set it for this class or MM in general... and why is this hardcoded here?", "author": "Windchild292", "createdAt": "2020-09-30T14:58:34Z", "path": "megamek/src/megamek/client/ui/swing/tileset/HexTileset.java", "diffHunk": "@@ -83,7 +83,7 @@ public HexTileset(IGame g) {\n         game = g;\n         game.addGameListener(gameListener);\n         game.getBoard().addBoardListener(this);\n-        LOG.setLogLevel(this, LOGLVL);\n+        MegaMek.getLogger().setLogLevel(LOGLVL);", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NjY2MA==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497596660", "bodyText": "Only for this class. This class used to spam lots of stuff in the log. I didnt want to remove the logs altogether, just hide them normally and have a handy way of getting them back when needed. Same in MechSummaryCache", "author": "SJuliez", "createdAt": "2020-09-30T15:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3OTQ1NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3OTkxNg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497579916", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"Could not parse the portraits directory!\");\n          \n          \n            \n                            e.printStackTrace();\n          \n          \n            \n                            MegaMek.getLogger().error(\"Could not parse the portraits directory!\", e);", "author": "Windchild292", "createdAt": "2020-09-30T14:59:06Z", "path": "megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java", "diffHunk": "@@ -79,7 +79,7 @@ private static void initializePortraits() {\n                 portraitDirectory = new DirectoryItems(Configuration.portraitImagesDir(), \"\", \r\n                         ImageFileFactory.getInstance());\r\n             } catch (Exception e) {\r\n-                MegaMek.getLogger().error(PortraitManager.class, \"Could not parse the portraits directory!\");\r\n+                MegaMek.getLogger().error(\"Could not parse the portraits directory!\");\r\n                 e.printStackTrace();\r", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java b/megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java\nindex 2f63b1a8d7..11879e8dcd 100644\n--- a/megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java\n+++ b/megamek/src/megamek/client/ui/swing/tileset/PortraitManager.java\n\n@@ -79,8 +79,7 @@ public class PortraitManager {\n                 portraitDirectory = new DirectoryItems(Configuration.portraitImagesDir(), \"\", \n                         ImageFileFactory.getInstance());\n             } catch (Exception e) {\n-                MegaMek.getLogger().error(\"Could not parse the portraits directory!\");\n-                e.printStackTrace();\n+                MegaMek.getLogger().error(\"Could not parse the portraits directory!\", e);\n                 // This could be improved by obtaining an empty DirectoryItems to avoid returning null\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MjEyMw==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497582123", "bodyText": "Same as before, is this setting just for this class or in general, and why is is hardcoded.", "author": "Windchild292", "createdAt": "2020-09-30T15:01:50Z", "path": "megamek/src/megamek/common/MechSummaryCache.java", "diffHunk": "@@ -142,7 +142,7 @@ public void removeListener(Listener listener) {\n     private MechSummaryCache() {\n         m_nameMap = new HashMap<>();\n         m_fileNameMap = new HashMap<>();\n-        LOG.setLogLevel(this, LOGLVL);\n+        MegaMek.getLogger().setLogLevel(LOGLVL);", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MzI4NQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497583285", "bodyText": "Keeping this using the DefaultMMLogger?", "author": "Windchild292", "createdAt": "2020-09-30T15:03:21Z", "path": "megamek/src/megamek/common/QuirksHandler.java", "diffHunk": "@@ -228,14 +227,11 @@ public static String replaceUnitType(String unitId, String newUnitType) {\n     }\n \n     private static Map<String, List<QuirkEntry>> loadQuirksFile(String path) throws IOException {\n-        final String METHOD_NAME = \"loadQuirksFile(String)\";\n-        \n         Map<String, List<QuirkEntry>> quirkMap = new HashMap<>();\n \n         File file = new File(path);\n         if (!file.exists() || !file.isFile()) {\n-            getLogger().log(QuirksHandler.class, METHOD_NAME, LogLevel.WARNING,\n-                            \"Could not load quirks from \" + path);\n+            getLogger().warning(\"Could not load quirks from \" + path);", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyMjk5OQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r498322999", "bodyText": "This has a setlogger method. I didn't want to just remove it.\n// Use to pass in a fake logger for unit tests.\n    static void setLogger(final MMLogger newLogger) {\n        logger = newLogger;\n    }", "author": "SJuliez", "createdAt": "2020-10-01T15:14:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MzI4NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4NTQwNg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497585406", "bodyText": "Same as before, file or system, and why hardcoded.", "author": "Windchild292", "createdAt": "2020-09-30T15:06:06Z", "path": "megamek/src/megamek/common/pathfinder/AeroGroundPathFinder.java", "diffHunk": "@@ -59,29 +57,22 @@ protected int getMaximumVelocity(IAero mover) {\n     protected IGame game;\n     private List<MovePath> aeroGroundPaths;\n     protected int maxThrust;\n-    private MMLogger logger;\n \n     protected AeroGroundPathFinder(IGame game) {\n         this.game = game;\n-        getLogger().setLogLevel(LOGGER_CATEGORY, LogLevel.DEBUG);\n+        MegaMek.getLogger().setLogLevel(LogLevel.DEBUG);", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzQ4Mg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497597482", "bodyText": "Not mine, can't say.", "author": "SJuliez", "createdAt": "2020-09-30T15:21:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4NTQwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NTExMg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497595112", "bodyText": "Tab spacing", "author": "Windchild292", "createdAt": "2020-09-30T15:18:41Z", "path": "megamek/src/megamek/client/ratgenerator/RATGenerator.java", "diffHunk": "@@ -884,7 +872,7 @@ private void loadFactions(File dir) {\n \t\t\tDocumentBuilder db = MegaMekXmlUtil.newSafeDocumentBuilder();\n \t\t\txmlDoc = db.parse(fis);\n \t\t} catch (Exception ex) {\n-\t\t\tDefaultMmLogger.getInstance().error(getClass(), METHOD_NAME, ex);\n+\t\t    MegaMek.getLogger().error(ex);\n \t\t\treturn;", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/client/ratgenerator/RATGenerator.java b/megamek/src/megamek/client/ratgenerator/RATGenerator.java\nindex 3da3240143..d1b1b7c719 100644\n--- a/megamek/src/megamek/client/ratgenerator/RATGenerator.java\n+++ b/megamek/src/megamek/client/ratgenerator/RATGenerator.java\n\n@@ -838,142 +838,142 @@ public class RATGenerator {\n             rg = null;\n             dispose = false;\n         }\n-\t}\n-\t\n-\t/**\n-\t * If year is equal to one of the era marks, loads that era. If it is between,\n-\t * loads eras on both sides.\n-\t */\n-\tpublic void loadYear(int year) {\n-\t\tif (eraSet.contains(year)) {\n-\t\t\tloadEra(year);\n-\t\t}\n-\t\tif (year > eraSet.first()) {\n-\t\t\tloadEra(eraSet.floor(year));\n-\t\t}\n-\t\tif (year < eraSet.last()) {\n-\t\t\tloadEra(eraSet.ceiling(year));\n-\t\t}\n-\t}\n-\t\n-\tprivate void loadFactions(File dir) {\n-\t\tFile file = new MegaMekFile(dir, \"factions.xml\").getFile();\n-\t\tFileInputStream fis;\n-\t\ttry {\n-\t\t\tfis = new FileInputStream(file);\n-\t\t} catch (FileNotFoundException e) {\n-\t\t    MegaMek.getLogger().error(\"Unable to read RAT generator factions file\");\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tDocument xmlDoc;\n-\n-\t\ttry {\n-\t\t\tDocumentBuilder db = MegaMekXmlUtil.newSafeDocumentBuilder();\n-\t\t\txmlDoc = db.parse(fis);\n-\t\t} catch (Exception ex) {\n-\t\t    MegaMek.getLogger().error(ex);\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tElement element = xmlDoc.getDocumentElement();\n-\t\tNodeList nl = element.getChildNodes();\n-\n-\t\telement.normalize();\n-\n-\t\tfor (int x = 0; x < nl.getLength(); x++) {\n-\t\t\tNode wn = nl.item(x);\n-\t\t\tif (wn.getNodeName().equalsIgnoreCase(\"faction\")) {\n-\t\t\t\tif (wn.getAttributes().getNamedItem(\"key\") != null) {\n-\t\t\t\t\tFactionRecord rec = FactionRecord.createFromXml(wn);\n-\t\t\t\t\tfactions.put(rec.getKey(), rec);\n-\t\t\t\t} else {\n-\t\t\t\t    MegaMek.getLogger().warning(\"Faction key not found in \" + file.getPath());\n-\t\t\t\t}\n-\t\t\t}\t\t\t\n-\t\t}\n-\t}\n-\n-\tprivate void loadEra(int era) {\n-\t\tloadEra(era, Configuration.forceGeneratorDir());\n-\t}\n-\t\n-\tprivate synchronized void loadEra(int era, File dir) {\n-\t\tif (eraIsLoaded(era)) {\n-\t\t\treturn;\n-\t\t}\n-\t\tchassisIndex.put(era, new HashMap<>());\n-\t\tmodelIndex.put(era, new HashMap<>());\n-\t\tFile file = new MegaMekFile(dir, era + \".xml\").getFile();\n-\t\tFileInputStream fis;\n-\t\ttry {\n-\t\t\tfis = new FileInputStream(file);\n-\t\t} catch (FileNotFoundException e) {\n-\t\t    MegaMek.getLogger().error(\"Unable to read RAT generator file for era \" + era);\n-\t\t\treturn;\n-\t\t}\n-\t\twhile (!MechSummaryCache.getInstance().isInitialized()) {\n-\t\t    try {\n-\t\t        Thread.sleep(50);\n-\t\t    } catch (InterruptedException ex) {\n-\t\t        //do nothing\n-\t\t    }\n-\t\t}\n-\n-\t\tDocument xmlDoc;\n-\n-\t\ttry {\n-\t\t\tDocumentBuilder db = MegaMekXmlUtil.newSafeDocumentBuilder();\n-\t\t\txmlDoc = db.parse(fis);\n-\t\t} catch (Exception ex) {\n-\t\t    MegaMek.getLogger().error(ex);\n+    }\n+    \n+    /**\n+     * If year is equal to one of the era marks, loads that era. If it is between,\n+     * loads eras on both sides.\n+     */\n+    public void loadYear(int year) {\n+        if (eraSet.contains(year)) {\n+            loadEra(year);\n+        }\n+        if (year > eraSet.first()) {\n+            loadEra(eraSet.floor(year));\n+        }\n+        if (year < eraSet.last()) {\n+            loadEra(eraSet.ceiling(year));\n+        }\n+    }\n+    \n+    private void loadFactions(File dir) {\n+        File file = new MegaMekFile(dir, \"factions.xml\").getFile();\n+        FileInputStream fis;\n+        try {\n+            fis = new FileInputStream(file);\n+        } catch (FileNotFoundException e) {\n+            MegaMek.getLogger().error(\"Unable to read RAT generator factions file\");\n+            return;\n+        }\n+\n+        Document xmlDoc;\n+\n+        try {\n+            DocumentBuilder db = MegaMekXmlUtil.newSafeDocumentBuilder();\n+            xmlDoc = db.parse(fis);\n+        } catch (Exception ex) {\n+            MegaMek.getLogger().error(ex);\n             return;\n-\t\t}\n-\n-\t\tElement element = xmlDoc.getDocumentElement();\n-\t\tNodeList nl = element.getChildNodes();\n-\n-\t\telement.normalize();\n-\n-\t\tfor (int x = 0; x < nl.getLength(); x++) {\n-\t\t\tNode mainNode = nl.item(x);\n-\t\t\tif (mainNode.getNodeName().equalsIgnoreCase(\"factions\")) {\n-\t\t\t\tfor (int i = 0; i < mainNode.getChildNodes().getLength(); i++) {\n-\t\t\t\t\tNode wn = mainNode.getChildNodes().item(i);\n-\t\t\t\t\tif (wn.getNodeName().equalsIgnoreCase(\"faction\")) {\n-\t\t\t\t\t\tString fKey = wn.getAttributes().getNamedItem(\"key\").getTextContent();\n-\t\t\t\t\t\tif (fKey != null) {\n-\t\t\t\t\t\t\tFactionRecord rec = factions.get(fKey);\n-\t\t\t\t\t\t\tif (rec != null) {\n-\t\t\t\t\t\t\t\trec.loadEra(wn, era);\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t    MegaMek.getLogger().error(\"Faction \" + fKey + \" not found in \"\n-\t\t\t\t\t\t\t\t\t\t+ file.getPath());\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t    MegaMek.getLogger().error(\"Faction key not found in \" + file.getPath());\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t} else if (mainNode.getNodeName().equalsIgnoreCase(\"units\")) {\n-\t\t\t\tfor (int i = 0; i < mainNode.getChildNodes().getLength(); i++) {\n-\t\t\t\t\tNode wn = mainNode.getChildNodes().item(i);\n-\t\t\t\t\tif (wn.getNodeName().equalsIgnoreCase(\"chassis\")) {\n-\t\t\t\t\t\tparseChassisNode(era, wn);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tnotifyListenersEraLoaded();\n-\t}\n-\t\n-\t/**\n-\t * Creates model and chassis records for all units that don't already have entries. This should\n-\t * only be called after all availability records are loaded, otherwise they will be overwritten.\n-\t * \n-\t * Used for editing.\n-\t */\n-\tpublic void initRemainingUnits() {\n+        }\n+\n+        Element element = xmlDoc.getDocumentElement();\n+        NodeList nl = element.getChildNodes();\n+\n+        element.normalize();\n+\n+        for (int x = 0; x < nl.getLength(); x++) {\n+            Node wn = nl.item(x);\n+            if (wn.getNodeName().equalsIgnoreCase(\"faction\")) {\n+                if (wn.getAttributes().getNamedItem(\"key\") != null) {\n+                    FactionRecord rec = FactionRecord.createFromXml(wn);\n+                    factions.put(rec.getKey(), rec);\n+                } else {\n+                    MegaMek.getLogger().warning(\"Faction key not found in \" + file.getPath());\n+                }\n+            }            \n+        }\n+    }\n+\n+    private void loadEra(int era) {\n+        loadEra(era, Configuration.forceGeneratorDir());\n+    }\n+    \n+    private synchronized void loadEra(int era, File dir) {\n+        if (eraIsLoaded(era)) {\n+            return;\n+        }\n+        chassisIndex.put(era, new HashMap<>());\n+        modelIndex.put(era, new HashMap<>());\n+        File file = new MegaMekFile(dir, era + \".xml\").getFile();\n+        FileInputStream fis;\n+        try {\n+            fis = new FileInputStream(file);\n+        } catch (FileNotFoundException e) {\n+            MegaMek.getLogger().error(\"Unable to read RAT generator file for era \" + era);\n+            return;\n+        }\n+        while (!MechSummaryCache.getInstance().isInitialized()) {\n+            try {\n+                Thread.sleep(50);\n+            } catch (InterruptedException ex) {\n+                //do nothing\n+            }\n+        }\n+\n+        Document xmlDoc;\n+\n+        try {\n+            DocumentBuilder db = MegaMekXmlUtil.newSafeDocumentBuilder();\n+            xmlDoc = db.parse(fis);\n+        } catch (Exception ex) {\n+            MegaMek.getLogger().error(ex);\n+            return;\n+        }\n+\n+        Element element = xmlDoc.getDocumentElement();\n+        NodeList nl = element.getChildNodes();\n+\n+        element.normalize();\n+\n+        for (int x = 0; x < nl.getLength(); x++) {\n+            Node mainNode = nl.item(x);\n+            if (mainNode.getNodeName().equalsIgnoreCase(\"factions\")) {\n+                for (int i = 0; i < mainNode.getChildNodes().getLength(); i++) {\n+                    Node wn = mainNode.getChildNodes().item(i);\n+                    if (wn.getNodeName().equalsIgnoreCase(\"faction\")) {\n+                        String fKey = wn.getAttributes().getNamedItem(\"key\").getTextContent();\n+                        if (fKey != null) {\n+                            FactionRecord rec = factions.get(fKey);\n+                            if (rec != null) {\n+                                rec.loadEra(wn, era);\n+                            } else {\n+                                MegaMek.getLogger().error(\"Faction \" + fKey + \" not found in \"\n+                                        + file.getPath());\n+                            }\n+                        } else {\n+                            MegaMek.getLogger().error(\"Faction key not found in \" + file.getPath());\n+                        }\n+                    }\n+                }\n+            } else if (mainNode.getNodeName().equalsIgnoreCase(\"units\")) {\n+                for (int i = 0; i < mainNode.getChildNodes().getLength(); i++) {\n+                    Node wn = mainNode.getChildNodes().item(i);\n+                    if (wn.getNodeName().equalsIgnoreCase(\"chassis\")) {\n+                        parseChassisNode(era, wn);\n+                    }\n+                }\n+            }\n+        }\n+        notifyListenersEraLoaded();\n+    }\n+    \n+    /**\n+     * Creates model and chassis records for all units that don't already have entries. This should\n+     * only be called after all availability records are loaded, otherwise they will be overwritten.\n+     * \n+     * Used for editing.\n+     */\n+    public void initRemainingUnits() {\n         for (MechSummary ms : MechSummaryCache.getInstance().getAllMechs()) {\n             if (models.containsKey(ms.getName())) {\n                 continue;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzUzMg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497597532", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        MegaMek.getLogger().error(\"Client does not have a jar file\");\n          \n          \n            \n                        MegaMek.getLogger().info(\"Client does not have a jar file\");", "author": "Windchild292", "createdAt": "2020-09-30T15:21:58Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -817,15 +804,15 @@ private void receivePlayerVersion(Packet packet, int connId) {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Client Checksum is null. Client may not have a jar file\");\n-            getLogger().error(getClass(), METHOD_NAME, \"Client does not have a jar file\");\n+            MegaMek.getLogger().error(\"Client does not have a jar file\");", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -804,7 +804,7 @@ public class Server implements Runnable {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Client Checksum is null. Client may not have a jar file\");\n-            MegaMek.getLogger().error(\"Client does not have a jar file\");\n+            MegaMek.getLogger().info(\"Client does not have a jar file\");\n             needs = true;\n         // print message indicating server doesn't have jar file\n         } else if (serverChecksum == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5NzY4Mg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497597682", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        MegaMek.getLogger().error(\"Server does not have a jar file\");\n          \n          \n            \n                        MegaMek.getLogger().info(\"Server does not have a jar file\");", "author": "Windchild292", "createdAt": "2020-09-30T15:22:11Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -817,15 +804,15 @@ private void receivePlayerVersion(Packet packet, int connId) {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Client Checksum is null. Client may not have a jar file\");\n-            getLogger().error(getClass(), METHOD_NAME, \"Client does not have a jar file\");\n+            MegaMek.getLogger().error(\"Client does not have a jar file\");\n             needs = true;\n         // print message indicating server doesn't have jar file\n         } else if (serverChecksum == null) {\n             if (!version.equals(MegaMek.VERSION)) {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Server Checksum is null. Server may not have a jar file\");\n-            getLogger().error(getClass(), METHOD_NAME, \"Server does not have a jar file\");\n+            MegaMek.getLogger().error(\"Server does not have a jar file\");", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -804,7 +804,7 @@ public class Server implements Runnable {\n                 buf.append(System.lineSeparator()).append(System.lineSeparator());\n             }\n             buf.append(\"Client Checksum is null. Client may not have a jar file\");\n-            MegaMek.getLogger().error(\"Client does not have a jar file\");\n+            MegaMek.getLogger().info(\"Client does not have a jar file\");\n             needs = true;\n         // print message indicating server doesn't have jar file\n         } else if (serverChecksum == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5ODMxMg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497598312", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n          \n          \n            \n                    MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\");", "author": "Windchild292", "createdAt": "2020-09-30T15:23:02Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -1335,15 +1320,14 @@ public boolean loadGame(File f) {\n      * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n-        final String METHOD_NAME = \"loadGame(File,boolean)\";\n-        getLogger().info(getClass(), METHOD_NAME, \"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n+        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -1320,14 +1320,14 @@ public class Server implements Runnable {\n      * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n-        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n+        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\");\n \n         IGame newGame;\n         try (InputStream is = new FileInputStream(f); InputStream gzi = new GZIPInputStream(is)) {\n             XStream xstream = SerializationHelper.getXStream();\n             newGame = (IGame) xstream.fromXML(gzi);\n         } catch (Exception e) {\n-            MegaMek.getLogger().error(\"Unable to load file: \" + f, e); //$NON-NLS-1$\n+            MegaMek.getLogger().error(\"Unable to load file: \" + f, e);\n             return false;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5ODQ1MQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497598451", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        MegaMek.getLogger().error(\"Unable to load file: \" + f, e); //$NON-NLS-1$\n          \n          \n            \n                        MegaMek.getLogger().error(\"Unable to load file: \" + f, e);", "author": "Windchild292", "createdAt": "2020-09-30T15:23:14Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -1335,15 +1320,14 @@ public boolean loadGame(File f) {\n      * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n-        final String METHOD_NAME = \"loadGame(File,boolean)\";\n-        getLogger().info(getClass(), METHOD_NAME, \"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n+        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n \n         IGame newGame;\n         try (InputStream is = new FileInputStream(f); InputStream gzi = new GZIPInputStream(is)) {\n             XStream xstream = SerializationHelper.getXStream();\n             newGame = (IGame) xstream.fromXML(gzi);\n         } catch (Exception e) {\n-            getLogger().error(getClass(), METHOD_NAME, \"Unable to load file: \" + f, e); //$NON-NLS-1$\n+            MegaMek.getLogger().error(\"Unable to load file: \" + f, e); //$NON-NLS-1$", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -1320,14 +1320,14 @@ public class Server implements Runnable {\n      * @return A <code>boolean</code> value whether or not the loading was successful\n      */\n     public boolean loadGame(File f, boolean sendInfo) {\n-        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\"); //$NON-NLS-1$\n+        MegaMek.getLogger().info(\"s: loading saved game file '\" + f + \"'\");\n \n         IGame newGame;\n         try (InputStream is = new FileInputStream(f); InputStream gzi = new GZIPInputStream(is)) {\n             XStream xstream = SerializationHelper.getXStream();\n             newGame = (IGame) xstream.fromXML(gzi);\n         } catch (Exception e) {\n-            MegaMek.getLogger().error(\"Unable to load file: \" + f, e); //$NON-NLS-1$\n+            MegaMek.getLogger().error(\"Unable to load file: \" + f, e);\n             return false;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5OTc4MA==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497599780", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"attack packet has wrong attacker\");\n          \n          \n            \n                            MegaMek.getLogger().error(\"Attack packet has wrong attacker\");", "author": "Windchild292", "createdAt": "2020-09-30T15:24:57Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -13446,7 +13402,7 @@ private void processAttack(Entity entity, Vector<EntityAction> vector) {\n         for (EntityAction ea : vector) {\n             // is this the right entity?\n             if (ea.getEntityId() != entity.getId()) {\n-                getLogger().error(getClass(), METHOD_NAME, \"attack packet has wrong attacker\");\n+                MegaMek.getLogger().error(\"attack packet has wrong attacker\");", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -13402,7 +13421,7 @@ public class Server implements Runnable {\n         for (EntityAction ea : vector) {\n             // is this the right entity?\n             if (ea.getEntityId() != entity.getId()) {\n-                MegaMek.getLogger().error(\"attack packet has wrong attacker\");\n+                MegaMek.getLogger().error(\"Attack packet has wrong attacker\");\n                 continue;\n             }\n             if (ea instanceof PushAttackAction) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMDMxNg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497600316", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"removing duplicate phys attack for id#\" + entityId\n          \n          \n            \n                            MegaMek.getLogger().error(\"Removing duplicate phys attack for id#\" + entityId", "author": "Windchild292", "createdAt": "2020-09-30T15:25:41Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -15269,7 +15210,7 @@ private void removeDuplicateAttacks(int entityId) {\n                     allowed--;\n                 }\n             } else {\n-                getLogger().error(getClass(), METHOD_NAME, \"removing duplicate phys attack for id#\" + entityId\n+                MegaMek.getLogger().error(\"removing duplicate phys attack for id#\" + entityId", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -15210,7 +15229,7 @@ public class Server implements Runnable {\n                     allowed--;\n                 }\n             } else {\n-                MegaMek.getLogger().error(\"removing duplicate phys attack for id#\" + entityId\n+                MegaMek.getLogger().error(\"Removing duplicate phys attack for id#\" + entityId\n                                 + \"\\n\\t\\taction was \" + action.toString());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMTQwMA==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497601400", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MegaMek.getLogger().error(\"server got unload stranded packet for invalid entity\");\n          \n          \n            \n                            MegaMek.getLogger().error(\"Server got unload stranded packet for invalid entity\");", "author": "Windchild292", "createdAt": "2020-09-30T15:27:07Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -32944,7 +32867,7 @@ private void receiveUnloadStranded(Packet packet, int connId) {\n         for (int index = 0; (null != entityIds) && (index < entityIds.length); index++) {\n             entity = game.getEntity(entityIds[index]);\n             if (!game.getTurn().isValid(connId, entity, game)) {\n-                getLogger().error(getClass(), METHOD_NAME, \"server got unload stranded packet for invalid entity\");\n+                MegaMek.getLogger().error(\"server got unload stranded packet for invalid entity\");", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -32867,7 +32886,7 @@ public class Server implements Runnable {\n         for (int index = 0; (null != entityIds) && (index < entityIds.length); index++) {\n             entity = game.getEntity(entityIds[index]);\n             if (!game.getTurn().isValid(connId, entity, game)) {\n-                MegaMek.getLogger().error(\"server got unload stranded packet for invalid entity\");\n+                MegaMek.getLogger().error(\"Server got unload stranded packet for invalid entity\");\n                 StringBuilder message = new StringBuilder();\n                 message.append(player.getName()).append(\" can not unload stranded entity \");\n                 if (null == entity) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwMTYyMQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497601621", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                MegaMek.getLogger().debug(\"gravity move check jump: \" \n          \n          \n            \n                                MegaMek.getLogger().debug(\"Gravity move check jump: \"", "author": "Windchild292", "createdAt": "2020-09-30T15:27:25Z", "path": "megamek/src/megamek/server/Server.java", "diffHunk": "@@ -33358,7 +33280,7 @@ private void checkExtremeGravityMovement(Entity entity, MoveStep step,\n                                 step, moveType));\n                     }\n                 } else if (moveType == EntityMovementType.MOVE_JUMP) {\n-                    getLogger().debug(getClass(), METHOD_NAME, \"gravity move check jump: \"\n+                    MegaMek.getLogger().debug(\"gravity move check jump: \" ", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "chunk": "diff --git a/megamek/src/megamek/server/Server.java b/megamek/src/megamek/server/Server.java\nindex e128f6e985..b94dfbbd32 100644\n--- a/megamek/src/megamek/server/Server.java\n+++ b/megamek/src/megamek/server/Server.java\n\n@@ -33280,7 +33299,7 @@ public class Server implements Runnable {\n                                 step, moveType));\n                     }\n                 } else if (moveType == EntityMovementType.MOVE_JUMP) {\n-                    MegaMek.getLogger().debug(\"gravity move check jump: \" \n+                    MegaMek.getLogger().debug(\"Gravity move check jump: \" \n                             + step.getMpUsed() + \"/\" + cachedMaxMPExpenditure);\n                     int origWalkMP = entity.getWalkMP(false, false);\n                     int gravWalkMP = entity.getWalkMP();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNjk4OQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497606989", "bodyText": "Why remove the override?", "author": "Windchild292", "createdAt": "2020-09-30T15:34:56Z", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n+    }\n+    \n+    public <T extends Throwable> T log(final String className, final String methodName,\n+            final LogLevel logLevel, final T throwable) {\n         // Construct the message from the Throwable's message.\n         String message = \"\";\n         if (null != throwable) {\n             message = throwable.getMessage();\n         }\n-        return log(callingClass.getName(), methodName, logLevel, message, throwable);\n+        return log(className, methodName, logLevel, message, throwable);\n     }\n \n-    @Override", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMzNDg1Mw==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r498334853", "bodyText": "I forgot about that after I did it... I am not sure what the MMLogger interface is good for except being able to use the FakeLogger (but wouldnt an AbstractLogger base class be the easier choice? Or we could add defaults into MMLogger). As it is the interface doesnt really say what the logger should do, it's rather just a copy of whatever we do in the DefaultMMLogger. And all those log() methods somehow looked not like methods the logger should support but rather like internal helpers for the DefaultMMLogger.\nI'm just not so happy with the interface but thats no different from IHex, IBoard and whatnot. I don't mind restoring the Overrides.", "author": "SJuliez", "createdAt": "2020-10-01T15:30:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNjk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzNzk4Mw==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r499137983", "bodyText": "Readded all the Overrides", "author": "SJuliez", "createdAt": "2020-10-03T10:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNjk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "chunk": "diff --git a/megamek/src/megamek/common/logging/DefaultMmLogger.java b/megamek/src/megamek/common/logging/DefaultMmLogger.java\nindex d517809308..1108f26469 100644\n--- a/megamek/src/megamek/common/logging/DefaultMmLogger.java\n+++ b/megamek/src/megamek/common/logging/DefaultMmLogger.java\n\n@@ -93,11 +93,13 @@ public class DefaultMmLogger implements MMLogger {\n         return throwable;\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n         return log(callingClass.getName(), methodName, logLevel, throwable);\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n         return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzE4MQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607181", "bodyText": "Why remove the override?", "author": "Windchild292", "createdAt": "2020-09-30T15:35:09Z", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n+    }\n+    \n+    public <T extends Throwable> T log(final String className, final String methodName,\n+            final LogLevel logLevel, final T throwable) {\n         // Construct the message from the Throwable's message.\n         String message = \"\";\n         if (null != throwable) {\n             message = throwable.getMessage();\n         }\n-        return log(callingClass.getName(), methodName, logLevel, message, throwable);\n+        return log(className, methodName, logLevel, message, throwable);\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel level, final String message, final T throwable) {\n         return log(callingClass.getName(), methodName, level, message, throwable);\n     }\n-\n-    @Override", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "chunk": "diff --git a/megamek/src/megamek/common/logging/DefaultMmLogger.java b/megamek/src/megamek/common/logging/DefaultMmLogger.java\nindex d517809308..1108f26469 100644\n--- a/megamek/src/megamek/common/logging/DefaultMmLogger.java\n+++ b/megamek/src/megamek/common/logging/DefaultMmLogger.java\n\n@@ -93,11 +93,13 @@ public class DefaultMmLogger implements MMLogger {\n         return throwable;\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n         return log(callingClass.getName(), methodName, logLevel, throwable);\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n         return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzU0Mg==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607542", "bodyText": "Override missing", "author": "Windchild292", "createdAt": "2020-09-30T15:35:42Z", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n+        return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n+    }\n+    \n+    public <T extends Throwable> T log(final String className, final String methodName,", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "chunk": "diff --git a/megamek/src/megamek/common/logging/DefaultMmLogger.java b/megamek/src/megamek/common/logging/DefaultMmLogger.java\nindex d517809308..1108f26469 100644\n--- a/megamek/src/megamek/common/logging/DefaultMmLogger.java\n+++ b/megamek/src/megamek/common/logging/DefaultMmLogger.java\n\n@@ -93,11 +93,13 @@ public class DefaultMmLogger implements MMLogger {\n         return throwable;\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n         return log(callingClass.getName(), methodName, logLevel, throwable);\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n         return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzU5MA==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607590", "bodyText": "Override missing", "author": "Windchild292", "createdAt": "2020-09-30T15:35:45Z", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n+        return log(callingClass.getName(), methodName, logLevel, throwable);\n+    }\n+\n+    public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "chunk": "diff --git a/megamek/src/megamek/common/logging/DefaultMmLogger.java b/megamek/src/megamek/common/logging/DefaultMmLogger.java\nindex d517809308..1108f26469 100644\n--- a/megamek/src/megamek/common/logging/DefaultMmLogger.java\n+++ b/megamek/src/megamek/common/logging/DefaultMmLogger.java\n\n@@ -93,11 +93,13 @@ public class DefaultMmLogger implements MMLogger {\n         return throwable;\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n         return log(callingClass.getName(), methodName, logLevel, throwable);\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n         return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYwNzc0Ng==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r497607746", "bodyText": "Why remove the override?", "author": "Windchild292", "createdAt": "2020-09-30T15:35:57Z", "path": "megamek/src/megamek/common/logging/DefaultMmLogger.java", "diffHunk": "@@ -95,32 +93,37 @@ public Logger getLogger(final String loggerName) {\n         return throwable;\n     }\n \n-    @Override", "originalCommit": "7e8634d6932e697d22ad80629c66592af6b962de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "chunk": "diff --git a/megamek/src/megamek/common/logging/DefaultMmLogger.java b/megamek/src/megamek/common/logging/DefaultMmLogger.java\nindex d517809308..1108f26469 100644\n--- a/megamek/src/megamek/common/logging/DefaultMmLogger.java\n+++ b/megamek/src/megamek/common/logging/DefaultMmLogger.java\n\n@@ -93,11 +93,13 @@ public class DefaultMmLogger implements MMLogger {\n         return throwable;\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final Class<?> callingClass, final String methodName,\n                                        final LogLevel logLevel, final T throwable) {\n         return log(callingClass.getName(), methodName, logLevel, throwable);\n     }\n \n+    @Override\n     public <T extends Throwable> T log(final LogLevel logLevel, String message, final T throwable) {\n         return log(getCallingClass(), getCallingMethod(), logLevel, message, throwable);\n     }\n"}}, {"oid": "c02a59d293dc3a4c06b3cb40c3fe65b6f7cfc1d8", "url": "https://github.com/MegaMek/megamek/commit/c02a59d293dc3a4c06b3cb40c3fe65b6f7cfc1d8", "message": "Merge remote-tracking branch 'MM_Master/master' into LoggerChanges", "committedDate": "2020-10-01T14:49:57Z", "type": "commit"}, {"oid": "7849f1fae8d4d786f106ffd27352bd09fb0e0a2d", "url": "https://github.com/MegaMek/megamek/commit/7849f1fae8d4d786f106ffd27352bd09fb0e0a2d", "message": "Merge remote-tracking branch 'MM_Master/master' into LoggerChanges", "committedDate": "2020-10-01T14:53:32Z", "type": "commit"}, {"oid": "840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "url": "https://github.com/MegaMek/megamek/commit/840b32b4d2029b8e07a3d715e9812b6fbfc73f8f", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-10-01T15:09:43Z", "type": "commit"}, {"oid": "96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "url": "https://github.com/MegaMek/megamek/commit/96658720456234e4f7ab7d1f93c4aa5d1f8d8ec0", "message": "Tabs and small changes", "committedDate": "2020-10-01T15:19:30Z", "type": "commit"}, {"oid": "7a543f72514755b57d199f28f70aaa270743731d", "url": "https://github.com/MegaMek/megamek/commit/7a543f72514755b57d199f28f70aaa270743731d", "message": "Merge remote-tracking branch 'JuliezFork/LoggerChanges' into LoggerChanges", "committedDate": "2020-10-01T15:21:11Z", "type": "commit"}, {"oid": "5b2cc21c9d693710f0dd0883f0fee39f5395159b", "url": "https://github.com/MegaMek/megamek/commit/5b2cc21c9d693710f0dd0883f0fee39f5395159b", "message": "Adapt Princess Tests to logger changes", "committedDate": "2020-10-02T13:57:49Z", "type": "commit"}, {"oid": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "url": "https://github.com/MegaMek/megamek/commit/b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "message": "Override correction", "committedDate": "2020-10-03T10:46:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NzA5MQ==", "url": "https://github.com/MegaMek/megamek/pull/2278#discussion_r499157091", "bodyText": "Suggested change", "author": "Windchild292", "createdAt": "2020-10-03T15:26:11Z", "path": "megamek/src/megamek/client/ui/swing/HelpDialog.java", "diffHunk": "@@ -1,5 +1,6 @@\n /*  \r\n-* MegaMek - Copyright (C) 2020 - The MegaMek Team  \r\n+* MegaMek - Copyright (C) 2013-2020 - The MegaMek Team  \r\n+\r", "originalCommit": "b32adfccfff1bfee591cabfcbe67cf35b8e1ddf3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "46c3d46131d19de8c3699cc78c8b90152b994e6c", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/HelpDialog.java b/megamek/src/megamek/client/ui/swing/HelpDialog.java\nindex c0c8ea4e95..6f88ed74a1 100644\n--- a/megamek/src/megamek/client/ui/swing/HelpDialog.java\n+++ b/megamek/src/megamek/client/ui/swing/HelpDialog.java\n\n@@ -1,6 +1,5 @@\n /*  \n * MegaMek - Copyright (C) 2013-2020 - The MegaMek Team  \n-\n *  \n * This program is free software; you can redistribute it and/or modify it under  \n * the terms of the GNU General Public License as published by the Free Software  \n"}}, {"oid": "46c3d46131d19de8c3699cc78c8b90152b994e6c", "url": "https://github.com/MegaMek/megamek/commit/46c3d46131d19de8c3699cc78c8b90152b994e6c", "message": "Update megamek/src/megamek/client/ui/swing/HelpDialog.java", "committedDate": "2020-10-03T15:30:30Z", "type": "commit"}]}