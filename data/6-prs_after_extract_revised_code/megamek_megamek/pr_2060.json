{"pr_number": 2060, "pr_title": "fix game freeze with ejected pilots on ground maps", "pr_createdAt": "2020-07-13T19:23:00Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2060", "timeline": [{"oid": "54a017dd923123027e0f7a046cceeef7b65bf359", "url": "https://github.com/MegaMek/megamek/commit/54a017dd923123027e0f7a046cceeef7b65bf359", "message": "fix game freeze with ejected pilots on ground maps", "committedDate": "2020-07-13T19:20:00Z", "type": "commit"}, {"oid": "64912548b8da861b0a4e5e79ca36ff0846f1a110", "url": "https://github.com/MegaMek/megamek/commit/64912548b8da861b0a4e5e79ca36ff0846f1a110", "message": "Update PathEnumerator.java", "committedDate": "2020-07-13T19:23:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDQyMQ==", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880421", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n          \n          \n            \n                        } else if (mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {", "author": "Windchild292", "createdAt": "2020-07-13T19:27:20Z", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {", "originalCommit": "64912548b8da861b0a4e5e79ca36ff0846f1a110", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "chunk": "diff --git a/megamek/src/megamek/client/bot/princess/PathEnumerator.java b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\nindex b39935071a..f5799864eb 100644\n--- a/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n+++ b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n\n@@ -248,16 +248,16 @@ public class PathEnumerator {\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n             // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n+            } else if (mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n-            // this handles situations wher a unit is high up in the air, but is not an aircraft\n+            // this handles situations where a unit is high up in the air, but is not an aircraft\n             // such as an ejected pilot or a unit hot dropping from a dropship, as these cannot move\n-            } else if(!mover.isAero() && mover.isAirborne()) {\n+            } else if (!mover.isAero() && mover.isAirborne()) {\n                 paths.add(new MovePath(game, mover));\n             } else { // Non-Aero movement\n                 // TODO: Will this cause Princess to never use MASC?\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDUxOQ==", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880519", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if(!mover.isAero() && mover.isAirborne()) {\n          \n          \n            \n                        } else if (!mover.isAero() && mover.isAirborne()) {", "author": "Windchild292", "createdAt": "2020-07-13T19:27:30Z", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n+            // this handles situations wher a unit is high up in the air, but is not an aircraft\n+            // such as an ejected pilot or a unit hot dropping from a dropship, as these cannot move\n+            } else if(!mover.isAero() && mover.isAirborne()) {", "originalCommit": "64912548b8da861b0a4e5e79ca36ff0846f1a110", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "chunk": "diff --git a/megamek/src/megamek/client/bot/princess/PathEnumerator.java b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\nindex b39935071a..f5799864eb 100644\n--- a/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n+++ b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n\n@@ -248,16 +248,16 @@ public class PathEnumerator {\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n             // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n+            } else if (mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n-            // this handles situations wher a unit is high up in the air, but is not an aircraft\n+            // this handles situations where a unit is high up in the air, but is not an aircraft\n             // such as an ejected pilot or a unit hot dropping from a dropship, as these cannot move\n-            } else if(!mover.isAero() && mover.isAirborne()) {\n+            } else if (!mover.isAero() && mover.isAirborne()) {\n                 paths.add(new MovePath(game, mover));\n             } else { // Non-Aero movement\n                 // TODO: Will this cause Princess to never use MASC?\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4MDYyNg==", "url": "https://github.com/MegaMek/megamek/pull/2060#discussion_r453880626", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // this handles situations wher a unit is high up in the air, but is not an aircraft\n          \n          \n            \n                        // this handles situations where a unit is high up in the air, but is not an aircraft", "author": "Windchild292", "createdAt": "2020-07-13T19:27:42Z", "path": "megamek/src/megamek/client/bot/princess/PathEnumerator.java", "diffHunk": "@@ -247,14 +247,18 @@ public boolean shouldStay(MovePath movePath) {\n                 SpheroidPathFinder spf = SpheroidPathFinder.getInstance(game);\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n-            // this handles the case of the mover being an infantry unit of some kind\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY)) {\n+            // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n+            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n+            // this handles situations wher a unit is high up in the air, but is not an aircraft", "originalCommit": "64912548b8da861b0a4e5e79ca36ff0846f1a110", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "chunk": "diff --git a/megamek/src/megamek/client/bot/princess/PathEnumerator.java b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\nindex b39935071a..f5799864eb 100644\n--- a/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n+++ b/megamek/src/megamek/client/bot/princess/PathEnumerator.java\n\n@@ -248,16 +248,16 @@ public class PathEnumerator {\n                 spf.run(new MovePath(game, mover));\n                 paths.addAll(spf.getAllComputedPathsUncategorized());\n             // this handles the case of the mover being an infantry unit of some kind, that's not airborne.\n-            } else if(mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n+            } else if (mover.hasETypeFlag(Entity.ETYPE_INFANTRY) && !mover.isAirborne()) {\n                 InfantryPathFinder ipf = InfantryPathFinder.getInstance(getGame());\n                 ipf.run(new MovePath(game, mover));\n                 paths.addAll(ipf.getAllComputedPathsUncategorized());\n                 \n                 // generate long-range paths appropriate to the bot's current state\n                 updateLongRangePaths(mover);\n-            // this handles situations wher a unit is high up in the air, but is not an aircraft\n+            // this handles situations where a unit is high up in the air, but is not an aircraft\n             // such as an ejected pilot or a unit hot dropping from a dropship, as these cannot move\n-            } else if(!mover.isAero() && mover.isAirborne()) {\n+            } else if (!mover.isAero() && mover.isAirborne()) {\n                 paths.add(new MovePath(game, mover));\n             } else { // Non-Aero movement\n                 // TODO: Will this cause Princess to never use MASC?\n"}}, {"oid": "729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "url": "https://github.com/MegaMek/megamek/commit/729dd18fe9de1ed8f5a29312909b93c5810e1cbc", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-07-13T19:33:50Z", "type": "commit"}]}