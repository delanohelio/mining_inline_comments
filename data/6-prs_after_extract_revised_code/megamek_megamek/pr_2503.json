{"pr_number": 2503, "pr_title": "Two talon bugs", "pr_createdAt": "2020-12-12T20:21:02Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2503", "timeline": [{"oid": "ce6615e83a1a5a8ed49dc4da7aeae5c64a5b21eb", "url": "https://github.com/MegaMek/megamek/commit/ce6615e83a1a5a8ed49dc4da7aeae5c64a5b21eb", "message": "Fix slot cost for superheavies in talon validation", "committedDate": "2020-12-12T20:16:14Z", "type": "commit"}, {"oid": "e448edde53939c928381d2e8d8c47b1410463ae6", "url": "https://github.com/MegaMek/megamek/commit/e448edde53939c928381d2e8d8c47b1410463ae6", "message": "Handle tripods with talons correctly in post-load init", "committedDate": "2020-12-12T20:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc3NzgyMw==", "url": "https://github.com/MegaMek/megamek/pull/2503#discussion_r541777823", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    buff.append(\"Talons require\").append(slots).append(\" critical slots in each leg.\\n\");\n          \n          \n            \n                                    buff.append(\"Talons require \").append(slots).append(\" critical slots in each leg.\\n\");", "author": "sixlettervariables", "createdAt": "2020-12-12T20:47:58Z", "path": "megamek/src/megamek/common/verifier/TestMech.java", "diffHunk": "@@ -1001,11 +1001,11 @@ public boolean hasIllegalEquipmentCombinations(StringBuffer buff) {\n             }\n             \n             if (m.getType().hasFlag(MiscType.F_TALON)) {\n+                int slots = getMech().isSuperHeavy() ? 1 : 2;\n                 for (int loc = 0; loc < mech.locations(); loc++) {\n-                    if (mech.locationIsLeg(loc)\n-                            && countCriticalSlotsFromEquipInLocation(mech, m, loc) != 2) {\n+                    if (mech.locationIsLeg(loc) && countCriticalSlotsFromEquipInLocation(mech, m, loc) != slots) {\n                         illegal = true;\n-                        buff.append(\"Talons require two critical slots in each leg.\\n\");\n+                        buff.append(\"Talons require\").append(slots).append(\" critical slots in each leg.\\n\");", "originalCommit": "e448edde53939c928381d2e8d8c47b1410463ae6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06fbfcff4d630bd525ad6c8b40cac18512c5e207", "chunk": "diff --git a/megamek/src/megamek/common/verifier/TestMech.java b/megamek/src/megamek/common/verifier/TestMech.java\nindex 692fa93f0c..5eb5c48a94 100755\n--- a/megamek/src/megamek/common/verifier/TestMech.java\n+++ b/megamek/src/megamek/common/verifier/TestMech.java\n\n@@ -1005,7 +1005,7 @@ public class TestMech extends TestEntity {\n                 for (int loc = 0; loc < mech.locations(); loc++) {\n                     if (mech.locationIsLeg(loc) && countCriticalSlotsFromEquipInLocation(mech, m, loc) != slots) {\n                         illegal = true;\n-                        buff.append(\"Talons require\").append(slots).append(\" critical slots in each leg.\\n\");\n+                        buff.append(\"Talons require \").append(slots).append(\" critical slots in each leg.\\n\");\n                         break;\n                     }\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc3ODI1NA==", "url": "https://github.com/MegaMek/megamek/pull/2503#discussion_r541778254", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    buff.append(\"Talons require\").append(slots).append(\" critical slots in each leg.\\n\");\n          \n          \n            \n                                    buff.append(\"Talons require \").append(slots).append(\" critical slots in each leg.\\n\");", "author": "Windchild292", "createdAt": "2020-12-12T20:51:12Z", "path": "megamek/src/megamek/common/verifier/TestMech.java", "diffHunk": "@@ -1001,11 +1001,11 @@ public boolean hasIllegalEquipmentCombinations(StringBuffer buff) {\n             }\n             \n             if (m.getType().hasFlag(MiscType.F_TALON)) {\n+                int slots = getMech().isSuperHeavy() ? 1 : 2;\n                 for (int loc = 0; loc < mech.locations(); loc++) {\n-                    if (mech.locationIsLeg(loc)\n-                            && countCriticalSlotsFromEquipInLocation(mech, m, loc) != 2) {\n+                    if (mech.locationIsLeg(loc) && countCriticalSlotsFromEquipInLocation(mech, m, loc) != slots) {\n                         illegal = true;\n-                        buff.append(\"Talons require two critical slots in each leg.\\n\");\n+                        buff.append(\"Talons require\").append(slots).append(\" critical slots in each leg.\\n\");", "originalCommit": "e448edde53939c928381d2e8d8c47b1410463ae6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06fbfcff4d630bd525ad6c8b40cac18512c5e207", "chunk": "diff --git a/megamek/src/megamek/common/verifier/TestMech.java b/megamek/src/megamek/common/verifier/TestMech.java\nindex 692fa93f0c..5eb5c48a94 100755\n--- a/megamek/src/megamek/common/verifier/TestMech.java\n+++ b/megamek/src/megamek/common/verifier/TestMech.java\n\n@@ -1005,7 +1005,7 @@ public class TestMech extends TestEntity {\n                 for (int loc = 0; loc < mech.locations(); loc++) {\n                     if (mech.locationIsLeg(loc) && countCriticalSlotsFromEquipInLocation(mech, m, loc) != slots) {\n                         illegal = true;\n-                        buff.append(\"Talons require\").append(slots).append(\" critical slots in each leg.\\n\");\n+                        buff.append(\"Talons require \").append(slots).append(\" critical slots in each leg.\\n\");\n                         break;\n                     }\n                 }\n"}}, {"oid": "06fbfcff4d630bd525ad6c8b40cac18512c5e207", "url": "https://github.com/MegaMek/megamek/commit/06fbfcff4d630bd525ad6c8b40cac18512c5e207", "message": "Update megamek/src/megamek/common/verifier/TestMech.java\n\nCo-authored-by: Christopher Watford <christopher.watford@gmail.com>", "committedDate": "2020-12-12T20:55:37Z", "type": "commit"}]}