{"pr_number": 2194, "pr_title": "Bot friendly fire reduction", "pr_createdAt": "2020-09-01T01:54:43Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2194", "timeline": [{"oid": "253b35620aa4f69bca2523e2ad46982a46f794f3", "url": "https://github.com/MegaMek/megamek/commit/253b35620aa4f69bca2523e2ad46982a46f794f3", "message": "reduce bot friendly fire for long range pathfinding", "committedDate": "2020-09-01T01:39:46Z", "type": "commit"}, {"oid": "4eada040b344c25dfdd7c07fac51ed87da0daaac", "url": "https://github.com/MegaMek/megamek/commit/4eada040b344c25dfdd7c07fac51ed87da0daaac", "message": "caching mechanism", "committedDate": "2020-09-01T01:49:21Z", "type": "commit"}, {"oid": "aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "url": "https://github.com/MegaMek/megamek/commit/aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "message": "cleanup", "committedDate": "2020-09-01T01:52:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2MzExMw==", "url": "https://github.com/MegaMek/megamek/pull/2194#discussion_r487263113", "bodyText": "Access modifiers?", "author": "Windchild292", "createdAt": "2020-09-11T20:01:37Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -42,6 +44,7 @@\n \n     Comparator<BulldozerMovePath> movePathComparator;\n     int maximumCost = Integer.MAX_VALUE;\n+    Map<Coords, Boolean> friendlyFireCheckResults = new HashMap<>();", "originalCommit": "aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76c5723b5aaad600f3a35662823fe15669155fc7", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex 9536d3b1e7..cd3f90ff38 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -42,9 +42,9 @@ import megamek.common.Terrains;\n  */\n public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n \n-    Comparator<BulldozerMovePath> movePathComparator;\n-    int maximumCost = Integer.MAX_VALUE;\n-    Map<Coords, Boolean> friendlyFireCheckResults = new HashMap<>();\n+    private Comparator<BulldozerMovePath> movePathComparator;\n+    private int maximumCost = Integer.MAX_VALUE;\n+    private Map<Coords, Boolean> friendlyFireCheckResults = new HashMap<>();\n     \n     /**\n      * Uses an A* search to find the \"optimal\" path to the destination coordinates.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2MzIyNg==", "url": "https://github.com/MegaMek/megamek/pull/2194#discussion_r487263226", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!child.isJumping() && friendlyFireCheck(child.getEntity(), child.getGame(), child.getFinalCoords(), false)) {\n          \n          \n            \n                    if (!child.isJumping() && friendlyFireCheck(child.getEntity(), child.getGame(), child.getFinalCoords(), false)) {", "author": "Windchild292", "createdAt": "2020-09-11T20:01:53Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -230,6 +233,12 @@ protected void processChild(BulldozerMovePath child, List<BulldozerMovePath> chi\n             return;\n         }\n         \n+        // let's avoid pathing through buildings containing our immobile units - \n+        // they're not going to get out of the way and we can probably do better than killing our own guys\n+        if(!child.isJumping() && friendlyFireCheck(child.getEntity(), child.getGame(), child.getFinalCoords(), false)) {", "originalCommit": "aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76c5723b5aaad600f3a35662823fe15669155fc7", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex 9536d3b1e7..cd3f90ff38 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -235,11 +235,11 @@ public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n         \n         // let's avoid pathing through buildings containing our immobile units - \n         // they're not going to get out of the way and we can probably do better than killing our own guys\n-        if(!child.isJumping() && friendlyFireCheck(child.getEntity(), child.getGame(), child.getFinalCoords(), false)) {\n+        if (!child.isJumping() && friendlyFireCheck(child.getEntity(), child.getGame(), child.getFinalCoords(), false)) {\n             return;\n         }\n         \n-        if((!shortestPathsToCoords.containsKey(child.getFinalCoords()) ||\n+        if ((!shortestPathsToCoords.containsKey(child.getFinalCoords()) ||\n                 // shorter path to these coordinates\n                 (movePathComparator.compare(shortestPathsToCoords.get(child.getFinalCoords()), child) > 0)) &&\n                 // legal or needs leveling or jumping and not off-board\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2MzM3OQ==", "url": "https://github.com/MegaMek/megamek/pull/2194#discussion_r487263379", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(Entity entity : game.getEntitiesVector(position, true)) {\n          \n          \n            \n                        if(!entity.isEnemyOf(shooter) && (includeMobileUnits || (entity.getWalkMP(true, false) == 0))) {\n          \n          \n            \n                    for (Entity entity : game.getEntitiesVector(position, true)) {\n          \n          \n            \n                        if (!entity.isEnemyOf(shooter) && (includeMobileUnits || (entity.getWalkMP(true, false) == 0))) {", "author": "Windchild292", "createdAt": "2020-09-11T20:02:17Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -242,6 +251,37 @@ protected void processChild(BulldozerMovePath child, List<BulldozerMovePath> chi\n         }\n     }\n     \n+    /**\n+     * Utility function that returns true if an attack on the building in the given coordinates\n+     * will result in damage to friendly units. Computation is cached as it is somewhat expensive to perform for each possible path node.\n+     */\n+    public boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n+        if(friendlyFireCheckResults.containsKey(position)) {\n+            return friendlyFireCheckResults.get(position);\n+        }\n+        \n+        Building building = game.getBoard().getBuildingAt(position);\n+        \n+        // no building, no problem\n+        if (building == null) {\n+            friendlyFireCheckResults.put(position, false);\n+            return false;\n+        }\n+        \n+        // check if there are any entities in the building that meet the following criteria:\n+        // - is friendly\n+        // - if we care only about mobile units, has no MP \n+        for(Entity entity : game.getEntitiesVector(position, true)) {\n+            if(!entity.isEnemyOf(shooter) && (includeMobileUnits || (entity.getWalkMP(true, false) == 0))) {", "originalCommit": "aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76c5723b5aaad600f3a35662823fe15669155fc7", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex 9536d3b1e7..cd3f90ff38 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -255,8 +255,8 @@ public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n      * Utility function that returns true if an attack on the building in the given coordinates\n      * will result in damage to friendly units. Computation is cached as it is somewhat expensive to perform for each possible path node.\n      */\n-    public boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n-        if(friendlyFireCheckResults.containsKey(position)) {\n+    private boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n+        if (friendlyFireCheckResults.containsKey(position)) {\n             return friendlyFireCheckResults.get(position);\n         }\n         \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2NDE3Mg==", "url": "https://github.com/MegaMek/megamek/pull/2194#discussion_r487264172", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(friendlyFireCheckResults.containsKey(position)) {\n          \n          \n            \n                    if (friendlyFireCheckResults.containsKey(position)) {", "author": "Windchild292", "createdAt": "2020-09-11T20:04:12Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -242,6 +251,37 @@ protected void processChild(BulldozerMovePath child, List<BulldozerMovePath> chi\n         }\n     }\n     \n+    /**\n+     * Utility function that returns true if an attack on the building in the given coordinates\n+     * will result in damage to friendly units. Computation is cached as it is somewhat expensive to perform for each possible path node.\n+     */\n+    public boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n+        if(friendlyFireCheckResults.containsKey(position)) {", "originalCommit": "aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76c5723b5aaad600f3a35662823fe15669155fc7", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex 9536d3b1e7..cd3f90ff38 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -255,8 +255,8 @@ public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n      * Utility function that returns true if an attack on the building in the given coordinates\n      * will result in damage to friendly units. Computation is cached as it is somewhat expensive to perform for each possible path node.\n      */\n-    public boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n-        if(friendlyFireCheckResults.containsKey(position)) {\n+    private boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n+        if (friendlyFireCheckResults.containsKey(position)) {\n             return friendlyFireCheckResults.get(position);\n         }\n         \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2NDMyOQ==", "url": "https://github.com/MegaMek/megamek/pull/2194#discussion_r487264329", "bodyText": "Why public instead of private?", "author": "Windchild292", "createdAt": "2020-09-11T20:04:34Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -242,6 +251,37 @@ protected void processChild(BulldozerMovePath child, List<BulldozerMovePath> chi\n         }\n     }\n     \n+    /**\n+     * Utility function that returns true if an attack on the building in the given coordinates\n+     * will result in damage to friendly units. Computation is cached as it is somewhat expensive to perform for each possible path node.\n+     */\n+    public boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {", "originalCommit": "aeacc356511d7fb5fef1d7c8c0133db40958e5bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76c5723b5aaad600f3a35662823fe15669155fc7", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex 9536d3b1e7..cd3f90ff38 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -255,8 +255,8 @@ public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n      * Utility function that returns true if an attack on the building in the given coordinates\n      * will result in damage to friendly units. Computation is cached as it is somewhat expensive to perform for each possible path node.\n      */\n-    public boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n-        if(friendlyFireCheckResults.containsKey(position)) {\n+    private boolean friendlyFireCheck(Entity shooter, IGame game, Coords position, boolean includeMobileUnits) {\n+        if (friendlyFireCheckResults.containsKey(position)) {\n             return friendlyFireCheckResults.get(position);\n         }\n         \n"}}, {"oid": "76c5723b5aaad600f3a35662823fe15669155fc7", "url": "https://github.com/MegaMek/megamek/commit/76c5723b5aaad600f3a35662823fe15669155fc7", "message": "code review suggestions; minor Server cleanup", "committedDate": "2020-09-12T00:52:54Z", "type": "commit"}]}