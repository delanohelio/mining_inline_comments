{"pr_number": 1997, "pr_title": "long range bridge + deep water handling", "pr_createdAt": "2020-06-09T03:43:42Z", "pr_url": "https://github.com/MegaMek/megamek/pull/1997", "timeline": [{"oid": "93a147911a568dde752444940977a16c37ee09bf", "url": "https://github.com/MegaMek/megamek/commit/93a147911a568dde752444940977a16c37ee09bf", "message": "long range bridge + deep water handling", "committedDate": "2020-06-09T03:37:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEyMTAxOA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r437121018", "bodyText": "it occurs to me that we should forego this discount if jumping onto a bridge.", "author": "NickAragua", "createdAt": "2020-06-09T03:44:09Z", "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -93,15 +96,24 @@ public MovePath addStep(final MoveStepType type) {\n             // we want to make note of when we're going into water (if we are capable of it)\n             // it may look cheaper, but it slows you down to max walking speed or worse, \n             // and we should flag it as costing extra, that extra being the difference between walking and running speed\n-            IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n-            if((hex != null) && hex.containsTerrain(Terrains.WATER) && (hex.depth() > 0)) {\n+            if(hexWaterDepth > 0) {\n                 MovementType mType = MovementType.getMovementType(mp.getEntity());\n                 if(mType == MovementType.Walker || mType == MovementType.WheeledAmphi || mType == MovementType.TrackedAmphi) {\n                     additionalCosts.put(mp.getFinalCoords(), 1);\n                 }\n             }\n         }\n \n+        if (mp.isJumping()) {", "originalCommit": "93a147911a568dde752444940977a16c37ee09bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3e3d9bab2b1f8f437ad56d684f2104103a1a97cd", "chunk": "diff --git a/megamek/src/megamek/common/BulldozerMovePath.java b/megamek/src/megamek/common/BulldozerMovePath.java\nindex f524a8017e..d8764a001f 100644\n--- a/megamek/src/megamek/common/BulldozerMovePath.java\n+++ b/megamek/src/megamek/common/BulldozerMovePath.java\n\n@@ -105,12 +105,17 @@ public class BulldozerMovePath extends MovePath {\n         }\n \n         if (mp.isJumping()) {\n-            // special case - mech jumping into depth 1 water might not be all that bad, jump mp cost wise\n-            if(hexWaterDepth == 1) {\n-                additionalCosts.put(mp.getFinalCoords(), mp.getCachedEntityState().getJumpMP() - mp.getCachedEntityState().getTorsoJumpJets());\n-            // jumping into water that submerges you entirely pretty much ruins jump MP for at least a turn while you clamber out\n-            } else {\n-                additionalCosts.put(mp.getFinalCoords(), mp.getCachedEntityState().getJumpMP());\n+            // if we are jumping, but not on top of a bridge (because jumping always goes to the top of a bridge)\n+            // and are jumping into terrain that would impede jump jet functionality (aka water)\n+            // then we are impeding future jump movement and should add an extra cost to this step\n+            if((hex != null) && !hex.containsTerrain(Terrains.BRIDGE)) {\n+                // special case - mech jumping into depth 1 water might not be all that bad, jump mp cost wise\n+                if(hexWaterDepth == 1) {\n+                    additionalCosts.put(mp.getFinalCoords(), mp.getCachedEntityState().getJumpMP() - mp.getCachedEntityState().getTorsoJumpJets());\n+                // jumping into water that submerges you entirely pretty much ruins jump MP for at least a turn while you clamber out\n+                } else {\n+                    additionalCosts.put(mp.getFinalCoords(), mp.getCachedEntityState().getJumpMP());\n+                }\n             }\n         }\n \n"}}, {"oid": "3e3d9bab2b1f8f437ad56d684f2104103a1a97cd", "url": "https://github.com/MegaMek/megamek/commit/3e3d9bab2b1f8f437ad56d684f2104103a1a97cd", "message": "fix a few more issues", "committedDate": "2020-06-10T00:55:22Z", "type": "commit"}, {"oid": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "url": "https://github.com/MegaMek/megamek/commit/cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "message": "fix many bridge issues; refactor", "committedDate": "2020-06-14T02:23:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODUyNQ==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439858525", "bodyText": "Should one of these be F_LIMITED_AMPHIBIOUS?", "author": "neoancient", "createdAt": "2020-06-14T19:03:11Z", "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -90,4 +93,25 @@ public boolean hasWorkingMisc(BigInteger flag) {\n         \n         return hasWorkingMisc.get(flag);\n     }\n+    \n+    public int getTorsoJumpJets() {\n+        if(torsoJumpJets == null) {\n+            if(backingEntity instanceof Mech) {\n+                torsoJumpJets = ((Mech) backingEntity).torsoJumpJets();\n+            } else {\n+                torsoJumpJets = 0;\n+            }\n+        }\n+        \n+        return torsoJumpJets;\n+    }\n+    \n+    /**\n+     * Convenience property to determine if the backing entity is amphibious.\n+     */\n+    public boolean isAmphibious() {\n+        return hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS) || \n+                hasWorkingMisc(MiscType.F_AMPHIBIOUS) ||\n+                hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS);", "originalCommit": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2ODQ4Mg==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439868482", "bodyText": "Yes.", "author": "NickAragua", "createdAt": "2020-06-14T21:18:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e075805c0bd3c012cb0f4a8e0bc13024fa9009a0", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/CachedEntityState.java b/megamek/src/megamek/common/pathfinder/CachedEntityState.java\nindex cdc7201822..20eaeac84a 100644\n--- a/megamek/src/megamek/common/pathfinder/CachedEntityState.java\n+++ b/megamek/src/megamek/common/pathfinder/CachedEntityState.java\n\n@@ -112,6 +112,6 @@ public class CachedEntityState {\n     public boolean isAmphibious() {\n         return hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS) || \n                 hasWorkingMisc(MiscType.F_AMPHIBIOUS) ||\n-                hasWorkingMisc(MiscType.F_FULLY_AMPHIBIOUS);\n+                hasWorkingMisc(MiscType.F_LIMITED_AMPHIBIOUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1ODgyMw==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439858823", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public int compare(BulldozerMovePath first, BulldozerMovePath second) {\n          \n          \n            \n                    @Override\n          \n          \n            \n                    public int compare(BulldozerMovePath first, BulldozerMovePath second) {", "author": "neoancient", "createdAt": "2020-06-14T19:07:05Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -235,14 +261,14 @@ public AStarComparator(Coords destination) {\n          * Favors paths that move closer to the destination edge first.\n          * in case of tie, favors paths that cost less MP\n          */\n-        public int compare(BulldozerMovePath first, BulldozerMovePath second) {            \n+        public int compare(BulldozerMovePath first, BulldozerMovePath second) {", "originalCommit": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e2ab8a76a62b3394d8820440558518698935aa98", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex a0cbd449ee..2530efb0ce 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -261,6 +261,7 @@ public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n          * Favors paths that move closer to the destination edge first.\n          * in case of tie, favors paths that cost less MP\n          */\n+        @Override\n         public int compare(BulldozerMovePath first, BulldozerMovePath second) {\n             IBoard board = first.getGame().getBoard();\n             boolean backwards = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTA0Ng==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439859046", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return\n          \n          \n            \n                 * @param ignore\n          \n          \n            \n                 * @return\n          \n      \n    \n    \n  \n\nAlso needs descriptive text for the parameters", "author": "neoancient", "createdAt": "2020-06-14T19:10:21Z", "path": "megamek/src/megamek/common/pathfinder/ShortestPathFinder.java", "diffHunk": "@@ -370,13 +370,9 @@ public static int getFacingDiff(final MovePath mp, Coords dest,\n      * @param board\n      * @return", "originalCommit": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e2ab8a76a62b3394d8820440558518698935aa98", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/ShortestPathFinder.java b/megamek/src/megamek/common/pathfinder/ShortestPathFinder.java\nindex 17a886c330..43ead465d0 100644\n--- a/megamek/src/megamek/common/pathfinder/ShortestPathFinder.java\n+++ b/megamek/src/megamek/common/pathfinder/ShortestPathFinder.java\n\n@@ -368,6 +368,7 @@ public class ShortestPathFinder extends MovePathFinder<MovePath> {\n      * @param mp\n      * @param dest\n      * @param board\n+     * @param ignore\n      * @return\n      */\n     public static int getLevelDiff(final MovePath mp, Coords dest, IBoard board, boolean ignore) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTM2Ng==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r439859366", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public MovePath calculateDestructionAwarePath(Coords dest) {\n          \n          \n            \n                @SuppressWarnings(\"unused\")\n          \n          \n            \n                public MovePath calculateDestructionAwarePath(Coords dest) {", "author": "neoancient", "createdAt": "2020-06-14T19:14:57Z", "path": "megamek/src/megamek/common/MovePath.java", "diffHunk": "@@ -1841,16 +1841,16 @@ public boolean nextForwardStepOffBoard() {\n     public MovePath calculateDestructionAwarePath(Coords dest) {", "originalCommit": "cefaf2a5dabdaec8dd6c48fb021bc52482ae67bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e2ab8a76a62b3394d8820440558518698935aa98", "chunk": "diff --git a/megamek/src/megamek/common/MovePath.java b/megamek/src/megamek/common/MovePath.java\nindex 795987d558..383b27004b 100644\n--- a/megamek/src/megamek/common/MovePath.java\n+++ b/megamek/src/megamek/common/MovePath.java\n\n@@ -1838,6 +1838,7 @@ public class MovePath implements Cloneable, Serializable {\n     /**\n      * Debugging method that calculates a destruction-aware move path to the destination coordinates\n      */\n+    @SuppressWarnings(\"unused\")\n     public MovePath calculateDestructionAwarePath(Coords dest) {\n         // code that's useful to test the destruction-aware pathfinder\n         DestructionAwareDestinationPathfinder dpf = new DestructionAwareDestinationPathfinder();\n"}}, {"oid": "e2ab8a76a62b3394d8820440558518698935aa98", "url": "https://github.com/MegaMek/megamek/commit/e2ab8a76a62b3394d8820440558518698935aa98", "message": "Apply suggestions from code review\n\nCo-authored-by: neoancient <neoancient@megamek.org>", "committedDate": "2020-06-14T21:20:38Z", "type": "commit"}, {"oid": "e075805c0bd3c012cb0f4a8e0bc13024fa9009a0", "url": "https://github.com/MegaMek/megamek/commit/e075805c0bd3c012cb0f4a8e0bc13024fa9009a0", "message": "Update CachedEntityState.java", "committedDate": "2020-06-14T21:21:21Z", "type": "commit"}, {"oid": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "url": "https://github.com/MegaMek/megamek/commit/58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "message": "Update ShortestPathFinder.java", "committedDate": "2020-06-14T21:23:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjAyOA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246028", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for(Coords coords : cluster.contents.keySet()) {\n          \n          \n            \n                        for (Coords coords : cluster.contents.keySet()) {", "author": "Windchild292", "createdAt": "2020-06-15T15:08:55Z", "path": "megamek/src/megamek/client/ui/swing/boardview/BoardView1.java", "diffHunk": "@@ -1480,13 +1480,13 @@ private void renderDonut(Graphics2D g, Coords coords, int radius) {\n     @SuppressWarnings(\"unused\")\n     private void renderClusters(Graphics2D g) {\n         BoardClusterTracker bct = new BoardClusterTracker();\n-        Map<Coords, BoardCluster> clusterMap = bct.generateClusters(selectedEntity, false);\n+        Map<Coords, BoardCluster> clusterMap = bct.generateClusters(selectedEntity, false, true);\n         \n         for(BoardCluster cluster : clusterMap.values().stream().distinct().collect(Collectors.toList())) {\n-            for(Coords coords : cluster.contents) {\n+            for(Coords coords : cluster.contents.keySet()) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\nindex cdd852b8f7..14eae780d1 100644\n--- a/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n+++ b/megamek/src/megamek/client/ui/swing/boardview/BoardView1.java\n\n@@ -1483,7 +1483,7 @@ public class BoardView1 extends JPanel implements IBoardView, Scrollable,\n         Map<Coords, BoardCluster> clusterMap = bct.generateClusters(selectedEntity, false, true);\n         \n         for(BoardCluster cluster : clusterMap.values().stream().distinct().collect(Collectors.toList())) {\n-            for(Coords coords : cluster.contents.keySet()) {\n+            for (Coords coords : cluster.contents.keySet()) {\n                 Point p = getCentreHexLocation(coords.getX(), coords.getY(), true);\n                 p.translate(HEX_W  / 2, HEX_H  / 2);\n                 drawHexBorder(g, p, new Color(0, 0, (20 * cluster.id) % 255), 0, 6);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjI2MQ==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246261", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int hexWaterDepth = (hex != null) && hex.containsTerrain(Terrains.WATER) ?\n          \n          \n            \n                    int hexWaterDepth = ((hex != null) && hex.containsTerrain(Terrains.WATER)) ?", "author": "Windchild292", "createdAt": "2020-06-15T15:09:19Z", "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -78,7 +78,10 @@ public int getLevelingCost() {\n     @Override\n     public MovePath addStep(final MoveStepType type) {\n         BulldozerMovePath mp = (BulldozerMovePath) super.addStep(type);\n-\n+        IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n+        int hexWaterDepth = (hex != null) && hex.containsTerrain(Terrains.WATER) ?", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjU5NA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246594", "bodyText": "This is a suggestion that I find makes it easier to read the line, but your mileage may vary.", "author": "Windchild292", "createdAt": "2020-06-15T15:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/BulldozerMovePath.java b/megamek/src/megamek/common/BulldozerMovePath.java\nindex 03048743b5..7ee0c7444b 100644\n--- a/megamek/src/megamek/common/BulldozerMovePath.java\n+++ b/megamek/src/megamek/common/BulldozerMovePath.java\n\n@@ -79,7 +79,7 @@ public class BulldozerMovePath extends MovePath {\n     public MovePath addStep(final MoveStepType type) {\n         BulldozerMovePath mp = (BulldozerMovePath) super.addStep(type);\n         IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n-        int hexWaterDepth = (hex != null) && hex.containsTerrain(Terrains.WATER) ?\n+        int hexWaterDepth = ((hex != null) && hex.containsTerrain(Terrains.WATER)) ?\n                 hex.depth() : Integer.MIN_VALUE;\n         \n         if (!mp.isMoveLegal() && !mp.isJumping()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NjcwOQ==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440246709", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(hexWaterDepth > 0) {\n          \n          \n            \n                        if (hexWaterDepth > 0) {", "author": "Windchild292", "createdAt": "2020-06-15T15:09:59Z", "path": "megamek/src/megamek/common/BulldozerMovePath.java", "diffHunk": "@@ -93,15 +96,29 @@ public MovePath addStep(final MoveStepType type) {\n             // we want to make note of when we're going into water (if we are capable of it)\n             // it may look cheaper, but it slows you down to max walking speed or worse, \n             // and we should flag it as costing extra, that extra being the difference between walking and running speed\n-            IHex hex = mp.getGame().getBoard().getHex(mp.getFinalCoords());\n-            if((hex != null) && hex.containsTerrain(Terrains.WATER) && (hex.depth() > 0)) {\n+            if(hexWaterDepth > 0) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzA2MA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440247060", "bodyText": "Suggested change", "author": "Windchild292", "createdAt": "2020-06-15T15:10:30Z", "path": "megamek/src/megamek/common/Mech.java", "diffHunk": "@@ -211,7 +211,7 @@\n     public static final int HAS_UNKNOWN = 0;\n \n     public static final int HAS_TRUE = 1;\n-\n+    ", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/Mech.java b/megamek/src/megamek/common/Mech.java\nindex 646f58e2b1..f3584ae6a4 100644\n--- a/megamek/src/megamek/common/Mech.java\n+++ b/megamek/src/megamek/common/Mech.java\n\n@@ -211,7 +211,6 @@ public abstract class Mech extends Entity {\n     public static final int HAS_UNKNOWN = 0;\n \n     public static final int HAS_TRUE = 1;\n-    \n     // rear armor\n     private int[] rearArmor;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzQ1Nw==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440247457", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(contents.containsKey(coords)) {\n          \n          \n            \n                                if (contents.containsKey(coords)) {", "author": "Windchild292", "createdAt": "2020-06-15T15:11:04Z", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -363,7 +444,7 @@ public BoardCluster(int id) {\n             for(int x = xStart; x < xEnd; x++) {\n                 for(int y = yStart; y < yEnd; y++) {\n                     Coords coords = new Coords(x, y);\n-                    if(contents.contains(coords)) {\n+                    if(contents.containsKey(coords)) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\nindex b0607c0d07..9ef67373c8 100644\n--- a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n+++ b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n\n@@ -444,7 +444,7 @@ public class BoardClusterTracker {\n             for(int x = xStart; x < xEnd; x++) {\n                 for(int y = yStart; y < yEnd; y++) {\n                     Coords coords = new Coords(x, y);\n-                    if(contents.containsKey(coords)) {\n+                    if (contents.containsKey(coords)) {\n                         retVal.add(coords);\n                     }\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0ODYyMw==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440248623", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(terrainReduction) {\n          \n          \n            \n                    if (terrainReduction) {", "author": "Windchild292", "createdAt": "2020-06-15T15:12:35Z", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -94,28 +103,58 @@ public static MovementType getMovementType(Entity entity) {\n     \n     private Map<MovementType, Map<Coords, BoardCluster>> movableAreas = new HashMap<>();\n     private Map<MovementType, Map<Coords, BoardCluster>> movableAreasWithTerrainReduction = new HashMap<>();\n-\n+    private Map<MovementType, Map<Coords, BoardCluster>> movableAreasBridges = new HashMap<>();\n+    private Map<MovementType, Map<Coords, BoardCluster>> movableAreasBridgesWithTerrainReduction = new HashMap<>();\n+    \n     /**\n-     * Returns the terrain-reduced or non-terrain-reduced \n-     * board cluster in which the given entity currently resides\n+     * Returns the size of the biggest terrain-reduced or non-terrain-reduced\n+     * board cluster in which the given coordinates currently reside.\n      */\n-    public BoardCluster getCurrentBoardCluster(Entity entity, boolean terrainReduction) {\n-        return getCurrentBoardCluster(entity, terrainReduction);\n+    public int getBoardClusterSize(Entity entity, Coords actualCoords, boolean terrainReduction) {\n+        MovementType movementType = MovementType.getMovementType(entity);\n+        \n+        updateMovableAreas(entity);\n+        \n+        if(terrainReduction) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\nindex b0607c0d07..9ef67373c8 100644\n--- a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n+++ b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n\n@@ -115,7 +115,7 @@ public class BoardClusterTracker {\n         \n         updateMovableAreas(entity);\n         \n-        if(terrainReduction) {\n+        if (terrainReduction) {\n             BoardCluster noBridgeCluster = movableAreasWithTerrainReduction.get(movementType).get(actualCoords);\n             int noBridgeClusterSize = noBridgeCluster == null ? 0 : noBridgeCluster.contents.size();\n             \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTA3OA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249078", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(retVal.size() == 0) {\n          \n          \n            \n                        if(terrainReduction) {\n          \n          \n            \n                    if (retVal.size() == 0) {\n          \n          \n            \n                        if (terrainReduction) {", "author": "Windchild292", "createdAt": "2020-06-15T15:13:14Z", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -139,11 +178,26 @@ public BoardCluster getCurrentBoardCluster(Entity entity, Coords actualCoords, b\n             entityCluster = movableAreas.get(movementType).get(entity.getPosition());\n         }\n         \n+        Set<Coords> retVal = Collections.emptySet();\n+        \n         if(entityCluster != null) {\n-            return entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+            retVal = entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+        }\n+        \n+        // try with bridges\n+        if(retVal.size() == 0) {\n+            if(terrainReduction) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\nindex b0607c0d07..9ef67373c8 100644\n--- a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n+++ b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n\n@@ -185,14 +185,14 @@ public class BoardClusterTracker {\n         }\n         \n         // try with bridges\n-        if(retVal.size() == 0) {\n-            if(terrainReduction) {\n+        if (retVal.size() == 0) {\n+            if (terrainReduction) {\n                 entityCluster = movableAreasBridgesWithTerrainReduction.get(movementType).get(entity.getPosition());\n             } else {\n                 entityCluster = movableAreasBridges.get(movementType).get(entity.getPosition());\n             }\n             \n-            if(entityCluster != null) {\n+            if (entityCluster != null) {\n                 retVal = entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTIyMw==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249223", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(entityCluster != null) {\n          \n          \n            \n                        if (entityCluster != null) {", "author": "Windchild292", "createdAt": "2020-06-15T15:13:23Z", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -139,11 +178,26 @@ public BoardCluster getCurrentBoardCluster(Entity entity, Coords actualCoords, b\n             entityCluster = movableAreas.get(movementType).get(entity.getPosition());\n         }\n         \n+        Set<Coords> retVal = Collections.emptySet();\n+        \n         if(entityCluster != null) {\n-            return entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+            retVal = entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n+        }\n+        \n+        // try with bridges\n+        if(retVal.size() == 0) {\n+            if(terrainReduction) {\n+                entityCluster = movableAreasBridgesWithTerrainReduction.get(movementType).get(entity.getPosition());\n+            } else {\n+                entityCluster = movableAreasBridges.get(movementType).get(entity.getPosition());\n+            }\n+            \n+            if(entityCluster != null) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\nindex b0607c0d07..9ef67373c8 100644\n--- a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n+++ b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n\n@@ -185,14 +185,14 @@ public class BoardClusterTracker {\n         }\n         \n         // try with bridges\n-        if(retVal.size() == 0) {\n-            if(terrainReduction) {\n+        if (retVal.size() == 0) {\n+            if (terrainReduction) {\n                 entityCluster = movableAreasBridgesWithTerrainReduction.get(movementType).get(entity.getPosition());\n             } else {\n                 entityCluster = movableAreasBridges.get(movementType).get(entity.getPosition());\n             }\n             \n-            if(entityCluster != null) {\n+            if (entityCluster != null) {\n                 retVal = entityCluster.getIntersectingHexes(actualEdge, entity.getGame().getBoard());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTQ1Mg==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249452", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    canUseBridge && entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c)) {\n          \n          \n            \n                                    canUseBridge && (entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c))) {", "author": "Windchild292", "createdAt": "2020-06-15T15:13:43Z", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -208,6 +274,15 @@ public void updateMovableAreas(Entity entity) {\n                     continue;\n                 }\n                 \n+                int myElevation = 0; \n+                        \n+                if (useBridgeTop && board.getHex(c).containsTerrain(Terrains.BRIDGE) &&\n+                        canUseBridge && entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c)) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\nindex b0607c0d07..9ef67373c8 100644\n--- a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n+++ b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n\n@@ -277,7 +277,7 @@ public class BoardClusterTracker {\n                 int myElevation = 0; \n                         \n                 if (useBridgeTop && board.getHex(c).containsTerrain(Terrains.BRIDGE) &&\n-                        canUseBridge && entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c)) {\n+                        canUseBridge && (entity.getWeight() <= board.getBuildingAt(c).getCurrentCF(c))) {\n                     myElevation = board.getHex(c).ceiling();\n                 } else {\n                     myElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(c), entity, isHovercraft, isAmphibious);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0OTcwMg==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440249702", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            canUseBridge && entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor)) {\n          \n          \n            \n                                            canUseBridge && (entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor))) {", "author": "Windchild292", "createdAt": "2020-06-15T15:14:06Z", "path": "megamek/src/megamek/common/pathfinder/BoardClusterTracker.java", "diffHunk": "@@ -216,8 +291,14 @@ public void updateMovableAreas(Entity entity) {\n                     Coords neighbor = c.translated(direction);\n                     \n                     if(clusters.containsKey(neighbor)) {\n-                        int neighborElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(neighbor), entity, isHovercraft, isAmphibious);\n-                        int myElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(c), entity, isHovercraft, isAmphibious);\n+                        int neighborElevation = 0;\n+                        \n+                        if (useBridgeTop && board.getHex(neighbor).containsTerrain(Terrains.BRIDGE) &&\n+                                canUseBridge && entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor)) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\nindex b0607c0d07..9ef67373c8 100644\n--- a/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n+++ b/megamek/src/megamek/common/pathfinder/BoardClusterTracker.java\n\n@@ -294,7 +294,7 @@ public class BoardClusterTracker {\n                         int neighborElevation = 0;\n                         \n                         if (useBridgeTop && board.getHex(neighbor).containsTerrain(Terrains.BRIDGE) &&\n-                                canUseBridge && entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor)) {\n+                                canUseBridge && (entity.getWeight() <= board.getBuildingAt(neighbor).getCurrentCF(neighbor))) {\n                             neighborElevation = board.getHex(neighbor).ceiling();\n                         } else {\n                             neighborElevation = BoardEdgePathFinder.calculateUnitElevationInHex(board.getHex(neighbor), entity, isHovercraft, isAmphibious);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDA1OA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250058", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {\n          \n          \n            \n                    if (useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {", "author": "Windchild292", "createdAt": "2020-06-15T15:14:36Z", "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "diffHunk": "@@ -616,14 +627,30 @@ private MoveLegalityIndicator isLegalMove(MovePath movePath, IHex destHex, Build\n      * @return The effective elevation\n      */\n     public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious) {\n+        return calculateUnitElevationInHex(hex, entity, isHovercraft, isAmphibious, false);\n+    }\n+    \n+    /**\n+     * Helper function that calculates the effective elevation for a unit standing there.\n+     * @param hex The hex to check\n+     * @param entity The entity to check\n+     * @param bridgeTop Whether we're going on top of a bridge or under it\n+     * @return The effective elevation\n+     */\n+    public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious, boolean useBridgeTop) {\n         // we calculate the height of a hex as \"on the ground\" by default\n         // Special exceptions:\n-        // We are a mech, which can hopping on top of some buildings\n+        // We are a mech, which can hop on top of some buildings\n         // We are naval unit going under a bridge, in which case the height is the water level (naval units go on the surface, mostly)\n         // We are non-naval going into water but not onto a bridge, in which case the height is the floor (mechs sink to the bottom)\n-\n+        // if we are explicitly going to the top of a bridge, use that.\n+        \n+        if(useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDE0OA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250148", "bodyText": "Suggested change", "author": "Windchild292", "createdAt": "2020-06-15T15:14:44Z", "path": "megamek/src/megamek/common/pathfinder/BoardEdgePathFinder.java", "diffHunk": "@@ -616,14 +627,30 @@ private MoveLegalityIndicator isLegalMove(MovePath movePath, IHex destHex, Build\n      * @return The effective elevation\n      */\n     public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious) {\n+        return calculateUnitElevationInHex(hex, entity, isHovercraft, isAmphibious, false);\n+    }\n+    \n+    /**\n+     * Helper function that calculates the effective elevation for a unit standing there.\n+     * @param hex The hex to check\n+     * @param entity The entity to check\n+     * @param bridgeTop Whether we're going on top of a bridge or under it\n+     * @return The effective elevation\n+     */\n+    public static int calculateUnitElevationInHex(IHex hex, Entity entity, boolean isHovercraft, boolean isAmphibious, boolean useBridgeTop) {\n         // we calculate the height of a hex as \"on the ground\" by default\n         // Special exceptions:\n-        // We are a mech, which can hopping on top of some buildings\n+        // We are a mech, which can hop on top of some buildings\n         // We are naval unit going under a bridge, in which case the height is the water level (naval units go on the surface, mostly)\n         // We are non-naval going into water but not onto a bridge, in which case the height is the floor (mechs sink to the bottom)\n-\n+        // if we are explicitly going to the top of a bridge, use that.\n+        \n+        if(useBridgeTop && !entity.isSurfaceNaval() && hex.containsTerrain(Terrains.BRIDGE_CF)) {\n+            return hex.ceiling();\n+        }\n+        \n         int hexElevation = hex.getLevel();\n-\n+        ", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDUwMA==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250500", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(torsoJumpJets == null) {\n          \n          \n            \n                        if(backingEntity instanceof Mech) {\n          \n          \n            \n                    if (torsoJumpJets == null) {\n          \n          \n            \n                        if (backingEntity instanceof Mech) {", "author": "Windchild292", "createdAt": "2020-06-15T15:15:11Z", "path": "megamek/src/megamek/common/pathfinder/CachedEntityState.java", "diffHunk": "@@ -90,4 +93,25 @@ public boolean hasWorkingMisc(BigInteger flag) {\n         \n         return hasWorkingMisc.get(flag);\n     }\n+    \n+    public int getTorsoJumpJets() {\n+        if(torsoJumpJets == null) {\n+            if(backingEntity instanceof Mech) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MDkzMw==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440250933", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(irreversibleJumpDown && \n          \n          \n            \n                    if (irreversibleJumpDown &&", "author": "Windchild292", "createdAt": "2020-06-15T15:15:37Z", "path": "megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java", "diffHunk": "@@ -202,6 +209,25 @@ protected void processChild(BulldozerMovePath child, List<BulldozerMovePath> chi\n                 !mli.outOfBounds &&\n                 (!mli.goingUpTooHigh || child.needsLeveling());\n         \n+        // this is true if we're jumping down further down than our max jump MP\n+        // or jumping down lower than our max elevation change\n+        boolean irreversibleJumpDown = \n+                (child.isJumping() && (Math.abs(mli.elevationChange) > child.getCachedEntityState().getJumpMP())) ||\n+                (child.getEntity().getMaxElevationDown() == Entity.UNLIMITED_JUMP_DOWN) && (Math.abs(mli.elevationChange) > child.getEntity().getMaxElevationChange());\n+        \n+        boolean destinationUseBridge = child.getGame().getBoard().getHex(destinationCoords).getTerrain(Terrains.BRIDGE) != null;\n+        int destHexElevation = calculateUnitElevationInHex(child.getGame().getBoard().getHex(destinationCoords), \n+                child.getEntity(), child.getEntity().getMovementMode() == EntityMovementMode.HOVER, child.getCachedEntityState().isAmphibious(),\n+                destinationUseBridge);\n+        \n+        // if we jumped into a hole and this results into us moving into a different cluster than the destination,\n+        // that's not great and we should not consider the possibility for long range path finding.\n+        if(irreversibleJumpDown && ", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\nindex 2530efb0ce..a213f5ae0d 100644\n--- a/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n+++ b/megamek/src/megamek/common/pathfinder/DestructionAwareDestinationPathfinder.java\n\n@@ -222,7 +222,7 @@ public class DestructionAwareDestinationPathfinder extends BoardEdgePathFinder {\n         \n         // if we jumped into a hole and this results into us moving into a different cluster than the destination,\n         // that's not great and we should not consider the possibility for long range path finding.\n-        if(irreversibleJumpDown && \n+        if (irreversibleJumpDown && \n                 !clusterTracker.coordinatesShareCluster(child.getEntity(), child.getFinalCoords(), destinationCoords,\n                         mli.destHexElevation, destHexElevation)) {\n             return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTIzMw==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440251233", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n          \n          \n            \n                    if (clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {", "author": "Windchild292", "createdAt": "2020-06-15T15:16:01Z", "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -62,6 +62,16 @@\n             retVal.addAll(clippedPaths);\n         }\n         \n+        // if there is a bad guy in the last step, clip to one step short and see if we can't get around.\n+        if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/PathDecorator.java b/megamek/src/megamek/common/pathfinder/PathDecorator.java\nindex 7aedc75c99..0aee5f8ad2 100644\n--- a/megamek/src/megamek/common/pathfinder/PathDecorator.java\n+++ b/megamek/src/megamek/common/pathfinder/PathDecorator.java\n\n@@ -63,10 +63,10 @@ public class PathDecorator {\n         }\n         \n         // if there is a bad guy in the last step, clip to one step short and see if we can't get around.\n-        if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n+        if (clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n             clippedSource.removeLastStep();\n             \n-            for(int desiredMP : desiredMPs) {\n+            for (int desiredMP : desiredMPs) {\n                 List<MovePath> clippedPaths = clipToDesiredMP(clippedSource, desiredMP);\n                 retVal.addAll(clippedPaths);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTMzNQ==", "url": "https://github.com/MegaMek/megamek/pull/1997#discussion_r440251335", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for(int desiredMP : desiredMPs) {\n          \n          \n            \n                        for (int desiredMP : desiredMPs) {", "author": "Windchild292", "createdAt": "2020-06-15T15:16:08Z", "path": "megamek/src/megamek/common/pathfinder/PathDecorator.java", "diffHunk": "@@ -62,6 +62,16 @@\n             retVal.addAll(clippedPaths);\n         }\n         \n+        // if there is a bad guy in the last step, clip to one step short and see if we can't get around.\n+        if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n+            clippedSource.removeLastStep();\n+            \n+            for(int desiredMP : desiredMPs) {", "originalCommit": "58fd24db4e41611fc7c3696e9d76bb3b32bfd5f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "chunk": "diff --git a/megamek/src/megamek/common/pathfinder/PathDecorator.java b/megamek/src/megamek/common/pathfinder/PathDecorator.java\nindex 7aedc75c99..0aee5f8ad2 100644\n--- a/megamek/src/megamek/common/pathfinder/PathDecorator.java\n+++ b/megamek/src/megamek/common/pathfinder/PathDecorator.java\n\n@@ -63,10 +63,10 @@ public class PathDecorator {\n         }\n         \n         // if there is a bad guy in the last step, clip to one step short and see if we can't get around.\n-        if(clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n+        if (clippedSource.getGame().getFirstEnemyEntity(clippedSource.getLastStep().getPosition(), clippedSource.getEntity()) != null) {\n             clippedSource.removeLastStep();\n             \n-            for(int desiredMP : desiredMPs) {\n+            for (int desiredMP : desiredMPs) {\n                 List<MovePath> clippedPaths = clipToDesiredMP(clippedSource, desiredMP);\n                 retVal.addAll(clippedPaths);\n             }\n"}}, {"oid": "debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "url": "https://github.com/MegaMek/megamek/commit/debca0c7f18a6d0bacaf75b274a5e82eec67e62b", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-06-15T21:08:24Z", "type": "commit"}]}