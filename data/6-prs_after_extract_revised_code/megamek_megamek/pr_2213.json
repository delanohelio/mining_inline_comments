{"pr_number": 2213, "pr_title": "L1 Foliage", "pr_createdAt": "2020-09-12T14:36:23Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2213", "timeline": [{"oid": "57cc250a1e764c6ec7336931d2626371a4f7389d", "url": "https://github.com/MegaMek/megamek/commit/57cc250a1e764c6ec7336931d2626371a4f7389d", "message": "Implement L1 Foliage, correct jungle TFs", "committedDate": "2020-09-12T06:28:26Z", "type": "commit"}, {"oid": "2747548c0b704fb6718ce19b34360d2bc926f535", "url": "https://github.com/MegaMek/megamek/commit/2747548c0b704fb6718ce19b34360d2bc926f535", "message": "Add BoardEditor buttons", "committedDate": "2020-09-12T06:28:45Z", "type": "commit"}, {"oid": "5e033ca26e09bec4923652180dd21c021b5b4726", "url": "https://github.com/MegaMek/megamek/commit/5e033ca26e09bec4923652180dd21c021b5b4726", "message": "Terrain compute Corrections", "committedDate": "2020-09-12T14:17:28Z", "type": "commit"}, {"oid": "0bbe0deb63e1d777a49b217ca7f40806e9b737b6", "url": "https://github.com/MegaMek/megamek/commit/0bbe0deb63e1d777a49b217ca7f40806e9b737b6", "message": "Error correction", "committedDate": "2020-09-12T14:22:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNjA0Mw==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r487426043", "bodyText": "I'm confused by this.", "author": "NickAragua", "createdAt": "2020-09-12T16:33:06Z", "path": "megamek/src/megamek/common/Hex.java", "diffHunk": "@@ -631,82 +631,102 @@ public boolean isClearHex() {\n         return true;\n     }\n \n-    @Override\n+    @Override \n     public boolean isValid(@Nullable StringBuffer errBuff) {\n-        boolean rv = true;\n-\n+        boolean valid = true;\n+        \n+        // When no StringBuffer is passed, use a dummy\n+        // to avoid numerous null checks\n+        if (errBuff == null) {\n+            errBuff = new StringBuffer();\n+        }\n+        \n         // Check individual terrains for validity\n         for (ITerrain terrain : terrains.values()) {\n             if (terrain == null) {\n+                valid = false;\n+                errBuff.append(\"Hex contains a null terrain!\\n\");\n                 continue;\n             }\n-            StringBuffer currBuff = new StringBuffer();\n-            boolean isValid = terrain.isValid(currBuff);\n-            if (!isValid && (errBuff == null)) {\n-                return false;\n-            } else if (!isValid) {\n-                rv = false;\n+            StringBuffer terrainErr = new StringBuffer();\n+            if (!terrain.isValid(terrainErr)) {\n+                valid = false;\n                 if (errBuff.length() > 0) {\n                     errBuff.append(\"\\n\");\n                 }\n-                errBuff.append(currBuff);\n+                errBuff.append(terrainErr);\n             }\n         }\n-        // Some terrains must be grouped, check for those.\n \n         // Rapids\n         if ((containsTerrain(Terrains.RAPIDS))) {\n             if (!containsTerrain(Terrains.WATER)) {\n-                rv = false;\n-                if (errBuff != null) {\n-                    errBuff.append(\"Rapids must occurr within water!\\n\");\n-                }\n+                valid = false;\n+                errBuff.append(\"Rapids must occur within water!\\n\");\n             }\n             if (this.depth() <1) {\n-                rv = false;\n-                if (errBuff != null) {\n-                    errBuff.append(\"Rapids must occurr in depth 1 or greater!\\n\");\n-                }\n+                valid = false;\n+                errBuff.append(\"Rapids must occurr in depth 1 or greater!\\n\");\n             }\n         }\n \n+        // Foliage (Woods and Jungles)\n+        if (containsTerrain(Terrains.WOODS) && containsTerrain(Terrains.JUNGLE)) {\n+            valid = false;\n+            errBuff.append(\"Woods and Jungle cannot appear in the same hex!\\n\");\n+        }\n+        if ((containsTerrain(Terrains.WOODS) || containsTerrain(Terrains.JUNGLE))\n+                && containsTerrain(Terrains.FOLIAGE_ELEV)) {\n+            int wl = terrainLevel(Terrains.WOODS);\n+            int jl = terrainLevel(Terrains.JUNGLE);\n+            int el = terrainLevel(Terrains.FOLIAGE_ELEV);\n+            \n+            boolean isLightOrHeavy = wl == 1 || jl == 1 || wl == 2 || jl == 2;\n+            boolean isUltra = wl == 3 || jl == 3;\n+            \n+            if (! ((el == 1) || (isLightOrHeavy && el == 2) || (isUltra && el == 3))) {\n+                valid = false;\n+                errBuff.append(\"Foliage elevation is wrong, must be 1 or 2 for Light/Heavy and 1 or 3 for Ultra Woods/Jungle!\\n\");", "originalCommit": "0bbe0deb63e1d777a49b217ca7f40806e9b737b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzNTM2OA==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r487435368", "bodyText": "The elevation can always be 1 (regardless of light, heavy or ultra), it can also be 2 but only in light or heavy woods/jungle and in ultra woods/jungle 3 is an allowed value. Not quite sure how to answer ...", "author": "SJuliez", "createdAt": "2020-09-12T18:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNjA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ2NDc3OQ==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r487464779", "bodyText": "Ok, I just didn't realize that ultra terrain is either 1 or 3. Kind of weird, but it is what it is.", "author": "NickAragua", "createdAt": "2020-09-13T00:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNjA0Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "cd8cbad4119f8f04b313631c40070b76bb35436c", "url": "https://github.com/MegaMek/megamek/commit/cd8cbad4119f8f04b313631c40070b76bb35436c", "message": "Map corrections", "committedDate": "2020-09-13T06:41:10Z", "type": "commit"}, {"oid": "9903108f95833e1b8c2082dbe39f95606b48ee9b", "url": "https://github.com/MegaMek/megamek/commit/9903108f95833e1b8c2082dbe39f95606b48ee9b", "message": "Merge remote-tracking branch 'MM_Master/master' into L1Foliage3", "committedDate": "2020-09-13T06:42:00Z", "type": "commit"}, {"oid": "084c657b5f4aa71e6b7d4299f3e62f648820c4d4", "url": "https://github.com/MegaMek/megamek/commit/084c657b5f4aa71e6b7d4299f3e62f648820c4d4", "message": "Further Map changes", "committedDate": "2020-09-13T06:51:12Z", "type": "commit"}, {"oid": "4d340a3f9fa0dbe325cfc5dc71350a2c8db5b0ea", "url": "https://github.com/MegaMek/megamek/commit/4d340a3f9fa0dbe325cfc5dc71350a2c8db5b0ea", "message": "Adapt to \"Foliage\", Map generator with foliage, board corrections", "committedDate": "2020-09-16T05:40:22Z", "type": "commit"}, {"oid": "84df80bb776ecef39e8179ee36df946d1d4fef86", "url": "https://github.com/MegaMek/megamek/commit/84df80bb776ecef39e8179ee36df946d1d4fef86", "message": "RndMapGen refactor and foliage, LOS diagram correction", "committedDate": "2020-09-18T21:04:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2NTA3MQ==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r491265071", "bodyText": "This file looks... so much better. Code-wise.", "author": "NickAragua", "createdAt": "2020-09-19T03:55:15Z", "path": "megamek/src/megamek/client/ui/swing/RandomMapPanelAdvanced.java", "diffHunk": "@@ -1299,325 +868,121 @@ private JScrollPane setupElevationPanel() {\n     }\n \n     private JPanel setupCratersPanel() {\n-        GridBagLayout layout = new GridBagLayout();\n-        GridBagConstraints constraints = setupConstraints();\n-        JPanel panel = new JPanel(layout);\n-\n-        // Row 1, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy = 0;\n-        constraints.gridwidth = 1;\n+        JPanel panel = new FeaturePanel(new SpringLayout());\n+        \n         final JLabel craterChanceLabel = new JLabel(Messages.getString(\"RandomMapDialog.labProbCrater\"));\n-        panel.add(craterChanceLabel, constraints);\n-\n-        // Row 1, Columns 2-5.\n-        constraints.gridx++;\n-        constraints.gridwidth = 4;\n-        constraints.weightx = 1;\n-        craterChanceField.setRequired(true);\n-        craterChanceField.setSelectAllTextOnGotFocus(true);\n-        craterChanceField.addVerifier(new VerifyInRange(0, 100, true));\n+        panel.add(craterChanceLabel);\n         craterChanceField.setToolTipText(Messages.getString(\"RandomMapDialog.craterChanceField.toolTip\"));\n-        craterChanceField.setName(craterChanceLabel.getText());\n-        panel.add(craterChanceField, constraints);\n-\n-        // Row 2, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridwidth = 1;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n+        panel.add(craterChanceField);\n+        panel.add(new JLabel());\n+        panel.add(new JLabel());\n+\n         final JLabel craterNumberLabel = new JLabel(Messages.getString(\"RandomMapDialog.labMaxCraters\"));\n-        panel.add(craterNumberLabel, constraints);\n-\n-        // Row 2, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        craterAmountMinField.setRequired(true);\n-        craterAmountMinField.setSelectAllTextOnGotFocus(true);\n-        craterAmountMinField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(craterNumberLabel);\n         craterAmountMinField.setToolTipText(Messages.getString(\"RandomMapDialog.craterAmountMinField.toolTip\"));\n-        craterAmountMinField.setName(craterNumberLabel.getText());\n-        panel.add(craterAmountMinField, constraints);\n+        panel.add(craterAmountMinField);\n \n-        // Row 2, Column 3.\n-        constraints.gridx++;\n-        constraints.weightx = 0;\n         final JLabel craterNumberToField = new JLabel(Messages.getString(\"to\"));\n-        panel.add(craterNumberToField, constraints);\n-\n-        // Row 2, Column 4.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        craterAmountMaxField.setRequired(true);\n-        craterAmountMaxField.setSelectAllTextOnGotFocus(true);\n-        craterAmountMaxField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(craterNumberToField);\n         craterAmountMaxField.setToolTipText(Messages.getString(\"RandomMapDialog.craterAmountMaxField.toolTip\"));\n-        craterAmountMaxField.setName(craterNumberLabel.getText());\n-        panel.add(craterAmountMaxField, constraints);\n-\n-        // Row 3, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridwidth = 1;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n+        panel.add(craterAmountMaxField);\n+\n         final JLabel craterSizeLabel = new JLabel(Messages.getString(\"RandomMapDialog.labRadius\"));\n-        panel.add(craterSizeLabel, constraints);\n-\n-        // Row 3, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        craterSizeMinField.setRequired(true);\n-        craterSizeMinField.setSelectAllTextOnGotFocus(true);\n-        craterSizeMinField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(craterSizeLabel);\n         craterSizeMinField.setToolTipText(Messages.getString(\"RandomMapDialog.craterSizeMinField.toolTip\"));\n-        craterSizeMinField.setName(craterSizeLabel.getText());\n-        panel.add(craterSizeMinField, constraints);\n+        panel.add(craterSizeMinField);\n \n-        // Row 3, Column 3.\n-        constraints.gridx++;\n-        constraints.weightx = 0;\n         final JLabel craterSizeToField = new JLabel(Messages.getString(\"to\"));\n-        panel.add(craterSizeToField, constraints);\n-\n-        // Row 3, Column 4.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        constraints.weighty = 1;\n-        craterSizeMaxField.setRequired(true);\n-        craterSizeMaxField.setSelectAllTextOnGotFocus(true);\n-        craterSizeMaxField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(craterSizeToField);\n         craterSizeMaxField.setToolTipText(Messages.getString(\"RandomMapDialog.craterSizeMaxField.toolTip\"));\n-        craterSizeMaxField.setName(craterSizeLabel.getText());\n-        panel.add(craterSizeMaxField, constraints);\n+        panel.add(craterSizeMaxField);\n \n         panel.setBorder(new TitledBorder(new LineBorder(Color.black, 1),\n                                          Messages.getString(\"RandomMapDialog.borderCrater\")));\n-\n+        RandomMapPanelBasic.makeCompactGrid(panel, 3, 4, 6, 6, 6, 6);\n         return panel;\n     }\n \n     private JPanel setupMountainsPanel() {\n-        GridBagLayout layout = new GridBagLayout();\n-        GridBagConstraints constraints = setupConstraints();\n-        JPanel panel = new JPanel(layout);\n-\n-        // Row 1, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy = 0;\n-        constraints.gridwidth = 1;\n+        JPanel panel = new FeaturePanel(new SpringLayout());\n+\n         final JLabel peaksLabel = new JLabel(Messages.getString(\"RandomMapDialog.labMountainPeaks\"));\n-        panel.add(peaksLabel, constraints);\n-\n-        // Row 1, Column 2-5.\n-        constraints.gridx++;\n-        constraints.gridwidth = 4;\n-        constraints.weightx = 1;\n-        elevationPeaksField.setRequired(true);\n-        elevationPeaksField.setSelectAllTextOnGotFocus(true);\n-        elevationPeaksField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(peaksLabel);\n         elevationPeaksField.setToolTipText(Messages.getString(\"RandomMapDialog.elevationPeaksField.toolTip\"));\n-        elevationPeaksField.setName(peaksLabel.getText());\n-        panel.add(elevationPeaksField, constraints);\n-\n-        // Row 2, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.gridwidth = 1;\n-        constraints.weightx = 0;\n-        final JLabel mountainStyleLabel = new JLabel(Messages.getString(\"RandomMapDialog.labMountainStyle\"));\n-        panel.add(mountainStyleLabel, constraints);\n+        panel.add(elevationPeaksField);\n+        panel.add(new JLabel());\n+        panel.add(new JLabel());\n \n-        // Row 2, Columns 2-5.\n-        constraints.gridx++;\n-        constraints.gridwidth = 4;\n-        constraints.weightx = 1;\n+        final JLabel mountainStyleLabel = new JLabel(Messages.getString(\"RandomMapDialog.labMountainStyle\"));\n+        panel.add(mountainStyleLabel);\n         mountainStyleCombo.setToolTipText(Messages.getString(\"RandomMapDialog.mountainStyleCombo.toolTip\"));\n-        panel.add(mountainStyleCombo, constraints);\n+        panel.add(mountainStyleCombo);\n+        panel.add(new JLabel());\n+        panel.add(new JLabel());\n \n-        // Row 3, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.gridwidth = 1;\n-        constraints.weightx = 0;\n         final JLabel mountainHeightLabel = new JLabel(Messages.getString(\"RandomMapDialog.labMountainHeight\"));\n-        panel.add(mountainHeightLabel, constraints);\n-\n-        // Row 3, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        mountainHeightMinField.setRequired(true);\n-        mountainHeightMinField.setSelectAllTextOnGotFocus(true);\n-        mountainHeightMinField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(mountainHeightLabel);\n         mountainHeightMinField.setToolTipText(Messages.getString(\"RandomMapDialog.mountainHeightMinField.toolTip\"));\n-        mountainHeightMinField.setName(mountainHeightLabel.getText());\n-        panel.add(mountainHeightMinField, constraints);\n-\n-        // Row 3, Column 3.\n-        constraints.gridx++;\n-        constraints.weightx = 0;\n+        panel.add(mountainHeightMinField);\n         final JLabel mountainHeightToLabel = new JLabel(Messages.getString(\"to\"));\n-        panel.add(mountainHeightToLabel, constraints);\n-\n-        // Row 3, Column 4.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        mountainHeightMaxField.setRequired(true);\n-        mountainHeightMaxField.setSelectAllTextOnGotFocus(true);\n-        mountainHeightMaxField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(mountainHeightToLabel);\n         mountainHeightMaxField.setToolTipText(Messages.getString(\"RandomMapDialog.mountainHeightMaxField.toolTip\"));\n-        mountainHeightMaxField.setName(mountainHeightLabel.getText());\n-        panel.add(mountainHeightMaxField, constraints);\n-\n-        // Row 4, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.gridwidth = 1;\n-        constraints.weightx = 0;\n+        panel.add(mountainHeightMaxField);\n+\n         final JLabel mountainWidthLabel = new JLabel(Messages.getString(\"RandomMapDialog.labMountainWidth\"));\n-        panel.add(mountainWidthLabel, constraints);\n-\n-        // Row 4, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        mountainWidthMinField.setRequired(true);\n-        mountainWidthMinField.setSelectAllTextOnGotFocus(true);\n-        mountainWidthMinField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(mountainWidthLabel);\n         mountainWidthMinField.setToolTipText(Messages.getString(\"RandomMapDialog.mountainWidthMinField.toolTip\"));\n-        mountainWidthMinField.setName(mountainWidthLabel.getText());\n-        panel.add(mountainWidthMinField, constraints);\n-\n-        // Row 4, Column 3.\n-        constraints.gridx++;\n-        constraints.weightx = 0;\n+        panel.add(mountainWidthMinField);\n         final JLabel mountainWidthToLabel = new JLabel(Messages.getString(\"to\"));\n-        panel.add(mountainWidthToLabel, constraints);\n-\n-        // Row 4, Column 4.\n-        constraints.gridx++;\n-        constraints.weightx = 0.5;\n-        constraints.weighty = 1;\n-        mountainWidthMaxField.setRequired(true);\n-        mountainWidthMaxField.setSelectAllTextOnGotFocus(true);\n-        mountainWidthMaxField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(mountainWidthToLabel);\n         mountainWidthMaxField.setToolTipText(Messages.getString(\"RandomMapDialog.mountainWidthMaxField.toolTip\"));\n-        mountainWidthMaxField.setName(mountainWidthLabel.getText());\n-        panel.add(mountainWidthMaxField, constraints);\n+        panel.add(mountainWidthMaxField);\n \n         panel.setBorder(new TitledBorder(new LineBorder(Color.black, 1),\n                                          Messages.getString(\"RandomMapDialog.borderMountain\")));\n \n+        RandomMapPanelBasic.makeCompactGrid(panel, 4, 4, 6, 6, 6, 6);\n         return panel;\n     }\n \n     private JPanel setupElevationGeneralPanel() {\n-        GridBagLayout layout = new GridBagLayout();\n-        GridBagConstraints constraints = setupConstraints();\n-        JPanel panel = new JPanel(layout);\n-\n-        // Row 1, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy = 0;\n-        constraints.gridwidth = 1;\n+        JPanel panel = new FeaturePanel(new SpringLayout());\n+\n         final JLabel algorithmLabel = new JLabel(Messages.getString(\"RandomMapDialog.labAlgorithmToUse\"));\n-        panel.add(algorithmLabel, constraints);\n-\n-        // Row 1, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 1;\n-        elevationAlgorithmField.setRequired(true);\n-        elevationAlgorithmField.setSelectAllTextOnGotFocus(true);\n-        elevationAlgorithmField.addVerifier(new VerifyInRange(0, BoardUtilities.getAmountElevationGenerators() - 1, true));\n+        panel.add(algorithmLabel);\n         elevationAlgorithmField.setToolTipText(Messages.getString(\"RandomMapDialog.elevationAlgorithmField.toolTip\"));\n-        elevationAlgorithmField.setName(algorithmLabel.getText());\n-        panel.add(elevationAlgorithmField, constraints);\n+        panel.add(elevationAlgorithmField);\n \n-        // Row 2, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n         final JLabel hillinessLabel = new JLabel(Messages.getString(\"RandomMapDialog.labHilliness\"));\n-        panel.add(hillinessLabel, constraints);\n-\n-        // Row 2, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 1;\n-        hillinessField.setRequired(true);\n-        hillinessField.setSelectAllTextOnGotFocus(true);\n-        hillinessField.addVerifier(new VerifyInRange(0, 99, true));\n+        panel.add(hillinessLabel);\n         hillinessField.setToolTipText(Messages.getString(\"RandomMapDialog.hillinessField.toolTip\"));\n-        hillinessField.setName(hillinessLabel.getText());\n-        panel.add(hillinessField, constraints);\n+        panel.add(hillinessField);\n \n-        // Row 3, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n         final JLabel elevationRangeLabel = new JLabel(Messages.getString(\"RandomMapDialog.labRange\"));\n-        panel.add(elevationRangeLabel, constraints);\n-\n-        // Row 3, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 1;\n-        elevationRangeField.setRequired(true);\n-        elevationRangeField.setSelectAllTextOnGotFocus(true);\n-        elevationRangeField.addVerifier(new VerifyIsPositiveInteger());\n+        panel.add(elevationRangeLabel);\n         elevationRangeField.setToolTipText(Messages.getString(\"RandomMapDialog.elevationRangeField.toolTip\"));\n-        elevationRangeField.setName(elevationRangeLabel.getText());\n-        panel.add(elevationRangeField, constraints);\n+        panel.add(elevationRangeField);\n \n-        // Row 4, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n         final JLabel elevationCliffsLabel = new JLabel(Messages.getString(\"RandomMapDialog.labCliffs\"));\n-        panel.add(elevationCliffsLabel, constraints);\n-\n-        // Row 4, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 1;\n-        elevationCliffsField.setRequired(true);\n-        elevationCliffsField.setSelectAllTextOnGotFocus(true);\n-        elevationCliffsField.addVerifier(new VerifyInRange(0, 100, true));\n+        panel.add(elevationCliffsLabel);\n         elevationCliffsField.setToolTipText(Messages.getString(\"RandomMapDialog.elevationCliffsField.toolTip\"));\n-        elevationCliffsField.setName(elevationCliffsLabel.getText());\n-        panel.add(elevationCliffsField, constraints);\n+        panel.add(elevationCliffsField);\n \n-        // Row 5, Column 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n         final JLabel elevationInversionLabel = new JLabel(Messages.getString(\"RandomMapDialog.labProbInvert\"));\n-        panel.add(elevationInversionLabel, constraints);\n-\n-        // Row 5, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 1;\n-        elevationInversionField.setRequired(true);\n-        elevationInversionField.setSelectAllTextOnGotFocus(true);\n-        elevationInversionField.addVerifier(new VerifyInRange(0, 99, true));\n+        panel.add(elevationInversionLabel);\n         elevationInversionField.setToolTipText(Messages.getString(\"RandomMapDialog.elevationInversionField.toolTip\"));\n-        elevationInversionField.setName(elevationInversionLabel.getText());\n-        panel.add(elevationInversionField, constraints);\n+        panel.add(elevationInversionField);\n \n-        // Row 6, Columns 1.\n-        constraints.gridx = 0;\n-        constraints.gridy++;\n-        constraints.weightx = 0;\n         final JLabel invertNegativeLabel = new JLabel(Messages.getString(\"RandomMapDialog.labInvertNegative\"));\n-        panel.add(invertNegativeLabel, constraints);\n-\n-        // Row 6, Column 2.\n-        constraints.gridx++;\n-        constraints.weightx = 1;\n-        constraints.weighty = 1;\n+        panel.add(invertNegativeLabel);\n         invertNegativeCheck.setText(\"\");\n         invertNegativeCheck.setToolTipText(Messages.getString(\"RandomMapDialog.invertNegativeCheck.toolTip\"));\n-        panel.add(invertNegativeCheck, constraints);\n+        panel.add(invertNegativeCheck);\n \n-        // Set up border.\n         panel.setBorder(new TitledBorder(new LineBorder(Color.black, 1),\n                                          Messages.getString(\"RandomMapDialog.borderGeneral\")));\n \n+        RandomMapPanelBasic.makeCompactGrid(panel, 6, 2, 6, 6, 6, 6);", "originalCommit": "84df80bb776ecef39e8179ee36df946d1d4fef86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2NjY4MQ==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r491266681", "bodyText": "Did you mean to have this be equivalent to \"attackerAdjc\"? Also, what does Adjc stand for?", "author": "NickAragua", "createdAt": "2020-09-19T04:16:25Z", "path": "megamek/src/megamek/common/LosEffects.java", "diffHunk": "@@ -1099,35 +1099,44 @@ private static LosEffects losForCoords(IGame game, AttackInfo ai,\n             }\n         }\n         \n-        // TODO: Identify when LOS travels *above* a building's hex.\n-        // Alternatively, force all building hexes to be same height.\n-\n         // check for block by terrain\n+        \n+        \n+        // All unit heights report as 1 less in MM than what they really are \n+        // (1 for mechs, 0 for tanks...)\n+        // A level 4 hill will not block a mech on a level 3 hill\n+        // (height of the mech in here = 3+\"1\" = \"4\"), as \n+        // hill elevation is not > unit elevation (normal LOS rules)\n+        // With diagramming LOS it will block LOS as soon as the sightline\n+        // drops by 0.1 to 3.9, even though that means it would be at 4.9 in\n+        // \"real\" height values, so still well above the level 4 hill\n+        // Therefore we need to add 1 from the diagramming LOS elevation\n+        // to correct the calculation\n+        // This is still hacky as Entity should simply report the real heights \n+        // and the comparison in here should follow TW/TO \"higher or equal\" rules.\n+        \n+        // The interpolated elevation for TacOps LOS diagramming\n+        double losElevation = (ai.targetAbsHeight * ai.attackPos.distance(coords) \n+                + ai.attackAbsHeight * ai.targetPos.distance(coords))\n+                    / (ai.targetPos.distance(coords) + ai.attackPos.distance(coords))\n+                    + 1;\n+        \n+        // The higher of the attacker's height and defender's height\n+        int maxUnitHeight = Math.max(ai.attackAbsHeight, ai.targetAbsHeight);\n+        boolean attackerAdjc = ai.attackPos.distance(coords) == 1;\n+        boolean targetAdjc = ai.attackPos.distance(coords) == 1;", "originalCommit": "84df80bb776ecef39e8179ee36df946d1d4fef86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2Njc5Nw==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r491266797", "bodyText": "Adjacent would be my bet", "author": "Windchild292", "createdAt": "2020-09-19T04:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2NjY4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI3NzkxMg==", "url": "https://github.com/MegaMek/megamek/pull/2213#discussion_r491277912", "bodyText": "Good you caught that! ai.targetPos indeed - wonder if I would have found that during testing.\nAnd yes it's adjacent. Wanted to abbreviate it. Started with \"adj\", found it reads like adjustment, therefore the -c", "author": "SJuliez", "createdAt": "2020-09-19T05:48:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2NjY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "dee1a9653bc25c74160717c4342bc55fe5d4f421", "chunk": "diff --git a/megamek/src/megamek/common/LosEffects.java b/megamek/src/megamek/common/LosEffects.java\nindex 4fc8e1fec8..3324fdf6fd 100644\n--- a/megamek/src/megamek/common/LosEffects.java\n+++ b/megamek/src/megamek/common/LosEffects.java\n\n@@ -1116,21 +1116,21 @@ public class LosEffects {\n         // and the comparison in here should follow TW/TO \"higher or equal\" rules.\n         \n         // The interpolated elevation for TacOps LOS diagramming\n-        double losElevation = (ai.targetAbsHeight * ai.attackPos.distance(coords) \n-                + ai.attackAbsHeight * ai.targetPos.distance(coords))\n-                    / (ai.targetPos.distance(coords) + ai.attackPos.distance(coords))\n-                    + 1;\n+        double weightedHeight = ai.targetAbsHeight * ai.attackPos.distance(coords) \n+                + ai.attackAbsHeight * ai.targetPos.distance(coords);\n+        double totalDistance = ai.targetPos.distance(coords) + ai.attackPos.distance(coords);\n+        double losElevation = 1 + weightedHeight / totalDistance;\n         \n         // The higher of the attacker's height and defender's height\n         int maxUnitHeight = Math.max(ai.attackAbsHeight, ai.targetAbsHeight);\n         boolean attackerAdjc = ai.attackPos.distance(coords) == 1;\n-        boolean targetAdjc = ai.attackPos.distance(coords) == 1;\n+        boolean targetAdjc = ai.targetPos.distance(coords) == 1;\n         boolean affectsLos;\n \n         // Intervening building or hill\n         int totalEl = hexEl + bldgEl;\n         if (diagramLoS) {\n-            affectsLos = totalEl > losElevation;\n+            affectsLos = totalEl >= losElevation;\n         } else {\n             affectsLos = (totalEl > maxUnitHeight)\n                     || ((totalEl > ai.attackAbsHeight) && attackerAdjc)\n"}}, {"oid": "dee1a9653bc25c74160717c4342bc55fe5d4f421", "url": "https://github.com/MegaMek/megamek/commit/dee1a9653bc25c74160717c4342bc55fe5d4f421", "message": "LOS corrections", "committedDate": "2020-09-19T15:58:10Z", "type": "commit"}]}