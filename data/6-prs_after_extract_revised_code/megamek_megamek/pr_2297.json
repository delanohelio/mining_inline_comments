{"pr_number": 2297, "pr_title": "Icon Rework Phase 2: MegaMek Static Directory Manager", "pr_createdAt": "2020-10-04T16:51:36Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2297", "timeline": [{"oid": "3615cd5876f2691ef91d64643cd083849db5f11c", "url": "https://github.com/MegaMek/megamek/commit/3615cd5876f2691ef91d64643cd083849db5f11c", "message": "Standardizing into a static directory manager", "committedDate": "2020-10-04T16:40:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NDUwNw==", "url": "https://github.com/MegaMek/megamek/pull/2297#discussion_r499274507", "bodyText": "Should these initializers should be synchronized? (If so, not initialize itself, to avoid deadlocks).", "author": "sixlettervariables", "createdAt": "2020-10-04T18:25:26Z", "path": "megamek/src/megamek/client/ui/swing/tileset/MMStaticDirectoryManager.java", "diffHunk": "@@ -0,0 +1,537 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MegaMek.\n+ *\n+ * MegaMek is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MegaMek is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package megamek.client.ui.swing.tileset;\n+\n+import megamek.MegaMek;\n+import megamek.client.ui.swing.util.ImageFileFactory;\n+import megamek.client.ui.swing.util.PlayerColors;\n+import megamek.client.ui.swing.util.ScaledImageFileFactory;\n+import megamek.common.Configuration;\n+import megamek.common.Crew;\n+import megamek.common.Entity;\n+import megamek.common.IPlayer;\n+import megamek.common.annotations.Nullable;\n+import megamek.common.util.ImageUtil;\n+import megamek.common.util.fileUtils.DirectoryItem;\n+import megamek.common.util.fileUtils.DirectoryItems;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.image.BufferedImage;\n+\n+public class MMStaticDirectoryManager {\n+    //region Variable Declarations\n+    // Directories\n+    private static DirectoryItems portraitDirectory;\n+    private static DirectoryItems camouflageDirectory;\n+    private static MechTileset mechTileset;\n+\n+    // Re-parsing Prevention Variables: The are True at startup and when the specified directory\n+    // should be re-parsed, and are used to avoid re-parsing the directory repeatedly when there's an error.\n+    private static boolean parsePortraitDirectory = true;\n+    private static boolean parseCamouflageDirectory = true;\n+    private static boolean parseMechTileset = true;\n+    //endregion Variable Declarations\n+\n+    //region Constructors\n+    protected MMStaticDirectoryManager() {\n+        // This class is not to be instantiated\n+    }\n+    //endregion Constructors\n+\n+    //region Initialization\n+    /**\n+     * This initialized all of the directories under this manager\n+     */\n+    public static void initialize() {\n+        initializePortraits();\n+        initializeCamouflage();\n+        initializeMechTileset();\n+    }\n+\n+    /**\n+     * Parses MM's portraits folder when first called or when it was refreshed.\n+     *\n+     * @see #refreshPortraitDirectory()\n+     */\n+    private static void initializePortraits() {", "originalCommit": "3615cd5876f2691ef91d64643cd083849db5f11c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Nzg4OQ==", "url": "https://github.com/MegaMek/megamek/pull/2297#discussion_r499277889", "bodyText": "There haven't been any issues with it as of yet, but that may become an issue in future. Maybe @SJuliez can comment on why it wasn't done that way originally?", "author": "Windchild292", "createdAt": "2020-10-04T19:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NDUwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4NjgxNQ==", "url": "https://github.com/MegaMek/megamek/pull/2297#discussion_r499286815", "bodyText": "I didn't think about it. I think MM uses only few extra threads, for the RATs, boardview refresh and pathfinding. None of these will request an image. So perhaps we are safe now...", "author": "SJuliez", "createdAt": "2020-10-04T20:42:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NDUwNw=="}], "type": "inlineReview", "revised_code": null}]}