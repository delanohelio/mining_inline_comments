{"pr_number": 3323, "pr_title": "bugfix: clean root context when state machine inst record failed", "pr_createdAt": "2020-12-01T09:02:05Z", "pr_url": "https://github.com/seata/seata/pull/3323", "timeline": [{"oid": "56b0d42b5b6cddea7628cd8e3214ac8ae322219b", "url": "https://github.com/seata/seata/commit/56b0d42b5b6cddea7628cd8e3214ac8ae322219b", "message": "bugfix: clean rootcontext when state machine inst record failed", "committedDate": "2020-12-01T08:52:01Z", "type": "commit"}, {"oid": "cb2f488de44d85d6735323365c71120f672fd7aa", "url": "https://github.com/seata/seata/commit/cb2f488de44d85d6735323365c71120f672fd7aa", "message": "optimize: use duplicate key to mock exp", "committedDate": "2020-12-02T04:59:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTA1OQ==", "url": "https://github.com/seata/seata/pull/3323#discussion_r533405059", "bodyText": "How to ensure that this unit test is executed last, otherwise it will cause other unit tests to fail", "author": "long187", "createdAt": "2020-12-01T13:27:09Z", "path": "test/src/test/java/io/seata/saga/engine/db/StateMachineDBExceptionTests.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.engine.db;\n+\n+import io.seata.common.exception.StoreException;\n+import io.seata.core.context.RootContext;\n+import io.seata.saga.engine.StateMachineEngine;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+\n+import java.util.HashMap;\n+\n+/**\n+ * State machine tests with db store exception\n+ *\n+ * @author anselleeyy\n+ */\n+public class StateMachineDBExceptionTests extends AbstractServerTest {\n+\n+    private static StateMachineEngine stateMachineEngine;\n+    private static JdbcTemplate       jdbcTemplate;\n+\n+    @BeforeAll\n+    public static void initApplicationContext() throws InterruptedException {\n+\n+        startSeataServer();\n+\n+        ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"classpath:saga/spring/statemachine_engine_db_test.xml\");\n+        stateMachineEngine = applicationContext.getBean(\"stateMachineEngine\", StateMachineEngine.class);\n+        jdbcTemplate = applicationContext.getBean(JdbcTemplate.class);\n+    }\n+\n+    @Test\n+    public void testStateMachineRecordFailed() {\n+\n+        // drop table to mock record exception\n+        jdbcTemplate.execute(\"drop table seata_state_machine_inst\");", "originalCommit": "56b0d42b5b6cddea7628cd8e3214ac8ae322219b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NTY0Mg==", "url": "https://github.com/seata/seata/pull/3323#discussion_r537995642", "bodyText": "fixed, use duplicate key exception instead", "author": "anselleeyy", "createdAt": "2020-12-08T02:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "cb2f488de44d85d6735323365c71120f672fd7aa", "chunk": "diff --git a/test/src/test/java/io/seata/saga/engine/db/StateMachineDBExceptionTests.java b/test/src/test/java/io/seata/saga/engine/db/StateMachineDBExceptionTests.java\ndeleted file mode 100644\nindex 773c7d093..000000000\n--- a/test/src/test/java/io/seata/saga/engine/db/StateMachineDBExceptionTests.java\n+++ /dev/null\n\n@@ -1,61 +0,0 @@\n-/*\n- *  Copyright 1999-2019 Seata.io Group.\n- *\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- */\n-package io.seata.saga.engine.db;\n-\n-import io.seata.common.exception.StoreException;\n-import io.seata.core.context.RootContext;\n-import io.seata.saga.engine.StateMachineEngine;\n-import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.support.ClassPathXmlApplicationContext;\n-import org.springframework.jdbc.core.JdbcTemplate;\n-\n-import java.util.HashMap;\n-\n-/**\n- * State machine tests with db store exception\n- *\n- * @author anselleeyy\n- */\n-public class StateMachineDBExceptionTests extends AbstractServerTest {\n-\n-    private static StateMachineEngine stateMachineEngine;\n-    private static JdbcTemplate       jdbcTemplate;\n-\n-    @BeforeAll\n-    public static void initApplicationContext() throws InterruptedException {\n-\n-        startSeataServer();\n-\n-        ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"classpath:saga/spring/statemachine_engine_db_test.xml\");\n-        stateMachineEngine = applicationContext.getBean(\"stateMachineEngine\", StateMachineEngine.class);\n-        jdbcTemplate = applicationContext.getBean(JdbcTemplate.class);\n-    }\n-\n-    @Test\n-    public void testStateMachineRecordFailed() {\n-\n-        // drop table to mock record exception\n-        jdbcTemplate.execute(\"drop table seata_state_machine_inst\");\n-\n-        Assertions.assertThrows(StoreException.class,\n-            () -> stateMachineEngine.start(\"simpleTestStateMachine\", null, new HashMap<>()));\n-        Assertions.assertNull(RootContext.getXID());\n-\n-    }\n-}\n\\ No newline at end of file\n"}}, {"oid": "ba449b1582b76b8a606f72762895864b86a021c5", "url": "https://github.com/seata/seata/commit/ba449b1582b76b8a606f72762895864b86a021c5", "message": "Merge remote-tracking branch 'upstream/develop' into feature/fix_uncleand_RootContext_on_Exp", "committedDate": "2020-12-08T05:31:49Z", "type": "commit"}]}