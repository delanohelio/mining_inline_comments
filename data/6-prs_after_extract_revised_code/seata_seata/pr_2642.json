{"pr_number": 2642, "pr_title": "bugfix: unsafe double-checked locking in SofaRegistryServiceImpl", "pr_createdAt": "2020-04-30T01:50:58Z", "pr_url": "https://github.com/seata/seata/pull/2642", "timeline": [{"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3", "url": "https://github.com/seata/seata/commit/5b2e658d0a207269b3f704d201b939adff46d7d3", "message": "bugfix: unsafe double-checked locking\n\nBecause `DefaultRegistryClient` is in third-part jar, the `init` method invocation can't be moved to constructor.\n\nSo the local variable is used to correct DCL and minimize the number of field reads.\n\nSee also: https://lgtm.com/rules/1507076816054/", "committedDate": "2020-04-30T01:34:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw==", "url": "https://github.com/seata/seata/pull/2642#discussion_r417747687", "bodyText": "You can continue to return registryClient, and result is used as a local transit variable, keeping the minimum changes.", "author": "zjinlei", "createdAt": "2020-04-30T04:33:44Z", "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "originalCommit": "5b2e658d0a207269b3f704d201b939adff46d7d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMzIyNA==", "url": "https://github.com/seata/seata/pull/2642#discussion_r420513224", "bodyText": "@zjinlei\nThis way minimizes the number of volatile field reads, which improves performance, but makes the code a bit complicated.\nIf minimum change or simple code is preferred, I will change the code to what you recommend \uff5e", "author": "chenxi-null", "createdAt": "2020-05-06T02:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjYwNQ==", "url": "https://github.com/seata/seata/pull/2642#discussion_r420526605", "bodyText": "[RegistryClient result = registryClient] == [null == registryClient]\n[result = registryClient] == [null == registryClient]\nSame reading times, and here is singleton initialization, code readability is more important.", "author": "zjinlei", "createdAt": "2020-05-06T03:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4Mjk2Nw==", "url": "https://github.com/seata/seata/pull/2642#discussion_r420582967", "bodyText": "@zjinlei\nJust to confirm. Do you mean to change it like this?\nif (null == registryClient) {\n    synchronized (SofaRegistryServiceImpl.class) {\n        if (null == registryClient) {\n            // ...\n            DefaultRegistryClient result = new DefaultRegistryClient(config);\n            result.init();\n            registryClient = result;\n        }\n    }\n}\nreturn registryClient;\nThe original code;\nRegistryClient result = registryClient;\nif (null == result) {\n    synchronized (SofaRegistryServiceImpl.class) {\n        result = registryClient;\n        if (null == result) {\n            // ...    \n            result = new DefaultRegistryClient(config);\n            ((DefaultRegistryClient) result).init();\n            registryClient = result;\n        }\n    }\n}\nreturn result;", "author": "chenxi-null", "createdAt": "2020-05-06T07:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0466e992abea88e38084858745b6c40e2463e8cd", "chunk": "diff --git a/discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java b/discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java\nindex 89714bbff..fafe04fe2 100644\n--- a/discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java\n+++ b/discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java\n\n@@ -133,13 +131,13 @@ public class SofaRegistryServiceImpl implements RegistryService<SubscriberDataOb\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    result = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient) result).init();\n+                    DefaultRegistryClient result = new DefaultRegistryClient(config);\n+                    result.init();\n                     registryClient = result;\n                 }\n             }\n         }\n-        return result;\n+        return registryClient;\n     }\n \n     @Override\n"}}, {"oid": "d776f5120b67ebaf7a11837379baee55daf7251d", "url": "https://github.com/seata/seata/commit/d776f5120b67ebaf7a11837379baee55daf7251d", "message": "Merge branch 'develop' into fix/unsafe-dcl", "committedDate": "2020-05-02T16:09:15Z", "type": "commit"}, {"oid": "c9991608d7f3f4861e5042bdaed90bf9d21f5624", "url": "https://github.com/seata/seata/commit/c9991608d7f3f4861e5042bdaed90bf9d21f5624", "message": "Merge branch 'develop' into fix/unsafe-dcl", "committedDate": "2020-05-06T07:02:16Z", "type": "commit"}, {"oid": "0466e992abea88e38084858745b6c40e2463e8cd", "url": "https://github.com/seata/seata/commit/0466e992abea88e38084858745b6c40e2463e8cd", "message": "bugfix: unsafe double-checked locking\n\nBecause `DefaultRegistryClient` is in third-part jar, the `init` method invocation can't be moved to constructor.\n\nSo the local variable is used to correct DCL and minimize the number of field reads.\n\nSee also: https://lgtm.com/rules/1507076816054/", "committedDate": "2020-05-06T07:09:32Z", "type": "commit"}, {"oid": "c682dfdc018b5706ba3d3854df4572f68994b7a9", "url": "https://github.com/seata/seata/commit/c682dfdc018b5706ba3d3854df4572f68994b7a9", "message": "Merge branch 'fix/unsafe-dcl' of github.com:chenxi-null/seata into fix/double-check-lock", "committedDate": "2020-05-06T07:11:53Z", "type": "commit"}]}