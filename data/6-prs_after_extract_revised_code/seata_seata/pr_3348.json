{"pr_number": 3348, "pr_title": "feature: support redis sentinel mode", "pr_createdAt": "2020-12-08T08:04:31Z", "pr_url": "https://github.com/seata/seata/pull/3348", "timeline": [{"oid": "b25da885e00553db40a18c3a330f37938a017d17", "url": "https://github.com/seata/seata/commit/b25da885e00553db40a18c3a330f37938a017d17", "message": "feature: support redis sentinel mode", "committedDate": "2020-12-08T07:58:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyMzAyNg==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538323026", "bodyText": "\u9700\u8981\u8003\u8651\u517c\u5bb91.4\u7684\u914d\u7f6e\u8bfb\u53d6", "author": "a364176773", "createdAt": "2020-12-08T12:42:20Z", "path": "server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java", "diffHunk": "@@ -71,10 +74,25 @@ public static JedisPool getJedisPoolInstance(JedisPool... jedisPools) {\n                         poolConfig.setMinIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MIN_CONN, MINCONN));\n                         poolConfig.setMaxIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_CONN, MAXCONN));\n                         poolConfig.setMaxTotal(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_TOTAL, MAXTOTAL));\n-                        jedisPool =\n-                            new JedisPool(poolConfig, CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST),\n-                                CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT), 60000, password,\n-                                CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n+                        String mode = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_MODE);\n+                        if (mode.equals(ConfigurationKeys.REDIS_SENTINEL_MODE)) {\n+                            String masterName = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_MASTERNAME);\n+                            if (StringUtils.isBlank(masterName)) {\n+                                throw new RedisException(\"The masterName is null in redis sentinel mode\");\n+                            }\n+                            Set<String> sentinels = new HashSet<>();\n+                            String[] sentinelHosts = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_HOST).split(\",\");\n+                            Arrays.asList(sentinelHosts).forEach(sentinelHost -> sentinels.add(sentinelHost));\n+                            jedisPool = new JedisSentinelPool(masterName, sentinels, poolConfig, 60000, password,\n+                                    CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n+                        } else if (mode.equals(ConfigurationKeys.REDIS_SINGLE_MODE)) {\n+                            jedisPool =\n+                                    new JedisPool(poolConfig, CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST, HOST),", "originalCommit": "b25da885e00553db40a18c3a330f37938a017d17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2ODc1MA==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538368750", "bodyText": "\u597d\u7684", "author": "lj2018110133", "createdAt": "2020-12-08T13:29:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMyMzAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "925e689f1c86fd8ee34b47f18c25349dc3fcfdf9", "chunk": "diff --git a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\nindex 61bc533684..a64f9a6003 100644\n--- a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n+++ b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n\n@@ -74,7 +74,7 @@ public class JedisPooledFactory {\n                         poolConfig.setMinIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MIN_CONN, MINCONN));\n                         poolConfig.setMaxIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_CONN, MAXCONN));\n                         poolConfig.setMaxTotal(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_TOTAL, MAXTOTAL));\n-                        String mode = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_MODE);\n+                        String mode = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_MODE,ConfigurationKeys.REDIS_SINGLE_MODE);\n                         if (mode.equals(ConfigurationKeys.REDIS_SENTINEL_MODE)) {\n                             String masterName = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_MASTERNAME);\n                             if (StringUtils.isBlank(masterName)) {\n"}}, {"oid": "925e689f1c86fd8ee34b47f18c25349dc3fcfdf9", "url": "https://github.com/seata/seata/commit/925e689f1c86fd8ee34b47f18c25349dc3fcfdf9", "message": "Compatible redis single mode with version 1.4", "committedDate": "2020-12-08T15:14:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ5NDA2Ng==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538494066", "bodyText": "\u8c03\u6574\u4e00\u4e0bimport\u987a\u5e8f\u548c\u4e0d\u8981\u7528*\u914d\u7f6e", "author": "caohdgege", "createdAt": "2020-12-08T15:24:21Z", "path": "server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java", "diffHunk": "@@ -15,16 +15,19 @@\n  */\n package io.seata.server.storage.redis;\n \n+import io.seata.common.exception.RedisException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import io.seata.common.util.StringUtils;\n import io.seata.config.Configuration;\n import io.seata.config.ConfigurationFactory;\n import io.seata.core.constants.ConfigurationKeys;\n-import redis.clients.jedis.Jedis;\n-import redis.clients.jedis.JedisPool;\n-import redis.clients.jedis.JedisPoolConfig;\n+import redis.clients.jedis.*;", "originalCommit": "925e689f1c86fd8ee34b47f18c25349dc3fcfdf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "32c27db1d307b9e6ae52e91b322790ac158f5b42", "chunk": "diff --git a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\nindex a64f9a6003..6fbc35ed5a 100644\n--- a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n+++ b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n\n@@ -15,19 +15,24 @@\n  */\n package io.seata.server.storage.redis;\n \n-import io.seata.common.exception.RedisException;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import io.seata.common.exception.RedisException;\n import io.seata.common.util.StringUtils;\n import io.seata.config.Configuration;\n import io.seata.config.ConfigurationFactory;\n import io.seata.core.constants.ConfigurationKeys;\n-import redis.clients.jedis.*;\n \n-import java.util.Arrays;\n-import java.util.HashSet;\n-import java.util.Set;\n+import redis.clients.jedis.Jedis;\n+import redis.clients.jedis.JedisPool;\n+import redis.clients.jedis.JedisPoolAbstract;\n+import redis.clients.jedis.JedisPoolConfig;\n+import redis.clients.jedis.JedisSentinelPool;\n \n /**\n  * @author funkye\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ5NDUzMA==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538494530", "bodyText": "initsize?", "author": "caohdgege", "createdAt": "2020-12-08T15:24:45Z", "path": "server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java", "diffHunk": "@@ -71,10 +74,28 @@ public static JedisPool getJedisPoolInstance(JedisPool... jedisPools) {\n                         poolConfig.setMinIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MIN_CONN, MINCONN));\n                         poolConfig.setMaxIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_CONN, MAXCONN));\n                         poolConfig.setMaxTotal(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_TOTAL, MAXTOTAL));\n-                        jedisPool =\n-                            new JedisPool(poolConfig, CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST),\n-                                CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT), 60000, password,\n-                                CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n+                        String mode = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_MODE,ConfigurationKeys.REDIS_SINGLE_MODE);\n+                        if (mode.equals(ConfigurationKeys.REDIS_SENTINEL_MODE)) {\n+                            String masterName = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_MASTERNAME);\n+                            if (StringUtils.isBlank(masterName)) {\n+                                throw new RedisException(\"The masterName is null in redis sentinel mode\");\n+                            }\n+                            Set<String> sentinels = new HashSet<>();", "originalCommit": "925e689f1c86fd8ee34b47f18c25349dc3fcfdf9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMzQ3NA==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538513474", "bodyText": "\u53ef\u4ee5\uff0c\u56e0\u4e3aset\u5b58sentinel\u8282\u70b9\u4fe1\u606f\uff0c\u8282\u70b9\u6570\u91cf\u56fa\u5b9a\u662f3", "author": "lj2018110133", "createdAt": "2020-12-08T15:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ5NDUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "32c27db1d307b9e6ae52e91b322790ac158f5b42", "chunk": "diff --git a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\nindex a64f9a6003..6fbc35ed5a 100644\n--- a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n+++ b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n\n@@ -80,16 +87,16 @@ public class JedisPooledFactory {\n                             if (StringUtils.isBlank(masterName)) {\n                                 throw new RedisException(\"The masterName is null in redis sentinel mode\");\n                             }\n-                            Set<String> sentinels = new HashSet<>();\n+                            Set<String> sentinels = new HashSet<>(SENTINEL_HOST_NUMBER);\n                             String[] sentinelHosts = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_HOST).split(\",\");\n                             Arrays.asList(sentinelHosts).forEach(sentinelHost -> sentinels.add(sentinelHost));\n                             jedisPool = new JedisSentinelPool(masterName, sentinels, poolConfig, 60000, password,\n                                     CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n                         } else if (mode.equals(ConfigurationKeys.REDIS_SINGLE_MODE)) {\n-                            String host = StringUtils.isBlank(CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST)) ?\n-                                    CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST) : CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST);\n-                            int port = CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT) == 0 ?\n-                                    CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT) : CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT);\n+                            String host = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST);\n+                            host = StringUtils.isBlank(host) ? CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST) : host;\n+                            int port = CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT);\n+                            port = port == 0 ? CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT) : port;\n                             jedisPool =\n                                     new JedisPool(poolConfig, host, port, 60000, password,\n                                             CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMzk4Mg==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538503982", "bodyText": "CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST) \u8c03\u4e86\u4e24\u6b21\uff0c\u53ef\u4ee5\u7528\u4e2a\u53d8\u91cf\u63a5\u4e00\u4e0b\uff0c\u4e0b\u9762\u7684CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT)\u4e5f\u662f", "author": "caohdgege", "createdAt": "2020-12-08T15:33:01Z", "path": "server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java", "diffHunk": "@@ -71,10 +74,28 @@ public static JedisPool getJedisPoolInstance(JedisPool... jedisPools) {\n                         poolConfig.setMinIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MIN_CONN, MINCONN));\n                         poolConfig.setMaxIdle(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_CONN, MAXCONN));\n                         poolConfig.setMaxTotal(CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_MAX_TOTAL, MAXTOTAL));\n-                        jedisPool =\n-                            new JedisPool(poolConfig, CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST),\n-                                CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT), 60000, password,\n-                                CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n+                        String mode = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_MODE,ConfigurationKeys.REDIS_SINGLE_MODE);\n+                        if (mode.equals(ConfigurationKeys.REDIS_SENTINEL_MODE)) {\n+                            String masterName = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_MASTERNAME);\n+                            if (StringUtils.isBlank(masterName)) {\n+                                throw new RedisException(\"The masterName is null in redis sentinel mode\");\n+                            }\n+                            Set<String> sentinels = new HashSet<>();\n+                            String[] sentinelHosts = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_HOST).split(\",\");\n+                            Arrays.asList(sentinelHosts).forEach(sentinelHost -> sentinels.add(sentinelHost));\n+                            jedisPool = new JedisSentinelPool(masterName, sentinels, poolConfig, 60000, password,\n+                                    CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n+                        } else if (mode.equals(ConfigurationKeys.REDIS_SINGLE_MODE)) {\n+                            String host = StringUtils.isBlank(CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST)) ?", "originalCommit": "925e689f1c86fd8ee34b47f18c25349dc3fcfdf9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxMDY2OA==", "url": "https://github.com/seata/seata/pull/3348#discussion_r538510668", "bodyText": "\u597d\u7684\uff0c\u6211\u4f18\u5316\u4e0b", "author": "lj2018110133", "createdAt": "2020-12-08T15:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMzk4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "32c27db1d307b9e6ae52e91b322790ac158f5b42", "chunk": "diff --git a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\nindex a64f9a6003..6fbc35ed5a 100644\n--- a/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n+++ b/server/src/main/java/io/seata/server/storage/redis/JedisPooledFactory.java\n\n@@ -80,16 +87,16 @@ public class JedisPooledFactory {\n                             if (StringUtils.isBlank(masterName)) {\n                                 throw new RedisException(\"The masterName is null in redis sentinel mode\");\n                             }\n-                            Set<String> sentinels = new HashSet<>();\n+                            Set<String> sentinels = new HashSet<>(SENTINEL_HOST_NUMBER);\n                             String[] sentinelHosts = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SENTINEL_HOST).split(\",\");\n                             Arrays.asList(sentinelHosts).forEach(sentinelHost -> sentinels.add(sentinelHost));\n                             jedisPool = new JedisSentinelPool(masterName, sentinels, poolConfig, 60000, password,\n                                     CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n                         } else if (mode.equals(ConfigurationKeys.REDIS_SINGLE_MODE)) {\n-                            String host = StringUtils.isBlank(CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST)) ?\n-                                    CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST) : CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST);\n-                            int port = CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT) == 0 ?\n-                                    CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT) : CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT);\n+                            String host = CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_SINGLE_HOST);\n+                            host = StringUtils.isBlank(host) ? CONFIGURATION.getConfig(ConfigurationKeys.STORE_REDIS_HOST, HOST) : host;\n+                            int port = CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_SINGLE_PORT);\n+                            port = port == 0 ? CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_PORT, PORT) : port;\n                             jedisPool =\n                                     new JedisPool(poolConfig, host, port, 60000, password,\n                                             CONFIGURATION.getInt(ConfigurationKeys.STORE_REDIS_DATABASE, DATABASE));\n"}}, {"oid": "32c27db1d307b9e6ae52e91b322790ac158f5b42", "url": "https://github.com/seata/seata/commit/32c27db1d307b9e6ae52e91b322790ac158f5b42", "message": "add the configurations of file.conf to application.properties and application.yml", "committedDate": "2020-12-09T14:43:35Z", "type": "commit"}, {"oid": "b6c653330552efb74a540c879ca91e6d2c1b2ef8", "url": "https://github.com/seata/seata/commit/b6c653330552efb74a540c879ca91e6d2c1b2ef8", "message": "Merge branch 'develop' of github.com:seata/seata into liujian", "committedDate": "2020-12-27T04:13:37Z", "type": "commit"}, {"oid": "9a6b2b0bf253ef1e11bb9f6982637cc935940e81", "url": "https://github.com/seata/seata/commit/9a6b2b0bf253ef1e11bb9f6982637cc935940e81", "message": "add configrations of redis sentinel to script-server", "committedDate": "2020-12-27T04:25:56Z", "type": "commit"}, {"oid": "4a2005299f0f67db0fe5ed203b3f111c7ae00165", "url": "https://github.com/seata/seata/commit/4a2005299f0f67db0fe5ed203b3f111c7ae00165", "message": "modify changes files", "committedDate": "2020-12-27T12:19:36Z", "type": "commit"}, {"oid": "081c364227bc0cc7536d10a14502de3a1a61f02c", "url": "https://github.com/seata/seata/commit/081c364227bc0cc7536d10a14502de3a1a61f02c", "message": "modify changes files", "committedDate": "2020-12-28T02:02:36Z", "type": "commit"}, {"oid": "9cbd694eda3cfbf93ec5bbe4ac18a9b1c8593738", "url": "https://github.com/seata/seata/commit/9cbd694eda3cfbf93ec5bbe4ac18a9b1c8593738", "message": "modify changes files", "committedDate": "2020-12-29T06:07:45Z", "type": "commit"}]}