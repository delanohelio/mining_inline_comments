{"pr_number": 2806, "pr_title": "feature: support configuring default global transaction timeoutMillis", "pr_createdAt": "2020-06-17T08:10:16Z", "pr_url": "https://github.com/seata/seata/pull/2806", "timeline": [{"oid": "eadc70b63e226050f6d85889a06687852baeed69", "url": "https://github.com/seata/seata/commit/eadc70b63e226050f6d85889a06687852baeed69", "message": "optimize: Configurable global transaction timeoutMillis", "committedDate": "2020-06-17T08:07:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzU5Ng==", "url": "https://github.com/seata/seata/pull/2806#discussion_r441383596", "bodyText": "not elegant.", "author": "slievrly", "createdAt": "2020-06-17T08:45:15Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactional.java", "diffHunk": "@@ -33,10 +32,11 @@\n \n     /**\n      * Global transaction timeoutMills in MILLISECONDS.\n+     * The default value is the config: client.tm.global-transaction-timeout\n      *\n      * @return timeoutMills in MILLISECONDS.\n      */\n-    int timeoutMills() default TransactionInfo.DEFAULT_TIME_OUT;\n+    int timeoutMills() default -1;", "originalCommit": "eadc70b63e226050f6d85889a06687852baeed69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4NTQ0NQ==", "url": "https://github.com/seata/seata/pull/2806#discussion_r441385445", "bodyText": "default 0?", "author": "wangliang181230", "createdAt": "2020-06-17T08:48:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4NTg4Nw==", "url": "https://github.com/seata/seata/pull/2806#discussion_r441385887", "bodyText": "or a constant, with name: DEFAULT_VALUE_FROM_CONFIG\uff1f", "author": "wangliang181230", "createdAt": "2020-06-17T08:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "52c535c196f6aef9c8bea7137eaedeb6959d54ad", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactional.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactional.java\nindex 58868ad7..0f8e56f2 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactional.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactional.java\n\n@@ -32,11 +34,11 @@ public @interface GlobalTransactional {\n \n     /**\n      * Global transaction timeoutMills in MILLISECONDS.\n-     * The default value is the config: client.tm.global-transaction-timeout\n+     * If client.tm.global-transaction-timeout is configured, It will replace the DefaultValues.DEFAULT_GLOBAL_TRANSACTION_TIMEOUT.\n      *\n      * @return timeoutMills in MILLISECONDS.\n      */\n-    int timeoutMills() default -1;\n+    int timeoutMills() default DefaultValues.DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n \n     /**\n      * Given name of the global transaction instance.\n"}}, {"oid": "52c535c196f6aef9c8bea7137eaedeb6959d54ad", "url": "https://github.com/seata/seata/commit/52c535c196f6aef9c8bea7137eaedeb6959d54ad", "message": "\u6ce8\u89e3\u503c\u66f4\u4f18\u96c5\u3002", "committedDate": "2020-06-17T10:32:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwMTY0NA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r441501644", "bodyText": "if GLOBAL_TRANSACTION_TIMEOUT is  an illegal value\uff0chow to process\uff1f", "author": "slievrly", "createdAt": "2020-06-17T12:20:09Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -151,8 +154,13 @@ public String name() {\n \n                 @Override\n                 public TransactionInfo getTransactionInfo() {\n+                    int timeout = globalTrxAnno.timeoutMills();\n+                    if (timeout <= 0 || timeout == DEFAULT_GLOBAL_TRANSACTION_TIMEOUT) {\n+                        timeout = GLOBAL_TRANSACTION_TIMEOUT;", "originalCommit": "52c535c196f6aef9c8bea7137eaedeb6959d54ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1NDA2MQ==", "url": "https://github.com/seata/seata/pull/2806#discussion_r442754061", "bodyText": "Handled it in the static {} now. Please check it.", "author": "wangliang181230", "createdAt": "2020-06-19T10:11:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwMTY0NA=="}], "type": "inlineReview", "revised_code": {"commit": "cadf7dca44d02c9853a97e7c2bcb9f3be2f3f609", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\nindex 36726771..78e8e03b 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n\n@@ -154,9 +178,12 @@ public class GlobalTransactionalInterceptor implements ConfigurationChangeListen\n \n                 @Override\n                 public TransactionInfo getTransactionInfo() {\n+                    //normalization the value of timeout\n                     int timeout = globalTrxAnno.timeoutMills();\n                     if (timeout <= 0 || timeout == DEFAULT_GLOBAL_TRANSACTION_TIMEOUT) {\n                         timeout = GLOBAL_TRANSACTION_TIMEOUT;\n+                    } else {\n+                        timeout = Math.max(timeout, MIN_GLOBAL_TRANSACTION_TIMEOUT);\n                     }\n \n                     TransactionInfo transactionInfo = new TransactionInfo();\n"}}, {"oid": "7d4e581727fdfcde3f8c93b630822306ce7ba160", "url": "https://github.com/seata/seata/commit/7d4e581727fdfcde3f8c93b630822306ce7ba160", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-17T12:20:47Z", "type": "commit"}, {"oid": "cadf7dca44d02c9853a97e7c2bcb9f3be2f3f609", "url": "https://github.com/seata/seata/commit/cadf7dca44d02c9853a97e7c2bcb9f3be2f3f609", "message": "\u5904\u7406\u975e\u6cd5\u7684\u4ee5\u53ca\u4e0d\u5408\u7406\u7684timeout\u7684\u503c\u3002", "committedDate": "2020-06-17T15:17:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDQwMA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r442744400", "bodyText": "why not move to the constructor block?", "author": "a364176773", "createdAt": "2020-06-19T09:51:55Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -74,6 +74,33 @@\n     private static ScheduledThreadPoolExecutor executor =\n         new ScheduledThreadPoolExecutor(1, new NamedThreadFactory(\"degradeCheckWorker\", 1, true));\n \n+    //region GLOBAL_TRANSACTION_TIMEOUT\n+\n+    private static int GLOBAL_TRANSACTION_TIMEOUT;\n+    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT / 2;\n+\n+    static {\n+        try {", "originalCommit": "cadf7dca44d02c9853a97e7c2bcb9f3be2f3f609", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1MzQxNA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r442753414", "bodyText": "The GlobalTransactionalInterceptor is a single instance, so it is not necessary to put it in the constructor for the moment.", "author": "wangliang181230", "createdAt": "2020-06-19T10:10:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDQwMA=="}], "type": "inlineReview", "revised_code": {"commit": "638739599d20f6d17f38aace56f411f96c41d2ad", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\nindex 78e8e03b..44cd548b 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n\n@@ -76,27 +76,28 @@ public class GlobalTransactionalInterceptor implements ConfigurationChangeListen\n \n     //region GLOBAL_TRANSACTION_TIMEOUT\n \n-    private static int GLOBAL_TRANSACTION_TIMEOUT;\n-    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT / 2;\n+    private static final int GLOBAL_TRANSACTION_TIMEOUT;\n+    private static final int MIN_GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT / 2;\n \n     static {\n+        int globalTransactionTimeout;\n         try {\n-            GLOBAL_TRANSACTION_TIMEOUT = ConfigurationFactory.getInstance().getInt(\n+            globalTransactionTimeout = ConfigurationFactory.getInstance().getInt(\n                     ConfigurationKeys.GLOBAL_TRANSACTION_TIMEOUT, DEFAULT_GLOBAL_TRANSACTION_TIMEOUT);\n         } catch (Exception e) {\n             LOGGER.error(\"Illegal global transaction timeout value: \" + e.getMessage());\n-            GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n+            globalTransactionTimeout = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n         }\n-\n-        if (GLOBAL_TRANSACTION_TIMEOUT <= 0) {\n+        if (globalTransactionTimeout <= 0) {\n             LOGGER.warn(\"Global transaction timeout value '{}' is illegal, and has been reset to the default value '{}'\",\n-                GLOBAL_TRANSACTION_TIMEOUT, DEFAULT_GLOBAL_TRANSACTION_TIMEOUT);\n-            GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n-        } else if (GLOBAL_TRANSACTION_TIMEOUT < MIN_GLOBAL_TRANSACTION_TIMEOUT) {\n+                globalTransactionTimeout, DEFAULT_GLOBAL_TRANSACTION_TIMEOUT);\n+            globalTransactionTimeout = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n+        } else if (globalTransactionTimeout < MIN_GLOBAL_TRANSACTION_TIMEOUT) {\n             LOGGER.warn(\"Global transaction timeout value '{}' is too small, and has been reset to the min value '{}'\",\n-                    GLOBAL_TRANSACTION_TIMEOUT, MIN_GLOBAL_TRANSACTION_TIMEOUT);\n-            GLOBAL_TRANSACTION_TIMEOUT = MIN_GLOBAL_TRANSACTION_TIMEOUT;\n+                    globalTransactionTimeout, MIN_GLOBAL_TRANSACTION_TIMEOUT);\n+            globalTransactionTimeout = MIN_GLOBAL_TRANSACTION_TIMEOUT;\n         }\n+        GLOBAL_TRANSACTION_TIMEOUT = globalTransactionTimeout;\n     }\n \n     //endregion\n"}}, {"oid": "638739599d20f6d17f38aace56f411f96c41d2ad", "url": "https://github.com/seata/seata/commit/638739599d20f6d17f38aace56f411f96c41d2ad", "message": "\u5e38\u91cf\u4f7f\u7528final", "committedDate": "2020-06-21T12:56:22Z", "type": "commit"}, {"oid": "e39f00fc8e660c163102f19db4a157aefb93f9c0", "url": "https://github.com/seata/seata/commit/e39f00fc8e660c163102f19db4a157aefb93f9c0", "message": "\u521d\u59cb\u5316timeout\u7684\u4ee3\u7801\u7531 static{} \u8f6c\u79fb\u5230 \u6784\u9020\u51fd\u6570 \u4e2d\u3002", "committedDate": "2020-06-21T14:30:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIwNTYyMA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r443205620", "bodyText": "why not declared as final?", "author": "slievrly", "createdAt": "2020-06-21T10:32:45Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -74,6 +74,33 @@\n     private static ScheduledThreadPoolExecutor executor =\n         new ScheduledThreadPoolExecutor(1, new NamedThreadFactory(\"degradeCheckWorker\", 1, true));\n \n+    //region GLOBAL_TRANSACTION_TIMEOUT\n+\n+    private static int GLOBAL_TRANSACTION_TIMEOUT;", "originalCommit": "cadf7dca44d02c9853a97e7c2bcb9f3be2f3f609", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "638739599d20f6d17f38aace56f411f96c41d2ad", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\nindex 78e8e03b..44cd548b 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n\n@@ -76,27 +76,28 @@ public class GlobalTransactionalInterceptor implements ConfigurationChangeListen\n \n     //region GLOBAL_TRANSACTION_TIMEOUT\n \n-    private static int GLOBAL_TRANSACTION_TIMEOUT;\n-    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT / 2;\n+    private static final int GLOBAL_TRANSACTION_TIMEOUT;\n+    private static final int MIN_GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT / 2;\n \n     static {\n+        int globalTransactionTimeout;\n         try {\n-            GLOBAL_TRANSACTION_TIMEOUT = ConfigurationFactory.getInstance().getInt(\n+            globalTransactionTimeout = ConfigurationFactory.getInstance().getInt(\n                     ConfigurationKeys.GLOBAL_TRANSACTION_TIMEOUT, DEFAULT_GLOBAL_TRANSACTION_TIMEOUT);\n         } catch (Exception e) {\n             LOGGER.error(\"Illegal global transaction timeout value: \" + e.getMessage());\n-            GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n+            globalTransactionTimeout = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n         }\n-\n-        if (GLOBAL_TRANSACTION_TIMEOUT <= 0) {\n+        if (globalTransactionTimeout <= 0) {\n             LOGGER.warn(\"Global transaction timeout value '{}' is illegal, and has been reset to the default value '{}'\",\n-                GLOBAL_TRANSACTION_TIMEOUT, DEFAULT_GLOBAL_TRANSACTION_TIMEOUT);\n-            GLOBAL_TRANSACTION_TIMEOUT = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n-        } else if (GLOBAL_TRANSACTION_TIMEOUT < MIN_GLOBAL_TRANSACTION_TIMEOUT) {\n+                globalTransactionTimeout, DEFAULT_GLOBAL_TRANSACTION_TIMEOUT);\n+            globalTransactionTimeout = DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n+        } else if (globalTransactionTimeout < MIN_GLOBAL_TRANSACTION_TIMEOUT) {\n             LOGGER.warn(\"Global transaction timeout value '{}' is too small, and has been reset to the min value '{}'\",\n-                    GLOBAL_TRANSACTION_TIMEOUT, MIN_GLOBAL_TRANSACTION_TIMEOUT);\n-            GLOBAL_TRANSACTION_TIMEOUT = MIN_GLOBAL_TRANSACTION_TIMEOUT;\n+                    globalTransactionTimeout, MIN_GLOBAL_TRANSACTION_TIMEOUT);\n+            globalTransactionTimeout = MIN_GLOBAL_TRANSACTION_TIMEOUT;\n         }\n+        GLOBAL_TRANSACTION_TIMEOUT = globalTransactionTimeout;\n     }\n \n     //endregion\n"}}, {"oid": "87e24530034169104fd49f0aa5ad8a059ad02e8a", "url": "https://github.com/seata/seata/commit/87e24530034169104fd49f0aa5ad8a059ad02e8a", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-22T02:45:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5MzM5Ng==", "url": "https://github.com/seata/seata/pull/2806#discussion_r443293396", "bodyText": "remove static \uff1f", "author": "a364176773", "createdAt": "2020-06-22T02:47:26Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -74,6 +74,37 @@\n     private static ScheduledThreadPoolExecutor executor =\n         new ScheduledThreadPoolExecutor(1, new NamedThreadFactory(\"degradeCheckWorker\", 1, true));\n \n+    //region GLOBAL_TRANSACTION_TIMEOUT\n+\n+    private static int GLOBAL_TRANSACTION_TIMEOUT = 0;\n+    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = 0;\n+\n+    private static void initGlobalTransactionTimeout() {", "originalCommit": "87e24530034169104fd49f0aa5ad8a059ad02e8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MzM0Mg==", "url": "https://github.com/seata/seata/pull/2806#discussion_r446593342", "bodyText": "Consistent with the globalTransactionTimeout.", "author": "wangliang181230", "createdAt": "2020-06-28T03:06:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5MzM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e1dd976a248f98989fb996fb3b6784c83bada13d", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\nindex 560adf0e..eb762b8e 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n\n@@ -76,11 +76,11 @@ public class GlobalTransactionalInterceptor implements ConfigurationChangeListen\n \n     //region GLOBAL_TRANSACTION_TIMEOUT\n \n-    private static int GLOBAL_TRANSACTION_TIMEOUT = 0;\n-    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = 0;\n+    private static int globalTransactionTimeout = 0;\n+    private static int minGlobalTransactionTimeout = 0;\n \n     private static void initGlobalTransactionTimeout() {\n-        if (GLOBAL_TRANSACTION_TIMEOUT <= 0) {\n+        if (GlobalTransactionalInterceptor.globalTransactionTimeout <= 0) {\n             int globalTransactionTimeout;\n             try {\n                 globalTransactionTimeout = ConfigurationFactory.getInstance().getInt(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5Mzk4OA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r443293988", "bodyText": "<= MIN_GLOBAL_TRANSACTION_TIMEOUT?\n\u56e0\u4e3a\u8fdb\u8fd9\u5757\u4ee3\u7801\u7684\u65f6\u5019\uff0cMIN_GLOBAL_TRANSACTION_TIMEOUT\u7684\u503c\u4e3a0\uff0c\u90a3\u4e48\u65e0\u9700\u518d\u505aglobaltimeout<min global timeout\u5427\uff1f \u4e0b\u9762\u7684\u903b\u8f91\u662f\u5426\u5e94\u8be5\u66f4\u6539\uff1f", "author": "a364176773", "createdAt": "2020-06-22T02:50:19Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -74,6 +74,37 @@\n     private static ScheduledThreadPoolExecutor executor =\n         new ScheduledThreadPoolExecutor(1, new NamedThreadFactory(\"degradeCheckWorker\", 1, true));\n \n+    //region GLOBAL_TRANSACTION_TIMEOUT\n+\n+    private static int GLOBAL_TRANSACTION_TIMEOUT = 0;\n+    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = 0;\n+\n+    private static void initGlobalTransactionTimeout() {\n+        if (GLOBAL_TRANSACTION_TIMEOUT <= 0) {", "originalCommit": "87e24530034169104fd49f0aa5ad8a059ad02e8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5Mzg5NA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r446593894", "bodyText": "\u73b0\u5728minGlobalTransactionTimeout\u529f\u80fd\u5df2\u7ecf\u5220\u9664\u4e86\uff0c\u7ecf\u8ba8\u8bba\uff0c\u4e0d\u518d\u5bf9\u914d\u7f6e\u7684\u6700\u5c0f\u503c\u505a\u9650\u5236\u3002", "author": "wangliang181230", "createdAt": "2020-06-28T03:14:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5Mzk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "e1dd976a248f98989fb996fb3b6784c83bada13d", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\nindex 560adf0e..eb762b8e 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n\n@@ -76,11 +76,11 @@ public class GlobalTransactionalInterceptor implements ConfigurationChangeListen\n \n     //region GLOBAL_TRANSACTION_TIMEOUT\n \n-    private static int GLOBAL_TRANSACTION_TIMEOUT = 0;\n-    private static int MIN_GLOBAL_TRANSACTION_TIMEOUT = 0;\n+    private static int globalTransactionTimeout = 0;\n+    private static int minGlobalTransactionTimeout = 0;\n \n     private static void initGlobalTransactionTimeout() {\n-        if (GLOBAL_TRANSACTION_TIMEOUT <= 0) {\n+        if (GlobalTransactionalInterceptor.globalTransactionTimeout <= 0) {\n             int globalTransactionTimeout;\n             try {\n                 globalTransactionTimeout = ConfigurationFactory.getInstance().getInt(\n"}}, {"oid": "e1dd976a248f98989fb996fb3b6784c83bada13d", "url": "https://github.com/seata/seata/commit/e1dd976a248f98989fb996fb3b6784c83bada13d", "message": "\u8c03\u6574\u547d\u540d\u89c4\u8303\uff0c\u4e14\u914d\u7f6e\u503c\u4e0d\u80fd\u5c0f\u4e8e\u9ed8\u8ba4\u503c\u3002", "committedDate": "2020-06-22T03:12:07Z", "type": "commit"}, {"oid": "6718be4d5051626a124a9b2fe20e960ad766b237", "url": "https://github.com/seata/seata/commit/6718be4d5051626a124a9b2fe20e960ad766b237", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-22T03:19:50Z", "type": "commit"}, {"oid": "51b524a5209d677b443173d3e4c5bca3be5fb69f", "url": "https://github.com/seata/seata/commit/51b524a5209d677b443173d3e4c5bca3be5fb69f", "message": "\u79fb\u9664\u6700\u5c0f\u503c\u9650\u5236\u3002", "committedDate": "2020-06-22T03:39:26Z", "type": "commit"}, {"oid": "e26a5ca240313aba52d7fb80388612233c445437", "url": "https://github.com/seata/seata/commit/e26a5ca240313aba52d7fb80388612233c445437", "message": "Merge remote-tracking branch 'origin/timeout-global-config' into timeout-global-config", "committedDate": "2020-06-22T03:39:56Z", "type": "commit"}, {"oid": "1c927e10543403ea90539bea7a86371eabc13d98", "url": "https://github.com/seata/seata/commit/1c927e10543403ea90539bea7a86371eabc13d98", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-23T13:41:39Z", "type": "commit"}, {"oid": "05143696faaceb8955534766818f3c8e8a204acf", "url": "https://github.com/seata/seata/commit/05143696faaceb8955534766818f3c8e8a204acf", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-28T03:01:31Z", "type": "commit"}, {"oid": "45334bd1edc700017ee61e7a8e756faaf0ee5fbb", "url": "https://github.com/seata/seata/commit/45334bd1edc700017ee61e7a8e756faaf0ee5fbb", "message": "\u79fb\u9664initGlobalTransactionTimeout\u65b9\u6cd5\u7684static", "committedDate": "2020-06-28T05:38:32Z", "type": "commit"}, {"oid": "750ca760e20caa0a511cac40e81bf8fc7ddc78a4", "url": "https://github.com/seata/seata/commit/750ca760e20caa0a511cac40e81bf8fc7ddc78a4", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-28T09:36:42Z", "type": "commit"}, {"oid": "1443fcaa74e2f6db1795e8a4cf41b3444c482b56", "url": "https://github.com/seata/seata/commit/1443fcaa74e2f6db1795e8a4cf41b3444c482b56", "message": "\u5c0f\u8c03\u6574", "committedDate": "2020-06-29T01:31:36Z", "type": "commit"}, {"oid": "723bf942c9549b5b47e2ddaa611b09720eb2e45c", "url": "https://github.com/seata/seata/commit/723bf942c9549b5b47e2ddaa611b09720eb2e45c", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-06-30T04:49:32Z", "type": "commit"}, {"oid": "f14f0816bdd0db6d2e3057af916614b15b1ffd84", "url": "https://github.com/seata/seata/commit/f14f0816bdd0db6d2e3057af916614b15b1ffd84", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-03T04:43:52Z", "type": "commit"}, {"oid": "f8b0d645fefa73e89c37300262c7c1f58e58d9fc", "url": "https://github.com/seata/seata/commit/f8b0d645fefa73e89c37300262c7c1f58e58d9fc", "message": "\u91cd\u547d\u540d\u914d\u7f6e\u3002", "committedDate": "2020-07-03T04:53:01Z", "type": "commit"}, {"oid": "9e3bf798741619248e361c1951265c46ae8c1096", "url": "https://github.com/seata/seata/commit/9e3bf798741619248e361c1951265c46ae8c1096", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-13T05:01:15Z", "type": "commit"}, {"oid": "fcb0feb5629e99a0467d9ba44f5596987d9ee873", "url": "https://github.com/seata/seata/commit/fcb0feb5629e99a0467d9ba44f5596987d9ee873", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-13T09:57:04Z", "type": "commit"}, {"oid": "b10a08dded964dd60fb858d3e19b4704c562d554", "url": "https://github.com/seata/seata/commit/b10a08dded964dd60fb858d3e19b4704c562d554", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-16T01:40:55Z", "type": "commit"}, {"oid": "9a92bc81cd760b6343a17c34e42bc9c5491097f3", "url": "https://github.com/seata/seata/commit/9a92bc81cd760b6343a17c34e42bc9c5491097f3", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-16T10:00:12Z", "type": "commit"}, {"oid": "86ed5c4533b6785be7dddcdb836ae927985a70b9", "url": "https://github.com/seata/seata/commit/86ed5c4533b6785be7dddcdb836ae927985a70b9", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-23T01:02:28Z", "type": "commit"}, {"oid": "39f416d6c9b097a1dce29f18aeebecdd80ea4913", "url": "https://github.com/seata/seata/commit/39f416d6c9b097a1dce29f18aeebecdd80ea4913", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-07-31T07:13:49Z", "type": "commit"}, {"oid": "37bfdbf2eadc07be5d27ddb2811a7700cab568e3", "url": "https://github.com/seata/seata/commit/37bfdbf2eadc07be5d27ddb2811a7700cab568e3", "message": "Merge remote-tracking branch 'remotes/upstream/develop' into timeout-global-config\n\n# Conflicts:\n#\tseata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/client/TmProperties.java\n#\tseata-spring-boot-starter/src/test/java/io/seata/spring/boot/autoconfigure/PropertiesTest.java\n#\tspring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "committedDate": "2020-08-05T10:48:00Z", "type": "commit"}, {"oid": "89fce4aaa9042e780d472dfd7717031d6c377e14", "url": "https://github.com/seata/seata/commit/89fce4aaa9042e780d472dfd7717031d6c377e14", "message": "DefaultValues\u7c7b\u547d\u540d\u7a7a\u95f4\u8c03\u6574\u3002", "committedDate": "2020-08-05T10:49:32Z", "type": "commit"}, {"oid": "1062504109de3b5740bdf0cb0ee37d1fa43d3abb", "url": "https://github.com/seata/seata/commit/1062504109de3b5740bdf0cb0ee37d1fa43d3abb", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-08-13T01:33:44Z", "type": "commit"}, {"oid": "4fe18f9423722977e60552f50e702f3152981614", "url": "https://github.com/seata/seata/commit/4fe18f9423722977e60552f50e702f3152981614", "message": "\u6dfb\u52a0defaultGlobalTransactionTimeout\u914d\u7f6e\u7684\u63d0\u793a\u4fe1\u606f\u3002", "committedDate": "2020-08-17T10:39:27Z", "type": "commit"}, {"oid": "8d09a91f94ec6b6e152394e38d24157e24788624", "url": "https://github.com/seata/seata/commit/8d09a91f94ec6b6e152394e38d24157e24788624", "message": "Merge branch 'develop' into timeout-global-config", "committedDate": "2020-08-28T02:35:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjgwMw==", "url": "https://github.com/seata/seata/pull/2806#discussion_r519256803", "bodyText": "\u5bf9\u4e8e\u573a\u666f\uff1a \u5168\u5c40\u9ed8\u8ba415\u79d2\uff0c \u6307\u5b9a\u63a5\u53e3\u5e0c\u671b60\u79d2\u3002\u53ef\u548b\u6574\uff1f\n\u6ce8\u89e3\u5e94\u8be5\u9ed8\u8ba4-1\uff0c\u7136\u540e\u8fd9\u91cc\u53d6\u6d88 timeout == DEFAULT_GLOBAL_TRANSACTION_TIMEOUT \u7684\u5224\u65ad\u624d\u5bf9\u3002\nfile.properties:\nclient.tm.defaultGlobalTransactionTimeout=15000\n\n\u4ee3\u7801\u5982\u4e0b:\n    @GlobalTransactional(timeoutMills = 60000, name = \"dubbo-gts-seata-example\")\n    public ObjectResponse handleBusiness(BusinessDTO businessDTO) {\n    }", "author": "ls9527", "createdAt": "2020-11-08T04:57:57Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -160,8 +186,14 @@ public String name() {\n \n                 @Override\n                 public TransactionInfo getTransactionInfo() {\n+                    // reset the value of timeout\n+                    int timeout = globalTrxAnno.timeoutMills();\n+                    if (timeout <= 0 || timeout == DEFAULT_GLOBAL_TRANSACTION_TIMEOUT) {", "originalCommit": "8d09a91f94ec6b6e152394e38d24157e24788624", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1Nzg5Mw==", "url": "https://github.com/seata/seata/pull/2806#discussion_r519257893", "bodyText": "\u5f53\u521d\u662f\u8fd9\u4e48\u5199\u7684\uff0c\u4f46\u662f\u5927\u4f6c\u8bf4\u4f1a\u4e0d\u597d\u7406\u89e3\uff0c\u5c31\u6539\u6210\u73b0\u5728\u8fd9\u6837\u7684\u3002", "author": "wangliang181230", "createdAt": "2020-11-08T05:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NzkyOA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r519257928", "bodyText": "\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u621061\u79d2\u5c31\u884c\u4e86", "author": "wangliang181230", "createdAt": "2020-11-08T05:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1ODIxNA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r519258214", "bodyText": "\u5b9d\u5b9d\u5fc3\u91cc\u82e6\uff0c\u5b9d\u5b9d\u8bf4\u4e0d\u51fa\u3002\nspring\u7684TransactionDefinition\u90fd\u9ed8\u8ba4-1\u4e86\uff0c\u8fd9\u91cc\u5374\u6307\u5b9a60\u79d2\u662f\u7279\u6b8a\u6570\u5b57\u3002\n\u4f46\u6211\u76f8\u4fe1\u6709\u4e00\u5929\u5927\u4f6c\u4f1a\u8e29\u7740\u4e03\u5f69\u7965\u4e91\u628a\u8fd9\u91cc\u6539\u6389\u7684", "author": "ls9527", "createdAt": "2020-11-08T05:19:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI2MDg5OA==", "url": "https://github.com/seata/seata/pull/2806#discussion_r519260898", "bodyText": "\u5b9d\u5b9d\u5fc3\u91cc\u82e6\uff0c\u5b9d\u5b9d\u8bf4\u4e0d\u51fa\u3002\nspring\u7684TransactionDefinition\u90fd\u9ed8\u8ba4-1\u4e86\uff0c\u8fd9\u91cc\u5374\u6307\u5b9a60\u79d2\u662f\u7279\u6b8a\u6570\u5b57\u3002\n\u4f46\u6211\u76f8\u4fe1\u6709\u4e00\u5929\u5927\u4f6c\u4f1a\u8e29\u7740\u4e03\u5f69\u7965\u4e91\u628a\u8fd9\u91cc\u6539\u6389\u7684\n\n\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e0d\u5e94\u8be5\u60f3\u672c\u5730\u4e8b\u52a1\u4e00\u6837\u9ed8\u8ba4\u65e0\u8d85\u65f6\u65f6\u95f4,\u56e0\u4e3a\u5206\u5e03\u5f0f\u4e8b\u52a1\u901a\u5e38\u53d1\u751f\u5728\u8c03\u7528\u94fe\u5f53\u4e2d,\u5982\u679c\u4e8b\u52a1\u8fc7\u4e45\u4e0d\u5b8c\u6210,\u5360\u7528\u7684\u8d44\u6e90\u4f1a\u66f4\u591a,\u5f15\u8d77\u7684\u963b\u585e\u4e5f\u4f1a\u66f4\u591a", "author": "a364176773", "createdAt": "2020-11-08T05:58:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjgwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI2MTA0Mg==", "url": "https://github.com/seata/seata/pull/2806#discussion_r519261042", "bodyText": "\u6709\u8d85\u65f6\u65f6\u95f4\u554a\uff0c  -1\u5c31\u7528\u5168\u5c40\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f460\u79d2\u561b", "author": "ls9527", "createdAt": "2020-11-08T06:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjgwMw=="}], "type": "inlineReview", "revised_code": null}]}