{"pr_number": 2230, "pr_title": "optimize:unify the config style and keep defaults consistent", "pr_createdAt": "2020-02-07T12:29:21Z", "pr_url": "https://github.com/seata/seata/pull/2230", "timeline": [{"oid": "7adc3b7e5e3391aec66521c93793584970de63b6", "url": "https://github.com/seata/seata/commit/7adc3b7e5e3391aec66521c93793584970de63b6", "message": "update config stytle", "committedDate": "2020-02-07T01:57:47Z", "type": "commit"}, {"oid": "56962224e3d953ce3b73014df44f05e1860dfd56", "url": "https://github.com/seata/seata/commit/56962224e3d953ce3b73014df44f05e1860dfd56", "message": "Merge branch 'develop' of https://github.com/seata/seata into config_opt", "committedDate": "2020-02-07T01:58:41Z", "type": "commit"}, {"oid": "3bc5495bd3050f61c2c8732d24631795118a53af", "url": "https://github.com/seata/seata/commit/3bc5495bd3050f61c2c8732d24631795118a53af", "message": "done style format.", "committedDate": "2020-02-07T05:55:46Z", "type": "commit"}, {"oid": "69f26b12dcfc9be1bd0debe99816b99e565e868b", "url": "https://github.com/seata/seata/commit/69f26b12dcfc9be1bd0debe99816b99e565e868b", "message": "done style foramt", "committedDate": "2020-02-07T05:56:12Z", "type": "commit"}, {"oid": "ea4302f4e8004aee911efc2665f4ea34f3dbb084", "url": "https://github.com/seata/seata/commit/ea4302f4e8004aee911efc2665f4ea34f3dbb084", "message": "remove redundant code.", "committedDate": "2020-02-07T05:59:17Z", "type": "commit"}, {"oid": "dbe48d67dbc4f421ffcbbb4f1a4075488cd10939", "url": "https://github.com/seata/seata/commit/dbe48d67dbc4f421ffcbbb4f1a4075488cd10939", "message": "update config stytle", "committedDate": "2020-02-07T06:01:34Z", "type": "commit"}, {"oid": "f37711e0c397c9066cbc734d25ceaeaeb7c0b26b", "url": "https://github.com/seata/seata/commit/f37711e0c397c9066cbc734d25ceaeaeb7c0b26b", "message": "Merge remote-tracking branch 'origin/config_opt' into config_opt", "committedDate": "2020-02-07T06:01:51Z", "type": "commit"}, {"oid": "4d9cb7dc1ba3aa50b44961fb6b3163953b645362", "url": "https://github.com/seata/seata/commit/4d9cb7dc1ba3aa50b44961fb6b3163953b645362", "message": "keep defaults consistent", "committedDate": "2020-02-07T12:22:45Z", "type": "commit"}, {"oid": "5872e76e1eab80385299d0c2e70796c630d94287", "url": "https://github.com/seata/seata/commit/5872e76e1eab80385299d0c2e70796c630d94287", "message": "Update AsyncWorker.java", "committedDate": "2020-02-07T12:32:46Z", "type": "commit"}, {"oid": "5e7e7b958872c96be700d93238c5b2078ff2066f", "url": "https://github.com/seata/seata/commit/5e7e7b958872c96be700d93238c5b2078ff2066f", "message": "fix UT", "committedDate": "2020-02-07T12:54:39Z", "type": "commit"}, {"oid": "3185d00baf8047bd146c2da77ea8847a612e6bf3", "url": "https://github.com/seata/seata/commit/3185d00baf8047bd146c2da77ea8847a612e6bf3", "message": "Merge remote-tracking branch 'origin/config_opt' into config_opt", "committedDate": "2020-02-07T12:56:18Z", "type": "commit"}, {"oid": "4a0522e4b77ad0124d29aabab40a3112ae18deb5", "url": "https://github.com/seata/seata/commit/4a0522e4b77ad0124d29aabab40a3112ae18deb5", "message": "code format", "committedDate": "2020-02-07T12:58:20Z", "type": "commit"}, {"oid": "22c5c2dfc21b61275fe8de82f156da5e06ae6380", "url": "https://github.com/seata/seata/commit/22c5c2dfc21b61275fe8de82f156da5e06ae6380", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-07T12:58:44Z", "type": "commit"}, {"oid": "aef5b374b8ead02049eef3653c71fdd096fbdb56", "url": "https://github.com/seata/seata/commit/aef5b374b8ead02049eef3653c71fdd096fbdb56", "message": "code format", "committedDate": "2020-02-07T13:00:22Z", "type": "commit"}, {"oid": "b99b16e397a82cc77f87034227e38a75efcc1647", "url": "https://github.com/seata/seata/commit/b99b16e397a82cc77f87034227e38a75efcc1647", "message": "Merge remote-tracking branch 'origin/config_opt' into config_opt", "committedDate": "2020-02-07T13:01:07Z", "type": "commit"}, {"oid": "c7a3cd815794f22c223f70110e77a0e2d5296696", "url": "https://github.com/seata/seata/commit/c7a3cd815794f22c223f70110e77a0e2d5296696", "message": "fix UT", "committedDate": "2020-02-07T13:54:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDM1Ng==", "url": "https://github.com/seata/seata/pull/2230#discussion_r376700356", "bodyText": "true-> DEFALT_CLIENT_REPORT_SUCCESS_ENABLE\nand recommended that the default value of keys be put into a special class", "author": "zjinlei", "createdAt": "2020-02-08T09:54:37Z", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java", "diffHunk": "@@ -43,7 +42,7 @@\n     private String tablePrefix = \"seata_\";\n     private String dbType;\n     private SagaTransactionalTemplate sagaTransactionalTemplate;\n-    private boolean                   rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);\n+    private boolean rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);", "originalCommit": "01cc604672ee69d3510435b41483287c3ff8c767", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0NDc4MA==", "url": "https://github.com/seata/seata/pull/2230#discussion_r376744780", "bodyText": "done", "author": "xingfudeshi", "createdAt": "2020-02-09T00:23:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "639f0b4c159dca31e684d3b222ac31fef81e5770", "chunk": "diff --git a/saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java b/saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java\nindex 21279cdbc..04273f06c 100644\n--- a/saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java\n+++ b/saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java\n\n@@ -42,7 +44,7 @@ public class DbStateMachineConfig extends DefaultStateMachineConfig implements D\n     private String tablePrefix = \"seata_\";\n     private String dbType;\n     private SagaTransactionalTemplate sagaTransactionalTemplate;\n-    private boolean rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);\n+    private boolean rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE);\n \n     public static String getDbTypeFromDataSource(DataSource dataSource) throws SQLException {\n         try (Connection con = dataSource.getConnection()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDkyMg==", "url": "https://github.com/seata/seata/pull/2230#discussion_r376700922", "bodyText": "use constant instead 127.0.0.1:8091", "author": "zjinlei", "createdAt": "2020-02-08T10:07:05Z", "path": "seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java", "diffHunk": "@@ -78,4 +81,14 @@ public ServiceProperties setDisableGlobalTransaction(boolean disableGlobalTransa\n         this.disableGlobalTransaction = disableGlobalTransaction;\n         return this;\n     }\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        if (0 == vgroupMapping.size()) {\n+            vgroupMapping.put(\"my_test_tx_group\", \"default\");\n+        }\n+        if (0 == grouplist.size()) {\n+            grouplist.put(\"default\", \"127.0.0.1:8091\");", "originalCommit": "01cc604672ee69d3510435b41483287c3ff8c767", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "639f0b4c159dca31e684d3b222ac31fef81e5770", "chunk": "diff --git a/seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java b/seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java\nindex d6f3251ff..e8506d7b6 100644\n--- a/seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java\n+++ b/seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java\n\n@@ -85,10 +88,10 @@ public class ServiceProperties implements InitializingBean {\n     @Override\n     public void afterPropertiesSet() throws Exception {\n         if (0 == vgroupMapping.size()) {\n-            vgroupMapping.put(\"my_test_tx_group\", \"default\");\n+            vgroupMapping.put(DEFAULT_TX_GROUP, DEFAULT_TC_CLUSTER);\n         }\n         if (0 == grouplist.size()) {\n-            grouplist.put(\"default\", \"127.0.0.1:8091\");\n+            grouplist.put(DEFAULT_TC_CLUSTER, DEFAULT_GROUPLIST);\n         }\n     }\n }\n"}}, {"oid": "c7a3cd815794f22c223f70110e77a0e2d5296696", "url": "https://github.com/seata/seata/commit/c7a3cd815794f22c223f70110e77a0e2d5296696", "message": "fix UT", "committedDate": "2020-02-07T13:54:21Z", "type": "forcePushed"}, {"oid": "5807ac8caf91b7d74a0414fcf3a3cd1fea0627af", "url": "https://github.com/seata/seata/commit/5807ac8caf91b7d74a0414fcf3a3cd1fea0627af", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-08T14:56:00Z", "type": "commit"}, {"oid": "284386ee5d343753525e5c57c4bb0efdf49f0c7e", "url": "https://github.com/seata/seata/commit/284386ee5d343753525e5c57c4bb0efdf49f0c7e", "message": "fix item name", "committedDate": "2020-02-08T15:11:19Z", "type": "commit"}, {"oid": "b77fa482712d739d7e30e142796f46afe9bf89fb", "url": "https://github.com/seata/seata/commit/b77fa482712d739d7e30e142796f46afe9bf89fb", "message": "add DefaultValues", "committedDate": "2020-02-09T00:08:39Z", "type": "commit"}, {"oid": "639f0b4c159dca31e684d3b222ac31fef81e5770", "url": "https://github.com/seata/seata/commit/639f0b4c159dca31e684d3b222ac31fef81e5770", "message": "fix review", "committedDate": "2020-02-09T00:23:40Z", "type": "commit"}, {"oid": "87a83861e094c67b17166348ee9ec4c8fabd38bf", "url": "https://github.com/seata/seata/commit/87a83861e094c67b17166348ee9ec4c8fabd38bf", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-12T07:28:34Z", "type": "commit"}, {"oid": "5ffff3d533b51912819bfc0403129f5db8841486", "url": "https://github.com/seata/seata/commit/5ffff3d533b51912819bfc0403129f5db8841486", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-12T09:33:26Z", "type": "commit"}, {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "url": "https://github.com/seata/seata/commit/3000588ac7281abbe4686bb0a4d8c317d00e1618", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-12T12:25:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3ODYyNQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378278625", "bodyText": "Whether these changes can be undo?", "author": "zjinlei", "createdAt": "2020-02-12T14:19:20Z", "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "diffHunk": "@@ -59,8 +59,8 @@\n     private static final String SESSION_TIMEOUT_KEY = \"session.timeout\";\n     private static final String CONNECT_TIMEOUT_KEY = \"connect.timeout\";\n     private static final int THREAD_POOL_NUM = 1;\n-    private static final int DEFAULT_SESSION_TIMEOUT = 6000;\n-    private static final int DEFAULT_CONNECT_TIMEOUT = 2000;\n+    public static final int DEFAULT_SESSION_TIMEOUT = 6000;\n+    public static final int DEFAULT_CONNECT_TIMEOUT = 2000;", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java b/config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java\nindex c247389f7..459acf2a0 100644\n--- a/config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java\n+++ b/config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java\n\n@@ -59,8 +59,8 @@ public class ZookeeperConfiguration extends AbstractConfiguration {\n     private static final String SESSION_TIMEOUT_KEY = \"session.timeout\";\n     private static final String CONNECT_TIMEOUT_KEY = \"connect.timeout\";\n     private static final int THREAD_POOL_NUM = 1;\n-    public static final int DEFAULT_SESSION_TIMEOUT = 6000;\n-    public static final int DEFAULT_CONNECT_TIMEOUT = 2000;\n+    private static final int DEFAULT_SESSION_TIMEOUT = 6000;\n+    private static final int DEFAULT_CONNECT_TIMEOUT = 2000;\n     private static final String FILE_CONFIG_KEY_PREFIX = FILE_ROOT_CONFIG + FILE_CONFIG_SPLIT_CHAR + CONFIG_TYPE\n         + FILE_CONFIG_SPLIT_CHAR;\n     private static final ExecutorService CONFIG_EXECUTOR = new ThreadPoolExecutor(THREAD_POOL_NUM, THREAD_POOL_NUM,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4Mzc2OA==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378283768", "bodyText": "TRANSPORT_HEARTBEAT->DEFAULT_TRANSPORT_HEARTBEAT", "author": "zjinlei", "createdAt": "2020-02-12T14:27:35Z", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;\n+    public static final boolean DEFAULT_CLIENT_TABLE_META_CHECK_ENABLE = false;\n+    /**\n+     * Shutdown timeout default 3s\n+     */\n+    public static final int DEFAULT_SHUTDOWN_TIMEOUT_SEC = 3;\n+    public static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n+    public static final int DEFAULT_BOSS_THREAD_SIZE = 1;\n+\n+\n+    public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n+    public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+\n+    public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n+    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n+\n+    public static final boolean TRANSPORT_HEARTBEAT = true;", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/DefaultValues.java b/core/src/main/java/io/seata/core/constants/DefaultValues.java\nindex 37bbfda4e..53a553325 100644\n--- a/core/src/main/java/io/seata/core/constants/DefaultValues.java\n+++ b/core/src/main/java/io/seata/core/constants/DefaultValues.java\n\n@@ -37,18 +37,29 @@ public class DefaultValues {\n \n     public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n     public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;\n+\n \n     public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n-    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n     public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n \n-    public static final boolean TRANSPORT_HEARTBEAT = true;\n+    public static final boolean DEFAULT_TRANSPORT_HEARTBEAT = true;\n     public static final boolean DEFAULT_TRANSACTION_UNDO_DATA_VALIDATION = true;\n     public static final String DEFAULT_TRANSACTION_UNDO_LOG_SERIALIZATION = \"jackson\";\n     /**\n-     * The constant TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     * The constant  DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    /**\n+     * The constant DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE.\n      */\n-    public static final String TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    public static final String DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE = \"global_table\";\n+\n+    /**\n+     * The constant DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE = \"branch_table\";\n \n     public static final int DEFAULT_TM_COMMIT_RETRY_COUNT = 1;\n     public static final int DEFAULT_TM_ROLLBACK_RETRY_COUNT = 1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NDkzOA==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378284938", "bodyText": "TRANSACTION_UNDO_LOG_DEFAULT_TABLE->DEFAULT_TRANSACTION_UNDO_LOG_TABLE", "author": "zjinlei", "createdAt": "2020-02-12T14:29:20Z", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;\n+    public static final boolean DEFAULT_CLIENT_TABLE_META_CHECK_ENABLE = false;\n+    /**\n+     * Shutdown timeout default 3s\n+     */\n+    public static final int DEFAULT_SHUTDOWN_TIMEOUT_SEC = 3;\n+    public static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n+    public static final int DEFAULT_BOSS_THREAD_SIZE = 1;\n+\n+\n+    public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n+    public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+\n+    public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n+    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n+\n+    public static final boolean TRANSPORT_HEARTBEAT = true;\n+    public static final boolean DEFAULT_TRANSACTION_UNDO_DATA_VALIDATION = true;\n+    public static final String DEFAULT_TRANSACTION_UNDO_LOG_SERIALIZATION = \"jackson\";\n+    /**\n+     * The constant TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     */\n+    public static final String TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/DefaultValues.java b/core/src/main/java/io/seata/core/constants/DefaultValues.java\nindex 37bbfda4e..53a553325 100644\n--- a/core/src/main/java/io/seata/core/constants/DefaultValues.java\n+++ b/core/src/main/java/io/seata/core/constants/DefaultValues.java\n\n@@ -37,18 +37,29 @@ public class DefaultValues {\n \n     public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n     public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;\n+\n \n     public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n-    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n     public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n \n-    public static final boolean TRANSPORT_HEARTBEAT = true;\n+    public static final boolean DEFAULT_TRANSPORT_HEARTBEAT = true;\n     public static final boolean DEFAULT_TRANSACTION_UNDO_DATA_VALIDATION = true;\n     public static final String DEFAULT_TRANSACTION_UNDO_LOG_SERIALIZATION = \"jackson\";\n     /**\n-     * The constant TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     * The constant  DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    /**\n+     * The constant DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE.\n      */\n-    public static final String TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    public static final String DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE = \"global_table\";\n+\n+    /**\n+     * The constant DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE = \"branch_table\";\n \n     public static final int DEFAULT_TM_COMMIT_RETRY_COUNT = 1;\n     public static final int DEFAULT_TM_ROLLBACK_RETRY_COUNT = 1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NjcxOQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378286719", "bodyText": "move to DefaultValulues", "author": "zjinlei", "createdAt": "2020-02-12T14:32:10Z", "path": "core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java", "diffHunk": "@@ -43,17 +47,15 @@\n     private static final int MAX_CHECK_ALIVE_RETRY = 300;\n     private static final int CHECK_ALIVE_INTERNAL = 10;\n     private static final String SOCKET_ADDRESS_START_CHAR = \"/\";\n-    private static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n     private static final long MAX_ACQUIRE_CONN_MILLS = 60 * 1000L;\n-    private static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n-    private static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n     private static final String RPC_DISPATCH_THREAD_PREFIX = \"rpcDispatch\";\n     private static final int DEFAULT_MAX_POOL_ACTIVE = 1;\n     private static final int DEFAULT_MIN_POOL_IDLE = 0;\n     private static final boolean DEFAULT_POOL_TEST_BORROW = true;\n     private static final boolean DEFAULT_POOL_TEST_RETURN = true;\n     private static final boolean DEFAULT_POOL_LIFO = true;\n-    private static final boolean ENABLE_CLIENT_BATCH_SEND_REQUEST = CONFIG.getBoolean(ConfigurationKeys.ENABLE_CLIENT_BATCH_SEND_REQUEST, true);\n+    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java b/core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java\nindex 7411e7153..c27dd4aee 100644\n--- a/core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java\n+++ b/core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java\n\n@@ -54,7 +55,6 @@ public class NettyClientConfig extends NettyBaseConfig {\n     private static final boolean DEFAULT_POOL_TEST_BORROW = true;\n     private static final boolean DEFAULT_POOL_TEST_RETURN = true;\n     private static final boolean DEFAULT_POOL_LIFO = true;\n-    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;\n     private static final boolean ENABLE_CLIENT_BATCH_SEND_REQUEST = CONFIG.getBoolean(ConfigurationKeys.ENABLE_CLIENT_BATCH_SEND_REQUEST, DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST);\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4OTg4Mg==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378289882", "bodyText": "?", "author": "zjinlei", "createdAt": "2020-02-12T14:37:10Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java", "diffHunk": "@@ -56,7 +59,7 @@\n \n     /**\n      * template of check sql\n-     *\n+     * <p>", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e72bb1eb8a04a3eac083a0e9207e7d4666eab37f", "chunk": "diff --git a/rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java b/rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java\nindex eac716723..3b33d1f81 100644\n--- a/rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java\n+++ b/rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java\n\n@@ -59,7 +59,6 @@ public abstract class AbstractUndoExecutor {\n \n     /**\n      * template of check sql\n-     * <p>\n      * TODO support multiple primary key\n      */\n     private static final String CHECK_SQL_TEMPLATE = \"SELECT * FROM %s WHERE %s in (%s)\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MzcwNQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378293705", "bodyText": "@slievrly @xingfudeshi Whether to change to default false in 1.1.0?", "author": "zjinlei", "createdAt": "2020-02-12T14:42:59Z", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NTAzMQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378645031", "bodyText": "I think it can be set to false as default.", "author": "xingfudeshi", "createdAt": "2020-02-13T04:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MzcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/DefaultValues.java b/core/src/main/java/io/seata/core/constants/DefaultValues.java\nindex 37bbfda4e..53a553325 100644\n--- a/core/src/main/java/io/seata/core/constants/DefaultValues.java\n+++ b/core/src/main/java/io/seata/core/constants/DefaultValues.java\n\n@@ -37,18 +37,29 @@ public class DefaultValues {\n \n     public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n     public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;\n+\n \n     public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n-    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n     public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n \n-    public static final boolean TRANSPORT_HEARTBEAT = true;\n+    public static final boolean DEFAULT_TRANSPORT_HEARTBEAT = true;\n     public static final boolean DEFAULT_TRANSACTION_UNDO_DATA_VALIDATION = true;\n     public static final String DEFAULT_TRANSACTION_UNDO_LOG_SERIALIZATION = \"jackson\";\n     /**\n-     * The constant TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     * The constant  DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    /**\n+     * The constant DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE.\n      */\n-    public static final String TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    public static final String DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE = \"global_table\";\n+\n+    /**\n+     * The constant DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE = \"branch_table\";\n \n     public static final int DEFAULT_TM_COMMIT_RETRY_COUNT = 1;\n     public static final int DEFAULT_TM_ROLLBACK_RETRY_COUNT = 1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5OTA3MA==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378299070", "bodyText": "NIO_WORKER_THREAD_PREFIX-> DEFAULT_NIO_WORKER_THREAD_PREFIX", "author": "zjinlei", "createdAt": "2020-02-12T14:51:13Z", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;\n+    public static final boolean DEFAULT_CLIENT_TABLE_META_CHECK_ENABLE = false;\n+    /**\n+     * Shutdown timeout default 3s\n+     */\n+    public static final int DEFAULT_SHUTDOWN_TIMEOUT_SEC = 3;\n+    public static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n+    public static final int DEFAULT_BOSS_THREAD_SIZE = 1;\n+\n+\n+    public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n+    public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+\n+    public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n+    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/DefaultValues.java b/core/src/main/java/io/seata/core/constants/DefaultValues.java\nindex 37bbfda4e..53a553325 100644\n--- a/core/src/main/java/io/seata/core/constants/DefaultValues.java\n+++ b/core/src/main/java/io/seata/core/constants/DefaultValues.java\n\n@@ -37,18 +37,29 @@ public class DefaultValues {\n \n     public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n     public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;\n+\n \n     public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n-    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n     public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n \n-    public static final boolean TRANSPORT_HEARTBEAT = true;\n+    public static final boolean DEFAULT_TRANSPORT_HEARTBEAT = true;\n     public static final boolean DEFAULT_TRANSACTION_UNDO_DATA_VALIDATION = true;\n     public static final String DEFAULT_TRANSACTION_UNDO_LOG_SERIALIZATION = \"jackson\";\n     /**\n-     * The constant TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     * The constant  DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    /**\n+     * The constant DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE.\n      */\n-    public static final String TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";\n+    public static final String DEFAULT_STORE_DB_GLOBAL_DEFAULT_TABLE = \"global_table\";\n+\n+    /**\n+     * The constant DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE.\n+     */\n+    public static final String DEFAULT_STORE_DB_BRANCH_DEFAULT_TABLE = \"branch_table\";\n \n     public static final int DEFAULT_TM_COMMIT_RETRY_COUNT = 1;\n     public static final int DEFAULT_TM_ROLLBACK_RETRY_COUNT = 1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMwNDI3Nw==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378304277", "bodyText": "Inconsistent with the original value", "author": "zjinlei", "createdAt": "2020-02-12T14:58:45Z", "path": "core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java", "diffHunk": "@@ -160,7 +163,7 @@\n             default:\n                 throw new IllegalArgumentException(\"unsupported.\");\n         }\n-        boolean enableHeartbeat = CONFIG.getBoolean(ConfigurationKeys.TRANSPORT_HEARTBEAT, false);\n+        boolean enableHeartbeat = CONFIG.getBoolean(ConfigurationKeys.TRANSPORT_HEARTBEAT, TRANSPORT_HEARTBEAT);", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java b/core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java\nindex c47cfac37..c934128b0 100644\n--- a/core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java\n+++ b/core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java\n\n@@ -163,7 +161,7 @@ public class NettyBaseConfig {\n             default:\n                 throw new IllegalArgumentException(\"unsupported.\");\n         }\n-        boolean enableHeartbeat = CONFIG.getBoolean(ConfigurationKeys.TRANSPORT_HEARTBEAT, TRANSPORT_HEARTBEAT);\n+        boolean enableHeartbeat = CONFIG.getBoolean(ConfigurationKeys.TRANSPORT_HEARTBEAT, false);\n         if (enableHeartbeat) {\n             MAX_WRITE_IDLE_SECONDS = DEFAULT_WRITE_IDLE_SECONDS;\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMwOTA0MQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378309041", "bodyText": "move to DefaultValues", "author": "zjinlei", "createdAt": "2020-02-12T15:06:01Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -47,7 +47,8 @@\n  *\n  * @author slievrly\n  */\n-public class GlobalTransactionalInterceptor implements ConfigurationChangeListener,MethodInterceptor {\n+public class GlobalTransactionalInterceptor implements ConfigurationChangeListener, MethodInterceptor {\n+    public static final boolean DEFAULT_DISABLE_GLOBAL_TRANSACTION = false;", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\nindex 17838c91d..501fce48f 100644\n--- a/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n+++ b/spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n\n@@ -42,13 +42,14 @@ import org.springframework.aop.support.AopUtils;\n import org.springframework.core.BridgeMethodResolver;\n import org.springframework.util.ClassUtils;\n \n+import static io.seata.core.constants.DefaultValues.DEFAULT_DISABLE_GLOBAL_TRANSACTION;\n+\n /**\n  * The type Global transactional interceptor.\n  *\n  * @author slievrly\n  */\n public class GlobalTransactionalInterceptor implements ConfigurationChangeListener, MethodInterceptor {\n-    public static final boolean DEFAULT_DISABLE_GLOBAL_TRANSACTION = false;\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(GlobalTransactionalInterceptor.class);\n     private static final FailureHandler DEFAULT_FAIL_HANDLER = new DefaultFailureHandlerImpl();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyNDE0MQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r378624141", "bodyText": "globalTable->global_table, branchTable->branch_table\nand move them to DefaultValues.java", "author": "zjinlei", "createdAt": "2020-02-13T02:42:56Z", "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -154,22 +162,22 @@\n     /**\n      * The constant STORE_DB_GLOBAL_TABLE.\n      */\n-    public static final String STORE_DB_GLOBAL_TABLE = STORE_DB_PREFIX + \"global.table\";\n+    public static final String STORE_DB_GLOBAL_TABLE = STORE_DB_PREFIX + \"globalTable\";\n \n     /**\n      * The constant STORE_DB_BRANCH_TABLE.\n      */\n-    public static final String STORE_DB_BRANCH_TABLE = STORE_DB_PREFIX + \"branch.table\";\n+    public static final String STORE_DB_BRANCH_TABLE = STORE_DB_PREFIX + \"branchTable\";\n \n     /**\n      * The constant STORE_DB_GLOBAL_DEFAULT_TABLE.\n      */\n-    public static final String STORE_DB_GLOBAL_DEFAULT_TABLE = \"global_table\";\n+    public static final String STORE_DB_GLOBAL_DEFAULT_TABLE = \"globalTable\";\n \n     /**\n      * The constant STORE_DB_BRANCH_DEFAULT_TABLE.\n      */\n-    public static final String STORE_DB_BRANCH_DEFAULT_TABLE = \"branch_table\";\n+    public static final String STORE_DB_BRANCH_DEFAULT_TABLE = \"branchTable\";", "originalCommit": "3000588ac7281abbe4686bb0a4d8c317d00e1618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java b/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\nindex abc5b8a35..441ce1dbf 100644\n--- a/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\n+++ b/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\n\n@@ -169,16 +169,6 @@ public class ConfigurationKeys {\n      */\n     public static final String STORE_DB_BRANCH_TABLE = STORE_DB_PREFIX + \"branchTable\";\n \n-    /**\n-     * The constant STORE_DB_GLOBAL_DEFAULT_TABLE.\n-     */\n-    public static final String STORE_DB_GLOBAL_DEFAULT_TABLE = \"globalTable\";\n-\n-    /**\n-     * The constant STORE_DB_BRANCH_DEFAULT_TABLE.\n-     */\n-    public static final String STORE_DB_BRANCH_DEFAULT_TABLE = \"branchTable\";\n-\n     /**\n      * The constant STORE_DB_DATASOURCE_TYPE.\n      */\n"}}, {"oid": "f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "url": "https://github.com/seata/seata/commit/f882c929d7f2f81adbd8cd80deda9cbd5ea9d7bd", "message": "fix review", "committedDate": "2020-02-13T04:18:41Z", "type": "commit"}, {"oid": "e72bb1eb8a04a3eac083a0e9207e7d4666eab37f", "url": "https://github.com/seata/seata/commit/e72bb1eb8a04a3eac083a0e9207e7d4666eab37f", "message": "fix conflicting files.", "committedDate": "2020-02-13T04:22:37Z", "type": "commit"}, {"oid": "c4a3a6c611e6e3edaeecd81b6640ba36168e2eea", "url": "https://github.com/seata/seata/commit/c4a3a6c611e6e3edaeecd81b6640ba36168e2eea", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-13T04:22:42Z", "type": "commit"}, {"oid": "dc22925f1df2dec281967ba39efeaa273972efef", "url": "https://github.com/seata/seata/commit/dc22925f1df2dec281967ba39efeaa273972efef", "message": "fix UT.", "committedDate": "2020-02-13T04:35:16Z", "type": "commit"}, {"oid": "3787b48f1a08f98b8a7a74c5ba8560405d3a5fd8", "url": "https://github.com/seata/seata/commit/3787b48f1a08f98b8a7a74c5ba8560405d3a5fd8", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-13T08:27:58Z", "type": "commit"}, {"oid": "eaaee42a8db8ca58df3b912a43fc9aa1a0dec353", "url": "https://github.com/seata/seata/commit/eaaee42a8db8ca58df3b912a43fc9aa1a0dec353", "message": "fix review", "committedDate": "2020-02-13T11:13:10Z", "type": "commit"}, {"oid": "d95aa0a174ae0b57076ddb7ebe4a6cfa51afba11", "url": "https://github.com/seata/seata/commit/d95aa0a174ae0b57076ddb7ebe4a6cfa51afba11", "message": "remove useless config item for spring-boot-starter", "committedDate": "2020-02-14T05:09:12Z", "type": "commit"}, {"oid": "2ae7ac033a9f1af44cc94e1614c79804d4134475", "url": "https://github.com/seata/seata/commit/2ae7ac033a9f1af44cc94e1614c79804d4134475", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-14T09:01:06Z", "type": "commit"}, {"oid": "61ff3157526ca9e443f2072abec3137afee279b2", "url": "https://github.com/seata/seata/commit/61ff3157526ca9e443f2072abec3137afee279b2", "message": "remove useless config item for spring-boot-starter", "committedDate": "2020-02-14T10:48:04Z", "type": "commit"}, {"oid": "765c89788251a97abc121fa761e2c2bea8287024", "url": "https://github.com/seata/seata/commit/765c89788251a97abc121fa761e2c2bea8287024", "message": "Merge remote-tracking branch 'origin/config_opt' into config_opt", "committedDate": "2020-02-14T10:48:22Z", "type": "commit"}, {"oid": "692bbfbee5301cc8a531f39b49d39e65ee52fb70", "url": "https://github.com/seata/seata/commit/692bbfbee5301cc8a531f39b49d39e65ee52fb70", "message": "Revert \"remove useless config item for spring-boot-starter\"\n\nThis reverts commit d95aa0a1", "committedDate": "2020-02-14T10:49:09Z", "type": "commit"}, {"oid": "c463053a4d5d30e06164eee918dfb29c7dc4bcd7", "url": "https://github.com/seata/seata/commit/c463053a4d5d30e06164eee918dfb29c7dc4bcd7", "message": "Merge branch 'develop' into config_opt", "committedDate": "2020-02-14T13:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1ODAxNw==", "url": "https://github.com/seata/seata/pull/2230#discussion_r379458017", "bodyText": "lockTable-> lock_table\nand move to DeafultValues", "author": "zjinlei", "createdAt": "2020-02-14T14:27:36Z", "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -203,27 +201,27 @@\n     /**\n      * The constant STORE_DB_MIN_CONN.\n      */\n-    public static final String STORE_DB_MIN_CONN = STORE_DB_PREFIX + \"min-conn\";\n+    public static final String STORE_DB_MIN_CONN = STORE_DB_PREFIX + \"minConn\";\n \n     /**\n      * The constant STORE_DB_MAX_CONN.\n      */\n-    public static final String STORE_DB_MAX_CONN = STORE_DB_PREFIX + \"max-conn\";\n+    public static final String STORE_DB_MAX_CONN = STORE_DB_PREFIX + \"maxConn\";\n \n     /**\n      * The constant STORE_DB_LOG_QUERY_LIMIT.\n      */\n-    public static final String STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + \"query-limit\";\n+    public static final String STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + \"queryLimit\";\n \n     /**\n      * The constant LOCK_DB_TABLE.\n      */\n-    public static final String LOCK_DB_TABLE = STORE_DB_PREFIX + \"lock-table\";\n+    public static final String LOCK_DB_TABLE = STORE_DB_PREFIX + \"lockTable\";\n \n     /**\n      * The constant LOCK_DB_DEFAULT_TABLE.\n      */\n-    public static final String LOCK_DB_DEFAULT_TABLE = \"lock_table\";\n+    public static final String LOCK_DB_DEFAULT_TABLE = \"lockTable\";", "originalCommit": "c463053a4d5d30e06164eee918dfb29c7dc4bcd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4NjIzNQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r379486235", "bodyText": "great found.", "author": "slievrly", "createdAt": "2020-02-14T15:18:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1ODAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "f48a2efe91dbe11bfa12e3d6d0a8fdf887c349c8", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java b/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\nindex 441ce1dbf..733d460bb 100644\n--- a/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\n+++ b/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\n\n@@ -221,7 +221,7 @@ public class ConfigurationKeys {\n     /**\n      * The constant LOCK_DB_DEFAULT_TABLE.\n      */\n-    public static final String LOCK_DB_DEFAULT_TABLE = \"lockTable\";\n+    public static final String LOCK_DB_DEFAULT_TABLE = \"lock_table\";\n \n     /**\n      * The constant RECOVERY_PREFIX.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4MDU1MQ==", "url": "https://github.com/seata/seata/pull/2230#discussion_r379480551", "bodyText": "internal-> interval\nMultiple places need to be modified", "author": "zjinlei", "createdAt": "2020-02-14T15:08:16Z", "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -88,51 +88,59 @@\n     /**\n      * The constant CLIENT_ASYNC_COMMIT_BUFFER_LIMIT.\n      */\n-    public static final String CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = CLIENT_RM_PREFIX + \"async.commit.buffer.limit\";\n+    public static final String CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = CLIENT_RM_PREFIX + \"asyncCommitBufferLimit\";\n+    /**\n+     * The constant CLIENT_RM_LOCK_PREFIX.\n+     */\n+    public static final String CLIENT_RM_LOCK_PREFIX = CLIENT_RM_PREFIX + \"lock.\";\n+\n     /**\n      * The constant CLIENT_LOCK_RETRY_TIMES.\n      */\n-    public static final String CLIENT_LOCK_RETRY_TIMES = CLIENT_RM_PREFIX + \"lock.retry.times\";\n+    public static final String CLIENT_LOCK_RETRY_TIMES = CLIENT_RM_LOCK_PREFIX + \"retryTimes\";\n     /**\n      * The constant CLIENT_LOCK_RETRY_INTERNAL.\n      */\n-    public static final String CLIENT_LOCK_RETRY_INTERNAL = CLIENT_RM_PREFIX + \"lock.retry.internal\";\n+    public static final String CLIENT_LOCK_RETRY_INTERNAL = CLIENT_RM_LOCK_PREFIX + \"retryInternal\";", "originalCommit": "c463053a4d5d30e06164eee918dfb29c7dc4bcd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f48a2efe91dbe11bfa12e3d6d0a8fdf887c349c8", "chunk": "diff --git a/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java b/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\nindex 441ce1dbf..733d460bb 100644\n--- a/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\n+++ b/core/src/main/java/io/seata/core/constants/ConfigurationKeys.java\n\n@@ -99,9 +99,9 @@ public class ConfigurationKeys {\n      */\n     public static final String CLIENT_LOCK_RETRY_TIMES = CLIENT_RM_LOCK_PREFIX + \"retryTimes\";\n     /**\n-     * The constant CLIENT_LOCK_RETRY_INTERNAL.\n+     * The constant CLIENT_LOCK_RETRY_INTERVAL.\n      */\n-    public static final String CLIENT_LOCK_RETRY_INTERNAL = CLIENT_RM_LOCK_PREFIX + \"retryInternal\";\n+    public static final String CLIENT_LOCK_RETRY_INTERVAL = CLIENT_RM_LOCK_PREFIX + \"retryInterval\";\n     /**\n      * The constant CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT.\n      */\n"}}, {"oid": "f48a2efe91dbe11bfa12e3d6d0a8fdf887c349c8", "url": "https://github.com/seata/seata/commit/f48a2efe91dbe11bfa12e3d6d0a8fdf887c349c8", "message": "fix internal->interval", "committedDate": "2020-02-15T03:19:07Z", "type": "commit"}, {"oid": "b84abc8fda7fc07f68fb740de34912aa80980b93", "url": "https://github.com/seata/seata/commit/b84abc8fda7fc07f68fb740de34912aa80980b93", "message": "Merge remote-tracking branch 'origin/config_opt' into config_opt", "committedDate": "2020-02-15T03:19:22Z", "type": "commit"}, {"oid": "232adb1d02290c0e47c7721bfc9e9cade1b82df7", "url": "https://github.com/seata/seata/commit/232adb1d02290c0e47c7721bfc9e9cade1b82df7", "message": "remove item to DefaultValues", "committedDate": "2020-02-15T06:03:53Z", "type": "commit"}, {"oid": "fc81c2bda97f9c5ad1d620b2389477a58f835208", "url": "https://github.com/seata/seata/commit/fc81c2bda97f9c5ad1d620b2389477a58f835208", "message": "remove redundant default", "committedDate": "2020-02-15T09:41:55Z", "type": "commit"}]}