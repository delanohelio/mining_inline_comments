{"pr_number": 2210, "pr_title": "bugfix: retry expired commit and rollback globalSession can't be removed", "pr_createdAt": "2020-01-20T05:14:23Z", "pr_url": "https://github.com/seata/seata/pull/2210", "timeline": [{"oid": "a9ef67d272dd2cab6fb4a452e9f24e8762a03cfb", "url": "https://github.com/seata/seata/commit/a9ef67d272dd2cab6fb4a452e9f24e8762a03cfb", "message": "bugfix: retry expired commit and rollback globalSession can't be removed\n\nSigned-off-by: slievrly <slievrly@163.com>", "committedDate": "2020-01-20T05:12:59Z", "type": "commit"}, {"oid": "b95d88d897ea1c5572fdb973237b4fbe3837d10b", "url": "https://github.com/seata/seata/commit/b95d88d897ea1c5572fdb973237b4fbe3837d10b", "message": "bugfix: retry expired commit and rollback globalSession can't be removed\n\nSigned-off-by: slievrly <slievrly@163.com>", "committedDate": "2020-01-20T07:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2Nzk4OQ==", "url": "https://github.com/seata/seata/pull/2210#discussion_r368567989", "bodyText": "only clean in memory, how about root.data?", "author": "zjinlei", "createdAt": "2020-01-20T14:13:29Z", "path": "server/src/test/java/io/seata/server/coordinator/DefaultCoordinatorTest.java", "diffHunk": "@@ -136,45 +135,46 @@ public void test_handleRetryRollbacking() throws TransactionException, Interrupt\n     }\n \n     @Test\n-    public void test_handleRetryRollbackingTimeOut() throws TransactionException, InterruptedException, NoSuchFieldException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {\n+    public void test_handleRetryRollbackingTimeOut() throws TransactionException, InterruptedException, NoSuchFieldException, IllegalAccessException {\n         defaultCoordinator = new DefaultCoordinator(serverMessageSender);\n         String xid = core.begin(applicationId, txServiceGroup, txName, 10);\n         Long branchId = core.branchRegister(BranchType.AT, \"abcd\", clientId, xid, applicationData, lockKeys_2);\n \n         GlobalSession globalSession = SessionHolder.findGlobalSession(xid);\n         Assertions.assertNotNull(globalSession);\n         Assertions.assertNotNull(globalSession.getBranchSessions());\n+        Assertions.assertNotNull(branchId);\n \n-        Thread.sleep(100);\n         ReflectionUtil.modifyStaticFinalField(defaultCoordinator.getClass(), \"MAX_ROLLBACK_RETRY_TIMEOUT\", Duration.ofMillis(10));\n         ReflectionUtil.modifyStaticFinalField(defaultCoordinator.getClass(), \"ROLLBACK_RETRY_TIMEOUT_UNLOCK_ENABLE\", false);\n+        TimeUnit.MILLISECONDS.sleep(100);\n         defaultCoordinator.timeoutCheck();\n         defaultCoordinator.handleRetryRollbacking();\n         int lockSize = globalSession.getBranchSessions().get(0).getLockHolder().size();\n         try {\n             Assertions.assertTrue(lockSize > 0);\n         } finally {\n-            core.setResourceManagerInbound(defaultCoordinator);\n-            core.doGlobalRollback(globalSession, true);\n+            globalSession.closeAndClean();", "originalCommit": "b95d88d897ea1c5572fdb973237b4fbe3837d10b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMyNjc4Nw==", "url": "https://github.com/seata/seata/pull/2210#discussion_r369326787", "bodyText": "Local test case fails because local root.data is reused.", "author": "zjinlei", "createdAt": "2020-01-22T01:11:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2Nzk4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1MTUzMA==", "url": "https://github.com/seata/seata/pull/2210#discussion_r369351530", "bodyText": "fix by deleting the file each time.", "author": "slievrly", "createdAt": "2020-01-22T03:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2Nzk4OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3MDg0Nw==", "url": "https://github.com/seata/seata/pull/2210#discussion_r368570847", "bodyText": "\"Assertions.assertNotNull(globalSession.getBranchSessions())\", is it enough?", "author": "zjinlei", "createdAt": "2020-01-20T14:19:20Z", "path": "server/src/test/java/io/seata/server/coordinator/DefaultCoordinatorTest.java", "diffHunk": "@@ -136,45 +135,46 @@ public void test_handleRetryRollbacking() throws TransactionException, Interrupt\n     }\n \n     @Test\n-    public void test_handleRetryRollbackingTimeOut() throws TransactionException, InterruptedException, NoSuchFieldException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {\n+    public void test_handleRetryRollbackingTimeOut() throws TransactionException, InterruptedException, NoSuchFieldException, IllegalAccessException {\n         defaultCoordinator = new DefaultCoordinator(serverMessageSender);\n         String xid = core.begin(applicationId, txServiceGroup, txName, 10);\n         Long branchId = core.branchRegister(BranchType.AT, \"abcd\", clientId, xid, applicationData, lockKeys_2);\n \n         GlobalSession globalSession = SessionHolder.findGlobalSession(xid);\n         Assertions.assertNotNull(globalSession);\n         Assertions.assertNotNull(globalSession.getBranchSessions());\n+        Assertions.assertNotNull(branchId);\n \n-        Thread.sleep(100);\n         ReflectionUtil.modifyStaticFinalField(defaultCoordinator.getClass(), \"MAX_ROLLBACK_RETRY_TIMEOUT\", Duration.ofMillis(10));\n         ReflectionUtil.modifyStaticFinalField(defaultCoordinator.getClass(), \"ROLLBACK_RETRY_TIMEOUT_UNLOCK_ENABLE\", false);\n+        TimeUnit.MILLISECONDS.sleep(100);\n         defaultCoordinator.timeoutCheck();\n         defaultCoordinator.handleRetryRollbacking();\n         int lockSize = globalSession.getBranchSessions().get(0).getLockHolder().size();\n         try {\n             Assertions.assertTrue(lockSize > 0);\n         } finally {\n-            core.setResourceManagerInbound(defaultCoordinator);\n-            core.doGlobalRollback(globalSession, true);\n+            globalSession.closeAndClean();\n             ReflectionUtil.modifyStaticFinalField(defaultCoordinator.getClass(), \"MAX_ROLLBACK_RETRY_TIMEOUT\",\n                 ConfigurationFactory.getInstance().getDuration(ConfigurationKeys.MAX_ROLLBACK_RETRY_TIMEOUT, DurationUtil.DEFAULT_DURATION, 100));\n         }\n     }\n \n     @Test\n     public void test_handleRetryRollbackingTimeOut_unlock() throws TransactionException, InterruptedException,\n-        NoSuchFieldException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {\n+        NoSuchFieldException, IllegalAccessException {\n         defaultCoordinator = new DefaultCoordinator(serverMessageSender);\n         String xid = core.begin(applicationId, txServiceGroup, txName, 10);\n         Long branchId = core.branchRegister(BranchType.AT, \"abcd\", clientId, xid, applicationData, lockKeys_2);\n \n         GlobalSession globalSession = SessionHolder.findGlobalSession(xid);\n         Assertions.assertNotNull(globalSession);\n         Assertions.assertNotNull(globalSession.getBranchSessions());\n+        Assertions.assertNotNull(branchId);", "originalCommit": "b95d88d897ea1c5572fdb973237b4fbe3837d10b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1MTkyNg==", "url": "https://github.com/seata/seata/pull/2210#discussion_r369351926", "bodyText": "The branchRegister is on the business side and the globalSession is on the TC side.", "author": "slievrly", "createdAt": "2020-01-22T03:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3MDg0Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "02a4afbfbba0fa547dceb7f7fca99fb52dece546", "url": "https://github.com/seata/seata/commit/02a4afbfbba0fa547dceb7f7fca99fb52dece546", "message": "Merge branch 'develop' into retry_delete", "committedDate": "2020-01-20T14:42:07Z", "type": "commit"}, {"oid": "2767f8029d8797b13006ec7257bc626de11384d0", "url": "https://github.com/seata/seata/commit/2767f8029d8797b13006ec7257bc626de11384d0", "message": "Merge branch 'develop' into retry_delete", "committedDate": "2020-01-22T01:37:31Z", "type": "commit"}, {"oid": "407c5ebeed223bcf31c747df4074f1e2b836a395", "url": "https://github.com/seata/seata/commit/407c5ebeed223bcf31c747df4074f1e2b836a395", "message": "Merge branch 'develop' into retry_delete", "committedDate": "2020-01-22T01:44:07Z", "type": "commit"}, {"oid": "52075859161ff22f5dac67893271d306090601fa", "url": "https://github.com/seata/seata/commit/52075859161ff22f5dac67893271d306090601fa", "message": "fix unit test\n\nSigned-off-by: slievrly <slievrly@163.com>", "committedDate": "2020-01-22T02:52:29Z", "type": "commit"}, {"oid": "5db33b92d3bd14bffca8521352b4ff9a2a59e4e8", "url": "https://github.com/seata/seata/commit/5db33b92d3bd14bffca8521352b4ff9a2a59e4e8", "message": "Merge remote-tracking branch 'upstream/develop' into retry_delete", "committedDate": "2020-01-22T02:58:44Z", "type": "commit"}, {"oid": "0bdace9b4298ca2eca3abcd1b89fb0d1ecc7318c", "url": "https://github.com/seata/seata/commit/0bdace9b4298ca2eca3abcd1b89fb0d1ecc7318c", "message": "Merge remote-tracking branch 'origin/retry_delete' into retry_delete", "committedDate": "2020-01-22T03:01:47Z", "type": "commit"}, {"oid": "ea7d9897faad6388b0d7599de5bc50b34885a889", "url": "https://github.com/seata/seata/commit/ea7d9897faad6388b0d7599de5bc50b34885a889", "message": "Merge branch 'develop' into retry_delete", "committedDate": "2020-01-22T15:42:02Z", "type": "commit"}]}