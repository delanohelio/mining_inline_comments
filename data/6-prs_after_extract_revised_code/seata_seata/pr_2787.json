{"pr_number": 2787, "pr_title": "optimize: Modify  workerid generation method", "pr_createdAt": "2020-06-10T08:25:36Z", "pr_url": "https://github.com/seata/seata/pull/2787", "timeline": [{"oid": "e9e72550fdf5946b055d5b089178bf329966ee6b", "url": "https://github.com/seata/seata/commit/e9e72550fdf5946b055d5b089178bf329966ee6b", "message": "release 0.5.1", "committedDate": "2019-04-30T08:44:14Z", "type": "commit"}, {"oid": "f017c6b875c304f75fe34be37f9d4cf75e2f45f4", "url": "https://github.com/seata/seata/commit/f017c6b875c304f75fe34be37f9d4cf75e2f45f4", "message": "release 0.5.2\n\nrelease 0.5.2", "committedDate": "2019-05-17T10:12:34Z", "type": "commit"}, {"oid": "7ca3332d67c2f0d43ce7d854e6bbb04e48bcae8b", "url": "https://github.com/seata/seata/commit/7ca3332d67c2f0d43ce7d854e6bbb04e48bcae8b", "message": "Release 0.6.0 (#1106)", "committedDate": "2019-05-24T09:47:44Z", "type": "commit"}, {"oid": "dc088cb9551d58acdf343f66166985e8fa8712fd", "url": "https://github.com/seata/seata/commit/dc088cb9551d58acdf343f66166985e8fa8712fd", "message": "Revert \"Release 0.6.0 (#1106)\" (#1107)", "committedDate": "2019-05-27T02:27:47Z", "type": "commit"}, {"oid": "da96029455843dfd8ace1c085e8a170f05ad659a", "url": "https://github.com/seata/seata/commit/da96029455843dfd8ace1c085e8a170f05ad659a", "message": "re-merging 0.6.0", "committedDate": "2019-05-27T02:40:28Z", "type": "commit"}, {"oid": "ca567ef724cc53ef624a42718997853fbdddae54", "url": "https://github.com/seata/seata/commit/ca567ef724cc53ef624a42718997853fbdddae54", "message": "Release 0.6.1\n\nRelease 0.6.1", "committedDate": "2019-05-31T07:33:13Z", "type": "commit"}, {"oid": "1b90f935a27a928a8a75e8c11a4687235f1507d9", "url": "https://github.com/seata/seata/commit/1b90f935a27a928a8a75e8c11a4687235f1507d9", "message": "release 0.7.0", "committedDate": "2019-07-12T07:12:02Z", "type": "commit"}, {"oid": "39e4d892ada776f35c78528c85e773dd6ac8f5f1", "url": "https://github.com/seata/seata/commit/39e4d892ada776f35c78528c85e773dd6ac8f5f1", "message": "release 0.7.1\n\nrelease 0.7.1", "committedDate": "2019-07-15T12:01:04Z", "type": "commit"}, {"oid": "09456818ecd6644439366647021b683516225cb3", "url": "https://github.com/seata/seata/commit/09456818ecd6644439366647021b683516225cb3", "message": "release 0.8.0\n\nrelease 0.8.0", "committedDate": "2019-08-16T08:13:03Z", "type": "commit"}, {"oid": "9ffa29044209f04c222eab5445c8b01ea6295522", "url": "https://github.com/seata/seata/commit/9ffa29044209f04c222eab5445c8b01ea6295522", "message": "release  0.8.1", "committedDate": "2019-09-18T09:39:19Z", "type": "commit"}, {"oid": "a174ed5594d405ba26706c355327ac0ac8017b27", "url": "https://github.com/seata/seata/commit/a174ed5594d405ba26706c355327ac0ac8017b27", "message": "release 0.9.0", "committedDate": "2019-10-16T05:38:49Z", "type": "commit"}, {"oid": "5bdbc44e524263a47aa51a1a2a648b120456ee5b", "url": "https://github.com/seata/seata/commit/5bdbc44e524263a47aa51a1a2a648b120456ee5b", "message": "[release] release 1.0.0\n\n[release] release 1.0.0", "committedDate": "2019-12-20T16:59:09Z", "type": "commit"}, {"oid": "f990a575328504ef4dece32a93383f1debc0d7f2", "url": "https://github.com/seata/seata/commit/f990a575328504ef4dece32a93383f1debc0d7f2", "message": "release: release 1.1.0", "committedDate": "2020-02-19T15:13:24Z", "type": "commit"}, {"oid": "04d0568c0e89fd77c5a8c22a9d39025a0be41051", "url": "https://github.com/seata/seata/commit/04d0568c0e89fd77c5a8c22a9d39025a0be41051", "message": "Merge pull request #2582 from seata/1.2.0\n\nrelease 1.2.0", "committedDate": "2020-04-21T04:40:55Z", "type": "commit"}, {"oid": "952248d0baf51087504bc50d760c1e5a746c6ef6", "url": "https://github.com/seata/seata/commit/952248d0baf51087504bc50d760c1e5a746c6ef6", "message": "\u4fee\u6539workid\u751f\u6210\u65b9\u5f0f", "committedDate": "2020-06-10T04:20:43Z", "type": "commit"}, {"oid": "ab557970d3643805d13c65dd3ff3cbe574f81384", "url": "https://github.com/seata/seata/commit/ab557970d3643805d13c65dd3ff3cbe574f81384", "message": "modify workerid generation method", "committedDate": "2020-06-10T08:23:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NzMzNA==", "url": "https://github.com/seata/seata/pull/2787#discussion_r437957334", "bodyText": "if according to the current practice, will the id be greater than 1023? if yes, it is not advisable to simply throw an exception", "author": "a364176773", "createdAt": "2020-06-10T08:38:02Z", "path": "common/src/main/java/io/seata/common/util/IdWorker.java", "diffHunk": "@@ -144,12 +147,24 @@ public static IdWorker getInstance() {\n         if (idWorker == null) {\n             synchronized (IdWorker.class) {\n                 if (idWorker == null) {\n-                    init(ThreadLocalRandom.current().nextLong(1024));\n+                    init(initWorkerId());\n                 }\n             }\n         }\n         return idWorker;\n     }\n+    public static long initWorkerId(){\n+        InetAddress address;\n+        try {\n+            address = InetAddress.getLocalHost();\n+        } catch (final UnknownHostException e) {\n+            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\");\n+        }\n+        byte[] ipAddressByteArray = address.getAddress();\n+        long workerId = (((ipAddressByteArray[ipAddressByteArray.length - 2] & 0B11) << Byte.SIZE) + (ipAddressByteArray[ipAddressByteArray.length - 1] & 0xFF));\n+        Preconditions.checkArgument(workerId >= 0L && workerId < 1024L);", "originalCommit": "ab557970d3643805d13c65dd3ff3cbe574f81384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4MDY5OQ==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439180699", "bodyText": "No more than 1023, because according to the snowflake algorithm, the maximum 1111111111 is 1023", "author": "lj2018110133", "createdAt": "2020-06-12T02:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NzMzNA=="}], "type": "inlineReview", "revised_code": {"commit": "6693048e99a3f75e2d7ec6bbdf3c9dac208ddefd", "chunk": "diff --git a/common/src/main/java/io/seata/common/util/IdWorker.java b/common/src/main/java/io/seata/common/util/IdWorker.java\nindex 884cbb1916..336dceec6b 100644\n--- a/common/src/main/java/io/seata/common/util/IdWorker.java\n+++ b/common/src/main/java/io/seata/common/util/IdWorker.java\n\n@@ -153,7 +151,8 @@ public class IdWorker {\n         }\n         return idWorker;\n     }\n-    public static long initWorkerId(){\n+\n+    public static long initWorkerId() {\n         InetAddress address;\n         try {\n             address = InetAddress.getLocalHost();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1OTA3NA==", "url": "https://github.com/seata/seata/pull/2787#discussion_r437959074", "bodyText": "whether the serverNode is null or out of range,do this again", "author": "a364176773", "createdAt": "2020-06-10T08:40:53Z", "path": "server/src/main/java/io/seata/server/ParameterParser.java", "diffHunk": "@@ -49,7 +50,7 @@\n \n     private static final int SERVER_DEFAULT_PORT = 8091;\n     private static final String SERVER_DEFAULT_STORE_MODE = \"file\";\n-    private static final Long SERVER_DEFAULT_NODE = ThreadLocalRandom.current().nextLong(1024);\n+    private static final Long SERVER_DEFAULT_NODE = IdWorker.initWorkerId();", "originalCommit": "ab557970d3643805d13c65dd3ff3cbe574f81384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4MDc5Nw==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439180797", "bodyText": "Already processed", "author": "lj2018110133", "createdAt": "2020-06-12T02:58:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1OTA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "6693048e99a3f75e2d7ec6bbdf3c9dac208ddefd", "chunk": "diff --git a/server/src/main/java/io/seata/server/ParameterParser.java b/server/src/main/java/io/seata/server/ParameterParser.java\nindex 67fcaac4c2..76d4be653c 100644\n--- a/server/src/main/java/io/seata/server/ParameterParser.java\n+++ b/server/src/main/java/io/seata/server/ParameterParser.java\n\n@@ -46,11 +46,10 @@ public class ParameterParser {\n     private static final Logger LOGGER = LoggerFactory.getLogger(ParameterParser.class);\n \n     private static final String PROGRAM_NAME\n-        = \"sh seata-server.sh(for linux and mac) or cmd seata-server.bat(for windows)\";\n+            = \"sh seata-server.sh(for linux and mac) or cmd seata-server.bat(for windows)\";\n \n     private static final int SERVER_DEFAULT_PORT = 8091;\n     private static final String SERVER_DEFAULT_STORE_MODE = \"file\";\n-    private static final Long SERVER_DEFAULT_NODE = IdWorker.initWorkerId();\n \n     private static final String ENV_SYSTEM_KEY = \"SEATA_ENV\";\n     private static final String ENV_SEATA_IP_KEY = \"SEATA_IP\";\n"}}, {"oid": "6693048e99a3f75e2d7ec6bbdf3c9dac208ddefd", "url": "https://github.com/seata/seata/commit/6693048e99a3f75e2d7ec6bbdf3c9dac208ddefd", "message": "modify workerid generation method 2th", "committedDate": "2020-06-11T14:34:40Z", "type": "commit"}, {"oid": "f99be7f1c4359788b6d256d492428499866f6c85", "url": "https://github.com/seata/seata/commit/f99be7f1c4359788b6d256d492428499866f6c85", "message": "modify workerid generation method 3th", "committedDate": "2020-06-11T14:54:23Z", "type": "commit"}, {"oid": "53b721b26615ed0155f29495e85ed24ea30cd412", "url": "https://github.com/seata/seata/commit/53b721b26615ed0155f29495e85ed24ea30cd412", "message": "modify workerid generation method 4th", "committedDate": "2020-06-12T02:48:32Z", "type": "commit"}, {"oid": "1fade3813799ca4ed175bd5eeb56299d02336bb3", "url": "https://github.com/seata/seata/commit/1fade3813799ca4ed175bd5eeb56299d02336bb3", "message": "Merge branch 'develop' into seata_workerid", "committedDate": "2020-06-12T03:09:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5Mzk4Mw==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439193983", "bodyText": "StringUtils.isNotBlank() ?", "author": "a364176773", "createdAt": "2020-06-12T03:58:20Z", "path": "common/src/main/java/io/seata/common/util/NumberUtils.java", "diffHunk": "@@ -53,4 +53,11 @@ public static Long toLong(String str, final Long defaultValue) {\n             return defaultValue;\n         }\n     }\n+\n+    public static Long toLong(String str) {\n+        if (str != null) {", "originalCommit": "1fade3813799ca4ed175bd5eeb56299d02336bb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIzMTE2Nw==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439231167", "bodyText": "Ok\uff01 i will optimize it", "author": "lj2018110133", "createdAt": "2020-06-12T06:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5Mzk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "61d1188b587260c2ee55affde1a9f75be988590d", "chunk": "diff --git a/common/src/main/java/io/seata/common/util/NumberUtils.java b/common/src/main/java/io/seata/common/util/NumberUtils.java\nindex 4248ee3a9f..0724ef5592 100644\n--- a/common/src/main/java/io/seata/common/util/NumberUtils.java\n+++ b/common/src/main/java/io/seata/common/util/NumberUtils.java\n\n@@ -55,7 +55,7 @@ public class NumberUtils {\n     }\n \n     public static Long toLong(String str) {\n-        if (str != null) {\n+        if (StringUtils.isNotBlank(str)) {\n             return Long.valueOf(str);\n         }\n         return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5NDQ5MQ==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439194491", "bodyText": "????why modify the port", "author": "a364176773", "createdAt": "2020-06-12T04:00:54Z", "path": "integration/http/src/test/java/io/seata/integration/http/HttpTest.java", "diffHunk": "@@ -40,7 +40,7 @@\n  */\n class HttpTest {\n \n-    private static final String host = \"http://127.0.0.1:8081\";\n+    private static final String host = \"http://127.0.0.1:8080\";", "originalCommit": "1fade3813799ca4ed175bd5eeb56299d02336bb3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "61d1188b587260c2ee55affde1a9f75be988590d", "chunk": "diff --git a/integration/http/src/test/java/io/seata/integration/http/HttpTest.java b/integration/http/src/test/java/io/seata/integration/http/HttpTest.java\nindex ea2775ab1c..9b10202a73 100644\n--- a/integration/http/src/test/java/io/seata/integration/http/HttpTest.java\n+++ b/integration/http/src/test/java/io/seata/integration/http/HttpTest.java\n\n@@ -40,7 +40,7 @@ import static io.seata.integration.http.AbstractHttpExecutor.convertParamOfJsonS\n  */\n class HttpTest {\n \n-    private static final String host = \"http://127.0.0.1:8080\";\n+    private static final String host = \"http://127.0.0.1:8081\";\n     private static final String testException = \"/testException\";\n     private static final String getPath = \"/testGet\";\n     private static final String postPath = \"/testPost\";\n"}}, {"oid": "61d1188b587260c2ee55affde1a9f75be988590d", "url": "https://github.com/seata/seata/commit/61d1188b587260c2ee55affde1a9f75be988590d", "message": "modify workerid generation method 5th", "committedDate": "2020-06-12T06:46:38Z", "type": "commit"}, {"oid": "b148f7dc29fdba86e9a0c6000db6c5fd4cea3ba5", "url": "https://github.com/seata/seata/commit/b148f7dc29fdba86e9a0c6000db6c5fd4cea3ba5", "message": "Merge branch 'seata_workerid' of https://github.com/lj2018110133/seata into seata_workerid", "committedDate": "2020-06-12T06:48:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5ODM0OQ==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439498349", "bodyText": "need to verify ipv6 address.", "author": "slievrly", "createdAt": "2020-06-12T15:46:23Z", "path": "common/src/main/java/io/seata/common/util/IdWorker.java", "diffHunk": "@@ -144,13 +144,24 @@ public static IdWorker getInstance() {\n         if (idWorker == null) {\n             synchronized (IdWorker.class) {\n                 if (idWorker == null) {\n-                    init(ThreadLocalRandom.current().nextLong(1024));\n+                    init(initWorkerId());\n                 }\n             }\n         }\n         return idWorker;\n     }\n \n+    public static long initWorkerId() {\n+        InetAddress address;\n+        try {\n+            address = InetAddress.getLocalHost();\n+        } catch (final UnknownHostException e) {\n+            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\");\n+        }\n+        byte[] ipAddressByteArray = address.getAddress();\n+        return ((ipAddressByteArray[ipAddressByteArray.length - 2] & 0B11) << Byte.SIZE) + (ipAddressByteArray[ipAddressByteArray.length - 1] & 0xFF);", "originalCommit": "b148f7dc29fdba86e9a0c6000db6c5fd4cea3ba5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUwMDY4Mw==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439500683", "bodyText": "Ok i will handle it", "author": "lj2018110133", "createdAt": "2020-06-12T15:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5ODM0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "47456e420673f442ed2334975964f16cdc6abe6e", "chunk": "diff --git a/common/src/main/java/io/seata/common/util/IdWorker.java b/common/src/main/java/io/seata/common/util/IdWorker.java\nindex 676317fd90..888f366c32 100644\n--- a/common/src/main/java/io/seata/common/util/IdWorker.java\n+++ b/common/src/main/java/io/seata/common/util/IdWorker.java\n\n@@ -156,7 +156,7 @@ public class IdWorker {\n         try {\n             address = InetAddress.getLocalHost();\n         } catch (final UnknownHostException e) {\n-            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\");\n+            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\",e);\n         }\n         byte[] ipAddressByteArray = address.getAddress();\n         return ((ipAddressByteArray[ipAddressByteArray.length - 2] & 0B11) << Byte.SIZE) + (ipAddressByteArray[ipAddressByteArray.length - 1] & 0xFF);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5ODk3Mw==", "url": "https://github.com/seata/seata/pull/2787#discussion_r439498973", "bodyText": "the exception information should contain e.", "author": "slievrly", "createdAt": "2020-06-12T15:47:36Z", "path": "common/src/main/java/io/seata/common/util/IdWorker.java", "diffHunk": "@@ -144,13 +144,24 @@ public static IdWorker getInstance() {\n         if (idWorker == null) {\n             synchronized (IdWorker.class) {\n                 if (idWorker == null) {\n-                    init(ThreadLocalRandom.current().nextLong(1024));\n+                    init(initWorkerId());\n                 }\n             }\n         }\n         return idWorker;\n     }\n \n+    public static long initWorkerId() {\n+        InetAddress address;\n+        try {\n+            address = InetAddress.getLocalHost();\n+        } catch (final UnknownHostException e) {\n+            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\");", "originalCommit": "b148f7dc29fdba86e9a0c6000db6c5fd4cea3ba5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47456e420673f442ed2334975964f16cdc6abe6e", "chunk": "diff --git a/common/src/main/java/io/seata/common/util/IdWorker.java b/common/src/main/java/io/seata/common/util/IdWorker.java\nindex 676317fd90..888f366c32 100644\n--- a/common/src/main/java/io/seata/common/util/IdWorker.java\n+++ b/common/src/main/java/io/seata/common/util/IdWorker.java\n\n@@ -156,7 +156,7 @@ public class IdWorker {\n         try {\n             address = InetAddress.getLocalHost();\n         } catch (final UnknownHostException e) {\n-            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\");\n+            throw new IllegalStateException(\"Cannot get LocalHost InetAddress, please check your network!\",e);\n         }\n         byte[] ipAddressByteArray = address.getAddress();\n         return ((ipAddressByteArray[ipAddressByteArray.length - 2] & 0B11) << Byte.SIZE) + (ipAddressByteArray[ipAddressByteArray.length - 1] & 0xFF);\n"}}, {"oid": "47456e420673f442ed2334975964f16cdc6abe6e", "url": "https://github.com/seata/seata/commit/47456e420673f442ed2334975964f16cdc6abe6e", "message": "contain exception information", "committedDate": "2020-06-17T13:21:56Z", "type": "commit"}, {"oid": "08d2a8a6b3e04b5e7f499285b6d9060af379b066", "url": "https://github.com/seata/seata/commit/08d2a8a6b3e04b5e7f499285b6d9060af379b066", "message": "Merge branch 'develop' into seata_workerid", "committedDate": "2020-06-17T13:34:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwNTY3MA==", "url": "https://github.com/seata/seata/pull/2787#discussion_r442605670", "bodyText": "I think it will always return 8 bytes, is it too big for long?", "author": "l81893521", "createdAt": "2020-06-19T03:00:44Z", "path": "common/src/main/java/io/seata/common/util/IdWorker.java", "diffHunk": "@@ -144,13 +144,24 @@ public static IdWorker getInstance() {\n         if (idWorker == null) {\n             synchronized (IdWorker.class) {\n                 if (idWorker == null) {\n-                    init(ThreadLocalRandom.current().nextLong(1024));\n+                    init(initWorkerId());\n                 }\n             }\n         }\n         return idWorker;\n     }\n \n+    public static long initWorkerId() {", "originalCommit": "08d2a8a6b3e04b5e7f499285b6d9060af379b066", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NDcwNg==", "url": "https://github.com/seata/seata/pull/2787#discussion_r443294706", "bodyText": "Indeed, it will be dealt with next time", "author": "lj2018110133", "createdAt": "2020-06-22T02:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwNTY3MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1ea747cce2eed21b8fac9c8098248587aee2d47c", "url": "https://github.com/seata/seata/commit/1ea747cce2eed21b8fac9c8098248587aee2d47c", "message": "Merge branch 'master' of https://github.com/lj2018110133/seata into seata_workerid", "committedDate": "2020-06-19T06:20:14Z", "type": "commit"}, {"oid": "15a44aa60f4a40055a1a1574a05d44898d9c4095", "url": "https://github.com/seata/seata/commit/15a44aa60f4a40055a1a1574a05d44898d9c4095", "message": "Handling conflicts", "committedDate": "2020-06-19T07:51:08Z", "type": "commit"}, {"oid": "160d41ae0fd9230e44ef9ba7c25544844f0d893d", "url": "https://github.com/seata/seata/commit/160d41ae0fd9230e44ef9ba7c25544844f0d893d", "message": "Merge branch 'seata_workerid' of https://github.com/lj2018110133/seata into seata_workerid", "committedDate": "2020-06-19T07:52:04Z", "type": "commit"}, {"oid": "f1a406781a66569844b868448c42b8f59f29def7", "url": "https://github.com/seata/seata/commit/f1a406781a66569844b868448c42b8f59f29def7", "message": "Handling conflicts", "committedDate": "2020-06-19T08:32:33Z", "type": "commit"}, {"oid": "aa6c17ec8b230043f6abd73dd69fec45dbb7f30f", "url": "https://github.com/seata/seata/commit/aa6c17ec8b230043f6abd73dd69fec45dbb7f30f", "message": "Merge branch 'develop' into seata_workerid", "committedDate": "2020-06-19T13:51:32Z", "type": "commit"}, {"oid": "af4176a9df6fb00f758e877dfe07ca8d9453937c", "url": "https://github.com/seata/seata/commit/af4176a9df6fb00f758e877dfe07ca8d9453937c", "message": "Merge branch 'develop' into seata_workerid", "committedDate": "2020-06-22T04:34:15Z", "type": "commit"}, {"oid": "f0d3e8a3bb576e92c1fd85ce306c7492c09a0bc0", "url": "https://github.com/seata/seata/commit/f0d3e8a3bb576e92c1fd85ce306c7492c09a0bc0", "message": "Merge branch 'develop' into seata_workerid", "committedDate": "2020-06-24T03:57:28Z", "type": "commit"}]}