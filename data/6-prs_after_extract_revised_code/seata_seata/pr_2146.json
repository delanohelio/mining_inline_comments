{"pr_number": 2146, "pr_title": "optimize:optimize log specifications", "pr_createdAt": "2020-01-07T03:18:40Z", "pr_url": "https://github.com/seata/seata/pull/2146", "timeline": [{"oid": "cde59899fcbcca07cb87efb2189712a51a743da6", "url": "https://github.com/seata/seata/commit/cde59899fcbcca07cb87efb2189712a51a743da6", "message": "fix log specifications", "committedDate": "2020-01-07T03:11:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxNTUzMA==", "url": "https://github.com/seata/seata/pull/2146#discussion_r363615530", "bodyText": "Please call the method with three parameters.LOGGER.error(\"xxxx:{}\",exx.getMessage(),exx)", "author": "xingfudeshi", "createdAt": "2020-01-07T07:08:38Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java", "diffHunk": "@@ -99,13 +99,10 @@ public Object get(long timeout, TimeUnit unit) {\n         } catch (ExecutionException e) {\n             throw new ShouldNeverHappenException(\"Should not get results in a multi-threaded environment\", e);\n         } catch (TimeoutException e) {\n-            LOGGER.error(\n-                    \"config operation timeout,cost:\" + (System.currentTimeMillis() - start) + \" ms,op:\" + operation\n-                            .name()\n-                            + \",dataId:\" + dataId);\n+            LOGGER.error(\"config operation timeout,cost:{} ms,op:{},dataId:{}\", System.currentTimeMillis() - start, operation.name(), dataId);\n             return getFailResult();\n         } catch (InterruptedException exx) {\n-            LOGGER.error(\"config operate interrupted,error:\" + exx.getMessage());\n+            LOGGER.error(\"config operate interrupted,error:{}\", exx.getMessage());", "originalCommit": "cde59899fcbcca07cb87efb2189712a51a743da6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxNzUwNg==", "url": "https://github.com/seata/seata/pull/2146#discussion_r363617506", "bodyText": "Received, I will fix this.", "author": "InstallingB", "createdAt": "2020-01-07T07:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxNTUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "8e68c7a05f7003acc52d94578233cd75ca51e291", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java b/config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java\nindex ece336c9..7d2c3a7a 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java\n\n@@ -102,7 +102,7 @@ public class ConfigFuture {\n             LOGGER.error(\"config operation timeout,cost:{} ms,op:{},dataId:{}\", System.currentTimeMillis() - start, operation.name(), dataId);\n             return getFailResult();\n         } catch (InterruptedException exx) {\n-            LOGGER.error(\"config operate interrupted,error:{}\", exx.getMessage());\n+            LOGGER.error(\"config operate interrupted,error:{}\", exx.getMessage(), exx);\n             return getFailResult();\n         }\n         if (operation == ConfigOperation.GET) {\n"}}, {"oid": "8e68c7a05f7003acc52d94578233cd75ca51e291", "url": "https://github.com/seata/seata/commit/8e68c7a05f7003acc52d94578233cd75ca51e291", "message": "fix log typos", "committedDate": "2020-01-07T07:22:22Z", "type": "commit"}]}