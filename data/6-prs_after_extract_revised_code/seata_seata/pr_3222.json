{"pr_number": 3222, "pr_title": "optimize: optimize fileListener to decrease cpu time usage ", "pr_createdAt": "2020-10-26T10:15:22Z", "pr_url": "https://github.com/seata/seata/pull/3222", "timeline": [{"oid": "6ef0657549828d159d1d1aaf9be1c923cc287a51", "url": "https://github.com/seata/seata/commit/6ef0657549828d159d1d1aaf9be1c923cc287a51", "message": "opeimize: use fileListener singleton", "committedDate": "2020-10-26T10:14:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjE4Mw==", "url": "https://github.com/seata/seata/pull/3222#discussion_r511852183", "bodyText": "\u65e2\u7136\u662f\u4e00\u4e2a\u5b9e\u4f8b\u4e86\uff0c\u6ca1\u6709\u5fc5\u8981\u53bb\u4e0d\u65ad\u7684new ConfigurationChangeEvent\u4e86\u5427\uff1f", "author": "a364176773", "createdAt": "2020-10-26T10:18:39Z", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -230,7 +233,7 @@ public void addConfigListener(String dataId, ConfigurationChangeListener listene\n         listenedConfigMap.put(dataId, ConfigurationFactory.getInstance().getConfig(dataId));\n \n         // Start config change listener for the dataId.\n-        FileListener fileListener = new FileListener(dataId, listener);\n+        fileListener.addListener(dataId, listener);\n         fileListener.onProcessEvent(new ConfigurationChangeEvent());", "originalCommit": "6ef0657549828d159d1d1aaf9be1c923cc287a51", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\nindex be7eee54a..059ea7bfc 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n\n@@ -234,7 +236,6 @@ public class FileConfiguration extends AbstractConfiguration {\n \n         // Start config change listener for the dataId.\n         fileListener.addListener(dataId, listener);\n-        fileListener.onProcessEvent(new ConfigurationChangeEvent());\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw==", "url": "https://github.com/seata/seata/pull/3222#discussion_r511852297", "bodyText": "\u5e94\u8be5\u5728\u4e0b\u9762\u6839\u636e\u4e0d\u540c\u7684dataid\u53bb\u6784\u5efa\u5bf9\u5e94\u7684event\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u5c31\u7528\u540c\u4e00\u4e2a\u4e86", "author": "a364176773", "createdAt": "2020-10-26T10:18:52Z", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +336,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n+            changeListeners.add(listener);\n+            dataIdMap.put(dataId, changeListeners);\n         }\n \n         @Override\n         public void onChangeEvent(ConfigurationChangeEvent event) {", "originalCommit": "6ef0657549828d159d1d1aaf9be1c923cc287a51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg2NTAyNQ==", "url": "https://github.com/seata/seata/pull/3222#discussion_r511865025", "bodyText": "\u7528\u540c\u4e00\u4e2a\u5b9e\u4f8b\u5176\u5b9e\u4e5f\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e00\u6bb5\u5728\u6267\u884c\u7684\u65f6\u5019\u662f\u4e32\u884c\u7684", "author": "caohdgege", "createdAt": "2020-10-26T10:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkxMTUyOA==", "url": "https://github.com/seata/seata/pull/3222#discussion_r511911528", "bodyText": "\u786e\u8ba4\u4e86\u4e0b,\u662f\u7684,\u56e0\u4e3a\u4e32\u884c\u6267\u884c,\u4f1a\u8986\u76d6\u6389\u5185\u90e8\u7684dataid,\u90a3\u4e48\u5e94\u8be5\u6539\u52a8\u4e0b\u907f\u514dnew\u591a\u4e2aConfigurationChangeEvent\u5c31\u597d\u4e86", "author": "a364176773", "createdAt": "2020-10-26T12:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3MTgzNg==", "url": "https://github.com/seata/seata/pull/3222#discussion_r512071836", "bodyText": "\u90a3\u4e2a\u6539\u6210\u4e86\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\u624d\u4f1anew\uff0c\u5c31\u6ca1\u8fd9\u4e2a\u95ee\u9898\u4e86", "author": "caohdgege", "createdAt": "2020-10-26T15:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "6f870d1fb3700179c4f867e5f2b176680346b33b", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\nindex be7eee54a..99854b2b6 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n\n@@ -349,9 +350,7 @@ public class FileConfiguration extends AbstractConfiguration {\n         FileListener() {}\n \n         public void addListener(String dataId, ConfigurationChangeListener listener) {\n-            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n-            changeListeners.add(listener);\n-            dataIdMap.put(dataId, changeListeners);\n+            dataIdMap .computeIfAbsent(dataId, value -> new HashSet<>()).add(listener);\n         }\n \n         @Override\n"}}, {"oid": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518", "url": "https://github.com/seata/seata/commit/6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518", "message": "optimize: publicity process event", "committedDate": "2020-10-26T10:27:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNTg1NQ==", "url": "https://github.com/seata/seata/pull/3222#discussion_r512435855", "bodyText": "dataIdMap .computeIfAbsent(dataId,value->new HashSet<>())", "author": "a364176773", "createdAt": "2020-10-27T06:05:33Z", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +337,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());", "originalCommit": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2OTM5MA==", "url": "https://github.com/seata/seata/pull/3222#discussion_r512469390", "bodyText": "ok", "author": "caohdgege", "createdAt": "2020-10-27T07:37:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNTg1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "6f870d1fb3700179c4f867e5f2b176680346b33b", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\nindex 059ea7bfc..99854b2b6 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n\n@@ -350,9 +350,7 @@ public class FileConfiguration extends AbstractConfiguration {\n         FileListener() {}\n \n         public void addListener(String dataId, ConfigurationChangeListener listener) {\n-            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n-            changeListeners.add(listener);\n-            dataIdMap.put(dataId, changeListeners);\n+            dataIdMap .computeIfAbsent(dataId, value -> new HashSet<>()).add(listener);\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNjAxNQ==", "url": "https://github.com/seata/seata/pull/3222#discussion_r512436015", "bodyText": "Is there a thread safety issue?", "author": "a364176773", "createdAt": "2020-10-27T06:06:04Z", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +337,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();", "originalCommit": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3MTAwMQ==", "url": "https://github.com/seata/seata/pull/3222#discussion_r512471001", "bodyText": "modify to use concurrent safe map & set", "author": "caohdgege", "createdAt": "2020-10-27T07:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNjAxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "6f870d1fb3700179c4f867e5f2b176680346b33b", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\nindex 059ea7bfc..99854b2b6 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n\n@@ -350,9 +350,7 @@ public class FileConfiguration extends AbstractConfiguration {\n         FileListener() {}\n \n         public void addListener(String dataId, ConfigurationChangeListener listener) {\n-            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n-            changeListeners.add(listener);\n-            dataIdMap.put(dataId, changeListeners);\n+            dataIdMap .computeIfAbsent(dataId, value -> new HashSet<>()).add(listener);\n         }\n \n         @Override\n"}}, {"oid": "6f870d1fb3700179c4f867e5f2b176680346b33b", "url": "https://github.com/seata/seata/commit/6f870d1fb3700179c4f867e5f2b176680346b33b", "message": "optimize code", "committedDate": "2020-10-27T07:37:47Z", "type": "commit"}, {"oid": "d32d464c4686889665713e7737f3bf7840e2e12c", "url": "https://github.com/seata/seata/commit/d32d464c4686889665713e7737f3bf7840e2e12c", "message": "use concurrent safe map & set", "committedDate": "2020-10-27T07:40:34Z", "type": "commit"}, {"oid": "7a842ef29369257983de3d0d97907c266e1eefd0", "url": "https://github.com/seata/seata/commit/7a842ef29369257983de3d0d97907c266e1eefd0", "message": "remove useless import", "committedDate": "2020-10-27T08:41:39Z", "type": "commit"}, {"oid": "398a57df296e061687452b2b02920966a48602fe", "url": "https://github.com/seata/seata/commit/398a57df296e061687452b2b02920966a48602fe", "message": "synchronized", "committedDate": "2020-10-27T09:31:28Z", "type": "commit"}, {"oid": "d7a4bf9cfc45cb8c9c28cf38e95f955e4028a0e8", "url": "https://github.com/seata/seata/commit/d7a4bf9cfc45cb8c9c28cf38e95f955e4028a0e8", "message": "Merge branch 'develop' into optimize-use-fileListener-singleton", "committedDate": "2020-10-28T02:46:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE1NjcwNg==", "url": "https://github.com/seata/seata/pull/3222#discussion_r513156706", "bodyText": "Why not start onProcessEvent the first time you add a listener\uff1f", "author": "slievrly", "createdAt": "2020-10-28T03:22:40Z", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -83,6 +86,7 @@ public FileConfiguration() {\n         this.name = null;\n         this.targetFilePath = null;\n         this.allowDynamicRefresh = false;\n+        fileListener.onProcessEvent(new ConfigurationChangeEvent());", "originalCommit": "d7a4bf9cfc45cb8c9c28cf38e95f955e4028a0e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aa01503afcac065ff39d239c5f2a85bc50b38707", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\nindex 0eb2d3db0..6c89ec960 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java\n\n@@ -86,7 +86,6 @@ public class FileConfiguration extends AbstractConfiguration {\n         this.name = null;\n         this.targetFilePath = null;\n         this.allowDynamicRefresh = false;\n-        fileListener.onProcessEvent(new ConfigurationChangeEvent());\n     }\n \n     /**\n"}}, {"oid": "aa01503afcac065ff39d239c5f2a85bc50b38707", "url": "https://github.com/seata/seata/commit/aa01503afcac065ff39d239c5f2a85bc50b38707", "message": "move onProcessEvent to first time add listener", "committedDate": "2020-10-28T03:28:58Z", "type": "commit"}, {"oid": "a5e567a92ad93edb7e93cd2cac4c9bbe75fc40ad", "url": "https://github.com/seata/seata/commit/a5e567a92ad93edb7e93cd2cac4c9bbe75fc40ad", "message": "Merge remote-tracking branch 'origin/optimize-use-fileListener-singleton' into optimize-use-fileListener-singleton", "committedDate": "2020-10-28T03:29:17Z", "type": "commit"}]}