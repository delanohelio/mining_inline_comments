{"pr_number": 2402, "pr_title": "optimize:optimize the rm and tm register log", "pr_createdAt": "2020-03-14T04:05:15Z", "pr_url": "https://github.com/seata/seata/pull/2402", "timeline": [{"oid": "1f74dd60d71dedc1344895fd39fcdd2b0c196de5", "url": "https://github.com/seata/seata/commit/1f74dd60d71dedc1344895fd39fcdd2b0c196de5", "message": "optimize:optimize the rm and tm register log", "committedDate": "2020-03-14T04:02:38Z", "type": "commit"}, {"oid": "7e9526553770b120e499c995210b671c963d74cd", "url": "https://github.com/seata/seata/commit/7e9526553770b120e499c995210b671c963d74cd", "message": "Merge branch 'develop' into optimize_registerlog", "committedDate": "2020-03-15T10:42:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3NzkxMg==", "url": "https://github.com/seata/seata/pull/2402#discussion_r392677912", "bodyText": "debug and info Inconsistent", "author": "zjinlei", "createdAt": "2020-03-15T14:16:22Z", "path": "core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java", "diffHunk": "@@ -106,20 +106,25 @@ public void onTrxMessage(RpcMessage request, ChannelHandlerContext ctx) {\n     @Override\n     public void onRegRmMessage(RpcMessage request, ChannelHandlerContext ctx, RegisterCheckAuthHandler checkAuthHandler) {\n         RegisterRMRequest message = (RegisterRMRequest)request.getBody();\n+        String ipAndPort = NetUtil.toStringAddress(ctx.channel().remoteAddress());\n         boolean isSuccess = false;\n         try {\n             if (null == checkAuthHandler || checkAuthHandler.regResourceManagerCheckAuth(message)) {\n                 ChannelManager.registerRMChannel(message, ctx.channel());\n                 Version.putChannelVersion(ctx.channel(), message.getVersion());\n                 isSuccess = true;\n+                if (LOGGER.isDebugEnabled()) {\n+                    LOGGER.info(\"checkAuth for client:{},vgroup:{},applicationId:{}\",", "originalCommit": "7e9526553770b120e499c995210b671c963d74cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc3MTkxMQ==", "url": "https://github.com/seata/seata/pull/2402#discussion_r392771911", "bodyText": "great found.", "author": "slievrly", "createdAt": "2020-03-16T03:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3NzkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc5NDgyMw==", "url": "https://github.com/seata/seata/pull/2402#discussion_r392794823", "bodyText": "done", "author": "lightClouds917", "createdAt": "2020-03-16T05:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3NzkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "7ede06716fbeb951e91ac851f592900fa7146b9e", "chunk": "diff --git a/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java b/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java\nindex 3d59f3b77..a684a6dc1 100644\n--- a/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java\n+++ b/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java\n\n@@ -114,7 +114,7 @@ public class DefaultServerMessageListenerImpl implements ServerMessageListener {\n                 Version.putChannelVersion(ctx.channel(), message.getVersion());\n                 isSuccess = true;\n                 if (LOGGER.isDebugEnabled()) {\n-                    LOGGER.info(\"checkAuth for client:{},vgroup:{},applicationId:{}\",\n+                    LOGGER.debug(\"checkAuth for client:{},vgroup:{},applicationId:{}\",\n                             ipAndPort,message.getTransactionServiceGroup(),message.getApplicationId());\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3Nzk3Ng==", "url": "https://github.com/seata/seata/pull/2402#discussion_r392677976", "bodyText": "debug and info Inconsistent", "author": "zjinlei", "createdAt": "2020-03-15T14:17:03Z", "path": "core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java", "diffHunk": "@@ -134,7 +139,7 @@ public void onRegTmMessage(RpcMessage request, ChannelHandlerContext ctx, Regist\n                 ChannelManager.registerTMChannel(message, ctx.channel());\n                 Version.putChannelVersion(ctx.channel(), message.getVersion());\n                 isSuccess = true;\n-                if (LOGGER.isInfoEnabled()) {\n+                if (LOGGER.isDebugEnabled()) {\n                     LOGGER.info(\"checkAuth for client:{},vgroup:{},applicationId:{}\",", "originalCommit": "7e9526553770b120e499c995210b671c963d74cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc5NDQ2Nw==", "url": "https://github.com/seata/seata/pull/2402#discussion_r392794467", "bodyText": "done", "author": "lightClouds917", "createdAt": "2020-03-16T05:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY3Nzk3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7ede06716fbeb951e91ac851f592900fa7146b9e", "chunk": "diff --git a/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java b/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java\nindex 3d59f3b77..a684a6dc1 100644\n--- a/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java\n+++ b/core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java\n\n@@ -140,7 +140,7 @@ public class DefaultServerMessageListenerImpl implements ServerMessageListener {\n                 Version.putChannelVersion(ctx.channel(), message.getVersion());\n                 isSuccess = true;\n                 if (LOGGER.isDebugEnabled()) {\n-                    LOGGER.info(\"checkAuth for client:{},vgroup:{},applicationId:{}\",\n+                    LOGGER.debug(\"checkAuth for client:{},vgroup:{},applicationId:{}\",\n                             ipAndPort,message.getTransactionServiceGroup(),message.getApplicationId());\n                 }\n             }\n"}}, {"oid": "7ede06716fbeb951e91ac851f592900fa7146b9e", "url": "https://github.com/seata/seata/commit/7ede06716fbeb951e91ac851f592900fa7146b9e", "message": "fix:change the log level", "committedDate": "2020-03-16T05:52:29Z", "type": "commit"}, {"oid": "a6f578895200ee0aa82c457f517a8c2431b32edc", "url": "https://github.com/seata/seata/commit/a6f578895200ee0aa82c457f517a8c2431b32edc", "message": "Merge branch 'develop' into optimize_registerlog", "committedDate": "2020-03-16T06:12:45Z", "type": "commit"}, {"oid": "baa714b3f30b0d3981eec530a645e16f74214062", "url": "https://github.com/seata/seata/commit/baa714b3f30b0d3981eec530a645e16f74214062", "message": "Merge branch 'develop' into optimize_registerlog", "committedDate": "2020-03-17T05:06:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NzgzMg==", "url": "https://github.com/seata/seata/pull/2402#discussion_r393447832", "bodyText": "not recommended to serialize the entire object of the message", "author": "zjinlei", "createdAt": "2020-03-17T05:10:04Z", "path": "core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java", "diffHunk": "@@ -106,20 +106,25 @@ public void onTrxMessage(RpcMessage request, ChannelHandlerContext ctx) {\n     @Override\n     public void onRegRmMessage(RpcMessage request, ChannelHandlerContext ctx, RegisterCheckAuthHandler checkAuthHandler) {\n         RegisterRMRequest message = (RegisterRMRequest)request.getBody();\n+        String ipAndPort = NetUtil.toStringAddress(ctx.channel().remoteAddress());\n         boolean isSuccess = false;\n         try {\n             if (null == checkAuthHandler || checkAuthHandler.regResourceManagerCheckAuth(message)) {\n                 ChannelManager.registerRMChannel(message, ctx.channel());\n                 Version.putChannelVersion(ctx.channel(), message.getVersion());\n                 isSuccess = true;\n+                if (LOGGER.isDebugEnabled()) {\n+                    LOGGER.debug(\"checkAuth for client:{},vgroup:{},applicationId:{}\",\n+                            ipAndPort,message.getTransactionServiceGroup(),message.getApplicationId());\n+                }\n             }\n         } catch (Exception exx) {\n             isSuccess = false;\n             LOGGER.error(exx.getMessage());\n         }\n         getServerMessageSender().sendResponse(request, ctx.channel(), new RegisterRMResponse(isSuccess));\n         if (LOGGER.isInfoEnabled()) {\n-            LOGGER.info(\"rm register success,message:{},channel:{}\", message, ctx.channel());\n+            LOGGER.info(\"RM register success,message:{},channel:{}\", message, ctx.channel());", "originalCommit": "baa714b3f30b0d3981eec530a645e16f74214062", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4NjYxOA==", "url": "https://github.com/seata/seata/pull/2402#discussion_r394086618", "bodyText": "not recommended to serialize the entire object of the message\n\nRm register success,message:RegisterRMRequest{resourceIds='jdbc:mysql://xx.xx.xx.xx/seata-account', applicationId='account-server', transactionServiceGroup='default'},channel:[id: 0xab3135a8, L:/192.168.158.80:8091 - R:/192.168.158.80:10720]\nThis is the log.\nI will optimize the message object ,and do we need the ctx.channel()?", "author": "lightClouds917", "createdAt": "2020-03-18T03:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NzgzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExMDkxMQ==", "url": "https://github.com/seata/seata/pull/2402#discussion_r394110911", "bodyText": "need ctx.channel()", "author": "zjinlei", "createdAt": "2020-03-18T05:15:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NzgzMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0Nzg1NQ==", "url": "https://github.com/seata/seata/pull/2402#discussion_r393447855", "bodyText": "not recommended to serialize the entire object of the message", "author": "zjinlei", "createdAt": "2020-03-17T05:10:10Z", "path": "core/src/main/java/io/seata/core/rpc/DefaultServerMessageListenerImpl.java", "diffHunk": "@@ -144,6 +149,9 @@ public void onRegTmMessage(RpcMessage request, ChannelHandlerContext ctx, Regist\n             LOGGER.error(exx.getMessage());\n         }\n         getServerMessageSender().sendResponse(request, ctx.channel(), new RegisterTMResponse(isSuccess));\n+        if (LOGGER.isInfoEnabled()) {\n+            LOGGER.info(\"TM register success,message:{},channel:{}\", message, ctx.channel());", "originalCommit": "baa714b3f30b0d3981eec530a645e16f74214062", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "0327b4d28f8cec8ebcaa4696f4bc323efa0997ba", "url": "https://github.com/seata/seata/commit/0327b4d28f8cec8ebcaa4696f4bc323efa0997ba", "message": "Merge branch 'develop' into optimize_registerlog", "committedDate": "2020-03-18T05:21:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExNjU0Mw==", "url": "https://github.com/seata/seata/pull/2402#discussion_r394116543", "bodyText": "remove duplicate calls", "author": "zjinlei", "createdAt": "2020-03-18T05:40:40Z", "path": "core/src/main/java/io/seata/core/rpc/netty/TmRpcClient.java", "diffHunk": "@@ -151,6 +151,10 @@ public String getTransactionServiceGroup() {\n     @Override\n     public void onRegisterMsgSuccess(String serverAddress, Channel channel, Object response,\n                                      AbstractMessage requestMessage) {\n+        if (LOGGER.isInfoEnabled()) {\n+            LOGGER.info(\"register TM success. server version:{},channel:{}\", ((RegisterTMResponse)response).getVersion(), channel);\n+            getClientChannelManager().registerChannel(serverAddress, channel);", "originalCommit": "0327b4d28f8cec8ebcaa4696f4bc323efa0997ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExNzgyMg==", "url": "https://github.com/seata/seata/pull/2402#discussion_r394117822", "bodyText": "my mistake,has removed", "author": "lightClouds917", "createdAt": "2020-03-18T05:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDExNjU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cb0bb0cf2cab152d66512d6011cd3a63f657bae9", "chunk": "diff --git a/core/src/main/java/io/seata/core/rpc/netty/TmRpcClient.java b/core/src/main/java/io/seata/core/rpc/netty/TmRpcClient.java\nindex 05b7ef798..9c68f8d9f 100644\n--- a/core/src/main/java/io/seata/core/rpc/netty/TmRpcClient.java\n+++ b/core/src/main/java/io/seata/core/rpc/netty/TmRpcClient.java\n\n@@ -153,7 +153,6 @@ public final class TmRpcClient extends AbstractRpcRemotingClient {\n                                      AbstractMessage requestMessage) {\n         if (LOGGER.isInfoEnabled()) {\n             LOGGER.info(\"register TM success. server version:{},channel:{}\", ((RegisterTMResponse)response).getVersion(), channel);\n-            getClientChannelManager().registerChannel(serverAddress, channel);\n         }\n         getClientChannelManager().registerChannel(serverAddress, channel);\n     }\n"}}, {"oid": "cb0bb0cf2cab152d66512d6011cd3a63f657bae9", "url": "https://github.com/seata/seata/commit/cb0bb0cf2cab152d66512d6011cd3a63f657bae9", "message": "fix:remove the redundant code", "committedDate": "2020-03-18T05:44:19Z", "type": "commit"}, {"oid": "f2e1694946d93f81eb3b7bd3ac8cf6cb1cf0eb54", "url": "https://github.com/seata/seata/commit/f2e1694946d93f81eb3b7bd3ac8cf6cb1cf0eb54", "message": "Merge branch 'develop' of github.com:seata/seata into optimize_registerlog", "committedDate": "2020-03-18T05:49:27Z", "type": "commit"}, {"oid": "14dfabfa025a5112f3aef464909139a55ae64a84", "url": "https://github.com/seata/seata/commit/14dfabfa025a5112f3aef464909139a55ae64a84", "message": "Merge branch 'optimize_registerlog' of github.com:lightClouds917/seata into optimize_registerlog", "committedDate": "2020-03-18T05:50:56Z", "type": "commit"}]}