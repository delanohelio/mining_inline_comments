{"pr_number": 2730, "pr_title": "optimize: optimize get config type from configuration", "pr_createdAt": "2020-05-25T09:37:16Z", "pr_url": "https://github.com/seata/seata/pull/2730", "timeline": [{"oid": "9ccf09d90e8b438e3a8e6561263f992c2b090d66", "url": "https://github.com/seata/seata/commit/9ccf09d90e8b438e3a8e6561263f992c2b090d66", "message": "bugfix: fix get configTypeName flaw", "committedDate": "2020-05-25T09:29:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3MDY2MQ==", "url": "https://github.com/seata/seata/pull/2730#discussion_r429870661", "bodyText": "How about do not change here?", "author": "l81893521", "createdAt": "2020-05-25T10:52:20Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigType.java", "diffHunk": "@@ -66,6 +66,6 @@ public static ConfigType getType(String name) {\n                 return configType;\n             }\n         }\n-        throw new IllegalArgumentException(\"illegal type:\" + name);\n+        throw new IllegalArgumentException(\"not support config type: \" + name);", "originalCommit": "9ccf09d90e8b438e3a8e6561263f992c2b090d66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1MTQ1Mg==", "url": "https://github.com/seata/seata/pull/2730#discussion_r429951452", "bodyText": "Because this is the getType method of the Enum class, the reason for the exception here is that the input parameter is illegal.", "author": "PeineLiang", "createdAt": "2020-05-25T14:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3MDY2MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3MTI1Mg==", "url": "https://github.com/seata/seata/pull/2730#discussion_r429871252", "bodyText": "if (configTypeName == null)\n\nThat s enough.", "author": "l81893521", "createdAt": "2020-05-25T10:53:45Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java", "diffHunk": "@@ -101,9 +102,14 @@ private static Configuration buildConfiguration() {\n             configTypeName = CURRENT_FILE_INSTANCE.getConfig(\n                 ConfigurationKeys.FILE_ROOT_CONFIG + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR\n                     + ConfigurationKeys.FILE_ROOT_TYPE);\n+\n+            if (StringUtils.isEmpty(configTypeName)) {", "originalCommit": "9ccf09d90e8b438e3a8e6561263f992c2b090d66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3MTU5OQ==", "url": "https://github.com/seata/seata/pull/2730#discussion_r429871599", "bodyText": "Because if\nconfigTypeName.equals(\"\")\n\nConfigType.getType would throw exception.", "author": "l81893521", "createdAt": "2020-05-25T10:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3MTI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "62c12a8800495007c92e78df49f37541b048ae32", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java b/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\nindex 344132fa..2052d477 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\n\n@@ -103,7 +103,7 @@ public final class ConfigurationFactory {\n                 ConfigurationKeys.FILE_ROOT_CONFIG + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR\n                     + ConfigurationKeys.FILE_ROOT_TYPE);\n \n-            if (StringUtils.isEmpty(configTypeName)) {\n+            if (StringUtils.isBlank(configTypeName)) {\n                 throw new NotSupportYetException(\"can not get config type: \" + configTypeName);\n             }\n \n"}}, {"oid": "62c12a8800495007c92e78df49f37541b048ae32", "url": "https://github.com/seata/seata/commit/62c12a8800495007c92e78df49f37541b048ae32", "message": "bugfix: fix get configTypeName flaw", "committedDate": "2020-05-25T14:00:31Z", "type": "commit"}, {"oid": "f88a4ec2695c3070a3df80de649ef6aa44cf5700", "url": "https://github.com/seata/seata/commit/f88a4ec2695c3070a3df80de649ef6aa44cf5700", "message": "delete unused import", "committedDate": "2020-05-25T14:45:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDExNTkyMA==", "url": "https://github.com/seata/seata/pull/2730#discussion_r430115920", "bodyText": "If throw it directly, is it would throw other exception?", "author": "l81893521", "createdAt": "2020-05-26T01:36:43Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java", "diffHunk": "@@ -101,9 +102,14 @@ private static Configuration buildConfiguration() {\n             configTypeName = CURRENT_FILE_INSTANCE.getConfig(\n                 ConfigurationKeys.FILE_ROOT_CONFIG + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR\n                     + ConfigurationKeys.FILE_ROOT_TYPE);\n+\n+            if (StringUtils.isBlank(configTypeName)) {\n+                throw new NotSupportYetException(\"can not get config type: \" + configTypeName);\n+            }\n+\n             configType = ConfigType.getType(configTypeName);\n         } catch (Exception e) {\n-            throw new NotSupportYetException(\"not support register type: \" + configTypeName, e);\n+            throw e;", "originalCommit": "f88a4ec2695c3070a3df80de649ef6aa44cf5700", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "65d4838b43b7d685f0a83817fd3725295ce64e74", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java b/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\nindex 2052d477..5b08c4dd 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\n\n@@ -104,7 +104,7 @@ public final class ConfigurationFactory {\n                     + ConfigurationKeys.FILE_ROOT_TYPE);\n \n             if (StringUtils.isBlank(configTypeName)) {\n-                throw new NotSupportYetException(\"can not get config type: \" + configTypeName);\n+                throw new NotSupportYetException(\"config type can not be null\");\n             }\n \n             configType = ConfigType.getType(configTypeName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE0MjQ4MA==", "url": "https://github.com/seata/seata/pull/2730#discussion_r430142480", "bodyText": "configTypeName is blank\uff0cwhy not print it out explicitly\uff1f", "author": "slievrly", "createdAt": "2020-05-26T03:52:18Z", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java", "diffHunk": "@@ -101,9 +102,14 @@ private static Configuration buildConfiguration() {\n             configTypeName = CURRENT_FILE_INSTANCE.getConfig(\n                 ConfigurationKeys.FILE_ROOT_CONFIG + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR\n                     + ConfigurationKeys.FILE_ROOT_TYPE);\n+\n+            if (StringUtils.isBlank(configTypeName)) {\n+                throw new NotSupportYetException(\"can not get config type: \" + configTypeName);", "originalCommit": "f88a4ec2695c3070a3df80de649ef6aa44cf5700", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE1MTc2Ng==", "url": "https://github.com/seata/seata/pull/2730#discussion_r430151766", "bodyText": "you are right ,i change the message to \"config type can not be null\"", "author": "PeineLiang", "createdAt": "2020-05-26T04:39:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE0MjQ4MA=="}], "type": "inlineReview", "revised_code": {"commit": "65d4838b43b7d685f0a83817fd3725295ce64e74", "chunk": "diff --git a/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java b/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\nindex 2052d477..5b08c4dd 100644\n--- a/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\n+++ b/config/seata-config-core/src/main/java/io/seata/config/ConfigurationFactory.java\n\n@@ -104,7 +104,7 @@ public final class ConfigurationFactory {\n                     + ConfigurationKeys.FILE_ROOT_TYPE);\n \n             if (StringUtils.isBlank(configTypeName)) {\n-                throw new NotSupportYetException(\"can not get config type: \" + configTypeName);\n+                throw new NotSupportYetException(\"config type can not be null\");\n             }\n \n             configType = ConfigType.getType(configTypeName);\n"}}, {"oid": "65d4838b43b7d685f0a83817fd3725295ce64e74", "url": "https://github.com/seata/seata/commit/65d4838b43b7d685f0a83817fd3725295ce64e74", "message": "change exception message", "committedDate": "2020-05-26T04:09:48Z", "type": "commit"}]}