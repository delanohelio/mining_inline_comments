{"pr_number": 2408, "pr_title": "Add some test coverage to api module", "pr_createdAt": "2020-12-25T05:32:47Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2408", "timeline": [{"oid": "9fb89ec89d7fa52893c4642aaae29190d7ed16b2", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9fb89ec89d7fa52893c4642aaae29190d7ed16b2", "message": "Add some test coverage to api module", "committedDate": "2020-12-25T05:32:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNTk0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2408#discussion_r548805945", "bodyText": "This was only needed because ImmutableBaggage wasn't abstract which it should be", "author": "anuraaga", "createdAt": "2020-12-25T05:33:05Z", "path": "api/all/src/main/java/io/opentelemetry/api/internal/ImmutableKeyValuePairs.java", "diffHunk": "@@ -29,9 +29,7 @@\n @Immutable\n public abstract class ImmutableKeyValuePairs<K, V> {\n \n-  protected List<Object> data() {\n-    return Collections.emptyList();", "originalCommit": "9fb89ec89d7fa52893c4642aaae29190d7ed16b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNTk1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2408#discussion_r548805952", "bodyText": "Never null", "author": "anuraaga", "createdAt": "2020-12-25T05:33:09Z", "path": "api/all/src/main/java/io/opentelemetry/api/baggage/propagation/W3CBaggagePropagator.java", "diffHunk": "@@ -40,7 +40,7 @@ private W3CBaggagePropagator() {}\n   @Override\n   public <C> void inject(Context context, C carrier, Setter<C> setter) {\n     Baggage baggage = Baggage.fromContext(context);\n-    if (baggage == null) {\n+    if (baggage.isEmpty()) {", "originalCommit": "9fb89ec89d7fa52893c4642aaae29190d7ed16b2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}