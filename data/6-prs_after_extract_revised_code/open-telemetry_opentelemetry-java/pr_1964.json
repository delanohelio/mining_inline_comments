{"pr_number": 1964, "pr_title": "Don't throw exceptions for invalid baggage like other APIs", "pr_createdAt": "2020-11-02T04:14:17Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964", "timeline": [{"oid": "fc6b72424274c099ffbe320aa818bed7f464feaa", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fc6b72424274c099ffbe320aa818bed7f464feaa", "message": "Don't throw exceptions for invalid baggage like other APIs", "committedDate": "2020-11-02T04:03:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExNzEzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516117134", "bodyText": "Maybe we should do a fine-level logging here (can be discussed in/as a follow-up).", "author": "carlosalberto", "createdAt": "2020-11-02T16:59:13Z", "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -135,6 +136,9 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n+      if (!isKeyValid(key) || !isValueValid(value)) {", "originalCommit": "fc6b72424274c099ffbe320aa818bed7f464feaa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTYyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516239622", "bodyText": "why not throwing exception?", "author": "bogdandrutu", "createdAt": "2020-11-02T20:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExNzEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0MTUyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516441526", "bodyText": "We currently don't log for parameter checks in most places I believe. Maybe we should, but I think we should do it consistently separate from removing the exceptions.\n@bogdandrutu To throw exceptions, I believe we'd need a spec change https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/error-handling.md#basic-error-handling-principles", "author": "anuraaga", "createdAt": "2020-11-03T06:00:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjExNzEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "85de66ceb6541eaaa7c9873b60689e7b6ba1c724", "chunk": "diff --git a/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java b/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\nindex 3f7bd2aca..597c9da7f 100644\n--- a/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\n+++ b/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\n\n@@ -136,15 +136,10 @@ class ImmutableBaggage implements Baggage {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n-      if (!isKeyValid(key) || !isValueValid(value)) {\n+      if (!isKeyValid(key) || !isValueValid(value) || entryMetadata == null) {\n         return this;\n       }\n-      entries.put(\n-          Objects.requireNonNull(key, \"key\"),\n-          Entry.create(\n-              key,\n-              Objects.requireNonNull(value, \"value\"),\n-              Objects.requireNonNull(entryMetadata, \"entryMetadata\")));\n+      entries.put(key, Entry.create(key, value, entryMetadata));\n       return this;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTQyMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516239423", "bodyText": "Mark metadata as Nullable", "author": "bogdandrutu", "createdAt": "2020-11-02T20:36:31Z", "path": "api/src/main/java/io/opentelemetry/api/baggage/EntryMetadata.java", "diffHunk": "@@ -26,6 +26,9 @@\n    * @return an {@code EntryMetadata}.\n    */\n   public static EntryMetadata create(String metadata) {", "originalCommit": "fc6b72424274c099ffbe320aa818bed7f464feaa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM3NzcxMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516377713", "bodyText": "We don't use Nullable on APIs which shouldn't be passed null but we have defensive behavior anyways. IIUC this is the answer to all your comments?", "author": "anuraaga", "createdAt": "2020-11-03T01:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzOTQyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDAzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516240034", "bodyText": "This is wrong, either not allow and check for null or throw exception.", "author": "bogdandrutu", "createdAt": "2020-11-02T20:37:47Z", "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -146,14 +150,14 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value) {\n-      entries.put(\n-          Objects.requireNonNull(key, \"key\"),\n-          Entry.create(key, Objects.requireNonNull(value, \"value\"), EntryMetadata.EMPTY));\n-      return this;\n+      return put(key, value, EntryMetadata.EMPTY);\n     }\n \n     @Override\n     public Baggage.Builder remove(String key) {\n+      if (key == null) {\n+        return this;\n+      }\n       entries.remove(Objects.requireNonNull(key, \"key\"));", "originalCommit": "fc6b72424274c099ffbe320aa818bed7f464feaa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0NDE2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516444165", "bodyText": "Oops, removed the redundant checks", "author": "anuraaga", "createdAt": "2020-11-03T06:11:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "54f68a4121aebe8c9dd924f8462a7ef3813d111d", "chunk": "diff --git a/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java b/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\nindex 3f7bd2aca..161f9a371 100644\n--- a/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\n+++ b/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\n\n@@ -158,7 +158,7 @@ class ImmutableBaggage implements Baggage {\n       if (key == null) {\n         return this;\n       }\n-      entries.remove(Objects.requireNonNull(key, \"key\"));\n+      entries.remove(key);\n       if (parent != null && parent.getEntryValue(key) != null) {\n         entries.put(key, null);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0MDIwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1964#discussion_r516240207", "bodyText": "Either throw exception or allow Nullable", "author": "bogdandrutu", "createdAt": "2020-11-02T20:38:11Z", "path": "api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java", "diffHunk": "@@ -135,6 +136,9 @@ public String toString() {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n+      if (!isKeyValid(key) || !isValueValid(value)) {\n+        return this;\n+      }\n       entries.put(\n           Objects.requireNonNull(key, \"key\"),", "originalCommit": "fc6b72424274c099ffbe320aa818bed7f464feaa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "85de66ceb6541eaaa7c9873b60689e7b6ba1c724", "chunk": "diff --git a/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java b/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\nindex 3f7bd2aca..597c9da7f 100644\n--- a/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\n+++ b/api/src/main/java/io/opentelemetry/api/baggage/ImmutableBaggage.java\n\n@@ -136,15 +136,10 @@ class ImmutableBaggage implements Baggage {\n \n     @Override\n     public Baggage.Builder put(String key, String value, EntryMetadata entryMetadata) {\n-      if (!isKeyValid(key) || !isValueValid(value)) {\n+      if (!isKeyValid(key) || !isValueValid(value) || entryMetadata == null) {\n         return this;\n       }\n-      entries.put(\n-          Objects.requireNonNull(key, \"key\"),\n-          Entry.create(\n-              key,\n-              Objects.requireNonNull(value, \"value\"),\n-              Objects.requireNonNull(entryMetadata, \"entryMetadata\")));\n+      entries.put(key, Entry.create(key, value, entryMetadata));\n       return this;\n     }\n \n"}}, {"oid": "54f68a4121aebe8c9dd924f8462a7ef3813d111d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/54f68a4121aebe8c9dd924f8462a7ef3813d111d", "message": "Remove redundant null check", "committedDate": "2020-11-03T05:59:41Z", "type": "commit"}, {"oid": "85de66ceb6541eaaa7c9873b60689e7b6ba1c724", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/85de66ceb6541eaaa7c9873b60689e7b6ba1c724", "message": "Remove redundant null checks", "committedDate": "2020-11-03T06:05:26Z", "type": "commit"}, {"oid": "0718417d622150a73fba4b18237660cf65bac60d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0718417d622150a73fba4b18237660cf65bac60d", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into etry-o-throw", "committedDate": "2020-11-17T02:14:24Z", "type": "commit"}]}