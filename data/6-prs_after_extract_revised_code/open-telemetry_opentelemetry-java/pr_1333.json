{"pr_number": 1333, "pr_title": "Make the IntervalMetricReader robust to exporter failures", "pr_createdAt": "2020-06-11T18:14:52Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333", "timeline": [{"oid": "676e5e244e4932d6618b95301ffd9878206c368a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/676e5e244e4932d6618b95301ffd9878206c368a", "message": "If an exporter throws an exception, log it, rather than having the IMR stop altogether.", "committedDate": "2020-06-11T18:01:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NTk0MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333#discussion_r439045941", "bodyText": "Do we need this section to be in this try block too?", "author": "carlosalberto", "createdAt": "2020-06-11T20:16:55Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -202,11 +206,15 @@ private Exporter(InternalState internalState) {\n \n     @Override\n     public void run() {\n-      List<MetricData> metricsList = new ArrayList<>();\n-      for (MetricProducer metricProducer : internalState.getMetricProducers()) {\n-        metricsList.addAll(metricProducer.getAllMetrics());\n+      try {\n+        List<MetricData> metricsList = new ArrayList<>();\n+        for (MetricProducer metricProducer : internalState.getMetricProducers()) {", "originalCommit": "676e5e244e4932d6618b95301ffd9878206c368a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NzU0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1333#discussion_r439047545", "bodyText": "Perhaps not, but if anything in here fails, we don't want the IMR to die, so it felt safer just to put everything in the block.", "author": "jkwatson", "createdAt": "2020-06-11T20:18:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NTk0MQ=="}], "type": "inlineReview", "revised_code": null}]}