{"pr_number": 1625, "pr_title": "Add incubator module with utilities for mutating SpanData.", "pr_createdAt": "2020-09-08T06:41:44Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625", "timeline": [{"oid": "7ec1e12d838d9ab264f77b0369f419af51cec74a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7ec1e12d838d9ab264f77b0369f419af51cec74a", "message": "Add incubator module with utilities for mutating SpanData.", "committedDate": "2020-09-08T06:41:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwOTQ4MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625#discussion_r485009481", "bodyText": "Can we name this something else, so we don't have the name collision, requiring using FQNs for hte interface?", "author": "jkwatson", "createdAt": "2020-09-08T15:27:41Z", "path": "sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanData.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.extensions.incubator.trace.data;\n+\n+import com.google.auto.value.AutoValue;\n+import io.opentelemetry.common.ReadableAttributes;\n+import io.opentelemetry.sdk.common.InstrumentationLibraryInfo;\n+import io.opentelemetry.sdk.resources.Resource;\n+import io.opentelemetry.trace.Span.Kind;\n+import io.opentelemetry.trace.Status;\n+import io.opentelemetry.trace.TraceFlags;\n+import io.opentelemetry.trace.TraceState;\n+import java.util.List;\n+import javax.annotation.concurrent.Immutable;\n+\n+/**\n+ * A {@link io.opentelemetry.sdk.trace.data.SpanData} implementation with a builder that can be used\n+ * to modify parts of a {@link io.opentelemetry.sdk.trace.data.SpanData}.\n+ *\n+ * <pre>{@code\n+ * String clientType = ClientConfig.parseUserAgent(\n+ *   data.getAttributes().get(SemanticAttributes.HTTP_USER_AGENT).getStringValue());\n+ * Attributes newAttributes = Attributes.newBuilder(data.getAttributes())\n+ *   .setAttribute(\"client_type\", clientType)\n+ *   .build();\n+ * data = io.opentelemetry.sdk.extensions.incubator.trace.data.SpanData.newBuilder(data)\n+ *   .setAttributes(newAttributes)\n+ *   .build();\n+ * exporter.export(data);\n+ *\n+ * }</pre>\n+ */\n+// AutoValue generated hashCode is fine but we need to define equals to accept the base SpanData\n+// type.\n+@Immutable\n+@AutoValue\n+public abstract class SpanData implements io.opentelemetry.sdk.trace.data.SpanData {", "originalCommit": "7ec1e12d838d9ab264f77b0369f419af51cec74a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2NDg3Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625#discussion_r489164877", "bodyText": "Not sure why I missed this review, sorry! I could have sworn I added a comment in description about it but didn't - I agree, but couldn't come up with a better name :( Any ideas?", "author": "anuraaga", "createdAt": "2020-09-16T05:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwOTQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MjY5MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1625#discussion_r489172691", "bodyText": "BuildableSpanData? SpanDataExtender? BuiltSpanData?\nMaybe just SpanDataBuilder for now, since it's really a temporary move to see if this is the best approach?", "author": "jkwatson", "createdAt": "2020-09-16T05:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwOTQ4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7f4e7111c6427145453989d6c10da115857e7539", "chunk": "diff --git a/sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanData.java b/sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanDataBuilder.java\nsimilarity index 84%\nrename from sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanData.java\nrename to sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanDataBuilder.java\nindex 7f9761855..d530ccb90 100644\n--- a/sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanData.java\n+++ b/sdk_extensions/tracing_incubator/src/main/java/io/opentelemetry/sdk/extensions/incubator/trace/data/SpanDataBuilder.java\n\n@@ -20,16 +20,16 @@ import com.google.auto.value.AutoValue;\n import io.opentelemetry.common.ReadableAttributes;\n import io.opentelemetry.sdk.common.InstrumentationLibraryInfo;\n import io.opentelemetry.sdk.resources.Resource;\n+import io.opentelemetry.sdk.trace.data.SpanData;\n import io.opentelemetry.trace.Span.Kind;\n import io.opentelemetry.trace.Status;\n-import io.opentelemetry.trace.TraceFlags;\n import io.opentelemetry.trace.TraceState;\n import java.util.List;\n import javax.annotation.concurrent.Immutable;\n \n /**\n- * A {@link io.opentelemetry.sdk.trace.data.SpanData} implementation with a builder that can be used\n- * to modify parts of a {@link io.opentelemetry.sdk.trace.data.SpanData}.\n+ * A {@link SpanData} implementation with a builder that can be used to modify parts of a {@link\n+ * SpanData}.\n  *\n  * <pre>{@code\n  * String clientType = ClientConfig.parseUserAgent(\n"}}, {"oid": "e796f67763030e0368794353ffccf5639fd94908", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e796f67763030e0368794353ffccf5639fd94908", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into incubator-spandata", "committedDate": "2020-09-24T06:49:50Z", "type": "commit"}, {"oid": "7f4e7111c6427145453989d6c10da115857e7539", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7f4e7111c6427145453989d6c10da115857e7539", "message": "Finish", "committedDate": "2020-09-24T06:59:38Z", "type": "commit"}]}