{"pr_number": 2365, "pr_title": "Avoid using mutable addSpanProcessor when trivial to change", "pr_createdAt": "2020-12-18T21:47:57Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2365", "timeline": [{"oid": "395ea22f08b0d983920075530603a0ab05bbbc15", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/395ea22f08b0d983920075530603a0ab05bbbc15", "message": "Avoid using mutable addSpanProcessor when trivial to change\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-12-18T22:00:50Z", "type": "forcePushed"}, {"oid": "6b25c7731bf5feb7b83b49132967c3a7968fb8b8", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6b25c7731bf5feb7b83b49132967c3a7968fb8b8", "message": "Avoid using mutable addSpanProcessor when trivial to change\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-12-18T22:30:47Z", "type": "forcePushed"}, {"oid": "b2c7fb03b9e3971e9f38251796955d9de00b897b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b2c7fb03b9e3971e9f38251796955d9de00b897b", "message": "Run go mod tidy on the master", "committedDate": "2020-12-18T22:34:32Z", "type": "commit"}, {"oid": "b2c7fb03b9e3971e9f38251796955d9de00b897b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b2c7fb03b9e3971e9f38251796955d9de00b897b", "message": "Run go mod tidy on the master", "committedDate": "2020-12-18T22:34:32Z", "type": "forcePushed"}, {"oid": "b8b33fdf36856af4c49b6e39ae9f548c5ae458c2", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b8b33fdf36856af4c49b6e39ae9f548c5ae458c2", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into avoidset", "committedDate": "2020-12-21T02:44:22Z", "type": "commit"}, {"oid": "9ac52bf524d4bbb500a2cfb019bb1e329ceefe06", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9ac52bf524d4bbb500a2cfb019bb1e329ceefe06", "message": "Fixes", "committedDate": "2020-12-21T02:56:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ4NTQ3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2365#discussion_r546485473", "bodyText": "Was missing this line", "author": "anuraaga", "createdAt": "2020-12-21T02:57:01Z", "path": "sdk/trace/src/main/java/io/opentelemetry/sdk/trace/TracerSharedState.java", "diffHunk": "@@ -39,7 +39,8 @@\n     this.idGenerator = idGenerator;\n     this.resource = resource;\n     this.activeTraceConfig = traceConfig;\n-    spanProcessors.forEach(this::addSpanProcessor);\n+    this.registeredSpanProcessors = new ArrayList<>(spanProcessors);\n+    activeSpanProcessor = SpanProcessor.composite(registeredSpanProcessors);", "originalCommit": "9ac52bf524d4bbb500a2cfb019bb1e329ceefe06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ4NTU1OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2365#discussion_r546485559", "bodyText": "Need to initialize fields that use mocks in BeforeEach so they run after mockito. It's a reason why I almost never initialize fields inline in test classes.", "author": "anuraaga", "createdAt": "2020-12-21T02:57:27Z", "path": "sdk/trace/src/test/java/io/opentelemetry/sdk/trace/SdkSpanBuilderTest.java", "diffHunk": "@@ -58,14 +58,16 @@\n           TraceState.getDefault());\n   private final SpanProcessor mockedSpanProcessor = Mockito.mock(SpanProcessor.class);\n \n-  private final SdkTracerProvider tracerSdkFactory = SdkTracerProvider.builder().build();\n-  private final SdkTracer sdkTracer = (SdkTracer) tracerSdkFactory.get(\"SpanBuilderSdkTest\");\n+  private SdkTracerProvider tracerSdkFactory;\n+  private SdkTracer sdkTracer;\n \n   @BeforeEach\n   public void setUp() {\n+    tracerSdkFactory = SdkTracerProvider.builder().addSpanProcessor(mockedSpanProcessor).build();", "originalCommit": "9ac52bf524d4bbb500a2cfb019bb1e329ceefe06", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}