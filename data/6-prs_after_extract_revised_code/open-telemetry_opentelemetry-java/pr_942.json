{"pr_number": 942, "pr_title": "Add collectAll method to the Meter and MeterProvider", "pr_createdAt": "2020-02-27T19:49:19Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/942", "timeline": [{"oid": "b02822bcc9f9c12eea507a46610fb16c3399afcc", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b02822bcc9f9c12eea507a46610fb16c3399afcc", "message": "Add collectAll method to the Meter and MeterProvider\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-27T19:48:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjA4NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385356084", "bodyText": "left hand side should just be declared as List<MetricData>\nI'd also prefer the temporary variable be called results, but that's a nitpick.", "author": "jkwatson", "createdAt": "2020-02-27T20:33:40Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java", "diffHunk": "@@ -81,4 +84,14 @@ public LabelSetSdk createLabelSet(String... keyValuePairs) {\n   public LabelSetSdk createLabelSet(Map<String, String> labels) {\n     return LabelSetSdk.create(labels);\n   }\n+\n+  Collection<MetricData> collectAll() {\n+    InstrumentRegistry instrumentRegistry = meterSharedState.getInstrumentRegistry();\n+    Collection<AbstractInstrument> instruments = instrumentRegistry.getInstruments();\n+    ArrayList<MetricData> ret = new ArrayList<>(instruments.size());", "originalCommit": "b02822bcc9f9c12eea507a46610fb16c3399afcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxNjk4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385416989", "bodyText": "Done.", "author": "bogdandrutu", "createdAt": "2020-02-27T22:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "3e4ad8eeba60c5e0ebe29e5533a1d56b09c9c3cb", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java b/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java\nindex 89a5d4b13..af582d478 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdk.java\n\n@@ -88,10 +89,10 @@ final class MeterSdk implements Meter {\n   Collection<MetricData> collectAll() {\n     InstrumentRegistry instrumentRegistry = meterSharedState.getInstrumentRegistry();\n     Collection<AbstractInstrument> instruments = instrumentRegistry.getInstruments();\n-    ArrayList<MetricData> ret = new ArrayList<>(instruments.size());\n+    List<MetricData> result = new ArrayList<>(instruments.size());\n     for (AbstractInstrument instrument : instruments) {\n-      ret.addAll(instrument.collectAll());\n+      result.addAll(instrument.collectAll());\n     }\n-    return ret;\n+    return result;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjI0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385356246", "bodyText": "List<MetricData> on the LHS", "author": "jkwatson", "createdAt": "2020-02-27T20:34:03Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java", "diffHunk": "@@ -50,6 +54,20 @@ public MeterSdk get(String instrumentationName, String instrumentationVersion) {\n     return registry.get(instrumentationName, instrumentationVersion);\n   }\n \n+  /**\n+   * Collects all the metrics and returns a collection of collected {@link MetricData}.\n+   *\n+   * @return a collection of collected {@link MetricData}.\n+   */\n+  public Collection<MetricData> collectAll() {\n+    Collection<MeterSdk> meters = registry.getComponents();\n+    ArrayList<MetricData> ret = new ArrayList<>(meters.size());", "originalCommit": "b02822bcc9f9c12eea507a46610fb16c3399afcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxNzAxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/942#discussion_r385417010", "bodyText": "Done.", "author": "bogdandrutu", "createdAt": "2020-02-27T22:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjI0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3e4ad8eeba60c5e0ebe29e5533a1d56b09c9c3cb", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java b/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java\nindex 18c5bb77d..356013c65 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/metrics/MeterSdkProvider.java\n\n@@ -61,11 +62,11 @@ public final class MeterSdkProvider implements MeterProvider {\n    */\n   public Collection<MetricData> collectAll() {\n     Collection<MeterSdk> meters = registry.getComponents();\n-    ArrayList<MetricData> ret = new ArrayList<>(meters.size());\n+    List<MetricData> result = new ArrayList<>(meters.size());\n     for (MeterSdk meter : meters) {\n-      ret.addAll(meter.collectAll());\n+      result.addAll(meter.collectAll());\n     }\n-    return Collections.unmodifiableCollection(ret);\n+    return Collections.unmodifiableCollection(result);\n   }\n \n   /**\n"}}, {"oid": "3e4ad8eeba60c5e0ebe29e5533a1d56b09c9c3cb", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3e4ad8eeba60c5e0ebe29e5533a1d56b09c9c3cb", "message": "Minor fixes from the review.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-27T22:50:41Z", "type": "commit"}]}