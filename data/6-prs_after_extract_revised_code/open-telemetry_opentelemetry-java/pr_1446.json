{"pr_number": 1446, "pr_title": "Add version of attribute setters that operate on Attributes.", "pr_createdAt": "2020-07-22T02:43:14Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1446", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUwMTQ5MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1446#discussion_r458501490", "bodyText": "This is needed in the other PR :)", "author": "bogdandrutu", "createdAt": "2020-07-22T02:46:37Z", "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -209,5 +209,20 @@\n   public static final StringAttributeSetter MESSAGING_OPERATION =\n       StringAttributeSetter.create(\"messaging.operation\");\n \n+  /** The name of an {@link io.opentelemetry.trace.Event} describing an exception. */\n+  public static final String EXCEPTION_EVENT_NAME = \"exception\";\n+  /** The type of the exception, i.e., it's fully qualified name. */\n+  public static final StringAttributeSetter EXCEPTION_TYPE =\n+      StringAttributeSetter.create(\"exception.type\");\n+  /** The exception message. */\n+  public static final StringAttributeSetter EXCEPTION_MESSAGE =\n+      StringAttributeSetter.create(\"exception.message\");\n+  /**\n+   * A string representing the stacktrace of an exception, as produced by {@link\n+   * Throwable#printStackTrace()}.\n+   */\n+  public static final StringAttributeSetter EXCEPTION_STACKTRACE =\n+      StringAttributeSetter.create(\"exception.stacktrace\");\n+", "originalCommit": "347d08857c45f734e2aeef91ebc375284bdca140", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUwMjAxOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1446#discussion_r458502019", "bodyText": "Oops thanks", "author": "anuraaga", "createdAt": "2020-07-22T02:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUwMTQ5MA=="}], "type": "inlineReview", "revised_code": {"commit": "63b0b488c71a8499fe2fbb1a17bb295f4c9bd899", "chunk": "diff --git a/api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java b/api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java\nindex 8f0aa41a4..469f73124 100644\n--- a/api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java\n+++ b/api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributes.java\n\n@@ -209,20 +209,5 @@ public final class SemanticAttributes {\n   public static final StringAttributeSetter MESSAGING_OPERATION =\n       StringAttributeSetter.create(\"messaging.operation\");\n \n-  /** The name of an {@link io.opentelemetry.trace.Event} describing an exception. */\n-  public static final String EXCEPTION_EVENT_NAME = \"exception\";\n-  /** The type of the exception, i.e., it's fully qualified name. */\n-  public static final StringAttributeSetter EXCEPTION_TYPE =\n-      StringAttributeSetter.create(\"exception.type\");\n-  /** The exception message. */\n-  public static final StringAttributeSetter EXCEPTION_MESSAGE =\n-      StringAttributeSetter.create(\"exception.message\");\n-  /**\n-   * A string representing the stacktrace of an exception, as produced by {@link\n-   * Throwable#printStackTrace()}.\n-   */\n-  public static final StringAttributeSetter EXCEPTION_STACKTRACE =\n-      StringAttributeSetter.create(\"exception.stacktrace\");\n-\n   private SemanticAttributes() {}\n }\n"}}, {"oid": "63b0b488c71a8499fe2fbb1a17bb295f4c9bd899", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/63b0b488c71a8499fe2fbb1a17bb295f4c9bd899", "message": "Add version of attribute setters that operate on Attributes.", "committedDate": "2020-07-22T02:48:33Z", "type": "commit"}, {"oid": "63b0b488c71a8499fe2fbb1a17bb295f4c9bd899", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/63b0b488c71a8499fe2fbb1a17bb295f4c9bd899", "message": "Add version of attribute setters that operate on Attributes.", "committedDate": "2020-07-22T02:48:33Z", "type": "forcePushed"}]}