{"pr_number": 1021, "pr_title": "Limit RecordEventsReadableSpan attributes to configured max", "pr_createdAt": "2020-03-16T14:56:36Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021", "timeline": [{"oid": "c9617bfb516a3a54d5060459974f97ca3748b51b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c9617bfb516a3a54d5060459974f97ca3748b51b", "message": "limit max attributes in RecordEventsReadableSpan and update tests", "committedDate": "2020-03-16T13:21:16Z", "type": "commit"}, {"oid": "37059ee4a278944ebaea469a124c397669f40ca9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/37059ee4a278944ebaea469a124c397669f40ca9", "message": "refactor dropped attribute count to total attibute count", "committedDate": "2020-03-16T15:47:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNzA1OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393137058", "bodyText": "Same needs to be implemented for dropped attributes in events and in links.", "author": "bogdandrutu", "createdAt": "2020-03-16T16:06:52Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java", "diffHunk": "@@ -570,11 +572,11 @@ public abstract Builder setInstrumentationLibraryInfo(\n     public abstract Builder setTotalRecordedLinks(int totalRecordedLinks);\n \n     /**\n-     * Set the number of dropped attributes on this span.\n+     * Set the total number of attributes recorded on this span.\n      *\n-     * @param droppedAttributeCount The number of dropped attributes.\n+     * @param totalAttributeCount The total number of attributes recorded.\n      * @return this\n      */\n-    public abstract Builder setDroppedAttributeCount(int droppedAttributeCount);\n+    public abstract Builder setTotalAttributeCount(int totalAttributeCount);", "originalCommit": "37059ee4a278944ebaea469a124c397669f40ca9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "5939b4814ae48e70550a5d3be6e656ade381d4ce", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5939b4814ae48e70550a5d3be6e656ade381d4ce", "message": "refactor link and event dropped counts to totals", "committedDate": "2020-03-16T16:29:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1Njk4MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393156981", "bodyText": "This should be attributes.size() correct? Same everywhere, otherwise we have negative dropped :)", "author": "bogdandrutu", "createdAt": "2020-03-16T16:36:36Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java", "diffHunk": "@@ -245,34 +245,35 @@ public static Link create(SpanContext spanContext, Map<String, AttributeValue> a\n       return new AutoValue_SpanData_Link(\n           spanContext,\n           Collections.unmodifiableMap(new LinkedHashMap<>(attributes)),\n-          ZERO_DROPPED_ATTRIBUTE_COUNT);\n+          DEFAULT_ATTRIBUTE_COUNT);", "originalCommit": "5939b4814ae48e70550a5d3be6e656ade381d4ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2MTUyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393161529", "bodyText": "Doh! Yes - you're right \ud83d\ude04 I'll fix that.", "author": "MikeGoldsmith", "createdAt": "2020-03-16T16:43:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1Njk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d1a45c9d626c776dd67ef0f25ecdfb623edd3f9a", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java\nindex 0060a7b75..e2bf9cea9 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/data/SpanData.java\n\n@@ -245,7 +247,7 @@ public abstract class SpanData {\n       return new AutoValue_SpanData_Link(\n           spanContext,\n           Collections.unmodifiableMap(new LinkedHashMap<>(attributes)),\n-          DEFAULT_ATTRIBUTE_COUNT);\n+          attributes.size());\n     }\n \n     /**\n"}}, {"oid": "d1a45c9d626c776dd67ef0f25ecdfb623edd3f9a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d1a45c9d626c776dd67ef0f25ecdfb623edd3f9a", "message": "set total attributes count to size of attribute map", "committedDate": "2020-03-16T19:29:21Z", "type": "commit"}, {"oid": "9777d13c163ea33205b33c56ecc9e1e83549b737", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9777d13c163ea33205b33c56ecc9e1e83549b737", "message": "fix some test names", "committedDate": "2020-03-16T19:45:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1Mzk2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393353964", "bodyText": "You could also add the span's name and the key of the dropped attribute to ease debugging here.", "author": "arminru", "createdAt": "2020-03-16T22:54:53Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -325,6 +330,15 @@ public void setAttribute(String key, AttributeValue value) {\n         logger.log(Level.FINE, \"Calling setAttribute() on an ended Span.\");\n         return;\n       }\n+      totalAttributeCount++;\n+      if (attributes.get(key) == null && attributes.size() >= maxNumberOfAttributes) {\n+        logger.log(\n+            Level.FINE,\n+            \"Span has maximum number of attributes (\"\n+                + maxNumberOfAttributes\n+                + \"). Dropping new entries.\");", "originalCommit": "9777d13c163ea33205b33c56ecc9e1e83549b737", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04da38d6b7fe8314b0d1cf2e8de0b2b4c75b22bb", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex 767f3835c..1c94fbcd4 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -334,9 +337,13 @@ final class RecordEventsReadableSpan implements ReadableSpan, Span {\n       if (attributes.get(key) == null && attributes.size() >= maxNumberOfAttributes) {\n         logger.log(\n             Level.FINE,\n-            \"Span has maximum number of attributes (\"\n+            \"Span with name '\"\n+                + this.name\n+                + \"' has reached the maximum number of attributes (\"\n                 + maxNumberOfAttributes\n-                + \"). Dropping new entries.\");\n+                + \"). Dropping attribute with key '\"\n+                + key\n+                + \"'\");\n         return;\n       }\n       attributes.putAttribute(key, value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1NDE2OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393354169", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private int maxNumberOfAttributes = 0;\n          \n          \n            \n              private final int maxNumberOfAttributes = 0;", "author": "arminru", "createdAt": "2020-03-16T22:55:27Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -63,6 +63,10 @@\n   private final List<Link> links;\n   // Number of links recorded.\n   private final int totalRecordedLinks;\n+  // Max number of attibutes per span.\n+  private int maxNumberOfAttributes = 0;", "originalCommit": "9777d13c163ea33205b33c56ecc9e1e83549b737", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7dcffd6554cb66d5ccaa4a63aad1803e3a145686", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex 767f3835c..2fcad44b7 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -64,7 +64,7 @@ final class RecordEventsReadableSpan implements ReadableSpan, Span {\n   // Number of links recorded.\n   private final int totalRecordedLinks;\n   // Max number of attibutes per span.\n-  private int maxNumberOfAttributes = 0;\n+  private final int maxNumberOfAttributes = 0;\n   // Number of attributes recorded.\n   private int totalAttributeCount = 0;\n \n"}}, {"oid": "7dcffd6554cb66d5ccaa4a63aad1803e3a145686", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7dcffd6554cb66d5ccaa4a63aad1803e3a145686", "message": "make maxNumberOfAttributes final\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-03-17T10:11:02Z", "type": "commit"}, {"oid": "e65d79fc73c8f65667fdf7d3871ee64b4e15e96e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e65d79fc73c8f65667fdf7d3871ee64b4e15e96e", "message": "add total attribute count to SpanData.Event (TimedEvent)", "committedDate": "2020-03-17T10:15:47Z", "type": "commit"}, {"oid": "04da38d6b7fe8314b0d1cf2e8de0b2b4c75b22bb", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/04da38d6b7fe8314b0d1cf2e8de0b2b4c75b22bb", "message": "add extra detail when dropping span attribute", "committedDate": "2020-03-17T14:26:28Z", "type": "commit"}, {"oid": "38d4db5eb9437f244fc444f80067531318d3b7d3", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/38d4db5eb9437f244fc444f80067531318d3b7d3", "message": "add extra detail when dropping link attributes", "committedDate": "2020-03-17T14:31:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwNTExMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393805113", "bodyText": "this should be moved down into the mutable section below and marked as @GuardedBy(\"lock\")", "author": "jkwatson", "createdAt": "2020-03-17T16:23:01Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -63,6 +64,12 @@\n   private final List<Link> links;\n   // Number of links recorded.\n   private final int totalRecordedLinks;\n+  // Max number of attibutes per span.\n+  private final int maxNumberOfAttributes;\n+  // Number of attributes recorded.\n+  private int totalAttributeCount = 0;", "originalCommit": "38d4db5eb9437f244fc444f80067531318d3b7d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNDQ2Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393934467", "bodyText": "Done \ud83d\udc4d", "author": "MikeGoldsmith", "createdAt": "2020-03-17T19:58:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwNTExMw=="}], "type": "inlineReview", "revised_code": {"commit": "b2a8309741ed5b42551b944c0bac4ae405eff1a3", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex 7ece4f137..a57b4289b 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -66,8 +66,6 @@ final class RecordEventsReadableSpan implements ReadableSpan, Span {\n   private final int totalRecordedLinks;\n   // Max number of attibutes per span.\n   private final int maxNumberOfAttributes;\n-  // Number of attributes recorded.\n-  private int totalAttributeCount = 0;\n   // Max number of attributes per event.\n   private final int maxNumberOfAttributesPerEvent;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwNTcwMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393805700", "bodyText": "I'd prefer to see the logging done with string interpolation, rather than a giant concatenated string like this.", "author": "jkwatson", "createdAt": "2020-03-17T16:23:50Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -325,6 +333,19 @@ public void setAttribute(String key, AttributeValue value) {\n         logger.log(Level.FINE, \"Calling setAttribute() on an ended Span.\");\n         return;\n       }\n+      totalAttributeCount++;\n+      if (attributes.get(key) == null && attributes.size() >= maxNumberOfAttributes) {\n+        logger.log(\n+            Level.FINE,\n+            \"Span with name '\"\n+                + this.name\n+                + \"' has reached the maximum number of attributes (\"\n+                + maxNumberOfAttributes\n+                + \"). Dropping attribute with key '\"\n+                + key\n+                + \"'\");", "originalCommit": "38d4db5eb9437f244fc444f80067531318d3b7d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNDUzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393934535", "bodyText": "Done \ud83d\udc4d", "author": "MikeGoldsmith", "createdAt": "2020-03-17T19:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwNTcwMA=="}], "type": "inlineReview", "revised_code": {"commit": "9f0435eccef5e5fa1b709bc54c14a36f97e3d422", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex 7ece4f137..ee05c490e 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -337,13 +342,8 @@ final class RecordEventsReadableSpan implements ReadableSpan, Span {\n       if (attributes.get(key) == null && attributes.size() >= maxNumberOfAttributes) {\n         logger.log(\n             Level.FINE,\n-            \"Span with name '\"\n-                + this.name\n-                + \"' has reached the maximum number of attributes (\"\n-                + maxNumberOfAttributes\n-                + \"). Dropping attribute with key '\"\n-                + key\n-                + \"'\");\n+            String.format(\n+                MAX_SPAN_ATTRIBUTE_COUNT_LOG_MESSAGE, this.name, maxNumberOfAttributes, key));\n         return;\n       }\n       attributes.putAttribute(key, value);\n"}}, {"oid": "b2a8309741ed5b42551b944c0bac4ae405eff1a3", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b2a8309741ed5b42551b944c0bac4ae405eff1a3", "message": "move numberOfAttributeCount and add Guardedby(\u201clock\u201d)", "committedDate": "2020-03-17T19:57:56Z", "type": "commit"}, {"oid": "9f0435eccef5e5fa1b709bc54c14a36f97e3d422", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9f0435eccef5e5fa1b709bc54c14a36f97e3d422", "message": "use string.format instead of concatenating strings", "committedDate": "2020-03-17T19:58:22Z", "type": "commit"}, {"oid": "7d3cacbdae78745d14221a53f891245842b9ebae", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7d3cacbdae78745d14221a53f891245842b9ebae", "message": "add suppression to max span log message for line length", "committedDate": "2020-03-17T20:05:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NDA0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1021#discussion_r393954044", "bodyText": "splitting the string across 2 lines is also totally fine.", "author": "jkwatson", "createdAt": "2020-03-17T20:36:48Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -50,6 +51,13 @@\n \n   private static final Logger logger = Logger.getLogger(Tracer.class.getName());\n \n+  @SuppressWarnings(\"checkstyle:LineLength\")", "originalCommit": "7d3cacbdae78745d14221a53f891245842b9ebae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}