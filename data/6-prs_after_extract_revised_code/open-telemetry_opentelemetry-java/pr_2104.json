{"pr_number": 2104, "pr_title": "Add factory methods instead of builder for TraceMultiPropagator", "pr_createdAt": "2020-11-20T04:22:15Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104", "timeline": [{"oid": "dfa69109c1176b2162a3e3a7d032de3f2e50273e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dfa69109c1176b2162a3e3a7d032de3f2e50273e", "message": "Add factory methods instead of builder for TraceMultiPropagator", "committedDate": "2020-11-20T04:21:43Z", "type": "commit"}, {"oid": "c8c6b97aba3432eb69c5742f3501a4fba000c3ac", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c8c6b97aba3432eb69c5742f3501a4fba000c3ac", "message": "spot", "committedDate": "2020-11-20T04:31:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r527810020", "bodyText": "this is an odd use. Do we think maybe this is one case where we could throw an exception? An empty multi-propagator is a very strange beast.", "author": "jkwatson", "createdAt": "2020-11-20T16:31:36Z", "path": "extensions/trace-propagators/src/test/java/io/opentelemetry/extension/trace/propagation/TraceMultiPropagatorTest.java", "diffHunk": "@@ -142,7 +132,7 @@ void inject_allFormats() {\n \n   @Test\n   void extract_noPropagators() {\n-    TextMapPropagator prop = TraceMultiPropagator.builder().build();\n+    TextMapPropagator prop = TraceMultiPropagator.create();", "originalCommit": "c8c6b97aba3432eb69c5742f3501a4fba000c3ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg5MjQyMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r527892423", "bodyText": "Agreed. Now that the Builder pattern is not used, we should prevent this from happening.", "author": "carlosalberto", "createdAt": "2020-11-20T18:24:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODA4NDY1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r528084657", "bodyText": "This is a bit tricky. I agree that this usage .create() has no use case. But I think these do\nTraceMultiPropagator.create(available.stream().filter(this::isEnabled).toArray(TextMapPropagator[]::new));\nTraceMultiPropagator.create(available.stream().filter(this::isEnabled).collect(toList()));\nand I generally would not require the result of such an expression to be non-empty. What do you think?", "author": "anuraaga", "createdAt": "2020-11-21T06:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODIyMTIxMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2104#discussion_r528221212", "bodyText": "It's definitely not harmful to have an empty multi-propagator. I was pondering if users might accidentally create one with nothing in it and be confused. There is a decent use-case for it, though, as you point out. I'm ok with it; but let's keep an eye out for confused users.", "author": "jkwatson", "createdAt": "2020-11-21T17:31:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxMDAyMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f074bc38a5c9c7c66022357d86740cdef707a551", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f074bc38a5c9c7c66022357d86740cdef707a551", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into tracemultipropagator-create", "committedDate": "2020-11-21T06:37:05Z", "type": "commit"}, {"oid": "3c8413223a910ff24d2865b2f8bdc3664b1c3001", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3c8413223a910ff24d2865b2f8bdc3664b1c3001", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into tracemultipropagator-create", "committedDate": "2020-11-25T01:28:01Z", "type": "commit"}]}