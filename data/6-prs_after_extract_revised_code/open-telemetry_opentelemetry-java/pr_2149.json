{"pr_number": 2149, "pr_title": "Remove Guava from SDK extensions, except zpages", "pr_createdAt": "2020-11-27T10:03:59Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2149", "timeline": [{"oid": "3374dee8de1286ccc1014f1615c09119c8b75e5e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/3374dee8de1286ccc1014f1615c09119c8b75e5e", "message": "Remove Guava from SDK extensions, except zpages", "committedDate": "2020-11-27T10:03:40Z", "type": "commit"}, {"oid": "268c0613d37421f1e35a8f7cf77803417e5b290a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/268c0613d37421f1e35a8f7cf77803417e5b290a", "message": "Fix", "committedDate": "2020-11-27T10:06:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyODExOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2149#discussion_r531528118", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                while ((read = is.read(buf)) != -1) {\n          \n          \n            \n                while ((read = is.read(buf)) > 0) {\n          \n      \n    \n    \n  \n\nAlthough -1 should also work according to https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html#read-byte:A-, I think this is slightly more clear.", "author": "Oberon00", "createdAt": "2020-11-27T10:53:01Z", "path": "sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/Ec2Resource.java", "diffHunk": "@@ -206,4 +206,16 @@ private String fetchIdentity(String token) {\n   private String fetchHostname(String token) {\n     return fetchString(\"GET\", hostnameUrl, token, /* includeTtl= */ false);\n   }\n+\n+  private static void readTo(@Nullable InputStream is, ByteArrayOutputStream os)\n+      throws IOException {\n+    if (is == null) {\n+      return;\n+    }\n+    byte[] buf = new byte[8192];\n+    int read;\n+    while ((read = is.read(buf)) != -1) {", "originalCommit": "268c0613d37421f1e35a8f7cf77803417e5b290a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2644b8819f342d3dfcf4911e570ddd0d8c603ea", "chunk": "diff --git a/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/Ec2Resource.java b/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/Ec2Resource.java\nindex 81fa67546..027a012b8 100644\n--- a/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/Ec2Resource.java\n+++ b/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/Ec2Resource.java\n\n@@ -214,7 +214,7 @@ public class Ec2Resource extends ResourceProvider {\n     }\n     byte[] buf = new byte[8192];\n     int read;\n-    while ((read = is.read(buf)) != -1) {\n+    while ((read = is.read(buf)) > 0) {\n       os.write(buf, 0, read);\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyODg1Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2149#discussion_r531528853", "bodyText": "A bit of a shame that we have to duplicate this. But I guess that is the best way, we don't want to be in the business of providing some public utils artifact.", "author": "Oberon00", "createdAt": "2020-11-27T10:54:27Z", "path": "sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/JdkHttpClient.java", "diffHunk": "@@ -134,4 +134,16 @@ private static KeyStore getKeystoreForTrustedCert(String certPath) {\n       return null;\n     }\n   }\n+\n+  private static void readTo(@Nullable InputStream is, ByteArrayOutputStream os)", "originalCommit": "268c0613d37421f1e35a8f7cf77803417e5b290a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTkxMTIyMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2149#discussion_r531911220", "bodyText": "I'll migrate Ec2Resource to use this class instead of duplicating logic soon :)", "author": "anuraaga", "createdAt": "2020-11-28T05:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyODg1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b2644b8819f342d3dfcf4911e570ddd0d8c603ea", "chunk": "diff --git a/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/JdkHttpClient.java b/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/JdkHttpClient.java\nindex 10f3f6d26..4217d3216 100644\n--- a/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/JdkHttpClient.java\n+++ b/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource/JdkHttpClient.java\n\n@@ -142,7 +142,7 @@ class JdkHttpClient {\n     }\n     byte[] buf = new byte[8192];\n     int read;\n-    while ((read = is.read(buf)) != -1) {\n+    while ((read = is.read(buf)) > 0) {\n       os.write(buf, 0, read);\n     }\n   }\n"}}, {"oid": "b2644b8819f342d3dfcf4911e570ddd0d8c603ea", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b2644b8819f342d3dfcf4911e570ddd0d8c603ea", "message": "Clean", "committedDate": "2020-11-28T05:50:37Z", "type": "commit"}]}