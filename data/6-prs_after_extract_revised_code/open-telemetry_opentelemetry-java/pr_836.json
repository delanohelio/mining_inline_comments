{"pr_number": 836, "pr_title": "Fix direct record methods on instrument to call unbind.", "pr_createdAt": "2020-02-07T21:07:20Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/836", "timeline": [{"oid": "105496c5d171aa41132d88a3e7bcd7ba3b93d5a1", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/105496c5d171aa41132d88a3e7bcd7ba3b93d5a1", "message": "Fix direct record methods on instrument to call unbind.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-07T21:07:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwOTk3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/836#discussion_r376609972", "bodyText": "Just thinking out loud...what would you think about having add return this so you could just write:\nbind(labelSet).add(delta).unbind();\n\nin one fluent call?", "author": "jkwatson", "createdAt": "2020-02-07T21:13:10Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -38,7 +38,9 @@ private DoubleCounterSdk(\n \n   @Override\n   public void add(double delta, LabelSet labelSet) {\n-    bind(labelSet).add(delta);\n+    BoundDoubleCounter boundDoubleCounter = bind(labelSet);\n+    boundDoubleCounter.add(delta);\n+    boundDoubleCounter.unbind();", "originalCommit": "105496c5d171aa41132d88a3e7bcd7ba3b93d5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMDcyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/836#discussion_r376610729", "bodyText": "I thought about this, but it is not that useful for users using bounds, but probably doesn't hurt. Happy to accept a followup PR to see how would look like:)", "author": "bogdandrutu", "createdAt": "2020-02-07T21:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwOTk3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMTc4MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/836#discussion_r376611781", "bodyText": "yeah, I agree. The bytecode probably ends up looking identical.", "author": "jkwatson", "createdAt": "2020-02-07T21:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwOTk3Mg=="}], "type": "inlineReview", "revised_code": null}]}