{"pr_number": 1277, "pr_title": "Convert the exportable Event to an interface", "pr_createdAt": "2020-05-26T18:41:56Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277", "timeline": [{"oid": "486b2b8855173609d035954d812883b9d1ca28ff", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/486b2b8855173609d035954d812883b9d1ca28ff", "message": "change Event to an interface with an impl to match", "committedDate": "2020-05-26T18:07:43Z", "type": "commit"}, {"oid": "bf8ab863ee433c112bf3c2ab063d2710b43427fb", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bf8ab863ee433c112bf3c2ab063d2710b43427fb", "message": "make TimedEvent implement the Event interface", "committedDate": "2020-05-26T18:18:55Z", "type": "commit"}, {"oid": "1cba5501c55b1929350db77e4303fda924e6a7b2", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1cba5501c55b1929350db77e4303fda924e6a7b2", "message": "don't make copies of already immutable event data", "committedDate": "2020-05-26T18:30:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430666835", "bodyText": "Instances of RawTimedEventWithEvent should be transformed into RawTimedEvent to avoid holding references to memory from the api.Event that we store.", "author": "bogdandrutu", "createdAt": "2020-05-26T19:47:16Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -505,13 +505,7 @@ int getTotalRecordedLinks() {\n     if (events.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    List<Event> result = new ArrayList<>(events.size());\n-    for (io.opentelemetry.sdk.trace.TimedEvent sourceEvent : events) {\n-      result.add(\n-          Event.create(\n-              sourceEvent.getEpochNanos(), sourceEvent.getName(), sourceEvent.getAttributes()));\n-    }\n-    return Collections.unmodifiableList(result);\n+    return Collections.unmodifiableList(new ArrayList<Event>(events));", "originalCommit": "1cba5501c55b1929350db77e4303fda924e6a7b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2ODU0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430668544", "bodyText": "ah, yes, you are correct. I'll write a unit test that verifies this, as well, since we don't have one at the moment.", "author": "jkwatson", "createdAt": "2020-05-26T19:50:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NjE3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1277#discussion_r430676172", "bodyText": "done. will re-run the benchmarks", "author": "jkwatson", "createdAt": "2020-05-26T20:04:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NjgzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b606108499c2c9acce165029785d423d078aeae2", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex 2869b2c8e..ad6495d0d 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -505,7 +506,23 @@ final class RecordEventsReadableSpan implements ReadableSpan, Span {\n     if (events.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    return Collections.unmodifiableList(new ArrayList<Event>(events));\n+\n+    List<Event> results = new ArrayList<>(events.size());\n+    for (TimedEvent event : events) {\n+      if (event instanceof RawTimedEventWithEvent) {\n+        // make sure to copy the data if the event is wrapping another one,\n+        // so we don't hold on the caller's memory\n+        results.add(\n+            TimedEvent.create(\n+                event.getEpochNanos(),\n+                event.getName(),\n+                event.getAttributes(),\n+                event.getTotalAttributeCount()));\n+      } else {\n+        results.add(event);\n+      }\n+    }\n+    return Collections.unmodifiableList(results);\n   }\n \n   @GuardedBy(\"lock\")\n"}}, {"oid": "b606108499c2c9acce165029785d423d078aeae2", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b606108499c2c9acce165029785d423d078aeae2", "message": "copy the wrapped event, so as not to hold to user's data", "committedDate": "2020-05-26T20:03:21Z", "type": "commit"}]}