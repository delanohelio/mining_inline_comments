{"pr_number": 1838, "pr_title": "Context.with/get, AttributesBuilder/LabelsBuilder.set", "pr_createdAt": "2020-10-20T02:54:18Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838", "timeline": [{"oid": "4a2c286be4d6581367c60def78e53f65fb094c50", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4a2c286be4d6581367c60def78e53f65fb094c50", "message": "Context.with, AttributesBuilder/LabelsBuilder.set", "committedDate": "2020-10-20T02:53:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3ODMyNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838#discussion_r508178324", "bodyText": "@jkwatson Any reason to use addAll before? Couldn't think of one so made this symmetrical with above", "author": "anuraaga", "createdAt": "2020-10-20T02:56:30Z", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -231,105 +231,105 @@ public Attributes build() {\n     /**\n      * Sets a String attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String value) {\n-      return setAttribute(stringKey(key), value);\n+    public Builder set(String key, String value) {\n+      return set(stringKey(key), value);\n     }\n \n     /**\n      * Sets a long attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, long value) {\n-      return setAttribute(longKey(key), value);\n+    public Builder set(String key, long value) {\n+      return set(longKey(key), value);\n     }\n \n     /**\n      * Sets a double attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, double value) {\n-      return setAttribute(doubleKey(key), value);\n+    public Builder set(String key, double value) {\n+      return set(doubleKey(key), value);\n     }\n \n     /**\n      * Sets a boolean attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, boolean value) {\n-      return setAttribute(booleanKey(key), value);\n+    public Builder set(String key, boolean value) {\n+      return set(booleanKey(key), value);\n     }\n \n     /**\n      * Sets a String array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, String... value) {\n-      return setAttribute(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, String... value) {\n+      return set(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Long array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Long... value) {\n-      return setAttribute(longArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Long... value) {\n+      return set(longArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Double array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Double... value) {\n-      return setAttribute(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Double... value) {\n+      return set(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n      * Sets a Boolean array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #setAttribute(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder setAttribute(String key, Boolean... value) {\n-      return setAttribute(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder set(String key, Boolean... value) {\n+      return set(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Add all the provided attributes to this Builder.\n+     * Sets all the provided attributes into this Builder.\n      *\n      * @return this Builder\n      */\n-    public Builder addAll(Attributes attributes) {\n+    public Builder setAll(Attributes attributes) {", "originalCommit": "4a2c286be4d6581367c60def78e53f65fb094c50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNDA5MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838#discussion_r508424090", "bodyText": "But this does not set as in \"replace current value\", it actually adds given attributes to already existing ones. No?", "author": "iNikem", "createdAt": "2020-10-20T11:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3ODMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NjUyMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1838#discussion_r508656521", "bodyText": "last-in wins, so this will replace current values. setAll is a better name. \ud83d\udc4d", "author": "jkwatson", "createdAt": "2020-10-20T16:09:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3ODMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "6fa28a154286c6a2e564d1b1c87804ef18a5bb32", "chunk": "diff --git a/api/src/main/java/io/opentelemetry/common/Attributes.java b/api/src/main/java/io/opentelemetry/common/Attributes.java\nindex 17206b10f..e3f23e537 100644\n--- a/api/src/main/java/io/opentelemetry/common/Attributes.java\n+++ b/api/src/main/java/io/opentelemetry/common/Attributes.java\n\n@@ -229,107 +229,107 @@ public abstract class Attributes extends ImmutableKeyValuePairs<AttributeKey, Ob\n     }\n \n     /**\n-     * Sets a String attribute into this.\n+     * Puts a String attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, String value) {\n-      return set(stringKey(key), value);\n+    public Builder put(String key, String value) {\n+      return put(stringKey(key), value);\n     }\n \n     /**\n-     * Sets a long attribute into this.\n+     * Puts a long attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, long value) {\n-      return set(longKey(key), value);\n+    public Builder put(String key, long value) {\n+      return put(longKey(key), value);\n     }\n \n     /**\n-     * Sets a double attribute into this.\n+     * Puts a double attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, double value) {\n-      return set(doubleKey(key), value);\n+    public Builder put(String key, double value) {\n+      return put(doubleKey(key), value);\n     }\n \n     /**\n-     * Sets a boolean attribute into this.\n+     * Puts a boolean attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, boolean value) {\n-      return set(booleanKey(key), value);\n+    public Builder put(String key, boolean value) {\n+      return put(booleanKey(key), value);\n     }\n \n     /**\n-     * Sets a String array attribute into this.\n+     * Puts a String array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, String... value) {\n-      return set(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder put(String key, String... value) {\n+      return put(stringArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Sets a Long array attribute into this.\n+     * Puts a Long array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, Long... value) {\n-      return set(longArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder put(String key, Long... value) {\n+      return put(longArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Sets a Double array attribute into this.\n+     * Puts a Double array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, Double... value) {\n-      return set(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder put(String key, Double... value) {\n+      return put(doubleArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Sets a Boolean array attribute into this.\n+     * Puts a Boolean array attribute into this.\n      *\n-     * <p>Note: It is strongly recommended to use {@link #set(AttributeKey, Object)}, and\n+     * <p>Note: It is strongly recommended to use {@link #put(AttributeKey, Object)}, and\n      * pre-allocate your keys, if possible.\n      *\n      * @return this Builder\n      */\n-    public Builder set(String key, Boolean... value) {\n-      return set(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n+    public Builder put(String key, Boolean... value) {\n+      return put(booleanArrayKey(key), value == null ? null : Arrays.asList(value));\n     }\n \n     /**\n-     * Sets all the provided attributes into this Builder.\n+     * Puts all the provided attributes into this Builder.\n      *\n      * @return this Builder\n      */\n-    public Builder setAll(Attributes attributes) {\n+    public Builder putAll(Attributes attributes) {\n       data.addAll(attributes.data());\n       return this;\n     }\n"}}, {"oid": "b3ac6a1d860ddd06962d14ee238403253881cac5", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b3ac6a1d860ddd06962d14ee238403253881cac5", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into context-with-set", "committedDate": "2020-10-21T02:55:35Z", "type": "commit"}, {"oid": "05b1dea90a0e4f6e60d7159277e98833e347ce40", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/05b1dea90a0e4f6e60d7159277e98833e347ce40", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into context-with-set", "committedDate": "2020-10-21T06:11:33Z", "type": "commit"}, {"oid": "6fa28a154286c6a2e564d1b1c87804ef18a5bb32", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6fa28a154286c6a2e564d1b1c87804ef18a5bb32", "message": "put", "committedDate": "2020-10-21T08:06:18Z", "type": "commit"}, {"oid": "32efd43c90051b8bd97834c6cdf2dc742b680b14", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/32efd43c90051b8bd97834c6cdf2dc742b680b14", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into context-with-set", "committedDate": "2020-10-22T02:28:14Z", "type": "commit"}]}