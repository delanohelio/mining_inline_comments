{"pr_number": 1599, "pr_title": "Add an overload to the recordException method to support additional attributes", "pr_createdAt": "2020-08-28T07:54:27Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1599", "timeline": [{"oid": "ac8967ac75c24140528c4040a2f554472bb15ccc", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ac8967ac75c24140528c4040a2f554472bb15ccc", "message": "Add an overload to the recordException method to support additional attributes", "committedDate": "2020-08-28T07:51:06Z", "type": "commit"}, {"oid": "29ef46df9270791455831a44c86ddc9d3061046c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/29ef46df9270791455831a44c86ddc9d3061046c", "message": "Fix Codecov", "committedDate": "2020-08-28T08:34:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1NDUzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1599#discussion_r479454537", "bodyText": "why not just assign this to additionalAttributes.newBuilder() if the additional attributes are provided? I think the code will read more simply and be slightly more efficient.", "author": "jkwatson", "createdAt": "2020-08-28T17:56:07Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -428,11 +428,25 @@ public void setStatus(Status status) {\n \n   @Override\n   public void recordException(Throwable exception) {\n+    recordException(exception, null);\n+  }\n+\n+  @Override\n+  public void recordException(Throwable exception, Attributes additionalAttributes) {\n     if (exception == null) {\n       return;\n     }\n     long timestamp = clock.now();\n-    Attributes.Builder attributes = Attributes.newBuilder();\n+    final Attributes.Builder attributes = Attributes.newBuilder();", "originalCommit": "29ef46df9270791455831a44c86ddc9d3061046c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NjM0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1599#discussion_r479466340", "bodyText": "\ud83d\udc4d Thanks. forgot this. : )", "author": "dengliming", "createdAt": "2020-08-28T18:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1NDUzNw=="}], "type": "inlineReview", "revised_code": {"commit": "fb55db1d5deddfa6ef867bbd51efc6bdf40bb206", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex 4c1c3ae9a..d9ffcb2b8 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -437,16 +437,10 @@ final class RecordEventsReadableSpan implements ReadWriteSpan {\n       return;\n     }\n     long timestamp = clock.now();\n-    final Attributes.Builder attributes = Attributes.newBuilder();\n-    if (additionalAttributes != null) {\n-      additionalAttributes.forEach(\n-          new KeyValueConsumer<AttributeValue>() {\n-            @Override\n-            public void consume(String key, AttributeValue value) {\n-              attributes.setAttribute(key, value);\n-            }\n-          });\n-    }\n+    Attributes.Builder attributes =\n+        additionalAttributes != null\n+            ? Attributes.newBuilder(additionalAttributes)\n+            : Attributes.newBuilder();\n     SemanticAttributes.EXCEPTION_TYPE.set(attributes, exception.getClass().getCanonicalName());\n     if (exception.getMessage() != null) {\n       SemanticAttributes.EXCEPTION_MESSAGE.set(attributes, exception.getMessage());\n"}}, {"oid": "fb55db1d5deddfa6ef867bbd51efc6bdf40bb206", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/fb55db1d5deddfa6ef867bbd51efc6bdf40bb206", "message": "Fix review", "committedDate": "2020-08-28T18:21:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3NjYyOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1599#discussion_r479476628", "bodyText": "even simpler is just ? addiontalAttributes.toBuilder() yes?", "author": "jkwatson", "createdAt": "2020-08-28T18:44:48Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -428,11 +428,19 @@ public void setStatus(Status status) {\n \n   @Override\n   public void recordException(Throwable exception) {\n+    recordException(exception, null);\n+  }\n+\n+  @Override\n+  public void recordException(Throwable exception, Attributes additionalAttributes) {\n     if (exception == null) {\n       return;\n     }\n     long timestamp = clock.now();\n-    Attributes.Builder attributes = Attributes.newBuilder();\n+    Attributes.Builder attributes =\n+        additionalAttributes != null\n+            ? Attributes.newBuilder(additionalAttributes)", "originalCommit": "fb55db1d5deddfa6ef867bbd51efc6bdf40bb206", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3ODUzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1599#discussion_r479478539", "bodyText": "yes. fixed at lastest commit. thanks.", "author": "dengliming", "createdAt": "2020-08-28T18:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3NjYyOA=="}], "type": "inlineReview", "revised_code": {"commit": "214356e938dad89d826cc0519580fa1d2f10c232", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex d9ffcb2b8..0a3ad5dd5 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -438,9 +438,7 @@ final class RecordEventsReadableSpan implements ReadWriteSpan {\n     }\n     long timestamp = clock.now();\n     Attributes.Builder attributes =\n-        additionalAttributes != null\n-            ? Attributes.newBuilder(additionalAttributes)\n-            : Attributes.newBuilder();\n+        additionalAttributes != null ? additionalAttributes.toBuilder() : Attributes.newBuilder();\n     SemanticAttributes.EXCEPTION_TYPE.set(attributes, exception.getClass().getCanonicalName());\n     if (exception.getMessage() != null) {\n       SemanticAttributes.EXCEPTION_MESSAGE.set(attributes, exception.getMessage());\n"}}, {"oid": "214356e938dad89d826cc0519580fa1d2f10c232", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/214356e938dad89d826cc0519580fa1d2f10c232", "message": "Fix review", "committedDate": "2020-08-28T18:48:42Z", "type": "commit"}]}