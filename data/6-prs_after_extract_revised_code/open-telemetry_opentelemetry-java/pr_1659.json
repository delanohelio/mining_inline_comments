{"pr_number": 1659, "pr_title": "Update env var names", "pr_createdAt": "2020-09-17T13:59:08Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1659", "timeline": [{"oid": "7c4e7c1dbfc66fe43e05e779b35b010d888ec0eb", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7c4e7c1dbfc66fe43e05e779b35b010d888ec0eb", "message": "Update env var names", "committedDate": "2020-09-17T13:57:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzNzgzMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1659#discussion_r490337832", "bodyText": "Rather than the clever replacing, I think I'd personally prefer just having another constant defined with the non-metric value. To me, that makes the code a little easier to read. Also, the common properties could be put somewhere common and shared between the metric/span exporter config.", "author": "jkwatson", "createdAt": "2020-09-17T15:20:43Z", "path": "exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java", "diffHunk": "@@ -282,24 +292,43 @@ private Builder() {}\n     protected Builder fromConfigMap(\n         Map<String, String> configMap, NamingConvention namingConvention) {\n       configMap = namingConvention.normalize(configMap);\n-      Long value = getLongProperty(KEY_METRIC_TIMEOUT, configMap);\n+\n+      Long value = getLongProperty(KEY_TIMEOUT, configMap);\n+      if (value == null) {\n+        value = getLongProperty(KEY_TIMEOUT.replace(\"metric\", \"\"), configMap);", "originalCommit": "7c4e7c1dbfc66fe43e05e779b35b010d888ec0eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzk2Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1659#discussion_r491833967", "bodyText": "Done in 34c8c25", "author": "thisthat", "createdAt": "2020-09-21T07:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzNzgzMg=="}], "type": "inlineReview", "revised_code": {"commit": "34c8c256f20294d6cdca7fdccf6ee86883a2d086", "chunk": "diff --git a/exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java b/exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java\nindex 9862242ec..838660a1c 100644\n--- a/exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java\n+++ b/exporters/otlp/src/main/java/io/opentelemetry/exporters/otlp/OtlpGrpcMetricExporter.java\n\n@@ -295,7 +295,7 @@ public final class OtlpGrpcMetricExporter implements MetricExporter {\n \n       Long value = getLongProperty(KEY_TIMEOUT, configMap);\n       if (value == null) {\n-        value = getLongProperty(KEY_TIMEOUT.replace(\"metric\", \"\"), configMap);\n+        value = getLongProperty(CommonProperties.KEY_TIMEOUT, configMap);\n       }\n       if (value != null) {\n         this.setDeadlineMs(value);\n"}}, {"oid": "34c8c256f20294d6cdca7fdccf6ee86883a2d086", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/34c8c256f20294d6cdca7fdccf6ee86883a2d086", "message": "Share common property names", "committedDate": "2020-09-21T07:18:09Z", "type": "commit"}, {"oid": "f5b2df6f3d46777bd3035f479e15806f3d2d271c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/f5b2df6f3d46777bd3035f479e15806f3d2d271c", "message": "Add license header", "committedDate": "2020-09-21T13:21:15Z", "type": "commit"}]}