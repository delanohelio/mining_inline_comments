{"pr_number": 745, "pr_title": "Change LabelSet creation to use varargs, rather than overloaded k/v methods.", "pr_createdAt": "2020-01-10T22:40:03Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/745", "timeline": [{"oid": "c5f705e6c1874846a39f708cc7e8310213776047", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c5f705e6c1874846a39f708cc7e8310213776047", "message": "switch to varargs", "committedDate": "2020-01-10T22:21:15Z", "type": "commit"}, {"oid": "74b30f7d395ded4aa92cee83aa04dfc9e88d2f8b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/74b30f7d395ded4aa92cee83aa04dfc9e88d2f8b", "message": "update the sdk to handle the varargs option", "committedDate": "2020-01-10T22:21:15Z", "type": "commit"}, {"oid": "a9c55968aa16c127343d6f2b6c7b5d76fc7beb1b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a9c55968aa16c127343d6f2b6c7b5d76fc7beb1b", "message": "format", "committedDate": "2020-01-10T22:21:15Z", "type": "commit"}, {"oid": "91c701fb508c9214df4e439595265a170a1c8d4e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/91c701fb508c9214df4e439595265a170a1c8d4e", "message": "rename a variable to make more sense", "committedDate": "2020-01-10T22:33:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MTkzOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r365471938", "bodyText": "Why are these removed?", "author": "bogdandrutu", "createdAt": "2020-01-10T23:38:52Z", "path": "sdk/src/test/java/io/opentelemetry/sdk/metrics/MeterSdkTest.java", "diffHunk": "@@ -54,19 +53,15 @@ public void testLabelSets() {\n     MeterSdk testSdk = new MeterSdk();\n \n     assertThat(testSdk.emptyLabelSet()).isSameInstanceAs(testSdk.emptyLabelSet());\n+    assertThat(testSdk.emptyLabelSet()).isSameInstanceAs(testSdk.createLabelSet());\n     assertThat(testSdk.emptyLabelSet())\n         .isSameInstanceAs(testSdk.createLabelSet(Collections.<String, String>emptyMap()));\n+\n     assertThat(testSdk.createLabelSet(\"key\", \"value\"))\n         .isEqualTo(testSdk.createLabelSet(\"key\", \"value\"));\n-    assertThat(testSdk.createLabelSet(\"k1\", \"v1\", \"k2\", \"v2\"))", "originalCommit": "91c701fb508c9214df4e439595265a170a1c8d4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MjI1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r365472257", "bodyText": "Hm. I guess having at least one of more than a single pair would be useful. Beyond that, it seems like the value will be very low, since varargs is varargs. I'll put the 2-key version back.", "author": "jkwatson", "createdAt": "2020-01-10T23:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MTkzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NDM1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r365474357", "bodyText": "done", "author": "jkwatson", "createdAt": "2020-01-10T23:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MTkzOA=="}], "type": "inlineReview", "revised_code": {"commit": "d988cbd40fb7912dace3b50326157ddb9c0091b9", "chunk": "diff --git a/sdk/src/test/java/io/opentelemetry/sdk/metrics/MeterSdkTest.java b/sdk/src/test/java/io/opentelemetry/sdk/metrics/MeterSdkTest.java\nindex b6d343cae..d6aa22c10 100644\n--- a/sdk/src/test/java/io/opentelemetry/sdk/metrics/MeterSdkTest.java\n+++ b/sdk/src/test/java/io/opentelemetry/sdk/metrics/MeterSdkTest.java\n\n@@ -60,6 +60,9 @@ public class MeterSdkTest {\n     assertThat(testSdk.createLabelSet(\"key\", \"value\"))\n         .isEqualTo(testSdk.createLabelSet(\"key\", \"value\"));\n \n+    assertThat(testSdk.createLabelSet(\"k1\", \"v1\", \"k2\", \"v2\"))\n+        .isEqualTo(testSdk.createLabelSet(\"k1\", \"v1\", \"k2\", \"v2\"));\n+\n     assertThat(testSdk.createLabelSet(Collections.singletonMap(\"key\", \"value\")))\n         .isEqualTo(testSdk.createLabelSet(\"key\", \"value\"));\n \n"}}, {"oid": "d988cbd40fb7912dace3b50326157ddb9c0091b9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d988cbd40fb7912dace3b50326157ddb9c0091b9", "message": "add back a test with 2 key/value pairs", "committedDate": "2020-01-10T23:42:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNjU4OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366026588", "bodyText": "Do we need this method anymore?", "author": "bogdandrutu", "createdAt": "2020-01-13T21:03:40Z", "path": "api/src/main/java/io/opentelemetry/metrics/DefaultMeter.java", "diffHunk": "@@ -125,49 +125,21 @@ public BatchRecorder newMeasureBatchRecorder() {\n   }\n \n   @Override\n-  public LabelSet createLabelSet(String k1, String v1) {\n-    Utils.checkNotNull(k1, \"k1\");\n-    Utils.checkNotNull(v1, \"v1\");\n-    return NoopLabelSet.INSTANCE;\n-  }\n-\n-  @Override\n-  public LabelSet createLabelSet(String k1, String v1, String k2, String v2) {\n-    Utils.checkNotNull(k1, \"k1\");\n-    Utils.checkNotNull(v1, \"v1\");\n-    Utils.checkNotNull(k2, \"k2\");\n-    Utils.checkNotNull(v2, \"v2\");\n-    return NoopLabelSet.INSTANCE;\n-  }\n-\n-  @Override\n-  public LabelSet createLabelSet(String k1, String v1, String k2, String v2, String k3, String v3) {\n-    Utils.checkNotNull(k1, \"k1\");\n-    Utils.checkNotNull(v1, \"v1\");\n-    Utils.checkNotNull(k2, \"k2\");\n-    Utils.checkNotNull(v2, \"v2\");\n-    Utils.checkNotNull(k3, \"k3\");\n-    Utils.checkNotNull(v3, \"v3\");\n-    return NoopLabelSet.INSTANCE;\n-  }\n-\n-  @Override\n-  public LabelSet createLabelSet(\n-      String k1, String v1, String k2, String v2, String k3, String v3, String k4, String v4) {\n-    Utils.checkNotNull(k1, \"k1\");\n-    Utils.checkNotNull(v1, \"v1\");\n-    Utils.checkNotNull(k2, \"k2\");\n-    Utils.checkNotNull(v2, \"v2\");\n-    Utils.checkNotNull(k3, \"k3\");\n-    Utils.checkNotNull(v3, \"v3\");\n-    Utils.checkNotNull(k4, \"k4\");\n-    Utils.checkNotNull(v4, \"v4\");\n+  public LabelSet createLabelSet(String... keyValuePairs) {\n+    Utils.checkArgument(\n+        keyValuePairs.length % 2 == 0,\n+        \"You must provide an even number of key/value pair arguments.\");\n+    for (int i = 0; i < keyValuePairs.length; i += 2) {\n+      String key = keyValuePairs[i];\n+      Utils.checkNotNull(key, \"You cannot provide null keys for LabelSet creation.\");\n+    }\n     return NoopLabelSet.INSTANCE;\n   }\n \n   @Override\n   public LabelSet createLabelSet(Map<String, String> labels) {", "originalCommit": "d988cbd40fb7912dace3b50326157ddb9c0091b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAzNDE3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366034172", "bodyText": "We could definitely get rid of it, if we have varargs, but I suspect there might be API usages that would want to have a static Map around to use. I'd like to get some feedback on the varargs option before we remove the Map option. We could also get rid of the empty method, since you can just call the varargs one with no arguments to get the empty LabelSet back.", "author": "jkwatson", "createdAt": "2020-01-13T21:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNjU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzQ0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366123443", "bodyText": "Definitely the empty api does not make that much sense. I am for removing the empty and maybe ask some users for feedback for the map?", "author": "bogdandrutu", "createdAt": "2020-01-14T02:12:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNjU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzMDQxMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366130412", "bodyText": "Sounds good to me. I'll make those changes and update the PR.", "author": "jkwatson", "createdAt": "2020-01-14T02:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNjU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyMzM0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366423348", "bodyText": "Do you want to do the changes in this PR or separately?", "author": "bogdandrutu", "createdAt": "2020-01-14T16:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNjU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyMzk5MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366423990", "bodyText": "updated in this PR already. :)", "author": "jkwatson", "createdAt": "2020-01-14T16:01:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAyNjU4OA=="}], "type": "inlineReview", "revised_code": {"commit": "447b4cb8d2ca1847bd136631c99f7f35de3c6c2b", "chunk": "diff --git a/api/src/main/java/io/opentelemetry/metrics/DefaultMeter.java b/api/src/main/java/io/opentelemetry/metrics/DefaultMeter.java\nindex c666ace86..ce651d0f5 100644\n--- a/api/src/main/java/io/opentelemetry/metrics/DefaultMeter.java\n+++ b/api/src/main/java/io/opentelemetry/metrics/DefaultMeter.java\n\n@@ -143,11 +143,6 @@ public final class DefaultMeter implements Meter {\n     return NoopLabelSet.INSTANCE;\n   }\n \n-  @Override\n-  public LabelSet emptyLabelSet() {\n-    return NoopLabelSet.INSTANCE;\n-  }\n-\n   /** No-op implementation of LongGauge interface. */\n   @Immutable\n   private static final class NoopLongGauge implements LongGauge {\n"}}, {"oid": "447b4cb8d2ca1847bd136631c99f7f35de3c6c2b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/447b4cb8d2ca1847bd136631c99f7f35de3c6c2b", "message": "replace the emptyLabelSet method with the empty varargs call", "committedDate": "2020-01-14T16:00:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4NTM2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366485366", "bodyText": "We should return a NoopLabelSet to not crash if they call record on a metric with the result of this.", "author": "bogdandrutu", "createdAt": "2020-01-14T17:54:27Z", "path": "api/src/test/java/io/opentelemetry/OpenTelemetryTest.java", "diffHunk": "@@ -371,27 +371,7 @@ public BatchRecorder newMeasureBatchRecorder() {\n \n     @Nullable\n     @Override\n-    public LabelSet createLabelSet(String k1, String v1) {\n-      return null;\n-    }\n-\n-    @Nullable\n-    @Override\n-    public LabelSet createLabelSet(String k1, String v1, String k2, String v2) {\n-      return null;\n-    }\n-\n-    @Nullable\n-    @Override\n-    public LabelSet createLabelSet(\n-        String k1, String v1, String k2, String v2, String k3, String v3) {\n-      return null;\n-    }\n-\n-    @Nullable\n-    @Override\n-    public LabelSet createLabelSet(\n-        String k1, String v1, String k2, String v2, String k3, String v3, String k4, String v4) {\n+    public LabelSet createLabelSet(String... keyValuePairs) {\n       return null;", "originalCommit": "447b4cb8d2ca1847bd136631c99f7f35de3c6c2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5OTI0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/745#discussion_r366499243", "bodyText": "this is in test code...", "author": "jkwatson", "createdAt": "2020-01-14T18:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4NTM2Ng=="}], "type": "inlineReview", "revised_code": null}]}