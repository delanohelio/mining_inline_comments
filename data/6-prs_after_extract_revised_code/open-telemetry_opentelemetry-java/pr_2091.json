{"pr_number": 2091, "pr_title": "Hide implementation of MultiSpanExporter/Processor behind interface.", "pr_createdAt": "2020-11-18T08:39:54Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091", "timeline": [{"oid": "9a6e6aa4cb0f3925aea6c8d62ac40647204ce4c4", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9a6e6aa4cb0f3925aea6c8d62ac40647204ce4c4", "message": "Hide implementation of MultiSpanExporter behind interface.", "committedDate": "2020-11-18T07:57:17Z", "type": "commit"}, {"oid": "93706368f57685d0ef3019a7a05e84776c7d5e19", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/93706368f57685d0ef3019a7a05e84776c7d5e19", "message": "spanprocessor too", "committedDate": "2020-11-18T09:09:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzM3OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091#discussion_r526223379", "bodyText": "allOf() maybe?", "author": "jkwatson", "createdAt": "2020-11-18T16:24:49Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java", "diffHunk": "@@ -8,12 +8,37 @@\n import io.opentelemetry.api.trace.Span;\n import io.opentelemetry.context.Context;\n import io.opentelemetry.sdk.common.CompletableResultCode;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n \n /**\n  * SpanProcessor is the interface {@code TracerSdk} uses to allow synchronous hooks for when a\n  * {@code Span} is started or when a {@code Span} is ended.\n  */\n public interface SpanProcessor {\n+\n+  /**\n+   * Returns a {@link SpanProcessor} which simply delegates all processing to the {@code processors}\n+   * in order.\n+   */\n+  static SpanProcessor delegating(SpanProcessor... processors) {\n+    return delegating(Arrays.asList(processors));\n+  }\n+\n+  /**\n+   * Returns a {@link SpanProcessor} which simply delegates all processing to the {@code processors}\n+   * in order.\n+   */\n+  @SuppressWarnings(\"deprecation\")\n+  static SpanProcessor delegating(Iterable<SpanProcessor> processors) {", "originalCommit": "93706368f57685d0ef3019a7a05e84776c7d5e19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzc1Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091#discussion_r526223753", "bodyText": "or ofAll() ?  \ud83d\ude06", "author": "jkwatson", "createdAt": "2020-11-18T16:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyNjQ3OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091#discussion_r526226478", "bodyText": "composite or multi, invokeEach", "author": "Oberon00", "createdAt": "2020-11-18T16:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI0NjM0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091#discussion_r526246345", "bodyText": "I like composite or composedOf", "author": "jkwatson", "createdAt": "2020-11-18T16:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4OTcwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091#discussion_r526489707", "bodyText": "composite or multi \ud83d\ude04", "author": "carlosalberto", "createdAt": "2020-11-18T23:25:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU2MzAzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2091#discussion_r526563033", "bodyText": "composite has votes from everyone including me so there we go :)", "author": "anuraaga", "createdAt": "2020-11-19T03:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ddc50148796efb7ce316d1e61ba1595ef90f9a6", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java\nindex 4c10cadf3..31cb576a4 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/SpanProcessor.java\n\n@@ -22,8 +22,8 @@ public interface SpanProcessor {\n    * Returns a {@link SpanProcessor} which simply delegates all processing to the {@code processors}\n    * in order.\n    */\n-  static SpanProcessor delegating(SpanProcessor... processors) {\n-    return delegating(Arrays.asList(processors));\n+  static SpanProcessor composite(SpanProcessor... processors) {\n+    return composite(Arrays.asList(processors));\n   }\n \n   /**\n"}}, {"oid": "6abbf0d56f338aa98b66eeac8bd866ac5d31928f", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6abbf0d56f338aa98b66eeac8bd866ac5d31928f", "message": "composite", "committedDate": "2020-11-19T03:06:22Z", "type": "commit"}, {"oid": "4ddc50148796efb7ce316d1e61ba1595ef90f9a6", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4ddc50148796efb7ce316d1e61ba1595ef90f9a6", "message": "composite", "committedDate": "2020-11-19T03:07:05Z", "type": "commit"}, {"oid": "0ae8a26fd74e884c1cafc6680b168b0e1fb8a5c0", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0ae8a26fd74e884c1cafc6680b168b0e1fb8a5c0", "message": "Optimize composites based on number of items.", "committedDate": "2020-11-19T03:50:29Z", "type": "commit"}, {"oid": "0c3d2d9195a717146c3fc70bfb74878f69d22301", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0c3d2d9195a717146c3fc70bfb74878f69d22301", "message": "Spotless", "committedDate": "2020-11-19T03:51:24Z", "type": "commit"}, {"oid": "78bded9f460ca02e780fb150b4f5f93d76bbe1d9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/78bded9f460ca02e780fb150b4f5f93d76bbe1d9", "message": "IntelliJ + spotless race condition", "committedDate": "2020-11-19T03:54:34Z", "type": "commit"}, {"oid": "bae82e7f3b8354261be6963aa9442dbd045bb72d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bae82e7f3b8354261be6963aa9442dbd045bb72d", "message": "Fix test", "committedDate": "2020-11-19T03:58:17Z", "type": "commit"}]}