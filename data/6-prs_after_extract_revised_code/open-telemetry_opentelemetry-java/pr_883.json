{"pr_number": 883, "pr_title": "Use AttributeValue in Resources", "pr_createdAt": "2020-02-19T12:37:09Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/883", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2MDg3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/883#discussion_r382160872", "bodyText": "Make CLOUD_PROVIDER_AWS an AttributeValue, also everywhere where we have constants for values.", "author": "bogdandrutu", "createdAt": "2020-02-20T17:53:07Z", "path": "sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/Ec2Resource.java", "diffHunk": "@@ -46,19 +47,29 @@ public static Resource getResource() {\n   // This can be tested now with a fake info and host.\n   static Resource getResourceFromInfoAndHost(\n       @Nullable InstanceInfo info, @Nullable String hostname) {\n-    Map<String, String> labels = new HashMap<>();\n-    labels.put(ResourceConstants.CLOUD_PROVIDER, CLOUD_PROVIDER_AWS);\n+    Map<String, AttributeValue> labels = new HashMap<>();\n+    labels.put(\n+        ResourceConstants.CLOUD_PROVIDER, AttributeValue.stringAttributeValue(CLOUD_PROVIDER_AWS));", "originalCommit": "19bc9bb7cb9e72635909b9604dfb62e15c91c2b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMjYxOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/883#discussion_r382432618", "bodyText": "Beside in testing code, this is the only constant resource value we have!\nDone in 173c59d", "author": "thisthat", "createdAt": "2020-02-21T07:30:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2MDg3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "403d80bb9041b919d2f5232ebae5a057c285554f", "chunk": "diff --git a/sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/Ec2Resource.java b/sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/Ec2Resource.java\nindex 9a7f74d94..4a48a56b1 100644\n--- a/sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/Ec2Resource.java\n+++ b/sdk_contrib/aws_v1_support/src/main/java/io/opentelemetry/sdk/contrib/trace/aws/Ec2Resource.java\n\n@@ -47,29 +47,19 @@ public class Ec2Resource {\n   // This can be tested now with a fake info and host.\n   static Resource getResourceFromInfoAndHost(\n       @Nullable InstanceInfo info, @Nullable String hostname) {\n-    Map<String, AttributeValue> labels = new HashMap<>();\n-    labels.put(\n-        ResourceConstants.CLOUD_PROVIDER, AttributeValue.stringAttributeValue(CLOUD_PROVIDER_AWS));\n+    Map<String, ResourceValue> labels = new HashMap<>();\n+    labels.put(ResourceConstants.CLOUD_PROVIDER, ResourceValue.create(CLOUD_PROVIDER_AWS));\n     if (info != null) {\n-      labels.put(\n-          ResourceConstants.CLOUD_ACCOUNT,\n-          AttributeValue.stringAttributeValue(info.getAccountId()));\n-      labels.put(\n-          ResourceConstants.CLOUD_REGION, AttributeValue.stringAttributeValue(info.getRegion()));\n-      labels.put(\n-          ResourceConstants.CLOUD_ZONE,\n-          AttributeValue.stringAttributeValue(info.getAvailabilityZone()));\n-      labels.put(\n-          ResourceConstants.HOST_ID, AttributeValue.stringAttributeValue(info.getInstanceId()));\n-      labels.put(\n-          ResourceConstants.HOST_NAME, AttributeValue.stringAttributeValue(info.getPrivateIp()));\n-      labels.put(\n-          ResourceConstants.HOST_TYPE, AttributeValue.stringAttributeValue(info.getInstanceType()));\n-      labels.put(\n-          ResourceConstants.HOST_IMAGE_ID, AttributeValue.stringAttributeValue(info.getImageId()));\n+      labels.put(ResourceConstants.CLOUD_ACCOUNT, ResourceValue.create(info.getAccountId()));\n+      labels.put(ResourceConstants.CLOUD_REGION, ResourceValue.create(info.getRegion()));\n+      labels.put(ResourceConstants.CLOUD_ZONE, ResourceValue.create(info.getAvailabilityZone()));\n+      labels.put(ResourceConstants.HOST_ID, ResourceValue.create(info.getInstanceId()));\n+      labels.put(ResourceConstants.HOST_NAME, ResourceValue.create(info.getPrivateIp()));\n+      labels.put(ResourceConstants.HOST_TYPE, ResourceValue.create(info.getInstanceType()));\n+      labels.put(ResourceConstants.HOST_IMAGE_ID, ResourceValue.create(info.getImageId()));\n     }\n     if (!isNullOrEmpty(hostname)) {\n-      labels.put(ResourceConstants.HOST_HOSTNAME, AttributeValue.stringAttributeValue(hostname));\n+      labels.put(ResourceConstants.HOST_HOSTNAME, ResourceValue.create(hostname));\n     }\n     return Resource.create(labels);\n   }\n"}}, {"oid": "403d80bb9041b919d2f5232ebae5a057c285554f", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/403d80bb9041b919d2f5232ebae5a057c285554f", "message": "Introduce ResourceValue", "committedDate": "2020-02-21T07:33:50Z", "type": "commit"}, {"oid": "566d18fa508016c0b4e6d52e093cf7eeda21bfee", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/566d18fa508016c0b4e6d52e093cf7eeda21bfee", "message": "Reuse AttributeValue for ResourceValue", "committedDate": "2020-02-21T07:33:50Z", "type": "commit"}, {"oid": "1d22a4f331d7e94b4dca3445e76d242b1fad4454", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1d22a4f331d7e94b4dca3445e76d242b1fad4454", "message": "Constant resource value as AttributeValue", "committedDate": "2020-02-21T07:33:50Z", "type": "commit"}, {"oid": "b22820c5e6b0029f709127882be510147397a105", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b22820c5e6b0029f709127882be510147397a105", "message": "./gradlew goJF", "committedDate": "2020-02-21T07:33:51Z", "type": "commit"}, {"oid": "b22820c5e6b0029f709127882be510147397a105", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/b22820c5e6b0029f709127882be510147397a105", "message": "./gradlew goJF", "committedDate": "2020-02-21T07:33:51Z", "type": "forcePushed"}, {"oid": "bc259ab0ad04a238c3aa606f26d909d993b112e5", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bc259ab0ad04a238c3aa606f26d909d993b112e5", "message": "Rebase", "committedDate": "2020-02-21T07:40:36Z", "type": "commit"}]}