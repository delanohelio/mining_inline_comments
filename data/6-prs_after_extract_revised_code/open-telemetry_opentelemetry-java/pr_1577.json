{"pr_number": 1577, "pr_title": "Rename ParentOrElse to ParentBased and generalize to support all cases", "pr_createdAt": "2020-08-22T08:06:37Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577", "timeline": [{"oid": "0f7101662e77fe19a89786f4c7ddb118c532ae1a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0f7101662e77fe19a89786f4c7ddb118c532ae1a", "message": "Rename ParentOrElse to ParentBased", "committedDate": "2020-08-22T08:05:42Z", "type": "commit"}, {"oid": "70bbe23b94c243da064bcc8885cde80448e84aad", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/70bbe23b94c243da064bcc8885cde80448e84aad", "message": "Update samplers to match spec.", "committedDate": "2020-08-26T15:23:00Z", "type": "commit"}, {"oid": "5f9eeb0fe8a13c56316ab59f87d3c076973ebea5", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5f9eeb0fe8a13c56316ab59f87d3c076973ebea5", "message": "Fix check style", "committedDate": "2020-08-26T15:34:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQwMzg3Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477403877", "bodyText": "I'd prefer if these were final and assigned in the constructor. Then, the single-arg constructor can just pass these values in to the other constructor.", "author": "jkwatson", "createdAt": "2020-08-26T15:46:47Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -215,10 +248,35 @@ public String getDescription() {\n \n   @Immutable\n   static class ParentBased implements Sampler {\n-    private final Sampler delegateSampler;\n+    private final Sampler root;\n+    private Sampler remoteParentSampled = alwaysOn();\n+    private Sampler remoteParentNotSampled = alwaysOff();\n+    private Sampler localParentSampled = alwaysOn();\n+    private Sampler localParentNotSampled = alwaysOff();\n+", "originalCommit": "70bbe23b94c243da064bcc8885cde80448e84aad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQwNDkzMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477404930", "bodyText": "agree \ud83d\udc4d . thanks.", "author": "dengliming", "createdAt": "2020-08-26T15:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQwMzg3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0af5b011f4b81212823101bae20ed3100285a9e7", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex f7af026ef..430d32abe 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -249,13 +249,13 @@ public final class Samplers {\n   @Immutable\n   static class ParentBased implements Sampler {\n     private final Sampler root;\n-    private Sampler remoteParentSampled = alwaysOn();\n-    private Sampler remoteParentNotSampled = alwaysOff();\n-    private Sampler localParentSampled = alwaysOn();\n-    private Sampler localParentNotSampled = alwaysOff();\n+    private final Sampler remoteParentSampled;\n+    private final Sampler remoteParentNotSampled;\n+    private final Sampler localParentSampled;\n+    private final Sampler localParentNotSampled;\n \n     ParentBased(Sampler root) {\n-      this.root = root;\n+      this(root, alwaysOn(), alwaysOff(), alwaysOn(), alwaysOff());\n     }\n \n     ParentBased(\n"}}, {"oid": "1966048f4f4677e384fadd16a155eaa60fc72a9e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1966048f4f4677e384fadd16a155eaa60fc72a9e", "message": "Fix check style", "committedDate": "2020-08-26T15:46:59Z", "type": "commit"}, {"oid": "0af5b011f4b81212823101bae20ed3100285a9e7", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0af5b011f4b81212823101bae20ed3100285a9e7", "message": "Fix review", "committedDate": "2020-08-26T15:53:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyMzIwMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477423202", "bodyText": "What do you think about breaking this up into smaller tests, so they will fail/pass individually, rather than having one giant test?", "author": "jkwatson", "createdAt": "2020-08-26T16:15:38Z", "path": "sdk/tracing/src/test/java/io/opentelemetry/sdk/trace/SamplersTest.java", "diffHunk": "@@ -231,13 +261,75 @@ void parentOrElseSampler_AlwaysOn() {\n                     Collections.emptyList())\n                 .getDecision())\n         .isEqualTo(Decision.RECORD_AND_SAMPLED);\n+\n+    assertThat(\n+            Samplers.parentBased(Samplers.alwaysOn(), null, null, null, Samplers.alwaysOn())\n+                .shouldSample(\n+                    invalidSpanContext,\n+                    traceId,\n+                    SPAN_NAME,\n+                    SPAN_KIND,\n+                    Attributes.empty(),\n+                    Collections.emptyList())\n+                .getDecision())\n+        .isEqualTo(Decision.RECORD_AND_SAMPLED);\n+\n+    // Sampled remote parent", "originalCommit": "0af5b011f4b81212823101bae20ed3100285a9e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNDYwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477424607", "bodyText": "sure :)", "author": "dengliming", "createdAt": "2020-08-26T16:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyMzIwMg=="}], "type": "inlineReview", "revised_code": {"commit": "e5b3a89c66f10d6cf910d67e11200f72b8496a63", "chunk": "diff --git a/sdk/tracing/src/test/java/io/opentelemetry/sdk/trace/SamplersTest.java b/sdk/tracing/src/test/java/io/opentelemetry/sdk/trace/SamplersTest.java\nindex 229c47550..8e4a637c5 100644\n--- a/sdk/tracing/src/test/java/io/opentelemetry/sdk/trace/SamplersTest.java\n+++ b/sdk/tracing/src/test/java/io/opentelemetry/sdk/trace/SamplersTest.java\n\n@@ -247,13 +252,15 @@ class SamplersTest {\n                     Attributes.empty(),\n                     Collections.emptyList())\n                 .getDecision())\n-        .isEqualTo(Decision.RECORD_AND_SAMPLED);\n+        .isEqualTo(Decision.NOT_RECORD);\n+  }\n \n-    // Invalid parent.\n+  @Test\n+  void parentBasedSampler_NotSampled_Remote_Parent() {\n     assertThat(\n-            Samplers.parentBased(Samplers.alwaysOn())\n+            Samplers.parentBased(Samplers.alwaysOff(), null, Samplers.alwaysOn(), null, null)\n                 .shouldSample(\n-                    invalidSpanContext,\n+                    notSampledRemoteSpanContext,\n                     traceId,\n                     SPAN_NAME,\n                     SPAN_KIND,\n"}}, {"oid": "e5b3a89c66f10d6cf910d67e11200f72b8496a63", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e5b3a89c66f10d6cf910d67e11200f72b8496a63", "message": "Separate test for parentOrElse sampler", "committedDate": "2020-08-26T16:50:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwMTQ4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477501480", "bodyText": "I would use a Builder pattern:\npublic static Builder newBuilder(Sampler root)\n\nWhere Builder allows to set any other Sampler. this way user don't have to configure all the others default samplers.", "author": "bogdandrutu", "createdAt": "2020-08-26T18:26:38Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -147,14 +147,47 @@ public static Sampler alwaysOff() {\n    * whether or not to sample. If there is no parent, the Sampler uses the provided Sampler delegate\n    * to determine the sampling decision.\n    *\n-   * @param delegateSampler the {@code Sampler} which is used to make the sampling decisions if the\n-   *     parent does not exist.\n+   * @param root the {@code Sampler} which is used to make the sampling decisions if the parent does\n+   *     not exist.\n    * @return a {@code Sampler} that follows the parent's sampling decision if one exists, otherwise\n-   *     following the delegate sampler's decision.\n+   *     following the root sampler's decision.\n    * @since 0.7.0\n    */\n-  public static Sampler parentOrElse(Sampler delegateSampler) {\n-    return new ParentOrElse(delegateSampler);\n+  public static Sampler parentBased(Sampler root) {\n+    return new ParentBased(root);\n+  }\n+\n+  /**\n+   * Returns a {@link Sampler} that always makes the same decision as the parent {@link Span} to\n+   * whether or not to sample. If there is no parent, the Sampler uses the provided Sampler delegate\n+   * to determine the sampling decision.\n+   *\n+   * @param root the required {@code Sampler} which is used to make the sampling decisions if the\n+   *     parent does not exist.\n+   * @param remoteParentSampled the optional {@code Sampler} which is used to make the sampling\n+   *     decisions if the remote parent exist and is sampled.\n+   * @param remoteParentNotSampled the optional {@code Sampler} which is used to make the sampling\n+   *     decisions if the remote parent exist and is not sampled.\n+   * @param localParentSampled the optional {@code Sampler} which is used to make the sampling\n+   *     decisions if the local parent exist and is sampled.\n+   * @param localParentNotSampled the optional {@code Sampler} which is used to make the sampling\n+   *     decisions if the local parent exist and is not sampled.\n+   * @return a {@code Sampler} that follows the parent's sampling decision if one exists, otherwise\n+   *     following the root sampler and other optional sampler's decision.\n+   * @since 0.8.0\n+   */\n+  public static Sampler parentBased(", "originalCommit": "e5b3a89c66f10d6cf910d67e11200f72b8496a63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg4NTk5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477885992", "bodyText": "\ud83d\udc4d what about newParentBasedBuilder ?", "author": "dengliming", "createdAt": "2020-08-27T01:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwMTQ4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzkyMDI3OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r477920279", "bodyText": "seems ok for a start, yes", "author": "jkwatson", "createdAt": "2020-08-27T02:05:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwMTQ4MA=="}], "type": "inlineReview", "revised_code": {"commit": "78333571cf1dcb22b298d7cc8184b18821ae73a8", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex 430d32abe..76ca1eba1 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -154,40 +154,20 @@ public final class Samplers {\n    * @since 0.7.0\n    */\n   public static Sampler parentBased(Sampler root) {\n-    return new ParentBased(root);\n+    return newParentBasedBuilder(root).build();\n   }\n \n   /**\n-   * Returns a {@link Sampler} that always makes the same decision as the parent {@link Span} to\n-   * whether or not to sample. If there is no parent, the Sampler uses the provided Sampler delegate\n-   * to determine the sampling decision.\n+   * Returns a {@link ParentBased.Builder} that follows the parent's sampling decision if one\n+   * exists, otherwise following the root sampler and other optional sampler's decision.\n    *\n    * @param root the required {@code Sampler} which is used to make the sampling decisions if the\n    *     parent does not exist.\n-   * @param remoteParentSampled the optional {@code Sampler} which is used to make the sampling\n-   *     decisions if the remote parent exist and is sampled.\n-   * @param remoteParentNotSampled the optional {@code Sampler} which is used to make the sampling\n-   *     decisions if the remote parent exist and is not sampled.\n-   * @param localParentSampled the optional {@code Sampler} which is used to make the sampling\n-   *     decisions if the local parent exist and is sampled.\n-   * @param localParentNotSampled the optional {@code Sampler} which is used to make the sampling\n-   *     decisions if the local parent exist and is not sampled.\n-   * @return a {@code Sampler} that follows the parent's sampling decision if one exists, otherwise\n-   *     following the root sampler and other optional sampler's decision.\n+   * @return a {@code ParentBased.Builder}\n    * @since 0.8.0\n    */\n-  public static Sampler parentBased(\n-      Sampler root,\n-      Sampler remoteParentSampled,\n-      Sampler remoteParentNotSampled,\n-      Sampler localParentSampled,\n-      Sampler localParentNotSampled) {\n-    return new ParentBased(\n-        root,\n-        remoteParentSampled,\n-        remoteParentNotSampled,\n-        localParentSampled,\n-        localParentNotSampled);\n+  public static ParentBased.Builder newParentBasedBuilder(Sampler root) {\n+    return new ParentBased.Builder(root);\n   }\n \n   /**\n"}}, {"oid": "78333571cf1dcb22b298d7cc8184b18821ae73a8", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/78333571cf1dcb22b298d7cc8184b18821ae73a8", "message": "Provide ParentBased.Builder", "committedDate": "2020-08-27T05:31:41Z", "type": "commit"}, {"oid": "583078ab28a14ab78a009d8207685e7f20aac138", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/583078ab28a14ab78a009d8207685e7f20aac138", "message": "Fix code style", "committedDate": "2020-08-27T05:48:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTAzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478151035", "bodyText": "Also to @jkwatson I think we should either have new on both or new on neither the non-builder and builder factories, they seem equally new. wdyt?", "author": "anuraaga", "createdAt": "2020-08-27T05:49:06Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -147,14 +147,27 @@ public static Sampler alwaysOff() {\n    * whether or not to sample. If there is no parent, the Sampler uses the provided Sampler delegate\n    * to determine the sampling decision.\n    *\n-   * @param delegateSampler the {@code Sampler} which is used to make the sampling decisions if the\n-   *     parent does not exist.\n+   * @param root the {@code Sampler} which is used to make the sampling decisions if the parent does\n+   *     not exist.\n    * @return a {@code Sampler} that follows the parent's sampling decision if one exists, otherwise\n-   *     following the delegate sampler's decision.\n+   *     following the root sampler's decision.\n    * @since 0.7.0\n    */\n-  public static Sampler parentOrElse(Sampler delegateSampler) {\n-    return new ParentOrElse(delegateSampler);\n+  public static Sampler parentBased(Sampler root) {\n+    return newParentBasedBuilder(root).build();\n+  }\n+\n+  /**\n+   * Returns a {@link ParentBased.Builder} that follows the parent's sampling decision if one\n+   * exists, otherwise following the root sampler and other optional sampler's decision.\n+   *\n+   * @param root the required {@code Sampler} which is used to make the sampling decisions if the\n+   *     parent does not exist.\n+   * @return a {@code ParentBased.Builder}\n+   * @since 0.8.0\n+   */\n+  public static ParentBased.Builder newParentBasedBuilder(Sampler root) {", "originalCommit": "78333571cf1dcb22b298d7cc8184b18821ae73a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NzE5OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478177198", "bodyText": "Usually, If we provide builder  factories, we should keep the constructor  private. right?", "author": "dengliming", "createdAt": "2020-08-27T06:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NTUyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478565525", "bodyText": "@anuraaga you were suggesting that the parentBased(Sampler) method should be newParentBased(Sampler), if we want them to match, correct?", "author": "jkwatson", "createdAt": "2020-08-27T17:01:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk3NTU4Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478975583", "bodyText": "Ah yeah I was just talking about the factory names, not about changing constructor visibility. Indeed newParentBased(Sampler). Alternatively, rename the builder returning one to parentBasedBuilder", "author": "anuraaga", "createdAt": "2020-08-28T08:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAwMDg5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r479000892", "bodyText": "@anuraaga Gotcha \ud83d\udc4d thanks. what about this?\nparentBased(Sampler root)\nparentBasedBuilder(Sampler root)", "author": "dengliming", "createdAt": "2020-08-28T09:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAyMTg1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r479021850", "bodyText": "I'm good with that :)", "author": "anuraaga", "createdAt": "2020-08-28T09:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "4d0ba9c0a0a544130a012dc90ffaaf2401d24912", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex 76ca1eba1..80f1c9b90 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -154,7 +154,7 @@ public final class Samplers {\n    * @since 0.7.0\n    */\n   public static Sampler parentBased(Sampler root) {\n-    return newParentBasedBuilder(root).build();\n+    return parentBasedBuilder(root).build();\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MjIxNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478152214", "bodyText": "Our other builders like SpanBuilder and Attributes.Builder use set instead of with, can you use set here too?", "author": "anuraaga", "createdAt": "2020-08-27T05:50:47Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -231,19 +259,109 @@ public SamplingResult shouldSample(\n         Kind spanKind,\n         ReadableAttributes attributes,\n         List<Link> parentLinks) {\n-      if (parentContext.isValid()) {\n-        if (parentContext.getTraceFlags().isSampled()) {\n-          return EMPTY_RECORDED_AND_SAMPLED_SAMPLING_RESULT;\n-        }\n-        return EMPTY_NOT_SAMPLED_OR_RECORDED_SAMPLING_RESULT;\n+      if (!parentContext.isValid()) {\n+        return this.root.shouldSample(\n+            parentContext, traceId, name, spanKind, attributes, parentLinks);\n       }\n-      return this.delegateSampler.shouldSample(\n-          parentContext, traceId, name, spanKind, attributes, parentLinks);\n+\n+      if (parentContext.isRemote()) {\n+        return parentContext.getTraceFlags().isSampled()\n+            ? this.remoteParentSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks)\n+            : this.remoteParentNotSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks);\n+      }\n+      return parentContext.getTraceFlags().isSampled()\n+          ? this.localParentSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks)\n+          : this.localParentNotSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks);\n     }\n \n     @Override\n     public String getDescription() {\n-      return String.format(\"ParentOrElse{%s}\", this.delegateSampler.getDescription());\n+      return String.format(\n+          \"ParentBased{root:%s,remoteParentSampled:%s,remoteParentNotSampled:%s,\"\n+              + \"localParentSampled:%s,localParentNotSampled:%s}\",\n+          this.root.getDescription(),\n+          this.remoteParentSampled.getDescription(),\n+          this.remoteParentNotSampled.getDescription(),\n+          this.localParentSampled.getDescription(),\n+          this.localParentNotSampled.getDescription());\n+    }\n+\n+    static class Builder {\n+      private final Sampler root;\n+      private Sampler remoteParentSampled;\n+      private Sampler remoteParentNotSampled;\n+      private Sampler localParentSampled;\n+      private Sampler localParentNotSampled;\n+\n+      /**\n+       * Sets the remoteParentSampled. Optional.\n+       *\n+       * @param remoteParentSampled used to make the sampling decisions if the remote parent exist\n+       *     and is sampled.\n+       * @return this.\n+       */\n+      public Builder withRemoteParentSampled(Sampler remoteParentSampled) {", "originalCommit": "583078ab28a14ab78a009d8207685e7f20aac138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1Mjg3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478152873", "bodyText": "Alternatively, when seems like it could fit as a special semantics for this class, in particular I think if the variable was named Sampler whenRemoteParentSampled it's really easy to read.", "author": "anuraaga", "createdAt": "2020-08-27T05:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3MTQ2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478171460", "bodyText": "named Sampler whenRemoteParentSampled it's really easy to read.\n\n+1 @jkwatson wdyt?", "author": "dengliming", "createdAt": "2020-08-27T06:18:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NzE4MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478567180", "bodyText": "I think I'd go with set for consistency with the other APIs.", "author": "jkwatson", "createdAt": "2020-08-27T17:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2OTk3Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478569977", "bodyText": "thanks. Let's use set  instead of with.", "author": "dengliming", "createdAt": "2020-08-27T17:08:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MjIxNA=="}], "type": "inlineReview", "revised_code": {"commit": "33f0b1c2335869509a9823c39c0bbab2755a110f", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex e5251df0f..fcf2ee783 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -298,11 +298,9 @@ public final class Samplers {\n       private Sampler localParentNotSampled;\n \n       /**\n-       * Sets the remoteParentSampled. Optional.\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.\n        *\n-       * @param remoteParentSampled used to make the sampling decisions if the remote parent exist\n-       *     and is sampled.\n-       * @return this.\n+       * @return this Builder\n        */\n       public Builder withRemoteParentSampled(Sampler remoteParentSampled) {\n         this.remoteParentSampled = remoteParentSampled;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MzY5Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478153693", "bodyText": "Sets the {@link Sampler} to use when there is a remote parent that was sampled.", "author": "anuraaga", "createdAt": "2020-08-27T05:53:06Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -231,19 +259,109 @@ public SamplingResult shouldSample(\n         Kind spanKind,\n         ReadableAttributes attributes,\n         List<Link> parentLinks) {\n-      if (parentContext.isValid()) {\n-        if (parentContext.getTraceFlags().isSampled()) {\n-          return EMPTY_RECORDED_AND_SAMPLED_SAMPLING_RESULT;\n-        }\n-        return EMPTY_NOT_SAMPLED_OR_RECORDED_SAMPLING_RESULT;\n+      if (!parentContext.isValid()) {\n+        return this.root.shouldSample(\n+            parentContext, traceId, name, spanKind, attributes, parentLinks);\n       }\n-      return this.delegateSampler.shouldSample(\n-          parentContext, traceId, name, spanKind, attributes, parentLinks);\n+\n+      if (parentContext.isRemote()) {\n+        return parentContext.getTraceFlags().isSampled()\n+            ? this.remoteParentSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks)\n+            : this.remoteParentNotSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks);\n+      }\n+      return parentContext.getTraceFlags().isSampled()\n+          ? this.localParentSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks)\n+          : this.localParentNotSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks);\n     }\n \n     @Override\n     public String getDescription() {\n-      return String.format(\"ParentOrElse{%s}\", this.delegateSampler.getDescription());\n+      return String.format(\n+          \"ParentBased{root:%s,remoteParentSampled:%s,remoteParentNotSampled:%s,\"\n+              + \"localParentSampled:%s,localParentNotSampled:%s}\",\n+          this.root.getDescription(),\n+          this.remoteParentSampled.getDescription(),\n+          this.remoteParentNotSampled.getDescription(),\n+          this.localParentSampled.getDescription(),\n+          this.localParentNotSampled.getDescription());\n+    }\n+\n+    static class Builder {\n+      private final Sampler root;\n+      private Sampler remoteParentSampled;\n+      private Sampler remoteParentNotSampled;\n+      private Sampler localParentSampled;\n+      private Sampler localParentNotSampled;\n+\n+      /**\n+       * Sets the remoteParentSampled. Optional.", "originalCommit": "583078ab28a14ab78a009d8207685e7f20aac138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NDMwNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478174304", "bodyText": "thanks. fixed at lastest commit.", "author": "dengliming", "createdAt": "2020-08-27T06:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MzY5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "33f0b1c2335869509a9823c39c0bbab2755a110f", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex e5251df0f..fcf2ee783 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -298,11 +298,9 @@ public final class Samplers {\n       private Sampler localParentNotSampled;\n \n       /**\n-       * Sets the remoteParentSampled. Optional.\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.\n        *\n-       * @param remoteParentSampled used to make the sampling decisions if the remote parent exist\n-       *     and is sampled.\n-       * @return this.\n+       * @return this Builder\n        */\n       public Builder withRemoteParentSampled(Sampler remoteParentSampled) {\n         this.remoteParentSampled = remoteParentSampled;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1NDAwOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478154009", "bodyText": "I think we leave @param out when it basically matches the javadoc, e.g. https://github.com/open-telemetry/opentelemetry-java/blob/master/api/src/main/java/io/opentelemetry/common/Attributes.java#L204", "author": "anuraaga", "createdAt": "2020-08-27T05:53:34Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -231,19 +259,109 @@ public SamplingResult shouldSample(\n         Kind spanKind,\n         ReadableAttributes attributes,\n         List<Link> parentLinks) {\n-      if (parentContext.isValid()) {\n-        if (parentContext.getTraceFlags().isSampled()) {\n-          return EMPTY_RECORDED_AND_SAMPLED_SAMPLING_RESULT;\n-        }\n-        return EMPTY_NOT_SAMPLED_OR_RECORDED_SAMPLING_RESULT;\n+      if (!parentContext.isValid()) {\n+        return this.root.shouldSample(\n+            parentContext, traceId, name, spanKind, attributes, parentLinks);\n       }\n-      return this.delegateSampler.shouldSample(\n-          parentContext, traceId, name, spanKind, attributes, parentLinks);\n+\n+      if (parentContext.isRemote()) {\n+        return parentContext.getTraceFlags().isSampled()\n+            ? this.remoteParentSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks)\n+            : this.remoteParentNotSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks);\n+      }\n+      return parentContext.getTraceFlags().isSampled()\n+          ? this.localParentSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks)\n+          : this.localParentNotSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks);\n     }\n \n     @Override\n     public String getDescription() {\n-      return String.format(\"ParentOrElse{%s}\", this.delegateSampler.getDescription());\n+      return String.format(\n+          \"ParentBased{root:%s,remoteParentSampled:%s,remoteParentNotSampled:%s,\"\n+              + \"localParentSampled:%s,localParentNotSampled:%s}\",\n+          this.root.getDescription(),\n+          this.remoteParentSampled.getDescription(),\n+          this.remoteParentNotSampled.getDescription(),\n+          this.localParentSampled.getDescription(),\n+          this.localParentNotSampled.getDescription());\n+    }\n+\n+    static class Builder {\n+      private final Sampler root;\n+      private Sampler remoteParentSampled;\n+      private Sampler remoteParentNotSampled;\n+      private Sampler localParentSampled;\n+      private Sampler localParentNotSampled;\n+\n+      /**\n+       * Sets the remoteParentSampled. Optional.\n+       *\n+       * @param remoteParentSampled used to make the sampling decisions if the remote parent exist", "originalCommit": "583078ab28a14ab78a009d8207685e7f20aac138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NDQzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478174435", "bodyText": "thanks. fixed at lastest commit.", "author": "dengliming", "createdAt": "2020-08-27T06:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1NDAwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "33f0b1c2335869509a9823c39c0bbab2755a110f", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex e5251df0f..fcf2ee783 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -298,11 +298,9 @@ public final class Samplers {\n       private Sampler localParentNotSampled;\n \n       /**\n-       * Sets the remoteParentSampled. Optional.\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.\n        *\n-       * @param remoteParentSampled used to make the sampling decisions if the remote parent exist\n-       *     and is sampled.\n-       * @return this.\n+       * @return this Builder\n        */\n       public Builder withRemoteParentSampled(Sampler remoteParentSampled) {\n         this.remoteParentSampled = remoteParentSampled;\n"}}, {"oid": "33f0b1c2335869509a9823c39c0bbab2755a110f", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/33f0b1c2335869509a9823c39c0bbab2755a110f", "message": "Fix java doc.", "committedDate": "2020-08-27T06:22:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NjAzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478176033", "bodyText": "If not set, defaults to always sampling if the remote parent was sampled.", "author": "anuraaga", "createdAt": "2020-08-27T06:25:11Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -231,19 +259,101 @@ public SamplingResult shouldSample(\n         Kind spanKind,\n         ReadableAttributes attributes,\n         List<Link> parentLinks) {\n-      if (parentContext.isValid()) {\n-        if (parentContext.getTraceFlags().isSampled()) {\n-          return EMPTY_RECORDED_AND_SAMPLED_SAMPLING_RESULT;\n-        }\n-        return EMPTY_NOT_SAMPLED_OR_RECORDED_SAMPLING_RESULT;\n+      if (!parentContext.isValid()) {\n+        return this.root.shouldSample(\n+            parentContext, traceId, name, spanKind, attributes, parentLinks);\n       }\n-      return this.delegateSampler.shouldSample(\n-          parentContext, traceId, name, spanKind, attributes, parentLinks);\n+\n+      if (parentContext.isRemote()) {\n+        return parentContext.getTraceFlags().isSampled()\n+            ? this.remoteParentSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks)\n+            : this.remoteParentNotSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks);\n+      }\n+      return parentContext.getTraceFlags().isSampled()\n+          ? this.localParentSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks)\n+          : this.localParentNotSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks);\n     }\n \n     @Override\n     public String getDescription() {\n-      return String.format(\"ParentOrElse{%s}\", this.delegateSampler.getDescription());\n+      return String.format(\n+          \"ParentBased{root:%s,remoteParentSampled:%s,remoteParentNotSampled:%s,\"\n+              + \"localParentSampled:%s,localParentNotSampled:%s}\",\n+          this.root.getDescription(),\n+          this.remoteParentSampled.getDescription(),\n+          this.remoteParentNotSampled.getDescription(),\n+          this.localParentSampled.getDescription(),\n+          this.localParentNotSampled.getDescription());\n+    }\n+\n+    static class Builder {\n+      private final Sampler root;\n+      private Sampler remoteParentSampled;\n+      private Sampler remoteParentNotSampled;\n+      private Sampler localParentSampled;\n+      private Sampler localParentNotSampled;\n+\n+      /**\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.", "originalCommit": "33f0b1c2335869509a9823c39c0bbab2755a110f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90da0171cbf9370a8330f5095b4fcbf92295d1f2", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex fcf2ee783..55674ec9d 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -298,7 +298,8 @@ public final class Samplers {\n       private Sampler localParentNotSampled;\n \n       /**\n-       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled. If not set,\n+       * defaults to always sampling if the remote parent was sampled.\n        *\n        * @return this Builder\n        */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NjE5Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1577#discussion_r478176197", "bodyText": "If not set, defaults to never sampling when the remote parent isn't sampled.\nSimilar for local", "author": "anuraaga", "createdAt": "2020-08-27T06:25:23Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java", "diffHunk": "@@ -231,19 +259,101 @@ public SamplingResult shouldSample(\n         Kind spanKind,\n         ReadableAttributes attributes,\n         List<Link> parentLinks) {\n-      if (parentContext.isValid()) {\n-        if (parentContext.getTraceFlags().isSampled()) {\n-          return EMPTY_RECORDED_AND_SAMPLED_SAMPLING_RESULT;\n-        }\n-        return EMPTY_NOT_SAMPLED_OR_RECORDED_SAMPLING_RESULT;\n+      if (!parentContext.isValid()) {\n+        return this.root.shouldSample(\n+            parentContext, traceId, name, spanKind, attributes, parentLinks);\n       }\n-      return this.delegateSampler.shouldSample(\n-          parentContext, traceId, name, spanKind, attributes, parentLinks);\n+\n+      if (parentContext.isRemote()) {\n+        return parentContext.getTraceFlags().isSampled()\n+            ? this.remoteParentSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks)\n+            : this.remoteParentNotSampled.shouldSample(\n+                parentContext, traceId, name, spanKind, attributes, parentLinks);\n+      }\n+      return parentContext.getTraceFlags().isSampled()\n+          ? this.localParentSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks)\n+          : this.localParentNotSampled.shouldSample(\n+              parentContext, traceId, name, spanKind, attributes, parentLinks);\n     }\n \n     @Override\n     public String getDescription() {\n-      return String.format(\"ParentOrElse{%s}\", this.delegateSampler.getDescription());\n+      return String.format(\n+          \"ParentBased{root:%s,remoteParentSampled:%s,remoteParentNotSampled:%s,\"\n+              + \"localParentSampled:%s,localParentNotSampled:%s}\",\n+          this.root.getDescription(),\n+          this.remoteParentSampled.getDescription(),\n+          this.remoteParentNotSampled.getDescription(),\n+          this.localParentSampled.getDescription(),\n+          this.localParentNotSampled.getDescription());\n+    }\n+\n+    static class Builder {\n+      private final Sampler root;\n+      private Sampler remoteParentSampled;\n+      private Sampler remoteParentNotSampled;\n+      private Sampler localParentSampled;\n+      private Sampler localParentNotSampled;\n+\n+      /**\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.\n+       *\n+       * @return this Builder\n+       */\n+      public Builder withRemoteParentSampled(Sampler remoteParentSampled) {\n+        this.remoteParentSampled = remoteParentSampled;\n+        return this;\n+      }\n+\n+      /**\n+       * Sets the {@link Sampler} to use when there is a remote parent that was not sampled.", "originalCommit": "33f0b1c2335869509a9823c39c0bbab2755a110f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90da0171cbf9370a8330f5095b4fcbf92295d1f2", "chunk": "diff --git a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\nindex fcf2ee783..55674ec9d 100644\n--- a/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n+++ b/sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/Samplers.java\n\n@@ -298,7 +298,8 @@ public final class Samplers {\n       private Sampler localParentNotSampled;\n \n       /**\n-       * Sets the {@link Sampler} to use when there is a remote parent that was sampled.\n+       * Sets the {@link Sampler} to use when there is a remote parent that was sampled. If not set,\n+       * defaults to always sampling if the remote parent was sampled.\n        *\n        * @return this Builder\n        */\n"}}, {"oid": "90da0171cbf9370a8330f5095b4fcbf92295d1f2", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/90da0171cbf9370a8330f5095b4fcbf92295d1f2", "message": "Update javadoc", "committedDate": "2020-08-27T06:42:19Z", "type": "commit"}, {"oid": "54db6690a73580bd14aceb12e6ad398345bafe18", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/54db6690a73580bd14aceb12e6ad398345bafe18", "message": "Builder use set instead of with", "committedDate": "2020-08-27T17:07:49Z", "type": "commit"}, {"oid": "4d0ba9c0a0a544130a012dc90ffaaf2401d24912", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4d0ba9c0a0a544130a012dc90ffaaf2401d24912", "message": "Rename newParentBasedBuilder to parentBasedBuilder", "committedDate": "2020-08-28T09:32:51Z", "type": "commit"}]}