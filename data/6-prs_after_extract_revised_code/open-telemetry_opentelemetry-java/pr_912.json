{"pr_number": 912, "pr_title": "Added SpanExporterFactory and Config", "pr_createdAt": "2020-02-22T20:05:36Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/912", "timeline": [{"oid": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "message": "Added SpanExporterFactory and Config", "committedDate": "2020-02-22T20:02:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzOTU0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383139544", "bodyText": "Nit: 2020", "author": "thisthat", "createdAt": "2020-02-24T08:56:18Z", "path": "sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors", "originalCommit": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1NjgwMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383256803", "bodyText": "Ooops! :) Fixing that.", "author": "prydin", "createdAt": "2020-02-24T13:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzOTU0NA=="}], "type": "inlineReview", "revised_code": {"commit": "91c2103f55fd6f806034f18bf003fd8531dcbdd6", "chunk": "diff --git a/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java b/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java\nindex e3fd82c3f..ab095c84c 100644\n--- a/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java\n+++ b/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019, OpenTelemetry Authors\n+ * Copyright 2020, OpenTelemetry Authors\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzOTk2OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383139968", "bodyText": "nit: I only saw {@code ...} style in Javadoc sections", "author": "thisthat", "createdAt": "2020-02-24T08:57:11Z", "path": "sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.contrib.auto.config;\n+\n+/**\n+ * An interface used to provide configuration information to {@link SpanExporterFactory}\n+ * implementations. Callers (such as the Java Auto Instrumenter) typically provide an implementation\n+ * mapping directly to their native configuration framework.\n+ *\n+ * <p>This interface is intentionally kept very simple since the underlying implementations may only\n+ * have access to very basic configuration mechanisms such as system properties and environment\n+ * variables.\n+ */\n+public interface Config {\n+  /**\n+   * Returns the string configuration property corresponding to a key. If the underlying\n+   * implementation cannot find a property for the key, <code>defaultValue</code> is returned.", "originalCommit": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1Njk5OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383256999", "bodyText": "OK. No problem.", "author": "prydin", "createdAt": "2020-02-24T13:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEzOTk2OA=="}], "type": "inlineReview", "revised_code": {"commit": "91c2103f55fd6f806034f18bf003fd8531dcbdd6", "chunk": "diff --git a/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java b/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java\nindex e3fd82c3f..ab095c84c 100644\n--- a/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java\n+++ b/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/Config.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019, OpenTelemetry Authors\n+ * Copyright 2020, OpenTelemetry Authors\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjEwOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383142108", "bodyText": "I am not sure about the SPI framework. In my understanding, the implementation should register the exporter via the API offered by the SDK.", "author": "thisthat", "createdAt": "2020-02-24T09:02:21Z", "path": "sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/SpanExporterFactory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2019, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.contrib.auto.config;\n+\n+import io.opentelemetry.sdk.trace.export.SpanExporter;\n+\n+/**\n+ * A {@link SpanExporterFactory} acts as the bootstrap for a {@link SpanExporter} implementation. An\n+ * exporter must register its implementation of a {@link SpanExporterFactory} through the Java SPI", "originalCommit": "8017e0d6de9da621ca72ce87194e284f1c2c5cf2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI1ODA0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383258048", "bodyText": "Well, this is for the auto instrumentation. The exporter and the auto instrumenter implementations don't know about each other, so we use SPI to load the exporter dynamically based on a JAR file name that's passed.\nHave a look here: https://github.com/open-telemetry/opentelemetry-auto-instr-java/blob/239eb53a44000f9f77e251a79e7189883451f5fc/agent-tooling/src/main/java/io/opentelemetry/auto/tooling/TracerInstaller.java#L41", "author": "prydin", "createdAt": "2020-02-24T13:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MDY0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/912#discussion_r383260645", "bodyText": "Thanks for the clarification \ud83d\udc4d", "author": "thisthat", "createdAt": "2020-02-24T13:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE0MjEwOA=="}], "type": "inlineReview", "revised_code": {"commit": "91c2103f55fd6f806034f18bf003fd8531dcbdd6", "chunk": "diff --git a/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/SpanExporterFactory.java b/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/SpanExporterFactory.java\nindex c3f2e4243..8902ba9be 100644\n--- a/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/SpanExporterFactory.java\n+++ b/sdk_contrib/auto_config/src/main/java/io/opentelemetry/sdk/contrib/auto/config/SpanExporterFactory.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019, OpenTelemetry Authors\n+ * Copyright 2020, OpenTelemetry Authors\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"oid": "91c2103f55fd6f806034f18bf003fd8531dcbdd6", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/91c2103f55fd6f806034f18bf003fd8531dcbdd6", "message": "Minor javadoc fixes", "committedDate": "2020-02-24T13:24:42Z", "type": "commit"}]}