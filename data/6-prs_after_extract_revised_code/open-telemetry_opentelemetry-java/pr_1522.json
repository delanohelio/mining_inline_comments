{"pr_number": 1522, "pr_title": "Add RecordEventsReadableSpan toString", "pr_createdAt": "2020-08-08T16:10:18Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1522", "timeline": [{"oid": "69ca17a0ce6a085ff2e77f3e2e037a14a0bb11e5", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/69ca17a0ce6a085ff2e77f3e2e037a14a0bb11e5", "message": "Add RecordEventsReadableSpan toString", "committedDate": "2020-08-08T16:08:18Z", "type": "commit"}, {"oid": "0088a8d1d0e472ce115f418fa7a7907922d84618", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/0088a8d1d0e472ce115f418fa7a7907922d84618", "message": "lock", "committedDate": "2020-08-08T16:23:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU3OTg5Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1522#discussion_r467579897", "bodyText": "Is it Ok for such string concatenation inside synchronised section?", "author": "iNikem", "createdAt": "2020-08-09T12:49:14Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -589,6 +589,46 @@ private ReadableAttributes getImmutableAttributes() {\n     return builder.build();\n   }\n \n+  @Override\n+  public String toString() {\n+    synchronized (lock) {\n+      return \"RecordEventsReadableSpan{\"", "originalCommit": "0088a8d1d0e472ce115f418fa7a7907922d84618", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a7ac537d4936ac243e0af601b7cdcaa64bcc76c8", "chunk": "diff --git a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\nindex fcc0dd980..7db725459 100644\n--- a/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n+++ b/sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java\n\n@@ -591,42 +591,43 @@ final class RecordEventsReadableSpan implements ReadableSpan, Span {\n \n   @Override\n   public String toString() {\n+    String name;\n+    String attributes;\n+    Status status;\n+    long totalRecordedEvents;\n+    long endEpochNanos;\n     synchronized (lock) {\n-      return \"RecordEventsReadableSpan{\"\n-          + \"traceId=\"\n-          + context.getTraceId()\n-          + \", \"\n-          + \"spanId=\"\n-          + context.getSpanId()\n-          + \", \"\n-          + \"parentSpanId=\"\n-          + parentSpanId\n-          + \", \"\n-          + \"name=\"\n-          + name\n-          + \", \"\n-          + \"kind=\"\n-          + kind\n-          + \", \"\n-          + \"attributes=\"\n-          + attributes\n-          + \", \"\n-          + \"status=\"\n-          + status\n-          + \", \"\n-          + \"totalRecordedEvents=\"\n-          + totalRecordedEvents\n-          + \", \"\n-          + \"totalRecordedLinks=\"\n-          + totalRecordedLinks\n-          + \", \"\n-          + \"startEpochNanos=\"\n-          + startEpochNanos\n-          + \", \"\n-          + \"endEpochNanos=\"\n-          + endEpochNanos\n-          + \"}\";\n-    }\n+      name = this.name;\n+      attributes = String.valueOf(this.attributes);\n+      status = this.status;\n+      totalRecordedEvents = this.totalRecordedEvents;\n+      endEpochNanos = this.endEpochNanos;\n+    }\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"RecordEventsReadableSpan{traceId=\");\n+    sb.append(context.getTraceId());\n+    sb.append(\", spanId=\");\n+    sb.append(context.getSpanId());\n+    sb.append(\", parentSpanId=\");\n+    sb.append(parentSpanId);\n+    sb.append(\", name=\");\n+    sb.append(name);\n+    sb.append(\", kind=\");\n+    sb.append(kind);\n+    sb.append(\", attributes=\");\n+    sb.append(attributes);\n+    sb.append(\", status=\");\n+    sb.append(status);\n+    sb.append(\", totalRecordedEvents=\");\n+    sb.append(totalRecordedEvents);\n+    sb.append(\", totalRecordedLinks=\");\n+    sb.append(totalRecordedLinks);\n+    sb.append(\", startEpochNanos=\");\n+    sb.append(startEpochNanos);\n+    sb.append(\", endEpochNanos=\");\n+    sb.append(endEpochNanos);\n+    sb.append(\"}\");\n+    return sb.toString();\n   }\n \n   private static class LimitingAttributeConsumer implements KeyValueConsumer<AttributeValue> {\n"}}, {"oid": "a7ac537d4936ac243e0af601b7cdcaa64bcc76c8", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a7ac537d4936ac243e0af601b7cdcaa64bcc76c8", "message": "optimized", "committedDate": "2020-08-10T04:54:38Z", "type": "commit"}]}