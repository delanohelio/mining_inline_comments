{"pr_number": 10836, "pr_title": "Update ConfiguredTopicBean", "pr_createdAt": "2020-02-11T17:15:14Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10836", "timeline": [{"oid": "f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3", "url": "https://github.com/OpenLiberty/open-liberty/commit/f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3", "message": "Update ConfiguredTopicBean", "committedDate": "2020-02-11T17:00:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4MDQyOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10836#discussion_r377780429", "bodyText": "Could use StandardCharsets.UTF_8 instead of the string", "author": "Azquelt", "createdAt": "2020-02-11T17:19:49Z", "path": "dev/com.ibm.ws.microprofile.reactive.messaging_fat/fat/src/com/ibm/ws/microprofile/reactive/messaging/fat/kafka/message/ConfiguredTopicBean.java", "diffHunk": "@@ -26,14 +28,22 @@\n     public static final String PRODUCER_RECORD_KEY = TEST_PREFIX + \"key\";\n     public static final String PRODUCER_RECORD_VALUE = TEST_PREFIX + \"value\";\n     public static final String GROUP_ID = TEST_PREFIX + \"app-group\";\n+    public static final String HEADER_KEY_PREFIX = TEST_PREFIX + \"headerKey_\";\n+    public static final String HEADER_VALUE_PREFIX = TEST_PREFIX + \"headerValue_\";\n+    public static final int NUM_HEADERS = 5;\n \n     public static final String CONFIGURED_TOPIC = TEST_PREFIX + \"configured-topic\";\n     public static final String PRODUCER_RECORD_TOPIC = TEST_PREFIX + \"producer-record-topic\";\n \n     @Incoming(CHANNEL_IN)\n     @Outgoing(CHANNEL_OUT)\n-    public ProducerRecord<String, String> reverseString(String in) {\n-        ProducerRecord<String, String> producerRecord = new ProducerRecord<String, String>(PRODUCER_RECORD_TOPIC, PRODUCER_RECORD_KEY, PRODUCER_RECORD_VALUE);\n+    public ProducerRecord<String, String> reverseString(String in) throws UnsupportedEncodingException {\n+\n+        ProducerRecord<String, String> producerRecord = new ProducerRecord<String, String>(PRODUCER_RECORD_TOPIC, null, PRODUCER_RECORD_KEY, PRODUCER_RECORD_VALUE);\n+        for (int i = 0; i < ConsumerRecordBean.NUM_HEADERS; i++) {\n+            producerRecord.headers().add(HEADER_KEY_PREFIX + i, (HEADER_VALUE_PREFIX + i).getBytes(\"UTF-8\"));", "originalCommit": "f81d3e8a195d54b3efe1cb676c4aa30b8b54e1a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}