{"pr_number": 13307, "pr_title": "Update SunOne test to use UnboundID", "pr_createdAt": "2020-08-04T19:59:17Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13307", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMjgxNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13307#discussion_r465302817", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.\n          \n          \n            \n             * An in memory UnboundID LDAP server designed to contain the same data as the Sun One instance of the ApacheDS stand-alone LDAP Servers.", "author": "jvanhill", "createdAt": "2020-08-04T20:12:03Z", "path": "dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.com.unboundid;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+/**\n+ * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.", "originalCommit": "f7a3a9d2087c1d09ba797076ec6cd4d4e33d1135", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "chunk": "diff --git a/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java b/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\nindex 082f70d323..c6524d4306 100644\n--- a/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\n+++ b/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\n\n@@ -14,9 +14,9 @@ package com.ibm.ws.com.unboundid;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.\n+ * An in memory UnboundID LDAP server designed to contain the same data as the Sun One instance of the ApacheDS stand-alone LDAP Servers.\n  *\n- * This InMemoryTDSLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust TDS schema design\n+ * This InMemoryLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust schema design\n  */\n public class InMemorySunLDAPServer extends InMemoryLDAPServer {\n     protected static final Class<?> c = InMemorySunLDAPServer.class;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMzAwOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13307#discussion_r465303008", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This InMemoryTDSLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust TDS schema design\n          \n          \n            \n             * This InMemoryLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust schema design", "author": "jvanhill", "createdAt": "2020-08-04T20:12:30Z", "path": "dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.com.unboundid;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+/**\n+ * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.\n+ *\n+ * This InMemoryTDSLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust TDS schema design", "originalCommit": "f7a3a9d2087c1d09ba797076ec6cd4d4e33d1135", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "chunk": "diff --git a/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java b/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\nindex 082f70d323..c6524d4306 100644\n--- a/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\n+++ b/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\n\n@@ -14,9 +14,9 @@ package com.ibm.ws.com.unboundid;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.\n+ * An in memory UnboundID LDAP server designed to contain the same data as the Sun One instance of the ApacheDS stand-alone LDAP Servers.\n  *\n- * This InMemoryTDSLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust TDS schema design\n+ * This InMemoryLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust schema design\n  */\n public class InMemorySunLDAPServer extends InMemoryLDAPServer {\n     protected static final Class<?> c = InMemorySunLDAPServer.class;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMzI1OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13307#discussion_r465303259", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Load the TDS data LDIF. This contains users and groups that were originally\n          \n          \n            \n                     * Load the Sun One data LDIF. This contains users and groups that were originally", "author": "jvanhill", "createdAt": "2020-08-04T20:12:56Z", "path": "dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.com.unboundid;\n+\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+/**\n+ * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.\n+ *\n+ * This InMemoryTDSLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust TDS schema design\n+ */\n+public class InMemorySunLDAPServer extends InMemoryLDAPServer {\n+    protected static final Class<?> c = InMemorySunLDAPServer.class;\n+    public static final String BASE_DN = \"dc=rtp,dc=raleigh,dc=ibm,dc=com\";\n+\n+    /**\n+     * Creates a new instance of the in memory LDAP server. It initializes the directory\n+     * service.\n+     *\n+     * @throws Exception If something went wrong\n+     */\n+    public InMemorySunLDAPServer() throws Exception {\n+        super(false, BASE_DN);\n+\n+        /*\n+         * Load the TDS data LDIF. This contains users and groups that were originally", "originalCommit": "f7a3a9d2087c1d09ba797076ec6cd4d4e33d1135", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "chunk": "diff --git a/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java b/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\nindex 082f70d323..c6524d4306 100644\n--- a/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\n+++ b/dev/com.ibm.ws.com.unboundid/src/com/ibm/ws/com/unboundid/InMemorySunLDAPServer.java\n\n@@ -14,9 +14,9 @@ package com.ibm.ws.com.unboundid;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * An in memory UnboundID LDAP server designed to contain the same data as the Tivoli Directory Server instance of the ApacheDS stand-alone LDAP Servers.\n+ * An in memory UnboundID LDAP server designed to contain the same data as the Sun One instance of the ApacheDS stand-alone LDAP Servers.\n  *\n- * This InMemoryTDSLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust TDS schema design\n+ * This InMemoryLDAPServer is currently using a null schema to host the data, this could be replaced in the future with a robust schema design\n  */\n public class InMemorySunLDAPServer extends InMemoryLDAPServer {\n     protected static final Class<?> c = InMemorySunLDAPServer.class;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNDAyNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13307#discussion_r465304024", "bodyText": "White space between lines.", "author": "jvanhill", "createdAt": "2020-08-04T20:14:23Z", "path": "dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java", "diffHunk": "@@ -50,6 +53,7 @@\n     /** Test rule for testing for expected exceptions. */\n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n+    private static InMemorySunLDAPServer ldapServer;", "originalCommit": "f7a3a9d2087c1d09ba797076ec6cd4d4e33d1135", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "chunk": "diff --git a/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java b/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java\nindex 200fd90816..09f8517c1e 100755\n--- a/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java\n+++ b/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java\n\n@@ -53,6 +53,7 @@ public class URAPIs_SUNLDAP_SSLTest {\n     /** Test rule for testing for expected exceptions. */\n     @Rule\n     public ExpectedException expectedException = ExpectedException.none();\n+\n     private static InMemorySunLDAPServer ldapServer;\n \n     //private final LeakedPasswordChecker passwordChecker = new LeakedPasswordChecker(server);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwNDQxNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13307#discussion_r465304416", "bodyText": "Don't need to add LDAP variables if using the in memory.", "author": "jvanhill", "createdAt": "2020-08-04T20:15:06Z", "path": "dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java", "diffHunk": "@@ -59,11 +63,38 @@\n      */\n     @BeforeClass\n     public static void setUp() throws Exception {\n-        // Add LDAP variables to bootstrap properties file\n+        setupLdapServer();\n+        setupLibertyServer();\n+    }\n+\n+    /**\n+     * Setup the Liberty server. This server will start with very basic configuration. The tests\n+     * will configure the server dynamically.\n+     *\n+     * @throws Exception If there was an issue setting up the Liberty server.\n+     */\n+    public static void setupLibertyServer() throws Exception {\n+        /*\n+         * Add LDAP variables to bootstrap properties file\n+         */\n         LDAPUtils.addLDAPVariables(server);", "originalCommit": "f7a3a9d2087c1d09ba797076ec6cd4d4e33d1135", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "chunk": "diff --git a/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java b/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java\nindex 200fd90816..09f8517c1e 100755\n--- a/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java\n+++ b/dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/URAPIs_SUNLDAP_SSLTest.java\n\n@@ -74,10 +75,6 @@ public class URAPIs_SUNLDAP_SSLTest {\n      * @throws Exception If there was an issue setting up the Liberty server.\n      */\n     public static void setupLibertyServer() throws Exception {\n-        /*\n-         * Add LDAP variables to bootstrap properties file\n-         */\n-        LDAPUtils.addLDAPVariables(server);\n         Log.info(c, \"setUp\", \"Starting the server... (will wait for userRegistry servlet to start)\");\n         server.copyFileToLibertyInstallRoot(\"lib/features\", \"internalfeatures/securitylibertyinternals-1.0.mf\");\n         server.addInstalledAppForValidation(\"userRegistry\");\n"}}, {"oid": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "url": "https://github.com/OpenLiberty/open-liberty/commit/213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "message": "Update SunOne test to use UnboundID", "committedDate": "2020-08-05T05:33:45Z", "type": "commit"}, {"oid": "213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "url": "https://github.com/OpenLiberty/open-liberty/commit/213a93e53e1cb2aa45ced202b8efc6d616c6ed87", "message": "Update SunOne test to use UnboundID", "committedDate": "2020-08-05T05:33:45Z", "type": "forcePushed"}]}