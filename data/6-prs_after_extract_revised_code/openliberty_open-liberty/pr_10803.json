{"pr_number": 10803, "pr_title": "Fixing test infrastructure to allow for accurate database tracing", "pr_createdAt": "2020-02-07T22:22:17Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10803", "timeline": [{"oid": "5c9a8eb83c5492aa92430ca9dfb055c3361e8a8e", "url": "https://github.com/OpenLiberty/open-liberty/commit/5c9a8eb83c5492aa92430ca9dfb055c3361e8a8e", "message": "Fixing test infrastructure to allow for accurate database tracing", "committedDate": "2020-02-07T22:25:26Z", "type": "forcePushed"}, {"oid": "081181c7db2d48a956558865908d18942b85e5a1", "url": "https://github.com/OpenLiberty/open-liberty/commit/081181c7db2d48a956558865908d18942b85e5a1", "message": "Fixing test infrastructure to allow for accurate database tracing", "committedDate": "2020-02-07T22:27:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377263806", "bodyText": "Where does org.testcontainers.containers exist?", "author": "gjwatts", "createdAt": "2020-02-10T19:17:55Z", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),", "originalCommit": "081181c7db2d48a956558865908d18942b85e5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5MTkyMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377291920", "bodyText": "That is part of the testcontainers library that we pull in here:\nhttps://github.com/OpenLiberty/open-liberty/blob/integration/dev/fattest.databases/bnd.bnd#L33-L35", "author": "KyleAure", "createdAt": "2020-02-10T20:14:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4Mzc2NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377783765", "bodyText": "Thanks!", "author": "gjwatts", "createdAt": "2020-02-11T17:25:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2MzgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "chunk": "diff --git a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\nindex 797dd95f79..cb738e327f 100644\n--- a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\n+++ b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\n\n@@ -45,10 +45,16 @@ public enum DatabaseContainerType {\n         Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n \t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t} catch (ClassNotFoundException e) {\n+\t\t\tfail(\"Could not find the container class: \" + containerClassName + \" for testconatiner type: \" + this.name());\n+\t\t}\n+\t\t\n+\t\ttry {\n \t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);\n+\t\t\tfail(\"Could not find the datasource properties class: \" + dataSourcePropertiesClassName + \" for testconatiner type: \" + this.name());\n \t\t}\n+\t\t\n         this.containerClass = containerClass;\n         this.dsPropsClass = dsPropsClass;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MTg0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377271843", "bodyText": "typo?: \"Could not find one...\"\nI only see one class that will be displayed in the failed assertion.  Suggest changing the message to something like \"Could not find class: ...\"", "author": "gjwatts", "createdAt": "2020-02-10T19:33:44Z", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find class: \" + className);\n+\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);", "originalCommit": "081181c7db2d48a956558865908d18942b85e5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2NjA4OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377366088", "bodyText": "Nice catch on the typo.  Here I am throwing an error if we fail to find a class during one of these lines:\ncontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\ndsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\nDo you think I should try then one at a time and have a more specific failure?", "author": "KyleAure", "createdAt": "2020-02-10T22:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3MTg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "chunk": "diff --git a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\nindex 797dd95f79..cb738e327f 100644\n--- a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\n+++ b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\n\n@@ -45,10 +45,16 @@ public enum DatabaseContainerType {\n         Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n \t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t} catch (ClassNotFoundException e) {\n+\t\t\tfail(\"Could not find the container class: \" + containerClassName + \" for testconatiner type: \" + this.name());\n+\t\t}\n+\t\t\n+\t\ttry {\n \t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);\n+\t\t\tfail(\"Could not find the datasource properties class: \" + dataSourcePropertiesClassName + \" for testconatiner type: \" + this.name());\n \t\t}\n+\t\t\n         this.containerClass = containerClass;\n         this.dsPropsClass = dsPropsClass;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377334811", "bodyText": "How did you manufacture this class?  Did you copy another one and change the names to Postgres as needed?", "author": "gjwatts", "createdAt": "2020-02-10T21:44:59Z", "path": "dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops/Properties_postgresql.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*******************************************************************************", "originalCommit": "081181c7db2d48a956558865908d18942b85e5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MTI0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377361243", "bodyText": "Added in the fields manually.  Then, used eclipse tools to generate getters, setters, and toString method.  Then added in the annotations and (unfortunately) had to edit the toString method to look like the other properties classes.", "author": "KyleAure", "createdAt": "2020-02-10T22:42:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NTUzMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377785532", "bodyText": "Thank you!", "author": "gjwatts", "createdAt": "2020-02-11T17:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNDgxMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377337806", "bodyText": "Where does com.ibm.websphere.simplicity.config.dsprops.* exist?", "author": "gjwatts", "createdAt": "2020-02-10T21:51:25Z", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java", "diffHunk": "@@ -12,42 +12,49 @@\n \n import static org.junit.Assert.fail;\n \n+import java.lang.reflect.Constructor;\n+\n import org.testcontainers.containers.JdbcDatabaseContainer;\n import org.testcontainers.containers.output.OutputFrame;\n \n+import com.ibm.websphere.simplicity.config.DataSourceProperties;\n import com.ibm.websphere.simplicity.log.Log;\n \n /**\n- * This is a current list of database test-containers that are in the database rotation.\n+ * This is a current list of database testcontainers that are in the database rotation.\n  */\n @SuppressWarnings(\"rawtypes\")\n public enum DatabaseContainerType {\n-    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\"),\n-    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\"),\n-    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\"),\n-    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\"),\n-    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\"),\n-    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\");\n+    DB2(\"jcc.jar\", \"org.testcontainers.containers.\", \"Db2Container\", \"Properties_db2_jcc\"),\n+    Derby(\"derby.jar\", \"componenttest.topology.database.container.\", \"DerbyNoopContainer\", \"Properties_derby_embedded\"),\n+    DerbyClient(\"derbyclient.jar\", \"componenttest.topology.database.container.\", \"DerbyClientNoopContainer\", \"Properties_derby_client\"),\n+    Oracle(\"ojdbc8_g.jar\", \"org.testcontainers.containers.\", \"OracleContainer\", \"Properties_oracle\"),\n+    Postgres(\"postgresql.jar\", \"org.testcontainers.containers.\", \"PostgreSQLContainer\", \"Properties_postgresql\"),\n+    SQLServer(\"mssql-jdbc.jar\", \"componenttest.topology.database.container.\", \"SQLServerContainer\", \"Properties_microsoft_sqlserver\");\n \n     private String driverName;\n-    private Class<? extends JdbcDatabaseContainer> clazz;\n+    private Class<DataSourceProperties> dsPropsClass;\n+    private Class<? extends JdbcDatabaseContainer> containerClass;\n+    \n \n     @SuppressWarnings(\"unchecked\")\n-\tDatabaseContainerType(final String driverName, final String packageName, final String className) {\n+\tDatabaseContainerType(final String driverName, final String packageName, final String containerClassName, final String dataSourcePropertiesClassName) {\n         this.driverName = driverName;\n         \n-        //Use reflection to get class at runtime.\n-        Class clazz = null;\n+        //Use reflection to get classes at runtime.\n+        Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n-\t\t\tclazz = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + className);\n+\t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);", "originalCommit": "081181c7db2d48a956558865908d18942b85e5a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MzAxMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377363012", "bodyText": "In the fattest.simplicity module.  https://github.com/OpenLiberty/open-liberty/tree/integration/dev/fattest.simplicity/src/com/ibm/websphere/simplicity/config/dsprops that is where all the datasource property classes we create datasource objects from exist (when testing) in order to make changes to the config.", "author": "KyleAure", "createdAt": "2020-02-10T22:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NDczMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377784731", "bodyText": "Thanks for the memory jog.  I knew I had seen those files before, but was not able to traverse back to them.", "author": "gjwatts", "createdAt": "2020-02-11T17:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMzNzgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "chunk": "diff --git a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\nindex 797dd95f79..cb738e327f 100644\n--- a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\n+++ b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerType.java\n\n@@ -45,10 +45,16 @@ public enum DatabaseContainerType {\n         Class containerClass = null, dsPropsClass  = null;\n \t\ttry {\n \t\t\tcontainerClass = (Class<? extends JdbcDatabaseContainer>) Class.forName(packageName + containerClassName);\n+\t\t} catch (ClassNotFoundException e) {\n+\t\t\tfail(\"Could not find the container class: \" + containerClassName + \" for testconatiner type: \" + this.name());\n+\t\t}\n+\t\t\n+\t\ttry {\n \t\t\tdsPropsClass = (Class<DataSourceProperties>) Class.forName(\"com.ibm.websphere.simplicity.config.dsprops.\" + dataSourcePropertiesClassName);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tfail(\"Could not find on of the following classes: \" + containerClassName + dataSourcePropertiesClassName);\n+\t\t\tfail(\"Could not find the datasource properties class: \" + dataSourcePropertiesClassName + \" for testconatiner type: \" + this.name());\n \t\t}\n+\t\t\n         this.containerClass = containerClass;\n         this.dsPropsClass = dsPropsClass;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5NTIzNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10803#discussion_r377795235", "bodyText": "typo? changes -> changed", "author": "gjwatts", "createdAt": "2020-02-11T17:46:52Z", "path": "dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java", "diffHunk": "@@ -30,6 +31,24 @@\n     private DatabaseContainerUtil() {\n     \t//No objects should be created from this class\n     }\n+    \n+    /**\n+     * Performs the same property substitution as {@link DatabaseContainerUtil#setupDataSourceProperties(LibertyServer, JdbcDatabaseContainer)}\n+     * but ensures that we use properties.{database} instead of generic properties.\n+     */\n+    public static void setupDataSourceDatabaseProperties(LibertyServer serv, JdbcDatabaseContainer<?> cont) throws CloneNotSupportedException, Exception {\n+        //Skip for Derby and DerbyClient\n+    \tif (DatabaseContainerType.valueOf(cont) == DatabaseContainerType.Derby ||\n+    \t\t\tDatabaseContainerType.valueOf(cont) == DatabaseContainerType.DerbyClient)\n+            return; //Derby used by default no need to change DS properties\n+    \t\n+    \t//Get server config\n+    \tServerConfiguration cloneConfig = serv.getServerConfiguration().clone();\n+    \t//Get datasources to be changes", "originalCommit": "cbd8a30468cc1e18782703f8f3b4d9558f71b0b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "chunk": "diff --git a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java\nindex 640054dd95..b9916f7523 100644\n--- a/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java\n+++ b/dev/fattest.databases/src/componenttest/topology/database/container/DatabaseContainerUtil.java\n\n@@ -44,7 +44,7 @@ public final class DatabaseContainerUtil {\n     \t\n     \t//Get server config\n     \tServerConfiguration cloneConfig = serv.getServerConfiguration().clone();\n-    \t//Get datasources to be changes\n+    \t//Get datasources to be changed\n     \tList<DataSource> datasources = getDataSources(serv, cloneConfig);\n     \t//Modify those datasources\n     \tmodifyDataSourcePropsForDatabase(datasources, cloneConfig, serv, cont);\n"}}, {"oid": "c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "url": "https://github.com/OpenLiberty/open-liberty/commit/c3f2f49ac59e6e7a9bc463eacb7a8e20a3d087c8", "message": "feedback changes", "committedDate": "2020-02-11T19:04:59Z", "type": "forcePushed"}, {"oid": "a782fb826427ed1536484c8643ab60a30fc05f49", "url": "https://github.com/OpenLiberty/open-liberty/commit/a782fb826427ed1536484c8643ab60a30fc05f49", "message": "Fixing test infrastructure to allow for accurate database tracing", "committedDate": "2020-02-11T23:39:03Z", "type": "commit"}, {"oid": "e18c9f9d184b86f5acc42986b110393b9eaf80e9", "url": "https://github.com/OpenLiberty/open-liberty/commit/e18c9f9d184b86f5acc42986b110393b9eaf80e9", "message": "feedback changes", "committedDate": "2020-02-11T23:39:03Z", "type": "commit"}, {"oid": "fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "url": "https://github.com/OpenLiberty/open-liberty/commit/fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "message": "Deprecated unsued db rotation methods/classes", "committedDate": "2020-02-11T23:55:55Z", "type": "commit"}, {"oid": "fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "url": "https://github.com/OpenLiberty/open-liberty/commit/fda91ce54a8990413bd9c2c8c57edb38698a2a2a", "message": "Deprecated unsued db rotation methods/classes", "committedDate": "2020-02-11T23:55:55Z", "type": "forcePushed"}]}