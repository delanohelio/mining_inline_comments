{"pr_number": 15384, "pr_title": "Fix mpOpenAPI-2.0 scanning of application deployed with loose config", "pr_createdAt": "2020-12-29T21:04:44Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/15384", "timeline": [{"oid": "fa6c94ef00c5fa87a0e5db987606255934d4afe3", "url": "https://github.com/OpenLiberty/open-liberty/commit/fa6c94ef00c5fa87a0e5db987606255934d4afe3", "message": "mpOpenAPI-2.0: Index using liberty container API\n\nUse the container API instead of reading files directly", "committedDate": "2020-12-30T12:01:37Z", "type": "commit"}, {"oid": "725d9f23969414e9b4a0a4e45055a1b62dc47e62", "url": "https://github.com/OpenLiberty/open-liberty/commit/725d9f23969414e9b4a0a4e45055a1b62dc47e62", "message": "Add loose config OpenAPI deployment test", "committedDate": "2020-12-30T12:01:37Z", "type": "commit"}, {"oid": "ed4fe156b40ff6f63168aab27b2feeb618c68ae1", "url": "https://github.com/OpenLiberty/open-liberty/commit/ed4fe156b40ff6f63168aab27b2feeb618c68ae1", "message": "Prevent exception if OpenAPI model is empty", "committedDate": "2020-12-30T12:01:37Z", "type": "commit"}, {"oid": "ed4fe156b40ff6f63168aab27b2feeb618c68ae1", "url": "https://github.com/OpenLiberty/open-liberty/commit/ed4fe156b40ff6f63168aab27b2feeb618c68ae1", "message": "Prevent exception if OpenAPI model is empty", "committedDate": "2020-12-30T12:01:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ2NTI3OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15384#discussion_r550465279", "bodyText": "extract local constant of 5 or use s.split(Constants.FILE_SUFFIX_CLASS)[0] ?", "author": "hutchig", "createdAt": "2020-12-31T11:41:44Z", "path": "dev/io.openliberty.microprofile.openapi.2.0.internal/src/io/openliberty/microprofile/openapi20/utils/IndexUtils.java", "diffHunk": "@@ -118,6 +91,40 @@ public static IndexView getIndexView(WebModuleInfo webModuleInfo, OpenApiConfig\n \n         return view;\n     }\n+    \n+    private static void indexContainer(Container container, String packageName, Indexer indexer, FilteredIndexView filter) {\n+        for (Entry entry : container) {\n+            String entryName = entry.getName();\n+            try {\n+                if (entryName.endsWith(Constants.FILE_SUFFIX_CLASS)) {\n+                    int nameLength = entryName.length() - Constants.FILE_SUFFIX_CLASS.length();", "originalCommit": "ed4fe156b40ff6f63168aab27b2feeb618c68ae1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3OTkzMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15384#discussion_r550479933", "bodyText": "My gut feeling is that the constant wouldn't make a difference and the split would be slower, but I'll look at this when I get back to looking at the OpenAPI performance properly and do some more profiling and experimenting with changes.", "author": "Azquelt", "createdAt": "2020-12-31T13:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ2NTI3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ2ODQwOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15384#discussion_r550468408", "bodyText": "wondered if this could go in a FAT Utils class.", "author": "hutchig", "createdAt": "2020-12-31T11:59:18Z", "path": "dev/io.openliberty.microprofile.openapi.2.0.internal_fat/fat/src/io/openliberty/microprofile/openapi20/fat/deployments/DeploymentTest.java", "diffHunk": "@@ -266,13 +296,30 @@ private void deployApp(Archive<?> archive, Consumer<ServerConfiguration> configM\n         server.updateServerConfiguration(config);\n         server.waitForConfigUpdateInLogUsingMark(Collections.singleton(getName(archive)));\n     }\n+    \n+    private void deployLooseApp(String fileName, String type) throws Exception {", "originalCommit": "ed4fe156b40ff6f63168aab27b2feeb618c68ae1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4MDQzOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15384#discussion_r550480438", "bodyText": "Potentially, but it needs quite a lot of extra stuff (files already deployed to the correct locations etc.) I'd consider putting in a common util class if we end up needing to do the same thing again.\nFortunately, testing with loose config doesn't come up very much, but if we had to do it more for some reason, I'd probably want to also make a utility which would handle copying the files around and writing the loose config xml file so that there wasn't so much manual copying and supporting files for each test.", "author": "Azquelt", "createdAt": "2020-12-31T13:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ2ODQwOA=="}], "type": "inlineReview", "revised_code": null}]}