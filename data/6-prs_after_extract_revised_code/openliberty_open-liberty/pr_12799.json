{"pr_number": 12799, "pr_title": "Add waitForStringInLog for SRVE0242I (/metrics initialization)", "pr_createdAt": "2020-06-26T14:45:21Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12799", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwNzY1Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447207656", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "author": "fmhwong", "createdAt": "2020-06-29T19:39:02Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -169,6 +169,12 @@ public void cleanUp() throws Exception {\n     public void testAccessLogFieldNamesEnv() throws Exception {\n         setUp(envServer);\n         waitForSecurityPrerequisites(envServer, WAIT_TIMEOUT);\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      envServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      envServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -169,12 +169,7 @@ public class CustomAccessLogFieldsTest {\n     public void testAccessLogFieldNamesEnv() throws Exception {\n         setUp(envServer);\n         waitForSecurityPrerequisites(envServer, WAIT_TIMEOUT);\n-        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n-        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                      envServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n-        // Wait for /metrics to be initialized\n-        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n-                      envServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));\n+        waitForMetricsToStart(envServer, WAIT_TIMEOUT);\n         hitHttpsEndpointSecure(\"/metrics\", envServer);\n         String line = envServer.waitForStringInLog(\"liberty_accesslog\");\n         assertNotNull(\"No liberty_accesslog found in the output JSON log.\", line);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwNzg0OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447207848", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "author": "fmhwong", "createdAt": "2020-06-29T19:39:25Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -184,6 +190,12 @@ public void testAccessLogFieldNamesEnv() throws Exception {\n     public void testAccessLogFieldNamesBootstrap() throws Exception {\n         setUp(bootstrapServer);\n         waitForSecurityPrerequisites(bootstrapServer, WAIT_TIMEOUT);\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      bootstrapServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -190,12 +185,7 @@ public class CustomAccessLogFieldsTest {\n     public void testAccessLogFieldNamesBootstrap() throws Exception {\n         setUp(bootstrapServer);\n         waitForSecurityPrerequisites(bootstrapServer, WAIT_TIMEOUT);\n-        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n-        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                      bootstrapServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n-        // Wait for /metrics to be initialized\n-        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n-                      bootstrapServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));\n+        waitForMetricsToStart(bootstrapServer, WAIT_TIMEOUT);\n         hitHttpsEndpointSecure(\"/metrics\", bootstrapServer);\n         String line = bootstrapServer.waitForStringInLog(\"liberty_accesslog\");\n         assertNotNull(\"No liberty_accesslog found in the output JSON log.\", line);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODE1NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208154", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "author": "fmhwong", "createdAt": "2020-06-29T19:39:57Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -200,10 +212,14 @@ public void testAccessLogFieldNamesXml() throws Exception {\n         setUp(xmlServer);\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n-        } else {\n-            assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                          xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n         }\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -213,12 +203,7 @@ public class CustomAccessLogFieldsTest {\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n         }\n-        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n-        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n-        // Wait for /metrics to be initialized\n-        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n-                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));\n+        waitForMetricsToStart(xmlServer, WAIT_TIMEOUT);\n \n         isFirstTimeUsingXmlServer = false;\n         hitHttpsEndpointSecure(\"/metrics\", xmlServer);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODIzMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208230", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "author": "fmhwong", "createdAt": "2020-06-29T19:40:05Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -274,10 +290,14 @@ public void testAllFieldsArePrinted() throws Exception {\n         waitForConfigUpdate(xmlServer);\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n-        } else {\n-            assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                          xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n         }\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -291,12 +276,7 @@ public class CustomAccessLogFieldsTest {\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n         }\n-        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n-        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n-        // Wait for /metrics to be initialized\n-        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n-                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));\n+        waitForMetricsToStart(xmlServer, WAIT_TIMEOUT);\n \n         isFirstTimeUsingXmlServer = false;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODMxNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208315", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "author": "fmhwong", "createdAt": "2020-06-29T19:40:12Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -330,10 +350,14 @@ public void testFieldsInAccessLogAreSameInJSON() throws Exception {\n         setUp(xmlServer);\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n-        } else {\n-            assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                          xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n         }\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n+                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -351,12 +331,7 @@ public class CustomAccessLogFieldsTest {\n         if (isFirstTimeUsingXmlServer) {\n             waitForSecurityPrerequisites(xmlServer, WAIT_TIMEOUT);\n         }\n-        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n-        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                      xmlServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n-        // Wait for /metrics to be initialized\n-        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n-                      xmlServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));\n+        waitForMetricsToStart(xmlServer, WAIT_TIMEOUT);\n \n         isFirstTimeUsingXmlServer = false;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwODM4NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447208385", "bodyText": "Use  \"SRVE0242I./metrics.\" to be more specific for metrics endpoint.", "author": "fmhwong", "createdAt": "2020-06-29T19:40:21Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -376,6 +400,12 @@ public void testFieldsInAccessLogAreSameInJSON() throws Exception {\n     public void testChangeJsonAccessLogFieldsConfigValue() throws Exception {\n         setUp(changeConfigServer);\n         waitForSecurityPrerequisites(changeConfigServer, WAIT_TIMEOUT);\n+        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n+        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n+                      changeConfigServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n+        // Wait for /metrics to be initialized\n+        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -400,12 +375,7 @@ public class CustomAccessLogFieldsTest {\n     public void testChangeJsonAccessLogFieldsConfigValue() throws Exception {\n         setUp(changeConfigServer);\n         waitForSecurityPrerequisites(changeConfigServer, WAIT_TIMEOUT);\n-        // Ensure defaultHttpEndpoint-ssl TCP Channel is started\n-        assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",\n-                      changeConfigServer.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\", 60000));\n-        // Wait for /metrics to be initialized\n-        assertNotNull(\"/metrics was not initialized (SRVE0242I not found)\",\n-                      changeConfigServer.waitForStringInLog(\"SRVE0242I\", WAIT_TIMEOUT));\n+        waitForMetricsToStart(changeConfigServer, WAIT_TIMEOUT);\n \n         hitHttpsEndpointSecure(\"/metrics\", changeConfigServer);\n         String line = changeConfigServer.waitForStringInLogUsingMark(\"liberty_accesslog\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTY1NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447209655", "bodyText": "Do you expect the test to fail when you catch an IOException?", "author": "fmhwong", "createdAt": "2020-06-29T19:42:33Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -583,7 +612,7 @@ private static void hitHttpEndpoint(String stringUrl, LibertyServer server) {\n             assertTrue(\"Nothing was returned from the servlet - there was a problem connecting.\", lines.length() > 0);\n             con.disconnect();\n         } catch (IOException e) {\n-", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -613,6 +583,7 @@ public class CustomAccessLogFieldsTest {\n             con.disconnect();\n         } catch (IOException e) {\n             e.printStackTrace();\n+            fail(\"Exception caught. Please see System.err log to view stack trace.\");\n         } finally {\n             if (con != null)\n                 con.disconnect();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTczNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12799#discussion_r447209734", "bodyText": "Do you expect the test to fail when you catch an IOException?", "author": "fmhwong", "createdAt": "2020-06-29T19:42:40Z", "path": "dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java", "diffHunk": "@@ -623,12 +651,11 @@ public boolean verify(String arg0, SSLSession arg1) {\n             } finally {\n                 br.close();\n             }\n-\n             Log.info(c, \"hitHttpsEndpointSecure\", url + \" reached successfully.\");\n             assertTrue(\"Nothing was returned from the servlet - there was a problem connecting.\", lines.length() > 0);\n             con.disconnect();\n         } catch (IOException e) {\n-\n+            e.printStackTrace();", "originalCommit": "b682bebc64598e3a989ab8c59c6b5519c8ba1720", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "chunk": "diff --git a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\nindex cbcbcaf0d2..8d315a1f52 100644\n--- a/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n+++ b/dev/com.ibm.ws.logging_fat/fat/src/com/ibm/ws/logging/fat/CustomAccessLogFieldsTest.java\n\n@@ -656,6 +627,7 @@ public class CustomAccessLogFieldsTest {\n             con.disconnect();\n         } catch (IOException e) {\n             e.printStackTrace();\n+            fail(\"Exception caught. Please see System.err log to view stack trace.\");\n         } finally {\n             if (con != null)\n                 con.disconnect();\n"}}, {"oid": "e47ab972049c727115623d8e83297e27ad9e2362", "url": "https://github.com/OpenLiberty/open-liberty/commit/e47ab972049c727115623d8e83297e27ad9e2362", "message": "Add waitForStringInLog for SRVE0242I (/metrics initialization)", "committedDate": "2020-06-30T13:22:55Z", "type": "commit"}, {"oid": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "url": "https://github.com/OpenLiberty/open-liberty/commit/47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "message": "Add fail on exception, move repeated code into method", "committedDate": "2020-06-30T13:22:55Z", "type": "commit"}, {"oid": "47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "url": "https://github.com/OpenLiberty/open-liberty/commit/47c1c8088fdb417c1f8e48fc7392c3960b8fae65", "message": "Add fail on exception, move repeated code into method", "committedDate": "2020-06-30T13:22:55Z", "type": "forcePushed"}]}