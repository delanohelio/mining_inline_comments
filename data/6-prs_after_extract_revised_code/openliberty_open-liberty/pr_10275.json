{"pr_number": 10275, "pr_title": "tests for disabling fail over", "pr_createdAt": "2020-01-02T20:55:43Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10275", "timeline": [{"oid": "b1329e5ec1b6a3827e76943c33ac22d5478647f9", "url": "https://github.com/OpenLiberty/open-liberty/commit/b1329e5ec1b6a3827e76943c33ac22d5478647f9", "message": "Issue #8417 tests for disabling fail over", "committedDate": "2020-01-02T19:28:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgzMTc0Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10275#discussion_r362831747", "bodyText": "HOSTANME typo.", "author": "nmittles", "createdAt": "2020-01-03T14:40:53Z", "path": "dev/com.ibm.ws.concurrent.persistent_fat_failover1serv/test-applications/failover1servApp/src/failover1serv/web/Failover1ServerTestServlet.java", "diffHunk": "@@ -247,4 +252,82 @@ public void testTaskStarted(HttpServletRequest request, HttpServletResponse resp\n         if (!status.hasResult())\n             throw new Exception(\"Task did not complete any executions within allotted interval. \" + status);\n     }\n+\n+    /**\n+     * Transfer tasks to the specified instance. The transfer operation is performed via the PersistentExecutor MBean.\n+     */\n+    public void testTransferWithMBean(HttpServletRequest request, HttpServletResponse response) throws Exception {\n+        String jndiName = request.getParameter(\"jndiName\");\n+        String[] taskIds = request.getParameterValues(\"taskId\");\n+\n+        PersistentExecutor executor = InitialContext.doLookup(jndiName);\n+        DataSource ds = InitialContext.doLookup(\"java:comp/DefaultDataSource\");\n+        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+        ObjectName obn = new ObjectName(\"WebSphere:type=PersistentExecutorMBean,jndiName=\" + jndiName + \",*\");\n+        Set<ObjectInstance> s = mbs.queryMBeans(obn, null);\n+        if (s.size() != 1) {\n+            for (ObjectInstance i : s)\n+                System.out.println(\"  Found MBean: \" + i.getObjectName());\n+            throw new Exception(\"Expected to find exactly 1 MBean, instead found \" + s.size());\n+        }\n+        ObjectInstance mbean = s.iterator().next();\n+        String[] paramTypes = { \"java.lang.Long\", \"long\" };\n+\n+        for (String taskIdString : taskIds) {\n+            long taskId = Long.valueOf(taskIdString);\n+            // The only way to find the value stored in a task's PARTN column is to query the database\n+            long oldValue;\n+            try (Connection con = ds.getConnection()) {\n+                PreparedStatement st = con.prepareStatement(\"SELECT PARTN FROM WLPTASK WHERE ID=?\");\n+                st.setLong(1, taskId);\n+                ResultSet result = st.executeQuery();\n+                if (!result.next())\n+                    throw new Exception(\"Task \" + taskId + \" is not found.\");\n+                oldValue = result.getLong(1);\n+            }\n+\n+            // Reassign using the mbean\n+            int tasksTransferred = (Integer) mbs.invoke(mbean.getObjectName(), \"transfer\",\n+                    new Long[] { taskId, oldValue },\n+                    new String[] { \"java.lang.Long\", \"long\" });\n+\n+            if (tasksTransferred < 1)\n+                throw new Exception(\"Task \" + taskId + \" with \" + oldValue + \" is not found by mbean \" + mbean);\n+        }\n+    }\n+\n+    /**\n+     * Transfer tasks to the specified instance. The transfer operation is performed by directly updating the database.\n+     */\n+    public void testTransferWithoutMBean(HttpServletRequest request, HttpServletResponse response) throws Exception {\n+        String jndiName = request.getParameter(\"jndiName\");\n+        String[] taskIds = request.getParameterValues(\"taskId\");\n+\n+        PersistentExecutor executor = InitialContext.doLookup(jndiName);\n+        DataSource ds = InitialContext.doLookup(\"java:comp/DefaultDataSource\");\n+\n+        for (String taskIdString : taskIds) {\n+            long taskId = Long.valueOf(taskIdString);\n+            // The only way to find the value stored in a task's PARTN column is to query the database\n+            try (Connection con = ds.getConnection()) {\n+                // querying only EXECUTOR and ignoring HOSTANME, USERDIR, LSERVER columns because there is only one instance", "originalCommit": "b1329e5ec1b6a3827e76943c33ac22d5478647f9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}