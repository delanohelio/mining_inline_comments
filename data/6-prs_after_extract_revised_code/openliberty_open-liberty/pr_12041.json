{"pr_number": 12041, "pr_title": "Fault Tolerance 3.0 Metrics", "pr_createdAt": "2020-05-04T16:33:22Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12041", "timeline": [{"oid": "41e3a142b8b23fde44027a08d87e8ad1b5778d7b", "url": "https://github.com/OpenLiberty/open-liberty/commit/41e3a142b8b23fde44027a08d87e8ad1b5778d7b", "message": "Create initial FT 3.0 projects", "committedDate": "2020-05-04T16:29:20Z", "type": "commit"}, {"oid": "967a370d64f07973b5054801b41d9b1869abad40", "url": "https://github.com/OpenLiberty/open-liberty/commit/967a370d64f07973b5054801b41d9b1869abad40", "message": "Add new MPFT 3.0 features", "committedDate": "2020-05-05T10:29:24Z", "type": "commit"}, {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "url": "https://github.com/OpenLiberty/open-liberty/commit/7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "message": "Fault Tolerance 3.0 metrics changes\n\nAlter the MetricRecorder interface to accommodate the new metrics added\nin 3.0.\n\nImplement MetricRecorder for the FT 3.0 metrics.", "committedDate": "2020-05-05T10:29:25Z", "type": "commit"}, {"oid": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "url": "https://github.com/OpenLiberty/open-liberty/commit/7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "message": "Fault Tolerance 3.0 metrics changes\n\nAlter the MetricRecorder interface to accommodate the new metrics added\nin 3.0.\n\nImplement MetricRecorder for the FT 3.0 metrics.", "committedDate": "2020-05-05T10:29:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNjEzOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420026138", "bodyText": "This class is kinda hard to read in a github diff ... do you think it needs more doc?", "author": "tevans78", "createdAt": "2020-05-05T11:01:29Z", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/MetricRecorder30Impl.java", "diffHunk": "@@ -0,0 +1,469 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.faulttolerance.metrics.integration;\n+\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.FallbackOccurred.NO_FALLBACK;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.FallbackOccurred.WITH_FALLBACK;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.RetriesOccurred.NO_RETRIES;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.RetriesOccurred.WITH_RETRIES;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.EXCEPTION_IN_ABORT_ON;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.EXCEPTION_NOT_IN_RETRY_ON;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.MAX_DURATION_REACHED;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.MAX_RETRIES_REACHED;\n+import static com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory.NO_EXCEPTION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.util.EnumMap;\n+import java.util.function.LongSupplier;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Gauge;\n+import org.eclipse.microprofile.metrics.Histogram;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.MetricType;\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.Tag;\n+\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.ffdc.annotation.FFDCIgnore;\n+import com.ibm.ws.microprofile.faulttolerance.spi.BulkheadPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.CircuitBreakerPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.FallbackPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder;\n+import com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorderProvider.AsyncType;\n+import com.ibm.ws.microprofile.faulttolerance.spi.RetryPolicy;\n+import com.ibm.ws.microprofile.faulttolerance.spi.RetryResultCategory;\n+import com.ibm.ws.microprofile.faulttolerance.spi.TimeoutPolicy;\n+\n+/**\n+ *\n+ */\n+public class MetricRecorder30Impl implements MetricRecorder {\n+\n+    private static final EnumMap<RetryResultCategory, Tag> RETRY_RESULT_TAGS = new EnumMap<>(RetryResultCategory.class);\n+    private static final EnumMap<RetriesOccurred, Tag> RETRIES_OCCURRED_TAGS = new EnumMap<>(RetriesOccurred.class);\n+    static {\n+        RETRY_RESULT_TAGS.put(NO_EXCEPTION, new Tag(\"retryResult\", \"valueReturned\"));\n+        RETRY_RESULT_TAGS.put(EXCEPTION_IN_ABORT_ON, new Tag(\"retryResult\", \"exceptionNotRetryable\"));\n+        RETRY_RESULT_TAGS.put(EXCEPTION_NOT_IN_RETRY_ON, new Tag(\"retryResult\", \"exceptionNotRetryable\"));\n+        RETRY_RESULT_TAGS.put(MAX_DURATION_REACHED, new Tag(\"retryResult\", \"maxDurationReached\"));\n+        RETRY_RESULT_TAGS.put(MAX_RETRIES_REACHED, new Tag(\"retryResult\", \"maxRetriesReached\"));\n+\n+        RETRIES_OCCURRED_TAGS.put(WITH_RETRIES, new Tag(\"retried\", \"true\"));\n+        RETRIES_OCCURRED_TAGS.put(NO_RETRIES, new Tag(\"retried\", \"false\"));\n+    }\n+\n+    private final EnumMap<FallbackOccurred, Counter> invocationSuccessCounter;\n+    private final EnumMap<FallbackOccurred, Counter> invocationFailedCounter;\n+    private final EnumMap<RetryResultCategory, EnumMap<RetriesOccurred, Counter>> retryCallsCounter;\n+    private final Counter retryRetriesCounter;\n+    private final Histogram timeoutDurationHistogram;\n+    private final Counter timeoutTrueCalls;\n+    private final Counter timeoutFalseCalls;\n+    private final Counter circuitBreakerCallsSuccessCounter;\n+    private final Counter circuitBreakerCallsFailureCounter;\n+    private final Counter circuitBreakerCallsOpenCounter;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> circuitBreakerOpenTime;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> circuitBreakerHalfOpenTime;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> circuitBreakerClosedTime;\n+    private final Counter circuitBreakerTimesOpenedCounter;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> bulkheadConcurrentExecutions;\n+    private final Counter bulkheadRejectionsCounter;\n+    private final Counter bulkheadAcceptedCounter;\n+    private final Histogram bulkheadExecutionDuration;\n+    @SuppressWarnings(\"unused\")\n+    private final Gauge<Long> bulkheadQueuePopulation;\n+    private final Histogram bulkheadQueueWaitTimeHistogram;\n+    private LongSupplier concurrentExecutionCountSupplier = null;\n+    private LongSupplier queuePopulationSupplier = null;\n+    private long openNanos;\n+    private long halfOpenNanos;\n+    private long closedNanos;\n+\n+    private enum CircuitBreakerState {\n+        CLOSED,\n+        HALF_OPEN,\n+        OPEN\n+    }\n+\n+    public MetricRecorder30Impl(String methodName, MetricRegistry registry, RetryPolicy retryPolicy, CircuitBreakerPolicy circuitBreakerPolicy, TimeoutPolicy timeoutPolicy,", "originalCommit": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03ccbf9779b7665ebe20f720a4d56bc84425b1aa", "chunk": "diff --git a/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/MetricRecorder30Impl.java b/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/MetricRecorder30Impl.java\nsimilarity index 92%\nrename from dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/MetricRecorder30Impl.java\nrename to dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/MetricRecorder30Impl.java\nindex 5c5e248049..78f3cd9bc0 100644\n--- a/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/MetricRecorder30Impl.java\n+++ b/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/MetricRecorder30Impl.java\n\n@@ -8,7 +8,7 @@\n  * Contributors:\n  *     IBM Corporation - initial API and implementation\n  *******************************************************************************/\n-package com.ibm.ws.microprofile.faulttolerance.metrics.integration;\n+package com.ibm.ws.microprofile.faulttolerance30.metrics.integration;\n \n import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.FallbackOccurred.NO_FALLBACK;\n import static com.ibm.ws.microprofile.faulttolerance.spi.MetricRecorder.FallbackOccurred.WITH_FALLBACK;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNzI0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420027243", "bodyText": "2020", "author": "tevans78", "createdAt": "2020-05-05T11:03:48Z", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 IBM Corporation and others.", "originalCommit": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03ccbf9779b7665ebe20f720a4d56bc84425b1aa", "chunk": "diff --git a/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java b/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/package-info.java\nsimilarity index 84%\nrename from dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java\nrename to dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/package-info.java\nindex d1cf4b6705..6774657733 100644\n--- a/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java\n+++ b/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/package-info.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2018 IBM Corporation and others.\n+ * Copyright (c) 2020 IBM Corporation and others.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNzYzOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420027638", "bodyText": "Should this package be com.ibm.ws.microprofile.faulttolerance30.metrics.integration to avoid an future clashes?", "author": "tevans78", "createdAt": "2020-05-05T11:04:32Z", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java", "diffHunk": "@@ -0,0 +1,18 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+/**\n+ * @version 1.0\n+ */\n+@org.osgi.annotation.versioning.Version(\"1.0\")\n+@TraceOptions(traceGroup = \"FAULTTOLERANCE\")\n+package com.ibm.ws.microprofile.faulttolerance.metrics.integration;", "originalCommit": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0Mjk5Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420042993", "bodyText": "yes", "author": "Azquelt", "createdAt": "2020-05-05T11:37:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyNzYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "03ccbf9779b7665ebe20f720a4d56bc84425b1aa", "chunk": "diff --git a/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java b/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/package-info.java\nsimilarity index 84%\nrename from dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java\nrename to dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/package-info.java\nindex d1cf4b6705..6774657733 100644\n--- a/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance/metrics/integration/package-info.java\n+++ b/dev/com.ibm.ws.microprofile.faulttolerance.3.0.metrics/src/com/ibm/ws/microprofile/faulttolerance30/metrics/integration/package-info.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2018 IBM Corporation and others.\n+ * Copyright (c) 2020 IBM Corporation and others.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyODI0OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420028248", "bodyText": "is this debug still needed?", "author": "tevans78", "createdAt": "2020-05-05T11:05:48Z", "path": "dev/com.ibm.ws.microprofile.faulttolerance.3.0_fat_tck/fat/src/com/ibm/ws/microprofile/faulttolerance/tck/FaultToleranceTck30Launcher.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018, 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.microprofile.faulttolerance.tck;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import componenttest.annotation.AllowedFFDC;\n+import componenttest.annotation.Server;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.custom.junit.runner.Mode;\n+import componenttest.custom.junit.runner.Mode.TestMode;\n+import componenttest.custom.junit.runner.TestModeFilter;\n+import componenttest.topology.impl.JavaInfo;\n+import componenttest.topology.impl.JavaInfo.Vendor;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.MvnUtils;\n+\n+/**\n+ * This is a test class that runs the whole Fault Tolerance 3.0 TCK. The TCK results\n+ * are copied in the results/junit directory before the Simplicity FAT framework\n+ * generates the html report - so there is detailed information on individual\n+ * tests as if they were running as simplicity junit FAT tests in the standard\n+ * location.\n+ */\n+@RunWith(FATRunner.class)\n+@Mode(TestMode.EXPERIMENTAL)\n+public class FaultToleranceTck30Launcher {\n+\n+    private static final String SERVER_NAME = \"FaultTolerance30TCKServer\";\n+\n+    @Server(SERVER_NAME)\n+    public static LibertyServer server;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        Vendor vendor = JavaInfo.forServer(server).vendor();\n+        // For J9 JVMs, add JIT trace for getConfig method to diagnose crashes\n+        if (vendor == Vendor.IBM || vendor == Vendor.OPENJ9) {\n+            Map<String, String> jvmOptions = server.getJvmOptionsAsMap();\n+            jvmOptions.put(\"-Xjit:{org/eclipse/microprofile/config/ConfigProvider.getConfig(Ljava/lang/ClassLoader;)Lorg/eclipse/microprofile/config/Config;}(tracefull,traceInlining,traceCG,log=getConfig.trace)\",", "originalCommit": "7a1b29b9977acbdce3ab79cf11ec00cfa7a240af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0MjkwMQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12041#discussion_r420042901", "bodyText": "Hopefully not, I haven't seen the issue occur on the latest OpenJ9. Once we're happy it's not happening any more, we should go through and remove it from all the test projects.", "author": "Azquelt", "createdAt": "2020-05-05T11:36:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyODI0OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "03ccbf9779b7665ebe20f720a4d56bc84425b1aa", "url": "https://github.com/OpenLiberty/open-liberty/commit/03ccbf9779b7665ebe20f720a4d56bc84425b1aa", "message": "Review changes to FT 3.0 metrics impl", "committedDate": "2020-05-06T13:36:17Z", "type": "commit"}, {"oid": "07d106ebb65fea700cb7d1cb1001e26c4e54eb9c", "url": "https://github.com/OpenLiberty/open-liberty/commit/07d106ebb65fea700cb7d1cb1001e26c4e54eb9c", "message": "Review changes to FT 3.0 TCK", "committedDate": "2020-05-06T13:36:44Z", "type": "commit"}, {"oid": "5f54c9b2db366861c1f65619fe90985dd498a87b", "url": "https://github.com/OpenLiberty/open-liberty/commit/5f54c9b2db366861c1f65619fe90985dd498a87b", "message": "Review changes to FT 3.0 feature files", "committedDate": "2020-05-06T13:37:03Z", "type": "commit"}]}