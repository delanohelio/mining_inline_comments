{"pr_number": 13401, "pr_title": "Issue 13400: Adjust message for other JDKs Acme config test", "pr_createdAt": "2020-08-10T16:27:22Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13401", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODAyOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468748029", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\",\n          \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containing SocketTimeoutException in logs.\",", "author": "jvanhill", "createdAt": "2020-08-11T17:31:43Z", "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "diffHunk": "@@ -685,8 +686,20 @@ public void httpReadConnectTimeouts() throws Exception {\n \t\t\tconfiguration.getAcmeCA().setAcmeTransportConfig(acmeTransportConfig);\n \t\t\tAcmeFatUtils.configureAcmeCA(server, caContainer, configuration);\n \t\t\tAcmeFatUtils.renewCertificate(server);\n-\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\",\n-\t\t\t\t\tserver.waitForStringInLog(\"CWPKI2016E.*SocketTimeoutException\"));\n+\t\t\tString returnString = server.waitForStringInLog(\"CWPKI2016E\");\n+\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n+\t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n+\t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n+\t\t\t\t\t/*\n+\t\t\t\t\t * On some OpenJDKs, the cause by error message isn't as consistent. For\n+\t\t\t\t\t * example, Caused by:\n+\t\t\t\t\t * sun.security.provider.certpath.SunCertPathBuilderException: unable to find\n+\t\t\t\t\t * valid certification path to requested target\n+\t\t\t\t\t */\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\",", "originalCommit": "276f419bb12821082f76a0e0e0d10bf068ebde7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1MzA3Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468753076", "bodyText": "Updated", "author": "kristip17", "createdAt": "2020-08-11T17:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODAyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9b1ea30c48a1af2939ad6e8c54482d80e717fe04", "chunk": "diff --git a/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java b/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java\nindex f25b43b727..925fc5538e 100644\n--- a/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java\n+++ b/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java\n\n@@ -696,7 +696,7 @@ public class AcmeConfigVariationsTest {\n \t\t\t\t\t * sun.security.provider.certpath.SunCertPathBuilderException: unable to find\n \t\t\t\t\t * valid certification path to requested target\n \t\t\t\t\t */\n-\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\",\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containing SocketTimeoutException in logs.\",\n \t\t\t\t\t\t\treturnString.contains(\"SocketTimeoutException\"));\n \t\t\t\t}\n \t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODE4MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468748180", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));\n          \n          \n            \n            \t\t\t\t\tassertTrue(\"Expected CWPKI2016E containing SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));", "author": "jvanhill", "createdAt": "2020-08-11T17:32:00Z", "path": "dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java", "diffHunk": "@@ -700,8 +713,14 @@ public void httpReadConnectTimeouts() throws Exception {\n \t\t\tacmeTransportConfig.setHttpReadTimeout(\"1ms\");\n \t\t\tAcmeFatUtils.configureAcmeCA(server, caContainer, configuration);\n \t\t\tAcmeFatUtils.renewCertificate(server);\n-\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\",\n-\t\t\t\t\tserver.waitForStringInLog(\"CWPKI2016E.*SocketTimeoutException\"));\n+\t\t\t\n+\t\t\treturnString = server.waitForStringInLog(\"CWPKI2016E\");\n+\t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n+\t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n+\t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));", "originalCommit": "276f419bb12821082f76a0e0e0d10bf068ebde7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1MzE1Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13401#discussion_r468753153", "bodyText": "Updated", "author": "kristip17", "createdAt": "2020-08-11T17:40:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc0ODE4MA=="}], "type": "inlineReview", "revised_code": {"commit": "9b1ea30c48a1af2939ad6e8c54482d80e717fe04", "chunk": "diff --git a/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java b/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java\nindex f25b43b727..925fc5538e 100644\n--- a/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java\n+++ b/dev/com.ibm.ws.security.acme_fat/fat/src/com/ibm/ws/security/acme/fat/AcmeConfigVariationsTest.java\n\n@@ -718,7 +718,14 @@ public class AcmeConfigVariationsTest {\n \t\t\tassertNotNull(\"Expected CWPKI2016E in logs.\", returnString);\n \t\t\tif (!returnString.contains(\"SocketTimeoutException\")) {\n \t\t\t\tif (!AcmeFatUtils.isOpenJDK(testName.getMethodName())) {\n-\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containg SocketTimeoutException in logs.\", returnString.contains(\"SocketTimeoutException\"));\n+\t\t\t\t\t/*\n+\t\t\t\t\t * On some OpenJDKs, the cause by error message isn't as consistent. For\n+\t\t\t\t\t * example, Caused by:\n+\t\t\t\t\t * sun.security.provider.certpath.SunCertPathBuilderException: unable to find\n+\t\t\t\t\t * valid certification path to requested target\n+\t\t\t\t\t */\n+\t\t\t\t\tassertTrue(\"Expected CWPKI2016E containing SocketTimeoutException in logs.\",\n+\t\t\t\t\t\t\treturnString.contains(\"SocketTimeoutException\"));\n \t\t\t\t}\n \t\t\t}\n \n"}}, {"oid": "9b1ea30c48a1af2939ad6e8c54482d80e717fe04", "url": "https://github.com/OpenLiberty/open-liberty/commit/9b1ea30c48a1af2939ad6e8c54482d80e717fe04", "message": "Issue 13400: Adjust message for other JDKs Acme config test", "committedDate": "2020-08-11T17:40:11Z", "type": "forcePushed"}, {"oid": "0deb6e63c5a737a3fa196d935a42d9ca37d588b3", "url": "https://github.com/OpenLiberty/open-liberty/commit/0deb6e63c5a737a3fa196d935a42d9ca37d588b3", "message": "Issue 13400: Adjust message for other JDKs Acme config test", "committedDate": "2020-08-12T02:08:10Z", "type": "forcePushed"}, {"oid": "2da7eccf1cbaf660fbd0855b1e419038957a2846", "url": "https://github.com/OpenLiberty/open-liberty/commit/2da7eccf1cbaf660fbd0855b1e419038957a2846", "message": "Issue 13400: Adjust message for other JDKs Acme config test", "committedDate": "2020-08-12T21:33:56Z", "type": "commit"}, {"oid": "2da7eccf1cbaf660fbd0855b1e419038957a2846", "url": "https://github.com/OpenLiberty/open-liberty/commit/2da7eccf1cbaf660fbd0855b1e419038957a2846", "message": "Issue 13400: Adjust message for other JDKs Acme config test", "committedDate": "2020-08-12T21:33:56Z", "type": "forcePushed"}]}