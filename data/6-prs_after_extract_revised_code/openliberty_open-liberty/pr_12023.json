{"pr_number": 12023, "pr_title": "Eliminate extraneous parens in regex", "pr_createdAt": "2020-05-01T19:30:54Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12023", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwMzk0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12023#discussion_r418703943", "bodyText": "The null check is redundant.  We already checked it above", "author": "jhanders34", "createdAt": "2020-05-01T19:39:22Z", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "diffHunk": "@@ -85,9 +85,18 @@ public URITemplate(String theTemplate, List<Parameter> params) {\n                 variables.add(var.getName());\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n-                    patternBuilder.append('(');\n-                    patternBuilder.append(var.getPattern());\n-                    patternBuilder.append(')');\n+                    String pattern = var.getPattern();\n+                    // #11893 Add parenthesis to the pattern to identify a regex in the pattern, \n+                    // however do not add them if they already exist since that will cause the Matcher\n+                    // to create extraneous values.  Parens identify a group so multiple parens would\n+                    // indicate multiple groups.\n+                    if ((pattern != null) && ((pattern.startsWith(\"(\")) && (pattern.endsWith(\")\")))) {", "originalCommit": "defaaa013bca82ce706f1f294ebeeb76668bf83b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwNDgyNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12023#discussion_r418704824", "bodyText": "Also definitely overuse of parentheses in the if condition.", "author": "jhanders34", "createdAt": "2020-05-01T19:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwMzk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "47b2066cded6ac16b6e67c99b8630ba18d184246", "chunk": "diff --git a/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java b/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java\nindex 9f978ec083..ac63559ff6 100644\n--- a/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java\n+++ b/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java\n\n@@ -86,17 +86,19 @@ public final class URITemplate {\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n                     String pattern = var.getPattern();\n+                    // Liberty change begin\n                     // #11893 Add parenthesis to the pattern to identify a regex in the pattern, \n                     // however do not add them if they already exist since that will cause the Matcher\n                     // to create extraneous values.  Parens identify a group so multiple parens would\n                     // indicate multiple groups.\n-                    if ((pattern != null) && ((pattern.startsWith(\"(\")) && (pattern.endsWith(\")\")))) {\n+                    if (pattern.startsWith(\"(\") && pattern.endsWith(\")\")) {\n                         patternBuilder.append(pattern);\n                     } else {\n                         patternBuilder.append('(');\n                         patternBuilder.append(pattern);\n                         patternBuilder.append(')');\n                     }\n+                    //Liberty change end\n                 } else {\n                     patternBuilder.append(DEFAULT_PATH_VARIABLE_REGEX);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwNDIyOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12023#discussion_r418704229", "bodyText": "// Liberty change begin and // Liberty change end comments are missing", "author": "jhanders34", "createdAt": "2020-05-01T19:40:06Z", "path": "dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java", "diffHunk": "@@ -85,9 +85,18 @@ public URITemplate(String theTemplate, List<Parameter> params) {\n                 variables.add(var.getName());\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n-                    patternBuilder.append('(');\n-                    patternBuilder.append(var.getPattern());\n-                    patternBuilder.append(')');\n+                    String pattern = var.getPattern();", "originalCommit": "defaaa013bca82ce706f1f294ebeeb76668bf83b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47b2066cded6ac16b6e67c99b8630ba18d184246", "chunk": "diff --git a/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java b/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java\nindex 9f978ec083..ac63559ff6 100644\n--- a/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java\n+++ b/dev/com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2/src/org/apache/cxf/jaxrs/model/URITemplate.java\n\n@@ -86,17 +86,19 @@ public final class URITemplate {\n                 if (var.getPattern() != null) {\n                     customVariables.add(var.getName());\n                     String pattern = var.getPattern();\n+                    // Liberty change begin\n                     // #11893 Add parenthesis to the pattern to identify a regex in the pattern, \n                     // however do not add them if they already exist since that will cause the Matcher\n                     // to create extraneous values.  Parens identify a group so multiple parens would\n                     // indicate multiple groups.\n-                    if ((pattern != null) && ((pattern.startsWith(\"(\")) && (pattern.endsWith(\")\")))) {\n+                    if (pattern.startsWith(\"(\") && pattern.endsWith(\")\")) {\n                         patternBuilder.append(pattern);\n                     } else {\n                         patternBuilder.append('(');\n                         patternBuilder.append(pattern);\n                         patternBuilder.append(')');\n                     }\n+                    //Liberty change end\n                 } else {\n                     patternBuilder.append(DEFAULT_PATH_VARIABLE_REGEX);\n                 }\n"}}, {"oid": "47b2066cded6ac16b6e67c99b8630ba18d184246", "url": "https://github.com/OpenLiberty/open-liberty/commit/47b2066cded6ac16b6e67c99b8630ba18d184246", "message": "Eliminate extraneous parens in regex", "committedDate": "2020-05-01T19:49:20Z", "type": "forcePushed"}, {"oid": "a4e508a15ced09f80a0b93e606934ff925dc3b35", "url": "https://github.com/OpenLiberty/open-liberty/commit/a4e508a15ced09f80a0b93e606934ff925dc3b35", "message": "Eliminate extraneous parens in regex", "committedDate": "2020-05-01T19:57:06Z", "type": "forcePushed"}, {"oid": "dfb08f26f35007e2a8f145b2b3b9f72a613842b0", "url": "https://github.com/OpenLiberty/open-liberty/commit/dfb08f26f35007e2a8f145b2b3b9f72a613842b0", "message": "Eliminate extraneous parens in regex", "committedDate": "2020-05-07T17:45:03Z", "type": "forcePushed"}, {"oid": "b6ded0f089fe997f95accd53f699020efe3fe167", "url": "https://github.com/OpenLiberty/open-liberty/commit/b6ded0f089fe997f95accd53f699020efe3fe167", "message": "Eliminate extraneous parens in regex", "committedDate": "2020-05-07T18:00:29Z", "type": "commit"}, {"oid": "b6ded0f089fe997f95accd53f699020efe3fe167", "url": "https://github.com/OpenLiberty/open-liberty/commit/b6ded0f089fe997f95accd53f699020efe3fe167", "message": "Eliminate extraneous parens in regex", "committedDate": "2020-05-07T18:00:29Z", "type": "forcePushed"}]}