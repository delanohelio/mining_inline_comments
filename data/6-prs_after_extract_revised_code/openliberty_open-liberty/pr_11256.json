{"pr_number": 11256, "pr_title": "Adding JDBC heritage API feature to enable ConnectionWaitTimeoutException", "pr_createdAt": "2020-03-10T22:23:48Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11256", "timeline": [{"oid": "24ae2deb787718d32855987da3852de0abd690de", "url": "https://github.com/OpenLiberty/open-liberty/commit/24ae2deb787718d32855987da3852de0abd690de", "message": "10542 - Adding heritageAPIs-1.0 feature OL changes for CWTE", "committedDate": "2020-05-29T01:10:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r432495405", "bodyText": "Lets remove this section of doc, using Throwable#initCause() is not really recommended in general", "author": "aguibert", "createdAt": "2020-05-29T13:50:07Z", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java", "diffHunk": "@@ -21,11 +21,127 @@\n     private static final long serialVersionUID = 5958695928250441720L;\n \n     /**\n-     * Make a new ConnectionWaitTimeoutException.\n-     * \n-     * @param message the exception message.\n+     * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n+     * The <code>reason</code>, <code>SQLState</code> are initialized\n+     * to <code>null</code> and the vendor code is initialized to 0.\n+     *\n+     * The <code>cause</code> is not initialized, and may subsequently be\n+     * initialized by a call to the\n+     * {@link Throwable#initCause(java.lang.Throwable)} method.", "originalCommit": "24ae2deb787718d32855987da3852de0abd690de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTU1NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r432495554", "bodyText": "Same comment applies to javadoc of other ctors", "author": "aguibert", "createdAt": "2020-05-29T13:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4ODUxMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433388510", "bodyText": "Done.  Since I pulled the constructor methods and javadoc straight from the SQLTransientConnectionException parent class, should I remove the Throwable#initCause() text from the javadoc there as well?", "author": "gjwatts", "createdAt": "2020-06-01T17:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5NjU4MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433396580", "bodyText": "SQLTransientConnectionException comes from the JDK, so we can't modify that class or its doc", "author": "aguibert", "createdAt": "2020-06-01T17:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NTQwOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r433465409", "bodyText": "D'OH!  Good catch... :-)", "author": "gjwatts", "createdAt": "2020-06-01T20:16:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5NTQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "34e4a5bedbf50f692b02f48c9b373f0a337bca08", "chunk": "diff --git a/dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java b/dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java\nindex e071950bb7..a5f4d6caff 100644\n--- a/dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java\n+++ b/dev/com.ibm.ws.jdbc/src/com/ibm/websphere/ce/cm/ConnectionWaitTimeoutException.java\n\n@@ -24,10 +24,6 @@ public class ConnectionWaitTimeoutException extends SQLTransientConnectionExcept\n      * Constructs a <code>ConnectionWaitTimeoutException</code> object.\n      * The <code>reason</code>, <code>SQLState</code> are initialized\n      * to <code>null</code> and the vendor code is initialized to 0.\n-     *\n-     * The <code>cause</code> is not initialized, and may subsequently be\n-     * initialized by a call to the\n-     * {@link Throwable#initCause(java.lang.Throwable)} method.\n      * <p>\n      */\n     public ConnectionWaitTimeoutException() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwOTE2Nw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11256#discussion_r432509167", "bodyText": "Lets remove these references to heritageAPIs-1.0 and the commercial offering -- this repo shouldn't make any explicit references to CL or its features", "author": "aguibert", "createdAt": "2020-05-29T14:12:22Z", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java", "diffHunk": "@@ -821,11 +821,15 @@ public static SQLException toSQLException(ResourceException resX)\n             // The J2C connection manager raises a special exception subclass.\n             else if (linkedX instanceof ResourceAllocationException\n                      && linkedX.getClass().getName().equals(\"com.ibm.websphere.ce.j2c.ConnectionWaitTimeoutException\")) {\n-                // Use a special SQLException subclass for connection wait timeout. \n-                sqlX = new ConnectionWaitTimeoutException(linkedX.getMessage()); \n-                sqlX.initCause(resX); \n-\n-                sqlX = new SQLTransientConnectionException(linkedX.getMessage(), \"08001\", 0, sqlX); \n+                // With the heritageAPIs-1.0 feature in our commercial offering, a change was made from throwing an SQLTransientConnectionException \n+                // to a ConnectionWaitTimeoutException to allow for traditional WebSphere applications to work since they expect a \n+                // ConnectionWaitTimeoutException instead.  This will continue to work with existing liberty applications as well since ", "originalCommit": "24ae2deb787718d32855987da3852de0abd690de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "34e4a5bedbf50f692b02f48c9b373f0a337bca08", "chunk": "diff --git a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java\nindex 860bdbcff8..6e127f0e3e 100644\n--- a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java\n+++ b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/AdapterUtil.java\n\n@@ -821,8 +821,8 @@ public class AdapterUtil {\n             // The J2C connection manager raises a special exception subclass.\n             else if (linkedX instanceof ResourceAllocationException\n                      && linkedX.getClass().getName().equals(\"com.ibm.websphere.ce.j2c.ConnectionWaitTimeoutException\")) {\n-                // With the heritageAPIs-1.0 feature in our commercial offering, a change was made from throwing an SQLTransientConnectionException \n-                // to a ConnectionWaitTimeoutException to allow for traditional WebSphere applications to work since they expect a \n+                // The following exception was changed from throwing an SQLTransientConnectionException \n+                // to a ConnectionWaitTimeoutException instead to allow for traditional WebSphere applications to work since they expect a \n                 // ConnectionWaitTimeoutException instead.  This will continue to work with existing liberty applications as well since \n                 // SQLTransientConnectionException is the parent class of ConnectionWaitTimeoutException.  \n                 // The ConnectionWaitTimeoutException is linked to another ConnectionWaitTimeoutException for backwards compatibility for liberty applications\n"}}, {"oid": "34e4a5bedbf50f692b02f48c9b373f0a337bca08", "url": "https://github.com/OpenLiberty/open-liberty/commit/34e4a5bedbf50f692b02f48c9b373f0a337bca08", "message": "Merge branch 'integration' of github.com:OpenLiberty/open-liberty into 10542-externalize-legacy-ConnectionWaitTimeoutException", "committedDate": "2020-06-01T20:23:58Z", "type": "forcePushed"}, {"oid": "cc4508375e544421a46cfb6bafcacd977efc28be", "url": "https://github.com/OpenLiberty/open-liberty/commit/cc4508375e544421a46cfb6bafcacd977efc28be", "message": "10542 - Adding heritageAPIs-1.0 feature OL changes for CWTE", "committedDate": "2020-06-13T06:34:43Z", "type": "forcePushed"}, {"oid": "ed1ee68654007c2e8eeec83fe7766e998b3c7df3", "url": "https://github.com/OpenLiberty/open-liberty/commit/ed1ee68654007c2e8eeec83fe7766e998b3c7df3", "message": "10542 - Adding heritageAPIs-1.0 feature OL changes for CWTE", "committedDate": "2020-06-13T06:38:01Z", "type": "forcePushed"}, {"oid": "8be86d60785e96937c51bee63f8656c61589253a", "url": "https://github.com/OpenLiberty/open-liberty/commit/8be86d60785e96937c51bee63f8656c61589253a", "message": "10542 - Adding heritageAPIs-1.0 feature OL changes for CWTE", "committedDate": "2020-06-13T08:09:22Z", "type": "forcePushed"}, {"oid": "b64dc54e6f3b4adab893632ec0833d468609fc8d", "url": "https://github.com/OpenLiberty/open-liberty/commit/b64dc54e6f3b4adab893632ec0833d468609fc8d", "message": "10542 - Adding heritageAPIs-1.0 feature OL changes for CWTE", "committedDate": "2020-06-26T20:37:46Z", "type": "commit"}, {"oid": "b64dc54e6f3b4adab893632ec0833d468609fc8d", "url": "https://github.com/OpenLiberty/open-liberty/commit/b64dc54e6f3b4adab893632ec0833d468609fc8d", "message": "10542 - Adding heritageAPIs-1.0 feature OL changes for CWTE", "committedDate": "2020-06-26T20:37:46Z", "type": "forcePushed"}]}