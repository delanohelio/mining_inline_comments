{"pr_number": 11203, "pr_title": "Add missing autofeatures to resolveAsSet output", "pr_createdAt": "2020-03-05T21:47:24Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/11203", "timeline": [{"oid": "1f2c822421394f87daa4102375d3315bdda6db6f", "url": "https://github.com/OpenLiberty/open-liberty/commit/1f2c822421394f87daa4102375d3315bdda6db6f", "message": "Add call to old resolve api", "committedDate": "2020-03-05T21:46:53Z", "type": "commit"}, {"oid": "dc8bff631dd7ea75077b63fa0b34fd4391cda6c8", "url": "https://github.com/OpenLiberty/open-liberty/commit/dc8bff631dd7ea75077b63fa0b34fd4391cda6c8", "message": "filter auto feature from old resolver cal", "committedDate": "2020-03-06T20:47:28Z", "type": "commit"}, {"oid": "f07e7eb8b62df20ce9c207663163f69e97a98d34", "url": "https://github.com/OpenLiberty/open-liberty/commit/f07e7eb8b62df20ce9c207663163f69e97a98d34", "message": "Clean up sysout", "committedDate": "2020-03-09T17:49:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NzMzNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11203#discussion_r389867335", "bodyText": "You should skip the 2nd call to resolve the auto features if returnedFeatureList is empty.", "author": "alvinso", "createdAt": "2020-03-09T18:04:21Z", "path": "dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/ResolveDirector.java", "diffHunk": "@@ -641,8 +641,24 @@ void resolveAutoFeatures(Collection<ESAAsset> autoFeatures, ArrayList<InstallAss\n                 Set<String> allServerFeatures = new HashSet<>(InstallUtils.getAllServerFeatures());\n                 allServerFeatures.addAll(assetsToInstall);\n \n-                log(Level.FINE, \"Using resolveAsSet to resolve features\");\n+                // FIRST CALL to resolveAsSet --> this throws an error for singleton features\n+                log(Level.FINE, \"Calling resolveAsSet api\");\n                 installResources = resolver.resolveAsSet(allServerFeatures); // use new api\n+\n+\n+                Set<String> returnedFeatureList = new HashSet<>();\n+                for(List<RepositoryResource>  resList  : installResources){\n+                    for(RepositoryResource res : resList) {\n+                        if (res.getType().equals(ResourceType.FEATURE)) {\n+                            EsaResource esa = (EsaResource) res;\n+                            returnedFeatureList.add(esa.getProvideFeature());\n+                        }\n+                    }\n+                }\n+                InstallUtils.setResolveAsSetFeatures(returnedFeatureList);", "originalCommit": "f07e7eb8b62df20ce9c207663163f69e97a98d34", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMDgyOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11203#discussion_r389900828", "bodyText": "fixed in commit 5458842", "author": "TayyabDev", "createdAt": "2020-03-09T19:06:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NzMzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "54588424ec43750b0f0e27d631b3155647c611a4", "chunk": "diff --git a/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/ResolveDirector.java b/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/ResolveDirector.java\nindex d4050e539e..a8caaf73b7 100755\n--- a/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/ResolveDirector.java\n+++ b/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/ResolveDirector.java\n\n@@ -641,24 +642,44 @@ class ResolveDirector extends AbstractDirector {\n                 Set<String> allServerFeatures = new HashSet<>(InstallUtils.getAllServerFeatures());\n                 allServerFeatures.addAll(assetsToInstall);\n \n-                // FIRST CALL to resolveAsSet --> this throws an error for singleton features\n+                // call resolveAsSet --> detects singleton exceptions and tolerated features\n                 log(Level.FINE, \"Calling resolveAsSet api\");\n                 installResources = resolver.resolveAsSet(allServerFeatures); // use new api\n \n+                if(!installResources.isEmpty()) {\n+                    Set<String> resolveAsSetFeatures = new HashSet<>();\n+                    for (List<RepositoryResource> resList : installResources) {\n+                        for (RepositoryResource res : resList) {\n+                            if (res.getType().equals(ResourceType.FEATURE)) {\n+                                EsaResource esa = (EsaResource) res;\n+                                resolveAsSetFeatures.add(esa.getProvideFeature());\n+                            }\n+                        }\n+                    }\n \n-                Set<String> returnedFeatureList = new HashSet<>();\n-                for(List<RepositoryResource>  resList  : installResources){\n-                    for(RepositoryResource res : resList) {\n-                        if (res.getType().equals(ResourceType.FEATURE)) {\n-                            EsaResource esa = (EsaResource) res;\n-                            returnedFeatureList.add(esa.getProvideFeature());\n+                    // call old resolve api\n+                    resolver = new RepositoryResolver(productDefinitions, installedFeatures, installedIFixes, loginInfo);\n+                    installResources = resolver.resolve(resolveAsSetFeatures);\n+\n+                    // filter install resources to include resolveAsSet feature + missing auto features from old resolve api\n+                    List<List<RepositoryResource>> resources = new ArrayList<>();\n+                    for (List<RepositoryResource> resList : installResources) {\n+                        List<RepositoryResource> curr = new ArrayList<>();\n+                        for (RepositoryResource res : resList) {\n+                            boolean useThis = true;\n+                            if (res.getType().equals(ResourceType.FEATURE)) {\n+                                EsaResource esa = (EsaResource) res;\n+                                useThis = esa.getInstallPolicy().toString().equals(\"WHEN_SATISFIED\") || resolveAsSetFeatures.contains(esa.getProvideFeature());\n+                            }\n+                            if (useThis) {\n+                                curr.add(res);\n+                            }\n                         }\n+                        resources.add(curr);\n                     }\n+                    // update install resources with the filtered ones\n+                    installResources = resources;\n                 }\n-                InstallUtils.setResolveAsSetFeatures(returnedFeatureList);\n-\n-                resolver = new RepositoryResolver(productDefinitions, installedFeatures, installedIFixes, loginInfo);\n-                installResources = resolver.resolve(returnedFeatureList);\n             } else {\n                 log(Level.FINE, \"Using old resolve API\");\n                 installResources = resolver.resolve(assetsToInstall);\n"}}, {"oid": "54588424ec43750b0f0e27d631b3155647c611a4", "url": "https://github.com/OpenLiberty/open-liberty/commit/54588424ec43750b0f0e27d631b3155647c611a4", "message": "Refactor and move around code", "committedDate": "2020-03-09T19:01:44Z", "type": "commit"}, {"oid": "634d7dc2eae12dd221839aae4e7f19f6ef308978", "url": "https://github.com/OpenLiberty/open-liberty/commit/634d7dc2eae12dd221839aae4e7f19f6ef308978", "message": "Include all resources in resolveAsSetFeatures list", "committedDate": "2020-03-10T15:44:38Z", "type": "commit"}, {"oid": "64562a0295601152d206cad57156b3a82e95c2e0", "url": "https://github.com/OpenLiberty/open-liberty/commit/64562a0295601152d206cad57156b3a82e95c2e0", "message": "Optimize code", "committedDate": "2020-03-10T18:22:01Z", "type": "commit"}, {"oid": "c89d5d48ddb39ee599ae1166880b252de10a0d69", "url": "https://github.com/OpenLiberty/open-liberty/commit/c89d5d48ddb39ee599ae1166880b252de10a0d69", "message": "Support fix for liberty maven plugin", "committedDate": "2020-03-10T20:31:26Z", "type": "commit"}, {"oid": "4ff85f679cd1e6e355beea92d953035ac2b0d0b1", "url": "https://github.com/OpenLiberty/open-liberty/commit/4ff85f679cd1e6e355beea92d953035ac2b0d0b1", "message": "Merge branch 'integration' of github.com:OpenLiberty/open-liberty into autofeatureIssue", "committedDate": "2020-03-11T14:06:00Z", "type": "commit"}, {"oid": "414a6c6a4f35fb0591cd9d3f6fe6a5dc9cbdc529", "url": "https://github.com/OpenLiberty/open-liberty/commit/414a6c6a4f35fb0591cd9d3f6fe6a5dc9cbdc529", "message": "Only include features in resolve as set list", "committedDate": "2020-03-11T15:38:27Z", "type": "commit"}, {"oid": "e4f0302a34511e8433071449cbfc574949d38f30", "url": "https://github.com/OpenLiberty/open-liberty/commit/e4f0302a34511e8433071449cbfc574949d38f30", "message": "Use method for resolving autofeatures", "committedDate": "2020-03-11T20:08:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2MjI3NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/11203#discussion_r391262275", "bodyText": "can we call ResolveDirector.resolveAutoFeatures right after the resolveAsSet call?", "author": "alvinso", "createdAt": "2020-03-11T20:54:46Z", "path": "dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallKernelMap.java", "diffHunk": "@@ -738,7 +738,6 @@ private static boolean containsIgnoreCase(Collection<String> featureToInstall, S\n \n             resolver = new RepositoryResolver(productDefinitions, installedFeatures, Collections.<IFixInfo> emptySet(), repoList);\n             resolveResult = resolver.resolveAsSet((Collection<String>) data.get(FEATURES_TO_RESOLVE));\n-", "originalCommit": "e4f0302a34511e8433071449cbfc574949d38f30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82562b062166bdb355bc3f487a58f0fa8b305618", "chunk": "diff --git a/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallKernelMap.java b/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallKernelMap.java\nindex ea85a20036..493105c7a9 100755\n--- a/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallKernelMap.java\n+++ b/dev/com.ibm.ws.install/src/com/ibm/ws/install/internal/InstallKernelMap.java\n\n@@ -738,9 +738,9 @@ public class InstallKernelMap implements Map {\n \n             resolver = new RepositoryResolver(productDefinitions, installedFeatures, Collections.<IFixInfo> emptySet(), repoList);\n             resolveResult = resolver.resolveAsSet((Collection<String>) data.get(FEATURES_TO_RESOLVE));\n+            ResolveDirector.resolveAutoFeatures(resolveResult, new RepositoryResolver(productDefinitions, installedFeatures, Collections.<IFixInfo> emptySet(), repoList));\n+\n             if(!resolveResult.isEmpty()){\n-                Set<String> resolveAsSetFeatures = new HashSet<>();\n-                boolean foundAFeature = false;\n                 for (List<RepositoryResource> item : resolveResult) {\n                     for (RepositoryResource repoResrc : item) {\n                         String license = repoResrc.getLicenseId();\n"}}, {"oid": "82562b062166bdb355bc3f487a58f0fa8b305618", "url": "https://github.com/OpenLiberty/open-liberty/commit/82562b062166bdb355bc3f487a58f0fa8b305618", "message": "Move reRefactor code", "committedDate": "2020-03-11T21:01:01Z", "type": "commit"}]}