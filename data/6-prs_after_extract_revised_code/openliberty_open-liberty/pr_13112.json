{"pr_number": 13112, "pr_title": "gRPC JMX metrics", "pr_createdAt": "2020-07-20T19:47:05Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13112", "timeline": [{"oid": "040f257408210529fa37a2c040d7a30c03fea8de", "url": "https://github.com/OpenLiberty/open-liberty/commit/040f257408210529fa37a2c040d7a30c03fea8de", "message": "add gRPC server JMX metrics", "committedDate": "2020-07-20T19:41:34Z", "type": "commit"}, {"oid": "2534be4df00a0fbbd2c088c07e5324db5804c9f3", "url": "https://github.com/OpenLiberty/open-liberty/commit/2534be4df00a0fbbd2c088c07e5324db5804c9f3", "message": "add Eclipse files", "committedDate": "2020-07-20T19:41:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0NTc3Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r462345776", "bodyText": "copyright year should be 2020", "author": "wtlucy", "createdAt": "2020-07-29T14:32:02Z", "path": "dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/package-info.java", "diffHunk": "@@ -0,0 +1,12 @@\n+/*******************************************************************************\n+ * Copyright (c) 2018 IBM Corporation and others.", "originalCommit": "19b98cc3fda85ed5b33951aa2e62b107de11791c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b564f894d4c8518066e71a51c6590cffdeea6a56", "chunk": "diff --git a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/package-info.java b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/package-info.java\nindex 71b2b02c25..5991903391 100644\n--- a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/package-info.java\n+++ b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/package-info.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2018 IBM Corporation and others.\n+ * Copyright (c) 2020 IBM Corporation and others.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM0NjAxNg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r462346016", "bodyText": "only 2020 is needed", "author": "wtlucy", "createdAt": "2020-07-29T14:32:21Z", "path": "dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/package-info.java", "diffHunk": "@@ -0,0 +1,15 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019, 2020 IBM Corporation and others.", "originalCommit": "19b98cc3fda85ed5b33951aa2e62b107de11791c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b564f894d4c8518066e71a51c6590cffdeea6a56", "chunk": "diff --git a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/package-info.java b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/monitor/package-info.java\nsimilarity index 86%\nrename from dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/package-info.java\nrename to dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/monitor/package-info.java\nindex 6026c16cef..6582559ce4 100644\n--- a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/package-info.java\n+++ b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/monitor/package-info.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2019, 2020 IBM Corporation and others.\n+ * Copyright (c) 2020 IBM Corporation and others.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License v1.0\n  * which accompanies this distribution, and is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzQxMw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r462353413", "bodyText": "should these descriptions be NLS translated?", "author": "wtlucy", "createdAt": "2020-07-29T14:41:36Z", "path": "dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcClientStats.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.grpc.internal.monitor;\n+\n+import com.ibm.websphere.monitor.meters.Counter;\n+import com.ibm.websphere.monitor.meters.Meter;\n+\n+import io.openliberty.grpc.GrpcClientStatsMXBean;\n+\n+/**\n+ * Holds metrics used for client-side monitoring of gRPC services. </br>\n+ * Statistic reported:\n+ * <ul>\n+ * <li>Total number of RPCs started on the client.\n+ * <li>Total number of RPCs completed on the client, regardless of success or\n+ * failure.\n+ * <li>TODO Histogram of RPC response latency for completed RPCs, in seconds.\n+ * <li>Total number of stream messages received from the server.\n+ * <li>Total number of stream messages sent by the client.\n+ * </ul>\n+ */\n+public class GrpcClientStats extends Meter implements GrpcClientStatsMXBean {\n+\tprivate final Counter rpcStarted;\n+\tprivate final Counter rpcCompleted;\n+\tprivate final Counter streamMessagesReceived;\n+\tprivate final Counter streamMessagesSent;\n+\n+\tprivate final GrpcMethod method;\n+\n+\tpublic GrpcClientStats(GrpcMethod method) {\n+\t\tthis.method = method;\n+\n+\t\trpcStarted = new Counter();\n+\t\trpcStarted.setDescription(\"This shows total number of RPCs started on the client\");", "originalCommit": "19b98cc3fda85ed5b33951aa2e62b107de11791c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwNTIyOA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r465705228", "bodyText": "I don't think so. I don't see other strings in NLS files.", "author": "annaguri", "createdAt": "2020-08-05T12:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "b564f894d4c8518066e71a51c6590cffdeea6a56", "chunk": "diff --git a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcClientStats.java b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcClientStats.java\nindex 0cc18c774c..38166032f1 100644\n--- a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcClientStats.java\n+++ b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcClientStats.java\n\n@@ -13,7 +13,7 @@ package io.openliberty.grpc.internal.monitor;\n import com.ibm.websphere.monitor.meters.Counter;\n import com.ibm.websphere.monitor.meters.Meter;\n \n-import io.openliberty.grpc.GrpcClientStatsMXBean;\n+import io.openliberty.grpc.monitor.GrpcClientStatsMXBean;\n \n /**\n  * Holds metrics used for client-side monitoring of gRPC services. </br>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzUyNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r462353525", "bodyText": "should these descriptions be NLS translated?", "author": "wtlucy", "createdAt": "2020-07-29T14:41:45Z", "path": "dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcServerStats.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package io.openliberty.grpc.internal.monitor;\n+\n+import com.ibm.websphere.monitor.meters.Counter;\n+import com.ibm.websphere.monitor.meters.Meter;\n+\n+import io.openliberty.grpc.GrpcServerStatsMXBean;\n+\n+/**\n+ * This is used to report gRPC Server related statistics. </br>\n+ * Statistic reported:\n+ * <ul>\n+ * <li>Total number of RPCs started on the server.\n+ * <li>Total number of RPCs completed on the server, regardless of success or\n+ * failure.\n+ * <li>TODO Histogram of response latency of RPCs handled by the server, in\n+ * seconds.\n+ * <li>Total number of stream messages received from the client.\n+ * <li>Total number of stream messages sent by the server.\n+ * </ul>\n+ */\n+public class GrpcServerStats extends Meter implements GrpcServerStatsMXBean {\n+\n+\tprivate String appName;\n+\tprivate String serviceName;\n+\n+\tprivate Counter receivedMsgCount;\n+\tprivate Counter sentMsgCount;\n+\tprivate Counter serverStarted;\n+\tprivate Counter serverHandled;\n+\n+\tpublic GrpcServerStats(String aName, String sName) {\n+\t\tsetAppName(aName);\n+\t\tsetServiceName(sName);\n+\n+\t\tserverStarted = new Counter();\n+\t\tserverStarted.setDescription(\"This shows total number of RPCs started on the server\");", "originalCommit": "19b98cc3fda85ed5b33951aa2e62b107de11791c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyOTM5NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r466029395", "bodyText": "I don't think so. I don't see other strings in NLS files.", "author": "annaguri", "createdAt": "2020-08-05T22:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1MzUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b564f894d4c8518066e71a51c6590cffdeea6a56", "chunk": "diff --git a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcServerStats.java b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcServerStats.java\nindex 776603e5d8..80acfec1cf 100644\n--- a/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcServerStats.java\n+++ b/dev/io.openliberty.grpc.1.0.internal.monitor/src/io/openliberty/grpc/internal/monitor/GrpcServerStats.java\n\n@@ -13,7 +13,7 @@ package io.openliberty.grpc.internal.monitor;\n import com.ibm.websphere.monitor.meters.Counter;\n import com.ibm.websphere.monitor.meters.Meter;\n \n-import io.openliberty.grpc.GrpcServerStatsMXBean;\n+import io.openliberty.grpc.monitor.GrpcServerStatsMXBean;\n \n /**\n  * This is used to report gRPC Server related statistics. </br>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyODgwOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13112#discussion_r465928809", "bodyText": "can you give this test a more specific name?  having duplicate test names could cause confusion in the final junit report", "author": "wtlucy", "createdAt": "2020-08-05T18:42:11Z", "path": "dev/com.ibm.ws.grpc_fat/fat/src/com/ibm/ws/fat/grpc/GrpcMetricsTest.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.fat.grpc;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.BufferedReader;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TestName;\n+import org.junit.runner.RunWith;\n+\n+import com.gargoylesoftware.htmlunit.WebClient;\n+import com.gargoylesoftware.htmlunit.html.HtmlForm;\n+import com.gargoylesoftware.htmlunit.html.HtmlPage;\n+import com.gargoylesoftware.htmlunit.html.HtmlSubmitInput;\n+import com.gargoylesoftware.htmlunit.html.HtmlTextInput;\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+import com.ibm.websphere.simplicity.log.Log;\n+\n+import componenttest.annotation.Server;\n+import componenttest.custom.junit.runner.FATRunner;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.utils.FATServletClient;\n+\n+@RunWith(FATRunner.class)\n+public class GrpcMetricsTest extends FATServletClient {\n+\n+    protected static final Class<?> c = GrpcMetricsTest.class;\n+\n+    @Rule\n+    public TestName name = new TestName();\n+\n+    @Server(\"HelloWorldServer\")\n+    public static LibertyServer grpcMetricsServer; //GrpcMetricsServer\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        // add all classes from com.ibm.ws.grpc.fat.helloworld.service and io.grpc.examples.helloworld\n+        // to a new app HelloWorldService.war\n+        ShrinkHelper.defaultDropinApp(grpcMetricsServer, \"HelloWorldService.war\",\n+                                      \"com.ibm.ws.grpc.fat.helloworld.service\",\n+                                      \"io.grpc.examples.helloworld\");\n+\n+        // add all classes from com.ibm.ws.grpc.fat.helloworld.client, io.grpc.examples.helloworld,\n+        // and com.ibm.ws.fat.grpc.tls to a new app HelloWorldClient.war.\n+        ShrinkHelper.defaultDropinApp(grpcMetricsServer, \"HelloWorldClient.war\",\n+                                      \"com.ibm.ws.grpc.fat.helloworld.client\",\n+                                      \"io.grpc.examples.helloworld\",\n+                                      \"com.ibm.ws.fat.grpc.tls\");\n+\n+        grpcMetricsServer.startServer(GrpcMetricsTest.class.getSimpleName() + \".log\");\n+        assertNotNull(\"CWWKO0219I.*ssl not recieved\", grpcMetricsServer.waitForStringInLog(\"CWWKO0219I.*ssl\"));\n+    }\n+\n+    @AfterClass\n+    public static void tearDown() throws Exception {\n+        grpcMetricsServer.stopServer();\n+    }\n+\n+    /**\n+     * Tests a basic gRPC helloworld app. HelloWorldClient.war contains a servlet that can be\n+     * used to connect to a gRPC service that will deployed via HelloWorldService.war.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testHelloWorld() throws Exception {", "originalCommit": "a159a93378426cebf805920bbaf8d60c4eb72377", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b564f894d4c8518066e71a51c6590cffdeea6a56", "chunk": "diff --git a/dev/com.ibm.ws.grpc_fat/fat/src/com/ibm/ws/fat/grpc/GrpcMetricsTest.java b/dev/com.ibm.ws.grpc_fat/fat/src/com/ibm/ws/fat/grpc/GrpcMetricsTest.java\nindex b4268cd614..b2868718fc 100644\n--- a/dev/com.ibm.ws.grpc_fat/fat/src/com/ibm/ws/fat/grpc/GrpcMetricsTest.java\n+++ b/dev/com.ibm.ws.grpc_fat/fat/src/com/ibm/ws/fat/grpc/GrpcMetricsTest.java\n\n@@ -77,13 +77,12 @@ public class GrpcMetricsTest extends FATServletClient {\n     }\n \n     /**\n-     * Tests a basic gRPC helloworld app. HelloWorldClient.war contains a servlet that can be\n-     * used to connect to a gRPC service that will deployed via HelloWorldService.war.\n+     * Tests gRPC server-side and client-side metrics.\n      *\n      * @throws Exception\n      */\n     @Test\n-    public void testHelloWorld() throws Exception {\n+    public void testGrpcMetrics() throws Exception {\n         String contextRoot = \"HelloWorldClient\";\n         try (WebClient webClient = new WebClient()) {\n \n"}}, {"oid": "b564f894d4c8518066e71a51c6590cffdeea6a56", "url": "https://github.com/OpenLiberty/open-liberty/commit/b564f894d4c8518066e71a51c6590cffdeea6a56", "message": "changes now squashed into 1 commit", "committedDate": "2020-08-06T20:34:20Z", "type": "commit"}, {"oid": "3d6c0cb7d89fca4741834d2b8a3f4140319a6f1b", "url": "https://github.com/OpenLiberty/open-liberty/commit/3d6c0cb7d89fca4741834d2b8a3f4140319a6f1b", "message": "fix the feature files", "committedDate": "2020-08-06T20:36:11Z", "type": "commit"}, {"oid": "be72caba287ef901d89e3dd56215c9b235f70be7", "url": "https://github.com/OpenLiberty/open-liberty/commit/be72caba287ef901d89e3dd56215c9b235f70be7", "message": "Update eclipse settings for new components\n\n- Remove src source directory that doesn't exist for some components'\n.classpath files\n- Add missing bndtools prefs and jdt core prefs files for new\ncomponents.", "committedDate": "2020-08-06T20:50:09Z", "type": "forcePushed"}, {"oid": "3d6c0cb7d89fca4741834d2b8a3f4140319a6f1b", "url": "https://github.com/OpenLiberty/open-liberty/commit/3d6c0cb7d89fca4741834d2b8a3f4140319a6f1b", "message": "fix the feature files", "committedDate": "2020-08-06T20:36:11Z", "type": "forcePushed"}, {"oid": "0e48e46674b6d7c32884741651abad9865954fae", "url": "https://github.com/OpenLiberty/open-liberty/commit/0e48e46674b6d7c32884741651abad9865954fae", "message": "Merge branch 'integration' into 12940-gRPC_JMX_metrics", "committedDate": "2020-08-06T21:39:36Z", "type": "commit"}]}