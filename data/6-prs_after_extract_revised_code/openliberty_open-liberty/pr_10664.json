{"pr_number": 10664, "pr_title": "Issue #10563: MissedPersistentTimerAction", "pr_createdAt": "2020-01-31T05:34:38Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10664", "timeline": [{"oid": "187a50b4bfdc629578555bce8c72eca7beef63ad", "url": "https://github.com/OpenLiberty/open-liberty/commit/187a50b4bfdc629578555bce8c72eca7beef63ad", "message": "Issue #10563: MissedPersistentTimerAction\n\nAdded support for skipping missed EJB persistent timer expirations", "committedDate": "2020-01-31T16:25:29Z", "type": "forcePushed"}, {"oid": "07093ee6d658d36fa308a663bb85a50f49a9bed3", "url": "https://github.com/OpenLiberty/open-liberty/commit/07093ee6d658d36fa308a663bb85a50f49a9bed3", "message": "Issue #10563: MissedPersistentTimerAction\n\nAdded support for skipping missed EJB persistent timer expirations", "committedDate": "2020-01-31T20:30:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4Njc0MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10664#discussion_r373686741", "bodyText": "MissedTimerAction.valueOf(missedTimerActionProperty.toUpperCase())\n^ depending on if kernel lets metatype values be case insensitive.", "author": "olendvcook", "createdAt": "2020-01-31T21:10:09Z", "path": "dev/com.ibm.ws.ejbcontainer.timer.persistent/src/com/ibm/ws/ejbcontainer/timer/persistent/osgi/internal/EJBPersistentTimerRuntimeImpl.java", "diffHunk": "@@ -118,6 +131,14 @@ protected void modified(ComponentContext cc, Map<String, Object> properties) {\n \n     private void updateConfiguration(Map<String, Object> properties) {\n \n+        // Read the missedPersistentTimerAction configuration; do not set a default as\n+        // that will vary based on whether the PersistentExecutor has failover enabled\n+        String missedTimerActionProperty = (String) properties.get(MISSED_TIMER_ACTION);\n+        missedTimerAction = (missedTimerActionProperty != null) ? MissedTimerAction.valueOf(missedTimerActionProperty) : null;", "originalCommit": "07093ee6d658d36fa308a663bb85a50f49a9bed3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MjkyMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10664#discussion_r373792922", "bodyText": "Added 2 new test variations to check for mixed case value (kernel changes to match case in metatype) and bad value (kernel logs warning and provides no value).", "author": "tkburroughs", "createdAt": "2020-02-01T17:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4Njc0MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "94a9e2c2a03c7fdfd8f6c4270d46e2ac62128662", "url": "https://github.com/OpenLiberty/open-liberty/commit/94a9e2c2a03c7fdfd8f6c4270d46e2ac62128662", "message": "Issue #10563: MissedPersistentTimerAction\n\nAdded support for skipping missed EJB persistent timer expirations", "committedDate": "2020-02-01T17:52:43Z", "type": "commit"}, {"oid": "94a9e2c2a03c7fdfd8f6c4270d46e2ac62128662", "url": "https://github.com/OpenLiberty/open-liberty/commit/94a9e2c2a03c7fdfd8f6c4270d46e2ac62128662", "message": "Issue #10563: MissedPersistentTimerAction\n\nAdded support for skipping missed EJB persistent timer expirations", "committedDate": "2020-02-01T17:52:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2MTc5OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10664#discussion_r374261798", "bodyText": "Copy/paste error -- comment should read \"NONE\"", "author": "brideck", "createdAt": "2020-02-03T18:21:34Z", "path": "dev/com.ibm.ws.ejbcontainer.timer.persistent_fat/fat/src/com/ibm/ws/ejbcontainer/timer/persistent/fat/tests/PersistentTimerCoreTest.java", "diffHunk": "@@ -185,4 +220,214 @@ private static void setLateTimerThresholdConfiguration(Long lateTimerThreshold)\n         }\n     }\n \n+    //-----------------------------------------------------\n+    // --------------MissedTimerActionServlet--------------\n+    //-----------------------------------------------------\n+\n+    /**\n+     * Test Persistent Timer missed action default behavior when failover has not been enabled.\n+     * The default behavior without failover should be ALL. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will run all expirations despite a delay that causes several to be missed.\n+     * <li> Timer.getNextTimeout() will return values in the past for missed expirations.\n+     * </ol>\n+     */\n+    @Test\n+    public void testMissedTimerActionDefaultNoFailover() throws Exception {\n+        // Default when no failover is ALL\n+        testMissedTimerAction(null, false);\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action default behavior when failover has been enabled.\n+     * The default behavior with failover should be ONCE. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will skip expirations missed because of a delay.\n+     * <li> Timer.getNextTimeout() will return values in the future; skipping missed expirations.\n+     * </ol>\n+     */\n+    @Test\n+    public void testMissedTimerActionDefaultWithFailover() throws Exception {\n+        // Default when failover is enabled is ONCE\n+        testMissedTimerAction(null, true);\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ALL\" behavior when failover has not been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will run all expirations despite a delay that causes several to be missed.\n+     * <li> Timer.getNextTimeout() will return values in the past for missed expirations.\n+     * </ol>\n+     */\n+    @Test\n+    @Mode(Mode.TestMode.FULL)\n+    public void testMissedTimerActionAllNoFailover() throws Exception {\n+        testMissedTimerAction(\"ALL\", false);\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ALL\" behavior when failover has been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will run all expirations despite a delay that causes several to be missed.\n+     * <li> Timer.getNextTimeout() will return values in the past for missed expirations.\n+     * </ol>\n+     */\n+    @Test\n+    public void testMissedTimerActionAllWithFailover() throws Exception {\n+        testMissedTimerAction(\"ALL\", true);\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ONCE\" behavior when failover has not been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will skip expirations missed because of a delay.\n+     * <li> Timer.getNextTimeout() will return values in the future; skipping missed expirations.\n+     * </ol>\n+     */\n+    @Test\n+    public void testMissedTimerActionOnceNoFailover() throws Exception {\n+        testMissedTimerAction(\"ONCE\", false);\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ONCE\" behavior when failover has been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will skip expirations missed because of a delay.\n+     * <li> Timer.getNextTimeout() will return values in the future; skipping missed expirations.\n+     * </ol>\n+     */\n+    @Test\n+    @Mode(Mode.TestMode.FULL)\n+    public void testMissedTimerActionOnceWithFailover() throws Exception {\n+        testMissedTimerAction(\"ONCE\", true);\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ONCE\" behavior when failover has not been enabled. <p>", "originalCommit": "94a9e2c2a03c7fdfd8f6c4270d46e2ac62128662", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4OTkzMA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10664#discussion_r374289930", "bodyText": "Will correct with next test update that will add server restart variations.", "author": "tkburroughs", "createdAt": "2020-02-03T19:18:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2MTc5OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2MzQzNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10664#discussion_r374263434", "bodyText": "And again, \"NONE\"", "author": "brideck", "createdAt": "2020-02-03T18:24:52Z", "path": "dev/com.ibm.ws.ejbcontainer.timer.persistent_fat/test-applications/MissedTimerActionWeb.war/src/com/ibm/ws/ejbcontainer/timer/persistent/missed/web/MissedTimerActionServlet.java", "diffHunk": "@@ -0,0 +1,188 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+\n+package com.ibm.ws.ejbcontainer.timer.persistent.missed.web;\n+\n+import java.util.logging.Logger;\n+\n+import javax.ejb.EJB;\n+import javax.ejb.EJBException;\n+import javax.servlet.annotation.WebServlet;\n+\n+import com.ibm.ws.ejbcontainer.timer.persistent.missed.ejb.MissedTimerAction;\n+\n+import componenttest.app.FATServlet;\n+\n+@WebServlet(\"/MissedTimerActionServlet\")\n+@SuppressWarnings(\"serial\")\n+public class MissedTimerActionServlet extends FATServlet {\n+\n+    private static final Logger svLogger = Logger.getLogger(MissedTimerActionServlet.class.getName());\n+\n+    @EJB\n+    MissedTimerAction timerBean;\n+\n+    /**\n+     * Test Persistent Timer missed action default behavior when failover has not been enabled.\n+     * The default behavior without failover should be ALL. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will run all expirations despite a delay that causes several to be missed.\n+     * <li> Timer.getNextTimeout() will return values in the past for missed expirations.\n+     * </ol>\n+     */\n+    public void testMissedTimerActionDefaultNoFailover() throws Exception {\n+        // Default when no failover is ALL\n+        testMissedTimerAction(\"testMissedTimerActionDefaultNoFailover\", \"ALL\");\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action default behavior when failover has been enabled.\n+     * The default behavior with failover should be ONCE. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will skip expirations missed because of a delay.\n+     * <li> Timer.getNextTimeout() will return values in the future; skipping missed expirations.\n+     * </ol>\n+     */\n+    public void testMissedTimerActionDefaultWithFailover() throws Exception {\n+        // Default when failover is enabled is ONCE\n+        testMissedTimerAction(\"testMissedTimerActionDefaultWithFailover\", \"ONCE\");\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ALL\" behavior when failover has not been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will run all expirations despite a delay that causes several to be missed.\n+     * <li> Timer.getNextTimeout() will return values in the past for missed expirations.\n+     * </ol>\n+     */\n+    public void testMissedTimerActionAllNoFailover() throws Exception {\n+        testMissedTimerAction(\"testMissedTimerActionAllNoFailover\", \"ALL\");\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ALL\" behavior when failover has been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will run all expirations despite a delay that causes several to be missed.\n+     * <li> Timer.getNextTimeout() will return values in the past for missed expirations.\n+     * </ol>\n+     */\n+    public void testMissedTimerActionAllWithFailover() throws Exception {\n+        testMissedTimerAction(\"testMissedTimerActionAllWithFailover\", \"ALL\");\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ONCE\" behavior when failover has not been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will skip expirations missed because of a delay.\n+     * <li> Timer.getNextTimeout() will return values in the future; skipping missed expirations.\n+     * </ol>\n+     */\n+    public void testMissedTimerActionOnceNoFailover() throws Exception {\n+        testMissedTimerAction(\"testMissedTimerActionOnceNoFailover\", \"ONCE\");\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ONCE\" behavior when failover has been enabled. <p>\n+     *\n+     * This test will confirm the following :\n+     * <ol>\n+     * <li> Interval timer will skip expirations missed because of a delay.\n+     * <li> Timer.getNextTimeout() will return values in the future; skipping missed expirations.\n+     * </ol>\n+     */\n+    public void testMissedTimerActionOnceWithFailover() throws Exception {\n+        testMissedTimerAction(\"testMissedTimerActionOnceWithFailover\", \"ONCE\");\n+    }\n+\n+    /**\n+     * Test Persistent Timer missed action \"ONCE\" behavior when failover has not been enabled. <p>", "originalCommit": "94a9e2c2a03c7fdfd8f6c4270d46e2ac62128662", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MDAxNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10664#discussion_r374290015", "bodyText": "Will correct with next test update that will add server restart variations.", "author": "tkburroughs", "createdAt": "2020-02-03T19:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2MzQzNA=="}], "type": "inlineReview", "revised_code": null}]}