{"pr_number": 12494, "pr_title": "Add DisableJwtCookie tests to JwtSSO fat", "pr_createdAt": "2020-06-04T14:37:09Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12494", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2ODU4MQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12494#discussion_r435368581", "bodyText": "It might strengthen the checks here to also add\nexpectations.addExpectations(CommonExpectations.cookieDoesNotExist(currentAction, webClient, JwtFatConstants.JWT_COOKIE_NAME));\nto ensure the default JWT cookie also doesn't show up.", "author": "ayoho", "createdAt": "2020-06-04T15:55:17Z", "path": "dev/com.ibm.ws.security.jwtsso_fat/fat/src/com/ibm/ws/security/jwtsso/fat/ConfigAttributeTests.java", "diffHunk": "@@ -107,6 +107,198 @@ public void test_cookieName_includeLtpa() throws Exception {\n         validationUtils.validateResult(response, currentAction, expectations);\n     }\n \n+    \n+    /**\n+     * Tests Config: \n+     *  - <jwtSso disableJwtCookie=\"true\" includeLtpaCookie=\"true\" useLtpaIfJwtAbsent=\"true\" setCookieSecureFlag=\"false\"/>\n+     * Expects:\n+     *  - JWT cookie is not found in the response, but the ltpa cookie is found.\n+     */\n+    @Test\n+    public void test_disableJwtCookie_true_includeLtpaCookie_true() throws Exception {\n+        server.reconfigureServerUsingExpandedConfiguration(_testName, \"server_disableJwtCookie_true_includeLtpa_true.xml\");\n+\n+        String currentAction = TestActions.ACTION_INVOKE_PROTECTED_RESOURCE;\n+        Page response = actions.invokeUrl(_testName, webClient, protectedUrl);\n+        Expectations expectations = new Expectations();\n+        \n+        currentAction = disableJwtCookie_test_base(currentAction, response, expectations);\n+        \n+        expectations.addExpectations(CommonExpectations.cookieDoesNotExist(currentAction, webClient, JwtFatConstants.JWT_COOKIE_NAME));\n+        expectations.addExpectations(CommonExpectations.ltpaCookieExists(currentAction, webClient));\n+\n+        response = actions.doFormLogin(response, defaultUser, defaultPassword);\n+        validationUtils.validateResult(response, currentAction, expectations);\n+    }\n+    \n+    /**\n+     * This helper method sets the action and expectations common across disableJwtCookie tests\n+     */\n+    private String disableJwtCookie_test_base(String currentAction, Page response, Expectations expectations) throws Exception {\n+        expectations.addExpectations(CommonExpectations.successfullyReachedLoginPage(currentAction));\n+        \n+        validationUtils.validateResult(response, currentAction, expectations);\n+\n+        currentAction = TestActions.ACTION_SUBMIT_LOGIN_CREDENTIALS;\n+        \n+        expectations.addExpectations(CommonExpectations.successfullyReachedUrl(currentAction, protectedUrl));\n+        expectations.addExpectations(CommonExpectations.getJwtPrincipalExpectations(currentAction, defaultUser, JwtFatConstants.DEFAULT_ISS_REGEX));\n+        \n+        return currentAction;\n+    }\n+    \n+    /**\n+     * Tests Config:\n+     *  - <jwtSso disableJwtCookie=\"true\" includeLtpaCookie=\"true\" useLtpaIfJwtAbsent=\"true\" cookieName=\"AdamsJwtCookie\" setCookieSecureFlag=\"false\"/>\n+     * Expects:\n+     *  - JWT cookie is not found in the response, but the ltpa cookie is found.\n+     */\n+    @Test\n+    public void test_disableJwtCookie_true_includeLtpaCookie_true_differentJwtCookieName() throws Exception {\n+        server.reconfigureServerUsingExpandedConfiguration(_testName, \"server_disableJwtCookie_true_differentJwtCookieName_includeLtpa_true.xml\");\n+\n+        String jwtCookieName = \"AdamsJwtCookie\";\n+\n+        String currentAction = TestActions.ACTION_INVOKE_PROTECTED_RESOURCE;\n+        Page response = actions.invokeUrl(_testName, webClient, protectedUrl);\n+        Expectations expectations = new Expectations();\n+        \n+        currentAction = disableJwtCookie_test_base(currentAction, response, expectations);\n+        \n+        expectations.addExpectations(CommonExpectations.cookieDoesNotExist(currentAction, webClient, jwtCookieName));", "originalCommit": "def38d8c426ecd61906796b55f937a083351f898", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0MjczOQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12494#discussion_r435442739", "bodyText": "I agree, I'll add that in", "author": "Zech-Hein", "createdAt": "2020-06-04T17:54:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2ODU4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "dc8877a8b53cd9538ec135cbbde4fb7e88665b88", "chunk": "diff --git a/dev/com.ibm.ws.security.jwtsso_fat/fat/src/com/ibm/ws/security/jwtsso/fat/ConfigAttributeTests.java b/dev/com.ibm.ws.security.jwtsso_fat/fat/src/com/ibm/ws/security/jwtsso/fat/ConfigAttributeTests.java\nindex 2e29cb50cd..3140d36b5e 100644\n--- a/dev/com.ibm.ws.security.jwtsso_fat/fat/src/com/ibm/ws/security/jwtsso/fat/ConfigAttributeTests.java\n+++ b/dev/com.ibm.ws.security.jwtsso_fat/fat/src/com/ibm/ws/security/jwtsso/fat/ConfigAttributeTests.java\n\n@@ -166,6 +166,7 @@ public class ConfigAttributeTests extends CommonSecurityFat {\n         currentAction = disableJwtCookie_test_base(currentAction, response, expectations);\n         \n         expectations.addExpectations(CommonExpectations.cookieDoesNotExist(currentAction, webClient, jwtCookieName));\n+        expectations.addExpectations(CommonExpectations.cookieDoesNotExist(currentAction, webClient, JwtFatConstants.JWT_COOKIE_NAME));\n         expectations.addExpectations(CommonExpectations.ltpaCookieExists(currentAction, webClient));\n \n         response = actions.doFormLogin(response, defaultUser, defaultPassword);\n"}}, {"oid": "1f9236be07ddfb11e28c747f7ddb6319c9bf5963", "url": "https://github.com/OpenLiberty/open-liberty/commit/1f9236be07ddfb11e28c747f7ddb6319c9bf5963", "message": "add disableJwtCookie tests", "committedDate": "2020-06-04T17:49:59Z", "type": "forcePushed"}, {"oid": "dc8877a8b53cd9538ec135cbbde4fb7e88665b88", "url": "https://github.com/OpenLiberty/open-liberty/commit/dc8877a8b53cd9538ec135cbbde4fb7e88665b88", "message": "add disableJwtCookie tests", "committedDate": "2020-06-04T18:03:10Z", "type": "commit"}, {"oid": "dc8877a8b53cd9538ec135cbbde4fb7e88665b88", "url": "https://github.com/OpenLiberty/open-liberty/commit/dc8877a8b53cd9538ec135cbbde4fb7e88665b88", "message": "add disableJwtCookie tests", "committedDate": "2020-06-04T18:03:10Z", "type": "forcePushed"}, {"oid": "9ea8d81f5b43be097ad21174e752a73f1dbb908f", "url": "https://github.com/OpenLiberty/open-liberty/commit/9ea8d81f5b43be097ad21174e752a73f1dbb908f", "message": "Merge branch 'integration' of github.com:OpenLiberty/open-liberty into disableJwtCookie-fat\nupdate branch to integration", "committedDate": "2020-06-05T13:33:43Z", "type": "commit"}, {"oid": "dcdc36e3cea8a809bcede4993eb24c7f48fcfbb3", "url": "https://github.com/OpenLiberty/open-liberty/commit/dcdc36e3cea8a809bcede4993eb24c7f48fcfbb3", "message": "fix security fat common TestActionsTest unit test", "committedDate": "2020-06-05T17:37:36Z", "type": "commit"}]}