{"pr_number": 14588, "pr_title": "extension point for WorkManager built on managed executors", "pr_createdAt": "2020-10-20T21:57:03Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/14588", "timeline": [{"oid": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186", "url": "https://github.com/OpenLiberty/open-liberty/commit/0b24dcf20b0e8aab703ed7173ed6f2c3233f8186", "message": "Issue #14587 extension point for WorkManager built on managed executors", "committedDate": "2020-10-20T21:51:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg4Mzc5NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#discussion_r508883794", "bodyText": "can the ResourceInfo param be removed?", "author": "aguibert", "createdAt": "2020-10-20T22:44:59Z", "path": "dev/com.ibm.ws.concurrent/src/com/ibm/ws/concurrent/ext/ManagedExecutorExtension.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 IBM Corporation and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     IBM Corporation - initial API and implementation\n+ *******************************************************************************/\n+package com.ibm.ws.concurrent.ext;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.function.Supplier;\n+\n+import javax.enterprise.concurrent.ManagedExecutorService;\n+\n+import org.eclipse.microprofile.context.ManagedExecutor;\n+import org.eclipse.microprofile.context.ThreadContext;\n+\n+import com.ibm.websphere.ras.annotation.Trivial;\n+import com.ibm.ws.concurrent.WSManagedExecutorService;\n+import com.ibm.ws.threading.CompletionStageExecutor;\n+import com.ibm.ws.threading.PolicyExecutor;\n+import com.ibm.wsspi.resource.ResourceInfo;\n+import com.ibm.wsspi.threadcontext.WSContextService;\n+\n+/**\n+ * Extend this interface to intercept and replace resource reference lookups for\n+ * <code>managedExecutorService</code>.\n+ *\n+ * At most one extension implementation can be supplied across the entire system.\n+ * A feature that provides this extension point makes itself incompatible\n+ * with every other feature that also provides this extension point.\n+ * Do not implement if this restriction is unacceptable.\n+ */\n+@Trivial\n+public class ManagedExecutorExtension implements CompletionStageExecutor, ManagedExecutor, ManagedExecutorService, WSManagedExecutorService {\n+    private final WSManagedExecutorService executor;\n+\n+    protected ManagedExecutorExtension(WSManagedExecutorService executor, ResourceInfo resourceInfo) {", "originalCommit": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2MTcwNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#discussion_r509261704", "bodyText": "ResourceInfo cannot be removed because it includes information about the resource reference lookup that will be needed by the extension point. One example is that CommonJ has some requirements around the sharing attribute.", "author": "njr-11", "createdAt": "2020-10-21T13:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg4Mzc5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg4ODQ0OQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#discussion_r508888449", "bodyText": "Instead of re-declaring the service reference set/unset methods, you can set -dsannotations-inherit: true in the bnd.bnd", "author": "aguibert", "createdAt": "2020-10-20T22:57:39Z", "path": "dev/com.ibm.ws.concurrent/src/com/ibm/ws/concurrent/internal/ManagedScheduledExecutorServiceImpl.java", "diffHunk": "@@ -206,6 +206,13 @@ protected void setConcurrencyPolicy(ConcurrencyPolicy svc) {\n         super.setConcurrencyPolicy(svc);\n     }\n \n+    @Override\n+    @Reference(policy = ReferencePolicy.STATIC)\n+    @Trivial\n+    protected void setConcurrencyService(ConcurrencyService svc) {", "originalCommit": "0b24dcf20b0e8aab703ed7173ed6f2c3233f8186", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwMDAwMg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/14588#discussion_r509300002", "bodyText": "Nice, I'll look into switching to that option for this and some other pre-existing attributes that were following this pattern.  I'll make that improvement in a separate pull because this already has a successful build with all tests passing.", "author": "njr-11", "createdAt": "2020-10-21T13:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg4ODQ0OQ=="}], "type": "inlineReview", "revised_code": null}]}