{"pr_number": 10729, "pr_title": "Ensure LTPA Keys are created before hitting https endpoint", "pr_createdAt": "2020-02-04T22:34:54Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/10729", "timeline": [{"oid": "be4c607bfd8fff292e83ab07d54299bba86fc428", "url": "https://github.com/OpenLiberty/open-liberty/commit/be4c607bfd8fff292e83ab07d54299bba86fc428", "message": "Ensure LTPA Keys are created before hitting https endpoint", "committedDate": "2020-02-04T22:33:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMjU4OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10729#discussion_r375322588", "bodyText": "Is there a reason to keep this instead of changing to waitForSecurityPrerequisites(serverEDF6, 60000);?", "author": "fmhwong", "createdAt": "2020-02-05T15:24:45Z", "path": "dev/com.ibm.ws.microprofile.metrics.monitor_fat/fat/src/com/ibm/ws/microprofile/metrics/monitor_fat/TestEnableDisableFeaturesTest.java", "diffHunk": "@@ -299,7 +299,7 @@ public void testEDF7() throws Exception {\n     \tcurrentServ = serverEDF6;\n     \tString testName = \"testEDF7\";\n     \tserverEDF6.startServer();\n-    \tAssert.assertNotNull(\"CWWKO0219I NOT FOUND\",serverEDF6.waitForStringInLog(\"defaultHttpEndpoint-ssl\",60000));\n+    \tAssert.assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",serverEDF6.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\",60000));", "originalCommit": "be4c607bfd8fff292e83ab07d54299bba86fc428", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyNzk0MA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/10729#discussion_r375327940", "bodyText": "waitForSecurityPrerequisites checks for creation of LTPA keys but we don't need to as that was already created in the previous test case. They use the same server so the key only gets created onces, but we still need to check for the defaultHttpEndpoint-ssl message.", "author": "lamkavan", "createdAt": "2020-02-05T15:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMjU4OA=="}], "type": "inlineReview", "revised_code": {"commit": "a154546b0c9ffdd3d428c6618015d1ed14afcbf4", "chunk": "diff --git a/dev/com.ibm.ws.microprofile.metrics.monitor_fat/fat/src/com/ibm/ws/microprofile/metrics/monitor_fat/TestEnableDisableFeaturesTest.java b/dev/com.ibm.ws.microprofile.metrics.monitor_fat/fat/src/com/ibm/ws/microprofile/metrics/monitor_fat/TestEnableDisableFeaturesTest.java\nindex 73690b8e70..5badc8bb85 100644\n--- a/dev/com.ibm.ws.microprofile.metrics.monitor_fat/fat/src/com/ibm/ws/microprofile/metrics/monitor_fat/TestEnableDisableFeaturesTest.java\n+++ b/dev/com.ibm.ws.microprofile.metrics.monitor_fat/fat/src/com/ibm/ws/microprofile/metrics/monitor_fat/TestEnableDisableFeaturesTest.java\n\n@@ -299,9 +307,17 @@ public class TestEnableDisableFeaturesTest {\n     \tcurrentServ = serverEDF6;\n     \tString testName = \"testEDF7\";\n     \tserverEDF6.startServer();\n-    \tAssert.assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",serverEDF6.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\",60000));\n+    \t\n+    \tif (serverEDF6FirstUse) {\n+    \t\t// We only need to wait for LTPA keys if this is the first time using this server\n+    \t\twaitForSecurityPrerequisites(serverEDF6, 60000);\n+    \t} else {\n+    \t\tAssert.assertNotNull(\"TCP Channel defaultHttpEndpoint-ssl has not started (CWWKO0219I not found)\",serverEDF6.waitForStringInLog(\"CWWKO0219I.*defaultHttpEndpoint-ssl\",60000));\n+    \t}\n+    \tserverEDF6FirstUse = false;\n+    \t\n     \tLog.info(c, testName, \"------- Monitor filter WebContainer and Session ------\");\n-       \tserverEDF6.setMarkToEndOfLog();\n+    \tserverEDF6.setMarkToEndOfLog();\n        \tserverEDF6.setServerConfigurationFile(\"server_monitorFilter2.xml\");\n        \tAssert.assertNotNull(\"CWWKG0017I NOT FOUND\",serverEDF6.waitForStringInLogUsingMark(\"CWWKG0017I\"));\n     \tcheckStrings(getHttpServlet(\"/testSessionApp/testSessionServlet\", serverEDF6), \n"}}, {"oid": "a154546b0c9ffdd3d428c6618015d1ed14afcbf4", "url": "https://github.com/OpenLiberty/open-liberty/commit/a154546b0c9ffdd3d428c6618015d1ed14afcbf4", "message": "Ensure that order of execution does not effect behaviour", "committedDate": "2020-02-05T19:34:56Z", "type": "commit"}]}