{"pr_number": 15359, "pr_title": "Add capability to identify errorCodes and sqlStates as stale connections", "pr_createdAt": "2020-12-22T17:32:08Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/15359", "timeline": [{"oid": "51b4e303b812dc8857af1e041defd066230c4e35", "url": "https://github.com/OpenLiberty/open-liberty/commit/51b4e303b812dc8857af1e041defd066230c4e35", "message": "Rename mapError element to identifyException", "committedDate": "2020-12-22T17:42:51Z", "type": "forcePushed"}, {"oid": "ab8810ae768f59668990a4cd869640d3afa4d4f0", "url": "https://github.com/OpenLiberty/open-liberty/commit/ab8810ae768f59668990a4cd869640d3afa4d4f0", "message": "Message review comments", "committedDate": "2020-12-28T15:43:55Z", "type": "forcePushed"}, {"oid": "32230f4f9eb8082a4985c92b43f5265d9a153369", "url": "https://github.com/OpenLiberty/open-liberty/commit/32230f4f9eb8082a4985c92b43f5265d9a153369", "message": "Allow identifyException to specify an errorCode and sqlState at the same time", "committedDate": "2020-12-29T16:21:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NjA3Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549786073", "bodyText": "The statement that this may be null doesn't appear to be true, and if it were would cause a NullPointerException in the code that follows.", "author": "njr-11", "createdAt": "2020-12-29T17:25:25Z", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/DSConfig.java", "diffHunk": "@@ -194,6 +245,12 @@\n      * JNDI name.\n      */\n     public final String jndiName;\n+    \n+    /**\n+     * List of identified exceptinos to check if certain errorCode or sqlState values that should map to specific actions.\n+     * May be null if none are configured", "originalCommit": "32230f4f9eb8082a4985c92b43f5265d9a153369", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6e593e4df0d88671c47563b523d9756b63957763", "chunk": "diff --git a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/DSConfig.java b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/DSConfig.java\nindex 453cdaa73d..93c615462f 100644\n--- a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/DSConfig.java\n+++ b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/DSConfig.java\n\n@@ -247,10 +248,10 @@ public class DSConfig implements FFDCSelfIntrospectable {\n     public final String jndiName;\n     \n     /**\n-     * List of identified exceptinos to check if certain errorCode or sqlState values that should map to specific actions.\n+     * List of error mappings to check if certain sqlCode or sqlState values should map to specific actions.\n      * May be null if none are configured\n      */\n-    public final List<IdentifyException> identifyExceptions;\n+    public final List<MapError> errorMappings;\n \n     /**\n      * List of SQL commands to execute once per newly established connection. Can be null if none are configured.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODU3OA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549788578", "bodyText": "The - is a confusing delimiter given that error codes can and sometimes do have negative values.  A  different delimiter (maybe &) would be clearer for someone who is debugging.", "author": "njr-11", "createdAt": "2020-12-29T17:33:32Z", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java", "diffHunk": "@@ -99,6 +103,14 @@\n      * SQLException SQL States that indicate a stale connection.\n      */\n     final Set<String> staleSQLStates = new HashSet<String>();\n+    \n+    /**\n+     * Pairs of SQLException error codes and SQL states that indicate a stale exception.\n+     * This differs from staleErrorCodes and staleSQLStates because here both items must\n+     * match in order to be considered stale.\n+     * The entries are of the format: SQLSTATE-SQLCODE", "originalCommit": "32230f4f9eb8082a4985c92b43f5265d9a153369", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIyOTc1NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r550229754", "bodyText": "good point, I'll change that to a forward-slash delimiter", "author": "aguibert", "createdAt": "2020-12-30T15:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODU3OA=="}], "type": "inlineReview", "revised_code": {"commit": "6e593e4df0d88671c47563b523d9756b63957763", "chunk": "diff --git a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java\nindex f832c08c94..8c64d6a120 100644\n--- a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java\n+++ b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java\n\n@@ -103,14 +103,6 @@ public class DatabaseHelper {\n      * SQLException SQL States that indicate a stale connection.\n      */\n     final Set<String> staleSQLStates = new HashSet<String>();\n-    \n-    /**\n-     * Pairs of SQLException error codes and SQL states that indicate a stale exception.\n-     * This differs from staleErrorCodes and staleSQLStates because here both items must\n-     * match in order to be considered stale.\n-     * The entries are of the format: SQLSTATE-SQLCODE\n-     */\n-    final Set<String> staleStateAndCodes = new HashSet<String>();\n \n     /**\n      * Indicates if the JDBC driver alters the autocommit value upon XAResource.end.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MDY3Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r549790672", "bodyText": "This approach is unable to override an improperly identified stale when the JDBC driver raises a SQLNonTransientConnectionException or SQLRecoverableException.\nIt is also unable to override an improperly identified stale when there was a built-in mapping to just the SQL State, for example 08003 and the user it trying to override so that the combination of SQL State 08003 with error code 230 means not stale.\nThat said, we have probably gone too far ahead with the implementation here when we know that ultimately we will also need to consider how other types of identified exceptions fit into the map and may end up altering the approach a bit for that regardless.", "author": "njr-11", "createdAt": "2020-12-29T17:40:22Z", "path": "dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java", "diffHunk": "@@ -394,22 +445,24 @@ public boolean isConnectionError(SQLException ex) {\n \n         // Maintain a set in order to check for cycles\n         Set<Throwable> chain = new HashSet<Throwable>();\n-\n+        \n         boolean stale = false;\n         for (Throwable t = ex; t != null && !stale && chain.add(t); t = t.getCause()) {\n             SQLException sqlX = t instanceof SQLException ? (SQLException) t : null;\n             if (isTraceOn && tc.isDebugEnabled())\n                 Tr.debug(this, tc, \"checking \" + t,\n                          sqlX == null ? null : sqlX.getSQLState(),\n                          sqlX == null ? null : sqlX.getErrorCode());\n+            \n             if (sqlX != null)\n                 stale |= sqlX instanceof SQLRecoverableException ||\n                          sqlX instanceof SQLNonTransientConnectionException ||\n                          sqlX instanceof SQLTransientConnectionException && failoverOccurred(sqlX) ||\n+                         staleStateAndCodes.contains(sqlX.getSQLState() + \"-\" + sqlX.getErrorCode()) ||", "originalCommit": "32230f4f9eb8082a4985c92b43f5265d9a153369", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI1MjM4NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15359#discussion_r550252385", "bodyText": "Makes sense, I've updated the code so user-defined mappings are always checked first, and I also added a testcase called testRemovedMapping_stateAndCode which exercises the scenario you mentioned in the second sentence.", "author": "aguibert", "createdAt": "2020-12-30T16:29:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MDY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6e593e4df0d88671c47563b523d9756b63957763", "chunk": "diff --git a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java\nindex f832c08c94..8c64d6a120 100644\n--- a/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java\n+++ b/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/DatabaseHelper.java\n\n@@ -453,16 +438,14 @@ public class DatabaseHelper {\n                 Tr.debug(this, tc, \"checking \" + t,\n                          sqlX == null ? null : sqlX.getSQLState(),\n                          sqlX == null ? null : sqlX.getErrorCode());\n-            \n             if (sqlX != null)\n                 stale |= sqlX instanceof SQLRecoverableException ||\n                          sqlX instanceof SQLNonTransientConnectionException ||\n                          sqlX instanceof SQLTransientConnectionException && failoverOccurred(sqlX) ||\n-                         staleStateAndCodes.contains(sqlX.getSQLState() + \"-\" + sqlX.getErrorCode()) ||\n                          staleErrorCodes.contains(sqlX.getErrorCode()) ||\n                          staleSQLStates.contains(sqlX.getSQLState());\n         }\n-        \n+\n         if (isTraceOn && tc.isEntryEnabled())\n             Tr.exit(this, tc, \"isConnectionError\", stale);\n \n"}}, {"oid": "6e593e4df0d88671c47563b523d9756b63957763", "url": "https://github.com/OpenLiberty/open-liberty/commit/6e593e4df0d88671c47563b523d9756b63957763", "message": "Add capability to map sqlCodes and sqlStates to stale connections", "committedDate": "2020-12-30T16:27:48Z", "type": "commit"}, {"oid": "1eb54d91ed46b5eef720372ea83ec97f823c7bdf", "url": "https://github.com/OpenLiberty/open-liberty/commit/1eb54d91ed46b5eef720372ea83ec97f823c7bdf", "message": "Rename mapError element to identifyException", "committedDate": "2020-12-30T16:27:49Z", "type": "commit"}, {"oid": "ec40e3c238754d9243f59d1872c1361b1211b44b", "url": "https://github.com/OpenLiberty/open-liberty/commit/ec40e3c238754d9243f59d1872c1361b1211b44b", "message": "Message review comments", "committedDate": "2020-12-30T16:27:49Z", "type": "commit"}, {"oid": "a7ff9e376c2da789c817c7fe73d7e75dd48a875c", "url": "https://github.com/OpenLiberty/open-liberty/commit/a7ff9e376c2da789c817c7fe73d7e75dd48a875c", "message": "Allow identifyException to specify an errorCode and sqlState at the same time", "committedDate": "2020-12-30T16:27:49Z", "type": "commit"}, {"oid": "5d95b513ed5dfff079469c8853ffb11ec82b05c4", "url": "https://github.com/OpenLiberty/open-liberty/commit/5d95b513ed5dfff079469c8853ffb11ec82b05c4", "message": "Review comments from Nathan", "committedDate": "2020-12-30T16:27:49Z", "type": "forcePushed"}, {"oid": "7889624e006749fa3a6cfd68e5f99043f8e6a626", "url": "https://github.com/OpenLiberty/open-liberty/commit/7889624e006749fa3a6cfd68e5f99043f8e6a626", "message": "Review comments from Nathan", "committedDate": "2020-12-31T15:15:13Z", "type": "commit"}, {"oid": "7889624e006749fa3a6cfd68e5f99043f8e6a626", "url": "https://github.com/OpenLiberty/open-liberty/commit/7889624e006749fa3a6cfd68e5f99043f8e6a626", "message": "Review comments from Nathan", "committedDate": "2020-12-31T15:15:13Z", "type": "forcePushed"}]}