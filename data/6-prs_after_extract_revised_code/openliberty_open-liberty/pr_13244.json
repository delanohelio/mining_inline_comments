{"pr_number": 13244, "pr_title": "EJB Synchronize Bindings List and add trace", "pr_createdAt": "2020-07-29T21:09:25Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/13244", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463036492", "bodyText": "What is the scenario that can cause getReference() to be null?  Seems ejbRemoteRuntimeServiceRef.getService() would also be null; so wondering if we should stop caching it in remoteRuntime, and instead just call getService at the beginning of every function that needs it?  Or, can getService() return a non-null value when getReference() returns null?", "author": "tkburroughs", "createdAt": "2020-07-30T14:26:52Z", "path": "dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java", "diffHunk": "@@ -259,15 +260,15 @@ public void bindDefaultEJBRemote(EJBBinding bindingObject, HomeRecord hr) {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null) {\n+        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {", "originalCommit": "8b9e17cb4456d06e34a382a7ebaeb7b1fcdfd49d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0MjUwNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463042504", "bodyText": "Would it be safer (less timing concern) with something like this:\n        EJBRemoteRuntime remoteRuntime = ejbRemoteRuntimeServiceRef.getService();\n        ServiceReference<EJBRemoteRuntime> remoteRuntimeRef = ejbRemoteRuntimeServiceRef.getReference();\n        \n        if (remoteRuntime != null && remoteRuntimeRef != null) {\n\n            BundleContext bc = remoteRuntimeRef.getBundle().getBundleContext();", "author": "tkburroughs", "createdAt": "2020-07-30T14:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA4NzExNw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463087117", "bodyText": "they would both be null, but I kept forgetting that while investigating.\nNamespaceBindleImpl init failing trace:\n[7/26/20, 19:23:24:151 PDT] 00000029 id=00000000 com.ibm.ws.ejbcontainer.osgi.internal.NameSpaceBinderImpl    > <init> Entry  \n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.metadata.OSGiEJBModuleMetaDataImpl@b978b529[BindingNameTestApp#BindingNameEJB.jar]\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBJavaColonNamingHelper@e42f6546\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBLocalNamingHelperImpl@68e21ee0\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.LocalColonEJBNamingHelperImpl@7ba5c40a\n                                                                                                               AtomicServiceReference[name=ejbRemoteRuntime,ctx=org.apache.felix.scr.impl.manager.ComponentContextImpl@73f649fd,ref=null,svc=null]\n\npassing:\n[7/30/20, 9:33:28:382 CDT] 0000005e id=00000000 com.ibm.ws.ejbcontainer.osgi.internal.NameSpaceBinderImpl    > <init> Entry  \n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.metadata.OSGiEJBModuleMetaDataImpl@b61d4416[ConfigTestsOtherTestApp#ConfigTestsOtherEJB.jar]\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBJavaColonNamingHelper@3f5134dd\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.EJBLocalNamingHelperImpl@b8b59f55\n                                                                                                               com.ibm.ws.ejbcontainer.osgi.internal.naming.LocalColonEJBNamingHelperImpl@34043eb2\n                                                                                                               AtomicServiceReference[name=ejbRemoteRuntime,ctx=org.apache.felix.scr.impl.manager.ComponentContextImpl@b61c24f9,ref={com.ibm.ws.ejbcontainer.osgi.EJBRemoteRuntime, com.ibm.ws.transport.iiop.spi.RemoteObjectReplacer}={service.id=372, orbRef.target=(id=defaultOrb), service.bundleid=116, service.scope=bundle, LibertyProcess.target=(wlp.process.type=server), component.name=com.ibm.ws.ejbcontainer.remote.internal.EJBRemoteRuntimeImpl, component.id=288},svc=null]", "author": "olendvcook", "createdAt": "2020-07-30T15:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA4NzU5Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463087593", "bodyText": "I did remove checking it being null but I do like getting the RemoteRuntime each time instead of caching it so I added that and maybe both won't be null by then.", "author": "olendvcook", "createdAt": "2020-07-30T15:37:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEwMTgzNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/13244#discussion_r463101835", "bodyText": "actually com.ibm.wsspi.kernel.service.utils.AtomicServiceReference.getService(boolean) throws IllegalStateException if the ref is null, so maybe I should be checking ejbRemoteRuntimeServiceRef.getReference() != null`before calling getService.\nnvm it has throwException = false by default.", "author": "olendvcook", "createdAt": "2020-07-30T15:57:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "cc675c126e3ab8e2b7af0085f2468dba5f391573", "chunk": "diff --git a/dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java b/dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java\nindex 1eebd3f45d..4beebe555f 100644\n--- a/dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java\n+++ b/dev/com.ibm.ws.ejbcontainer/src/com/ibm/ws/ejbcontainer/osgi/internal/NameSpaceBinderImpl.java\n\n@@ -260,7 +258,8 @@ public class NameSpaceBinderImpl implements NameSpaceBinder<EJBBinding> {\n      * @param bindingName the JNDI binding name\n      */\n     private void bindLegacyRemoteBinding(EJBBinding bindingObject, HomeRecord hr, String bindingName) {\n-        if (remoteRuntime != null && ejbRemoteRuntimeServiceRef.getReference() != null) {\n+        EJBRemoteRuntime remoteRuntime = ejbRemoteRuntimeServiceRef.getService();\n+        if (remoteRuntime != null) {\n \n             // TODO: If BindingsHelper.ivRemoteBindings.contains(bindingName); we have duplicate bindings\n             // and need to bind Ambiguous. #11441\n"}}, {"oid": "cc675c126e3ab8e2b7af0085f2468dba5f391573", "url": "https://github.com/OpenLiberty/open-liberty/commit/cc675c126e3ab8e2b7af0085f2468dba5f391573", "message": "EJB Synchronize Bindings List and add trace", "committedDate": "2020-07-30T15:24:38Z", "type": "commit"}, {"oid": "cc675c126e3ab8e2b7af0085f2468dba5f391573", "url": "https://github.com/OpenLiberty/open-liberty/commit/cc675c126e3ab8e2b7af0085f2468dba5f391573", "message": "EJB Synchronize Bindings List and add trace", "committedDate": "2020-07-30T15:24:38Z", "type": "forcePushed"}]}