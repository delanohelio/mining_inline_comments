{"pr_number": 4641, "pr_title": "Refactoring CLICommand.java", "pr_createdAt": "2020-04-11T03:42:43Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4641", "timeline": [{"oid": "cf381c1cdf56ac0e909a7698b9b31d21a8b6fd43", "url": "https://github.com/jenkinsci/jenkins/commit/cf381c1cdf56ac0e909a7698b9b31d21a8b6fd43", "message": "extracted duplicated code in method", "committedDate": "2020-04-11T02:39:30Z", "type": "commit"}, {"oid": "ca23f150250b0676a6af05c8e02aa3e13ab36d92", "url": "https://github.com/jenkinsci/jenkins/commit/ca23f150250b0676a6af05c8e02aa3e13ab36d92", "message": "removed unnecessary assignments", "committedDate": "2020-04-11T02:59:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzOTgzMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407039831", "bodyText": "Maybe in this case you could keep the errorMsg variable to avoid duplication. Also the code gets more readable with spaces around +.", "author": "zbynek", "createdAt": "2020-04-11T09:14:04Z", "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -251,51 +251,31 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n                     new Object[] {getName(), args.size(), auth.getName(), res});\n             return res;\n         } catch (CmdLineException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             printUsage(stderr, p);\n             return 2;\n         } catch (IllegalStateException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 4;\n         } catch (IllegalArgumentException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 3;\n         } catch (AbortException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            // signals an error without stack trace\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 5;\n         } catch (AccessDeniedException e) {\n-            LOGGER.log(Level.FINE, String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n-                    getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\"), e);\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + e.getMessage());\n+            logAndPrintErrorWithDefaultValues(args, e);\n             return 6;\n         } catch (BadCredentialsException e) {\n             // to the caller, we can't reveal whether the user didn't exist or the password didn't match.\n             // do that to the server log instead\n             String id = UUID.randomUUID().toString();\n-            LOGGER.log(Level.INFO, \"CLI login attempt failed: \" + id, e);\n-            stderr.println();\n-            stderr.println(\"ERROR: Bad Credentials. Search the server log for \" + id + \" for more details.\");\n+            logAndPrintError(e, \"Bad Credentials. Search the server log for \" + id + \" for more details.\",\n+                    \"CLI login attempt failed: \" + id, Level.INFO);\n             return 7;\n         } catch (Throwable e) {\n-            final String errorMsg = String.format(\"Unexpected exception occurred while performing %s command.\",\n-                    getName());\n-            stderr.println();\n-            stderr.println(\"ERROR: \" + errorMsg);\n-            LOGGER.log(Level.WARNING, errorMsg, e);\n+            logAndPrintError(e, \"Unexpected exception occurred while performing \"+getName()+\" command.\",", "originalCommit": "ca23f150250b0676a6af05c8e02aa3e13ab36d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MjY3MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407092670", "bodyText": "Thanks for the feedback!", "author": "helenSpry", "createdAt": "2020-04-11T18:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzOTgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "87830174a77fe59afc526aa5cffb1b773d0999a0", "chunk": "diff --git a/core/src/main/java/hudson/cli/CLICommand.java b/core/src/main/java/hudson/cli/CLICommand.java\nindex 95d85dce62..cadc67cce1 100644\n--- a/core/src/main/java/hudson/cli/CLICommand.java\n+++ b/core/src/main/java/hudson/cli/CLICommand.java\n\n@@ -251,20 +251,20 @@ public abstract class CLICommand implements ExtensionPoint, Cloneable {\n                     new Object[] {getName(), args.size(), auth.getName(), res});\n             return res;\n         } catch (CmdLineException e) {\n-            logAndPrintErrorWithDefaultValues(args, e);\n+            logFailedCommandAndPrintExceptionErrorMessage(args, e);\n             printUsage(stderr, p);\n             return 2;\n         } catch (IllegalStateException e) {\n-            logAndPrintErrorWithDefaultValues(args, e);\n+            logFailedCommandAndPrintExceptionErrorMessage(args, e);\n             return 4;\n         } catch (IllegalArgumentException e) {\n-            logAndPrintErrorWithDefaultValues(args, e);\n+            logFailedCommandAndPrintExceptionErrorMessage(args, e);\n             return 3;\n         } catch (AbortException e) {\n-            logAndPrintErrorWithDefaultValues(args, e);\n+            logFailedCommandAndPrintExceptionErrorMessage(args, e);\n             return 5;\n         } catch (AccessDeniedException e) {\n-            logAndPrintErrorWithDefaultValues(args, e);\n+            logFailedCommandAndPrintExceptionErrorMessage(args, e);\n             return 6;\n         } catch (BadCredentialsException e) {\n             // to the caller, we can't reveal whether the user didn't exist or the password didn't match.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjcwOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407042709", "bodyText": "It's unclear what \"default values\" refers to.", "author": "daniel-beck", "createdAt": "2020-04-11T09:45:22Z", "path": "core/src/main/java/hudson/cli/CLICommand.java", "diffHunk": "@@ -304,6 +284,20 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n         }\n     }\n \n+    private void logAndPrintErrorWithDefaultValues(List<String> args, Throwable e) {", "originalCommit": "ca23f150250b0676a6af05c8e02aa3e13ab36d92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5Mjc2NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4641#discussion_r407092764", "bodyText": "Thanks for the feedback! I'll change the name to something more specific.", "author": "helenSpry", "createdAt": "2020-04-11T18:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjcwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "87830174a77fe59afc526aa5cffb1b773d0999a0", "chunk": "diff --git a/core/src/main/java/hudson/cli/CLICommand.java b/core/src/main/java/hudson/cli/CLICommand.java\nindex 95d85dce62..cadc67cce1 100644\n--- a/core/src/main/java/hudson/cli/CLICommand.java\n+++ b/core/src/main/java/hudson/cli/CLICommand.java\n\n@@ -284,7 +284,7 @@ public abstract class CLICommand implements ExtensionPoint, Cloneable {\n         }\n     }\n \n-    private void logAndPrintErrorWithDefaultValues(List<String> args, Throwable e) {\n+    private void logFailedCommandAndPrintExceptionErrorMessage(List<String> args, Throwable e) {\n         Authentication auth = getTransportAuthentication();\n         String logMessage = String.format(\"Failed call to CLI command %s, with %d arguments, as user %s.\",\n                 getName(), args.size(), auth != null ? auth.getName() : \"<unknown>\");\n"}}, {"oid": "87830174a77fe59afc526aa5cffb1b773d0999a0", "url": "https://github.com/jenkinsci/jenkins/commit/87830174a77fe59afc526aa5cffb1b773d0999a0", "message": "added back variable to reduce duplication and changed name of method", "committedDate": "2020-04-11T18:01:58Z", "type": "commit"}]}