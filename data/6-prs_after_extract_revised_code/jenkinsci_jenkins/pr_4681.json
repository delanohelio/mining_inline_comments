{"pr_number": 4681, "pr_title": "[JENKINS-62006] Move getChannelToMaster to a separate class", "pr_createdAt": "2020-04-22T10:59:59Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4681", "timeline": [{"oid": "85974f3ec5f22522861fe504e36dcd93e185c2dd", "url": "https://github.com/jenkinsci/jenkins/commit/85974f3ec5f22522861fe504e36dcd93e185c2dd", "message": "[JENKINS-62006] Move getChannelToMaster to a separate class\n\nThis should avoid classloading issues I've seen, such as\n\nCaused by: java.lang.NoClassDefFoundError:\njavax/servlet/ServletException\n  at hudson.util.ProcessTree.get(ProcessTree.java:432)\n...", "committedDate": "2020-04-22T10:58:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg4NDExOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4681#discussion_r412884119", "bodyText": "No new classes in hudson.* please.\nPlease also use agent instead of slave (both package and class name).", "author": "daniel-beck", "createdAt": "2020-04-22T11:01:47Z", "path": "core/src/main/java/hudson/slaves/SlaveComputerUtil.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package hudson.slaves;", "originalCommit": "85974f3ec5f22522861fe504e36dcd93e185c2dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25c8cb6be5f2c14082c0b5619c4136b3d0023816", "chunk": "diff --git a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java b/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\ndeleted file mode 100644\nindex 9128a39e33..0000000000\n--- a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\n+++ /dev/null\n\n@@ -1,30 +0,0 @@\n-package hudson.slaves;\n-\n-import hudson.FilePath;\n-import hudson.remoting.Channel;\n-import hudson.remoting.VirtualChannel;\n-import jenkins.model.Jenkins;\n-\n-public final class SlaveComputerUtil {\n-    private SlaveComputerUtil() {}\n-    /**\n-     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n-     * This method can be called from any thread on the master, or from agent (more precisely,\n-     * it only works from the remoting request-handling thread in agents, which means if you've started\n-     * separate thread on agents, that'll fail.)\n-     *\n-     * @return null if the calling thread doesn't have any trace of where its master is.\n-     * @since XXX\n-     */\n-    public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n-            return FilePath.localChannel;\n-\n-        // if this method is called from within the agent computation thread, this should work\n-        Channel c = Channel.current();\n-        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n-            return c;\n-\n-        return null;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg4NDQzMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4681#discussion_r412884430", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @since XXX\n          \n          \n            \n                 * @since TODO\n          \n      \n    \n    \n  \n\nper \n  \n    \n      jenkins/update-since-todo.sh\n    \n    \n         Line 13\n      in\n      3b85c0a\n    \n    \n    \n    \n\n        \n          \n           for todo in $( git grep --line-number '@since TODO' | grep -v \"$me\" )", "author": "daniel-beck", "createdAt": "2020-04-22T11:02:20Z", "path": "core/src/main/java/hudson/slaves/SlaveComputerUtil.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package hudson.slaves;\n+\n+import hudson.FilePath;\n+import hudson.remoting.Channel;\n+import hudson.remoting.VirtualChannel;\n+import jenkins.model.Jenkins;\n+\n+public final class SlaveComputerUtil {\n+    private SlaveComputerUtil() {}\n+    /**\n+     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n+     * This method can be called from any thread on the master, or from agent (more precisely,\n+     * it only works from the remoting request-handling thread in agents, which means if you've started\n+     * separate thread on agents, that'll fail.)\n+     *\n+     * @return null if the calling thread doesn't have any trace of where its master is.\n+     * @since XXX", "originalCommit": "85974f3ec5f22522861fe504e36dcd93e185c2dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25c8cb6be5f2c14082c0b5619c4136b3d0023816", "chunk": "diff --git a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java b/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\ndeleted file mode 100644\nindex 9128a39e33..0000000000\n--- a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\n+++ /dev/null\n\n@@ -1,30 +0,0 @@\n-package hudson.slaves;\n-\n-import hudson.FilePath;\n-import hudson.remoting.Channel;\n-import hudson.remoting.VirtualChannel;\n-import jenkins.model.Jenkins;\n-\n-public final class SlaveComputerUtil {\n-    private SlaveComputerUtil() {}\n-    /**\n-     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n-     * This method can be called from any thread on the master, or from agent (more precisely,\n-     * it only works from the remoting request-handling thread in agents, which means if you've started\n-     * separate thread on agents, that'll fail.)\n-     *\n-     * @return null if the calling thread doesn't have any trace of where its master is.\n-     * @since XXX\n-     */\n-    public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n-            return FilePath.localChannel;\n-\n-        // if this method is called from within the agent computation thread, this should work\n-        Channel c = Channel.current();\n-        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n-            return c;\n-\n-        return null;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg4NTE1Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4681#discussion_r412885156", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n          \n          \n            \n                        return FilePath.localChannel;\n          \n          \n            \n            \n          \n          \n            \n                    // if this method is called from within the agent computation thread, this should work\n          \n          \n            \n                    Channel c = Channel.current();\n          \n          \n            \n                    if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n          \n          \n            \n                        return c;\n          \n          \n            \n                    if (Jenkins.getInstanceOrNull() != null) { // check if calling thread is on master or on slave\n          \n          \n            \n                        return FilePath.localChannel;\n          \n          \n            \n                    }\n          \n          \n            \n                    // if this method is called from within the agent computation thread, this should work\n          \n          \n            \n                    Channel c = Channel.current();\n          \n          \n            \n                    if (c != null && Boolean.TRUE.equals(c.getProperty(\"slave\"))) {\n          \n          \n            \n                        return c;\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nFix the code formatting if you touch it.", "author": "daniel-beck", "createdAt": "2020-04-22T11:03:34Z", "path": "core/src/main/java/hudson/slaves/SlaveComputerUtil.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package hudson.slaves;\n+\n+import hudson.FilePath;\n+import hudson.remoting.Channel;\n+import hudson.remoting.VirtualChannel;\n+import jenkins.model.Jenkins;\n+\n+public final class SlaveComputerUtil {\n+    private SlaveComputerUtil() {}\n+    /**\n+     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n+     * This method can be called from any thread on the master, or from agent (more precisely,\n+     * it only works from the remoting request-handling thread in agents, which means if you've started\n+     * separate thread on agents, that'll fail.)\n+     *\n+     * @return null if the calling thread doesn't have any trace of where its master is.\n+     * @since XXX\n+     */\n+    public static VirtualChannel getChannelToMaster() {\n+        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n+            return FilePath.localChannel;\n+\n+        // if this method is called from within the agent computation thread, this should work\n+        Channel c = Channel.current();\n+        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n+            return c;\n+", "originalCommit": "85974f3ec5f22522861fe504e36dcd93e185c2dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25c8cb6be5f2c14082c0b5619c4136b3d0023816", "chunk": "diff --git a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java b/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\ndeleted file mode 100644\nindex 9128a39e33..0000000000\n--- a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\n+++ /dev/null\n\n@@ -1,30 +0,0 @@\n-package hudson.slaves;\n-\n-import hudson.FilePath;\n-import hudson.remoting.Channel;\n-import hudson.remoting.VirtualChannel;\n-import jenkins.model.Jenkins;\n-\n-public final class SlaveComputerUtil {\n-    private SlaveComputerUtil() {}\n-    /**\n-     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n-     * This method can be called from any thread on the master, or from agent (more precisely,\n-     * it only works from the remoting request-handling thread in agents, which means if you've started\n-     * separate thread on agents, that'll fail.)\n-     *\n-     * @return null if the calling thread doesn't have any trace of where its master is.\n-     * @since XXX\n-     */\n-    public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n-            return FilePath.localChannel;\n-\n-        // if this method is called from within the agent computation thread, this should work\n-        Channel c = Channel.current();\n-        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n-            return c;\n-\n-        return null;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg4NTcwMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4681#discussion_r412885700", "bodyText": "Also lacks license header.", "author": "daniel-beck", "createdAt": "2020-04-22T11:04:27Z", "path": "core/src/main/java/hudson/slaves/SlaveComputerUtil.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package hudson.slaves;", "originalCommit": "85974f3ec5f22522861fe504e36dcd93e185c2dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25c8cb6be5f2c14082c0b5619c4136b3d0023816", "chunk": "diff --git a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java b/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\ndeleted file mode 100644\nindex 9128a39e33..0000000000\n--- a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\n+++ /dev/null\n\n@@ -1,30 +0,0 @@\n-package hudson.slaves;\n-\n-import hudson.FilePath;\n-import hudson.remoting.Channel;\n-import hudson.remoting.VirtualChannel;\n-import jenkins.model.Jenkins;\n-\n-public final class SlaveComputerUtil {\n-    private SlaveComputerUtil() {}\n-    /**\n-     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n-     * This method can be called from any thread on the master, or from agent (more precisely,\n-     * it only works from the remoting request-handling thread in agents, which means if you've started\n-     * separate thread on agents, that'll fail.)\n-     *\n-     * @return null if the calling thread doesn't have any trace of where its master is.\n-     * @since XXX\n-     */\n-    public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n-            return FilePath.localChannel;\n-\n-        // if this method is called from within the agent computation thread, this should work\n-        Channel c = Channel.current();\n-        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n-            return c;\n-\n-        return null;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg5OTAxOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4681#discussion_r412899018", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static VirtualChannel getChannelToMaster() {\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                public static VirtualChannel getChannelToMaster() {", "author": "res0nance", "createdAt": "2020-04-22T11:27:28Z", "path": "core/src/main/java/hudson/slaves/SlaveComputerUtil.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package hudson.slaves;\n+\n+import hudson.FilePath;\n+import hudson.remoting.Channel;\n+import hudson.remoting.VirtualChannel;\n+import jenkins.model.Jenkins;\n+\n+public final class SlaveComputerUtil {\n+    private SlaveComputerUtil() {}\n+    /**\n+     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n+     * This method can be called from any thread on the master, or from agent (more precisely,\n+     * it only works from the remoting request-handling thread in agents, which means if you've started\n+     * separate thread on agents, that'll fail.)\n+     *\n+     * @return null if the calling thread doesn't have any trace of where its master is.\n+     * @since XXX\n+     */\n+    public static VirtualChannel getChannelToMaster() {", "originalCommit": "85974f3ec5f22522861fe504e36dcd93e185c2dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25c8cb6be5f2c14082c0b5619c4136b3d0023816", "chunk": "diff --git a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java b/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\ndeleted file mode 100644\nindex 9128a39e33..0000000000\n--- a/core/src/main/java/hudson/slaves/SlaveComputerUtil.java\n+++ /dev/null\n\n@@ -1,30 +0,0 @@\n-package hudson.slaves;\n-\n-import hudson.FilePath;\n-import hudson.remoting.Channel;\n-import hudson.remoting.VirtualChannel;\n-import jenkins.model.Jenkins;\n-\n-public final class SlaveComputerUtil {\n-    private SlaveComputerUtil() {}\n-    /**\n-     * Obtains a {@link VirtualChannel} that allows some computation to be performed on the master.\n-     * This method can be called from any thread on the master, or from agent (more precisely,\n-     * it only works from the remoting request-handling thread in agents, which means if you've started\n-     * separate thread on agents, that'll fail.)\n-     *\n-     * @return null if the calling thread doesn't have any trace of where its master is.\n-     * @since XXX\n-     */\n-    public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n-            return FilePath.localChannel;\n-\n-        // if this method is called from within the agent computation thread, this should work\n-        Channel c = Channel.current();\n-        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n-            return c;\n-\n-        return null;\n-    }\n-}\n"}}, {"oid": "25c8cb6be5f2c14082c0b5619c4136b3d0023816", "url": "https://github.com/jenkinsci/jenkins/commit/25c8cb6be5f2c14082c0b5619c4136b3d0023816", "message": "Fix reviews", "committedDate": "2020-04-22T11:51:20Z", "type": "commit"}]}