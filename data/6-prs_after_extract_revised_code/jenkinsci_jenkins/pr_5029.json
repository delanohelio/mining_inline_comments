{"pr_number": 5029, "pr_title": "Queue (mainly) style consistency", "pr_createdAt": "2020-10-24T16:39:25Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/5029", "timeline": [{"oid": "3320cf6a44fa65a96ed354c348b9bd10169665a9", "url": "https://github.com/jenkinsci/jenkins/commit/3320cf6a44fa65a96ed354c348b9bd10169665a9", "message": "Queue (mainly) style consistency\n\n- Removal of null check, while annotation + ecosystem search proves it's never occurring\n- Small code style\n- Cleanup of tab vs spaces", "committedDate": "2020-10-24T16:36:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NjYzMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/5029#discussion_r511496631", "bodyText": "any reason hudson.model.Item isn't imported?", "author": "timja", "createdAt": "2020-10-24T17:46:41Z", "path": "core/src/main/java/hudson/model/Queue.java", "diffHunk": "@@ -810,17 +809,18 @@ private WaitingItem peek() {\n             r = checkPermissionsAndAddToList(r, p);\n         }\n         for (BuildableItem p : reverse(s.pendings)) {\n-            r= checkPermissionsAndAddToList(r, p);\n+            r = checkPermissionsAndAddToList(r, p);\n         }\n         Item[] items = new Item[r.size()];\n         r.toArray(items);\n         return items;\n     }\n \n     private List<Item> checkPermissionsAndAddToList(List<Item> r, Item t) {\n-        if (t.task instanceof hudson.security.AccessControlled) {\n-            if (((hudson.security.AccessControlled)t.task).hasPermission(hudson.model.Item.READ)\n-                    || ((hudson.security.AccessControlled) t.task).hasPermission(hudson.security.Permission.READ)) {\n+        if (t.task instanceof AccessControlled) {\n+            AccessControlled taskAC = (AccessControlled) t.task;\n+            if (taskAC.hasPermission(hudson.model.Item.READ)", "originalCommit": "3320cf6a44fa65a96ed354c348b9bd10169665a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUwMDc0Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/5029#discussion_r511500746", "bodyText": "Due to Queue.Item defined in the class :)", "author": "Wadeck", "createdAt": "2020-10-24T18:32:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NjYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c957df2c0034662f91389ef9be2bd97081e2b04", "chunk": "diff --git a/core/src/main/java/hudson/model/Queue.java b/core/src/main/java/hudson/model/Queue.java\nindex d4ca8ac333..317c5829ac 100644\n--- a/core/src/main/java/hudson/model/Queue.java\n+++ b/core/src/main/java/hudson/model/Queue.java\n\n@@ -820,7 +821,7 @@ public class Queue extends ResourceController implements Saveable {\n         if (t.task instanceof AccessControlled) {\n             AccessControlled taskAC = (AccessControlled) t.task;\n             if (taskAC.hasPermission(hudson.model.Item.READ)\n-                    || taskAC.hasPermission(hudson.security.Permission.READ)) {\n+                    || taskAC.hasPermission(Permission.READ)) {\n                 r.add(t);\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NjY0NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/5029#discussion_r511496645", "bodyText": "same here for Permission", "author": "timja", "createdAt": "2020-10-24T17:46:49Z", "path": "core/src/main/java/hudson/model/Queue.java", "diffHunk": "@@ -810,17 +809,18 @@ private WaitingItem peek() {\n             r = checkPermissionsAndAddToList(r, p);\n         }\n         for (BuildableItem p : reverse(s.pendings)) {\n-            r= checkPermissionsAndAddToList(r, p);\n+            r = checkPermissionsAndAddToList(r, p);\n         }\n         Item[] items = new Item[r.size()];\n         r.toArray(items);\n         return items;\n     }\n \n     private List<Item> checkPermissionsAndAddToList(List<Item> r, Item t) {\n-        if (t.task instanceof hudson.security.AccessControlled) {\n-            if (((hudson.security.AccessControlled)t.task).hasPermission(hudson.model.Item.READ)\n-                    || ((hudson.security.AccessControlled) t.task).hasPermission(hudson.security.Permission.READ)) {\n+        if (t.task instanceof AccessControlled) {\n+            AccessControlled taskAC = (AccessControlled) t.task;\n+            if (taskAC.hasPermission(hudson.model.Item.READ)\n+                    || taskAC.hasPermission(hudson.security.Permission.READ)) {", "originalCommit": "3320cf6a44fa65a96ed354c348b9bd10169665a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c957df2c0034662f91389ef9be2bd97081e2b04", "chunk": "diff --git a/core/src/main/java/hudson/model/Queue.java b/core/src/main/java/hudson/model/Queue.java\nindex d4ca8ac333..317c5829ac 100644\n--- a/core/src/main/java/hudson/model/Queue.java\n+++ b/core/src/main/java/hudson/model/Queue.java\n\n@@ -820,7 +821,7 @@ public class Queue extends ResourceController implements Saveable {\n         if (t.task instanceof AccessControlled) {\n             AccessControlled taskAC = (AccessControlled) t.task;\n             if (taskAC.hasPermission(hudson.model.Item.READ)\n-                    || taskAC.hasPermission(hudson.security.Permission.READ)) {\n+                    || taskAC.hasPermission(Permission.READ)) {\n                 r.add(t);\n             }\n         }\n"}}, {"oid": "3c957df2c0034662f91389ef9be2bd97081e2b04", "url": "https://github.com/jenkinsci/jenkins/commit/3c957df2c0034662f91389ef9be2bd97081e2b04", "message": "Use import for Permission.", "committedDate": "2020-10-24T18:34:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUwMDk0OA==", "url": "https://github.com/jenkinsci/jenkins/pull/5029#discussion_r511500948", "bodyText": "I checked the ecosystem, everytime this method is called with a valid nonNull loadBalancer.", "author": "Wadeck", "createdAt": "2020-10-24T18:34:47Z", "path": "core/src/main/java/hudson/model/Queue.java", "diffHunk": "@@ -358,7 +358,6 @@ public LoadBalancer getLoadBalancer() {\n     }\n \n     public void setLoadBalancer(@NonNull LoadBalancer loadBalancer) {\n-        if(loadBalancer==null)  throw new IllegalArgumentException();", "originalCommit": "3320cf6a44fa65a96ed354c348b9bd10169665a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}