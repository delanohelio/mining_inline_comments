{"pr_number": 4469, "pr_title": "Add preauth filtering overload of getAllItems(), getItems() and allItems()", "pr_createdAt": "2020-02-03T09:19:59Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4469", "timeline": [{"oid": "05227bcf4b347b0e889ff267b6af9ab14e7dc773", "url": "https://github.com/jenkinsci/jenkins/commit/05227bcf4b347b0e889ff267b6af9ab14e7dc773", "message": "Add preauth filtering overload of getAllItems()\n\nSigned-off-by: Raihaan Shouhell <raihaan.shouhell@autodesk.com>", "committedDate": "2020-02-03T09:15:51Z", "type": "commit"}, {"oid": "8c560b87bbfad86c81e86f25742402c557e3f68b", "url": "https://github.com/jenkinsci/jenkins/commit/8c560b87bbfad86c81e86f25742402c557e3f68b", "message": "Add allItems filtering", "committedDate": "2020-02-04T09:39:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyNzg0OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375727848", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return allItems(authentication, root, type, t->true);\n          \n          \n            \n                    return allItems(authentication, root, type, t -> true);", "author": "varyvol", "createdAt": "2020-02-06T09:37:45Z", "path": "core/src/main/java/hudson/model/Items.java", "diffHunk": "@@ -449,7 +486,26 @@ public static XmlFile getConfigFile(Item item) {\n      * @since 2.37\n      */\n     public static <T extends Item> Iterable<T> allItems(Authentication authentication, ItemGroup root, Class<T> type) {\n-        return new AllItemsIterable<>(root, authentication, type);\n+        return allItems(authentication, root, type, t->true);", "originalCommit": "8c560b87bbfad86c81e86f25742402c557e3f68b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "215e3c6cd2a51629c4cca38e0350326d3a2f306b", "chunk": "diff --git a/core/src/main/java/hudson/model/Items.java b/core/src/main/java/hudson/model/Items.java\nindex 0df7a1a755..8c31c0bf1d 100644\n--- a/core/src/main/java/hudson/model/Items.java\n+++ b/core/src/main/java/hudson/model/Items.java\n\n@@ -486,7 +486,7 @@ public class Items {\n      * @since 2.37\n      */\n     public static <T extends Item> Iterable<T> allItems(Authentication authentication, ItemGroup root, Class<T> type) {\n-        return allItems(authentication, root, type, t->true);\n+        return allItems(authentication, root, type, t -> true);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODQ2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375728460", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getItems(t->true);\n          \n          \n            \n                    return getItems(t -> true);", "author": "varyvol", "createdAt": "2020-02-06T09:38:54Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);", "originalCommit": "8c560b87bbfad86c81e86f25742402c557e3f68b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "215e3c6cd2a51629c4cca38e0350326d3a2f306b", "chunk": "diff --git a/core/src/main/java/jenkins/model/Jenkins.java b/core/src/main/java/jenkins/model/Jenkins.java\nindex 419abbfee4..73833aae5e 100644\n--- a/core/src/main/java/jenkins/model/Jenkins.java\n+++ b/core/src/main/java/jenkins/model/Jenkins.java\n\n@@ -1776,7 +1776,7 @@ public class Jenkins extends AbstractCIBase implements DirectlyModifiableTopLeve\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n-        return getItems(t->true);\n+        return getItems(t -> true);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375728585", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Gets just the immediate children of {@link Jenkins} based on supplied predicate.\n          \n          \n            \n                 * Gets just the immediate child of {@link Jenkins} based on supplied predicate.", "author": "varyvol", "createdAt": "2020-02-06T09:39:09Z", "path": "core/src/main/java/jenkins/model/Jenkins.java", "diffHunk": "@@ -1775,12 +1776,21 @@ public String getFullDisplayName() {\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n+        return getItems(t->true);\n+    }\n+\n+    /**\n+     * Gets just the immediate children of {@link Jenkins} based on supplied predicate.", "originalCommit": "8c560b87bbfad86c81e86f25742402c557e3f68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1MjEzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375752138", "bodyText": "Since its a list of items it should be children instead of child", "author": "res0nance", "createdAt": "2020-02-06T10:24:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc5ODY3Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375798677", "bodyText": "Ah, right!", "author": "varyvol", "createdAt": "2020-02-06T12:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "215e3c6cd2a51629c4cca38e0350326d3a2f306b", "chunk": "diff --git a/core/src/main/java/jenkins/model/Jenkins.java b/core/src/main/java/jenkins/model/Jenkins.java\nindex 419abbfee4..73833aae5e 100644\n--- a/core/src/main/java/jenkins/model/Jenkins.java\n+++ b/core/src/main/java/jenkins/model/Jenkins.java\n\n@@ -1776,7 +1776,7 @@ public class Jenkins extends AbstractCIBase implements DirectlyModifiableTopLeve\n      */\n     @Exported(name=\"jobs\")\n     public List<TopLevelItem> getItems() {\n-        return getItems(t->true);\n+        return getItems(t -> true);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyOTIwMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r375729203", "bodyText": "Not important at all, but maybe using stream + predicate?", "author": "varyvol", "createdAt": "2020-02-06T09:40:25Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +57,21 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         List<T> filteredItems = new ArrayList<>();", "originalCommit": "8c560b87bbfad86c81e86f25742402c557e3f68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MTQ0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r377441442", "bodyText": "Implemented", "author": "res0nance", "createdAt": "2020-02-11T04:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyOTIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "c7592c2ae1ec661a965a0341b6551283391c93f2", "chunk": "diff --git a/core/src/main/java/hudson/model/ItemGroup.java b/core/src/main/java/hudson/model/ItemGroup.java\nindex 2492d7184d..f909fd7153 100644\n--- a/core/src/main/java/hudson/model/ItemGroup.java\n+++ b/core/src/main/java/hudson/model/ItemGroup.java\n\n@@ -63,13 +64,9 @@ public interface ItemGroup<T extends Item> extends PersistenceRoot, ModelObject\n      * @since TODO\n      */\n      default Collection<T> getItems(Predicate<T> pred) {\n-         List<T> filteredItems = new ArrayList<>();\n-         for (T item : getItems()) {\n-             if (pred.test(item)) {\n-                 filteredItems.add(item);\n-             }\n-         }\n-         return filteredItems;\n+         return getItems().stream()\n+                          .filter(pred)\n+                          .collect(Collectors.toList());\n      }\n \n     /**\n"}}, {"oid": "215e3c6cd2a51629c4cca38e0350326d3a2f306b", "url": "https://github.com/jenkinsci/jenkins/commit/215e3c6cd2a51629c4cca38e0350326d3a2f306b", "message": "Apply suggestions from code review\n\nCo-Authored-By: Evaristo Guti\u00e9rrez <egutierrez@cloudbees.com>", "committedDate": "2020-02-06T10:24:57Z", "type": "commit"}, {"oid": "c7592c2ae1ec661a965a0341b6551283391c93f2", "url": "https://github.com/jenkinsci/jenkins/commit/c7592c2ae1ec661a965a0341b6551283391c93f2", "message": "Use streams", "committedDate": "2020-02-06T10:31:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r376398398", "bodyText": "Would it make sense to create a default Stream<T> getItemsStream() method so that ItemGroup implementations can supply more efficient stream implementations which would not require creating a full list first. Will be important if we ever do job lazy loading and so on", "author": "oleg-nenashev", "createdAt": "2020-02-07T13:48:57Z", "path": "core/src/main/java/hudson/model/ItemGroup.java", "diffHunk": "@@ -55,6 +58,17 @@\n      */\n     Collection<T> getItems();\n \n+    /**\n+     * Gets all the items in this collection in a read-only view\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+     default Collection<T> getItems(Predicate<T> pred) {\n+         return getItems().stream()", "originalCommit": "c7592c2ae1ec661a965a0341b6551283391c93f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4ODk3MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r376688970", "bodyText": "It probably would be 2 functions\ndefault Stream<T> getItemsStream()\nand\ndefault Stream<T> getItemsStream(Predicate<T> pred)\nSo it still does preauth filtering since once ItemGroup is responsible for security checks. Unless we want to offload that to the caller", "author": "res0nance", "createdAt": "2020-02-08T05:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MTgzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4469#discussion_r377441839", "bodyText": "Added stream methods.", "author": "res0nance", "createdAt": "2020-02-11T04:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5ODM5OA=="}], "type": "inlineReview", "revised_code": {"commit": "6b8071e0cc101d899f21bac9f1d70df042cd9594", "chunk": "diff --git a/core/src/main/java/hudson/model/ItemGroup.java b/core/src/main/java/hudson/model/ItemGroup.java\nindex f909fd7153..33e4581ea4 100644\n--- a/core/src/main/java/hudson/model/ItemGroup.java\n+++ b/core/src/main/java/hudson/model/ItemGroup.java\n\n@@ -69,6 +70,23 @@ public interface ItemGroup<T extends Item> extends PersistenceRoot, ModelObject\n                           .collect(Collectors.toList());\n      }\n \n+    /**\n+     * Gets a read-only stream of all the items in this collection\n+     * @since TODO\n+     */\n+    default Stream<T> getItemsStream() {\n+        return getItems().stream();\n+    }\n+\n+    /**\n+     * Gets a read-only stream of all the items in this collection\n+     * that matches supplied Predicate\n+     * @since TODO\n+     */\n+    default Stream<T> getItemsStream(Predicate<T> pred) {\n+        return getItemsStream().filter(pred);\n+    }\n+\n     /**\n      * Returns the path relative to the context root,\n      * like \"foo/bar/zot/\". Note no leading slash but trailing slash.\n"}}, {"oid": "6b8071e0cc101d899f21bac9f1d70df042cd9594", "url": "https://github.com/jenkinsci/jenkins/commit/6b8071e0cc101d899f21bac9f1d70df042cd9594", "message": "Add stream functions\n\nSigned-off-by: Raihaan Shouhell <raihaan.shouhell@autodesk.com>", "committedDate": "2020-02-11T04:22:54Z", "type": "commit"}, {"oid": "5f6c228a197def1b1e66b34be1b59ba49ef7b12f", "url": "https://github.com/jenkinsci/jenkins/commit/5f6c228a197def1b1e66b34be1b59ba49ef7b12f", "message": "Missed simplification", "committedDate": "2020-02-11T04:24:07Z", "type": "commit"}]}