{"pr_number": 4653, "pr_title": "[JENKINS-61711] Fix validateExecutable to allow Git plugin global config correctly report git executable in PATH", "pr_createdAt": "2020-04-14T18:17:42Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4653", "timeline": [{"oid": "88014bc6f0e267293f63525d2f3ce22da299e4a3", "url": "https://github.com/jenkinsci/jenkins/commit/88014bc6f0e267293f63525d2f3ce22da299e4a3", "message": "Fix git not in path for Git plugin global config\nGit Client Plugin global configuration allows addition of git implementations using GitTool\nThe field Path was not able to identify git executable. The fix involves changing prefix with\nFile.seperator instead of File.pathSeperator. This allows Jenkins to find the git exec at the\nalready existing path.", "committedDate": "2020-04-14T17:01:26Z", "type": "commit"}, {"oid": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13", "url": "https://github.com/jenkinsci/jenkins/commit/caddb62a85b66b5d1ab397e7bb26b75f949d9f13", "message": "Tests added to validate JENKINS-61711 fix", "committedDate": "2020-04-14T17:31:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4OTE4NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4653#discussion_r408389185", "bodyText": "I believe you will receive a more clear assertion failure message if you let Hamcrest compare the objects and assert use not to check they are not equal.  When actual.equals() is used, it hides information that Hamcrest can use to make the assertion failure message clearer.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(actual.equals(FormValidation.error(failMessage)), is(false));\n          \n          \n            \n                    assertThat(actual, not(is(FormValidation.error(failMessage))));", "author": "MarkEWaite", "createdAt": "2020-04-14T19:41:46Z", "path": "test/src/test/java/hudson/util/FormValidationTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package hudson.util;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+public class FormValidationTest {\n+\n+    @Rule\n+    public JenkinsRule j = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-61711\")\n+    @Test\n+    public void testValidateExecutableWithFix() {\n+        // Global Tool Configuration is able to find git executable in system environment at PATH.\n+        FormValidation actual = FormValidation.validateExecutable(\"git\");\n+        assertThat(actual, is(FormValidation.ok()));\n+    }\n+\n+    @Issue(\"JENKINS-61711\")\n+    @Test\n+    public void testValidateExecutableWithoutFix() {\n+        // Without JENKINS-61711 fix, Git installations under Global Tool Configuration is not able to find git\n+        // executable at system PATH despite git exec existing at the path.\n+        FormValidation actual = FormValidation.validateExecutable(\"git\");\n+        String failMessage = \"There's no such executable git in PATH:\";\n+        assertThat(actual.equals(FormValidation.error(failMessage)), is(false));", "originalCommit": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "32a70cd7512f32d8327eca120a07acbf14a6eb39", "chunk": "diff --git a/test/src/test/java/hudson/util/FormValidationTest.java b/test/src/test/java/hudson/util/FormValidationTest.java\nindex eb898c7ece..612082ccae 100644\n--- a/test/src/test/java/hudson/util/FormValidationTest.java\n+++ b/test/src/test/java/hudson/util/FormValidationTest.java\n\n@@ -28,6 +28,6 @@ public class FormValidationTest {\n         // executable at system PATH despite git exec existing at the path.\n         FormValidation actual = FormValidation.validateExecutable(\"git\");\n         String failMessage = \"There's no such executable git in PATH:\";\n-        assertThat(actual.equals(FormValidation.error(failMessage)), is(false));\n+        assertThat(actual, not(is(FormValidation.error(failMessage))));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4OTg0Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4653#discussion_r408389843", "bodyText": "Can you confirm that the test requires a JenkinsRule?  If this is not included, does test execution fail or generate null pointer exceptions?", "author": "MarkEWaite", "createdAt": "2020-04-14T19:42:57Z", "path": "test/src/test/java/hudson/util/FormValidationTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package hudson.util;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+public class FormValidationTest {\n+\n+    @Rule\n+    public JenkinsRule j = new JenkinsRule();", "originalCommit": "caddb62a85b66b5d1ab397e7bb26b75f949d9f13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzMTQwNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4653#discussion_r408431407", "bodyText": "Yes, the test requires a JenkinsRule because the test checks admin permissions for the Jenkins instance implicitly.", "author": "rishabhBudhouliya", "createdAt": "2020-04-14T20:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4OTg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "32a70cd7512f32d8327eca120a07acbf14a6eb39", "chunk": "diff --git a/test/src/test/java/hudson/util/FormValidationTest.java b/test/src/test/java/hudson/util/FormValidationTest.java\nindex eb898c7ece..612082ccae 100644\n--- a/test/src/test/java/hudson/util/FormValidationTest.java\n+++ b/test/src/test/java/hudson/util/FormValidationTest.java\n\n@@ -28,6 +28,6 @@ public class FormValidationTest {\n         // executable at system PATH despite git exec existing at the path.\n         FormValidation actual = FormValidation.validateExecutable(\"git\");\n         String failMessage = \"There's no such executable git in PATH:\";\n-        assertThat(actual.equals(FormValidation.error(failMessage)), is(false));\n+        assertThat(actual, not(is(FormValidation.error(failMessage))));\n     }\n }\n"}}, {"oid": "32a70cd7512f32d8327eca120a07acbf14a6eb39", "url": "https://github.com/jenkinsci/jenkins/commit/32a70cd7512f32d8327eca120a07acbf14a6eb39", "message": "Improve hamcrest comparison in FormValidationTest\n\nCo-Authored-By: Mark Waite <mark.earl.waite@gmail.com>", "committedDate": "2020-04-14T20:59:57Z", "type": "commit"}, {"oid": "33054df3286ac711710adf294b2acec92ec81a3e", "url": "https://github.com/jenkinsci/jenkins/commit/33054df3286ac711710adf294b2acec92ec81a3e", "message": "Merge branch 'master' into JENKINS-61711", "committedDate": "2020-04-14T22:02:26Z", "type": "commit"}, {"oid": "6e60975f81aa30eeae71b87682111bfb3a31327c", "url": "https://github.com/jenkinsci/jenkins/commit/6e60975f81aa30eeae71b87682111bfb3a31327c", "message": "Import matchers for `not`", "committedDate": "2020-04-14T22:23:19Z", "type": "commit"}]}