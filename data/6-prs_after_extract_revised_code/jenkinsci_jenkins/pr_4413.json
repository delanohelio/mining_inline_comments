{"pr_number": 4413, "pr_title": "[JENKINS-60625] Prevent Jenkins page rendering from being blocked when the update center data parsing is in progress", "pr_createdAt": "2020-01-02T22:25:43Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4413", "timeline": [{"oid": "af7c4bece24216fe47f10e83e3488ffdbb5f1565", "url": "https://github.com/jenkinsci/jenkins/commit/af7c4bece24216fe47f10e83e3488ffdbb5f1565", "message": "[JENKINS-60625] Introduced UpdateCenter.isSiteDataReady for use from administrative monitors.", "committedDate": "2020-01-02T22:23:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY2NjMwNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4413#discussion_r362666307", "bodyText": "INFO? Really? Is this so notable?", "author": "daniel-beck", "createdAt": "2020-01-02T23:21:35Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -315,14 +315,24 @@ public Data getData() {\n         return data;\n     }\n \n+    /**\n+     * Whether {@link #getData} might be blocking.\n+     */\n+    boolean hasUnparsedData() {\n+        return data == null && getDataFile().exists();\n+    }\n+\n     /**\n      * Gets the raw update center JSON data.\n      */\n     public JSONObject getJSONObject() {\n         TextFile df = getDataFile();\n         if(df.exists()) {\n+            long start = System.nanoTime();\n             try {\n-                return JSONObject.fromObject(df.read());\n+                JSONObject o = JSONObject.fromObject(df.read());\n+                LOGGER.info(() -> String.format(\"Loaded and parsed %s in %.01fs\", df, (System.nanoTime() - start) / 1_000_000_000.0));", "originalCommit": "af7c4bece24216fe47f10e83e3488ffdbb5f1565", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29fbc9c451aea8e53db10855a359a31dbbbbe0cf", "chunk": "diff --git a/core/src/main/java/hudson/model/UpdateSite.java b/core/src/main/java/hudson/model/UpdateSite.java\nindex 914a2065cb..5d9e0c1002 100644\n--- a/core/src/main/java/hudson/model/UpdateSite.java\n+++ b/core/src/main/java/hudson/model/UpdateSite.java\n\n@@ -331,7 +331,7 @@ public class UpdateSite {\n             long start = System.nanoTime();\n             try {\n                 JSONObject o = JSONObject.fromObject(df.read());\n-                LOGGER.info(() -> String.format(\"Loaded and parsed %s in %.01fs\", df, (System.nanoTime() - start) / 1_000_000_000.0));\n+                LOGGER.fine(() -> String.format(\"Loaded and parsed %s in %.01fs\", df, (System.nanoTime() - start) / 1_000_000_000.0));\n                 return o;\n             } catch (JSONException | IOException e) {\n                 LOGGER.log(Level.SEVERE,\"Failed to parse \"+df,e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY2NzAwMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4413#discussion_r362667003", "bodyText": "It's not public but an explicit @Restricted might be a useful marker anyway. This looks like something we'd rather not expose unless there's a use case?", "author": "daniel-beck", "createdAt": "2020-01-02T23:24:59Z", "path": "core/src/main/java/hudson/model/UpdateSite.java", "diffHunk": "@@ -315,14 +315,24 @@ public Data getData() {\n         return data;\n     }\n \n+    /**\n+     * Whether {@link #getData} might be blocking.\n+     */\n+    boolean hasUnparsedData() {", "originalCommit": "af7c4bece24216fe47f10e83e3488ffdbb5f1565", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY5MjM1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4413#discussion_r362692352", "bodyText": "I would just find it more confusing to place @Restricted on a non-public member. Ideally it would be a compile-time error.", "author": "jglick", "createdAt": "2020-01-03T02:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY2NzAwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkzMjE1MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4413#discussion_r362932150", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                boolean hasUnparsedData() {\n          \n          \n            \n                // Internal use only\n          \n          \n            \n                boolean hasUnparsedData() {\n          \n      \n    \n    \n  \n\nJust want to prevent unintentionally opening this up in the interest of \"cleanup\" or similar.", "author": "daniel-beck", "createdAt": "2020-01-03T19:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY2NzAwMw=="}], "type": "inlineReview", "revised_code": {"commit": "29fbc9c451aea8e53db10855a359a31dbbbbe0cf", "chunk": "diff --git a/core/src/main/java/hudson/model/UpdateSite.java b/core/src/main/java/hudson/model/UpdateSite.java\nindex 914a2065cb..5d9e0c1002 100644\n--- a/core/src/main/java/hudson/model/UpdateSite.java\n+++ b/core/src/main/java/hudson/model/UpdateSite.java\n\n@@ -331,7 +331,7 @@ public class UpdateSite {\n             long start = System.nanoTime();\n             try {\n                 JSONObject o = JSONObject.fromObject(df.read());\n-                LOGGER.info(() -> String.format(\"Loaded and parsed %s in %.01fs\", df, (System.nanoTime() - start) / 1_000_000_000.0));\n+                LOGGER.fine(() -> String.format(\"Loaded and parsed %s in %.01fs\", df, (System.nanoTime() - start) / 1_000_000_000.0));\n                 return o;\n             } catch (JSONException | IOException e) {\n                 LOGGER.log(Level.SEVERE,\"Failed to parse \"+df,e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY2NzQ0OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4413#discussion_r362667448", "bodyText": "Note to self: I missed this change in the original version of the previous review.", "author": "daniel-beck", "createdAt": "2020-01-02T23:27:06Z", "path": "core/src/main/java/hudson/model/UpdateCenter.java", "diffHunk": "@@ -1061,7 +1087,12 @@ public String getDisplayName() {\n             return Messages.UpdateCenter_CoreUpdateMonitor_DisplayName();\n         }\n \n+        @Override\n         public boolean isActivated() {\n+            if (!Jenkins.get().getUpdateCenter().isSiteDataReady()) {", "originalCommit": "af7c4bece24216fe47f10e83e3488ffdbb5f1565", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "29fbc9c451aea8e53db10855a359a31dbbbbe0cf", "url": "https://github.com/jenkinsci/jenkins/commit/29fbc9c451aea8e53db10855a359a31dbbbbe0cf", "message": "Quiet down log message about parsing JSON. (Though it is kind of interesting just how slow it is.)", "committedDate": "2020-01-03T02:29:35Z", "type": "commit"}, {"oid": "e621b6e0cd6ab103b819ade99240908897677057", "url": "https://github.com/jenkinsci/jenkins/commit/e621b6e0cd6ab103b819ade99240908897677057", "message": "Be explicit that UpdateSite.hasUnparsedData is not intended as an API.\n\nCo-Authored-By: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>", "committedDate": "2020-01-03T21:49:04Z", "type": "commit"}]}