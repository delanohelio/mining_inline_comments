{"pr_number": 4933, "pr_title": "Fix deprecation warnings + Update ArtifactArchiver to no longer consult with environment variables injected by EnvironmentContributingActions during the build", "pr_createdAt": "2020-09-13T19:35:39Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4933", "timeline": [{"oid": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d", "url": "https://github.com/jenkinsci/jenkins/commit/cae5a55349f55f7bcef30454f78c1fa5ce7aec6d", "message": "fixed deprecation warnings", "committedDate": "2020-09-13T19:34:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzMxMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r487577310", "bodyText": "Pretty sure this is wrong given what it does.", "author": "daniel-beck", "createdAt": "2020-09-13T21:05:06Z", "path": "core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java", "diffHunk": "@@ -227,7 +227,7 @@ protected boolean markOnline(Computer c) {\n      *      or the computer already marked offline.)\n      */\n     protected boolean markOffline(Computer c, OfflineCause oc) {\n-        if(isIgnored() || c.isTemporarilyOffline()) return false; // noop\n+        if(isIgnored() || c.isOffline()) return false; // noop", "originalCommit": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTI3Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r494411277", "bodyText": "Yes, you are right. It is a little confusing to mark something as deprecated to warn others not to use it.", "author": "StefanSpieker", "createdAt": "2020-09-24T15:28:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzMxMA=="}], "type": "inlineReview", "revised_code": {"commit": "8ce2b77656f943f72459fe2adb49f1426ce8897b", "chunk": "diff --git a/core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java b/core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java\nindex 8794b28108..bba32306f0 100644\n--- a/core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java\n+++ b/core/src/main/java/hudson/node_monitors/AbstractNodeMonitorDescriptor.java\n\n@@ -227,7 +227,7 @@ public abstract class AbstractNodeMonitorDescriptor<T> extends Descriptor<NodeMo\n      *      or the computer already marked offline.)\n      */\n     protected boolean markOffline(Computer c, OfflineCause oc) {\n-        if(isIgnored() || c.isOffline()) return false; // noop\n+        if(isIgnored() || c.isTemporarilyOffline()) return false; // noop\n \n         c.setTemporarilyOffline(true, oc);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzU1Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r487577556", "bodyText": "Makes no sense in context.", "author": "daniel-beck", "createdAt": "2020-09-13T21:07:36Z", "path": "core/src/main/java/hudson/tasks/BuildStep.java", "diffHunk": "@@ -95,7 +95,7 @@\n      * Runs the step over the given build and reports the progress to the listener.\n      *\n      * <p>\n-     * A plugin can contribute the action object to {@link Build#getActions()}\n+     * A plugin can contribute the action object to {@link Build#getAllActions()}", "originalCommit": "cae5a55349f55f7bcef30454f78c1fa5ce7aec6d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTYzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r494411639", "bodyText": "You are right. Thanks also. Reverted.", "author": "StefanSpieker", "createdAt": "2020-09-24T15:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "8ce2b77656f943f72459fe2adb49f1426ce8897b", "chunk": "diff --git a/core/src/main/java/hudson/tasks/BuildStep.java b/core/src/main/java/hudson/tasks/BuildStep.java\nindex 2078f2dbf1..eebe1db0c5 100644\n--- a/core/src/main/java/hudson/tasks/BuildStep.java\n+++ b/core/src/main/java/hudson/tasks/BuildStep.java\n\n@@ -95,7 +95,7 @@ public interface BuildStep {\n      * Runs the step over the given build and reports the progress to the listener.\n      *\n      * <p>\n-     * A plugin can contribute the action object to {@link Build#getAllActions()}\n+     * A plugin can contribute the action object to {@link Build#getActions()} ()}\n      * so that a 'report' becomes a part of the persisted data of {@link Build}.\n      * This is how JUnit plugin attaches the test report to a build page, for example.\n      *\n"}}, {"oid": "8ce2b77656f943f72459fe2adb49f1426ce8897b", "url": "https://github.com/jenkinsci/jenkins/commit/8ce2b77656f943f72459fe2adb49f1426ce8897b", "message": "reverted changes", "committedDate": "2020-09-24T15:26:06Z", "type": "commit"}, {"oid": "db6d72e8735861e33c45e2034339c0216fc7d32c", "url": "https://github.com/jenkinsci/jenkins/commit/db6d72e8735861e33c45e2034339c0216fc7d32c", "message": "fixed typeo in javadoc", "committedDate": "2020-09-24T15:27:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgwMzM2MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r494803361", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                f.perform(build, ws, build.getEnvironment(listener), launcher, listener);\n          \n          \n            \n                                f.perform(build, ws, environment, launcher, listener);\n          \n      \n    \n    \n  \n\n(Unsure but seems more straightforward.)", "author": "daniel-beck", "createdAt": "2020-09-25T07:36:25Z", "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, build.getEnvironment(listener), launcher, listener);", "originalCommit": "db6d72e8735861e33c45e2034339c0216fc7d32c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc", "chunk": "diff --git a/core/src/main/java/hudson/tasks/ArtifactArchiver.java b/core/src/main/java/hudson/tasks/ArtifactArchiver.java\nindex 24e4272dac..3300f58ee8 100644\n--- a/core/src/main/java/hudson/tasks/ArtifactArchiver.java\n+++ b/core/src/main/java/hudson/tasks/ArtifactArchiver.java\n\n@@ -260,7 +260,7 @@ public class ArtifactArchiver extends Recorder implements SimpleBuildStep {\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, build.getEnvironment(listener), launcher, listener);\n+                    f.perform(build, ws, environment, launcher, listener);\n                 }\n             } else {\n                 result = build.getResult();\n"}}, {"oid": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc", "url": "https://github.com/jenkinsci/jenkins/commit/06955fdc6cb5950a3d5bda6111a5a392c9c740bc", "message": "Update core/src/main/java/hudson/tasks/ArtifactArchiver.java\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>", "committedDate": "2020-09-25T12:09:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDk3NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497444974", "bodyText": "This might slightly change the behavior. Missing argument will force environment variable recalculation in https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/jenkins/tasks/SimpleBuildStep.java#L91 . Instead of that, current code will use the environment passed in the beginning of the step. In the edge case build.pickArtifactManager().archive might perform some environment-contributing actions, which will no longer be considered after the change.", "author": "oleg-nenashev", "createdAt": "2020-09-30T11:45:39Z", "path": "core/src/main/java/hudson/tasks/ArtifactArchiver.java", "diffHunk": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, environment, launcher, listener);", "originalCommit": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMjY2MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497712660", "bodyText": "@oleg-nenashev Yeah, I would agree. IIUC since ArtifactManager can be supplied by external storage plugins, it would be ideal to recalculate the environment.\nf.perform(build, ws, run.getEnvironment(listener), launcher, listener);", "author": "stellargo", "createdAt": "2020-09-30T18:22:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDk3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MjQwNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497772404", "bodyText": "No, do not do that! The currently proposed patch is correct.", "author": "jglick", "createdAt": "2020-09-30T20:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NDk3NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MTYxMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r497771613", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        User user = User.get(startedBy, false, Collections.emptyMap());\n          \n          \n            \n                        User user = User.getById(startedBy, false);", "author": "jglick", "createdAt": "2020-09-30T20:10:56Z", "path": "core/src/main/java/hudson/cli/BuildCommand.java", "diffHunk": "@@ -252,7 +253,7 @@ public CLICause(String startedBy){\n \n         @Override\n         public String getShortDescription() {\n-            User user = User.get(startedBy, false);\n+            User user = User.get(startedBy, false, Collections.emptyMap());", "originalCommit": "06955fdc6cb5950a3d5bda6111a5a392c9c740bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b8cd6ae3f3ce7edfe0a909fb8e9a0ccae471668", "chunk": "diff --git a/core/src/main/java/hudson/cli/BuildCommand.java b/core/src/main/java/hudson/cli/BuildCommand.java\nindex 927b2b3a6c..9556e113fb 100644\n--- a/core/src/main/java/hudson/cli/BuildCommand.java\n+++ b/core/src/main/java/hudson/cli/BuildCommand.java\n\n@@ -253,7 +253,7 @@ public class BuildCommand extends CLICommand {\n \n         @Override\n         public String getShortDescription() {\n-            User user = User.get(startedBy, false, Collections.emptyMap());\n+            User user = User.getById(startedBy, false);\n             String userName = user != null ? user.getDisplayName() : startedBy;\n             return Messages.BuildCommand_CLICause_ShortDescription(userName);\n         }\n"}}, {"oid": "0b8cd6ae3f3ce7edfe0a909fb8e9a0ccae471668", "url": "https://github.com/jenkinsci/jenkins/commit/0b8cd6ae3f3ce7edfe0a909fb8e9a0ccae471668", "message": "Update core/src/main/java/hudson/cli/BuildCommand.java\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>", "committedDate": "2020-10-02T06:23:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMTIyNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r498811224", "bodyText": "Fix imports?", "author": "jglick", "createdAt": "2020-10-02T13:11:09Z", "path": "core/src/main/java/jenkins/util/JSONSignatureValidator.java", "diffHunk": "@@ -184,7 +184,7 @@ private FormValidation checkSpecificSignature(JSONObject json, JSONObject signat\n         //\n         // Jenkins should ignore \"digest\"/\"signature\" pair. Accepting it creates a vulnerability that allows\n         // the attacker to inject a fragment at the end of the json.\n-        json.writeCanonical(new OutputStreamWriter(new TeeOutputStream(dos,sos), Charsets.UTF_8)).close();\n+        json.writeCanonical(new OutputStreamWriter(new TeeOutputStream(dos,sos), StandardCharsets.UTF_8)).close();", "originalCommit": "0b8cd6ae3f3ce7edfe0a909fb8e9a0ccae471668", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMjE0MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4933#discussion_r503102140", "bodyText": "Thanks, fixed them.", "author": "StefanSpieker", "createdAt": "2020-10-12T07:51:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMTIyNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a0cd0cac52f882c1c4bc56ba0c123fec47bbb81a", "url": "https://github.com/jenkinsci/jenkins/commit/a0cd0cac52f882c1c4bc56ba0c123fec47bbb81a", "message": "fixed imports", "committedDate": "2020-10-12T07:50:40Z", "type": "commit"}]}