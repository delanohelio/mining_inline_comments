{"pr_number": 4826, "pr_title": "[JENKINS-62889] ParameterDefinition check for validity", "pr_createdAt": "2020-06-30T21:01:16Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4826", "timeline": [{"oid": "22f8a682470f0278e266ac2701aafed41947d4d1", "url": "https://github.com/jenkinsci/jenkins/commit/22f8a682470f0278e266ac2701aafed41947d4d1", "message": "[JENKINS-62889] ParameterDefinition check for validity\n\nAdd a simple API to ParameterDefinition by which a caller can validate a ParameterValue for that specific definition.", "committedDate": "2020-06-30T20:54:44Z", "type": "commit"}, {"oid": "486ed6b53ccb6374bb5b49a984e410c77fcd2780", "url": "https://github.com/jenkinsci/jenkins/commit/486ed6b53ccb6374bb5b49a984e410c77fcd2780", "message": "Update test issue annotation.", "committedDate": "2020-06-30T21:08:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg0MDY1MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4826#discussion_r448840651", "bodyText": "You can extract this piece of code keeping the checkValue method but using the new isValid method. This way you avoid repeating code below in the createValue(String) method.", "author": "MRamonLeon", "createdAt": "2020-07-02T08:36:54Z", "path": "core/src/main/java/hudson/model/ChoiceParameterDefinition.java", "diffHunk": "@@ -141,21 +141,27 @@ public StringParameterValue getDefaultParameterValue() {\n         return new StringParameterValue(getName(), defaultValue, getDescription());\n     }\n \n-    private StringParameterValue checkValue(StringParameterValue value) {\n-        if (!choices.contains(value.value))\n-            throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value.value);\n-        return value;\n+    @Override\n+    public boolean isValid(ParameterValue value) {\n+        return choices.contains(((StringParameterValue) value).getValue());\n     }\n \n     @Override\n     public ParameterValue createValue(StaplerRequest req, JSONObject jo) {\n         StringParameterValue value = req.bindJSON(StringParameterValue.class, jo);\n         value.setDescription(getDescription());\n-        return checkValue(value);\n+        if (!isValid(value)) {\n+            throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value.getValue());\n+        }", "originalCommit": "486ed6b53ccb6374bb5b49a984e410c77fcd2780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6931538feb79362a9005b143d185d882aea2ecb8", "chunk": "diff --git a/core/src/main/java/hudson/model/ChoiceParameterDefinition.java b/core/src/main/java/hudson/model/ChoiceParameterDefinition.java\nindex a040bd2168..6c78a0e8a3 100644\n--- a/core/src/main/java/hudson/model/ChoiceParameterDefinition.java\n+++ b/core/src/main/java/hudson/model/ChoiceParameterDefinition.java\n\n@@ -150,17 +150,19 @@ public class ChoiceParameterDefinition extends SimpleParameterDefinition {\n     public ParameterValue createValue(StaplerRequest req, JSONObject jo) {\n         StringParameterValue value = req.bindJSON(StringParameterValue.class, jo);\n         value.setDescription(getDescription());\n+        checkValue(value, value.getValue());\n+        return value;\n+    }\n+\n+    private void checkValue(StringParameterValue value, String value2) {\n         if (!isValid(value)) {\n-            throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value.getValue());\n+            throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value2);\n         }\n-        return value;\n     }\n \n     public StringParameterValue createValue(String value) {\n         StringParameterValue parameterValue = new StringParameterValue(getName(), value, getDescription());\n-        if (!isValid(parameterValue)) {\n-            throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value);\n-        }\n+        checkValue(parameterValue, value);\n         return parameterValue;\n     }\n \n"}}, {"oid": "6931538feb79362a9005b143d185d882aea2ecb8", "url": "https://github.com/jenkinsci/jenkins/commit/6931538feb79362a9005b143d185d882aea2ecb8", "message": "Remove duplication.", "committedDate": "2020-07-02T16:07:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NjE0OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4826#discussion_r449196148", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *\n          \n          \n            \n                 * @since TODO", "author": "stellargo", "createdAt": "2020-07-02T18:24:54Z", "path": "core/src/main/java/hudson/model/ParameterDefinition.java", "diffHunk": "@@ -225,6 +225,17 @@ public ParameterValue getDefaultParameterValue() {\n         return null;\n     }\n \n+    /**\n+     * Checks whether a given value is valid for this definition.\n+     *", "originalCommit": "6931538feb79362a9005b143d185d882aea2ecb8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4205366df9ba383dcfd835f56fe99f3d74ec724", "chunk": "diff --git a/core/src/main/java/hudson/model/ParameterDefinition.java b/core/src/main/java/hudson/model/ParameterDefinition.java\nindex d456083be8..d33d9a8acf 100644\n--- a/core/src/main/java/hudson/model/ParameterDefinition.java\n+++ b/core/src/main/java/hudson/model/ParameterDefinition.java\n\n@@ -227,7 +227,7 @@ public abstract class ParameterDefinition implements\n \n     /**\n      * Checks whether a given value is valid for this definition.\n-     *\n+     * @since TODO\n      * @param value The value to validate.\n      * @return True if the value is valid for this definition. False if it is invalid.\n      */\n"}}, {"oid": "a4205366df9ba383dcfd835f56fe99f3d74ec724", "url": "https://github.com/jenkinsci/jenkins/commit/a4205366df9ba383dcfd835f56fe99f3d74ec724", "message": "Add since TODO.\n\nCo-authored-by: stellargo <sumitsarinofficial@gmail.com>", "committedDate": "2020-07-02T18:36:08Z", "type": "commit"}]}