{"pr_number": 4905, "pr_title": "Shortlog strip console notes", "pr_createdAt": "2020-08-09T16:00:38Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4905", "timeline": [{"oid": "8cd5ae929909ce6711daef9d697d76eca289c15d", "url": "https://github.com/jenkinsci/jenkins/commit/8cd5ae929909ce6711daef9d697d76eca289c15d", "message": "Do not render parts of serialized a ConsoleNote if output begins in the middle of it. Generalize finding pre/postamble", "committedDate": "2020-08-09T13:45:49Z", "type": "commit"}, {"oid": "857a2ac6b0c669ce4d12a60000f483fe6c7ed86b", "url": "https://github.com/jenkinsci/jenkins/commit/857a2ac6b0c669ce4d12a60000f483fe6c7ed86b", "message": "Do not render parts of serialized a ConsoleNote while writing non-html output as well. Test sample script output.", "committedDate": "2020-08-09T15:16:13Z", "type": "commit"}, {"oid": "f15c85693831ab3aa80c541942727026141aa1f6", "url": "https://github.com/jenkinsci/jenkins/commit/f15c85693831ab3aa80c541942727026141aa1f6", "message": "Add positive scenario test case. Fine-tune implementation", "committedDate": "2020-08-09T15:17:37Z", "type": "commit"}, {"oid": "4a1f96925b6a19e03113eed3c1fec6953a3f0f86", "url": "https://github.com/jenkinsci/jenkins/commit/4a1f96925b6a19e03113eed3c1fec6953a3f0f86", "message": "Render progressive output with explicitly set no preBuffer. Ensure only the relevant lines get processed", "committedDate": "2020-08-09T20:34:48Z", "type": "commit"}, {"oid": "bd4d86e88e9f898c8135f44955ee6b0ffa08e690", "url": "https://github.com/jenkinsci/jenkins/commit/bd4d86e88e9f898c8135f44955ee6b0ffa08e690", "message": "Revert pre-buffer functionality.\nKeep tests in adjusted form.", "committedDate": "2020-09-12T16:49:06Z", "type": "commit"}, {"oid": "be6cd7a33ee7907e9151c71d8892f5e2fc519e7a", "url": "https://github.com/jenkinsci/jenkins/commit/be6cd7a33ee7907e9151c71d8892f5e2fc519e7a", "message": "Push offset forward to start writing log on line beginning", "committedDate": "2020-09-13T11:58:52Z", "type": "commit"}, {"oid": "db7f231702d4b7fc53f01e0a41186ae0de798efd", "url": "https://github.com/jenkinsci/jenkins/commit/db7f231702d4b7fc53f01e0a41186ae0de798efd", "message": "Move and fine-tune tests. Avoid rendering no output in case offset falls on last line", "committedDate": "2020-09-13T14:03:01Z", "type": "commit"}, {"oid": "014b187f3f87ff3b60cd89c59c633f4a39850526", "url": "https://github.com/jenkinsci/jenkins/commit/014b187f3f87ff3b60cd89c59c633f4a39850526", "message": "Merge branch 'master' into shortlog-strip-console-notes", "committedDate": "2020-09-13T14:05:07Z", "type": "commit"}, {"oid": "7c79230a48b52d581cafff5ad1f0679e79a81d03", "url": "https://github.com/jenkinsci/jenkins/commit/7c79230a48b52d581cafff5ad1f0679e79a81d03", "message": "Dont render whole log on offset on the last line. It might be problematic for really large logs", "committedDate": "2020-09-13T14:34:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwOTY4Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4905#discussion_r490109687", "bodyText": "Could you create constants for these magic numbers? It's not easy to understand they are related with the number of lines and characters.", "author": "varyvol", "createdAt": "2020-09-17T09:39:04Z", "path": "core/src/test/java/hudson/model/RunTest.java", "diffHunk": "@@ -262,4 +265,52 @@ public void compareRunsFromDifferentParentsWithSameNumber() throws Exception {\n         assertTrue(r1.compareTo(r2) != 0);\n         assertTrue(treeSet.size() == 2);\n     }\n+\n+    @Test\n+    public void willTriggerLogToStartWithNextFullLine() throws Exception {\n+        assertWriteLogToEquals(\"Sample build output 3.\\nSample build output 4.\\nFinished: SUCCESS.\\n\", 2 * 23 + 10);", "originalCommit": "7c79230a48b52d581cafff5ad1f0679e79a81d03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNTkyNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4905#discussion_r490525925", "bodyText": "Sure thing. I put the whole sample output file to a constant and used its length where possible. I think it should be clear now.", "author": "tszmytka", "createdAt": "2020-09-17T19:56:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwOTY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2e7100202060f4511844f1fc518b67a537faa7d5", "chunk": "diff --git a/core/src/test/java/hudson/model/RunTest.java b/core/src/test/java/hudson/model/RunTest.java\nindex d542f08eb4..ef1715a2f8 100644\n--- a/core/src/test/java/hudson/model/RunTest.java\n+++ b/core/src/test/java/hudson/model/RunTest.java\n\n@@ -268,17 +269,17 @@ public class RunTest {\n \n     @Test\n     public void willTriggerLogToStartWithNextFullLine() throws Exception {\n-        assertWriteLogToEquals(\"Sample build output 3.\\nSample build output 4.\\nFinished: SUCCESS.\\n\", 2 * 23 + 10);\n+        assertWriteLogToEquals(new String(new char[2]).replace(\"\\0\", SAMPLE_BUILD_OUTPUT) + \"Finished: SUCCESS.\\n\", 2 * SAMPLE_BUILD_OUTPUT.length() + 10);\n     }\n \n     @Test\n     public void wontPushOffsetOnRenderingFromBeginning() throws Exception {\n-        assertWriteLogToEquals(\"Sample build output 0.\\nSample build output 1.\\nSample build output 2.\\nSample build output 3.\\nSample build output 4.\\nFinished: SUCCESS.\\n\", 0);\n+        assertWriteLogToEquals(new String(new char[5]).replace(\"\\0\", SAMPLE_BUILD_OUTPUT) + \"Finished: SUCCESS.\\n\", 0);\n     }\n \n     @Test\n     public void willRenderNothingIfOffsetSetOnLastLine() throws Exception {\n-        assertWriteLogToEquals(\"\", 5 * 23 + 6);\n+        assertWriteLogToEquals(\"\", 5 * SAMPLE_BUILD_OUTPUT.length() + 6);\n     }\n \n     private void assertWriteLogToEquals(String expectedOutput, long offset) throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDExMDQ1MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4905#discussion_r490110451", "bodyText": "I don't think we should use * imports on production code. Could you please revert that? Thanks.", "author": "alecharp", "createdAt": "2020-09-17T09:40:21Z", "path": "core/src/main/java/hudson/model/Run.java", "diffHunk": "@@ -41,6 +41,8 @@\n import hudson.console.ConsoleNote;\n import hudson.console.ModelHyperlinkNote;\n import hudson.console.PlainTextConsoleOutputStream;\n+\n+import java.io.*;", "originalCommit": "7c79230a48b52d581cafff5ad1f0679e79a81d03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUzNTk3NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4905#discussion_r490535974", "bodyText": "That's just the IDE trying to bring a bit of order, but ok - I reverted that.\nIs there a style guide published anywhere? Or a \"Recommended IDE settings\" page that I could go through? The conventions get hard to follow very quickly as different parts of the code base seem to hold to different standards.", "author": "tszmytka", "createdAt": "2020-09-17T20:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDExMDQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2e7100202060f4511844f1fc518b67a537faa7d5", "chunk": "diff --git a/core/src/main/java/hudson/model/Run.java b/core/src/main/java/hudson/model/Run.java\nindex bd436efce8..d8ee749920 100644\n--- a/core/src/main/java/hudson/model/Run.java\n+++ b/core/src/main/java/hudson/model/Run.java\n\n@@ -41,8 +41,6 @@ import hudson.console.ConsoleLogFilter;\n import hudson.console.ConsoleNote;\n import hudson.console.ModelHyperlinkNote;\n import hudson.console.PlainTextConsoleOutputStream;\n-\n-import java.io.*;\n import java.nio.file.Files;\n import java.nio.file.InvalidPathException;\n import java.nio.file.StandardOpenOption;\n"}}, {"oid": "2e7100202060f4511844f1fc518b67a537faa7d5", "url": "https://github.com/jenkinsci/jenkins/commit/2e7100202060f4511844f1fc518b67a537faa7d5", "message": "Style adjustments", "committedDate": "2020-09-17T20:16:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0OTQ4Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4905#discussion_r498749482", "bodyText": "So it will print the entire log if we hit the end of the stream, which defeats purpose of offset for large logs. Should not be a problem for real use-cases, but we might want to retain original behavior.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    start = (r == -1)? 0 : start + 1;\n          \n          \n            \n                                    start = (r == -1)? 0 : offset + 1;", "author": "oleg-nenashev", "createdAt": "2020-10-02T10:47:11Z", "path": "core/src/main/java/hudson/model/Run.java", "diffHunk": "@@ -1538,7 +1539,19 @@ public String toString() {\n      * @since 1.349\n      */\n     public void writeLogTo(long offset, @NonNull XMLOutput out) throws IOException {\n-        getLogText().writeHtmlTo(offset, out.asWriter());\n+        long start = offset;\n+        if (offset > 0) {\n+            try (BufferedInputStream bufferedInputStream = new BufferedInputStream(getLogInputStream())) {\n+                if (offset == bufferedInputStream.skip(offset)) {\n+                    int r;\n+                    do {\n+                        r = bufferedInputStream.read();\n+                        start = (r == -1)? 0 : start + 1;", "originalCommit": "2e7100202060f4511844f1fc518b67a537faa7d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0Njg3NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4905#discussion_r499146874", "bodyText": "The code change is not clear to me. My idea was to advance the start position for each byte that is different than \\n. What this change would do is re-set start to the value of offset + 1 multiple times - offset doesn't get updated anywhere. Can you please explain what you had in mind?\nThis immediately breaks 2 tests which I think are valid use cases.", "author": "tszmytka", "createdAt": "2020-10-03T13:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0OTQ4Mg=="}], "type": "inlineReview", "revised_code": null}]}