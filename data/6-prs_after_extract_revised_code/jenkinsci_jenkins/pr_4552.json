{"pr_number": 4552, "pr_title": "JENKINS-56937 JCasC support for admin monitors", "pr_createdAt": "2020-03-07T11:19:23Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4552", "timeline": [{"oid": "87adc908830d60326857d8f25be6dd6b67688d76", "url": "https://github.com/jenkinsci/jenkins/commit/87adc908830d60326857d8f25be6dd6b67688d76", "message": "JENKINS-56937 JCasC support for admin monitors", "committedDate": "2020-03-07T11:14:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389247682", "bodyText": "https://github.com/search?q=org%3Ajenkinsci+getDisabledAdministrativeMonitors&type=Code", "author": "timja", "createdAt": "2020-03-07T11:20:53Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){", "originalCommit": "87adc908830d60326857d8f25be6dd6b67688d76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNDkzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391514938", "bodyText": "So what's buggy about the CopyOnWriteArraySet?", "author": "rsandell", "createdAt": "2020-03-12T10:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODcxNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391528714", "bodyText": "https://github.com/search?q=org%3Ajenkinsci+getDisabledAdministrativeMonitors&type=Code\n\nAs expected, given it was @Restricted.", "author": "daniel-beck", "createdAt": "2020-03-12T10:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYwMDc0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r392600742", "bodyText": "So what's buggy about the CopyOnWriteArraySet?\n\nJCasC doesn't support it", "author": "timja", "createdAt": "2020-03-14T16:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyMzQ0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397223442", "bodyText": "to avoid sharing the same data structure w/ the UI, why not just do something like this?\n  synchronized(this.disabledAdministrativeMonitors) { return new HashSet<String>(this.disabledAdministrativeMonitors); };\n\n... then any client of this class doesn't need to worry about concurrency concerns in the internal data structure; those concerns remain .. internal to this implementation", "author": "jdef", "createdAt": "2020-03-24T15:03:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzMTI5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397231290", "bodyText": "because the returned set is modified by appending to it, it could be made immutable and then only modified via the setter instead possibly, if that would be better?", "author": "timja", "createdAt": "2020-03-24T15:14:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5MjI2Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397292266", "bodyText": "could wrap w/ immutability. but what are you trying to guard against, really? is the intent that clients should fail fast when they try to make a modification that will never go anywhere? if so, then immutable is fine. otherwise, the i think the approach that i suggested already prevents the client from making accidental changes to an internal data structure", "author": "jdef", "createdAt": "2020-03-24T16:30:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5NTMxMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397295311", "bodyText": "It's to prevent concurrent modification exceptions. If you modify a non-threadsafe collection while iterating, it throws an exception.", "author": "jvz", "createdAt": "2020-03-24T16:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4ODM4Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397388382", "bodyText": "The issue is that clients modify this set, so returning a copy prevents them updating it", "author": "timja", "createdAt": "2020-03-24T18:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5MjA2Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397392066", "bodyText": "ouch. any reason that clients can't be modified to invoke the setter instead of relying on directly mutating the internal state of this object? the current situation sounds like a pretty leaky design", "author": "jdef", "createdAt": "2020-03-24T19:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDQyMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397394422", "bodyText": "I suggested modifying it a couple of comments up, will take a look", "author": "timja", "createdAt": "2020-03-24T19:04:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0NDA2OA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397744068", "bodyText": "have changed, PTAL", "author": "timja", "createdAt": "2020-03-25T10:19:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4OTgxOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397789818", "bodyText": "suggest wrapping this return ... statement w/ synchronized(disabledAdministrativeMonitors) {} as suggested above, since the new HashSet<>(..) operation will iterate over the collection passed to it", "author": "jdef", "createdAt": "2020-03-25T11:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzY4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1083c29e6d0c2880801dbb05df9f06592c0215aa", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex e796860671..0c9a1d7356 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,11 +89,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n     /**\n      * Get the disabled administrative monitors\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389262036", "bodyText": "Probably should be cloned here instead of taking a reference to an external object", "author": "res0nance", "createdAt": "2020-03-07T15:27:35Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n+        this.disabledAdministrativeMonitors = disabledAdministrativeMonitors;", "originalCommit": "87adc908830d60326857d8f25be6dd6b67688d76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODU5Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389318597", "bodyText": "Why\u2019s that? It\u2019s just a setter", "author": "timja", "createdAt": "2020-03-07T23:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODg3MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389318871", "bodyText": "both stapler and jcasc will handle creating a clone that should be safe for Jenkins core to use.", "author": "jetersen", "createdAt": "2020-03-07T23:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM3MjI5Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389372296", "bodyText": "Spotbugs normally warns against taking a reference to an outside object", "author": "res0nance", "createdAt": "2020-03-08T14:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM3MjQ1MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389372450", "bodyText": "not on collections or simple object types.\nSpotbugs would complain on date objects.", "author": "jetersen", "createdAt": "2020-03-08T14:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjAzNg=="}], "type": "inlineReview", "revised_code": {"commit": "1083c29e6d0c2880801dbb05df9f06592c0215aa", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex e796860671..0c9a1d7356 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,11 +89,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n     /**\n      * Get the disabled administrative monitors\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjE5Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r389262196", "bodyText": "There is a gigantic comment above that you might want to consider removing", "author": "res0nance", "createdAt": "2020-03-07T15:30:19Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();", "originalCommit": "87adc908830d60326857d8f25be6dd6b67688d76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODA2NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391528065", "bodyText": "It was probably already obsolete after #3873", "author": "daniel-beck", "createdAt": "2020-03-12T10:29:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MjE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1083c29e6d0c2880801dbb05df9f06592c0215aa", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex e796860671..0c9a1d7356 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,11 +89,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n     /**\n      * Get the disabled administrative monitors\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNDQwNg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r391514406", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){\n          \n          \n            \n                public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "author": "alecharp", "createdAt": "2020-03-12T10:04:45Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -93,13 +93,26 @@ protected void killComputer(Computer c) {\n     * Package-protected, but accessed API\n     * ============================================================================================================== */\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors){", "originalCommit": "87adc908830d60326857d8f25be6dd6b67688d76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1083c29e6d0c2880801dbb05df9f06592c0215aa", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex e796860671..0c9a1d7356 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,11 +89,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    private Set<String> disabledAdministrativeMonitors = new HashSet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n     /**\n      * Get the disabled administrative monitors\n"}}, {"oid": "f33d76323020021025ea5084a1b779181589dc69", "url": "https://github.com/jenkinsci/jenkins/commit/f33d76323020021025ea5084a1b779181589dc69", "message": "Merge branch 'master' into disable-admin-monitors", "committedDate": "2020-03-14T16:06:24Z", "type": "commit"}, {"oid": "1083c29e6d0c2880801dbb05df9f06592c0215aa", "url": "https://github.com/jenkinsci/jenkins/commit/1083c29e6d0c2880801dbb05df9f06592c0215aa", "message": "Removed out of date comment and small tweaks", "committedDate": "2020-03-14T16:27:27Z", "type": "commit"}, {"oid": "6cfe46b25fb3d03d095135a1bc77de8c9ecd840b", "url": "https://github.com/jenkinsci/jenkins/commit/6cfe46b25fb3d03d095135a1bc77de8c9ecd840b", "message": "Formatting", "committedDate": "2020-03-14T16:28:14Z", "type": "commit"}, {"oid": "1a3f01025f53e3cf78d53b508531deb70757fb62", "url": "https://github.com/jenkinsci/jenkins/commit/1a3f01025f53e3cf78d53b508531deb70757fb62", "message": "Use copy on write in setter", "committedDate": "2020-03-14T19:39:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDMzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r392664339", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n          \n          \n            \n                public synchronized void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "author": "timja", "createdAt": "2020-03-15T11:25:41Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n-    \n+\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {", "originalCommit": "1a3f01025f53e3cf78d53b508531deb70757fb62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIyNjQzNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397226437", "bodyText": "why the instance-level lock suggestion, vs. what's been implemented here. seems like overkill", "author": "jdef", "createdAt": "2020-03-24T15:07:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDMzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4NzcxNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397387717", "bodyText": "This is outdated", "author": "timja", "createdAt": "2020-03-24T18:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "34ba209f2c219c5a44c845d6cb80e0151ad7e8b0", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex e104f3d928..8adacbaa59 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,14 +89,14 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private volatile Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n     /**\n      * Get the disabled administrative monitors\n      *\n      * @since TODO\n      */\n-    public Set<String> getDisabledAdministrativeMonitors(){\n+    public synchronized Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY2NDQzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r392664438", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n          \n          \n            \n                private volatile Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();", "author": "timja", "createdAt": "2020-03-15T11:26:52Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();", "originalCommit": "1a3f01025f53e3cf78d53b508531deb70757fb62", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "34ba209f2c219c5a44c845d6cb80e0151ad7e8b0", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex e104f3d928..8adacbaa59 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,14 +89,14 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    private Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private volatile Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n     /**\n      * Get the disabled administrative monitors\n      *\n      * @since TODO\n      */\n-    public Set<String> getDisabledAdministrativeMonitors(){\n+    public synchronized Set<String> getDisabledAdministrativeMonitors(){\n     \treturn disabledAdministrativeMonitors;\n     }\n \n"}}, {"oid": "34ba209f2c219c5a44c845d6cb80e0151ad7e8b0", "url": "https://github.com/jenkinsci/jenkins/commit/34ba209f2c219c5a44c845d6cb80e0151ad7e8b0", "message": "synchronized", "committedDate": "2020-03-16T16:33:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2OTY0Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393169642", "bodyText": "My mistake; this will likely still need to be either CopyOnWriteArraySet or use Collections.synchronizedSet() around this. Otherwise, a caller that iterates on the result of getDisabledAdministrativeMonitors() may get a ConcurrentModificationException when another thread calls disable() which modifies the set.\nAlternatively, you can update getDisabledAdministrativeMonitors to wrap the set in a new HashSet to copy the set and prevent the issue entirely.", "author": "jvz", "createdAt": "2020-03-16T16:54:59Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,26 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n-\n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    private volatile Set<String> disabledAdministrativeMonitors = new HashSet<>();", "originalCommit": "34ba209f2c219c5a44c845d6cb80e0151ad7e8b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3NTUwOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393175508", "bodyText": "Alternatively, you can update getDisabledAdministrativeMonitors to wrap the set in a new HashSet to copy the set and prevent the issue entirely.\n\nThat doesn't work as the set is modified through the getter, by calling add on it.", "author": "timja", "createdAt": "2020-03-16T17:01:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE2OTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "57c47ab385ac77cdab76bbba39a3e6a2eaf1a1f7", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex 8adacbaa59..a53e35b120 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,7 +89,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    private volatile Set<String> disabledAdministrativeMonitors = new HashSet<>();\n+    private volatile Set<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n \n     /**\n      * Get the disabled administrative monitors\n"}}, {"oid": "57c47ab385ac77cdab76bbba39a3e6a2eaf1a1f7", "url": "https://github.com/jenkinsci/jenkins/commit/57c47ab385ac77cdab76bbba39a3e6a2eaf1a1f7", "message": "Back to copyonwrite", "committedDate": "2020-03-16T17:00:00Z", "type": "commit"}, {"oid": "5301e58ee5c8ecfa1abc4be0c46f2d277233d3df", "url": "https://github.com/jenkinsci/jenkins/commit/5301e58ee5c8ecfa1abc4be0c46f2d277233d3df", "message": "Tweaks to thread safety", "committedDate": "2020-03-16T18:42:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0MTYzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393241638", "bodyText": "This can just return the object. The synchronization will happen either implicitly through calls to the Set methods or when we synchronize on the object explicitly in the setter.", "author": "jvz", "createdAt": "2020-03-16T18:49:31Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,31 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n+        synchronized (disabledAdministrativeMonitors) {", "originalCommit": "5301e58ee5c8ecfa1abc4be0c46f2d277233d3df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "880d83473df0ad36e3d56e5a7f31fe5e134ce692", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex d6f0da2c5f..fc43633e6b 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -97,9 +97,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n      * @since TODO\n      */\n     public Set<String> getDisabledAdministrativeMonitors(){\n-        synchronized (disabledAdministrativeMonitors) {\n-            return disabledAdministrativeMonitors;\n-        }\n+        return disabledAdministrativeMonitors;\n     }\n \n     /**\n"}}, {"oid": "880d83473df0ad36e3d56e5a7f31fe5e134ce692", "url": "https://github.com/jenkinsci/jenkins/commit/880d83473df0ad36e3d56e5a7f31fe5e134ce692", "message": "Last change hopefully", "committedDate": "2020-03-16T18:58:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1MzQ2Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393253462", "bodyText": "Is it really needed to have synchronized method as well as inside the method?", "author": "jetersen", "createdAt": "2020-03-16T19:09:07Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());\n \n-    /*package*/ final CopyOnWriteArraySet<String> disabledAdministrativeMonitors = new CopyOnWriteArraySet<>();\n+    /**\n+     * Get the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public Set<String> getDisabledAdministrativeMonitors(){\n+        return disabledAdministrativeMonitors;\n+    }\n \n-    @Restricted(NoExternalUse.class)\n-    public CopyOnWriteArraySet<String> getDisabledAdministrativeMonitors(){\n-    \treturn disabledAdministrativeMonitors;\n+    /**\n+     * Set the disabled administrative monitors\n+     *\n+     * @since TODO\n+     */\n+    public synchronized void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n+        synchronized (this.disabledAdministrativeMonitors) {", "originalCommit": "880d83473df0ad36e3d56e5a7f31fe5e134ce692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1ODQ5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393258490", "bodyText": "Looks like I missed that. The method doesn't need to be synchronized any more (and furthermore, the synchronized on the method is using a different lock than the one we're interested in).", "author": "jvz", "createdAt": "2020-03-16T19:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI1MzQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fc046440df3dbb71345af204829762c54e72c4cf", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex fc43633e6b..99e91b3fad 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -105,7 +105,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n      *\n      * @since TODO\n      */\n-    public synchronized void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n+    public void setDisabledAdministrativeMonitors(Set<String> disabledAdministrativeMonitors) {\n         synchronized (this.disabledAdministrativeMonitors) {\n             this.disabledAdministrativeMonitors.clear();\n             this.disabledAdministrativeMonitors.addAll(disabledAdministrativeMonitors);\n"}}, {"oid": "fc046440df3dbb71345af204829762c54e72c4cf", "url": "https://github.com/jenkinsci/jenkins/commit/fc046440df3dbb71345af204829762c54e72c4cf", "message": "Remove synchronized on method", "committedDate": "2020-03-16T20:11:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393379590", "bodyText": "The docs of synchronizedSet says (I've never used this before)\nReturns a synchronized (thread-safe) set backed by the specified set. In order to guarantee serial access, it is critical that all access to the backing set is accomplished through the returned set.\n\nIt is imperative that the user manually synchronize on the returned set when iterating over it:\n\n  Set s = Collections.synchronizedSet(new HashSet());\n      ...\n  synchronized (s) {\n      Iterator i = s.iterator(); // Must be in the synchronized block\n      while (i.hasNext())\n          foo(i.next());\n  }\n \n\nFailure to follow this advice may result in non-deterministic behavior. \n\nI'm not sure what it means by Failure to follow this advice may result in non-deterministic behavior. in here", "author": "res0nance", "createdAt": "2020-03-17T00:17:42Z", "path": "core/src/main/java/hudson/model/AbstractCIBase.java", "diffHunk": "@@ -89,17 +89,29 @@ protected void killComputer(Computer c) {\n         c.kill();\n     }\n \n-    /* =================================================================================================================\n-    * Package-protected, but accessed API\n-    * ============================================================================================================== */\n+    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());", "originalCommit": "fc046440df3dbb71345af204829762c54e72c4cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ4NzkwOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393487909", "bodyText": "There's no direct iteration of this field,\nthere's 4 usages of it,\n\nenable / disable, calls add /remove\nisEnabled, calls contains\nthe UI, which iterates over it, not sure if there's much we can do there,\njcasc, it will use the setter to update it which will clear the set and use what jcasc sets.", "author": "timja", "createdAt": "2020-03-17T07:33:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUwMjMwOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393502308", "bodyText": "My worry is what is the worst that could happen? Will it throw an exception or will it just show old data?\nIf its the latter then I think its alright but the documentation doesn't seem perfectly clear", "author": "res0nance", "createdAt": "2020-03-17T08:08:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0NDgxNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393644814", "bodyText": "#3687 (comment) was the (un)funnest one I've seen. Way up there in my hall of shame \u2639\ufe0f", "author": "daniel-beck", "createdAt": "2020-03-17T12:32:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNDQxMA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r393904410", "bodyText": "That's only relevant because iterating over a collection is technically n operations, not 1. You need to synchronize for the duration of the logical operation, not n separate synchronizations for n items in the collection. This is all about fencing the allowed execution timeline based on \"happens-before\" rules in Java.\nSo, in a sense, no, peppering synchronized and volatile everywhere isn't good enough to solve every concurrency issue! \ud83d\ude05", "author": "jvz", "createdAt": "2020-03-17T19:00:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTU5MA=="}], "type": "inlineReview", "revised_code": {"commit": "51e1883436a839a22360bf78dc84f3f8d03f6899", "chunk": "diff --git a/core/src/main/java/hudson/model/AbstractCIBase.java b/core/src/main/java/hudson/model/AbstractCIBase.java\nindex 99e91b3fad..4bc9da1ef8 100644\n--- a/core/src/main/java/hudson/model/AbstractCIBase.java\n+++ b/core/src/main/java/hudson/model/AbstractCIBase.java\n\n@@ -89,7 +89,7 @@ public abstract class AbstractCIBase extends Node implements ItemGroup<TopLevelI\n         c.kill();\n     }\n \n-    private final Set<String> disabledAdministrativeMonitors = Collections.synchronizedSet(new HashSet<>());\n+    private final Set<String> disabledAdministrativeMonitors = new HashSet<>();\n \n     /**\n      * Get the disabled administrative monitors\n"}}, {"oid": "d53453e67ef1a322f141a3bece0e67e412b7060a", "url": "https://github.com/jenkinsci/jenkins/commit/d53453e67ef1a322f141a3bece0e67e412b7060a", "message": "Merge branch 'master' into disable-admin-monitors", "committedDate": "2020-03-25T07:58:44Z", "type": "commit"}, {"oid": "51e1883436a839a22360bf78dc84f3f8d03f6899", "url": "https://github.com/jenkinsci/jenkins/commit/51e1883436a839a22360bf78dc84f3f8d03f6899", "message": "Simplify code", "committedDate": "2020-03-25T08:12:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NTk3NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397685974", "bodyText": "This seems dangerous, you should check if value is in the set before trying to add or remove it.", "author": "jetersen", "createdAt": "2020-03-25T08:43:00Z", "path": "core/src/main/java/hudson/model/AdministrativeMonitor.java", "diffHunk": "@@ -118,8 +118,12 @@ public final String getSearchUrl() {\n     public void disable(boolean value) throws IOException {\n         AbstractCIBase jenkins = Jenkins.get();\n         Set<String> set = jenkins.getDisabledAdministrativeMonitors();\n-        if(value)   set.add(id);\n-        else        set.remove(id);\n+        if (value) {\n+            set.add(id);\n+        } else {\n+            set.remove(id);\n+        }", "originalCommit": "51e1883436a839a22360bf78dc84f3f8d03f6899", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NzYzNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4552#discussion_r397687634", "bodyText": "Never mind, hashset is safe to remove or add:\nhttp://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashSet.java", "author": "jetersen", "createdAt": "2020-03-25T08:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NTk3NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "e8bc527dd0e6eb031f387eda9364eae7c6891da5", "url": "https://github.com/jenkinsci/jenkins/commit/e8bc527dd0e6eb031f387eda9364eae7c6891da5", "message": "Update sync", "committedDate": "2020-03-25T14:24:29Z", "type": "commit"}]}