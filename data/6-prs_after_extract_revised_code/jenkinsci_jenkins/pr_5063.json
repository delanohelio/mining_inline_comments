{"pr_number": 5063, "pr_title": "Load admin monitors popup content via ajax", "pr_createdAt": "2020-11-19T16:16:22Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/5063", "timeline": [{"oid": "4a19822bf00c3826fae8c496283c53fd467cc7ed", "url": "https://github.com/jenkinsci/jenkins/commit/4a19822bf00c3826fae8c496283c53fd467cc7ed", "message": "Admin monitors popup is now loaded through an API", "committedDate": "2020-11-19T14:05:09Z", "type": "commit"}, {"oid": "1e8a4e914ec5a7caf91ab4bca22cf5603e54a923", "url": "https://github.com/jenkinsci/jenkins/commit/1e8a4e914ec5a7caf91ab4bca22cf5603e54a923", "message": "Fixes form submission inside the popup\n\n- Wraps it in an l:ajax template so that proper variables are set\n- Applies the csrf crumbs to the forms after the popup is constructed", "committedDate": "2020-11-19T16:09:56Z", "type": "commit"}, {"oid": "f98ad85bc852d81c8d58de602cb9bf4ad8e1342d", "url": "https://github.com/jenkinsci/jenkins/commit/f98ad85bc852d81c8d58de602cb9bf4ad8e1342d", "message": "Handle authorization and empty state", "committedDate": "2020-11-19T16:10:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NTM3Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r527075372", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n          \n          \n            \n                private final List<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();", "author": "timja", "createdAt": "2020-11-19T17:39:10Z", "path": "core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package jenkins.management;\n+\n+import hudson.model.AdministrativeMonitor;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Restricted(NoExternalUse.class)\n+public class AdministrativeMonitorsApiData {\n+    private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();", "originalCommit": "f98ad85bc852d81c8d58de602cb9bf4ad8e1342d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9db13b564ed6b8afc96695be6e9069c81ab4c4b", "chunk": "diff --git a/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java b/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\nindex c88c56efdf..e2244e40ee 100644\n--- a/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\n+++ b/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\n\n@@ -9,17 +9,17 @@ import java.util.List;\n \n @Restricted(NoExternalUse.class)\n public class AdministrativeMonitorsApiData {\n-    private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n+    private final List<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n \n     AdministrativeMonitorsApiData(List<AdministrativeMonitor> monitors) {\n         monitorsList.addAll(monitors);\n     }\n \n-    public ArrayList<AdministrativeMonitor> getMonitorsList() {\n+    public List<AdministrativeMonitor> getMonitorsList() {\n         return this.monitorsList;\n     }\n \n     public boolean hasActiveMonitors() {\n-        return  this.monitorsList.size() > 0;\n+        return !this.monitorsList.isEmpty();\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NTQ1NA==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r527075454", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ArrayList<AdministrativeMonitor> getMonitorsList() {\n          \n          \n            \n                public List<AdministrativeMonitor> getMonitorsList() {", "author": "timja", "createdAt": "2020-11-19T17:39:17Z", "path": "core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package jenkins.management;\n+\n+import hudson.model.AdministrativeMonitor;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Restricted(NoExternalUse.class)\n+public class AdministrativeMonitorsApiData {\n+    private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n+\n+    AdministrativeMonitorsApiData(List<AdministrativeMonitor> monitors) {\n+        monitorsList.addAll(monitors);\n+    }\n+\n+    public ArrayList<AdministrativeMonitor> getMonitorsList() {", "originalCommit": "f98ad85bc852d81c8d58de602cb9bf4ad8e1342d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9db13b564ed6b8afc96695be6e9069c81ab4c4b", "chunk": "diff --git a/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java b/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\nindex c88c56efdf..e2244e40ee 100644\n--- a/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\n+++ b/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\n\n@@ -9,17 +9,17 @@ import java.util.List;\n \n @Restricted(NoExternalUse.class)\n public class AdministrativeMonitorsApiData {\n-    private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n+    private final List<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n \n     AdministrativeMonitorsApiData(List<AdministrativeMonitor> monitors) {\n         monitorsList.addAll(monitors);\n     }\n \n-    public ArrayList<AdministrativeMonitor> getMonitorsList() {\n+    public List<AdministrativeMonitor> getMonitorsList() {\n         return this.monitorsList;\n     }\n \n     public boolean hasActiveMonitors() {\n-        return  this.monitorsList.size() > 0;\n+        return !this.monitorsList.isEmpty();\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NTYzOQ==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r527075639", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return  this.monitorsList.size() > 0;\n          \n          \n            \n                    return !this.monitorsList.isEmpty();", "author": "timja", "createdAt": "2020-11-19T17:39:32Z", "path": "core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package jenkins.management;\n+\n+import hudson.model.AdministrativeMonitor;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Restricted(NoExternalUse.class)\n+public class AdministrativeMonitorsApiData {\n+    private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n+\n+    AdministrativeMonitorsApiData(List<AdministrativeMonitor> monitors) {\n+        monitorsList.addAll(monitors);\n+    }\n+\n+    public ArrayList<AdministrativeMonitor> getMonitorsList() {\n+        return this.monitorsList;\n+    }\n+\n+    public boolean hasActiveMonitors() {\n+        return  this.monitorsList.size() > 0;", "originalCommit": "f98ad85bc852d81c8d58de602cb9bf4ad8e1342d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9db13b564ed6b8afc96695be6e9069c81ab4c4b", "chunk": "diff --git a/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java b/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\nindex c88c56efdf..e2244e40ee 100644\n--- a/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\n+++ b/core/src/main/java/jenkins/management/AdministrativeMonitorsApiData.java\n\n@@ -9,17 +9,17 @@ import java.util.List;\n \n @Restricted(NoExternalUse.class)\n public class AdministrativeMonitorsApiData {\n-    private final ArrayList<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n+    private final List<AdministrativeMonitor> monitorsList = new ArrayList<AdministrativeMonitor>();\n \n     AdministrativeMonitorsApiData(List<AdministrativeMonitor> monitors) {\n         monitorsList.addAll(monitors);\n     }\n \n-    public ArrayList<AdministrativeMonitor> getMonitorsList() {\n+    public List<AdministrativeMonitor> getMonitorsList() {\n         return this.monitorsList;\n     }\n \n     public boolean hasActiveMonitors() {\n-        return  this.monitorsList.size() > 0;\n+        return !this.monitorsList.isEmpty();\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"oid": "e9db13b564ed6b8afc96695be6e9069c81ab4c4b", "url": "https://github.com/jenkinsci/jenkins/commit/e9db13b564ed6b8afc96695be6e9069c81ab4c4b", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>", "committedDate": "2020-11-20T09:11:18Z", "type": "commit"}, {"oid": "2c14133fb07a6fc9a46946f4dc2e2c898ebc04a7", "url": "https://github.com/jenkinsci/jenkins/commit/2c14133fb07a6fc9a46946f4dc2e2c898ebc04a7", "message": "Fix JS error where there were monitors of only one kind", "committedDate": "2020-11-20T09:11:47Z", "type": "commit"}, {"oid": "250cbb7f4028b06597d4df0bd9b6b753c4373aaf", "url": "https://github.com/jenkinsci/jenkins/commit/250cbb7f4028b06597d4df0bd9b6b753c4373aaf", "message": "Revert changes to indentation of inline JS", "committedDate": "2020-11-20T09:11:47Z", "type": "commit"}, {"oid": "de58052ca0ae56ad2c472e67c9b0308441804dda", "url": "https://github.com/jenkinsci/jenkins/commit/de58052ca0ae56ad2c472e67c9b0308441804dda", "message": "Clarify ESC keyCode with a comment", "committedDate": "2020-11-20T09:14:04Z", "type": "commit"}, {"oid": "8c8f403a87bd58d4a8cd7683ec5e50b4a0f2c230", "url": "https://github.com/jenkinsci/jenkins/commit/8c8f403a87bd58d4a8cd7683ec5e50b4a0f2c230", "message": "Update core/src/main/resources/jenkins/management/AdministrativeMonitorsDecorator/resources.js\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>", "committedDate": "2020-11-20T09:34:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwMzMzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r528303338", "bodyText": "Should these calls have explicit permission checks?", "author": "oleg-nenashev", "createdAt": "2020-11-22T08:49:39Z", "path": "core/src/main/java/jenkins/management/AdministrativeMonitorsApi.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package jenkins.management;\n+\n+import hudson.Extension;\n+import hudson.model.AdministrativeMonitor;\n+import hudson.model.PageDecorator;\n+import hudson.model.RootAction;\n+import jenkins.model.Jenkins;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+import org.kohsuke.stapler.StaplerRequest;\n+import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.verb.GET;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+@Extension\n+@Restricted(NoExternalUse.class)\n+public class AdministrativeMonitorsApi implements RootAction {\n+    @GET", "originalCommit": "8c8f403a87bd58d4a8cd7683ec5e50b4a0f2c230", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU1Njc3OA==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r528556778", "bodyText": "The authorization is implicit through the decorator. That said I think it would make sense to have more explicit auth. I have no idea how to got about this. If anyone wants to commit straight to my branch please go ahead :D", "author": "fqueiruga", "createdAt": "2020-11-23T09:13:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwMzMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyNTg1NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r528625855", "bodyText": "@daniel-beck @Wadeck  how would you go about this?", "author": "fqueiruga", "createdAt": "2020-11-23T11:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwMzMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzMTE5Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r528631196", "bodyText": "it's quite common to rely on permission checks in this way as far as I know", "author": "timja", "createdAt": "2020-11-23T11:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwMzMzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5ODgyMA==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r529298820", "bodyText": "In this case it's a bit special because the permission is checked deeper in the code. It was recently changed from Admin to SystemRead. It means that if we have an additional check here, it's a bit a duplicate code, so I am fine with the current approach.\nOf course if the method is starting to do something else, the explicit permission will be required, but we should not be future-proof without good rational.", "author": "Wadeck", "createdAt": "2020-11-24T08:46:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwMzMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "40a28adf55ad9dff91be9ded5b99d323bac1a793", "chunk": "diff --git a/core/src/main/java/jenkins/management/AdministrativeMonitorsApi.java b/core/src/main/java/jenkins/management/AdministrativeMonitorsApi.java\nindex 51361cd6db..de811b62a7 100644\n--- a/core/src/main/java/jenkins/management/AdministrativeMonitorsApi.java\n+++ b/core/src/main/java/jenkins/management/AdministrativeMonitorsApi.java\n\n@@ -1,7 +1,6 @@\n package jenkins.management;\n \n import hudson.Extension;\n-import hudson.model.AdministrativeMonitor;\n import hudson.model.PageDecorator;\n import hudson.model.RootAction;\n import jenkins.model.Jenkins;\n"}}, {"oid": "40a28adf55ad9dff91be9ded5b99d323bac1a793", "url": "https://github.com/jenkinsci/jenkins/commit/40a28adf55ad9dff91be9ded5b99d323bac1a793", "message": "Multiple small adjustments\n\n- Remove unused imports\n- Remove non-necessary call for the response that are set in the getView\n- Keep the previous improvement about limiting the number of call to getMonitorList()", "committedDate": "2020-11-24T09:18:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzOTIxMg==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r529339212", "bodyText": "why aren't this needed?", "author": "fqueiruga", "createdAt": "2020-11-24T09:24:31Z", "path": "core/src/main/java/jenkins/management/AdministrativeMonitorsApi.java", "diffHunk": "@@ -12,28 +11,19 @@\n import org.kohsuke.stapler.verb.GET;\n \n import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n-import java.util.Collection;\n-import java.util.Collections;\n \n @Extension\n @Restricted(NoExternalUse.class)\n public class AdministrativeMonitorsApi implements RootAction {\n     @GET\n     public void doNonSecurityPopupContent(StaplerRequest req, StaplerResponse resp) throws IOException, ServletException {\n-        resp.setStatus(HttpServletResponse.SC_OK);\n-        resp.setContentType(\"text/html\");", "originalCommit": "40a28adf55ad9dff91be9ded5b99d323bac1a793", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM0MzQ1Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/5063#discussion_r529343457", "bodyText": "It's done automatically by the JellyFacet (need to find exactly the code, inside Stapler, digging...)\n=> https://github.com/fqueiruga/jenkins/blob/279d8109eddb7a494428baf25af9756c2e33576b/core/src/main/resources/lib/layout/ajax.jelly#L54\nIt's from the j:ajax tag \ud83c\udf89", "author": "Wadeck", "createdAt": "2020-11-24T09:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMzOTIxMg=="}], "type": "inlineReview", "revised_code": null}]}