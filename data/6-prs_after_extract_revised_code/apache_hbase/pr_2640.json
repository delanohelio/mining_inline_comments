{"pr_number": 2640, "pr_title": "Backport: HBASE-25126 Add load balance logic in hbase-client to distribute read\u2026", "pr_createdAt": "2020-11-10T01:31:25Z", "pr_url": "https://github.com/apache/hbase/pull/2640", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NTI2Ng==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520255266", "bodyText": "I can not recall whether I have mentioned this on the patch for master. The scope of 'useMetaReplicas' is wider than the newly introduced metaReplicaMode, as it could also effect the methods in Admin implementation, so I do not think we could remove it directly. If we want to do so, we'd better follow the typical rule to deprecated it first and then remove it in the next major release.", "author": "Apache9", "createdAt": "2020-11-10T02:59:30Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -161,7 +165,11 @@\n   private final boolean hostnamesCanChange;\n   private final long pause;\n   private final long pauseForCQTBE;// pause for CallQueueTooBigException, if specified\n-  private boolean useMetaReplicas;", "originalCommit": "8da5fb0de7d5fb448d6a57da73efcd9e72e5a910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4MDU1MA==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520780550", "bodyText": "Let me explain a bit here. The old behavior for 'useMetaReplicas' is kept, no change of that. The flag is consolidated to the mode as the mode flag also supports the old behavior. Looking at the code, 'useMetaReplicas' only supports the region locator at this moment. The config is kept in case 'META_REPLICA_USE' needs to support a broader scope. This is just an implementation consolidation.", "author": "huaxiangsun", "createdAt": "2020-11-10T18:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NTI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAwMzE0OQ==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r521003149", "bodyText": "OK, I got your point. Here the' useMetaReplicas' flag is only for locating region, so it is fine to remove it. The \"hbase.meta.replicas.use\" config will still be honored here, and at other places, we will still check the \"hbase.meta.replicas.use\" config separately.", "author": "Apache9", "createdAt": "2020-11-11T01:40:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NTI2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NjE0Ng==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520256146", "bodyText": "This is a bit strange, TIMELINE means we should send request to primary first and if it does not come back in time, we switch to secondary replicas. IIRC the design here is that, if targetReplicaId is -1, we follow the rule of STRONG or TIMELINE, if targetReplicaId is not -1, we will go to the specific replica directly?", "author": "Apache9", "createdAt": "2020-11-10T03:02:37Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java", "diffHunk": "@@ -64,7 +64,9 @@ protected boolean setNewStartKey() {\n \n   @Override\n   protected ReversedScannerCallable createScannerCallable() {\n+    // In case of meta, we want to support scan over a replica region.\n+    int replicaId = (scan.getConsistency() == Consistency.TIMELINE) ? scan.getReplicaId() : 0;", "originalCommit": "8da5fb0de7d5fb448d6a57da73efcd9e72e5a910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2OTU5Nw==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520869597", "bodyText": "My previous comment is incorrect(removed it). let me visit it again. Just found out the targetReplicaId is initialized to -1. Testing also fails, let me debug first.", "author": "huaxiangsun", "createdAt": "2020-11-10T20:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NjE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MjA2Mw==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520872063", "bodyText": "Just found out that what you said is correct.", "author": "huaxiangsun", "createdAt": "2020-11-10T21:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NjE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4MzUyNQ==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520883525", "bodyText": "However, I introduced a bug here. For Consistency.TIMELINE, if scan is targeted to a specific replica region, replicaId is -1, which is incorrect. For this case, it also needs to pass in 0.", "author": "huaxiangsun", "createdAt": "2020-11-10T21:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NjE0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNzgyNA==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520937824", "bodyText": "For testing failures, it is my misunderstanding of the default targetReplicaId is 0 (actually it is -1). Introduce a utility method to differentiate the case for scan over a specific replica region in TIMELINE mode.", "author": "huaxiangsun", "createdAt": "2020-11-10T23:23:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NjE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f7757275b2ef279014e5d80474de2d0c27223207", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java\nindex c87a9901fb..cfa67cb807 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ReversedClientScanner.java\n\n@@ -65,7 +67,11 @@ public class ReversedClientScanner extends ClientScanner {\n   @Override\n   protected ReversedScannerCallable createScannerCallable() {\n     // In case of meta, we want to support scan over a replica region.\n-    int replicaId = (scan.getConsistency() == Consistency.TIMELINE) ? scan.getReplicaId() : 0;\n+    // The logic here is a bit tricky. When it is Consistency.STRONG or Consistency.TIMELINE,\n+    // if scan.getReplicaId() is -1 (the default value), replica id needs to be set to 0.\n+    // In case of Consistency.TIMELINE and scan.getReplicaId() >= 0, it needs to keep the\n+    // replicaId from the scan.\n+    int replicaId = isScanForSpecificReplicaRegion(scan) ? scan.getReplicaId() : DEFAULT_REPLICA_ID;\n     return new ReversedScannerCallable(getConnection(), getTable(), scan, this.scanMetrics,\n         this.rpcControllerFactory, replicaId);\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI1NjMwMA==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520256300", "bodyText": "Put static import on top?", "author": "Apache9", "createdAt": "2020-11-10T03:03:15Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java", "diffHunk": "@@ -42,13 +42,15 @@\n import org.slf4j.LoggerFactory;\n import org.apache.hadoop.hbase.client.ScannerCallable.MoreResults;\n import org.apache.hadoop.hbase.util.Pair;\n+import static org.apache.hadoop.hbase.client.RegionReplicaUtil.DEFAULT_REPLICA_ID;", "originalCommit": "8da5fb0de7d5fb448d6a57da73efcd9e72e5a910", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7757275b2ef279014e5d80474de2d0c27223207", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java\nindex 6b549cec2a..6edaa83d11 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java\n\n@@ -42,7 +44,6 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.apache.hadoop.hbase.client.ScannerCallable.MoreResults;\n import org.apache.hadoop.hbase.util.Pair;\n-import static org.apache.hadoop.hbase.client.RegionReplicaUtil.DEFAULT_REPLICA_ID;\n \n /**\n  * This class has the logic for handling scanners for regions with and without replicas.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwMTM0NA==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520701344", "bodyText": "Is this code duplicated? Does it have to be?", "author": "saintstack", "createdAt": "2020-11-10T16:33:03Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -332,19 +338,59 @@ public void newDead(ServerName sn) {\n       close();\n       throw e;\n     }\n+\n+    // Get the region locator's meta replica mode.\n+    this.metaReplicaMode = CatalogReplicaMode.fromString(conf.get(LOCATOR_META_REPLICAS_MODE,\n+      CatalogReplicaMode.NONE.toString()));\n+\n+    switch (this.metaReplicaMode) {\n+      case LOAD_BALANCE:\n+        String replicaSelectorClass = conf.get(\n+          RegionLocator.LOCATOR_META_REPLICAS_MODE_LOADBALANCE_SELECTOR,\n+          CatalogReplicaLoadBalanceSimpleSelector.class.getName());\n+\n+        this.metaReplicaSelector = CatalogReplicaLoadBalanceSelectorFactory.createSelector(\n+          replicaSelectorClass, META_TABLE_NAME, getChoreService(), () -> {\n+            int numOfReplicas = 1;\n+            try {\n+              RegionLocations metaLocations = registry.getMetaRegionLocations().get(\n+                connectionConfig.getReadRpcTimeout(), TimeUnit.MILLISECONDS);\n+              numOfReplicas = metaLocations.size();\n+            } catch (Exception e) {\n+              LOG.error(\"Failed to get table {}'s region replication, \", META_TABLE_NAME, e);\n+            }\n+            return numOfReplicas;\n+          });\n+        break;\n+      case NONE:\n+        // If user does not configure LOCATOR_META_REPLICAS_MODE, let's check the legacy config.\n+\n+        boolean useMetaReplicas = conf.getBoolean(USE_META_REPLICAS,\n+          DEFAULT_USE_META_REPLICAS);\n+        if (useMetaReplicas) {\n+          this.metaReplicaMode = CatalogReplicaMode.HEDGED_READ;\n+        }\n+        break;\n+      default:\n+        // Doing nothing\n+    }", "originalCommit": "8da5fb0de7d5fb448d6a57da73efcd9e72e5a910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5NDY3MA==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520794670", "bodyText": "Yeah, this part of code is duplicated from AsyncNonMetaLocator. When this logic is encaped into CatalogManager class, this duplication will go away  (HBASE-25247).", "author": "huaxiangsun", "createdAt": "2020-11-10T18:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwMTM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "bf676598a43e104b72b933f097947ced88cd74d7", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\nindex cd352e1d58..6fbc6caca2 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\n\n@@ -381,18 +381,6 @@ class ConnectionImplementation implements ClusterConnection, Closeable {\n     service.scheduleChore(AuthUtil.getAuthRenewalChore(user));\n   }\n \n-  /**\n-   * @param useMetaReplicas\n-   */\n-  @VisibleForTesting\n-  void setUseMetaReplicas(final boolean useMetaReplicas) {\n-    if (useMetaReplicas) {\n-      this.metaReplicaMode = CatalogReplicaMode.HEDGED_READ;\n-    } else {\n-      this.metaReplicaMode = CatalogReplicaMode.NONE;\n-    }\n-  }\n-\n   /**\n    * @param conn The connection for which to replace the generator.\n    * @param cnm Replaces the nonce generator used, for testing.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODcxNw==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520708717", "bodyText": "I was wondering about the @Apache9 comment above on scope. I was thinking this a @Private class so we should be able to change internals but I see now this method exposes our internal useMetaReplicas.\nIts a weird method though. Package protected for testing only? The test shouldn't do this? Should change config rather than this method? Probably ok to add @deprecated.... to be replaced by nothing.", "author": "saintstack", "createdAt": "2020-11-10T16:43:09Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -332,19 +338,59 @@ public void newDead(ServerName sn) {\n       close();\n       throw e;\n     }\n+\n+    // Get the region locator's meta replica mode.\n+    this.metaReplicaMode = CatalogReplicaMode.fromString(conf.get(LOCATOR_META_REPLICAS_MODE,\n+      CatalogReplicaMode.NONE.toString()));\n+\n+    switch (this.metaReplicaMode) {\n+      case LOAD_BALANCE:\n+        String replicaSelectorClass = conf.get(\n+          RegionLocator.LOCATOR_META_REPLICAS_MODE_LOADBALANCE_SELECTOR,\n+          CatalogReplicaLoadBalanceSimpleSelector.class.getName());\n+\n+        this.metaReplicaSelector = CatalogReplicaLoadBalanceSelectorFactory.createSelector(\n+          replicaSelectorClass, META_TABLE_NAME, getChoreService(), () -> {\n+            int numOfReplicas = 1;\n+            try {\n+              RegionLocations metaLocations = registry.getMetaRegionLocations().get(\n+                connectionConfig.getReadRpcTimeout(), TimeUnit.MILLISECONDS);\n+              numOfReplicas = metaLocations.size();\n+            } catch (Exception e) {\n+              LOG.error(\"Failed to get table {}'s region replication, \", META_TABLE_NAME, e);\n+            }\n+            return numOfReplicas;\n+          });\n+        break;\n+      case NONE:\n+        // If user does not configure LOCATOR_META_REPLICAS_MODE, let's check the legacy config.\n+\n+        boolean useMetaReplicas = conf.getBoolean(USE_META_REPLICAS,\n+          DEFAULT_USE_META_REPLICAS);\n+        if (useMetaReplicas) {\n+          this.metaReplicaMode = CatalogReplicaMode.HEDGED_READ;\n+        }\n+        break;\n+      default:\n+        // Doing nothing\n+    }\n   }\n \n   private void spawnRenewalChore(final UserGroupInformation user) {\n-    authService = new ChoreService(\"Relogin service\");\n-    authService.scheduleChore(AuthUtil.getAuthRenewalChore(user));\n+    ChoreService service = getChoreService();\n+    service.scheduleChore(AuthUtil.getAuthRenewalChore(user));\n   }\n \n   /**\n    * @param useMetaReplicas\n    */\n   @VisibleForTesting\n   void setUseMetaReplicas(final boolean useMetaReplicas) {\n-    this.useMetaReplicas = useMetaReplicas;", "originalCommit": "8da5fb0de7d5fb448d6a57da73efcd9e72e5a910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNTQ5OQ==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520815499", "bodyText": "Yeah, this method is only used for testing purpose. Just found out that it was added by me, working on removing it.", "author": "huaxiangsun", "createdAt": "2020-11-10T19:19:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODcxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2MTU4Mg==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520961582", "bodyText": "will work on this later tonight.", "author": "huaxiangsun", "createdAt": "2020-11-11T00:31:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODcxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY0MjAwNw==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r521642007", "bodyText": "Pushed a commit which removes setUseMetaReplicas().", "author": "huaxiangsun", "createdAt": "2020-11-11T21:13:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODcxNw=="}], "type": "inlineReview", "revised_code": {"commit": "bf676598a43e104b72b933f097947ced88cd74d7", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\nindex cd352e1d58..6fbc6caca2 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java\n\n@@ -381,18 +381,6 @@ class ConnectionImplementation implements ClusterConnection, Closeable {\n     service.scheduleChore(AuthUtil.getAuthRenewalChore(user));\n   }\n \n-  /**\n-   * @param useMetaReplicas\n-   */\n-  @VisibleForTesting\n-  void setUseMetaReplicas(final boolean useMetaReplicas) {\n-    if (useMetaReplicas) {\n-      this.metaReplicaMode = CatalogReplicaMode.HEDGED_READ;\n-    } else {\n-      this.metaReplicaMode = CatalogReplicaMode.NONE;\n-    }\n-  }\n-\n   /**\n    * @param conn The connection for which to replace the generator.\n    * @param cnm Replaces the nonce generator used, for testing.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODk4NA==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520708984", "bodyText": "Yeah, this a dupe too?", "author": "saintstack", "createdAt": "2020-11-10T16:43:34Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/ConnectionImplementation.java", "diffHunk": "@@ -841,8 +898,23 @@ private RegionLocations locateRegionInMeta(TableName tableName, byte[] row, bool\n     Scan s = new Scan().withStartRow(metaStartKey).withStopRow(metaStopKey, true)\n       .addFamily(HConstants.CATALOG_FAMILY).setReversed(true).setCaching(5)\n       .setReadType(ReadType.PREAD);\n-    if (this.useMetaReplicas) {\n-      s.setConsistency(Consistency.TIMELINE);\n+\n+    switch (this.metaReplicaMode) {\n+      case LOAD_BALANCE:\n+        int metaReplicaId = this.metaReplicaSelector.select(tableName, row,\n+          RegionLocateType.CURRENT);\n+        if (metaReplicaId != RegionInfo.DEFAULT_REPLICA_ID) {\n+          // If the selector gives a non-primary meta replica region, then go with it.\n+          // Otherwise, just go to primary in non-hedgedRead mode.\n+          s.setConsistency(Consistency.TIMELINE);\n+          s.setReplicaId(metaReplicaId);\n+        }\n+        break;\n+      case HEDGED_READ:\n+        s.setConsistency(Consistency.TIMELINE);\n+        break;\n+      default:\n+        // do nothing", "originalCommit": "8da5fb0de7d5fb448d6a57da73efcd9e72e5a910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNjQwMQ==", "url": "https://github.com/apache/hbase/pull/2640#discussion_r520936401", "bodyText": "As explained above.", "author": "huaxiangsun", "createdAt": "2020-11-10T23:19:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODk4NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f7757275b2ef279014e5d80474de2d0c27223207", "url": "https://github.com/apache/hbase/commit/f7757275b2ef279014e5d80474de2d0c27223207", "message": "HBASE-25126 Add load balance logic in hbase-client to distribute read load over meta replica regions\n\nIt adds load balance support for meta lookup in AsyncTableRegionLocator.\nThe existing meta replica mode is renamed as \"HedgedRead\", client sends scan request to the primary meta replica region first,\nif response is not back within a configured amount of time, it will send scan requests to all meta replica regions and\ntake the first response. On top of the existing mode, a new mode \"LoadBalance\" is introduced. In this mode, client first\nchoose a meta replica region to send scan request. If the response is stale, it may send the request to another meta replica region or\nthe primary region. In this mode, meta scan requests are load balanced across all replica regions with the primary mode as\nthe ultimate source of truth.\n\nTwo new config knobs are added:\n\n1. hbase.locator.meta.replicas.mode\n   Valid options are \"None\", \"HedgedRead\" and \"LoadBalance\", they are case insensitive. The default mode is \"None\".\n\n2. hbase.locator.meta.replicas.mode.loadbalance.selector\n   The load balance alogrithm to select a meta replica to send the requests.\n   Only org.apache.hadoop.hbase.client.CatalogReplicaLoadBalanceReplicaSimpleSelector.class\n   is supported for now, which is the default as well. The algorithm works as follows:\n      a. Clients select a randome meta replica region to send the requests if there is no entry for the location in the stale\n         location cache.\n      b. If the location from one meta replica region is stale, a stale entry will be created in the statle location cache\n         for the region.\n      c. Clients select the primary meta region if the location is in the stale location cache.\n      d. The stale location cache entries time out in 3 seconds.\n\nIf there is no \"hbase.locator.meta.replicas.mode\" configured, it will check the config knob \"hbase.meta.replicas.use\".\nIf \"hbase.meta.replicas.use\" is configured, the mode will be set to \"HedgedRead\".\n\nFor branch-2 support, it introduces support for ReversedScan over a specific non-default replica region, this is mainly\nfor load balance meta scan among all its replica regions.", "committedDate": "2020-11-10T23:19:06Z", "type": "forcePushed"}, {"oid": "bf676598a43e104b72b933f097947ced88cd74d7", "url": "https://github.com/apache/hbase/commit/bf676598a43e104b72b933f097947ced88cd74d7", "message": "Remove ConnectionImplementation#setUseMetaReplicas()", "committedDate": "2020-11-11T21:09:45Z", "type": "forcePushed"}, {"oid": "7540dec4ba3317e6b556a9286eff76531fb80c53", "url": "https://github.com/apache/hbase/commit/7540dec4ba3317e6b556a9286eff76531fb80c53", "message": "Remove ConnectionImplementation#setUseMetaReplicas()", "committedDate": "2020-11-12T17:43:17Z", "type": "forcePushed"}, {"oid": "93e7c72dc3ad4decbd4c45a96fb6137c98518f69", "url": "https://github.com/apache/hbase/commit/93e7c72dc3ad4decbd4c45a96fb6137c98518f69", "message": "HBASE-25126 Add load balance logic in hbase-client to distribute read load over meta replica regions\n\nIt adds load balance support for meta lookup in AsyncTableRegionLocator.\nThe existing meta replica mode is renamed as \"HedgedRead\", client sends scan request to the primary meta replica region first,\nif response is not back within a configured amount of time, it will send scan requests to all meta replica regions and\ntake the first response. On top of the existing mode, a new mode \"LoadBalance\" is introduced. In this mode, client first\nchoose a meta replica region to send scan request. If the response is stale, it may send the request to another meta replica region or\nthe primary region. In this mode, meta scan requests are load balanced across all replica regions with the primary mode as\nthe ultimate source of truth.\n\nTwo new config knobs are added:\n\n1. hbase.locator.meta.replicas.mode\n   Valid options are \"None\", \"HedgedRead\" and \"LoadBalance\", they are case insensitive. The default mode is \"None\".\n\n2. hbase.locator.meta.replicas.mode.loadbalance.selector\n   The load balance alogrithm to select a meta replica to send the requests.\n   Only org.apache.hadoop.hbase.client.CatalogReplicaLoadBalanceReplicaSimpleSelector.class\n   is supported for now, which is the default as well. The algorithm works as follows:\n      a. Clients select a randome meta replica region to send the requests if there is no entry for the location in the stale\n         location cache.\n      b. If the location from one meta replica region is stale, a stale entry will be created in the statle location cache\n         for the region.\n      c. Clients select the primary meta region if the location is in the stale location cache.\n      d. The stale location cache entries time out in 3 seconds.\n\nIf there is no \"hbase.locator.meta.replicas.mode\" configured, it will check the config knob \"hbase.meta.replicas.use\".\nIf \"hbase.meta.replicas.use\" is configured, the mode will be set to \"HedgedRead\".\n\nFor branch-2 support, it introduces support for ReversedScan over a specific non-default replica region, this is mainly\nfor load balance meta scan among all its replica regions.\n\nRemove ConnectionImplementation#setUseMetaReplicas()", "committedDate": "2020-11-16T17:35:35Z", "type": "forcePushed"}, {"oid": "0a77dce89fb332b3d684e03257d7357ac8407d41", "url": "https://github.com/apache/hbase/commit/0a77dce89fb332b3d684e03257d7357ac8407d41", "message": "HBASE-25126 Add load balance logic in hbase-client to distribute read load over meta replica regions\n\nIt adds load balance support for meta lookup in AsyncTableRegionLocator.\nThe existing meta replica mode is renamed as \"HedgedRead\", client sends scan request to the primary meta replica region first,\nif response is not back within a configured amount of time, it will send scan requests to all meta replica regions and\ntake the first response. On top of the existing mode, a new mode \"LoadBalance\" is introduced. In this mode, client first\nchoose a meta replica region to send scan request. If the response is stale, it may send the request to another meta replica region or\nthe primary region. In this mode, meta scan requests are load balanced across all replica regions with the primary mode as\nthe ultimate source of truth.\n\nTwo new config knobs are added:\n\n1. hbase.locator.meta.replicas.mode\n   Valid options are \"None\", \"HedgedRead\" and \"LoadBalance\", they are case insensitive. The default mode is \"None\".\n\n2. hbase.locator.meta.replicas.mode.loadbalance.selector\n   The load balance alogrithm to select a meta replica to send the requests.\n   Only org.apache.hadoop.hbase.client.CatalogReplicaLoadBalanceReplicaSimpleSelector.class\n   is supported for now, which is the default as well. The algorithm works as follows:\n      a. Clients select a randome meta replica region to send the requests if there is no entry for the location in the stale\n         location cache.\n      b. If the location from one meta replica region is stale, a stale entry will be created in the statle location cache\n         for the region.\n      c. Clients select the primary meta region if the location is in the stale location cache.\n      d. The stale location cache entries time out in 3 seconds.\n\nIf there is no \"hbase.locator.meta.replicas.mode\" configured, it will check the config knob \"hbase.meta.replicas.use\".\nIf \"hbase.meta.replicas.use\" is configured, the mode will be set to \"HedgedRead\".\n\nFor branch-2 support, it introduces support for ReversedScan over a specific non-default replica region, this is mainly\nfor load balance meta scan among all its replica regions.\n\nRemove ConnectionImplementation#setUseMetaReplicas()", "committedDate": "2020-11-20T18:15:26Z", "type": "commit"}, {"oid": "0a77dce89fb332b3d684e03257d7357ac8407d41", "url": "https://github.com/apache/hbase/commit/0a77dce89fb332b3d684e03257d7357ac8407d41", "message": "HBASE-25126 Add load balance logic in hbase-client to distribute read load over meta replica regions\n\nIt adds load balance support for meta lookup in AsyncTableRegionLocator.\nThe existing meta replica mode is renamed as \"HedgedRead\", client sends scan request to the primary meta replica region first,\nif response is not back within a configured amount of time, it will send scan requests to all meta replica regions and\ntake the first response. On top of the existing mode, a new mode \"LoadBalance\" is introduced. In this mode, client first\nchoose a meta replica region to send scan request. If the response is stale, it may send the request to another meta replica region or\nthe primary region. In this mode, meta scan requests are load balanced across all replica regions with the primary mode as\nthe ultimate source of truth.\n\nTwo new config knobs are added:\n\n1. hbase.locator.meta.replicas.mode\n   Valid options are \"None\", \"HedgedRead\" and \"LoadBalance\", they are case insensitive. The default mode is \"None\".\n\n2. hbase.locator.meta.replicas.mode.loadbalance.selector\n   The load balance alogrithm to select a meta replica to send the requests.\n   Only org.apache.hadoop.hbase.client.CatalogReplicaLoadBalanceReplicaSimpleSelector.class\n   is supported for now, which is the default as well. The algorithm works as follows:\n      a. Clients select a randome meta replica region to send the requests if there is no entry for the location in the stale\n         location cache.\n      b. If the location from one meta replica region is stale, a stale entry will be created in the statle location cache\n         for the region.\n      c. Clients select the primary meta region if the location is in the stale location cache.\n      d. The stale location cache entries time out in 3 seconds.\n\nIf there is no \"hbase.locator.meta.replicas.mode\" configured, it will check the config knob \"hbase.meta.replicas.use\".\nIf \"hbase.meta.replicas.use\" is configured, the mode will be set to \"HedgedRead\".\n\nFor branch-2 support, it introduces support for ReversedScan over a specific non-default replica region, this is mainly\nfor load balance meta scan among all its replica regions.\n\nRemove ConnectionImplementation#setUseMetaReplicas()", "committedDate": "2020-11-20T18:15:26Z", "type": "forcePushed"}]}