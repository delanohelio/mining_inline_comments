{"pr_number": 980, "pr_title": "HBASE-23205 Correctly update the position of WALs currently being replicated", "pr_createdAt": "2020-01-03T09:35:05Z", "pr_url": "https://github.com/apache/hbase/pull/980", "timeline": [{"oid": "8aa9447f7b239c430185018b5947e1b6c4520e1b", "url": "https://github.com/apache/hbase/commit/8aa9447f7b239c430185018b5947e1b6c4520e1b", "message": "HBASE-23205 Correctly update the position of WALs currently being replicated", "committedDate": "2020-01-03T08:43:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg5MzQxMw==", "url": "https://github.com/apache/hbase/pull/980#discussion_r362893413", "bodyText": "Are the workerThreads sorted so we get last logged first?", "author": "saintstack", "createdAt": "2020-01-03T17:31:13Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -436,14 +437,30 @@ public String getPeerClusterId() {\n   }\n \n   @Override\n+  @VisibleForTesting\n   public Path getCurrentPath() {\n-    // only for testing\n     for (ReplicationSourceShipperThread worker : workerThreads.values()) {\n       if (worker.getCurrentPath() != null) return worker.getCurrentPath();\n     }\n     return null;\n   }\n \n+  @VisibleForTesting\n+  public Path getLastLoggedPath() {\n+    for (ReplicationSourceShipperThread worker : workerThreads.values()) {\n+      return worker.getLastLoggedPath();", "originalCommit": "8aa9447f7b239c430185018b5947e1b6c4520e1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE5NTQ4Mw==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363195483", "bodyText": "Not sorted, It's only for testing in non-multi wal environment, as same as ReplicationSource.getCurrentPath().", "author": "JeongDaeKim", "createdAt": "2020-01-06T08:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg5MzQxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5MTM2NQ==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363591365", "bodyText": "This is not for test, right? We iterate the workers twice -- once to get path and then again to get position. Don't want to return a Pair with Path and offset so just iterate once?", "author": "saintstack", "createdAt": "2020-01-07T04:56:35Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -478,8 +495,8 @@ public String getStats() {\n     for (Map.Entry<String, ReplicationSourceShipperThread> entry : workerThreads.entrySet()) {\n       String walGroupId = entry.getKey();\n       ReplicationSourceShipperThread worker = entry.getValue();\n-      long position = worker.getCurrentPosition();\n-      Path currentPath = worker.getCurrentPath();\n+      long position = worker.getLastLoggedPosition();\n+      Path currentPath = worker.getLastLoggedPath();", "originalCommit": "8aa9447f7b239c430185018b5947e1b6c4520e1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NjU5OQ==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363596599", "bodyText": "Hmm... reading later in the patch, I see need to have them distinct. For sure we'll get the right offset for the selected path?", "author": "saintstack", "createdAt": "2020-01-07T05:31:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5MTM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxMDM1Mw==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363610353", "bodyText": "Yes, not for test and not the same one. each thread have it's own path and position. no need to iterate", "author": "JeongDaeKim", "createdAt": "2020-01-07T06:44:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5MTM2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NzA3Nw==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363597077", "bodyText": "Will we be doing a bunch of spinning updating same value over and over w/o these checks in place that look to see if position has changed? Will we be burning CPU to no end?", "author": "saintstack", "createdAt": "2020-01-07T05:34:23Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -635,15 +650,13 @@ private void checkBandwidthChangeAndResetThrottler() {\n     protected void shipEdits(WALEntryBatch entryBatch) {\n       List<Entry> entries = entryBatch.getWalEntries();\n       long lastReadPosition = entryBatch.getLastWalPosition();\n-      currentPath = entryBatch.getLastWalPath();\n+      lastLoggedPath = entryBatch.getLastWalPath();\n       int sleepMultiplier = 0;\n       if (entries.isEmpty()) {\n-        if (lastLoggedPosition != lastReadPosition) {\n-          updateLogPosition(lastReadPosition);\n-          // if there was nothing to ship and it's not an error\n-          // set \"ageOfLastShippedOp\" to <now> to indicate that we're current\n-          metrics.setAgeOfLastShippedOp(EnvironmentEdgeManager.currentTime(), walGroupId);\n-        }\n+        updateLogPosition(lastReadPosition);", "originalCommit": "8aa9447f7b239c430185018b5947e1b6c4520e1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxMDQ5Mg==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363610492", "bodyText": "It won't be updated with the same value repeatably. entryReader will put a batch only when read position is changed.", "author": "JeongDaeKim", "createdAt": "2020-01-07T06:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NzA3Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NzE1Ng==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363597156", "bodyText": "Its ok to remove this setting?", "author": "saintstack", "createdAt": "2020-01-07T05:34:48Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -727,8 +740,7 @@ protected void shipEdits(WALEntryBatch entryBatch) {\n     }\n \n     private void updateLogPosition(long lastReadPosition) {\n-      manager.setPendingShipment(false);", "originalCommit": "8aa9447f7b239c430185018b5947e1b6c4520e1b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NzIyOQ==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363597229", "bodyText": "We don't do pending flag anymore?", "author": "saintstack", "createdAt": "2020-01-07T05:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NzE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxMDUzNA==", "url": "https://github.com/apache/hbase/pull/980#discussion_r363610534", "bodyText": "Yes, we don't need the flag anymore. it was required because not only shipper but also reader thread can update log position, but it had some issues about concurrency and high update frequency. With this PR, when wal rolled or log position changed, reader will put a batch for shipper to update log position.", "author": "JeongDaeKim", "createdAt": "2020-01-07T06:45:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU5NzE1Ng=="}], "type": "inlineReview", "revised_code": null}]}