{"pr_number": 2731, "pr_title": "HBASE-25349 [Flakey Tests] branch-2 TestRefreshRecoveredReplication.t\u2026", "pr_createdAt": "2020-12-02T06:15:38Z", "pr_url": "https://github.com/apache/hbase/pull/2731", "timeline": [{"oid": "9032826617f7dc47ae41ce4e441ffff617c2ad8b", "url": "https://github.com/apache/hbase/commit/9032826617f7dc47ae41ce4e441ffff617c2ad8b", "message": "HBASE-25349 [Flakey Tests] branch-2 TestRefreshRecoveredReplication.testReplicationRefreshSource:141 Waiting timed out after [60,000] msec\n\nStart the check for recovered queue presence earlier.", "committedDate": "2020-12-02T06:13:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1MTkwMg==", "url": "https://github.com/apache/hbase/pull/2731#discussion_r534351902", "bodyText": "Can NUM_SLAVES1 be made final, and referenced wherever it's presumed to be 2? Maybe rename it if you're in there making that change...", "author": "ndimiduk", "createdAt": "2020-12-02T17:31:39Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRefreshRecoveredReplication.java", "diffHunk": "@@ -75,6 +80,7 @@\n \n   @BeforeClass\n   public static void setUpBeforeClass() throws Exception {\n+    // NUM_SLAVES1 is presumed 2 in below.", "originalCommit": "9032826617f7dc47ae41ce4e441ffff617c2ad8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM2NzEzNQ==", "url": "https://github.com/apache/hbase/pull/2731#discussion_r534367135", "bodyText": "The NUM_SLAVES1 comes from base class.\nThis class and the subclasses need major refactoring. I avoid it in here trying to keep change minimal.", "author": "saintstack", "createdAt": "2020-12-02T17:54:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1MTkwMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NzM0Ng==", "url": "https://github.com/apache/hbase/pull/2731#discussion_r534357346", "bodyText": "Instead of waiting on strict equality by count, can you wait for getLiveRegionServerThreads() to contain only otherServer by identity?", "author": "ndimiduk", "createdAt": "2020-12-02T17:39:34Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestRefreshRecoveredReplication.java", "diffHunk": "@@ -121,22 +127,25 @@ public void testReplicationRefreshSource() throws Exception {\n       table1.put(new Put(r).addColumn(famName, famName, r));\n     }\n \n-    // kill rs holding table region\n-    Optional<RegionServerThread> server = UTIL1.getMiniHBaseCluster().getLiveRegionServerThreads()\n-        .stream()\n+    // Kill rs holding table region. There are only TWO servers. We depend on it.\n+    List<RegionServerThread> rss = UTIL1.getMiniHBaseCluster().getLiveRegionServerThreads();\n+    assertEquals(2, rss.size());\n+    Optional<RegionServerThread> server = rss.stream()\n         .filter(rst -> CollectionUtils.isNotEmpty(rst.getRegionServer().getRegions(tablename)))\n         .findAny();\n     Assert.assertTrue(server.isPresent());\n+    HRegionServer otherServer = rss.get(0).getRegionServer() == server.get().getRegionServer()?\n+      rss.get(1).getRegionServer(): rss.get(0).getRegionServer();\n     server.get().getRegionServer().abort(\"stopping for test\");\n+    // waiting for recovered peer to appear.\n+    Replication replication = (Replication)otherServer.getReplicationSourceService();\n+    UTIL1.waitFor(60000, () -> !replication.getReplicationManager().getOldSources().isEmpty());\n+    // Wait on only one server being up.\n     UTIL1.waitFor(60000, () ->\n-        UTIL1.getMiniHBaseCluster().getLiveRegionServerThreads().size() == NUM_SLAVES1 - 1);\n+      // Have to go back to source here because getLiveRegionServerThreads makes new array each time\n+      UTIL1.getMiniHBaseCluster().getLiveRegionServerThreads().size() == NUM_SLAVES1 - 1);", "originalCommit": "9032826617f7dc47ae41ce4e441ffff617c2ad8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM2NzU3MQ==", "url": "https://github.com/apache/hbase/pull/2731#discussion_r534367571", "bodyText": "I could but skipping as nit if you don't mind.", "author": "saintstack", "createdAt": "2020-12-02T17:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NzM0Ng=="}], "type": "inlineReview", "revised_code": null}]}