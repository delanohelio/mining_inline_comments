{"pr_number": 1346, "pr_title": "HBASE-23937 : Support Online LargeLogs similar to SlowLogs APIs", "pr_createdAt": "2020-03-25T17:27:08Z", "pr_url": "https://github.com/apache/hbase/pull/1346", "timeline": [{"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1", "url": "https://github.com/apache/hbase/commit/8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1", "message": "HBASE-23937 : Support Online LargeLogs similar to SlowLogs APIs", "committedDate": "2020-03-25T17:25:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NzkzMg==", "url": "https://github.com/apache/hbase/pull/1346#discussion_r399757932", "bodyText": "@bharathv I am planning to change SlowLogRecord to OnlineLogRecord and SlowLogQueryFilter to OnlineLogQueryFilter. Will make that change before merging the PR because this class is being referred at multiple places (in thrift), so will be redundant refactor for now (to make review relevant to actual changes).\nAlso, the overall change is providing new API in Admin and shell command and to have 2 flags at server side (isSlowLog and isLargeLog) to fetch relevant records from server.", "author": "virajjasani", "createdAt": "2020-03-29T07:23:27Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2276,6 +2276,18 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n   List<SlowLogRecord> getSlowLogResponses(final Set<ServerName> serverNames,\n       final SlowLogQueryFilter slowLogQueryFilter) throws IOException;\n \n+  /**\n+   * Retrieves online large RPC logs from the provided list of\n+   * RegionServers\n+   *\n+   * @param serverNames Server names to get slowlog responses from\n+   * @param largeLogQueryFilter filter to be used if provided\n+   * @return online slowlog response list\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  List<SlowLogRecord> getLargeLogResponses(final Set<ServerName> serverNames,\n+    final SlowLogQueryFilter largeLogQueryFilter) throws IOException;", "originalCommit": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0459e549b6bcfd6b5a93919f79564f0b7d80ceff", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java\nindex 5b24874384..a4e18e5bde 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java\n\n@@ -2269,25 +2269,13 @@ public interface Admin extends Abortable, Closeable {\n    * RegionServers\n    *\n    * @param serverNames Server names to get slowlog responses from\n-   * @param slowLogQueryFilter filter to be used if provided\n+   * @param slowLogQueryFilter filter to be used if provided (determines slow / large RPC logs)\n    * @return online slowlog response list\n    * @throws IOException if a remote or network exception occurs\n    */\n   List<SlowLogRecord> getSlowLogResponses(final Set<ServerName> serverNames,\n       final SlowLogQueryFilter slowLogQueryFilter) throws IOException;\n \n-  /**\n-   * Retrieves online large RPC logs from the provided list of\n-   * RegionServers\n-   *\n-   * @param serverNames Server names to get slowlog responses from\n-   * @param largeLogQueryFilter filter to be used if provided\n-   * @return online slowlog response list\n-   * @throws IOException if a remote or network exception occurs\n-   */\n-  List<SlowLogRecord> getLargeLogResponses(final Set<ServerName> serverNames,\n-    final SlowLogQueryFilter largeLogQueryFilter) throws IOException;\n-\n   /**\n    * Clears online slow RPC logs from the provided list of\n    * RegionServers\n"}}, {"oid": "5b7af237cec0ffafa87c16ee6af0f6b0d5cf1c39", "url": "https://github.com/apache/hbase/commit/5b7af237cec0ffafa87c16ee6af0f6b0d5cf1c39", "message": "review comment - enum for slow and large logs", "committedDate": "2020-03-31T08:34:10Z", "type": "commit"}, {"oid": "0459e549b6bcfd6b5a93919f79564f0b7d80ceff", "url": "https://github.com/apache/hbase/commit/0459e549b6bcfd6b5a93919f79564f0b7d80ceff", "message": "single Admin API for large and slow logs", "committedDate": "2020-03-31T19:46:40Z", "type": "commit"}, {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f", "url": "https://github.com/apache/hbase/commit/351f16526e70e9a1d3ab8232c7d158d50b06699f", "message": "Updating thrift usage to consider LogQueryFilter changes", "committedDate": "2020-03-31T20:05:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNTI1MA==", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401215250", "bodyText": "Why this branch on the client? Can't the server side infer the type and respond accordingly?", "author": "bharathv", "createdAt": "2020-03-31T21:06:14Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -3952,17 +3952,27 @@ private void getProcedureResult(long procId, CompletableFuture<Void> future, int\n \n   @Override\n   public CompletableFuture<List<SlowLogRecord>> getSlowLogResponses(\n-    @Nullable final Set<ServerName> serverNames,\n+      @Nullable final Set<ServerName> serverNames,\n     final SlowLogQueryFilter slowLogQueryFilter) {\n     if (CollectionUtils.isEmpty(serverNames)) {\n       return CompletableFuture.completedFuture(Collections.emptyList());\n     }\n-    return CompletableFuture.supplyAsync(() -> serverNames.stream()\n-      .map((ServerName serverName) ->\n-        getSlowLogResponseFromServer(serverName, slowLogQueryFilter))\n-      .map(CompletableFuture::join)\n-      .flatMap(List::stream)\n-      .collect(Collectors.toList()));\n+    if (slowLogQueryFilter.getType() == null", "originalCommit": "351f16526e70e9a1d3ab8232c7d158d50b06699f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNzM4OQ==", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401417389", "bodyText": "Nope, both can't use same enum because at server side, we have enum in TooSlowLog.proto which we save in Queue, whereas this enum is for client side filter object. We need to compare each attribute present in client side filter with server side data.\nHaving this branch on client side is better compared to passing it on to server because otherwise we will need to have it in Admin.proto too to pass it over in RPC call (too many places).", "author": "virajjasani", "createdAt": "2020-04-01T07:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNTI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "68ae48b7366f7e3ebe5b7b3276cc6c31a6c30a71", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java\nindex 11e23da6d6..6b504ee23c 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java\n\n@@ -3951,47 +3951,47 @@ class RawAsyncHBaseAdmin implements AsyncAdmin {\n   }\n \n   @Override\n-  public CompletableFuture<List<SlowLogRecord>> getSlowLogResponses(\n+  public CompletableFuture<List<OnlineLogRecord>> getSlowLogResponses(\n       @Nullable final Set<ServerName> serverNames,\n-    final SlowLogQueryFilter slowLogQueryFilter) {\n+    final LogQueryFilter logQueryFilter) {\n     if (CollectionUtils.isEmpty(serverNames)) {\n       return CompletableFuture.completedFuture(Collections.emptyList());\n     }\n-    if (slowLogQueryFilter.getType() == null\n-        || slowLogQueryFilter.getType() == SlowLogQueryFilter.Type.SLOW_LOG) {\n+    if (logQueryFilter.getType() == null\n+        || logQueryFilter.getType() == LogQueryFilter.Type.SLOW_LOG) {\n       return CompletableFuture.supplyAsync(() -> serverNames.stream()\n         .map((ServerName serverName) ->\n-          getSlowLogResponseFromServer(serverName, slowLogQueryFilter))\n+          getSlowLogResponseFromServer(serverName, logQueryFilter))\n         .map(CompletableFuture::join)\n         .flatMap(List::stream)\n         .collect(Collectors.toList()));\n     } else {\n       return CompletableFuture.supplyAsync(() -> serverNames.stream()\n         .map((ServerName serverName) ->\n-          getLargeLogResponseFromServer(serverName, slowLogQueryFilter))\n+          getLargeLogResponseFromServer(serverName, logQueryFilter))\n         .map(CompletableFuture::join)\n         .flatMap(List::stream)\n         .collect(Collectors.toList()));\n     }\n   }\n \n-  private CompletableFuture<List<SlowLogRecord>> getSlowLogResponseFromServer(\n-    final ServerName serverName, final SlowLogQueryFilter slowLogQueryFilter) {\n-    return this.<List<SlowLogRecord>>newAdminCaller()\n+  private CompletableFuture<List<OnlineLogRecord>> getSlowLogResponseFromServer(\n+    final ServerName serverName, final LogQueryFilter logQueryFilter) {\n+    return this.<List<OnlineLogRecord>>newAdminCaller()\n       .action((controller, stub) -> this\n         .adminCall(\n-          controller, stub, RequestConverter.buildSlowLogResponseRequest(slowLogQueryFilter),\n+          controller, stub, RequestConverter.buildSlowLogResponseRequest(logQueryFilter),\n           AdminService.Interface::getSlowLogResponses,\n           ProtobufUtil::toSlowLogPayloads))\n       .serverName(serverName).call();\n   }\n \n-  private CompletableFuture<List<SlowLogRecord>> getLargeLogResponseFromServer(\n-    final ServerName serverName, final SlowLogQueryFilter slowLogQueryFilter) {\n-    return this.<List<SlowLogRecord>>newAdminCaller()\n+  private CompletableFuture<List<OnlineLogRecord>> getLargeLogResponseFromServer(\n+    final ServerName serverName, final LogQueryFilter logQueryFilter) {\n+    return this.<List<OnlineLogRecord>>newAdminCaller()\n       .action((controller, stub) -> this\n         .adminCall(\n-          controller, stub, RequestConverter.buildSlowLogResponseRequest(slowLogQueryFilter),\n+          controller, stub, RequestConverter.buildSlowLogResponseRequest(logQueryFilter),\n           AdminService.Interface::getLargeLogResponses,\n           ProtobufUtil::toSlowLogPayloads))\n       .serverName(serverName).call();\n"}}, {"oid": "68ae48b7366f7e3ebe5b7b3276cc6c31a6c30a71", "url": "https://github.com/apache/hbase/commit/68ae48b7366f7e3ebe5b7b3276cc6c31a6c30a71", "message": "comment for enum, refactor SlowLogQueryFilter -> LogQueryFilter & SlowLogRecord -> OnlineLogRecord", "committedDate": "2020-04-01T10:12:53Z", "type": "commit"}, {"oid": "7938dbe8f98751f78f2733c055e27c134c386d53", "url": "https://github.com/apache/hbase/commit/7938dbe8f98751f78f2733c055e27c134c386d53", "message": "thrift bug fix", "committedDate": "2020-04-01T10:38:48Z", "type": "commit"}]}