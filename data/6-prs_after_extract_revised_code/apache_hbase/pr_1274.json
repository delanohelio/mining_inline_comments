{"pr_number": 1274, "pr_title": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time.", "pr_createdAt": "2020-03-11T14:42:18Z", "pr_url": "https://github.com/apache/hbase/pull/1274", "timeline": [{"oid": "9026f3c24edbae8a3e5c99c971506fe06291ff40", "url": "https://github.com/apache/hbase/commit/9026f3c24edbae8a3e5c99c971506fe06291ff40", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time.", "committedDate": "2020-03-11T14:45:21Z", "type": "forcePushed"}, {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "url": "https://github.com/apache/hbase/commit/c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time.", "committedDate": "2020-03-11T15:53:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669282", "bodyText": "Single thread in here? Otherwise, perhaps this should be volatile?", "author": "saintstack", "createdAt": "2020-03-23T18:30:19Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {\n+    if (closeCheckTimeLimit <= 0) {\n+      return false;\n+    }\n+\n+    final long elapsedMillis = now - lastCloseCheckMillis;\n+    if (elapsedMillis <= closeCheckTimeLimit) {\n+      return false;\n+    }\n+\n+    lastCloseCheckMillis = now;", "originalCommit": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjQxMw==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396672413", "bodyText": "Better if can do w/o volatile (I think compactor will only have one driving thread...)", "author": "saintstack", "createdAt": "2020-03-23T18:35:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5NzM0MQ==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r398997341", "bodyText": "CloseChecker is created and used in performCompaction.\nprotected boolean performCompaction() throws IOException {\n    CloseChecker closeChecker = new CloseChecker(conf, currentTime);\n    try {\n      do {\n          // ...\n      }\n}\nI think unuse volatile is okay.", "author": "mwkang", "createdAt": "2020-03-27T02:14:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\nindex d3f3cd2e79..ea711c0377 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n\n@@ -40,7 +40,12 @@ public class CloseChecker {\n     this.lastCloseCheckMillis = currentTime;\n   }\n \n-  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+  /**\n+   * Check periodically to see if a system stop is requested every written bytes reach size limit.\n+   *\n+   * @return if true, system stop.\n+   */\n+  public boolean isSizeLimit(Store store, long bytesWritten) {\n     if (closeCheckSizeLimit <= 0) {\n       return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669567", "bodyText": "Does it have to be public? Can it be package local? It is only used in this package?", "author": "saintstack", "createdAt": "2020-03-23T18:30:47Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {", "originalCommit": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5ODMzMw==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r398998333", "bodyText": "I think it would be good to use package local.\nHowever, The package of FaultyMobStoreCompactor is not the same as CloseChecker.\nThe package of FaultyMobStoreCompactor is org.apache.hadoop.hbase.mob.", "author": "mwkang", "createdAt": "2020-03-27T02:18:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0NzQ0Ng==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r399047446", "bodyText": "dang.\nok. public for now.", "author": "saintstack", "createdAt": "2020-03-27T05:47:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\nindex d3f3cd2e79..ea711c0377 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n\n@@ -40,7 +40,12 @@ public class CloseChecker {\n     this.lastCloseCheckMillis = currentTime;\n   }\n \n-  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+  /**\n+   * Check periodically to see if a system stop is requested every written bytes reach size limit.\n+   *\n+   * @return if true, system stop.\n+   */\n+  public boolean isSizeLimit(Store store, long bytesWritten) {\n     if (closeCheckSizeLimit <= 0) {\n       return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTY3Nw==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669677", "bodyText": "ditto", "author": "saintstack", "createdAt": "2020-03-23T18:30:55Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {", "originalCommit": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\nindex d3f3cd2e79..ea711c0377 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n\n@@ -40,7 +40,12 @@ public class CloseChecker {\n     this.lastCloseCheckMillis = currentTime;\n   }\n \n-  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+  /**\n+   * Check periodically to see if a system stop is requested every written bytes reach size limit.\n+   *\n+   * @return if true, system stop.\n+   */\n+  public boolean isSizeLimit(Store store, long bytesWritten) {\n     if (closeCheckSizeLimit <= 0) {\n       return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396671133", "bodyText": "This is a bug fix?", "author": "saintstack", "createdAt": "2020-03-23T18:33:25Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "diffHunk": "@@ -317,7 +318,14 @@ protected boolean performCompaction(FileDetails fd, InternalScanner scanner, Cel\n \n       do {\n         hasMore = scanner.next(cells, scannerContext);\n-        now = EnvironmentEdgeManager.currentTime();\n+        currentTime = EnvironmentEdgeManager.currentTime();\n+        if (LOG.isDebugEnabled()) {\n+          now = currentTime;\n+        }\n+        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {", "originalCommit": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTcxNQ==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396671715", "bodyText": "s/isClosedByTimeLime/isTimeLimit/ ... and s/isClosedBySizeLiimt/isSizeLimit/", "author": "saintstack", "createdAt": "2020-03-23T18:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5ODcyOA==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r398998728", "bodyText": "This is a bug fix?\n\nNo, It is not a bug fix. I think it is improvement.\n\ns/isClosedByTimeLime/isTimeLimit/ ... and s/isClosedBySizeLiimt/isSizeLimit/\n\nOkay.", "author": "mwkang", "createdAt": "2020-03-27T02:20:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw=="}], "type": "inlineReview", "revised_code": {"commit": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java\nindex fd2c7ebcd3..38b95f7d52 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java\n\n@@ -322,7 +322,7 @@ public class DefaultMobStoreCompactor extends DefaultCompactor {\n         if (LOG.isDebugEnabled()) {\n           now = currentTime;\n         }\n-        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {\n+        if (closeChecker.isTimeLimit(store, currentTime)) {\n           progress.cancel();\n           return false;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjcwNw==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396672707", "bodyText": "s/isClosedBySizeLimit/isSizeLimit/g", "author": "saintstack", "createdAt": "2020-03-23T18:35:59Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {", "originalCommit": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\nindex d3f3cd2e79..ea711c0377 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n\n@@ -40,7 +40,12 @@ public class CloseChecker {\n     this.lastCloseCheckMillis = currentTime;\n   }\n \n-  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+  /**\n+   * Check periodically to see if a system stop is requested every written bytes reach size limit.\n+   *\n+   * @return if true, system stop.\n+   */\n+  public boolean isSizeLimit(Store store, long bytesWritten) {\n     if (closeCheckSizeLimit <= 0) {\n       return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MzA5MA==", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396673090", "bodyText": "s/isClosedByTimeLimit/isTimeLimit/g\n... Class name provides the context ... i.e. that it is about close.", "author": "saintstack", "createdAt": "2020-03-23T18:36:34Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {", "originalCommit": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\nindex d3f3cd2e79..ea711c0377 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java\n\n@@ -40,7 +40,12 @@ public class CloseChecker {\n     this.lastCloseCheckMillis = currentTime;\n   }\n \n-  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+  /**\n+   * Check periodically to see if a system stop is requested every written bytes reach size limit.\n+   *\n+   * @return if true, system stop.\n+   */\n+  public boolean isSizeLimit(Store store, long bytesWritten) {\n     if (closeCheckSizeLimit <= 0) {\n       return false;\n     }\n"}}, {"oid": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "url": "https://github.com/apache/hbase/commit/8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "message": "HBASE-23968 Incorporated PR feedback", "committedDate": "2020-03-30T02:03:40Z", "type": "forcePushed"}, {"oid": "a6c4060664ed8f38815d6575b762423e08c9116e", "url": "https://github.com/apache/hbase/commit/a6c4060664ed8f38815d6575b762423e08c9116e", "message": "HBASE-23968 Fix checkstyle error", "committedDate": "2020-04-07T01:05:16Z", "type": "forcePushed"}, {"oid": "0eb1f2446d7e153c8ce3fffebbce05bb58c8a795", "url": "https://github.com/apache/hbase/commit/0eb1f2446d7e153c8ce3fffebbce05bb58c8a795", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time.", "committedDate": "2020-04-08T00:50:06Z", "type": "commit"}, {"oid": "b2fd0dfd09afa5bd64fecaf5ada6cf450feb37e2", "url": "https://github.com/apache/hbase/commit/b2fd0dfd09afa5bd64fecaf5ada6cf450feb37e2", "message": "HBASE-23968 Incorporated PR feedback", "committedDate": "2020-04-08T00:50:06Z", "type": "commit"}, {"oid": "2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "url": "https://github.com/apache/hbase/commit/2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "message": "HBASE-23968 Fix checkstyle error", "committedDate": "2020-04-08T00:50:06Z", "type": "commit"}, {"oid": "2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "url": "https://github.com/apache/hbase/commit/2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "message": "HBASE-23968 Fix checkstyle error", "committedDate": "2020-04-08T00:50:06Z", "type": "forcePushed"}]}