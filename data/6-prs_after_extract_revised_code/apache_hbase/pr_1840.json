{"pr_number": 1840, "pr_title": "HBASE-24500 The behavior of RegionInfoBuilder.newBuilder(RegionInfo) \u2026", "pr_createdAt": "2020-06-03T08:33:10Z", "pr_url": "https://github.com/apache/hbase/pull/1840", "timeline": [{"oid": "791658770a70d8c489efd30d39d411df54e8961b", "url": "https://github.com/apache/hbase/commit/791658770a70d8c489efd30d39d411df54e8961b", "message": "HBASE-24500 The behavior of RegionInfoBuilder.newBuilder(RegionInfo) is strange", "committedDate": "2020-06-03T08:30:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNzU5Mg==", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434427592", "bodyText": "This marked as IA.Private. Can remove this directly?", "author": "infraio", "createdAt": "2020-06-03T09:19:02Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java", "diffHunk": "@@ -115,14 +109,18 @@ public RegionInfoBuilder setOffline(boolean offLine) {\n     return this;\n   }\n \n+  /**\n+   * @deprecated Since 2.3.0, will be removed in 4.0.0. Calling this method will have no effect as\n+   *             the encoded name will be generated by region name.\n+   */\n+  @Deprecated", "originalCommit": "791658770a70d8c489efd30d39d411df54e8961b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18713eec3986a94fef22a2a6178968cdd26b50f7", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java\nindex 61de0867ec..34221f39cd 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java\n\n@@ -109,15 +109,6 @@ public class RegionInfoBuilder {\n     return this;\n   }\n \n-  /**\n-   * @deprecated Since 2.3.0, will be removed in 4.0.0. Calling this method will have no effect as\n-   *             the encoded name will be generated by region name.\n-   */\n-  @Deprecated\n-  public RegionInfoBuilder setEncodedName(String encodedName) {\n-    return this;\n-  }\n-\n   public RegionInfo build() {\n     return new MutableRegionInfo(tableName, startKey, endKey, split,\n         regionId, replicaId, offLine);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyODc4OA==", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434428788", "bodyText": "When this happen?", "author": "infraio", "createdAt": "2020-06-03T09:20:59Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.java", "diffHunk": "@@ -3355,8 +3354,10 @@ public static String toLockJson(List<LockServiceProtos.LockedResource> lockedRes\n     if (proto.hasOffline()) {\n       rib.setOffline(proto.getOffline());\n     }\n-    if (proto.hasRegionEncodedName()) {\n-      rib.setEncodedName(proto.getRegionEncodedName());\n+    org.apache.hadoop.hbase.client.RegionInfo ri = rib.build();\n+    if (proto.hasRegionEncodedName() && !proto.getRegionEncodedName().equals(ri.getEncodedName())) {\n+      LOG.warn(\"The converted region info is {}, but the encoded name in proto is {}\", ri,", "originalCommit": "791658770a70d8c489efd30d39d411df54e8961b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MDM1MQ==", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434450351", "bodyText": "The proto could be recevied from network so there is no guarantee that this will not happen?", "author": "Apache9", "createdAt": "2020-06-03T09:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyODc4OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyOTIzMQ==", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434429231", "bodyText": "Add more test case?", "author": "infraio", "createdAt": "2020-06-03T09:21:47Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java", "diffHunk": "@@ -302,30 +283,28 @@ public void testConvert() {\n     HBaseProtos.RegionInfo info = HBaseProtos.RegionInfo.newBuilder()\n       .setTableName(HBaseProtos.TableName.newBuilder()\n         .setQualifier(UnsafeByteOperations.unsafeWrap(tableName.getQualifier()))\n-        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace()))\n-        .build())\n+        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace())).build())\n       .setStartKey(UnsafeByteOperations.unsafeWrap(startKey))\n-      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey))\n-      .setSplit(split)\n-      .setRegionId(regionId)\n+      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey)).setSplit(split).setRegionId(regionId)\n       .build();\n \n     convertedRi = ProtobufUtil.toRegionInfo(info);\n-    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName)\n-            .setStartKey(startKey)\n-            .setEndKey(endKey)\n-            .setSplit(split)\n-            .setRegionId(regionId)\n-            .setReplicaId(0).build();\n+    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName).setStartKey(startKey)\n+      .setEndKey(endKey).setSplit(split).setRegionId(regionId).setReplicaId(0).build();\n \n     assertEquals(expectedRi, convertedRi);\n   }\n \n-  // Duplicated method in TestRegionInfoDisplay too.\n-  private HRegionInfo convert(RegionInfo ri) {\n-    HRegionInfo hri = new HRegionInfo(\n-    ri.getTable(), ri.getStartKey(), ri.getEndKey(), ri.isSplit(), ri.getRegionId());\n-    hri.setOffline(ri.isOffline());\n-    return hri;\n+  @Test\n+  public void testNewBuilderWithRegionInfo() {\n+    RegionInfo ri = RegionInfoBuilder.newBuilder(name.getTableName()).build();\n+    RegionInfo ri2 = RegionInfoBuilder.newBuilder(ri).build();\n+    assertEquals(ri, ri2);\n+\n+    // make sure that the region name and encoded name are changed, see HBASE-24500 for more\n+    // details.", "originalCommit": "791658770a70d8c489efd30d39d411df54e8961b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MDY2OQ==", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434450669", "bodyText": "For example? I think this is enough?", "author": "Apache9", "createdAt": "2020-06-03T09:57:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyOTIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3MTEyMQ==", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434471121", "bodyText": "As you said on the issue desc, set different startkey or endkey?", "author": "infraio", "createdAt": "2020-06-03T10:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyOTIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a32135507f05eded8eb8cf8b63742bac3b0562d0", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java\nindex 8fb1f9ed35..0067d481a7 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java\n\n@@ -295,16 +295,32 @@ public class TestRegionInfoBuilder {\n     assertEquals(expectedRi, convertedRi);\n   }\n \n+  private void assertRegionNameNotEquals(RegionInfo expected, RegionInfo actual) {\n+    assertNotEquals(expected.getRegionNameAsString(), actual.getRegionNameAsString());\n+    assertNotEquals(expected.getEncodedName(), actual.getEncodedName());\n+  }\n+\n+  private void assertRegionNameEquals(RegionInfo expected, RegionInfo actual) {\n+    assertEquals(expected.getRegionNameAsString(), actual.getRegionNameAsString());\n+    assertEquals(expected.getEncodedName(), actual.getEncodedName());\n+  }\n+\n   @Test\n   public void testNewBuilderWithRegionInfo() {\n     RegionInfo ri = RegionInfoBuilder.newBuilder(name.getTableName()).build();\n-    RegionInfo ri2 = RegionInfoBuilder.newBuilder(ri).build();\n-    assertEquals(ri, ri2);\n+    assertEquals(ri, RegionInfoBuilder.newBuilder(ri).build());\n \n     // make sure that the region name and encoded name are changed, see HBASE-24500 for more\n     // details.\n-    RegionInfo ri3 = RegionInfoBuilder.newBuilder(ri).setReplicaId(1).build();\n-    assertNotEquals(ri.getRegionNameAsString(), ri3.getRegionNameAsString());\n-    assertNotEquals(ri.getEncodedName(), ri3.getEncodedName());\n+    assertRegionNameNotEquals(ri,\n+      RegionInfoBuilder.newBuilder(ri).setStartKey(new byte[1]).build());\n+    assertRegionNameNotEquals(ri,\n+      RegionInfoBuilder.newBuilder(ri).setRegionId(ri.getRegionId() + 1).build());\n+    assertRegionNameNotEquals(ri, RegionInfoBuilder.newBuilder(ri).setReplicaId(1).build());\n+\n+    // these fields are not in region name\n+    assertRegionNameEquals(ri, RegionInfoBuilder.newBuilder(ri).setEndKey(new byte[1]).build());\n+    assertRegionNameEquals(ri, RegionInfoBuilder.newBuilder(ri).setSplit(true).build());\n+    assertRegionNameEquals(ri, RegionInfoBuilder.newBuilder(ri).setOffline(true).build());\n   }\n }\n"}}, {"oid": "18713eec3986a94fef22a2a6178968cdd26b50f7", "url": "https://github.com/apache/hbase/commit/18713eec3986a94fef22a2a6178968cdd26b50f7", "message": "remove setEncodedName as RegionInfoBuilder is IA.Private", "committedDate": "2020-06-03T09:57:52Z", "type": "commit"}, {"oid": "a32135507f05eded8eb8cf8b63742bac3b0562d0", "url": "https://github.com/apache/hbase/commit/a32135507f05eded8eb8cf8b63742bac3b0562d0", "message": "add more tests", "committedDate": "2020-06-03T12:39:21Z", "type": "commit"}, {"oid": "840b91f231d629de5b8d3bc4ddf5a5a72a8d409b", "url": "https://github.com/apache/hbase/commit/840b91f231d629de5b8d3bc4ddf5a5a72a8d409b", "message": "move TestRegionInfoBuilder to hbase-client, leave a TestReadAndWriteRegionInfoFile in hbase-server", "committedDate": "2020-06-03T12:54:10Z", "type": "commit"}]}