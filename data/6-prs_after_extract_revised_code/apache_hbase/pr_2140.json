{"pr_number": 2140, "pr_title": "HBASE-24770 Reimplement the Constraints API and revisit the IA annota\u2026", "pr_createdAt": "2020-07-24T14:57:27Z", "pr_url": "https://github.com/apache/hbase/pull/2140", "timeline": [{"oid": "9cf1014a307e409d9926af3393e5a443b5943d4f", "url": "https://github.com/apache/hbase/commit/9cf1014a307e409d9926af3393e5a443b5943d4f", "message": "HBASE-24770 Reimplement the Constraints API and revisit the IA annotations on related classes", "committedDate": "2020-07-26T14:57:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MDUxNQ==", "url": "https://github.com/apache/hbase/pull/2140#discussion_r460960515", "bodyText": "Adding method to a public interface. For hbase3 only so should be fine. This is filling in missing functionality?", "author": "saintstack", "createdAt": "2020-07-27T15:07:19Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableDescriptorBuilder.java", "diffHunk": "@@ -380,6 +380,10 @@ public TableDescriptorBuilder setCoprocessors(Collection<CoprocessorDescriptor>\n     return this;\n   }\n \n+  public boolean hasCoprocessor(String classNameToMatch) {", "originalCommit": "9cf1014a307e409d9926af3393e5a443b5943d4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3Mjk5Nw==", "url": "https://github.com/apache/hbase/pull/2140#discussion_r460972997", "bodyText": "This is a class, not an interface so I think it is OK? I think for a builder class it is also OK to have some 'get' methods to know what have we set into the builder?", "author": "Apache9", "createdAt": "2020-07-27T15:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MDUxNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MzI0Mw==", "url": "https://github.com/apache/hbase/pull/2140#discussion_r460963243", "bodyText": "Good", "author": "saintstack", "createdAt": "2020-07-27T15:11:09Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/Constraints.java", "diffHunk": "@@ -29,26 +29,24 @@\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.regex.Pattern;\n-\n-import org.apache.hadoop.hbase.client.TableDescriptorBuilder;\n-import org.apache.yetus.audience.InterfaceAudience;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.apache.hadoop.conf.Configuration;\n-import org.apache.hadoop.hbase.HTableDescriptor;\n import org.apache.hadoop.hbase.client.TableDescriptor;\n+import org.apache.hadoop.hbase.client.TableDescriptorBuilder;\n import org.apache.hadoop.hbase.util.Bytes;\n import org.apache.hadoop.hbase.util.Pair;\n+import org.apache.yetus.audience.InterfaceAudience;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * Utilities for adding/removing constraints from a table.\n- * <p>\n- * Constraints can be added on table load time, via the {@link HTableDescriptor}.\n- * <p>\n- * NOTE: this class is NOT thread safe. Concurrent setting/enabling/disabling of\n- * constraints can cause constraints to be run at incorrect times or not at all.\n+ * <p/>\n+ * Since {@link TableDescriptor} is immutable now, you should use {@link TableDescriptorBuilder}.\n+ * And when disabling or removing constraints, you could use\n+ * {@link TableDescriptorBuilder#newBuilder(TableDescriptor)} to clone the old\n+ * {@link TableDescriptor} and then pass it the below methods.\n  */\n-@InterfaceAudience.Private\n+@InterfaceAudience.Public", "originalCommit": "9cf1014a307e409d9926af3393e5a443b5943d4f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NDQ4Nw==", "url": "https://github.com/apache/hbase/pull/2140#discussion_r460964487", "bodyText": "missing 'be'?", "author": "saintstack", "createdAt": "2020-07-27T15:12:52Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java", "diffHunk": "@@ -18,110 +18,121 @@\n \n /**\n  * Restrict the domain of a data attribute, often times to fulfill business rules/requirements.\n+ * <h2>Table of Contents</h2>\n+ * <ul>\n+ * <li><a href=\"#overview\">Overview</a></li>\n+ * <li><a href=\"#concurrency\">Concurrency and Atomicity</a></li>\n+ * <li><a href=\"#caveats\">Caveats</a></li>\n+ * <li><a href=\"#usage\">Example Usage</a></li>\n+ * </ul>\n+ * <h2><a name=\"overview\">Overview</a></h2> Constraints are used to enforce business rules in a\n+ * database. By checking all {@link org.apache.hadoop.hbase.client.Put Puts} on a given table, you\n+ * can enforce very specific data policies. For instance, you can ensure that a certain column\n+ * family-column qualifier pair always has a value between 1 and 10. Otherwise, the\n+ * {@link org.apache.hadoop.hbase.client.Put} is rejected and the data integrity is maintained.\n+ * <p/>\n+ * Constraints are designed to be configurable, so a constraint can be used across different tables,\n+ * but implement different behavior depending on the specific configuration given to that\n+ * constraint.\n+ * <p/>\n+ * By adding a constraint to a table (see <a href=\"#usage\">Example Usage</a>), constraints will\n+ * automatically enabled. You also then have the option of to disable (just 'turn off') or remove", "originalCommit": "9cf1014a307e409d9926af3393e5a443b5943d4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MzQzNQ==", "url": "https://github.com/apache/hbase/pull/2140#discussion_r460973435", "bodyText": "I haven't changed the wording, just reformat. Let me fix.", "author": "Apache9", "createdAt": "2020-07-27T15:25:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NDQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7e10720d4848399b14564e09191c4c38ebb0fb89", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java\nindex fe981377f3..0696fc8441 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/constraint/package-info.java\n\n@@ -36,7 +36,7 @@\n  * constraint.\n  * <p/>\n  * By adding a constraint to a table (see <a href=\"#usage\">Example Usage</a>), constraints will\n- * automatically enabled. You also then have the option of to disable (just 'turn off') or remove\n+ * automatically be enabled. You also then have the option of to disable (just 'turn off') or remove\n  * (delete all associated information) all constraints on a table. If you remove all constraints\n  * (see\n  * {@link org.apache.hadoop.hbase.constraint.Constraints#remove(org.apache.hadoop.hbase.client.TableDescriptorBuilder)},\n"}}, {"oid": "7e10720d4848399b14564e09191c4c38ebb0fb89", "url": "https://github.com/apache/hbase/commit/7e10720d4848399b14564e09191c4c38ebb0fb89", "message": "HBASE-24770 Reimplement the Constraints API and revisit the IA annotations on related classes", "committedDate": "2020-07-27T15:34:03Z", "type": "commit"}, {"oid": "7e10720d4848399b14564e09191c4c38ebb0fb89", "url": "https://github.com/apache/hbase/commit/7e10720d4848399b14564e09191c4c38ebb0fb89", "message": "HBASE-24770 Reimplement the Constraints API and revisit the IA annotations on related classes", "committedDate": "2020-07-27T15:34:03Z", "type": "forcePushed"}]}