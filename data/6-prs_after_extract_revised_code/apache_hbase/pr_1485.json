{"pr_number": 1485, "pr_title": "HBASE-23969 Meta browser should show all `info` columns", "pr_createdAt": "2020-04-10T11:05:23Z", "pr_url": "https://github.com/apache/hbase/pull/1485", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MDUwNg==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r406750506", "bodyText": "nit: ? : is good to use but here since we have some good computation, it might be preferable to return empty string if regionInfo is null initially. Better readability? WDYT?", "author": "virajjasani", "createdAt": "2020-04-10T13:10:48Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -102,6 +117,27 @@ public ServerName getServerName() {\n     return serverName;\n   }\n \n+  public String getTransitioningOnServerName() {\n+    return transitioningOnServerName;\n+  }\n+\n+  public String getMergeRegionName() {\n+    return (mergeRegionInfo != null)\n+      ? mergeRegionInfo.stream()\n+                       .map(RegionInfo::getRegionName)\n+                       .map(Bytes::toStringBinary)\n+                       .collect(Collectors.joining(\", \"))\n+      : \"\";", "originalCommit": "c2a490a14b48fd76da03a78f58322a7af1d65264", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NzQxMA==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r407047410", "bodyText": "This has been simplified with nullable collection. So no ? : is required here then.", "author": "liuml07", "createdAt": "2020-04-11T10:34:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MDUwNg=="}], "type": "inlineReview", "revised_code": {"commit": "0f2e1177da13603fd98c1474a89a363d1fe49029", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java\nindex 3a0895a3dd..a523031e9e 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java\n\n@@ -117,17 +122,20 @@ public final class RegionReplicaInfo {\n     return serverName;\n   }\n \n-  public String getTransitioningOnServerName() {\n-    return transitioningOnServerName;\n+  public long getSeqNum() {\n+    return seqNum;\n+  }\n+\n+  public ServerName getTargetServerName() {\n+    return targetServerName;\n   }\n \n-  public String getMergeRegionName() {\n-    return (mergeRegionInfo != null)\n-      ? mergeRegionInfo.stream()\n-                       .map(RegionInfo::getRegionName)\n-                       .map(Bytes::toStringBinary)\n-                       .collect(Collectors.joining(\", \"))\n-      : \"\";\n+  public List<String> getMergeRegionName() {\n+    return emptyIfNull(mergeRegionInfo)\n+      .stream()\n+      .map(RegionInfo::getRegionName)\n+      .map(Bytes::toStringBinary)\n+      .collect(Collectors.toList());\n   }\n \n   public byte[] getSplitAName() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MzU4OQ==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r406753589", "bodyText": "A small test case to cover this would be good. Maybe in TestMaster.", "author": "virajjasani", "createdAt": "2020-04-10T13:18:59Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +966,22 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns a host:port string of server where the region is transitioning on.\n+   * It reads \"sn\" column from {@link Result}, a row in catalog table.\n+   * @param r Result to pull from\n+   * @return A host:port string or null if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  @InterfaceAudience.Private // for use by RegionReplicaInfo which is used by meta browser\n+  public static String getTransitioningOnServerName(final Result r, final int replicaId) {", "originalCommit": "c2a490a14b48fd76da03a78f58322a7af1d65264", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NzU2NA==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r407047564", "bodyText": "I navigate the source code tree, and found another place has implemented the same logic there. So in recent commit I simply move the code to MetaTableAccessor.java so it can be reused. I hope I have not broken any stuff, so wait for the QA to confirm. Since that is exactly the existing method, I guess a test is not required? But I can work on a UT if you still suggest. Thanks,", "author": "liuml07", "createdAt": "2020-04-11T10:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MzU4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0f2e1177da13603fd98c1474a89a363d1fe49029", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\nindex f705b18515..130060e4ae 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n\n@@ -967,19 +966,30 @@ public class MetaTableAccessor {\n   }\n \n   /**\n-   * Returns a host:port string of server where the region is transitioning on.\n-   * It reads \"sn\" column from {@link Result}, a row in catalog table.\n-   * @param r Result to pull from\n-   * @return A host:port string or null if necessary fields not found or empty.\n+   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n+   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if the server is at OPEN state.\n+   *\n+   * @param r Result to pull the transitioning server name from\n+   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if necessary fields not found or empty.\n    */\n   @Nullable\n-  @InterfaceAudience.Private // for use by RegionReplicaInfo which is used by meta browser\n-  public static String getTransitioningOnServerName(final Result r, final int replicaId) {\n-      byte[] serverColumn = getServerNameColumn(replicaId);\n-      Cell cell = r.getColumnLatestCell(getCatalogFamily(), serverColumn);\n-      return (cell != null && cell.getValueLength() > 0)\n-        ? Bytes.toString(cell.getValueArray(), cell.getValueOffset(), cell.getValueLength())\n-        : null;\n+  public static ServerName getTargetServerName(final Result r, final int replicaId) {\n+    final Cell cell = r.getColumnLatestCell(HConstants.CATALOG_FAMILY,\n+      getServerNameColumn(replicaId));\n+    if (cell == null || cell.getValueLength() == 0) {\n+      RegionLocations locations = MetaTableAccessor.getRegionLocations(r);\n+      if (locations != null) {\n+        HRegionLocation location = locations.getRegionLocation(replicaId);\n+        if (location != null) {\n+          return location.getServerName();\n+        }\n+      }\n+      return null;\n+    }\n+    return ServerName.parseServerName(Bytes.toString(cell.getValueArray(), cell.getValueOffset(),\n+      cell.getValueLength()));\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409159744", "bodyText": "What is rationale for moving this method? How is it MetaTableAccessor material?", "author": "saintstack", "createdAt": "2020-04-15T22:00:50Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +965,33 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n+   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if the server is at OPEN state.\n+   *\n+   * @param r Result to pull the transitioning server name from\n+   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  public static ServerName getTargetServerName(final Result r, final int replicaId) {", "originalCommit": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTg4Mw==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409159883", "bodyText": ".. and not private to RegoinStateStore where it was originally?", "author": "saintstack", "createdAt": "2020-04-15T22:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzNzAwMw==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409237003", "bodyText": "@saintstack This method is used so far by both RegionStateStore and RegionReplicaInfo (new for table.jsp). So it can not be private to RegoinStateStore. We can keep it there and make it public, or we move to MetaTableAccessor which is more generic place for Read/write hbase:meta operations. I see all getXXColumn and getXX stuff are static methods in MetaTableAccessor which are similar to what this method does. So I moved the logic reading \"info:sn\" columns to MetaTableAccessor.\nThis also came from my coding experience. When I write the first patch, I implemented my version in MetaTableAccessor instead of calling the implementation in RegoinStateStore. I simply did not know existing logic is already someplace there. Meanwhile, both RegionStateStore and MetaTableAccessor have their own getServerNameColumn() method. I guess someone previously may have missed existing implementation as I did :) So overall I prefer the central place of getting columns and data from hbase:meta. But I understand this move makes it public in client module. If that is a concern, I can move it back.", "author": "liuml07", "createdAt": "2020-04-16T02:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzMTk5MA==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420231990", "bodyText": "Long-stale conversation, perhaps...\nI agree with @liuml07 on this one -- it's a good thing to have a centralized place for encapsulating the serialization details of storing and retrieving content from meta. MetaTableAccessor seems like the place for it.", "author": "ndimiduk", "createdAt": "2020-05-05T16:13:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "68aedc17db0a98195628b999f2805de1fc155c4d", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\nindex 1e294dc389..f079907e0f 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n\n@@ -966,30 +967,19 @@ public class MetaTableAccessor {\n   }\n \n   /**\n-   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n-   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n-   * if the server is at OPEN state.\n-   *\n-   * @param r Result to pull the transitioning server name from\n-   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n-   * if necessary fields not found or empty.\n+   * Returns a host:port string of server where the region is transitioning on.\n+   * It reads \"sn\" column from {@link Result}, a row in catalog table.\n+   * @param r Result to pull from\n+   * @return A host:port string or null if necessary fields not found or empty.\n    */\n   @Nullable\n-  public static ServerName getTargetServerName(final Result r, final int replicaId) {\n-    final Cell cell = r.getColumnLatestCell(HConstants.CATALOG_FAMILY,\n-      getServerNameColumn(replicaId));\n-    if (cell == null || cell.getValueLength() == 0) {\n-      RegionLocations locations = MetaTableAccessor.getRegionLocations(r);\n-      if (locations != null) {\n-        HRegionLocation location = locations.getRegionLocation(replicaId);\n-        if (location != null) {\n-          return location.getServerName();\n-        }\n-      }\n-      return null;\n-    }\n-    return ServerName.parseServerName(Bytes.toString(cell.getValueArray(), cell.getValueOffset(),\n-      cell.getValueLength()));\n+  @InterfaceAudience.Private // for use by RegionReplicaInfo which is used by meta browser\n+  public static String getTransitioningOnServerName(final Result r, final int replicaId) {\n+      byte[] serverColumn = getServerNameColumn(replicaId);\n+      Cell cell = r.getColumnLatestCell(getCatalogFamily(), serverColumn);\n+      return (cell != null && cell.getValueLength() > 0)\n+        ? Bytes.toString(cell.getValueArray(), cell.getValueOffset(), cell.getValueLength())\n+        : null;\n   }\n \n   /**\n"}}, {"oid": "68aedc17db0a98195628b999f2805de1fc155c4d", "url": "https://github.com/apache/hbase/commit/68aedc17db0a98195628b999f2805de1fc155c4d", "message": "HBASE-23969 Meta browser should show all `info` columns", "committedDate": "2020-05-04T21:03:02Z", "type": "commit"}, {"oid": "0f2e1177da13603fd98c1474a89a363d1fe49029", "url": "https://github.com/apache/hbase/commit/0f2e1177da13603fd98c1474a89a363d1fe49029", "message": "Address Viraj and Nick comments\n\n1. transitioningOnServerName -> targetServerName, clearer and shorter\n2. Reuse existing getServerNameColumn and getRegionServer\n3. Add seqNum\n4. Merge (parent) region names joined by newline instead of ,\n5. Use table style instead of repeating th/td style for nowrap", "committedDate": "2020-05-04T21:03:04Z", "type": "commit"}, {"oid": "ee0184bf61762e1490db1a5ae895b74ad2b695ea", "url": "https://github.com/apache/hbase/commit/ee0184bf61762e1490db1a5ae895b74ad2b695ea", "message": "Minor fix for seqNum", "committedDate": "2020-05-04T21:03:04Z", "type": "commit"}, {"oid": "15564ea3135c919fbe763b5bc1eb7f5efb2d5f09", "url": "https://github.com/apache/hbase/commit/15564ea3135c919fbe763b5bc1eb7f5efb2d5f09", "message": "Address comments for sake of less interpretation\n\n- Rename \"ServerName\" to \"Server\", keep \"Target Server\" for info:sn\n- Show \"info:split*\" together with newline-delimited list\n- Rename \"Merger ServerName\" to \"info:merge*\"\n- Rename SplitA/SplitB columns to \"info:split*\"\n- Add tooltip for each column in table head", "committedDate": "2020-05-04T21:03:04Z", "type": "commit"}, {"oid": "eb258ff1ae9820d667c87397449214a2b4753354", "url": "https://github.com/apache/hbase/commit/eb258ff1ae9820d667c87397449214a2b4753354", "message": "Add tooltip to all <td/>", "committedDate": "2020-05-04T21:03:04Z", "type": "commit"}, {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39", "url": "https://github.com/apache/hbase/commit/9f8f10eb6518d39b1564f1c7597d2fb66933de39", "message": "Use LinkedHashMap to preserver insertion-ordered for split/merge columns", "committedDate": "2020-05-04T21:03:05Z", "type": "commit"}, {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39", "url": "https://github.com/apache/hbase/commit/9f8f10eb6518d39b1564f1c7597d2fb66933de39", "message": "Use LinkedHashMap to preserver insertion-ordered for split/merge columns", "committedDate": "2020-05-04T21:03:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzNTk1OQ==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420235959", "bodyText": "unused import.", "author": "ndimiduk", "createdAt": "2020-05-05T16:19:06Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -26,6 +26,7 @@\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashMap;", "originalCommit": "9f8f10eb6518d39b1564f1c7597d2fb66933de39", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5bef876ddf20ba436e0789d19110410c43db327d", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\nindex 01d6f9c01a..a4477e0db8 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n\n@@ -26,7 +26,6 @@ import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODU1Mg==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420238552", "bodyText": "A few unused imports to cleanup.", "author": "ndimiduk", "createdAt": "2020-05-05T16:22:57Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -17,14 +17,22 @@\n  */\n package org.apache.hadoop.hbase.master.webapp;\n \n+import static org.apache.hbase.thirdparty.org.apache.commons.collections4.ListUtils.emptyIfNull;", "originalCommit": "9f8f10eb6518d39b1564f1c7597d2fb66933de39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3OTk5OA==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420579998", "bodyText": "Thanks! I have fixed this.\np.s. For a PR to Hadoop, I usually check the \"checkstyle\" report by Yetus and update the patch accordingly. I see the Yetus for HBase QA does not report \"checkstyle\" warnings in the comment table. I found there are report links in the \"Console output\" though. I'll follow there next time. :)", "author": "liuml07", "createdAt": "2020-05-06T06:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODU1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI1Mjk1OQ==", "url": "https://github.com/apache/hbase/pull/1485#discussion_r422252959", "bodyText": "Due to complications around multi-jdk support, we have Yetus run in 3 different invocations. Looks like the checkstyle check gave you a +1.", "author": "ndimiduk", "createdAt": "2020-05-08T16:52:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODU1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5bef876ddf20ba436e0789d19110410c43db327d", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java\nindex 8000027123..3e47d2ad2d 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java\n\n@@ -17,15 +17,10 @@\n  */\n package org.apache.hadoop.hbase.master.webapp;\n \n-import static org.apache.hbase.thirdparty.org.apache.commons.collections4.ListUtils.emptyIfNull;\n-\n-import java.util.Arrays;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Objects;\n import java.util.stream.Collectors;\n import java.util.stream.StreamSupport;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n"}}, {"oid": "5bef876ddf20ba436e0789d19110410c43db327d", "url": "https://github.com/apache/hbase/commit/5bef876ddf20ba436e0789d19110410c43db327d", "message": "Address Nick Dimiduk comments", "committedDate": "2020-05-06T06:30:53Z", "type": "commit"}]}