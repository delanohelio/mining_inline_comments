{"pr_number": 1273, "pr_title": "HBASE-23967 Improve the accuracy of the method sizeToString", "pr_createdAt": "2020-03-11T10:34:14Z", "pr_url": "https://github.com/apache/hbase/pull/1273", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMzM2OA==", "url": "https://github.com/apache/hbase/pull/1273#discussion_r390913368", "bodyText": "Please try to provide formatting for every condition i.e.\nif (size >= (1L << 50)) {\n  return String.format(\"%.2fP\", (double)size / (1L << 50));\n}", "author": "virajjasani", "createdAt": "2020-03-11T11:41:23Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/quotas/QuotaSettings.java", "diffHunk": "@@ -173,12 +173,12 @@ protected String ownerToString() {\n   }\n \n   protected static String sizeToString(final long size) {\n-    if (size >= (1L << 50)) return String.format(\"%dP\", size / (1L << 50));\n-    if (size >= (1L << 40)) return String.format(\"%dT\", size / (1L << 40));\n-    if (size >= (1L << 30)) return String.format(\"%dG\", size / (1L << 30));\n-    if (size >= (1L << 20)) return String.format(\"%dM\", size / (1L << 20));\n-    if (size >= (1L << 10)) return String.format(\"%dK\", size / (1L << 10));\n-    return String.format(\"%dB\", size);\n+    if (size >= (1L << 50)) return String.format(\"%.2fP\", (double)size / (1L << 50));", "originalCommit": "daf4e04c9f044ea5d448257942878263fda64b15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2NTYzMw==", "url": "https://github.com/apache/hbase/pull/1273#discussion_r391065633", "bodyText": "Please try to provide formatting for every condition i.e.\nif (size >= (1L << 50)) {\n  return String.format(\"%.2fP\", (double)size / (1L << 50));\n}\n\n\nFormatted, thanks for your review", "author": "xuqinya1", "createdAt": "2020-03-11T15:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkxMzM2OA=="}], "type": "inlineReview", "revised_code": {"commit": "5afa5125a1462e7197d0699f80eaed9c59655081", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/quotas/QuotaSettings.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/quotas/QuotaSettings.java\nindex c5e6430ec2..b51a20d6e0 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/quotas/QuotaSettings.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/quotas/QuotaSettings.java\n\n@@ -173,11 +173,21 @@ public abstract class QuotaSettings {\n   }\n \n   protected static String sizeToString(final long size) {\n-    if (size >= (1L << 50)) return String.format(\"%.2fP\", (double)size / (1L << 50));\n-    if (size >= (1L << 40)) return String.format(\"%.2fT\", (double)size / (1L << 40));\n-    if (size >= (1L << 30)) return String.format(\"%.2fG\", (double)size / (1L << 30));\n-    if (size >= (1L << 20)) return String.format(\"%.2fM\", (double)size / (1L << 20));\n-    if (size >= (1L << 10)) return String.format(\"%.2fK\", (double)size / (1L << 10));\n+    if (size >= (1L << 50)) {\n+      return String.format(\"%.2fP\", (double)size / (1L << 50));\n+    }\n+    if (size >= (1L << 40)) {\n+      return String.format(\"%.2fT\", (double)size / (1L << 40));\n+    }\n+    if (size >= (1L << 30)) {\n+      return String.format(\"%.2fG\", (double)size / (1L << 30));\n+    }\n+    if (size >= (1L << 20)) {\n+      return String.format(\"%.2fM\", (double)size / (1L << 20));\n+    }\n+    if (size >= (1L << 10)) {\n+      return String.format(\"%.2fK\", (double)size / (1L << 10));\n+    }\n     return String.format(\"%.2fB\", (double)size);\n   }\n \n"}}, {"oid": "5afa5125a1462e7197d0699f80eaed9c59655081", "url": "https://github.com/apache/hbase/commit/5afa5125a1462e7197d0699f80eaed9c59655081", "message": "HBASE-23967 Improve the accuracy of the method sizeToString", "committedDate": "2020-03-11T15:38:22Z", "type": "commit"}]}