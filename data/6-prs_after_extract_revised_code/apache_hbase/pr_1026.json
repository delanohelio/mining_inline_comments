{"pr_number": 1026, "pr_title": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore", "pr_createdAt": "2020-01-13T02:47:12Z", "pr_url": "https://github.com/apache/hbase/pull/1026", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzMzMQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366123331", "bodyText": "I think it is usually better to do nullable annotations with issues like this to make the contracts clear at the API level.  It also helps static code analyzers to catch issues like these.\nFor example you could do @nullable in this case..", "author": "bharathv", "createdAt": "2020-01-14T02:12:29Z", "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java", "diffHunk": "@@ -733,6 +733,9 @@ public long getKeepAliveTime(final TimeUnit timeUnit) {\n    * @param chore the chore to add\n    */\n   public void addChore(ProcedureInMemoryChore<TEnvironment> chore) {\n+    if (chore == null) {", "originalCommit": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMwMDU5NQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366300595", "bodyText": "OK", "author": "binlijin", "createdAt": "2020-01-14T12:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzMzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java b/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java\nindex 048f9eddce..e4bba22e93 100644\n--- a/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java\n+++ b/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java\n\n@@ -732,7 +733,7 @@ public class ProcedureExecutor<TEnvironment> {\n    * Add a chore procedure to the executor\n    * @param chore the chore to add\n    */\n-  public void addChore(ProcedureInMemoryChore<TEnvironment> chore) {\n+  public void addChore(@Nullable ProcedureInMemoryChore<TEnvironment> chore) {\n     if (chore == null) {\n       return;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366123523", "bodyText": "nit: Guess this is redundant if the method accepts null values.", "author": "bharathv", "createdAt": "2020-01-14T02:13:09Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1378,7 +1378,9 @@ public void joinCluster() throws IOException {\n \n     // Start the chores\n     master.getMasterProcedureExecutor().addChore(this.ritChore);\n-    master.getMasterProcedureExecutor().addChore(this.deadMetricChore);\n+    if (this.deadMetricChore != null) {", "originalCommit": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMwMDU0NA==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366300544", "bodyText": "Yes.", "author": "binlijin", "createdAt": "2020-01-14T12:02:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4ODUwNA==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366988504", "bodyText": "I mean .. we can get rid of this if block? addChore has a similar check right?", "author": "bharathv", "createdAt": "2020-01-15T16:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIwMzcyNQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367203725", "bodyText": "I know it can  be removed,  add it to show just where is wrong actually and cause the problem.", "author": "binlijin", "createdAt": "2020-01-16T02:27:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1ODI3MQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r375558271", "bodyText": "nit: Remove the if condition here, since the method's args are Nullable?", "author": "bharathv", "createdAt": "2020-02-05T23:05:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw=="}], "type": "inlineReview", "revised_code": {"commit": "c5b7eb8307adf324151a978e5e806e35c03e1977", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex c6aba78332..efd144d3b2 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -1378,9 +1378,7 @@ public class AssignmentManager {\n \n     // Start the chores\n     master.getMasterProcedureExecutor().addChore(this.ritChore);\n-    if (this.deadMetricChore != null) {\n-      master.getMasterProcedureExecutor().addChore(this.deadMetricChore);\n-    }\n+    master.getMasterProcedureExecutor().addChore(this.deadMetricChore);\n \n     long costMs = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime);\n     LOG.info(\"Joined the cluster in {}\", StringUtils.humanTimeDiff(costMs));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MDY2OQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366480669", "bodyText": "Copy + paste leftovers?", "author": "bharathv", "createdAt": "2020-01-14T17:44:20Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**", "originalCommit": "8cebce3675a9cbd7c5e33511b6e302be232d2de7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MTM1Mw==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366661353", "bodyText": "yes, fix it", "author": "binlijin", "createdAt": "2020-01-15T01:46:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MDY2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\nindex 74549c3893..a419641e3e 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n\n@@ -17,23 +17,21 @@\n  */\n package org.apache.hadoop.hbase.master.assignment;\n \n-import org.apache.hadoop.conf.Configuration;\n+import static org.junit.Assert.fail;\n import org.apache.hadoop.hbase.HBaseClassTestRule;\n import org.apache.hadoop.hbase.HBaseTestingUtility;\n-import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.testclassification.LargeTests;\n import org.apache.hadoop.hbase.testclassification.MasterTests;\n-import org.apache.hadoop.hbase.util.FSUtils;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n \n-/**\n- * Base class for AM test.\n+/*\n+ * Testcase for HBASE-23682.\n  */\n-@Category({ MasterTests.class, LargeTests.class })\n+@Category({ MasterTests.class, MediumTests.class })\n public class TestDeadServerMetricRegionChore {\n \n   @ClassRule\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MDc5NA==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366480794", "bodyText": "This would be MediumTest, no?", "author": "bharathv", "createdAt": "2020-01-14T17:44:36Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Base class for AM test.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })", "originalCommit": "8cebce3675a9cbd7c5e33511b6e302be232d2de7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MTMxNA==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366661314", "bodyText": "OK", "author": "binlijin", "createdAt": "2020-01-15T01:45:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MDc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\nindex 74549c3893..a419641e3e 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n\n@@ -17,23 +17,21 @@\n  */\n package org.apache.hadoop.hbase.master.assignment;\n \n-import org.apache.hadoop.conf.Configuration;\n+import static org.junit.Assert.fail;\n import org.apache.hadoop.hbase.HBaseClassTestRule;\n import org.apache.hadoop.hbase.HBaseTestingUtility;\n-import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.testclassification.LargeTests;\n import org.apache.hadoop.hbase.testclassification.MasterTests;\n-import org.apache.hadoop.hbase.util.FSUtils;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n \n-/**\n- * Base class for AM test.\n+/*\n+ * Testcase for HBASE-23682.\n  */\n-@Category({ MasterTests.class, LargeTests.class })\n+@Category({ MasterTests.class, MediumTests.class })\n public class TestDeadServerMetricRegionChore {\n \n   @ClassRule\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTI0Nw==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366481247", "bodyText": "Again looks like a remnant of copy+paste from TestAssignment...", "author": "bharathv", "createdAt": "2020-01-14T17:45:36Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Base class for AM test.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  protected void setupConfiguration(Configuration conf) throws Exception {\n+    FSUtils.setRootDir(conf, util.getDataTestDir());", "originalCommit": "8cebce3675a9cbd7c5e33511b6e302be232d2de7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MTQxMw==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366661413", "bodyText": "fix it", "author": "binlijin", "createdAt": "2020-01-15T01:46:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\nindex 74549c3893..a419641e3e 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n\n@@ -17,23 +17,21 @@\n  */\n package org.apache.hadoop.hbase.master.assignment;\n \n-import org.apache.hadoop.conf.Configuration;\n+import static org.junit.Assert.fail;\n import org.apache.hadoop.hbase.HBaseClassTestRule;\n import org.apache.hadoop.hbase.HBaseTestingUtility;\n-import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.testclassification.LargeTests;\n import org.apache.hadoop.hbase.testclassification.MasterTests;\n-import org.apache.hadoop.hbase.util.FSUtils;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n \n-/**\n- * Base class for AM test.\n+/*\n+ * Testcase for HBASE-23682.\n  */\n-@Category({ MasterTests.class, LargeTests.class })\n+@Category({ MasterTests.class, MediumTests.class })\n public class TestDeadServerMetricRegionChore {\n \n   @ClassRule\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTQzNg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366481436", "bodyText": "Move to tearDown()?", "author": "bharathv", "createdAt": "2020-01-14T17:45:59Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Base class for AM test.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  protected void setupConfiguration(Configuration conf) throws Exception {\n+    FSUtils.setRootDir(conf, util.getDataTestDir());\n+    // Disable DeadServerMetricRegionChore\n+    conf.setInt(AssignmentManager.DEAD_REGION_METRIC_CHORE_INTERVAL_MSEC_CONF_KEY, -1);\n+  }\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    util = new HBaseTestingUtility();\n+    setupConfiguration(util.getConfiguration());\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+  }\n+\n+  @Test\n+  public void testDeadServerMetricRegionChore() throws Exception {\n+    try {\n+      this.util.startMiniCluster();\n+      // Master start up normal.\n+      final TableName tableName = TableName.valueOf(\"testDeadServerMetricRegionChore\");\n+      this.util.createTable(tableName, \"f\");\n+      this.util.waitTableAvailable(tableName);\n+    } finally {\n+      this.util.killMiniHBaseCluster();", "originalCommit": "8cebce3675a9cbd7c5e33511b6e302be232d2de7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3MzE4MQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366573181", "bodyText": "I think it's better to have a shutdown, instead of kill the cluster, in tearDown. Also seems that an assertion in this test is missing.", "author": "HorizonNet", "createdAt": "2020-01-14T21:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2NzUzNw==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366667537", "bodyText": "The test is failed  when startMiniCluster without this patch.\n[INFO] Running org.apache.hadoop.hbase.master.assignment.TestDeadServerMetricRegionChore\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 210.246 s <<< FAILURE! - in org.apache.hadoop.hbase.master.assignment.TestDeadServerMetricRegionChore\n[ERROR] org.apache.hadoop.hbase.master.assignment.TestDeadServerMetricRegionChore.testDeadServerMetricRegionChore  Time elapsed: 210.054 s  <<< ERROR!\njava.io.IOException: Shutting down\nat org.apache.hadoop.hbase.master.assignment.TestDeadServerMetricRegionChore.testDeadServerMetricRegionChore(TestDeadServerMetricRegionChore.java:60)\nCaused by: java.lang.RuntimeException: Master not initialized after 200000ms\nat org.apache.hadoop.hbase.master.assignment.TestDeadServerMetricRegionChore.testDeadServerMetricRegionChore(TestDeadServerMetricRegionChore.java:60)", "author": "binlijin", "createdAt": "2020-01-15T02:16:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyNzcwMg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367327702", "bodyText": "Is the shutdown failing or because it is part of the tearDown?", "author": "HorizonNet", "createdAt": "2020-01-16T10:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMzNzcyNg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367337726", "bodyText": "The shutdown has no problem, i already change killMiniHBaseCluster\nto shutdownMiniCluster.", "author": "binlijin", "createdAt": "2020-01-16T10:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\nindex 74549c3893..a419641e3e 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n\n@@ -17,23 +17,21 @@\n  */\n package org.apache.hadoop.hbase.master.assignment;\n \n-import org.apache.hadoop.conf.Configuration;\n+import static org.junit.Assert.fail;\n import org.apache.hadoop.hbase.HBaseClassTestRule;\n import org.apache.hadoop.hbase.HBaseTestingUtility;\n-import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.testclassification.LargeTests;\n import org.apache.hadoop.hbase.testclassification.MasterTests;\n-import org.apache.hadoop.hbase.util.FSUtils;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n \n-/**\n- * Base class for AM test.\n+/*\n+ * Testcase for HBASE-23682.\n  */\n-@Category({ MasterTests.class, LargeTests.class })\n+@Category({ MasterTests.class, MediumTests.class })\n public class TestDeadServerMetricRegionChore {\n \n   @ClassRule\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366989893", "bodyText": "Still don't understand why we cant move startMiniCluster() to setUp() and shutDownMiniCLuster() to tearDown().\nI get the point that without the patch, startMiniCluster() throws, but with the patch, it shouldn't, right? Did I miss something.", "author": "bharathv", "createdAt": "2020-01-15T16:53:42Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Testcase for HBASE-23682.\n+ */\n+@Category({ MasterTests.class, MediumTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    util = new HBaseTestingUtility();\n+    // Disable DeadServerMetricRegionChore\n+    util.getConfiguration()\n+      .setInt(AssignmentManager.DEAD_REGION_METRIC_CHORE_INTERVAL_MSEC_CONF_KEY, -1);\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+  }\n+\n+  @Test\n+  public void testDeadServerMetricRegionChore() throws Exception {\n+    try {\n+      this.util.startMiniCluster();", "originalCommit": "0419b2aea6a5acab96cd739957297069154ab10f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIwNDQzNg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367204436", "bodyText": "Yes, without the patch HMaster will abort when startup so startMiniCluster throws exception, with the patch it will not.", "author": "binlijin", "createdAt": "2020-01-16T02:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2NzY2Mg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367567662", "bodyText": "So, I think the only pending question is ...why not move shutdownMiniCluster() to tearDown()? I think @HorizonNet is also asking the same thing.", "author": "bharathv", "createdAt": "2020-01-16T18:01:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczNjE5OQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367736199", "bodyText": "Ok, fix it.", "author": "binlijin", "createdAt": "2020-01-17T01:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1ODQwMg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r375558402", "bodyText": "Didn't address this yet?", "author": "bharathv", "createdAt": "2020-02-05T23:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3NTE4MA==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r375675180", "bodyText": "shutdownMiniCluster() already move to tearDown(), shoud have addressed it.", "author": "binlijin", "createdAt": "2020-02-06T07:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\nindex f3b1fcb257..a419641e3e 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n\n@@ -17,9 +17,9 @@\n  */\n package org.apache.hadoop.hbase.master.assignment;\n \n+import static org.junit.Assert.fail;\n import org.apache.hadoop.hbase.HBaseClassTestRule;\n import org.apache.hadoop.hbase.HBaseTestingUtility;\n-import org.apache.hadoop.hbase.TableName;\n import org.apache.hadoop.hbase.testclassification.MasterTests;\n import org.apache.hadoop.hbase.testclassification.MediumTests;\n import org.junit.After;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MDA2Ng==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366990066", "bodyText": "nit: /*", "author": "bharathv", "createdAt": "2020-01-15T16:54:00Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**", "originalCommit": "0419b2aea6a5acab96cd739957297069154ab10f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIwNTEyNg==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367205126", "bodyText": "You mean change \"/**\" to \"/*\" ?    I see other tests all use \"/**\" no one use \"/*\"", "author": "binlijin", "createdAt": "2020-01-16T02:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MDA2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI2Mjk3Ng==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367262976", "bodyText": "/** is interpreted as a javadoc in IDEs. If you notice others' changes, people are switching to /* incrementally in their patches (files they are touching). Now that you are adding a new class, it is better to start with /*.", "author": "bharathv", "createdAt": "2020-01-16T07:18:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MDA2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4Mjc5MQ==", "url": "https://github.com/apache/hbase/pull/1026#discussion_r367282791", "bodyText": "OK, thanks for you explanation.", "author": "binlijin", "createdAt": "2020-01-16T08:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MDA2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\nindex f3b1fcb257..a419641e3e 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java\n\n@@ -17,9 +17,9 @@\n  */\n package org.apache.hadoop.hbase.master.assignment;\n \n+import static org.junit.Assert.fail;\n import org.apache.hadoop.hbase.HBaseClassTestRule;\n import org.apache.hadoop.hbase.HBaseTestingUtility;\n-import org.apache.hadoop.hbase.TableName;\n import org.apache.hadoop.hbase.testclassification.MasterTests;\n import org.apache.hadoop.hbase.testclassification.MediumTests;\n import org.junit.After;\n"}}, {"oid": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "url": "https://github.com/apache/hbase/commit/5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore", "committedDate": "2020-01-16T10:39:39Z", "type": "forcePushed"}, {"oid": "6580fa0a6cc0aff8116ba8a84499632fb46ed10a", "url": "https://github.com/apache/hbase/commit/6580fa0a6cc0aff8116ba8a84499632fb46ed10a", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore", "committedDate": "2020-01-17T01:50:07Z", "type": "forcePushed"}, {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977", "url": "https://github.com/apache/hbase/commit/c5b7eb8307adf324151a978e5e806e35c03e1977", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore", "committedDate": "2020-02-06T07:27:44Z", "type": "commit"}, {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977", "url": "https://github.com/apache/hbase/commit/c5b7eb8307adf324151a978e5e806e35c03e1977", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore", "committedDate": "2020-02-06T07:27:44Z", "type": "forcePushed"}]}