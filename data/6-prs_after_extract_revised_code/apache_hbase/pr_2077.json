{"pr_number": 2077, "pr_title": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead o\u2026", "pr_createdAt": "2020-07-16T03:14:16Z", "pr_url": "https://github.com/apache/hbase/pull/2077", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NjU5MQ==", "url": "https://github.com/apache/hbase/pull/2077#discussion_r455496591", "bodyText": "Should be compatible with the old ZK impl. Cannot remove them directly?", "author": "infraio", "createdAt": "2020-07-16T04:02:39Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -148,27 +149,30 @@ public boolean isAborted() {\n     return false;\n   }\n \n+  /**\n+   * Get the connection to peer cluster\n+   * @return connection to peer cluster\n+   * @throws IOException\n+   */\n+  protected synchronized Connection getPeerConnection() throws IOException {\n+    if (peerConnection == null) {\n+      peerConnection = ConnectionFactory.createConnection(ctx.getConfiguration());\n+    }\n+    return peerConnection;\n+  }\n+\n   /**\n    * Get the list of all the region servers from the specified peer\n-   * @param zkw zk connection to use\n    * @return list of region server addresses or an empty list if the slave is unavailable\n    */\n-  protected static List<ServerName> fetchSlavesAddresses(ZKWatcher zkw)", "originalCommit": "7c06e150a5d065c3865e9335c611db61dc042572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyNjMyMQ==", "url": "https://github.com/apache/hbase/pull/2077#discussion_r455626321", "bodyText": "OK\uff0ctry new impl firstly and old ZK impl secondly, is that OK?", "author": "ddupg", "createdAt": "2020-07-16T08:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NjU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4f051756748965caec708086d3bd1c53b0432c0e", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java\nindex 6057735f97..92eaaf0378 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java\n\n@@ -165,10 +176,26 @@ public abstract class HBaseReplicationEndpoint extends BaseReplicationEndpoint\n    * Get the list of all the region servers from the specified peer\n    * @return list of region server addresses or an empty list if the slave is unavailable\n    */\n-  protected List<ServerName> fetchSlavesAddresses() throws IOException {\n+  protected List<ServerName> fetchSlavesAddresses() throws KeeperException {\n+    // fetch from master firstly\n     try (Admin admin = getPeerConnection().getAdmin()) {\n       return admin.listReplicationSinkServers();\n+    } catch (IOException e) {\n+      LOG.warn(\"Attempt to fetch servers from master of peer cluster.\"\n+          + \" May be because the peer cluster doesn't support this way\", e);\n     }\n+    // fetch from zk secondly\n+    ZKWatcher zk = getZkw();\n+    List<String> children = ZKUtil.listChildrenAndWatchForNewChildren(zk,\n+        zk.getZNodePaths().rsZNode);\n+    if (children == null) {\n+      return Collections.emptyList();\n+    }\n+    List<ServerName> addresses = new ArrayList<>(children.size());\n+    for (String child : children) {\n+      addresses.add(ServerName.parseServerName(child));\n+    }\n+    return addresses;\n   }\n \n   /**\n"}}, {"oid": "4f051756748965caec708086d3bd1c53b0432c0e", "url": "https://github.com/apache/hbase/commit/4f051756748965caec708086d3bd1c53b0432c0e", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-16T08:01:12Z", "type": "forcePushed"}, {"oid": "000e8740f19be71925c0624e53db905179ca07b8", "url": "https://github.com/apache/hbase/commit/000e8740f19be71925c0624e53db905179ca07b8", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-16T08:10:29Z", "type": "forcePushed"}, {"oid": "069337f933ebb2042813a5d8da0f738f786086f5", "url": "https://github.com/apache/hbase/commit/069337f933ebb2042813a5d8da0f738f786086f5", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-16T11:05:31Z", "type": "forcePushed"}, {"oid": "89661e89425bcd063bd9a72f532e62cee70153c2", "url": "https://github.com/apache/hbase/commit/89661e89425bcd063bd9a72f532e62cee70153c2", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-20T07:38:12Z", "type": "forcePushed"}, {"oid": "b16639e8d5ff33eee78485ca9598b32bf3bdd5f8", "url": "https://github.com/apache/hbase/commit/b16639e8d5ff33eee78485ca9598b32bf3bdd5f8", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-21T07:13:48Z", "type": "forcePushed"}, {"oid": "de926bacff1e3c0a98ca4d48831461725b2d72b4", "url": "https://github.com/apache/hbase/commit/de926bacff1e3c0a98ca4d48831461725b2d72b4", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-21T09:04:02Z", "type": "forcePushed"}, {"oid": "955791ed0ddbcda4f48f753ea085203723a9be2c", "url": "https://github.com/apache/hbase/commit/955791ed0ddbcda4f48f753ea085203723a9be2c", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-21T11:44:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg==", "url": "https://github.com/apache/hbase/pull/2077#discussion_r458267492", "bodyText": "Would it be interesting to also add a config flag allowing 3+ versions to optionally still use ZK?", "author": "wchevreuil", "createdAt": "2020-07-21T17:28:18Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -87,8 +108,24 @@ public void stop() {\n   }\n \n   @Override\n-  protected void doStart() {\n+  protected synchronized void doStart() {\n     try {\n+      try (Admin admin = getPeerConnection().getAdmin()) {\n+        String version = admin.getClusterMetrics().getHBaseVersion();\n+        LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n+        if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {", "originalCommit": "955791ed0ddbcda4f48f753ea085203723a9be2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDAzOA==", "url": "https://github.com/apache/hbase/pull/2077#discussion_r458520038", "bodyText": "Thanks @wchevreuil for reviewing.\nReplicationSinkManager.chooseSinks will be called to re-fetch the sinks when HBaseInterClusterReplicationEndpoint.replicate catches ConnectException or UnknownHostException, It's same as before.\nAnd I've added a config \"hbase.replication.fetch.servers.usezk\" to optionally still use ZK impl.", "author": "ddupg", "createdAt": "2020-07-22T04:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2ODc5OQ==", "url": "https://github.com/apache/hbase/pull/2077#discussion_r458668799", "bodyText": "ReplicationSinkManager.chooseSinks will be called to re-fetch the sinks when HBaseInterClusterReplicationEndpoint.replicate catches ConnectException or UnknownHostException, It's same as before.\n\nYeah, haven't looked at the outer catch from replicate. Another thought them is if we really need the new chore? I wonder how effective it would really be to avoid trying stale sinks.", "author": "wchevreuil", "createdAt": "2020-07-22T09:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3OTU2Mw==", "url": "https://github.com/apache/hbase/pull/2077#discussion_r459879563", "bodyText": "Another thought them is if we really need the new chore? I wonder how effective it would really be to avoid trying stale sinks.\n\nThank @wchevreuil  for thinking about this.\nI had a thought, there is some differences between regionServers stored in HBaseReplicationEndpoint and sinks stored in ReplicationSinkManager. The latter is a random part of the former. The new chore can remove abandoned servers and discover new servers. If there is no such chore, new servers can't be sinks unless exceptions happen due to RSs crash.", "author": "ddupg", "createdAt": "2020-07-24T06:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "95e8050905af6fe3abf6ced3e34e7b9c1d6bbdb0", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java\nindex 1255af3c28..7d71f6aeaa 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java\n\n@@ -110,21 +117,25 @@ public abstract class HBaseReplicationEndpoint extends BaseReplicationEndpoint\n   @Override\n   protected synchronized void doStart() {\n     try {\n-      try (Admin admin = getPeerConnection().getAdmin()) {\n-        String version = admin.getClusterMetrics().getHBaseVersion();\n-        LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n-        if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {\n-          setRegionServers(fetchSlavesAddresses());\n-          fetchServersUseZk = false;\n-          fetchServersChore = new FetchServersChore(ctx.getServer(), this);\n-          ctx.getServer().getChoreService().scheduleChore(fetchServersChore);\n-        } else {\n+      if (ctx.getLocalConfiguration().getBoolean(FETCH_SERVERS_USE_ZK_CONF_KEY, false)) {\n+        fetchServersUseZk = true;\n+      } else {\n+        try (Admin admin = getPeerConnection().getAdmin()) {\n+          String version = admin.getClusterMetrics().getHBaseVersion();\n+          LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n+          if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {\n+            setRegionServers(fetchSlavesAddresses());\n+            fetchServersChore = new FetchServersChore(ctx.getServer(), this);\n+            ctx.getServer().getChoreService().scheduleChore(fetchServersChore);\n+            fetchServersUseZk = false;\n+          } else {\n+            fetchServersUseZk = true;\n+          }\n+        } catch (Throwable t) {\n           fetchServersUseZk = true;\n+          LOG.warn(\"Peer {} try to fetch servers by admin failed. Using zk impl.\",\n+              ctx.getPeerId(), t);\n         }\n-      } catch (Throwable t) {\n-        fetchServersUseZk = true;\n-        LOG.warn(\"Peer {} try to fetch servers by admin failed. Using zk impl.\",\n-            ctx.getPeerId(), t);\n       }\n       reloadZkWatcher();\n       notifyStarted();\n"}}, {"oid": "95e8050905af6fe3abf6ced3e34e7b9c1d6bbdb0", "url": "https://github.com/apache/hbase/commit/95e8050905af6fe3abf6ced3e34e7b9c1d6bbdb0", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-22T01:48:24Z", "type": "forcePushed"}, {"oid": "073dca044a629e1d03ab4db7959325dcb5a11508", "url": "https://github.com/apache/hbase/commit/073dca044a629e1d03ab4db7959325dcb5a11508", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-07-23T03:30:35Z", "type": "forcePushed"}, {"oid": "f90c37eee6026a23a956e1f433f47ca7916a297b", "url": "https://github.com/apache/hbase/commit/f90c37eee6026a23a956e1f433f47ca7916a297b", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-08-21T03:17:35Z", "type": "forcePushed"}, {"oid": "d2ff2434573381504bc71010054d6574c310203f", "url": "https://github.com/apache/hbase/commit/d2ff2434573381504bc71010054d6574c310203f", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-07T10:33:13Z", "type": "forcePushed"}, {"oid": "d351993b8510814a11d6dcdab595dd8f7a0b8275", "url": "https://github.com/apache/hbase/commit/d351993b8510814a11d6dcdab595dd8f7a0b8275", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-07T10:39:01Z", "type": "forcePushed"}, {"oid": "6552ee1e963c3fcdec9a7b507997ee5e3548bbbc", "url": "https://github.com/apache/hbase/commit/6552ee1e963c3fcdec9a7b507997ee5e3548bbbc", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-08T08:54:38Z", "type": "forcePushed"}, {"oid": "2cf24da55f0aee423bd68a0719b73d0e707fe9e3", "url": "https://github.com/apache/hbase/commit/2cf24da55f0aee423bd68a0719b73d0e707fe9e3", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-08T10:12:43Z", "type": "forcePushed"}, {"oid": "8ec7bc2480ef78e84efb77fa92448538fe237361", "url": "https://github.com/apache/hbase/commit/8ec7bc2480ef78e84efb77fa92448538fe237361", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-10T04:01:18Z", "type": "forcePushed"}, {"oid": "390f58738ab58c523cb4eb4c3059f294ccd91581", "url": "https://github.com/apache/hbase/commit/390f58738ab58c523cb4eb4c3059f294ccd91581", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-11T07:09:01Z", "type": "forcePushed"}, {"oid": "97b36f363c58f3205cd47a431e9caea5d159a0db", "url": "https://github.com/apache/hbase/commit/97b36f363c58f3205cd47a431e9caea5d159a0db", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-14T06:36:41Z", "type": "forcePushed"}, {"oid": "4ec226e0169a0a3cc7642a01a7e7260098be29cc", "url": "https://github.com/apache/hbase/commit/4ec226e0169a0a3cc7642a01a7e7260098be29cc", "message": "HBASE-24681 Remove the cache walsById/walsByIdRecoveredQueues from ReplicationSourceManager (#2019)\n\nSigned-off-by: Wellington Chevreuil <wchevreuil@apache.org>", "committedDate": "2020-09-15T02:18:26Z", "type": "commit"}, {"oid": "4d25e7c70444ae29acafc6082c58bc22176e41bc", "url": "https://github.com/apache/hbase/commit/4d25e7c70444ae29acafc6082c58bc22176e41bc", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-15T02:18:26Z", "type": "forcePushed"}, {"oid": "969ddcae00afae16482e404c35c84b3b1454f323", "url": "https://github.com/apache/hbase/commit/969ddcae00afae16482e404c35c84b3b1454f323", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-16T11:35:21Z", "type": "commit"}, {"oid": "969ddcae00afae16482e404c35c84b3b1454f323", "url": "https://github.com/apache/hbase/commit/969ddcae00afae16482e404c35c84b3b1454f323", "message": "HBASE-24684 Fetch ReplicationSink servers list from HMaster instead of ZooKeeper", "committedDate": "2020-09-16T11:35:21Z", "type": "forcePushed"}]}