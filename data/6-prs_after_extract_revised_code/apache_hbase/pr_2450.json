{"pr_number": 2450, "pr_title": "HBASE-25093 the RSGroupBasedLoadBalancer#retainAssignment throws NPE", "pr_createdAt": "2020-09-24T02:35:55Z", "pr_url": "https://github.com/apache/hbase/pull/2450", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDgxNA==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r494004814", "bodyText": "When will retainAssignment return null? If there is no difference between a null and an empty Map, let's just return an empty Map to avoid the null check here?", "author": "Apache9", "createdAt": "2020-09-24T02:39:15Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -203,8 +203,11 @@ public void setMasterServices(MasterServices masterServices) {\n         regionList.forEach(r -> currentAssignmentMap.put(r, regions.get(r)));\n         Map<ServerName, List<RegionInfo>> pairResult =\n             this.internalBalancer.retainAssignment(currentAssignmentMap, pair.getSecond());\n-        pairResult.forEach((server, rs) ->\n-            assignments.computeIfAbsent(server, s -> Lists.newArrayList()).addAll(rs));\n+        if (pairResult == null || pairResult.isEmpty()) {", "originalCommit": "275f0bdeb56cbb6ae80f626333635e505adc2598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MDQ5OQ==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r494240499", "bodyText": "the BaseLoadBalancer.retainAssignment may return null when online server is empty(for some situation), then will add these regions to pendingAssignQueue to retry assign.\nactually, the RSGroupBasedLoadBalancer.retainAssignment will do generateGroupAssignments first, so when invoke internalBalancer.retainAssignment the server list can't be empty, at least has BOGUS_SERVER_NAME,so here can not return null", "author": "nyl3532016", "createdAt": "2020-09-24T11:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDgxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MjE1NQ==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r494242155", "bodyText": "@cuibo01 do you meet this NPE in production environment?", "author": "nyl3532016", "createdAt": "2020-09-24T11:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDgxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNzczNQ==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r495437735", "bodyText": "Seems you do not get my point...\nWhat I mean is what is the difference when returning null and an empty Map for the retainAssignment method... I do not care when will the method return null, I just want to know, is it OK to change to return an empty Map. If not, why?", "author": "Apache9", "createdAt": "2020-09-26T09:32:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDgxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ5MTk1MQ==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r496491951", "bodyText": "Yes, Let me refactor retainAssignment and roundRobinAssignment with nonNull return", "author": "nyl3532016", "createdAt": "2020-09-29T07:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAwNDgxNA=="}], "type": "inlineReview", "revised_code": {"commit": "2a04beb23230a7f331e61d257462cf6f6f4a5e25", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java\nindex 65f5c0110c..4ed39ec480 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java\n\n@@ -203,11 +203,10 @@ public class RSGroupBasedLoadBalancer implements LoadBalancer {\n         regionList.forEach(r -> currentAssignmentMap.put(r, regions.get(r)));\n         Map<ServerName, List<RegionInfo>> pairResult =\n             this.internalBalancer.retainAssignment(currentAssignmentMap, pair.getSecond());\n-        if (pairResult == null || pairResult.isEmpty()) {\n-          continue;\n+        if (pairResult != null) {\n+          pairResult.forEach((server, rs) -> assignments\n+              .computeIfAbsent(server, s -> Lists.newArrayList()).addAll(rs));\n         }\n-        pairResult.forEach((server, rs) -> assignments\n-            .computeIfAbsent(server, s -> Lists.newArrayList()).addAll(rs));\n       }\n       return assignments;\n     } catch (IOException e) {\n"}}, {"oid": "2a04beb23230a7f331e61d257462cf6f6f4a5e25", "url": "https://github.com/apache/hbase/commit/2a04beb23230a7f331e61d257462cf6f6f4a5e25", "message": "HBASE-25093 the RSGroupBasedLoadBalancer#retainAssignment throws NPE", "committedDate": "2020-09-24T11:20:25Z", "type": "forcePushed"}, {"oid": "8267ab4948b400e8925a752a32c1631c8c67550a", "url": "https://github.com/apache/hbase/commit/8267ab4948b400e8925a752a32c1631c8c67550a", "message": "HBASE-25093 the RSGroupBasedLoadBalancer#retainAssignment throws NPE", "committedDate": "2020-09-29T08:01:24Z", "type": "forcePushed"}, {"oid": "86275542f37d997544abe1fcddc704cec065c4ed", "url": "https://github.com/apache/hbase/commit/86275542f37d997544abe1fcddc704cec065c4ed", "message": "HBASE-25093 the RSGroupBasedLoadBalancer#retainAssignment throws NPE", "committedDate": "2020-09-29T12:04:26Z", "type": "commit"}, {"oid": "86275542f37d997544abe1fcddc704cec065c4ed", "url": "https://github.com/apache/hbase/commit/86275542f37d997544abe1fcddc704cec065c4ed", "message": "HBASE-25093 the RSGroupBasedLoadBalancer#retainAssignment throws NPE", "committedDate": "2020-09-29T12:04:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5NjU5NA==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r502796594", "bodyText": "Why this change?", "author": "Apache9", "createdAt": "2020-10-10T14:31:09Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -2150,12 +2150,8 @@ private void acceptPlan(final HashMap<RegionInfo, RegionStateNode> regions,\n     final ProcedureEvent<?>[] events = new ProcedureEvent[regions.size()];\n     final long st = System.currentTimeMillis();\n \n-    if (plan == null) {\n-      throw new HBaseIOException(\"unable to compute plans for regions=\" + regions.size());\n-    }\n-\n     if (plan.isEmpty()) {\n-      return;\n+      throw new HBaseIOException(\"unable to compute plans for regions=\" + regions.size());", "originalCommit": "86275542f37d997544abe1fcddc704cec065c4ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3MDA1Mg==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r502870052", "bodyText": "we use empty Map replace null return, so it means exception occur during assignment", "author": "nyl3532016", "createdAt": "2020-10-11T05:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5NjU5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkxMTM3Ng==", "url": "https://github.com/apache/hbase/pull/2450#discussion_r502911376", "bodyText": "Oh, just saw the 'plan == null' in the old code. This is a bit strange as the plan is a function parameter, but anyway, not your fault.", "author": "Apache9", "createdAt": "2020-10-11T12:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc5NjU5NA=="}], "type": "inlineReview", "revised_code": null}]}