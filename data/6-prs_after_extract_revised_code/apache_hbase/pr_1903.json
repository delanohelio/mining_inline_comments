{"pr_number": 1903, "pr_title": "HBASE-24562: Stabilize master startup with meta replicas enabled", "pr_createdAt": "2020-06-15T15:44:01Z", "pr_url": "https://github.com/apache/hbase/pull/1903", "timeline": [{"oid": "368b5f71e370690c365e3e762c144074c9bcfe87", "url": "https://github.com/apache/hbase/commit/368b5f71e370690c365e3e762c144074c9bcfe87", "message": "HBASE-24562: Stabilize master startup with meta replicas enabled\n\nmake meta replication async\ncatch and log exception instead of letting it crash master\nadd test", "committedDate": "2020-06-15T15:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r440297695", "bodyText": "As the main purpose of the change is to allow Master to complete initialisation in case of meta replica failures, shouldn't this test assert that HMaster.finishActiveMasterInitialization completes properly even with the induced replicas assignment failures? I can see we are asserting that replicas assignment fails, which is not what we actually want to safeguard from.", "author": "wchevreuil", "createdAt": "2020-06-15T16:25:34Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java", "diffHunk": "@@ -355,4 +362,58 @@ public void testShutdownOfReplicaHolder() throws Exception {\n       assertNotEquals(3, i);\n     }\n   }\n+\n+  @Test\n+  public void testFailedReplicaAssigment() throws InterruptedException, IOException {", "originalCommit": "368b5f71e370690c365e3e762c144074c9bcfe87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1MTkxOA==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r440851918", "bodyText": "Thanks for the feedback @wchevreuil ! I added a few extra checks to show that the partial meta replica assignment had happened and master is still active and running.", "author": "BukrosSzabolcs", "createdAt": "2020-06-16T13:32:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5NTYxNg==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441795616", "bodyText": "Have one question about the test case, do not see any exceptions thrown out during assigning meta replica regions, how do we make sure the following code is working.\n    try {\n      metaBootstrap.assignMetaReplicas();\n    } catch (HBaseIOException e){\n\nIf we can make sure that the test can compile with or without the changes in non-test modules, it will be great as we can verify that without those changes, the test will fail. Seems with current implementation, it is not possible.", "author": "huaxiangsun", "createdAt": "2020-06-17T19:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1MDYwMQ==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442350601", "bodyText": "@BukrosSzabolcs Your explain about how the test works addressed my concerns, thanks.", "author": "huaxiangsun", "createdAt": "2020-06-18T16:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "da610375a2e66d7407dfd3ff9aebad423e84a9e7", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java\nindex 6ee60a7c08..65dc38ebea 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java\n\n@@ -373,14 +373,23 @@ public class TestMetaWithReplicas {\n     TEST_UTIL.waitFor(30000, () -> newMaster.isInitialized());\n     TEST_UTIL.getMiniHBaseCluster().getConfiguration().unset(HConstants.MASTER_IMPL);\n \n-    //looking up the failed meta replica\n-    AssignmentManager am = TEST_UTIL.getMiniHBaseCluster().getMaster().getAssignmentManager();\n+\n+    AssignmentManager am = newMaster.getAssignmentManager();\n+    //showing one of the replicas got assigned\n     RegionInfo metaReplicaHri = RegionReplicaUtil.getRegionInfoForReplica(\n-      RegionInfoBuilder.FIRST_META_REGIONINFO, 2);\n+      RegionInfoBuilder.FIRST_META_REGIONINFO, 1);\n     RegionStateNode metaReplicaRegionNode = am.getRegionStates().getOrCreateRegionStateNode(metaReplicaHri);\n+    Assert.assertNotNull(metaReplicaRegionNode.getRegionLocation());\n+    //showing one of the replicas failed to be assigned\n+    RegionInfo metaReplicaHri2 = RegionReplicaUtil.getRegionInfoForReplica(\n+      RegionInfoBuilder.FIRST_META_REGIONINFO, 2);\n+    RegionStateNode metaReplicaRegionNode2 = am.getRegionStates().getOrCreateRegionStateNode(metaReplicaHri2);\n+    Assert.assertNull(metaReplicaRegionNode2.getRegionLocation());\n \n-    //checking if the assignment failed\n-    Assert.assertNull(metaReplicaRegionNode.getRegionLocation());\n+    //showing master is active and running\n+    Assert.assertFalse(newMaster.isStopping());\n+    Assert.assertFalse(newMaster.isStopped());\n+    Assert.assertTrue(newMaster.isActiveMaster());\n   }\n \n   public static class BrokenTransitRegionStateProcedure extends TransitRegionStateProcedure {\n"}}, {"oid": "da610375a2e66d7407dfd3ff9aebad423e84a9e7", "url": "https://github.com/apache/hbase/commit/da610375a2e66d7407dfd3ff9aebad423e84a9e7", "message": "HBASE-24562: Stabilize master startup with meta replicas enabled", "committedDate": "2020-06-16T13:29:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441783237", "bodyText": "assignMetaReplicas() throws IOException, InterruptedException, and KeeperException. Why only HBaseIOException is processed here? Should it catch all exceptions and totally ignore all exceptions caused by assignMetaReplicas()?", "author": "huaxiangsun", "createdAt": "2020-06-17T19:28:46Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "originalCommit": "368b5f71e370690c365e3e762c144074c9bcfe87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MzMxNQ==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442153315", "bodyText": "Good question. The idea was, that as far as I can tell InterruptedException is never actually thrown and KeeperException represent a serious issue outside the scope of meta replication, that we should not hide. So I skipped those. Do you think some of them should be included?", "author": "BukrosSzabolcs", "createdAt": "2020-06-18T11:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MzM5Nw==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442343397", "bodyText": "Most of KeeperException has been handled inside the methods when I looked through the code path. IMO, if we do not want meta replicas to prevent master to become active, we should just catch and log it, let the other critical modules to decide if it needs to abort/block.", "author": "huaxiangsun", "createdAt": "2020-06-18T16:12:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NDQ2MA==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442364460", "bodyText": "Checked other places in the code and I see your point. I'll add KeeperException to the catch.", "author": "BukrosSzabolcs", "createdAt": "2020-06-18T16:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzODkwOA==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442538908", "bodyText": "void assignMetaReplicas()\n      throws IOException, InterruptedException, KeeperException {\n\n\nI think there is no InterruptedException, we can remove it from the prototype. In your patch, only HBaseIOException is handled, how about other IOException? Can we just catch IOException as well? Thanks.", "author": "huaxiangsun", "createdAt": "2020-06-18T22:38:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzOTAzMA==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442539030", "bodyText": "That is the last comment I have, +1 otherwise.", "author": "huaxiangsun", "createdAt": "2020-06-18T22:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}], "type": "inlineReview", "revised_code": {"commit": "850461ec85f4c8f9179e82ae913eb970c062ed1b", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java\nindex 65be4e57be..f75e828b9f 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java\n\n@@ -1168,7 +1168,7 @@ public class HMaster extends HRegionServer implements MasterServices {\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n     try {\n       metaBootstrap.assignMetaReplicas();\n-    } catch (HBaseIOException e){\n+    } catch (HBaseIOException | KeeperException e){\n       LOG.error(\"Assigning meta replica failed: \", e);\n     }\n     status.setStatus(\"Starting quota manager\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDMzNg==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441784336", "bodyText": "Most of this method's code is a duplicate  of the assign() above, the common part can be wrapped in a private method.", "author": "huaxiangsun", "createdAt": "2020-06-17T19:30:59Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -616,6 +616,24 @@ public long assign(RegionInfo regionInfo) throws IOException {\n     return assign(regionInfo, null);\n   }\n \n+  public Future<byte[]> assignAsync(RegionInfo regionInfo, ServerName sn) throws IOException {", "originalCommit": "368b5f71e370690c365e3e762c144074c9bcfe87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NTIwNA==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441785204", "bodyText": "If we are adding a new public method, can we have doc for these two new methods?", "author": "huaxiangsun", "createdAt": "2020-06-17T19:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2OTEyNg==", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442169126", "bodyText": "You are absolutely right. I'll fix this.", "author": "BukrosSzabolcs", "createdAt": "2020-06-18T11:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "95a9fd2548365acce176998b4e8d30d096a96320", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex 6325c1622d..ec63b7889d 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -616,20 +622,24 @@ public class AssignmentManager {\n     return assign(regionInfo, null);\n   }\n \n+  /**\n+   * Submits a procedure that assigns a region to a target server without waiting for it to finish\n+   * @param regionInfo the region we would like to assign\n+   * @param sn target server name\n+   * @return\n+   * @throws IOException\n+   */\n   public Future<byte[]> assignAsync(RegionInfo regionInfo, ServerName sn) throws IOException {\n-    RegionStateNode regionNode = regionStates.getOrCreateRegionStateNode(regionInfo);\n-    TransitRegionStateProcedure proc;\n-    regionNode.lock();\n-    try {\n-      preTransitCheck(regionNode, STATES_EXPECTED_ON_ASSIGN);\n-      proc = TransitRegionStateProcedure.assign(getProcedureEnvironment(), regionInfo, sn);\n-      regionNode.setProcedure(proc);\n-    } finally {\n-      regionNode.unlock();\n-    }\n+    TransitRegionStateProcedure proc = createAssignProcedure(regionInfo, sn);\n     return ProcedureSyncWait.submitProcedure(master.getMasterProcedureExecutor(), proc);\n   }\n \n+  /**\n+   * Submits a procedure that assigns a region without waiting for it to finish\n+   * @param regionInfo the region we would like to assign\n+   * @return\n+   * @throws IOException\n+   */\n   public Future<byte[]> assignAsync(RegionInfo regionInfo) throws IOException {\n     return assignAsync(regionInfo, null);\n   }\n"}}, {"oid": "95a9fd2548365acce176998b4e8d30d096a96320", "url": "https://github.com/apache/hbase/commit/95a9fd2548365acce176998b4e8d30d096a96320", "message": "HBASE-24562: Stabilize master startup with meta replicas enabled\n\nextract common assign code\nadd docs to new methods", "committedDate": "2020-06-18T13:02:47Z", "type": "commit"}, {"oid": "850461ec85f4c8f9179e82ae913eb970c062ed1b", "url": "https://github.com/apache/hbase/commit/850461ec85f4c8f9179e82ae913eb970c062ed1b", "message": "HBASE-24562: Stabilize master startup with meta replicas enabled\n\nalso catch KeeperException", "committedDate": "2020-06-18T16:48:55Z", "type": "commit"}, {"oid": "6f1adf83e64b712a93db4ff0205bf14a420c8ce5", "url": "https://github.com/apache/hbase/commit/6f1adf83e64b712a93db4ff0205bf14a420c8ce5", "message": "HBASE-24562: Stabilize master startup with meta replicas enabled\n\ncatch IOException instead of HbaseIOException", "committedDate": "2020-06-19T07:31:21Z", "type": "commit"}]}