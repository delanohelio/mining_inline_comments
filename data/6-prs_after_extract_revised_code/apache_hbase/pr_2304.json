{"pr_number": 2304, "pr_title": "HBASE-24916: Region hole contains wrong regions pair when hole is cre\u2026", "pr_createdAt": "2020-08-24T16:56:44Z", "pr_url": "https://github.com/apache/hbase/pull/2304", "timeline": [{"oid": "a226360a9e2c88caedb1b3388bd9e4b06fa6fa45", "url": "https://github.com/apache/hbase/commit/a226360a9e2c88caedb1b3388bd9e4b06fa6fa45", "message": "HBASE-24916: Region hole contains wrong regions pair when hole is created by first region deletion", "committedDate": "2020-08-24T16:55:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxODk4MQ==", "url": "https://github.com/apache/hbase/pull/2304#discussion_r478618981", "bodyText": "Add an 'else' here?", "author": "saintstack", "createdAt": "2020-08-27T18:37:01Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/CatalogJanitor.java", "diffHunk": "@@ -644,12 +644,17 @@ private RegionInfo metaTableConsistencyCheck(Result metaTableRow) {\n       // If table is disabled, skip integrity check.\n       if (!isTableDisabled(ri)) {\n         if (isTableTransition(ri)) {\n-          // On table transition, look to see if last region was last in table\n-          // and if this is the first. Report 'hole' if neither is true.\n           // HBCK1 used to have a special category for missing start or end keys.\n           // We'll just lump them in as 'holes'.\n-          if ((this.previous != null && !this.previous.isLast()) || !ri.isFirst()) {\n-            addHole(this.previous == null? RegionInfo.UNDEFINED: this.previous, ri);\n+\n+          // This is a table transition. If this region is not first region, report a hole.\n+          if (!ri.isFirst()) {\n+            addHole(RegionInfo.UNDEFINED, ri);\n+          }", "originalCommit": "a226360a9e2c88caedb1b3388bd9e4b06fa6fa45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyNzc4OA==", "url": "https://github.com/apache/hbase/pull/2304#discussion_r478627788", "bodyText": "IMHO, else is not needed as both condition can happen at the same time\n\ncurrent table has hole due to first region missing\nprevious table has hole due to last region missing", "author": "arshadmohammad", "createdAt": "2020-08-27T18:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxODk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4OTU4Mw==", "url": "https://github.com/apache/hbase/pull/2304#discussion_r478689583", "bodyText": "You are right.", "author": "saintstack", "createdAt": "2020-08-27T20:54:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxODk4MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkyNTA2Mg==", "url": "https://github.com/apache/hbase/pull/2304#discussion_r478925062", "bodyText": "Please run MetaFixer to verify is it processing these holes correctly.", "author": "KanakaKumar", "createdAt": "2020-08-28T08:14:16Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitorCluster.java", "diffHunk": "@@ -231,4 +234,86 @@ public void testConsistency() throws IOException {\n     row[row.length - 1] = (byte)(((int)row[row.length - 1]) + 1);\n     return row;\n   }\n+\n+  @Test\n+  public void testHoles() throws IOException {\n+    CatalogJanitor janitor = TEST_UTIL.getHBaseCluster().getMaster().getCatalogJanitor();\n+\n+    CatalogJanitor.Report report = janitor.getLastReport();\n+    // Assert no problems.\n+    assertTrue(report.isEmpty());\n+    //Verify start and end region holes\n+    verifyCornerHoles(janitor, T1);\n+    //Verify start and end region holes\n+    verifyCornerHoles(janitor, T2);\n+    verifyMiddleHole(janitor);\n+    //verify total number of holes, 2 in t1 and t2 each and one in t3\n+    janitor.scan();\n+    assertEquals(5, janitor.getLastReport().getHoles().size());", "originalCommit": "a226360a9e2c88caedb1b3388bd9e4b06fa6fa45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff04230897e08e8d2123ec9f12f6a12e206ab470", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitorCluster.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitorCluster.java\nindex 5d5173ab14..cd18fa7d78 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitorCluster.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestCatalogJanitorCluster.java\n\n@@ -247,9 +247,20 @@ public class TestCatalogJanitorCluster {\n     //Verify start and end region holes\n     verifyCornerHoles(janitor, T2);\n     verifyMiddleHole(janitor);\n-    //verify total number of holes, 2 in t1 and t2 each and one in t3\n+    //Verify that MetaFixer is able to fix these holes\n+    fixHoles(janitor);\n+  }\n+\n+  private void fixHoles(CatalogJanitor janitor) throws IOException {\n+    MetaFixer metaFixer = new MetaFixer(TEST_UTIL.getHBaseCluster().getMaster());\n     janitor.scan();\n-    assertEquals(5, janitor.getLastReport().getHoles().size());\n+    CatalogJanitor.Report report = janitor.getLastReport();\n+    //Verify total number of holes, 2 in t1 and t2 each and one in t3\n+    assertEquals(\"Number of holes are not matching\", 5, report.getHoles().size());\n+    metaFixer.fix();\n+    janitor.scan();\n+    report = janitor.getLastReport();\n+    assertEquals(\"Holes are not fixed\", 0, report.getHoles().size());\n   }\n \n   private void verifyMiddleHole(CatalogJanitor janitor) throws IOException {\n"}}, {"oid": "ff04230897e08e8d2123ec9f12f6a12e206ab470", "url": "https://github.com/apache/hbase/commit/ff04230897e08e8d2123ec9f12f6a12e206ab470", "message": "Fixed review comment, Called MetaFix to fix all the holes created during the test.", "committedDate": "2020-08-30T05:18:55Z", "type": "commit"}]}