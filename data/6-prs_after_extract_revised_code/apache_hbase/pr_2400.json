{"pr_number": 2400, "pr_title": "HBASE-24877 addendum: additional checks to avoid one extra possible race control in the initialize loop", "pr_createdAt": "2020-09-15T09:40:55Z", "pr_url": "https://github.com/apache/hbase/pull/2400", "timeline": [{"oid": "a886f676203fe2c6c2e1fe45a0c65e7e3fb54f6b", "url": "https://github.com/apache/hbase/commit/a886f676203fe2c6c2e1fe45a0c65e7e3fb54f6b", "message": "HBASE-24877 addendum: additional checks to avoid one extra possible race control in the initialize loop", "committedDate": "2020-09-15T09:38:27Z", "type": "commit"}, {"oid": "cc94a30b9f3c401da19cfa50a6afa1863753db9e", "url": "https://github.com/apache/hbase/commit/cc94a30b9f3c401da19cfa50a6afa1863753db9e", "message": "Addressing Duo's comment on the related branch-2 PR", "committedDate": "2020-09-16T11:05:09Z", "type": "commit"}, {"oid": "72144ad276dc6c5c7541187ab719f4e850f58560", "url": "https://github.com/apache/hbase/commit/72144ad276dc6c5c7541187ab719f4e850f58560", "message": "Merge branch 'master' into HBASE-24877-addendum", "committedDate": "2020-09-23T16:36:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0NTMwNg==", "url": "https://github.com/apache/hbase/pull/2400#discussion_r493745306", "bodyText": "nit: indentation", "author": "joshelser", "createdAt": "2020-09-23T16:54:54Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -618,28 +622,34 @@ private void initialize() {\n \n   @Override\n   public void startup() {\n-    if (this.sourceRunning) {\n-      return;\n-    }\n+    // mark we are running now\n     this.sourceRunning = true;\n-    //Flag that signalizes uncaught error happening while starting up the source\n-    // and a retry should be attempted\n-    MutableBoolean retryStartup = new MutableBoolean(true);\n-    do {\n-      if(retryStartup.booleanValue()) {\n-        retryStartup.setValue(false);\n-        startupOngoing.set(true);\n-        // mark we are running now\n-        initThread = new Thread(this::initialize);\n-        Threads.setDaemonThreadRunning(initThread,\n-          Thread.currentThread().getName() + \".replicationSource,\" + this.queueId,\n-          (t,e) -> {\n+    startupOngoing.set(true);\n+    initThread = new Thread(this::initialize);\n+      Threads.setDaemonThreadRunning(initThread,", "originalCommit": "72144ad276dc6c5c7541187ab719f4e850f58560", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "980152c5df3acc5dbbb003194155a841ff2c1125", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java\nindex dc5ef5812f..31e3485b79 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java\n\n@@ -626,30 +626,30 @@ public class ReplicationSource implements ReplicationSourceInterface {\n     this.sourceRunning = true;\n     startupOngoing.set(true);\n     initThread = new Thread(this::initialize);\n-      Threads.setDaemonThreadRunning(initThread,\n-        Thread.currentThread().getName() + \".replicationSource,\" + this.queueId,\n-        (t,e) -> {\n-            //if first initialization attempt failed, and abortOnError is false, we will\n-            //keep looping in this thread until initialize eventually succeeds,\n-            //while the server main startup one can go on with its work.\n-            sourceRunning = false;\n-            uncaughtException(t, e, null, null);\n-            retryStartup.set(!this.abortOnError);\n-            do {\n-              if(retryStartup.get()) {\n-                this.sourceRunning = true;\n-                startupOngoing.set(true);\n-                retryStartup.set(false);\n-                try {\n-                  initialize();\n-                } catch(Throwable error){\n-                  sourceRunning = false;\n-                  uncaughtException(t, error, null, null);\n-                  retryStartup.set(!this.abortOnError);\n-                }\n+    Threads.setDaemonThreadRunning(initThread,\n+      Thread.currentThread().getName() + \".replicationSource,\" + this.queueId,\n+      (t,e) -> {\n+          //if first initialization attempt failed, and abortOnError is false, we will\n+          //keep looping in this thread until initialize eventually succeeds,\n+          //while the server main startup one can go on with its work.\n+          sourceRunning = false;\n+          uncaughtException(t, e, null, null);\n+          retryStartup.set(!this.abortOnError);\n+          do {\n+            if(retryStartup.get()) {\n+              this.sourceRunning = true;\n+              startupOngoing.set(true);\n+              retryStartup.set(false);\n+              try {\n+                initialize();\n+              } catch(Throwable error){\n+                sourceRunning = false;\n+                uncaughtException(t, error, null, null);\n+                retryStartup.set(!this.abortOnError);\n               }\n-            } while ((this.startupOngoing.get() || this.retryStartup.get()) && !this.abortOnError);\n-      });\n+            }\n+          } while ((this.startupOngoing.get() || this.retryStartup.get()) && !this.abortOnError);\n+    });\n   }\n \n   @Override\n"}}, {"oid": "980152c5df3acc5dbbb003194155a841ff2c1125", "url": "https://github.com/apache/hbase/commit/980152c5df3acc5dbbb003194155a841ff2c1125", "message": "addressing lates checkstyle", "committedDate": "2020-09-24T09:41:11Z", "type": "commit"}, {"oid": "5b01752dbf5e19082a355080afbe5adaf47b26a3", "url": "https://github.com/apache/hbase/commit/5b01752dbf5e19082a355080afbe5adaf47b26a3", "message": "More checkstyles", "committedDate": "2020-09-28T10:33:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzOTE5MA==", "url": "https://github.com/apache/hbase/pull/2400#discussion_r518239190", "bodyText": "Bumping into this during rebase of HBASE-18070 branch. If count is not used, just remove it from this class?", "author": "huaxiangsun", "createdAt": "2020-11-05T17:42:01Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/regionserver/TestReplicationSource.java", "diffHunk": "@@ -416,6 +416,17 @@ public synchronized UUID getPeerUUID() {\n \n   }\n \n+  public static class FaultyReplicationEndpoint extends DoNothingReplicationEndpoint {", "originalCommit": "cc94a30b9f3c401da19cfa50a6afa1863753db9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcyNDYxMQ==", "url": "https://github.com/apache/hbase/pull/2400#discussion_r518724611", "bodyText": "Yeah, I guess it's a left over from previous commits on this same PR.", "author": "wchevreuil", "createdAt": "2020-11-06T12:37:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzOTE5MA=="}], "type": "inlineReview", "revised_code": null}]}