{"pr_number": 2010, "pr_title": "HBASE-24391 Implement meta split", "pr_createdAt": "2020-07-01T10:47:19Z", "pr_url": "https://github.com/apache/hbase/pull/2010", "timeline": [{"oid": "adfd91312239d4ea348f4e82bdd2d0f09a8f7de4", "url": "https://github.com/apache/hbase/commit/adfd91312239d4ea348f4e82bdd2d0f09a8f7de4", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-07-01T15:03:37Z", "type": "forcePushed"}, {"oid": "4d47a37fc5c40259caad6e00892a30264fb52fc9", "url": "https://github.com/apache/hbase/commit/4d47a37fc5c40259caad6e00892a30264fb52fc9", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-07-04T15:36:17Z", "type": "forcePushed"}, {"oid": "2c5c24e17fc30343993870a4b79c19c30963baa6", "url": "https://github.com/apache/hbase/commit/2c5c24e17fc30343993870a4b79c19c30963baa6", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-07-10T07:44:14Z", "type": "forcePushed"}, {"oid": "9c7f193e17ecc822b74628a1adfe91bbe3959f82", "url": "https://github.com/apache/hbase/commit/9c7f193e17ecc822b74628a1adfe91bbe3959f82", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-09T14:24:10Z", "type": "forcePushed"}, {"oid": "d9caed08ec58fd0ccada31158788299197191d4c", "url": "https://github.com/apache/hbase/commit/d9caed08ec58fd0ccada31158788299197191d4c", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-11T10:41:51Z", "type": "forcePushed"}, {"oid": "d8eb5822fedc78298a6ad718c4d9c56d99f1fa65", "url": "https://github.com/apache/hbase/commit/d8eb5822fedc78298a6ad718c4d9c56d99f1fa65", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-12T02:43:37Z", "type": "forcePushed"}, {"oid": "354b09051e6febc00d386bb59b78d69383b88490", "url": "https://github.com/apache/hbase/commit/354b09051e6febc00d386bb59b78d69383b88490", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-17T14:59:33Z", "type": "forcePushed"}, {"oid": "99f7eac50e102c68e8be396b234d1d226c380d31", "url": "https://github.com/apache/hbase/commit/99f7eac50e102c68e8be396b234d1d226c380d31", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-19T06:41:16Z", "type": "forcePushed"}, {"oid": "8c2c64321c51291b92ed4f5faf8ca2094e2d3704", "url": "https://github.com/apache/hbase/commit/8c2c64321c51291b92ed4f5faf8ca2094e2d3704", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-21T07:45:05Z", "type": "forcePushed"}, {"oid": "9acc17c5e4541d709e3e69ba93fc416862af1cf6", "url": "https://github.com/apache/hbase/commit/9acc17c5e4541d709e3e69ba93fc416862af1cf6", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-25T15:04:02Z", "type": "forcePushed"}, {"oid": "ee9014eb099cc7fdc7df8beca72667891cf10602", "url": "https://github.com/apache/hbase/commit/ee9014eb099cc7fdc7df8beca72667891cf10602", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-26T06:38:01Z", "type": "forcePushed"}, {"oid": "d95e490eba4f78d8f7caaf816a249c5a67d198e6", "url": "https://github.com/apache/hbase/commit/d95e490eba4f78d8f7caaf816a249c5a67d198e6", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-08-26T09:24:03Z", "type": "forcePushed"}, {"oid": "24ba213fd9d6b9c3b8928f69600c3e591814ec9b", "url": "https://github.com/apache/hbase/commit/24ba213fd9d6b9c3b8928f69600c3e591814ec9b", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-09-05T05:58:14Z", "type": "commit"}, {"oid": "24ba213fd9d6b9c3b8928f69600c3e591814ec9b", "url": "https://github.com/apache/hbase/commit/24ba213fd9d6b9c3b8928f69600c3e591814ec9b", "message": "HBASE-24391 Implement meta split", "committedDate": "2020-09-05T05:58:14Z", "type": "forcePushed"}, {"oid": "b7c3d9d874e63f823ffe08b62608f00d03193139", "url": "https://github.com/apache/hbase/commit/b7c3d9d874e63f823ffe08b62608f00d03193139", "message": "fix TestShutdownOfMetaReplicaHolder", "committedDate": "2020-09-05T11:51:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NDUwOA==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484074508", "bodyText": "Why don't need comparator previously? Don't use this to scan meta previously?", "author": "infraio", "createdAt": "2020-09-06T14:07:14Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncScanSingleRegionRpcRetryingCaller.java", "diffHunk": "@@ -442,6 +449,32 @@ private void updateNextStartRowWhenError(Result result) {\n     includeNextStartRowWhenError = result.mayHaveMoreCellsInRow();\n   }\n \n+  private boolean noMoreResultsForScan(Scan scan, RegionInfo info) {\n+    if (isEmptyStopRow(info.getEndKey())) {\n+      return true;\n+    }\n+    if (isEmptyStopRow(scan.getStopRow())) {\n+      return false;\n+    }\n+    int c = comparator.compare(info.getEndKey(), scan.getStopRow());", "originalCommit": "b7c3d9d874e63f823ffe08b62608f00d03193139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3ODA4Nw==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484078087", "bodyText": "It is just because we only have one meta region in the past...", "author": "Apache9", "createdAt": "2020-09-06T14:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NDUwOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NTk1Ng==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484075956", "bodyText": "Add some log here?", "author": "infraio", "createdAt": "2020-09-06T14:20:27Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java", "diffHunk": "@@ -250,15 +255,62 @@ private long getOpenSeqNumForParentRegion(RegionInfo region) throws IOException\n   // ============================================================================================\n   //  Update Region Splitting State helpers\n   // ============================================================================================\n-  public void splitRegion(RegionInfo parent, RegionInfo hriA, RegionInfo hriB,\n-      ServerName serverName) throws IOException {\n-    TableDescriptor htd = getDescriptor(parent.getTable());\n+  /**\n+   * Splits the region into two in an atomic operation. Offlines the parent region with the\n+   * information that it is split into two, and also adds the daughter regions. Does not add the\n+   * location information to the daughter regions since they are not open yet.\n+   */\n+  public void splitRegion(RegionInfo parent, RegionInfo splitA, RegionInfo splitB,\n+    ServerName serverName, TableDescriptor htd) throws IOException {\n     long parentOpenSeqNum = HConstants.NO_SEQNUM;\n     if (htd.hasGlobalReplicationScope()) {\n       parentOpenSeqNum = getOpenSeqNumForParentRegion(parent);\n     }\n-    MetaTableAccessor.splitRegion(master.getConnection(), parent, parentOpenSeqNum, hriA, hriB,\n-      serverName, getRegionReplication(htd));\n+    long time = EnvironmentEdgeManager.currentTime();\n+    // Put for parent\n+    Put putParent = MetaTableAccessor.makePutFromRegionInfo(\n+      RegionInfoBuilder.newBuilder(parent).setOffline(true).setSplit(true).build(), time);\n+    MetaTableAccessor.addDaughtersToPut(putParent, splitA, splitB);\n+\n+    // Puts for daughters\n+    Put putA = MetaTableAccessor.makePutFromRegionInfo(splitA, time);\n+    Put putB = MetaTableAccessor.makePutFromRegionInfo(splitB, time);\n+    if (parentOpenSeqNum > 0) {\n+      MetaTableAccessor.addReplicationBarrier(putParent, parentOpenSeqNum);\n+      MetaTableAccessor.addReplicationParent(putA, Collections.singletonList(parent));\n+      MetaTableAccessor.addReplicationParent(putB, Collections.singletonList(parent));\n+    }\n+    // Set initial state to CLOSED\n+    // NOTE: If initial state is not set to CLOSED then daughter regions get added with the\n+    // default OFFLINE state. If Master gets restarted after this step, start up sequence of\n+    // master tries to assign these offline regions. This is followed by re-assignments of the\n+    // daughter regions from resumed {@link SplitTableRegionProcedure}\n+    MetaTableAccessor.addRegionStateToPut(putA, RegionState.State.CLOSED);\n+    MetaTableAccessor.addRegionStateToPut(putB, RegionState.State.CLOSED);\n+\n+    // new regions, openSeqNum = 1 is fine.\n+    MetaTableAccessor.addSequenceNum(putA, 1, splitA.getReplicaId());\n+    MetaTableAccessor.addSequenceNum(putB, 1, splitB.getReplicaId());\n+\n+    // Add empty locations for region replicas of daughters so that number of replicas can be\n+    // cached whenever the primary region is looked up from meta\n+    int regionReplication = getRegionReplication(htd);\n+    for (int i = 1; i < regionReplication; i++) {\n+      MetaTableAccessor.addEmptyLocation(putA, i);\n+      MetaTableAccessor.addEmptyLocation(putB, i);\n+    }\n+\n+    List<Mutation> mutations = Arrays.asList(putParent, putA, putB);\n+    if (htd.isMetaTable()) {\n+      masterRegion.update(region -> {\n+        List<byte[]> rowsToLock =\n+          mutations.stream().map(Mutation::getRow).collect(Collectors.toList());\n+        region.mutateRowsWithLocks(mutations, rowsToLock, HConstants.NO_NONCE, HConstants.NO_NONCE);", "originalCommit": "b7c3d9d874e63f823ffe08b62608f00d03193139", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3ODQ2MQ==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484078461", "bodyText": "Like what?", "author": "Apache9", "createdAt": "2020-09-06T14:41:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEzNjc2NA==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484136764", "bodyText": "The log in MetaTableAccessor. There are log when update meta. Should have log too when update root.", "author": "infraio", "createdAt": "2020-09-07T00:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0NTQ0Ng==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484145446", "bodyText": "Can do this as a follow on? I have an idea that to move all the meta edit methods from MetaTableAccessor to RegionStateStore, as now only master can edit meta, so we could move all the meta edit logs to RegionStateStore too.", "author": "Apache9", "createdAt": "2020-09-07T01:43:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NTk1Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Njg5MA==", "url": "https://github.com/apache/hbase/pull/2010#discussion_r484076890", "bodyText": "Good idea.", "author": "infraio", "createdAt": "2020-09-06T14:29:10Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetaRegionSplitPolicy.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver;\n+\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.util.Bytes;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * The split policy for meta.\n+ * <p/>\n+ * Now we just use {@link DelimitedKeyPrefixRegionSplitPolicy} with\n+ * {@value org.apache.hadoop.hbase.HConstants#DELIMITER}, which means all the records for a table\n+ * will be in the same region, so the multi-mutate operation when splitting/merging is still valid.\n+ */\n+@InterfaceAudience.Private\n+public class MetaRegionSplitPolicy extends DelimitedKeyPrefixRegionSplitPolicy {", "originalCommit": "b7c3d9d874e63f823ffe08b62608f00d03193139", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}