{"pr_number": 2761, "pr_title": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "pr_createdAt": "2020-12-10T08:35:54Z", "pr_url": "https://github.com/apache/hbase/pull/2761", "timeline": [{"oid": "59962a4d00bebee6cfec3c4056fcb40118e255a7", "url": "https://github.com/apache/hbase/commit/59962a4d00bebee6cfec3c4056fcb40118e255a7", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2020-12-10T18:11:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc5Mzc3Nw==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r551793777", "bodyText": "Just in case cluster is already facing some perf issues, we might want to reduce this count. Let's make this configurable.", "author": "virajjasani", "createdAt": "2021-01-05T08:52:30Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1447,6 +1453,12 @@ private void update(final Collection<RegionState> regions, final long currentTim\n         if (oldestRITTime < ritTime) {\n           oldestRITTime = ritTime;\n         }\n+        if (counter < 500) { // Record 500 oldest RITs", "originalCommit": "59962a4d00bebee6cfec3c4056fcb40118e255a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d39ecc5233f4c859c19564de5bf27e052361e98", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex 7a394c82e3..67c1ee2080 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -1453,12 +1454,6 @@ public class AssignmentManager {\n         if (oldestRITTime < ritTime) {\n           oldestRITTime = ritTime;\n         }\n-        if (counter < 500) { // Record 500 oldest RITs\n-          oldestRITHashesAndStates.add(\n-            state.getRegion().getRegionNameAsString() + \":\" + state.getState().name()\n-          );\n-        }\n-        counter += 1;\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc5NTE0MQ==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r551795141", "bodyText": "Since we are anyways exposing rits in metrics, writing DEBUG logs might be overkill I believe. Let's keep the log at TRACE level?", "author": "virajjasani", "createdAt": "2021-01-05T08:55:03Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1455,6 +1467,10 @@ private void updateRegionsInTransitionMetrics(final RegionInTransitionStat ritSt\n     metrics.updateRITOldestAge(ritStat.getOldestRITTime());\n     metrics.updateRITCount(ritStat.getTotalRITs());\n     metrics.updateRITCountOverThreshold(ritStat.getTotalRITsOverThreshold());\n+    if ((EnvironmentEdgeManager.currentTime() - ritStat.ritThreshold / 2) >= ritStat.statTimestamp){\n+      LOG.debug(\"Oldest RIT hashes and states: \"+ritStat.getOldestRITHashesAndStates().toString());", "originalCommit": "59962a4d00bebee6cfec3c4056fcb40118e255a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d39ecc5233f4c859c19564de5bf27e052361e98", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex 7a394c82e3..67c1ee2080 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -1467,10 +1462,6 @@ public class AssignmentManager {\n     metrics.updateRITOldestAge(ritStat.getOldestRITTime());\n     metrics.updateRITCount(ritStat.getTotalRITs());\n     metrics.updateRITCountOverThreshold(ritStat.getTotalRITsOverThreshold());\n-    if ((EnvironmentEdgeManager.currentTime() - ritStat.ritThreshold / 2) >= ritStat.statTimestamp){\n-      LOG.debug(\"Oldest RIT hashes and states: \"+ritStat.getOldestRITHashesAndStates().toString());\n-      metrics.updateRITHashesAndStates(ritStat.getOldestRITHashesAndStates());\n-    }\n   }\n \n   private void updateDeadServerRegionMetrics(int deadRegions, int unknownRegions) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc5NTgzMg==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r551795832", "bodyText": "nit: keep it private?", "author": "virajjasani", "createdAt": "2021-01-05T08:56:25Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java", "diffHunk": "@@ -68,6 +68,21 @@ public int compare(final RegionState l, final RegionState r) {\n   public final static RegionStateStampComparator REGION_STATE_STAMP_COMPARATOR =\n       new RegionStateStampComparator();\n \n+  // This comparator sorts the RegionStates by duration then Region name.\n+  // Comparing by duration alone can lead us to discard different RegionStates that happen\n+  // to share a duration.\n+  private static class RegionStateDurationComparator implements Comparator<RegionState> {\n+    @Override\n+    public int compare(RegionState l, RegionState r) {\n+      return Long.compare(l.getRitDuration(), r.getRitDuration()) == 0 ?\n+        Bytes.compareTo(l.getRegion().getRegionName(), r.getRegion().getRegionName()) :\n+        Long.compare(l.getRitDuration(), r.getRitDuration());\n+    }\n+  }\n+\n+  public final static RegionStateDurationComparator REGION_STATE_DURATION_COMPARATOR =", "originalCommit": "59962a4d00bebee6cfec3c4056fcb40118e255a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d39ecc5233f4c859c19564de5bf27e052361e98", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java\nindex e805ffc4c5..147a112152 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java\n\n@@ -68,21 +68,6 @@ public class RegionStates {\n   public final static RegionStateStampComparator REGION_STATE_STAMP_COMPARATOR =\n       new RegionStateStampComparator();\n \n-  // This comparator sorts the RegionStates by duration then Region name.\n-  // Comparing by duration alone can lead us to discard different RegionStates that happen\n-  // to share a duration.\n-  private static class RegionStateDurationComparator implements Comparator<RegionState> {\n-    @Override\n-    public int compare(RegionState l, RegionState r) {\n-      return Long.compare(l.getRitDuration(), r.getRitDuration()) == 0 ?\n-        Bytes.compareTo(l.getRegion().getRegionName(), r.getRegion().getRegionName()) :\n-        Long.compare(l.getRitDuration(), r.getRitDuration());\n-    }\n-  }\n-\n-  public final static RegionStateDurationComparator REGION_STATE_DURATION_COMPARATOR =\n-    new RegionStateDurationComparator();\n-\n   private final Object regionsMapLock = new Object();\n \n   // TODO: Replace the ConcurrentSkipListMaps\n"}}, {"oid": "5d39ecc5233f4c859c19564de5bf27e052361e98", "url": "https://github.com/apache/hbase/commit/5d39ecc5233f4c859c19564de5bf27e052361e98", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-11T22:30:01Z", "type": "forcePushed"}, {"oid": "53e6ced04a4d95ff727bb4cce7d1bcee8474e727", "url": "https://github.com/apache/hbase/commit/53e6ced04a4d95ff727bb4cce7d1bcee8474e727", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-11T22:41:53Z", "type": "forcePushed"}, {"oid": "1ee17759fdb266a9a460ac413b4d1f6a2d84bae8", "url": "https://github.com/apache/hbase/commit/1ee17759fdb266a9a460ac413b4d1f6a2d84bae8", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-11T22:44:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU0MDU3Nw==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r555540577", "bodyText": "Updating logs here looks better. Just small nit: instead of appending string, can we use placeholder {} here?\nLOG.trace(\"RIT hashes and states: {}\", val);", "author": "virajjasani", "createdAt": "2021-01-12T06:29:16Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1425,6 +1425,13 @@ protected void update(final AssignmentManager am) {\n       this.statTimestamp = EnvironmentEdgeManager.currentTime();\n       update(regionStates.getRegionsStateInTransition(), statTimestamp);\n       update(regionStates.getRegionFailedOpen(), statTimestamp);\n+\n+      if (ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+        LOG.trace(\"RIT hashes and states: \" +", "originalCommit": "1ee17759fdb266a9a460ac413b4d1f6a2d84bae8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex 5f066fcdaf..7a00265e30 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -1427,7 +1427,7 @@ public class AssignmentManager {\n       update(regionStates.getRegionFailedOpen(), statTimestamp);\n \n       if (ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n-        LOG.trace(\"RIT hashes and states: \" +\n+        LOG.trace(\"RIT hashes and states: {}\",\n           ritsOverThreshold.entrySet().stream()\n             .map(e -> e.getKey() + \":\" + e.getValue().getState().name())\n             .collect(Collectors.joining(\"\\n\")));\n"}}, {"oid": "2dae3070af84ef2e90cb70c46175588a386149f1", "url": "https://github.com/apache/hbase/commit/2dae3070af84ef2e90cb70c46175588a386149f1", "message": "HBASE-25329 Dump region hashes in logs for the regions that are stuck in transition for more than a configured amount of time", "committedDate": "2021-01-12T07:09:19Z", "type": "commit"}, {"oid": "fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "url": "https://github.com/apache/hbase/commit/fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "message": "format", "committedDate": "2021-01-12T07:09:20Z", "type": "commit"}, {"oid": "fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "url": "https://github.com/apache/hbase/commit/fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "message": "format", "committedDate": "2021-01-12T07:09:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU4ODc5MQ==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r555588791", "bodyText": "nit: \"RITs over threshold....\" ? (otherwise it appears these are all the RITs)", "author": "bharathv", "createdAt": "2021-01-12T08:26:07Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1425,6 +1425,13 @@ protected void update(final AssignmentManager am) {\n       this.statTimestamp = EnvironmentEdgeManager.currentTime();\n       update(regionStates.getRegionsStateInTransition(), statTimestamp);\n       update(regionStates.getRegionFailedOpen(), statTimestamp);\n+\n+      if (ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+        LOG.trace(\"RIT hashes and states: {}\",", "originalCommit": "fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aff33fd7777c493a13b0558cd7ebd80a46c943da", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex 7a00265e30..1eb39028f4 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -1426,8 +1426,8 @@ public class AssignmentManager {\n       update(regionStates.getRegionsStateInTransition(), statTimestamp);\n       update(regionStates.getRegionFailedOpen(), statTimestamp);\n \n-      if (ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n-        LOG.trace(\"RIT hashes and states: {}\",\n+      if (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+        LOG.debug(\"RITs over threshold: {}\",\n           ritsOverThreshold.entrySet().stream()\n             .map(e -> e.getKey() + \":\" + e.getValue().getState().name())\n             .collect(Collectors.joining(\"\\n\")));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU5MDU0OA==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r555590548", "bodyText": "I think this can be a debug(), fwiw.\nAlso, the pretty printing would be evaluated even if TRACE/DEBUG is disabled, so you might want to surround with a check.\nif (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\nLOG.debug(...\n}", "author": "bharathv", "createdAt": "2021-01-12T08:29:04Z", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1425,6 +1425,13 @@ protected void update(final AssignmentManager am) {\n       this.statTimestamp = EnvironmentEdgeManager.currentTime();\n       update(regionStates.getRegionsStateInTransition(), statTimestamp);\n       update(regionStates.getRegionFailedOpen(), statTimestamp);\n+\n+      if (ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+        LOG.trace(\"RIT hashes and states: {}\",\n+          ritsOverThreshold.entrySet().stream()\n+            .map(e -> e.getKey() + \":\" + e.getValue().getState().name())", "originalCommit": "fcbb912ce8dd53cf2d0c4864844a3d6abe746ca1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU5NzU2Mg==", "url": "https://github.com/apache/hbase/pull/2761#discussion_r555597562", "bodyText": "Oh yes, nice catch. Good to guard with isDebugEnabled() \ud83d\udc4d", "author": "virajjasani", "createdAt": "2021-01-12T08:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU5MDU0OA=="}], "type": "inlineReview", "revised_code": {"commit": "aff33fd7777c493a13b0558cd7ebd80a46c943da", "chunk": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\nindex 7a00265e30..1eb39028f4 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java\n\n@@ -1426,8 +1426,8 @@ public class AssignmentManager {\n       update(regionStates.getRegionsStateInTransition(), statTimestamp);\n       update(regionStates.getRegionFailedOpen(), statTimestamp);\n \n-      if (ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n-        LOG.trace(\"RIT hashes and states: {}\",\n+      if (LOG.isDebugEnabled() && ritsOverThreshold != null && !ritsOverThreshold.isEmpty()) {\n+        LOG.debug(\"RITs over threshold: {}\",\n           ritsOverThreshold.entrySet().stream()\n             .map(e -> e.getKey() + \":\" + e.getValue().getState().name())\n             .collect(Collectors.joining(\"\\n\")));\n"}}, {"oid": "aff33fd7777c493a13b0558cd7ebd80a46c943da", "url": "https://github.com/apache/hbase/commit/aff33fd7777c493a13b0558cd7ebd80a46c943da", "message": "trace -> debug", "committedDate": "2021-01-12T17:53:29Z", "type": "commit"}]}