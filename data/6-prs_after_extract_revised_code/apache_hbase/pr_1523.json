{"pr_number": 1523, "pr_title": "HBASE-24195 : Admin.getRegionServers() should return live servers exc\u2026", "pr_createdAt": "2020-04-15T13:19:12Z", "pr_url": "https://github.com/apache/hbase/pull/1523", "timeline": [{"oid": "ea2cc7172b2be905b10641cec7450558c88b003e", "url": "https://github.com/apache/hbase/commit/ea2cc7172b2be905b10641cec7450558c88b003e", "message": "HBASE-24195 : Admin.getRegionServers() should return live servers excluding decom RS optionally", "committedDate": "2020-04-15T13:17:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5MjkwMA==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409292900", "bodyText": "Add Assert.assertEquals(3, ADMIN.getRegionServers(false).size()); for paranoid reviewers (cough cough me).", "author": "liuml07", "createdAt": "2020-04-16T05:36:11Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java", "diffHunk": "@@ -864,4 +865,42 @@ public void testSlowLogResponses() throws Exception {\n     Assert.assertEquals(onlineLogRecords.size(), 0);\n   }\n \n+  @Test\n+  public void testGetRegionServers() throws Exception {\n+    // get all live server names\n+    List<ServerName> serverNames = new ArrayList<>(ADMIN.getRegionServers(true));\n+    Assert.assertEquals(3, serverNames.size());\n+\n+    List<ServerName> serversToDecom = new ArrayList<>();\n+    ServerName serverToDecommission = serverNames.get(0);\n+\n+    serversToDecom.add(serverToDecommission);\n+    ADMIN.decommissionRegionServers(serversToDecom, false);\n+    waitForServerDecom(serverToDecommission, true);\n+\n+    Assert.assertEquals(2, ADMIN.getRegionServers(true).size());\n+", "originalCommit": "ea2cc7172b2be905b10641cec7450558c88b003e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQxNTEyMw==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409415123", "bodyText": "Sure, definitely", "author": "virajjasani", "createdAt": "2020-04-16T09:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5MjkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "d52a72040825d16517976a41eb9e49619e88a1e5", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java\nindex 839f6a8a35..09c9ab2920 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java\n\n@@ -876,17 +876,19 @@ public class TestAdmin2 extends TestAdminBase {\n \n     serversToDecom.add(serverToDecommission);\n     ADMIN.decommissionRegionServers(serversToDecom, false);\n-    waitForServerDecom(serverToDecommission, true);\n+    waitForServerCommissioned(serverToDecommission, true);\n \n     Assert.assertEquals(2, ADMIN.getRegionServers(true).size());\n+    Assert.assertEquals(3, ADMIN.getRegionServers(false).size());\n \n     ADMIN.recommissionRegionServer(serverToDecommission, Collections.emptyList());\n+    waitForServerCommissioned(null, false);\n \n     Assert.assertEquals(3, ADMIN.getRegionServers(true).size());\n-    waitForServerDecom(serverToDecommission, false);\n+    Assert.assertEquals(3, ADMIN.getRegionServers(false).size());\n   }\n \n-  private static void waitForServerDecom(ServerName excludeServer,\n+  private static void waitForServerCommissioned(ServerName excludeServer,\n       boolean anyServerDecommissioned) {\n     TEST_UTIL.waitFor(3000, () -> {\n       try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5MzU2OQ==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409293569", "bodyText": "Why wait for decommission this server in the end?", "author": "liuml07", "createdAt": "2020-04-16T05:38:27Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java", "diffHunk": "@@ -864,4 +865,42 @@ public void testSlowLogResponses() throws Exception {\n     Assert.assertEquals(onlineLogRecords.size(), 0);\n   }\n \n+  @Test\n+  public void testGetRegionServers() throws Exception {\n+    // get all live server names\n+    List<ServerName> serverNames = new ArrayList<>(ADMIN.getRegionServers(true));\n+    Assert.assertEquals(3, serverNames.size());\n+\n+    List<ServerName> serversToDecom = new ArrayList<>();\n+    ServerName serverToDecommission = serverNames.get(0);\n+\n+    serversToDecom.add(serverToDecommission);\n+    ADMIN.decommissionRegionServers(serversToDecom, false);\n+    waitForServerDecom(serverToDecommission, true);\n+\n+    Assert.assertEquals(2, ADMIN.getRegionServers(true).size());\n+\n+    ADMIN.recommissionRegionServer(serverToDecommission, Collections.emptyList());\n+\n+    Assert.assertEquals(3, ADMIN.getRegionServers(true).size());\n+    waitForServerDecom(serverToDecommission, false);", "originalCommit": "ea2cc7172b2be905b10641cec7450558c88b003e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5ODkwNw==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409298907", "bodyText": "I was thinking the assertion Assert.assertEquals(3, ADMIN.getRegionServers(true).size()); should have made sure all RS are fine now. I understand in case that is not enough, you explicitly make sure the mini cluster is ready for other test cases. OK, good.", "author": "liuml07", "createdAt": "2020-04-16T05:54:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5MzU2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQxNDUxNw==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409414517", "bodyText": "Why wait for decommission this server in the end?\n\nActually, we are waiting for server to be recommissioned (maybe method name not correct, last arg determines). Let me change the order.", "author": "virajjasani", "createdAt": "2020-04-16T09:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5MzU2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d52a72040825d16517976a41eb9e49619e88a1e5", "chunk": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java\nindex 839f6a8a35..09c9ab2920 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java\n\n@@ -876,17 +876,19 @@ public class TestAdmin2 extends TestAdminBase {\n \n     serversToDecom.add(serverToDecommission);\n     ADMIN.decommissionRegionServers(serversToDecom, false);\n-    waitForServerDecom(serverToDecommission, true);\n+    waitForServerCommissioned(serverToDecommission, true);\n \n     Assert.assertEquals(2, ADMIN.getRegionServers(true).size());\n+    Assert.assertEquals(3, ADMIN.getRegionServers(false).size());\n \n     ADMIN.recommissionRegionServer(serverToDecommission, Collections.emptyList());\n+    waitForServerCommissioned(null, false);\n \n     Assert.assertEquals(3, ADMIN.getRegionServers(true).size());\n-    waitForServerDecom(serverToDecommission, false);\n+    Assert.assertEquals(3, ADMIN.getRegionServers(false).size());\n   }\n \n-  private static void waitForServerDecom(ServerName excludeServer,\n+  private static void waitForServerCommissioned(ServerName excludeServer,\n       boolean anyServerDecommissioned) {\n     TEST_UTIL.waitFor(3000, () -> {\n       try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5NjMwMQ==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409296301", "bodyText": "if (CollectionUtils.isNotEmpty(decommissionedRegionServers)) {\n    allServers = new ArrayList<>(allServers);\n    allServers.removeIf(decommissionedRegionServers::contains);\n    return Collections.unmodifiableList(allServers);\n  }\n return allServers;\n\nto\n  return allServers.stream()\n    .filter(s -> !decommissionedRegionServers.contains(s))\n    .collect(ImmutableList.toImmutableList());\n\nI think this will save one time full copy (previous code copy twice, and this copies just once). Need to confirm.", "author": "liuml07", "createdAt": "2020-04-16T05:46:59Z", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -1064,7 +1067,31 @@ default ServerName getMaster() throws IOException {\n    * @throws IOException if a remote or network exception occurs\n    */\n   default Collection<ServerName> getRegionServers() throws IOException {\n-    return getClusterMetrics(EnumSet.of(Option.SERVERS_NAME)).getServersName();\n+    return getRegionServers(false);\n+  }\n+\n+  /**\n+   * Retrieve all current live region servers including decommissioned\n+   * if excludeDecommissionedRS is false, else non-decommissioned ones only\n+   *\n+   * @param excludeDecommissionedRS should we exclude decommissioned RS nodes\n+   * @return all current live region servers including/excluding decommissioned hosts\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  default Collection<ServerName> getRegionServers(boolean excludeDecommissionedRS)\n+      throws IOException {\n+    List<ServerName> allServers =\n+      getClusterMetrics(EnumSet.of(Option.SERVERS_NAME)).getServersName();\n+    if (!excludeDecommissionedRS) {\n+      return allServers;\n+    }\n+    List<ServerName> decommissionedRegionServers = listDecommissionedRegionServers();\n+    if (CollectionUtils.isNotEmpty(decommissionedRegionServers)) {", "originalCommit": "ea2cc7172b2be905b10641cec7450558c88b003e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQxMjgwMA==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409412800", "bodyText": "The reason behind copy (new ArrayList<>(allServers)) was making allServers unmodifiable list. So ImmutableList.toImmutableList() seems to be solving our problem.", "author": "virajjasani", "createdAt": "2020-04-16T09:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI5NjMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "d52a72040825d16517976a41eb9e49619e88a1e5", "chunk": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java\nindex 4a74d37c9f..c82b101595 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java\n\n@@ -1086,12 +1085,9 @@ public interface Admin extends Abortable, Closeable {\n       return allServers;\n     }\n     List<ServerName> decommissionedRegionServers = listDecommissionedRegionServers();\n-    if (CollectionUtils.isNotEmpty(decommissionedRegionServers)) {\n-      allServers = new ArrayList<>(allServers);\n-      allServers.removeIf(decommissionedRegionServers::contains);\n-      return Collections.unmodifiableList(allServers);\n-    }\n-    return allServers;\n+    return allServers.stream()\n+      .filter(s -> !decommissionedRegionServers.contains(s))\n+      .collect(ImmutableList.toImmutableList());\n   }\n \n   /**\n"}}, {"oid": "d52a72040825d16517976a41eb9e49619e88a1e5", "url": "https://github.com/apache/hbase/commit/d52a72040825d16517976a41eb9e49619e88a1e5", "message": "addressing review comments", "committedDate": "2020-04-16T09:49:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3NTk4NA==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409575984", "bodyText": "Is the timeout chosen randomly?", "author": "HorizonNet", "createdAt": "2020-04-16T13:55:52Z", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin2.java", "diffHunk": "@@ -864,4 +865,44 @@ public void testSlowLogResponses() throws Exception {\n     Assert.assertEquals(onlineLogRecords.size(), 0);\n   }\n \n+  @Test\n+  public void testGetRegionServers() throws Exception {\n+    // get all live server names\n+    List<ServerName> serverNames = new ArrayList<>(ADMIN.getRegionServers(true));\n+    Assert.assertEquals(3, serverNames.size());\n+\n+    List<ServerName> serversToDecom = new ArrayList<>();\n+    ServerName serverToDecommission = serverNames.get(0);\n+\n+    serversToDecom.add(serverToDecommission);\n+    ADMIN.decommissionRegionServers(serversToDecom, false);\n+    waitForServerCommissioned(serverToDecommission, true);\n+\n+    Assert.assertEquals(2, ADMIN.getRegionServers(true).size());\n+    Assert.assertEquals(3, ADMIN.getRegionServers(false).size());\n+\n+    ADMIN.recommissionRegionServer(serverToDecommission, Collections.emptyList());\n+    waitForServerCommissioned(null, false);\n+\n+    Assert.assertEquals(3, ADMIN.getRegionServers(true).size());\n+    Assert.assertEquals(3, ADMIN.getRegionServers(false).size());\n+  }\n+\n+  private static void waitForServerCommissioned(ServerName excludeServer,\n+      boolean anyServerDecommissioned) {\n+    TEST_UTIL.waitFor(3000, () -> {", "originalCommit": "d52a72040825d16517976a41eb9e49619e88a1e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4ODU5Ng==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409588596", "bodyText": "Not randomly, but it is(3s) more than enough for de/re-commission to take place. Should be fine?", "author": "virajjasani", "createdAt": "2020-04-16T14:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3NTk4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4OTExNw==", "url": "https://github.com/apache/hbase/pull/1523#discussion_r409589117", "bodyText": "I have used the same before also for decommission test.", "author": "virajjasani", "createdAt": "2020-04-16T14:12:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3NTk4NA=="}], "type": "inlineReview", "revised_code": null}]}