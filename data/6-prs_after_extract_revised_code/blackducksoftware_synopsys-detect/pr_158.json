{"pr_number": 158, "pr_title": "fix(): Edits to resolve sonar cloud vulnerabilites", "pr_createdAt": "2020-04-22T17:53:45Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/158", "timeline": [{"oid": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "message": "fix(): Edits to resolve sonar cloud vulnerabilites", "committedDate": "2020-04-22T17:51:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzMxNDgyNg==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r413314826", "bodyText": "Add @SerializedName instead.", "author": "taikuukaits", "createdAt": "2020-04-22T20:42:01Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java", "diffHunk": "@@ -28,8 +28,12 @@\n \n public class GoLock {\n     // see https://github.com/golang/dep/blob/master/lock.go for the source of the lock file\n-    public List<Project> projects;\n+    private List<Project> projects;", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java b/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java\nindex d9f8c813b..a083a339f 100644\n--- a/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java\n+++ b/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java\n\n@@ -28,6 +28,7 @@ import com.google.gson.annotations.SerializedName;\n \n public class GoLock {\n     // see https://github.com/golang/dep/blob/master/lock.go for the source of the lock file\n+    @SerializedName(\"projects\")\n     private List<Project> projects;\n \n     @SerializedName(\"solve-meta\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MDk3Ng==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414050976", "bodyText": "Instead add a constructor, make fields final and add getters.", "author": "taikuukaits", "createdAt": "2020-04-23T19:05:19Z", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,60 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\nindex 219f2b1ee..a7a99c8ff 100644\n--- a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n+++ b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n\n@@ -37,60 +37,57 @@ import com.synopsys.integration.detector.base.DetectorType;\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    private Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    private List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    private final Optional<NameVersion> bomToolProjectNameVersion;\n+    private final List<DetectCodeLocation> bomToolCodeLocations;\n \n-    private Set<DetectorType> applicableDetectorTypes = new HashSet<>();\n-    private Set<DetectorType> failedDetectorTypes = new HashSet<>();\n+    private final Set<DetectorType> applicableDetectorTypes;\n+    private final Set<DetectorType> failedDetectorTypes;\n \n-    private Optional<DetectorEvaluationTree> rootDetectorEvaluationTree = Optional.empty();\n-    private Map<CodeLocation, DetectCodeLocation> codeLocationMap = new HashMap<>();\n+    private final Optional<DetectorEvaluationTree> rootDetectorEvaluationTree;\n+    private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n \n-    public Optional<NameVersion> getBomToolProjectNameVersion() {\n-        return bomToolProjectNameVersion;\n+    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+        final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n+        this.bomToolProjectNameVersion = Optional.of(bomToolProjectNameVersion);\n+        this.bomToolCodeLocations = bomToolCodeLocations;\n+        this.applicableDetectorTypes = applicableDetectorTypes;\n+        this.failedDetectorTypes = failedDetectorTypes;\n+        this.rootDetectorEvaluationTree = Optional.of(rootDetectorEvaluationTree);\n+        this.codeLocationMap = codeLocationMap;\n     }\n \n-    public void setBomToolProjectNameVersion(final Optional<NameVersion> bomToolProjectNameVersion) {\n-        this.bomToolProjectNameVersion = bomToolProjectNameVersion;\n+    public DetectorToolResult() {\n+        this.bomToolProjectNameVersion = Optional.empty();\n+        this.bomToolCodeLocations = new ArrayList<>();\n+        this.applicableDetectorTypes = new HashSet<>();\n+        this.failedDetectorTypes = new HashSet<>();\n+        this.rootDetectorEvaluationTree = Optional.empty();\n+        this.codeLocationMap = new HashMap<>();\n     }\n \n-    public List<DetectCodeLocation> getBomToolCodeLocations() {\n-        return bomToolCodeLocations;\n+    public Optional<NameVersion> getBomToolProjectNameVersion() {\n+        return bomToolProjectNameVersion;\n     }\n \n-    public void setBomToolCodeLocations(final List<DetectCodeLocation> bomToolCodeLocations) {\n-        this.bomToolCodeLocations = bomToolCodeLocations;\n+    public List<DetectCodeLocation> getBomToolCodeLocations() {\n+        return bomToolCodeLocations;\n     }\n \n     public Set<DetectorType> getApplicableDetectorTypes() {\n         return applicableDetectorTypes;\n     }\n \n-    public void setApplicableDetectorTypes(final Set<DetectorType> applicableDetectorTypes) {\n-        this.applicableDetectorTypes = applicableDetectorTypes;\n-    }\n-\n     public Set<DetectorType> getFailedDetectorTypes() {\n         return failedDetectorTypes;\n     }\n \n-    public void setFailedDetectorTypes(final Set<DetectorType> failedDetectorTypes) {\n-        this.failedDetectorTypes = failedDetectorTypes;\n-    }\n-\n     public Optional<DetectorEvaluationTree> getRootDetectorEvaluationTree() {\n         return rootDetectorEvaluationTree;\n     }\n \n-    public void setRootDetectorEvaluationTree(final Optional<DetectorEvaluationTree> rootDetectorEvaluationTree) {\n-        this.rootDetectorEvaluationTree = rootDetectorEvaluationTree;\n-    }\n-\n     public Map<CodeLocation, DetectCodeLocation> getCodeLocationMap() {\n         return codeLocationMap;\n     }\n \n-    public void setCodeLocationMap(final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n-        this.codeLocationMap = codeLocationMap;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTE3Nw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051177", "bodyText": "Add @SerializedName instead.", "author": "taikuukaits", "createdAt": "2020-04-23T19:05:37Z", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java", "diffHunk": "@@ -23,9 +23,17 @@\n package com.synopsys.integration.detect.workflow.report.output;\n \n public class FormattedCodeLocationOutput {\n-    public String codeLocationName;\n+    private String codeLocationName;", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java\nindex 301781913..bfe6f8340 100644\n--- a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java\n+++ b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedCodeLocationOutput.java\n\n@@ -22,18 +22,14 @@\n  */\n package com.synopsys.integration.detect.workflow.report.output;\n \n+import com.google.gson.annotations.SerializedName;\n+\n public class FormattedCodeLocationOutput {\n-    private String codeLocationName;\n+    @SerializedName(\"codeLocationName\")\n+    public String codeLocationName;\n \n-    public FormattedCodeLocationOutput(final String name) {\n+    FormattedCodeLocationOutput(final String name) {\n         this.codeLocationName = name;\n     }\n \n-    public String getCodeLocationName() {\n-        return codeLocationName;\n-    }\n-\n-    public void setCodeLocationName(final String codeLocationName) {\n-        this.codeLocationName = codeLocationName;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTI3MA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051270", "bodyText": "Add @SerializedName instead.", "author": "taikuukaits", "createdAt": "2020-04-23T19:05:45Z", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java", "diffHunk": "@@ -26,27 +26,171 @@\n import java.util.List;\n \n public class FormattedDetectorOutput {", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java\nindex 9dd55196f..a9639f2ba 100644\n--- a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java\n+++ b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedDetectorOutput.java\n\n@@ -25,172 +25,62 @@ package com.synopsys.integration.detect.workflow.report.output;\n import java.util.ArrayList;\n import java.util.List;\n \n-public class FormattedDetectorOutput {\n-    private String folder = \"\";\n-    private String detectorType = \"\";\n-    private String detectorName = \"\";\n-    private String descriptiveName = \"\";\n-\n-    private boolean searchable = true;\n-    private boolean applicable = true;\n-    private boolean extractable = true;\n-    private boolean discoverable = true;\n-    private boolean extracted = true;\n-\n-    private String searchableReason = \"\";\n-    private String applicableReason = \"\";\n-    private String extractableReason = \"\";\n-    private String discoveryReason = \"\";\n-    private String extractedReason = \"\";\n-\n-    private List<String> relevantFiles = new ArrayList<>();\n-\n-    private String projectName = \"\";\n-    private String projectVersion = \"\";\n-    private int codeLocationCount = 0;\n-\n-    public String getFolder() {\n-        return folder;\n-    }\n-\n-    public void setFolder(final String folder) {\n-        this.folder = folder;\n-    }\n+import com.google.gson.annotations.SerializedName;\n \n-    public String getDetectorType() {\n-        return detectorType;\n-    }\n-\n-    public void setDetectorType(final String detectorType) {\n-        this.detectorType = detectorType;\n-    }\n-\n-    public String getDetectorName() {\n-        return detectorName;\n-    }\n-\n-    public void setDetectorName(final String detectorName) {\n-        this.detectorName = detectorName;\n-    }\n-\n-    public String getDescriptiveName() {\n-        return descriptiveName;\n-    }\n+public class FormattedDetectorOutput {\n+    @SerializedName(\"folder\")\n+    public String folder = \"\";\n \n-    public void setDescriptiveName(final String descriptiveName) {\n-        this.descriptiveName = descriptiveName;\n-    }\n+    @SerializedName(\"detectorType\")\n+    public String detectorType = \"\";\n \n-    public boolean isSearchable() {\n-        return searchable;\n-    }\n+    @SerializedName(\"detectorName\")\n+    public String detectorName = \"\";\n \n-    public void setSearchable(final boolean searchable) {\n-        this.searchable = searchable;\n-    }\n+    @SerializedName(\"descriptiveName\")\n+    public String descriptiveName = \"\";\n \n-    public boolean isApplicable() {\n-        return applicable;\n-    }\n-\n-    public void setApplicable(final boolean applicable) {\n-        this.applicable = applicable;\n-    }\n-\n-    public boolean isExtractable() {\n-        return extractable;\n-    }\n-\n-    public void setExtractable(final boolean extractable) {\n-        this.extractable = extractable;\n-    }\n-\n-    public boolean isDiscoverable() {\n-        return discoverable;\n-    }\n-\n-    public void setDiscoverable(final boolean discoverable) {\n-        this.discoverable = discoverable;\n-    }\n-\n-    public boolean isExtracted() {\n-        return extracted;\n-    }\n-\n-    public void setExtracted(final boolean extracted) {\n-        this.extracted = extracted;\n-    }\n-\n-    public String getSearchableReason() {\n-        return searchableReason;\n-    }\n-\n-    public void setSearchableReason(final String searchableReason) {\n-        this.searchableReason = searchableReason;\n-    }\n-\n-    public String getApplicableReason() {\n-        return applicableReason;\n-    }\n-\n-    public void setApplicableReason(final String applicableReason) {\n-        this.applicableReason = applicableReason;\n-    }\n+    @SerializedName(\"searchable\")\n+    public boolean searchable = true;\n \n-    public String getExtractableReason() {\n-        return extractableReason;\n-    }\n+    @SerializedName(\"applicable\")\n+    public boolean applicable = true;\n \n-    public void setExtractableReason(final String extractableReason) {\n-        this.extractableReason = extractableReason;\n-    }\n+    @SerializedName(\"extractable\")\n+    public boolean extractable = true;\n \n-    public String getDiscoveryReason() {\n-        return discoveryReason;\n-    }\n+    @SerializedName(\"discoverable\")\n+    public boolean discoverable = true;\n \n-    public void setDiscoveryReason(final String discoveryReason) {\n-        this.discoveryReason = discoveryReason;\n-    }\n+    @SerializedName(\"extracted\")\n+    public boolean extracted = true;\n \n-    public String getExtractedReason() {\n-        return extractedReason;\n-    }\n+    @SerializedName(\"searchableReason\")\n+    public String searchableReason = \"\";\n \n-    public void setExtractedReason(final String extractedReason) {\n-        this.extractedReason = extractedReason;\n-    }\n+    @SerializedName(\"applicableReason\")\n+    public String applicableReason = \"\";\n \n-    public List<String> getRelevantFiles() {\n-        return relevantFiles;\n-    }\n+    @SerializedName(\"extractableReason\")\n+    public String extractableReason = \"\";\n \n-    public void setRelevantFiles(final List<String> relevantFiles) {\n-        this.relevantFiles = relevantFiles;\n-    }\n+    @SerializedName(\"discoveryReason\")\n+    public String discoveryReason = \"\";\n \n-    public String getProjectName() {\n-        return projectName;\n-    }\n+    @SerializedName(\"extractedReason\")\n+    public String extractedReason = \"\";\n \n-    public void setProjectName(final String projectName) {\n-        this.projectName = projectName;\n-    }\n+    @SerializedName(\"relevantFiles\")\n+    public List<String> relevantFiles = new ArrayList<>();\n \n-    public String getProjectVersion() {\n-        return projectVersion;\n-    }\n+    @SerializedName(\"projectName\")\n+    public String projectName = \"\";\n \n-    public void setProjectVersion(final String projectVersion) {\n-        this.projectVersion = projectVersion;\n-    }\n+    @SerializedName(\"projectVersion\")\n+    public String projectVersion = \"\";\n \n-    public int getCodeLocationCount() {\n-        return codeLocationCount;\n-    }\n+    @SerializedName(\"codeLocationCount\")\n+    public int codeLocationCount = 0;\n \n-    public void setCodeLocationCount(final int codeLocationCount) {\n-        this.codeLocationCount = codeLocationCount;\n-    }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTM2MA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051360", "bodyText": "Add @SerializedName instead.", "author": "taikuukaits", "createdAt": "2020-04-23T19:05:54Z", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java", "diffHunk": "@@ -23,13 +23,25 @@\n package com.synopsys.integration.detect.workflow.report.output;", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java\nindex 30703b243..699dc6b7f 100644\n--- a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java\n+++ b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedExitCodeOutput.java\n\n@@ -22,26 +22,21 @@\n  */\n package com.synopsys.integration.detect.workflow.report.output;\n \n+import com.google.gson.annotations.SerializedName;\n+\n public class FormattedExitCodeOutput {\n-    private Integer exitCode = 0;\n-    private String exitCodeDescription = \"\";\n-    private String exitCodeReason = \"\";\n+    @SerializedName(\"exitCode\")\n+    public Integer exitCode = 0;\n+\n+    @SerializedName(\"exitCodeDescription\")\n+    public String exitCodeDescription = \"\";\n+\n+    @SerializedName(\"exitCodeReason\")\n+    public String exitCodeReason = \"\";\n \n-    public FormattedExitCodeOutput(final Integer exitCode, String exitCodeDescription, final String exitCodeReason) {\n+    public FormattedExitCodeOutput(final Integer exitCode, final String exitCodeDescription, final String exitCodeReason) {\n         this.exitCode = exitCode;\n         this.exitCodeDescription = exitCodeDescription;\n         this.exitCodeReason = exitCodeReason;\n     }\n-\n-    public Integer getExitCode() {\n-        return exitCode;\n-    }\n-\n-    public String getExitCodeDescription() {\n-        return exitCodeDescription;\n-    }\n-\n-    public String getExitCodeReason() {\n-        return exitCodeReason;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTQxOQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051419", "bodyText": "Add @SerializedName instead.", "author": "taikuukaits", "createdAt": "2020-04-23T19:05:59Z", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java", "diffHunk": "@@ -26,15 +26,87 @@\n import java.util.List;\n \n public class FormattedOutput {\n-    public String formatVersion = \"\";", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java\nindex 6b6498b19..161193146 100644\n--- a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java\n+++ b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedOutput.java\n\n@@ -25,88 +25,35 @@ package com.synopsys.integration.detect.workflow.report.output;\n import java.util.ArrayList;\n import java.util.List;\n \n-public class FormattedOutput {\n-    private String formatVersion = \"\";\n-    private String detectVersion = \"\";\n-    private String projectName = \"\";\n-    private String projectVersion = \"\";\n-    private List<FormattedDetectorOutput> detectors = new ArrayList<>();\n-\n-    private List<FormattedStatusOutput> status = new ArrayList<>();\n-    private List<FormattedIssueOutput> issues = new ArrayList<>();\n-    private List<FormattedResultOutput> results = new ArrayList<>();\n-    private List<FormattedCodeLocationOutput> codeLocations = new ArrayList<>();\n-\n-    public String getFormatVersion() {\n-        return formatVersion;\n-    }\n-\n-    public void setFormatVersion(final String formatVersion) {\n-        this.formatVersion = formatVersion;\n-    }\n-\n-    public String getDetectVersion() {\n-        return detectVersion;\n-    }\n-\n-    public void setDetectVersion(final String detectVersion) {\n-        this.detectVersion = detectVersion;\n-    }\n+import com.google.gson.annotations.SerializedName;\n \n-    public String getProjectName() {\n-        return projectName;\n-    }\n-\n-    public void setProjectName(final String projectName) {\n-        this.projectName = projectName;\n-    }\n-\n-    public String getProjectVersion() {\n-        return projectVersion;\n-    }\n-\n-    public void setProjectVersion(final String projectVersion) {\n-        this.projectVersion = projectVersion;\n-    }\n-\n-    public List<FormattedDetectorOutput> getDetectors() {\n-        return detectors;\n-    }\n+public class FormattedOutput {\n+    @SerializedName(\"formatVersion\")\n+    public String formatVersion = \"\";\n \n-    public void setDetectors(final List<FormattedDetectorOutput> detectors) {\n-        this.detectors = detectors;\n-    }\n+    @SerializedName(\"detectVersion\")\n+    public String detectVersion = \"\";\n \n-    public List<FormattedStatusOutput> getStatus() {\n-        return status;\n-    }\n+    @SerializedName(\"projectName\")\n+    public String projectName = \"\";\n \n-    public void setStatus(final List<FormattedStatusOutput> status) {\n-        this.status = status;\n-    }\n+    @SerializedName(\"projectVersion\")\n+    public String projectVersion = \"\";\n \n-    public List<FormattedIssueOutput> getIssues() {\n-        return issues;\n-    }\n+    @SerializedName(\"detectors\")\n+    public List<FormattedDetectorOutput> detectors = new ArrayList<>();\n \n-    public void setIssues(final List<FormattedIssueOutput> issues) {\n-        this.issues = issues;\n-    }\n+    @SerializedName(\"status\")\n+    public List<FormattedStatusOutput> status = new ArrayList<>();\n \n-    public List<FormattedResultOutput> getResults() {\n-        return results;\n-    }\n+    @SerializedName(\"issues\")\n+    public List<FormattedIssueOutput> issues = new ArrayList<>();\n \n-    public void setResults(final List<FormattedResultOutput> results) {\n-        this.results = results;\n-    }\n+    @SerializedName(\"results\")\n+    public List<FormattedResultOutput> results = new ArrayList<>();\n \n-    public List<FormattedCodeLocationOutput> getCodeLocations() {\n-        return codeLocations;\n-    }\n+    @SerializedName(\"codeLocations\")\n+    public List<FormattedCodeLocationOutput> codeLocations = new ArrayList<>();\n \n-    public void setCodeLocations(final List<FormattedCodeLocationOutput> codeLocations) {\n-        this.codeLocations = codeLocations;\n-    }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA1MTU4Ng==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414051586", "bodyText": "Add @SerializedName instead.", "author": "taikuukaits", "createdAt": "2020-04-23T19:06:10Z", "path": "src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java", "diffHunk": "@@ -23,11 +23,27 @@\n package com.synopsys.integration.detect.workflow.report.output;\n \n public class FormattedResultOutput {", "originalCommit": "6096dac30c12e3b662ba0c2a50bbb1847ee5735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b67299c59121975d1306f980180d07dd831764e6", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java\nindex ca8882d76..433b6468a 100644\n--- a/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java\n+++ b/src/main/java/com/synopsys/integration/detect/workflow/report/output/FormattedResultOutput.java\n\n@@ -22,28 +22,17 @@\n  */\n package com.synopsys.integration.detect.workflow.report.output;\n \n-public class FormattedResultOutput {\n-    private String location;\n-    private String message;\n+import com.google.gson.annotations.SerializedName;\n \n-    public FormattedResultOutput(final String location, final String message) {\n-        this.location = location;\n-        this.message = message;\n-    }\n+public class FormattedResultOutput {\n+    @SerializedName(\"location\")\n+    public String location;\n \n-    public String getLocation() {\n-        return location;\n-    }\n+    @SerializedName(\"message\")\n+    public String message;\n \n-    public void setLocation(final String location) {\n+    public FormattedResultOutput(final String location, final String message) {\n         this.location = location;\n-    }\n-\n-    public String getMessage() {\n-        return message;\n-    }\n-\n-    public void setMessage(final String message) {\n         this.message = message;\n     }\n }\n"}}, {"oid": "b67299c59121975d1306f980180d07dd831764e6", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b67299c59121975d1306f980180d07dd831764e6", "message": "refactor(): Annotate serializable names of public data class fields", "committedDate": "2020-04-23T20:25:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwNjA2OQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414106069", "bodyText": "Please remove the getter.", "author": "taikuukaits", "createdAt": "2020-04-23T20:36:08Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java", "diffHunk": "@@ -28,8 +28,13 @@\n \n public class GoLock {\n     // see https://github.com/golang/dep/blob/master/lock.go for the source of the lock file\n-    public List<Project> projects;\n+    @SerializedName(\"projects\")\n+    private List<Project> projects;\n \n     @SerializedName(\"solve-meta\")\n     public SolveMeta solveMeta;\n+\n+    public List<Project> getProjects() {", "originalCommit": "b67299c59121975d1306f980180d07dd831764e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8", "chunk": "diff --git a/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java b/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java\nindex a083a339f..a8c8f1b1c 100644\n--- a/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java\n+++ b/detectable/src/main/java/com/synopsys/integration/detectable/detectables/go/godep/model/GoLock.java\n\n@@ -29,12 +29,8 @@ import com.google.gson.annotations.SerializedName;\n public class GoLock {\n     // see https://github.com/golang/dep/blob/master/lock.go for the source of the lock file\n     @SerializedName(\"projects\")\n-    private List<Project> projects;\n+    public List<Project> projects;\n \n     @SerializedName(\"solve-meta\")\n     public SolveMeta solveMeta;\n-\n-    public List<Project> getProjects() {\n-        return projects;\n-    }\n }\n"}}, {"oid": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8", "message": "refactor: Removed getter for GoLock.projects", "committedDate": "2020-04-23T20:39:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414700680", "bodyText": "Why is this .get() but the other was not? Did we change the type? Also why do we take in null as one of the parameters?", "author": "taikuukaits", "createdAt": "2020-04-24T16:20:49Z", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java", "diffHunk": "@@ -173,25 +174,16 @@ public DetectorToolResult performDetectors(final File directory, final DetectorR\n             }\n         }\n \n-        final DetectorToolResult detectorToolResult = new DetectorToolResult();\n+        Map<CodeLocation, DetectCodeLocation> codeLocationMap = createCodeLocationMap(detectorEvaluations, directory);\n \n-        detectorToolResult.rootDetectorEvaluationTree = Optional.of(rootEvaluation);\n-\n-        detectorToolResult.applicableDetectorTypes = applicable;\n-\n-        detectorToolResult.codeLocationMap = detectorEvaluations.stream()\n-                                                 .filter(DetectorEvaluation::wasExtractionSuccessful)\n-                                                 .map(it -> codeLocationConverter.toDetectCodeLocation(directory, it))\n-                                                 .map(Map::entrySet)\n-                                                 .flatMap(Collection::stream)\n-                                                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n-\n-        detectorToolResult.bomToolCodeLocations = new ArrayList<>(detectorToolResult.codeLocationMap.values());\n-\n-        logger.info(\"\");\n-        final NameVersionDecision nameVersionDecision = detectorNameVersionHandler.finalDecision();\n-        nameVersionDecision.printDescription(logger);\n-        detectorToolResult.bomToolProjectNameVersion = nameVersionDecision.getChosenNameVersion();\n+        final DetectorToolResult detectorToolResult = new DetectorToolResult(\n+            detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),", "originalCommit": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwNjQ1MQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414706451", "bodyText": "I made the constructor take in a NameVersion and then set the field to Optional.of()\nas for why we pass in null for failedDetectorTypes, there wasn't one provided in the original code.  I could change it to pass in an empty HashSet", "author": "crowleySynopsys", "createdAt": "2020-04-24T16:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyNzQ2OA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414827468", "bodyText": "But what happens when the ChosenNameVersion is Empty() - won't there be an exception? You shouldn't do a get without an isPresent check or use orElse(null).\nCan we just remove the field then?", "author": "taikuukaits", "createdAt": "2020-04-24T19:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1OTgwMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414859801", "bodyText": "I commented on DetectorToolResult. Once you make those changes, use the below code to not throw an exception.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),\n          \n          \n            \n                        detectorNameVersionHandler.finalDecision().getChosenNameVersion().orElse(null),", "author": "JakeMathews", "createdAt": "2020-04-24T20:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMDY4MA=="}], "type": "inlineReview", "revised_code": {"commit": "4119d79a69425dc7b863e562ef188060e122e9e5", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java\nindex bdbbd038e..73d2119d1 100644\n--- a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java\n+++ b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorTool.java\n\n@@ -177,10 +177,10 @@ public class DetectorTool {\n         Map<CodeLocation, DetectCodeLocation> codeLocationMap = createCodeLocationMap(detectorEvaluations, directory);\n \n         final DetectorToolResult detectorToolResult = new DetectorToolResult(\n-            detectorNameVersionHandler.finalDecision().getChosenNameVersion().get(),\n+            detectorNameVersionHandler.finalDecision().getChosenNameVersion().orElse(null),\n             new ArrayList<>(codeLocationMap.values()),\n             applicable,\n-            null,\n+            new HashSet<>(),\n             rootEvaluation,\n             codeLocationMap\n         );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTAwNA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414701004", "bodyText": "Who creates this tool result?", "author": "taikuukaits", "createdAt": "2020-04-24T16:21:18Z", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,57 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    private final Optional<NameVersion> bomToolProjectNameVersion;\n+    private final List<DetectCodeLocation> bomToolCodeLocations;\n \n-    public Set<DetectorType> applicableDetectorTypes = new HashSet<>();\n-    public Set<DetectorType> failedDetectorTypes = new HashSet<>();\n+    private final Set<DetectorType> applicableDetectorTypes;\n+    private final Set<DetectorType> failedDetectorTypes;\n \n-    public Optional<DetectorEvaluationTree> rootDetectorEvaluationTree = Optional.empty();\n-    public Map<CodeLocation, DetectCodeLocation> codeLocationMap = new HashMap<>();\n+    private final Optional<DetectorEvaluationTree> rootDetectorEvaluationTree;\n+    private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n+\n+    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+        final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n+        this.bomToolProjectNameVersion = Optional.of(bomToolProjectNameVersion);\n+        this.bomToolCodeLocations = bomToolCodeLocations;\n+        this.applicableDetectorTypes = applicableDetectorTypes;\n+        this.failedDetectorTypes = failedDetectorTypes;\n+        this.rootDetectorEvaluationTree = Optional.of(rootDetectorEvaluationTree);\n+        this.codeLocationMap = codeLocationMap;\n+    }\n+\n+    public DetectorToolResult() {", "originalCommit": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMzI1NQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414713255", "bodyText": "DetectorTool uses parameter-less constructor on line 95", "author": "crowleySynopsys", "createdAt": "2020-04-24T16:40:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "4119d79a69425dc7b863e562ef188060e122e9e5", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\nindex a7a99c8ff..ece72bc9f 100644\n--- a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n+++ b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n\n@@ -30,6 +31,8 @@ import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n \n+import org.jetbrains.annotations.Nullable;\n+\n import com.synopsys.integration.detect.workflow.codelocation.DetectCodeLocation;\n import com.synopsys.integration.detectable.detectable.codelocation.CodeLocation;\n import com.synopsys.integration.detector.base.DetectorEvaluationTree;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1ODU3OA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414858578", "bodyText": "Optional should not be a field. Make it a regular NameVersion. Annotate the field with @Nullable as well as the constructor paramter. Use Optional.ofNullable(bomToolProjectNameVersion) in getBomToolProjectNameVersion().\nDo the same for rootDetectorEvaluationTree below.", "author": "JakeMathews", "createdAt": "2020-04-24T20:57:13Z", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -37,13 +37,57 @@\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    private final Optional<NameVersion> bomToolProjectNameVersion;", "originalCommit": "4cf3e634de8afc557d9ad8d2770b34bc1e63fbb8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4119d79a69425dc7b863e562ef188060e122e9e5", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\nindex a7a99c8ff..ece72bc9f 100644\n--- a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n+++ b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n\n@@ -30,6 +31,8 @@ import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n \n+import org.jetbrains.annotations.Nullable;\n+\n import com.synopsys.integration.detect.workflow.codelocation.DetectCodeLocation;\n import com.synopsys.integration.detectable.detectable.codelocation.CodeLocation;\n import com.synopsys.integration.detector.base.DetectorEvaluationTree;\n"}}, {"oid": "4119d79a69425dc7b863e562ef188060e122e9e5", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4119d79a69425dc7b863e562ef188060e122e9e5", "message": "refactor: Made fields in DetectorToolResult not Optionals", "committedDate": "2020-04-24T21:11:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg3MDgzNQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/158#discussion_r414870835", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n          \n          \n            \n                    final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n          \n          \n            \n                    final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n          \n          \n            \n                public DetectorToolResult(@Nullable final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n          \n          \n            \n                    final Set<DetectorType> failedDetectorTypes, @Nullable final DetectorEvaluationTree rootDetectorEvaluationTree,\n          \n          \n            \n                    final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {", "author": "JakeMathews", "createdAt": "2020-04-24T21:22:20Z", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java", "diffHunk": "@@ -30,20 +31,68 @@\n import java.util.Optional;\n import java.util.Set;\n \n+import org.jetbrains.annotations.Nullable;\n+\n import com.synopsys.integration.detect.workflow.codelocation.DetectCodeLocation;\n import com.synopsys.integration.detectable.detectable.codelocation.CodeLocation;\n import com.synopsys.integration.detector.base.DetectorEvaluationTree;\n import com.synopsys.integration.detector.base.DetectorType;\n import com.synopsys.integration.util.NameVersion;\n \n public class DetectorToolResult {\n-    public Optional<NameVersion> bomToolProjectNameVersion = Optional.empty();\n-    public List<DetectCodeLocation> bomToolCodeLocations = new ArrayList<>();\n+    @Nullable\n+    private final NameVersion bomToolProjectNameVersion;\n+    private final List<DetectCodeLocation> bomToolCodeLocations;\n+\n+    private final Set<DetectorType> applicableDetectorTypes;\n+    private final Set<DetectorType> failedDetectorTypes;\n+\n+    @Nullable\n+    private final DetectorEvaluationTree rootDetectorEvaluationTree;\n+    private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n+\n+    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+        final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {", "originalCommit": "4119d79a69425dc7b863e562ef188060e122e9e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a0bd4c36498d3c7c821ab37729065f7a34c66fb", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\nindex ece72bc9f..761281a5a 100644\n--- a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n+++ b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectorToolResult.java\n\n@@ -51,8 +51,8 @@ public class DetectorToolResult {\n     private final DetectorEvaluationTree rootDetectorEvaluationTree;\n     private final Map<CodeLocation, DetectCodeLocation> codeLocationMap;\n \n-    public DetectorToolResult(final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n-        final Set<DetectorType> failedDetectorTypes, final DetectorEvaluationTree rootDetectorEvaluationTree,\n+    public DetectorToolResult(@Nullable final NameVersion bomToolProjectNameVersion, final List<DetectCodeLocation> bomToolCodeLocations, final Set<DetectorType> applicableDetectorTypes,\n+        final Set<DetectorType> failedDetectorTypes, @Nullable final DetectorEvaluationTree rootDetectorEvaluationTree,\n         final Map<CodeLocation, DetectCodeLocation> codeLocationMap) {\n         this.bomToolProjectNameVersion = bomToolProjectNameVersion;\n         this.bomToolCodeLocations = bomToolCodeLocations;\n"}}, {"oid": "6a0bd4c36498d3c7c821ab37729065f7a34c66fb", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6a0bd4c36498d3c7c821ab37729065f7a34c66fb", "message": "refactor: Made constructor parameters Nullable", "committedDate": "2020-04-24T21:48:38Z", "type": "commit"}, {"oid": "15cd7a94e5aaaba5be0b96a519354ac319a0cf3b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/15cd7a94e5aaaba5be0b96a519354ac319a0cf3b", "message": "Merge branch 'master' into sonarCloudVulnerabilities", "committedDate": "2020-04-24T21:50:31Z", "type": "commit"}]}