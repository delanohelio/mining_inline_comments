{"pr_number": 202, "pr_title": "feat: Converted UpdateBattery.kt to java", "pr_createdAt": "2020-07-06T16:23:48Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/202", "timeline": [{"oid": "d830375949847c1552931ee8061a59fa17bf12de", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d830375949847c1552931ee8061a59fa17bf12de", "message": "feat: Converted UpdateBattery.kt to java", "committedDate": "2020-07-06T16:22:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1ODQ0Nw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/202#discussion_r450358447", "bodyText": "Why the escaping here? Aren't we looking for *** and not backslash * backslash * backslash * or am I misinterpreting the escaping?", "author": "taikuukaits", "createdAt": "2020-07-06T16:58:45Z", "path": "buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * buildSrc\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.battery;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+// Occasionally changes to BDIO or other integral systems require mass changes to the battery. This facilitates that work.\n+public class UpdateBatteryJava extends DefaultTask {\n+\n+    @TaskAction\n+    public void updateBattery() throws IOException {\n+        File batteryBuild = new File(\"build/battery/\");\n+        //battery.listFiles()\n+        File batteryResources = new File(\"src/test/resources/battery/\");\n+\n+        File batteryReports = new File(\"build/reports/tests/testBattery/classes/\");\n+        for(File report : batteryReports.listFiles()) {\n+            for (String line : Files.readAllLines(report.toPath())) {\n+                if (line.contains(\"***BDIO BATTERY TEST|\")) {\n+                    String chunk = extractChunk(line);\n+                    String[] pieces = chunk.split(\"\\\\|\");\n+                    String testName = pieces[0];\n+                    String resourcePrefix = pieces[1];\n+                    String bdioName = pieces[2];\n+\n+                    File testFolder = new File(batteryResources, resourcePrefix);\n+                    File bdioFolder = new File(testFolder, \"bdio\");\n+                    File bdioFile = new File(bdioFolder, bdioName);\n+                    //println(bdioFile.toString() + \":\" + bdioFile.exists())\n+\n+                    File actualTestFolder = new File(batteryBuild, testName);\n+                    File actualBdioFolder = new File(actualTestFolder, \"bdio\");\n+                    File actualBdioFile = new File(actualBdioFolder, bdioName);\n+\n+                    //println(actualBdioFile.toString() + \":\" + actualBdioFile.exists())\n+\n+                    JsonArray json = JsonParser.parseString(new String(Files.readAllBytes(actualBdioFile.toPath()))).getAsJsonArray();\n+                    JsonObject headerElement = json.get(0).getAsJsonObject();\n+                    headerElement.remove(\"@id\");\n+                    headerElement.remove(\"creationInfo\");\n+                    Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\").setPrettyPrinting().create();\n+                    FileWriter fileWriter = new FileWriter(bdioFile);\n+                    fileWriter.write(gson.toJson(json));\n+\n+                    System.out.println(\"COPIED FROM: $actualBdioFile\");\n+                    System.out.println(\"COPIED TO  : $bdioFile\");\n+                }\n+            }\n+        }\n+    }\n+\n+    private String extractChunk(String line) {\n+        String chunk = line.split(\"\\\\*\\\\*\\\\*BDIO BATTERY TEST\\\\|\")[1];", "originalCommit": "d830375949847c1552931ee8061a59fa17bf12de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM5MDU0Mg==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/202#discussion_r450390542", "bodyText": "If we are just trying to escape for regex, could we use Pattern.quote() instead?", "author": "taikuukaits", "createdAt": "2020-07-06T18:00:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1ODQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8b10d793e6a84d4300d789e85b5b261d659d2b50", "chunk": "diff --git a/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java b/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\nindex 857dc3f4c..e1a892503 100644\n--- a/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\n+++ b/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\n\n@@ -26,7 +26,7 @@ import java.io.File;\n import java.io.FileWriter;\n import java.io.IOException;\n import java.nio.file.Files;\n-import java.nio.file.Paths;\n+import java.util.regex.Pattern;\n \n import org.gradle.api.DefaultTask;\n import org.gradle.api.tasks.TaskAction;\n"}}, {"oid": "8b10d793e6a84d4300d789e85b5b261d659d2b50", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/8b10d793e6a84d4300d789e85b5b261d659d2b50", "message": "fix: Using Pattern.quote in string splicing", "committedDate": "2020-07-06T21:10:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkyOTc2MA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/202#discussion_r450929760", "bodyText": "Not a huge deal, but creating Gson instances are expensive. Having the instantiation be nested within two for loops isn't great. Since this is only for the updateBattery task I'm not too concerned.", "author": "JakeMathews", "createdAt": "2020-07-07T14:56:59Z", "path": "buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * buildSrc\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.battery;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.regex.Pattern;\n+\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+// Occasionally changes to BDIO or other integral systems require mass changes to the battery. This facilitates that work.\n+public class UpdateBatteryJava extends DefaultTask {\n+\n+    @TaskAction\n+    public void updateBattery() throws IOException {\n+        File batteryBuild = new File(\"build/battery/\");\n+        //battery.listFiles()\n+        File batteryResources = new File(\"src/test/resources/battery/\");\n+\n+        File batteryReports = new File(\"build/reports/tests/testBattery/classes/\");\n+        for(File report : batteryReports.listFiles()) {\n+            for (String line : Files.readAllLines(report.toPath())) {\n+                if (line.contains(\"***BDIO BATTERY TEST|\")) {\n+                    String chunk = extractChunk(line);\n+                    String[] pieces = chunk.split(\"\\\\|\");\n+                    String testName = pieces[0];\n+                    String resourcePrefix = pieces[1];\n+                    String bdioName = pieces[2];\n+\n+                    File testFolder = new File(batteryResources, resourcePrefix);\n+                    File bdioFolder = new File(testFolder, \"bdio\");\n+                    File bdioFile = new File(bdioFolder, bdioName);\n+                    //println(bdioFile.toString() + \":\" + bdioFile.exists())\n+\n+                    File actualTestFolder = new File(batteryBuild, testName);\n+                    File actualBdioFolder = new File(actualTestFolder, \"bdio\");\n+                    File actualBdioFile = new File(actualBdioFolder, bdioName);\n+\n+                    //println(actualBdioFile.toString() + \":\" + actualBdioFile.exists())\n+\n+                    JsonArray json = JsonParser.parseString(new String(Files.readAllBytes(actualBdioFile.toPath()))).getAsJsonArray();\n+                    JsonObject headerElement = json.get(0).getAsJsonObject();\n+                    headerElement.remove(\"@id\");\n+                    headerElement.remove(\"creationInfo\");\n+                    Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\").setPrettyPrinting().create();", "originalCommit": "8b10d793e6a84d4300d789e85b5b261d659d2b50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "529d2381d548ab75d8b082733d0ac367357de974", "chunk": "diff --git a/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java b/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\nindex e1a892503..887838d64 100644\n--- a/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\n+++ b/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\n\n@@ -40,13 +40,14 @@ import com.google.gson.JsonParser;\n // Occasionally changes to BDIO or other integral systems require mass changes to the battery. This facilitates that work.\n public class UpdateBatteryJava extends DefaultTask {\n \n+    Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\").setPrettyPrinting().create();\n+\n     @TaskAction\n     public void updateBattery() throws IOException {\n         File batteryBuild = new File(\"build/battery/\");\n-        //battery.listFiles()\n         File batteryResources = new File(\"src/test/resources/battery/\");\n-\n         File batteryReports = new File(\"build/reports/tests/testBattery/classes/\");\n+\n         for(File report : batteryReports.listFiles()) {\n             for (String line : Files.readAllLines(report.toPath())) {\n                 if (line.contains(\"***BDIO BATTERY TEST|\")) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMDUwNg==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/202#discussion_r450930506", "bodyText": "I'd remove these commented out lines since it seems like they were just used for debugging.", "author": "JakeMathews", "createdAt": "2020-07-07T14:57:59Z", "path": "buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * buildSrc\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.battery;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.regex.Pattern;\n+\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+// Occasionally changes to BDIO or other integral systems require mass changes to the battery. This facilitates that work.\n+public class UpdateBatteryJava extends DefaultTask {\n+\n+    @TaskAction\n+    public void updateBattery() throws IOException {\n+        File batteryBuild = new File(\"build/battery/\");\n+        //battery.listFiles()\n+        File batteryResources = new File(\"src/test/resources/battery/\");\n+\n+        File batteryReports = new File(\"build/reports/tests/testBattery/classes/\");\n+        for(File report : batteryReports.listFiles()) {\n+            for (String line : Files.readAllLines(report.toPath())) {\n+                if (line.contains(\"***BDIO BATTERY TEST|\")) {\n+                    String chunk = extractChunk(line);\n+                    String[] pieces = chunk.split(\"\\\\|\");\n+                    String testName = pieces[0];\n+                    String resourcePrefix = pieces[1];\n+                    String bdioName = pieces[2];\n+\n+                    File testFolder = new File(batteryResources, resourcePrefix);\n+                    File bdioFolder = new File(testFolder, \"bdio\");\n+                    File bdioFile = new File(bdioFolder, bdioName);\n+                    //println(bdioFile.toString() + \":\" + bdioFile.exists())", "originalCommit": "8b10d793e6a84d4300d789e85b5b261d659d2b50", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "529d2381d548ab75d8b082733d0ac367357de974", "chunk": "diff --git a/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java b/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\nindex e1a892503..887838d64 100644\n--- a/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\n+++ b/buildSrc/src/main/java/com/synopsys/integration/detect/battery/UpdateBatteryJava.java\n\n@@ -40,13 +40,14 @@ import com.google.gson.JsonParser;\n // Occasionally changes to BDIO or other integral systems require mass changes to the battery. This facilitates that work.\n public class UpdateBatteryJava extends DefaultTask {\n \n+    Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\").setPrettyPrinting().create();\n+\n     @TaskAction\n     public void updateBattery() throws IOException {\n         File batteryBuild = new File(\"build/battery/\");\n-        //battery.listFiles()\n         File batteryResources = new File(\"src/test/resources/battery/\");\n-\n         File batteryReports = new File(\"build/reports/tests/testBattery/classes/\");\n+\n         for(File report : batteryReports.listFiles()) {\n             for (String line : Files.readAllLines(report.toPath())) {\n                 if (line.contains(\"***BDIO BATTERY TEST|\")) {\n"}}, {"oid": "529d2381d548ab75d8b082733d0ac367357de974", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/529d2381d548ab75d8b082733d0ac367357de974", "message": "refactor: Deleted comments, moved Gson creation to outside of loop", "committedDate": "2020-07-07T15:03:24Z", "type": "commit"}, {"oid": "0d69097ae3cdd6a525b84c11b45ad06778ed17b0", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0d69097ae3cdd6a525b84c11b45ad06778ed17b0", "message": "feat: Deleted kotlin UpdateBatteryTask, replaced usages with java version", "committedDate": "2020-07-07T19:46:01Z", "type": "commit"}]}