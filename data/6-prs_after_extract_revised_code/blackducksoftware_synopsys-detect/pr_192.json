{"pr_number": 192, "pr_title": "Diagnostic property", "pr_createdAt": "2020-06-16T18:54:53Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/192", "timeline": [{"oid": "0e2928d03403df722702c769b026c55aeb3cfbcd", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0e2928d03403df722702c769b026c55aeb3cfbcd", "message": "feat(diagnostic): Added diagnostic property. (Completes IDETECT-2024)", "committedDate": "2020-06-16T17:46:41Z", "type": "commit"}, {"oid": "6efedbe4a379a1ed005448a7edb09a4e1069ea63", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6efedbe4a379a1ed005448a7edb09a4e1069ea63", "message": "doc(release-notes): Added release note for diagnostics property.", "committedDate": "2020-06-16T18:13:42Z", "type": "commit"}, {"oid": "0aaedb5495dfa7f844cd79af64f7b6773da0995a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0aaedb5495dfa7f844cd79af64f7b6773da0995a", "message": "style(license): Applied license headers.", "committedDate": "2020-06-16T18:14:04Z", "type": "commit"}, {"oid": "937a49492ea0e9e5edd71e444762a80658e75d36", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/937a49492ea0e9e5edd71e444762a80658e75d36", "message": "doc(diagnostic): Fixed list.", "committedDate": "2020-06-16T18:25:59Z", "type": "commit"}, {"oid": "a8c98ef399c8db67fa89c44330e401d0fda2d42f", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/a8c98ef399c8db67fa89c44330e401d0fda2d42f", "message": "doc(diagnostic): Fixed list.", "committedDate": "2020-06-16T18:43:24Z", "type": "commit"}, {"oid": "f4129623ef5ae0f3cbd848f0483d7ea9028ab305", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f4129623ef5ae0f3cbd848f0483d7ea9028ab305", "message": "test(diagnostics): Added test for DiagnosticsDecider.", "committedDate": "2020-06-16T18:54:35Z", "type": "commit"}, {"oid": "67e56e85955468d69f38204a716a218ddf850779", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/67e56e85955468d69f38204a716a218ddf850779", "message": "refactor: Fixed formatting of wrapped constructor parameters.", "committedDate": "2020-06-16T18:58:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTQwNA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#discussion_r441851404", "bodyText": "If this is all the method does, why even have this in a method?", "author": "taikuukaits", "createdAt": "2020-06-17T21:43:46Z", "path": "src/main/java/com/synopsys/integration/detect/lifecycle/boot/DetectBoot.java", "diffHunk": "@@ -387,15 +391,14 @@ private DetectArgumentState parseDetectArgumentState(String[] sourceArgs) {\n         return detectArgumentState;\n     }\n \n-    private Optional<DiagnosticSystem> createDiagnostics(\n-        PropertyConfiguration propertyConfiguration, DetectRun detectRun, DetectInfo detectInfo, DetectArgumentState detectArgumentState, EventSystem eventSystem, DirectoryManager directoryManager) {\n-        if (detectArgumentState.isDiagnostic() || detectArgumentState.isDiagnosticExtended()) {\n-            boolean extendedMode = detectArgumentState.isDiagnosticExtended();\n-            DiagnosticSystem diagnosticSystem = new DiagnosticSystem(extendedMode, propertyConfiguration, detectRun, detectInfo, directoryManager, eventSystem);\n-            return Optional.of(diagnosticSystem);\n-        } else {\n-            return Optional.empty();\n+    private Optional<DiagnosticSystem> createDiagnostics(PropertyConfiguration propertyConfiguration, DetectRun detectRun, DetectInfo detectInfo, DiagnosticsDecider diagnosticsDecider, EventSystem eventSystem,\n+        DirectoryManager directoryManager) {\n+        DiagnosticSystem diagnosticSystem = null;\n+        if (diagnosticsDecider.isConfiguredForDiagnostic()) {\n+            diagnosticSystem = new DiagnosticSystem(diagnosticsDecider.isDiagnosticExtended(), propertyConfiguration, detectRun, detectInfo, directoryManager, eventSystem);", "originalCommit": "67e56e85955468d69f38204a716a218ddf850779", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fa1780830156944e48dd738901bc2e2cd981dc7a", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/lifecycle/boot/DetectBoot.java b/src/main/java/com/synopsys/integration/detect/lifecycle/boot/DetectBoot.java\nindex d41e76555..32e1d20c6 100644\n--- a/src/main/java/com/synopsys/integration/detect/lifecycle/boot/DetectBoot.java\n+++ b/src/main/java/com/synopsys/integration/detect/lifecycle/boot/DetectBoot.java\n\n@@ -394,9 +397,6 @@ public class DetectBoot {\n     private Optional<DiagnosticSystem> createDiagnostics(PropertyConfiguration propertyConfiguration, DetectRun detectRun, DetectInfo detectInfo, DiagnosticsDecider diagnosticsDecider, EventSystem eventSystem,\n         DirectoryManager directoryManager) {\n         DiagnosticSystem diagnosticSystem = null;\n-        if (diagnosticsDecider.isConfiguredForDiagnostic()) {\n-            diagnosticSystem = new DiagnosticSystem(diagnosticsDecider.isDiagnosticExtended(), propertyConfiguration, detectRun, detectInfo, directoryManager, eventSystem);\n-        }\n \n         return Optional.ofNullable(diagnosticSystem);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTkxMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#discussion_r441851911", "bodyText": "Did you consider having a single method that returned a result object?", "author": "taikuukaits", "createdAt": "2020-06-17T21:45:04Z", "path": "src/main/java/com/synopsys/integration/detect/workflow/diagnostic/DiagnosticsDecider.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.workflow.diagnostic;\n+\n+import com.synopsys.integration.configuration.config.PropertyConfiguration;\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+import com.synopsys.integration.detect.help.DetectArgumentState;\n+\n+public class DiagnosticsDecider {\n+    private final DetectArgumentState detectArgumentState;\n+    private final PropertyConfiguration propertyConfiguration;\n+\n+    public DiagnosticsDecider(DetectArgumentState detectArgumentState, PropertyConfiguration propertyConfiguration) {\n+        this.detectArgumentState = detectArgumentState;\n+        this.propertyConfiguration = propertyConfiguration;\n+    }\n+\n+    public boolean isDiagnostic() {", "originalCommit": "67e56e85955468d69f38204a716a218ddf850779", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3MjA0NA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/192#discussion_r443772044", "bodyText": "I've made DiagnosticsDecider return a DiagnosticsDecision.", "author": "JakeMathews", "createdAt": "2020-06-22T19:15:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTkxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "fa1780830156944e48dd738901bc2e2cd981dc7a", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/workflow/diagnostic/DiagnosticsDecider.java b/src/main/java/com/synopsys/integration/detect/workflow/diagnostic/DiagnosticsDecider.java\nindex 8e146e439..2d26ed967 100644\n--- a/src/main/java/com/synopsys/integration/detect/workflow/diagnostic/DiagnosticsDecider.java\n+++ b/src/main/java/com/synopsys/integration/detect/workflow/diagnostic/DiagnosticsDecider.java\n\n@@ -35,15 +35,11 @@ public class DiagnosticsDecider {\n         this.propertyConfiguration = propertyConfiguration;\n     }\n \n-    public boolean isDiagnostic() {\n-        return detectArgumentState.isDiagnostic() || propertyConfiguration.getValueOrDefault(DetectProperties.Companion.getDETECT_DIAGNOSTIC());\n-    }\n-\n-    public boolean isDiagnosticExtended() {\n-        return detectArgumentState.isDiagnosticExtended() || propertyConfiguration.getValueOrDefault(DetectProperties.Companion.getDETECT_DIAGNOSTIC_EXTENDED());\n-    }\n+    public DiagnosticsDecision decide() {\n+        boolean diagnostic = detectArgumentState.isDiagnostic() || propertyConfiguration.getValueOrDefault(DetectProperties.Companion.getDETECT_DIAGNOSTIC());\n+        boolean diagnosticExtended = detectArgumentState.isDiagnosticExtended() || propertyConfiguration.getValueOrDefault(DetectProperties.Companion.getDETECT_DIAGNOSTIC_EXTENDED());\n+        boolean configuredForDiagnostic = diagnostic || diagnosticExtended;\n \n-    public boolean isConfiguredForDiagnostic() {\n-        return isDiagnostic() || isDiagnosticExtended();\n+        return new DiagnosticsDecision(diagnostic, diagnosticExtended, configuredForDiagnostic);\n     }\n }\n"}}, {"oid": "fa1780830156944e48dd738901bc2e2cd981dc7a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/fa1780830156944e48dd738901bc2e2cd981dc7a", "message": "refactor(diagnostic): DiagnosticsDecider now produces a DiagnosticsDecision.", "committedDate": "2020-06-22T19:12:35Z", "type": "commit"}, {"oid": "d8a3a9bf310ac0e1534b8b1295b9f3b377561315", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d8a3a9bf310ac0e1534b8b1295b9f3b377561315", "message": "test-fix(diagnostic): DiagnosticsDecider now produces a DiagnosticsDecision.", "committedDate": "2020-06-22T19:24:48Z", "type": "commit"}, {"oid": "301db5a954b66e1e90444f14eff139f5fc929dd5", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/301db5a954b66e1e90444f14eff139f5fc929dd5", "message": "doc(troubleshooting): Fixing list.", "committedDate": "2020-06-22T19:26:04Z", "type": "commit"}, {"oid": "89895e4d6be782a814f2f330c4318e3c83612525", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/89895e4d6be782a814f2f330c4318e3c83612525", "message": "style(license): Adding copyright headers.", "committedDate": "2020-06-22T19:27:57Z", "type": "commit"}]}