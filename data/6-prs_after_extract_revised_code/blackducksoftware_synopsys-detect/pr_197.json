{"pr_number": 197, "pr_title": "Detect properties java", "pr_createdAt": "2020-06-26T16:49:23Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/197", "timeline": [{"oid": "c0a04809ce8dfac3dbbe33b9939a4d732956ee42", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/c0a04809ce8dfac3dbbe33b9939a4d732956ee42", "message": "feat: Created builder class for java properties", "committedDate": "2020-06-23T18:10:10Z", "type": "commit"}, {"oid": "b914d877e6bc04981ed341252f2919c990937f27", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b914d877e6bc04981ed341252f2919c990937f27", "message": "feat: Created functional interface PropertySetter", "committedDate": "2020-06-24T20:53:54Z", "type": "commit"}, {"oid": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "message": "feat: Created test to verify all properties accounted for in new file", "committedDate": "2020-06-26T16:46:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTk0Nw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446365947", "bodyText": "We are only using the Jetbrains annotations.", "author": "JakeMathews", "createdAt": "2020-06-26T19:17:32Z", "path": "configuration/src/main/java/com/synopsys/integration/configuration/property/PropertyBuilder.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.configuration.property;\n+\n+import java.util.List;\n+\n+import org.antlr.v4.runtime.misc.NotNull;\n+import org.jetbrains.annotations.Nullable;", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4NjE0Mw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446386143", "bodyText": "Also are you using any of these imports in this class?", "author": "JakeMathews", "createdAt": "2020-06-26T20:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "chunk": "diff --git a/configuration/src/main/java/com/synopsys/integration/configuration/property/PropertyBuilder.java b/configuration/src/main/java/com/synopsys/integration/configuration/property/PropertyBuilder.java\nindex 13b1de48b..4ad5ec756 100644\n--- a/configuration/src/main/java/com/synopsys/integration/configuration/property/PropertyBuilder.java\n+++ b/configuration/src/main/java/com/synopsys/integration/configuration/property/PropertyBuilder.java\n\n@@ -1,13 +1,5 @@\n package com.synopsys.integration.configuration.property;\n \n-import java.util.List;\n-\n-import org.antlr.v4.runtime.misc.NotNull;\n-import org.jetbrains.annotations.Nullable;\n-\n-import com.synopsys.integration.configuration.util.Category;\n-import com.synopsys.integration.configuration.util.Group;\n-\n public class PropertyBuilder<T extends Property> {\n \n     private T property;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2Nzc0MQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446367741", "bodyText": "I would look into using reflection or something to get all of the properties. How can we be sure it has all the properties?", "author": "JakeMathews", "createdAt": "2020-06-26T19:21:34Z", "path": "src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package com.synopsys.integration.detect.configuration;\n+\n+import static org.codehaus.groovy.runtime.DefaultGroovyMethods.collect;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Assert;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.synopsys.integration.configuration.property.Property;\n+\n+public class PropertyVerificationTest {\n+\n+    @Test\n+    public void verifyProperties() {\n+        Set<String> missing = new HashSet<>();\n+        List<String> kotlinNames = DetectProperties.Companion.getProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        List<String> javaNames = collectJavaProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        for (String propertyName : kotlinNames) {\n+            if (!javaNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+        for (String propertyName : javaNames) {\n+            if (!kotlinNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+\n+        Assertions.assertTrue(missing.isEmpty());\n+    }\n+\n+    private List<Property> collectJavaProperties() {\n+        List<Property> properties2 = new ArrayList<>();\n+        \n+            properties2.add(DetectPropertiesJava.BLACKDUCK_API_TOKEN);\n+            properties2.add(DetectPropertiesJava.BLACKDUCK_OFFLINE_MODE);\n+            properties2.add(DetectPropertiesJava.BLACKDUCK_PASSWORD);", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "chunk": "diff --git a/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java b/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java\nindex 8d989e8e0..04d1a481d 100644\n--- a/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java\n+++ b/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java\n\n@@ -1,275 +1,125 @@\n package com.synopsys.integration.detect.configuration;\n \n-import static org.codehaus.groovy.runtime.DefaultGroovyMethods.collect;\n-\n+import java.lang.reflect.Field;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.stream.Collectors;\n-\n-import org.junit.Assert;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n \n import com.synopsys.integration.configuration.property.Property;\n+import com.synopsys.integration.configuration.property.PropertyDeprecationInfo;\n+import com.synopsys.integration.configuration.property.PropertyGroupInfo;\n+import com.synopsys.integration.configuration.property.PropertyHelpInfo;\n+import com.synopsys.integration.configuration.util.Category;\n \n public class PropertyVerificationTest {\n \n     @Test\n-    public void verifyProperties() {\n+    public void verifyProperties() throws IllegalAccessException {\n         Set<String> missing = new HashSet<>();\n-        List<String> kotlinNames = DetectProperties.Companion.getProperties().stream()\n-                                       .map(Property::getName)\n-                                       .collect(Collectors.toList());\n+        List<Property> kotlinProperties = DetectProperties.Companion.getProperties();\n \n-        List<String> javaNames = collectJavaProperties().stream()\n-                                       .map(Property::getName)\n-                                       .collect(Collectors.toList());\n+        List<Property> javaProperties = collectJavaProperties();\n \n-        for (String propertyName : kotlinNames) {\n-            if (!javaNames.contains(propertyName)) {\n-                missing.add(propertyName);\n+        for (Property property : kotlinProperties) {\n+            if (!containsProperty(property, javaProperties)) {\n+                missing.add(property.getName());\n             }\n         }\n-        for (String propertyName : javaNames) {\n-            if (!kotlinNames.contains(propertyName)) {\n-                missing.add(propertyName);\n+        for (Property property : javaProperties) {\n+            if (!containsProperty(property, kotlinProperties)) {\n+                missing.add(property.getName());\n             }\n         }\n \n         Assertions.assertTrue(missing.isEmpty());\n     }\n \n-    private List<Property> collectJavaProperties() {\n-        List<Property> properties2 = new ArrayList<>();\n+    private boolean containsProperty(Property property, List<Property> propertyList) {\n+        for (Property current : propertyList) {\n+            if (current.getName().equals(property.getName())\n+                    && (current.getFromVersion().equals(property.getFromVersion()))\n+                    && (equalPropertyHelpInfo(current, property))\n+                    && (equalPropertyGroupInfo(current, property))\n+                    && (equalCategory(current, property))\n+                    && (equalPropertyDeprecationInfo(current, property)))\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private boolean equalPropertyHelpInfo(Property p1, Property p2) {\n+        PropertyHelpInfo info1 = p1.getPropertyHelpInfo();\n+        PropertyHelpInfo info2 = p2.getPropertyHelpInfo();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n+\n+        if (info1.getShortText().equals(info2.getShortText())) {\n+            return (info1.getLongText() == null && info2.getLongText() == null) || info1.getLongText().equals(info2.getLongText());\n+        }\n+        return false;\n+    }\n+\n+    private boolean equalPropertyGroupInfo(Property p1, Property p2) {\n+        PropertyGroupInfo info1 = p1.getPropertyGroupInfo();\n+        PropertyGroupInfo info2 = p2.getPropertyGroupInfo();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n         \n-            properties2.add(DetectPropertiesJava.BLACKDUCK_API_TOKEN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_OFFLINE_MODE);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_HOST);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_IGNORED_HOSTS);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_NTLM_DOMAIN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_NTLM_WORKSTATION);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_PORT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_USERNAME);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_TRUST_CERT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_URL);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_USERNAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BASH_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_CQUERY_OPTIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_DEPENDENCY_RULE);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_TARGET);\n-            properties2.add(DetectPropertiesJava.DETECT_BDIO2_ENABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_BDIO_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BINARY_SCAN_FILE);\n-            properties2.add(DetectPropertiesJava.DETECT_BINARY_SCAN_FILE_NAME_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_BUILD_ENV_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_PACKAGE_NAMES);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_SOURCE_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_COPYRIGHT_SEARCH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_EXCLUSION_NAME_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_EXCLUSION_PATTERN_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_EXCLUSION_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_HOST_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_INDIVIDUAL_FILE_MATCHING);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_LICENSE_SEARCH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_MEMORY);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_OFFLINE_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_SNIPPET_MATCHING);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_UPLOAD_SOURCE_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_AGGREGATE_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_AGGREGATE_REMEDIATION_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_BUILDLESS);\n-            properties2.add(DetectPropertiesJava.DETECT_CLEANUP);\n-            properties2.add(DetectPropertiesJava.DETECT_CLONE_PROJECT_VERSION_LATEST);\n-            properties2.add(DetectPropertiesJava.DETECT_CLONE_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_CODE_LOCATION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_CONDA_ENVIRONMENT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_CONDA_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_CPAN_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_CPANM_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_CUSTOM_FIELDS_PROJECT);\n-            properties2.add(DetectPropertiesJava.DETECT_CUSTOM_FIELDS_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_DEFAULT_PROJECT_VERSION_SCHEME);\n-            properties2.add(DetectPropertiesJava.DETECT_DEFAULT_PROJECT_VERSION_TEXT);\n-            properties2.add(DetectPropertiesJava.DETECT_DEFAULT_PROJECT_VERSION_TIMEFORMAT);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_CONTINUE);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_DEFAULTS);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_FILES);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_IMAGE);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_IMAGE_ID);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_INSPECTOR_AIR_GAP_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_INSPECTOR_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_INSPECTOR_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_PATH_REQUIRED);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_PLATFORM_TOP_LAYER_ID);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_TAR);\n-            properties2.add(DetectPropertiesJava.DETECT_DOTNET_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_EXCLUDED_DETECTOR_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_FORCE_SUCCESS);\n-            properties2.add(DetectPropertiesJava.DETECT_GIT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_GO_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_BUILD_COMMAND);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_EXCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_EXCLUDED_PROJECTS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INCLUDED_PROJECTS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INSPECTOR_AIR_GAP_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INSPECTOR_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_HEX_REBAR3_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_IGNORE_CONNECTION_FAILURES);\n-            properties2.add(DetectPropertiesJava.DETECT_INCLUDED_DETECTOR_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_JAVA_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_LERNA_INCLUDE_PRIVATE);\n-            properties2.add(DetectPropertiesJava.DETECT_LERNA_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_BUILD_COMMAND);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_EXCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_EXCLUDED_SCOPES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_INCLUDE_PLUGINS);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_INCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_INCLUDED_SCOPES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NOTICES_REPORT);\n-            properties2.add(DetectPropertiesJava.DETECT_NOTICES_REPORT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NPM_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_NPM_INCLUDE_DEV_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_NPM_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_CONFIG_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_EXCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_IGNORE_FAILURE);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INSPECTOR_AIR_GAP_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INSPECTOR_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_PACKAGES_REPO_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PACKAGIST_INCLUDE_DEV_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_PARALLEL_PROCESSORS);\n-            properties2.add(DetectPropertiesJava.DETECT_PARENT_PROJECT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PARENT_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PEAR_ONLY_REQUIRED_DEPS);\n-            properties2.add(DetectPropertiesJava.DETECT_PEAR_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_ONLY_PROJECT_TREE);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_PROJECT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_REQUIREMENTS_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PIPENV_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_POLICY_CHECK_FAIL_ON_SEVERITIES);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_APPLICATION_ID);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CLONE_CATEGORIES);\n-            properties2.add(DetectPropertiesJava.DETECT_CODE_LOCATION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CODELOCATION_PREFIX);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CODELOCATION_SUFFIX);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CODELOCATION_UNMAP);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_DESCRIPTION);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_DETECTOR);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_LEVEL_ADJUSTMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_TAGS);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_TIER);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_TOOL);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_USER_GROUPS);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_DISTRIBUTION);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_NICKNAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_NOTES);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_PHASE);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_UPDATE);\n-            properties2.add(DetectPropertiesJava.DETECT_PYTHON_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PYTHON_PYTHON3);\n-            properties2.add(DetectPropertiesJava.DETECT_REPORT_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.DETECT_REQUIRED_DETECTOR_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_RESOLVE_TILDE_IN_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_RISK_REPORT_PDF);\n-            properties2.add(DetectPropertiesJava.DETECT_RISK_REPORT_PDF_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_RUBY_INCLUDE_DEV_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_RUBY_INCLUDE_RUNTIME_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_SBT_EXCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_SBT_INCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_SBT_REPORT_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_SCAN_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_SOURCE_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_SWIFT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_TEST_CONNECTION);\n-            properties2.add(DetectPropertiesJava.DETECT_TOOLS);\n-            properties2.add(DetectPropertiesJava.DETECT_TOOLS_EXCLUDED);\n-            properties2.add(DetectPropertiesJava.DETECT_TOOLS_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_WAIT_FOR_RESULTS);\n-            properties2.add(DetectPropertiesJava.DETECT_YARN_PROD_ONLY);\n-            properties2.add(DetectPropertiesJava.DOCKER_PASSTHROUGH);\n-            properties2.add(DetectPropertiesJava.LOGGING_LEVEL_COM_SYNOPSYS_INTEGRATION);\n-            properties2.add(DetectPropertiesJava.LOGGING_LEVEL_DETECT);\n-            properties2.add(DetectPropertiesJava.PHONEHOME_PASSTHROUGH);\n-            properties2.add(DetectPropertiesJava.DETECT_API_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_API_TOKEN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_OFFLINE_MODE);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_HOST);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_IGNORED_HOSTS);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_NTLM_DOMAIN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_NTLM_WORKSTATION);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_PORT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_USERNAME);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_TRUST_CERT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_URL);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_USERNAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_REFERENCE_IMPL);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DISABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DISABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_SNIPPET_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_CONTINUE);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_EXCLUSION);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_EXCLUSION_DEFAULTS);\n-            properties2.add(DetectPropertiesJava.DETECT_EXCLUDED_BOM_TOOL_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_INCLUDED_BOM_TOOL_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_REQUIRED_BOM_TOOL_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_PARALLEL_PROCESSORS);\n-            properties2.add(DetectPropertiesJava.DETECT_DISABLE_WITHOUT_BLACKDUCK);\n-            properties2.add(DetectPropertiesJava.DETECT_DISABLE_WITHOUT_HUB);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INSPECTOR_REPOSITORY_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_DISABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_DRY_RUN);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_EXCLUSION_NAME_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_EXCLUSION_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_HOST_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_MEMORY);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_OFFLINE_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_PARALLEL_PROCESSORS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_SNIPPET_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_SCOPE);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INSPECTOR_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_BOM_TOOL);\n-            properties2.add(DetectPropertiesJava.DETECT_SUPPRESS_CONFIGURATION_OUTPUT);\n-            properties2.add(DetectPropertiesJava.DETECT_SUPPRESS_RESULTS_OUTPUT);\n-            properties2.add(DetectPropertiesJava.DETECT_SWIP_ENABLED);\n-            properties2.add(DetectPropertiesJava.LOGGING_LEVEL_COM_BLACKDUCKSOFTWARE_INTEGRATION);\n-            properties2.add(DetectPropertiesJava.POLARIS_ACCESS_TOKEN);\n-            properties2.add(DetectPropertiesJava.POLARIS_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.POLARIS_COMMAND);\n-            properties2.add(DetectPropertiesJava.POLARIS_URL);\n+        return info1.getPrimaryGroup().equals(info2.getPrimaryGroup()) &&\n+                                                                      info1.getAdditionalGroups().containsAll(info2.getAdditionalGroups()) &&\n+                                                                      info2.getAdditionalGroups().containsAll(info1.getAdditionalGroups());\n+    }\n \n-        return properties2;\n+    private boolean equalCategory(Property p1, Property p2) {\n+        Category info1 = p1.getCategory();\n+        Category info2 = p2.getCategory();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n+        return info1.getName().equals(info2.getName());\n+    }\n+\n+    private boolean equalPropertyDeprecationInfo(Property p1, Property p2) {\n+        PropertyDeprecationInfo info1 = p1.getPropertyDeprecationInfo();\n+        PropertyDeprecationInfo info2 = p2.getPropertyDeprecationInfo();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n+\n+        return info1.getDescription().equals(info2.getDescription()) &&\n+            info1.getDeprecationText().equals(info2.getDeprecationText()) &&\n+            info1.getFailInVersion().getIntValue().equals(info2.getFailInVersion().getIntValue()) &&\n+            info1.getRemoveInVersion().getIntValue().equals(info2.getRemoveInVersion().getIntValue());\n+    }\n+\n+    private List<Property> collectJavaProperties() throws IllegalAccessException {\n+        List<Property> properties = new ArrayList<>();\n+        Field[] allFields = DetectPropertiesJava.class.getDeclaredFields();\n+        for (Field field : allFields) {\n+            if (!field.getType().equals(String.class)) {\n+                Object property = field.get(Property.class);\n+                properties.add((Property) property);\n+            }\n+        }\n+        return properties;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2ODE5NA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446368194", "bodyText": "We need a lot more verifications then just property names. Everything attached to the property should be checked.", "author": "JakeMathews", "createdAt": "2020-06-26T19:22:33Z", "path": "src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package com.synopsys.integration.detect.configuration;\n+\n+import static org.codehaus.groovy.runtime.DefaultGroovyMethods.collect;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Assert;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import com.synopsys.integration.configuration.property.Property;\n+\n+public class PropertyVerificationTest {\n+\n+    @Test\n+    public void verifyProperties() {\n+        Set<String> missing = new HashSet<>();\n+        List<String> kotlinNames = DetectProperties.Companion.getProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        List<String> javaNames = collectJavaProperties().stream()\n+                                       .map(Property::getName)\n+                                       .collect(Collectors.toList());\n+\n+        for (String propertyName : kotlinNames) {\n+            if (!javaNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+        for (String propertyName : javaNames) {\n+            if (!kotlinNames.contains(propertyName)) {\n+                missing.add(propertyName);\n+            }\n+        }\n+\n+        Assertions.assertTrue(missing.isEmpty());", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM4ODUxMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446388511", "bodyText": "I recommend you get all the properties through reflection, and iterate over them, then check against the values method in DetectProperties.kt. You will have to make it public for testing.", "author": "JakeMathews", "createdAt": "2020-06-26T20:12:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2ODE5NA=="}], "type": "inlineReview", "revised_code": {"commit": "4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "chunk": "diff --git a/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java b/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java\nindex 8d989e8e0..04d1a481d 100644\n--- a/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java\n+++ b/src/test/java/com/synopsys/integration/detect/configuration/PropertyVerificationTest.java\n\n@@ -1,275 +1,125 @@\n package com.synopsys.integration.detect.configuration;\n \n-import static org.codehaus.groovy.runtime.DefaultGroovyMethods.collect;\n-\n+import java.lang.reflect.Field;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.stream.Collectors;\n-\n-import org.junit.Assert;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n \n import com.synopsys.integration.configuration.property.Property;\n+import com.synopsys.integration.configuration.property.PropertyDeprecationInfo;\n+import com.synopsys.integration.configuration.property.PropertyGroupInfo;\n+import com.synopsys.integration.configuration.property.PropertyHelpInfo;\n+import com.synopsys.integration.configuration.util.Category;\n \n public class PropertyVerificationTest {\n \n     @Test\n-    public void verifyProperties() {\n+    public void verifyProperties() throws IllegalAccessException {\n         Set<String> missing = new HashSet<>();\n-        List<String> kotlinNames = DetectProperties.Companion.getProperties().stream()\n-                                       .map(Property::getName)\n-                                       .collect(Collectors.toList());\n+        List<Property> kotlinProperties = DetectProperties.Companion.getProperties();\n \n-        List<String> javaNames = collectJavaProperties().stream()\n-                                       .map(Property::getName)\n-                                       .collect(Collectors.toList());\n+        List<Property> javaProperties = collectJavaProperties();\n \n-        for (String propertyName : kotlinNames) {\n-            if (!javaNames.contains(propertyName)) {\n-                missing.add(propertyName);\n+        for (Property property : kotlinProperties) {\n+            if (!containsProperty(property, javaProperties)) {\n+                missing.add(property.getName());\n             }\n         }\n-        for (String propertyName : javaNames) {\n-            if (!kotlinNames.contains(propertyName)) {\n-                missing.add(propertyName);\n+        for (Property property : javaProperties) {\n+            if (!containsProperty(property, kotlinProperties)) {\n+                missing.add(property.getName());\n             }\n         }\n \n         Assertions.assertTrue(missing.isEmpty());\n     }\n \n-    private List<Property> collectJavaProperties() {\n-        List<Property> properties2 = new ArrayList<>();\n+    private boolean containsProperty(Property property, List<Property> propertyList) {\n+        for (Property current : propertyList) {\n+            if (current.getName().equals(property.getName())\n+                    && (current.getFromVersion().equals(property.getFromVersion()))\n+                    && (equalPropertyHelpInfo(current, property))\n+                    && (equalPropertyGroupInfo(current, property))\n+                    && (equalCategory(current, property))\n+                    && (equalPropertyDeprecationInfo(current, property)))\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private boolean equalPropertyHelpInfo(Property p1, Property p2) {\n+        PropertyHelpInfo info1 = p1.getPropertyHelpInfo();\n+        PropertyHelpInfo info2 = p2.getPropertyHelpInfo();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n+\n+        if (info1.getShortText().equals(info2.getShortText())) {\n+            return (info1.getLongText() == null && info2.getLongText() == null) || info1.getLongText().equals(info2.getLongText());\n+        }\n+        return false;\n+    }\n+\n+    private boolean equalPropertyGroupInfo(Property p1, Property p2) {\n+        PropertyGroupInfo info1 = p1.getPropertyGroupInfo();\n+        PropertyGroupInfo info2 = p2.getPropertyGroupInfo();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n         \n-            properties2.add(DetectPropertiesJava.BLACKDUCK_API_TOKEN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_OFFLINE_MODE);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_HOST);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_IGNORED_HOSTS);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_NTLM_DOMAIN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_NTLM_WORKSTATION);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_PORT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_PROXY_USERNAME);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_TRUST_CERT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_URL);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_USERNAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BASH_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_CQUERY_OPTIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_DEPENDENCY_RULE);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BAZEL_TARGET);\n-            properties2.add(DetectPropertiesJava.DETECT_BDIO2_ENABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_BDIO_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BINARY_SCAN_FILE);\n-            properties2.add(DetectPropertiesJava.DETECT_BINARY_SCAN_FILE_NAME_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_BUILD_ENV_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_PACKAGE_NAMES);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_SOURCE_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_COPYRIGHT_SEARCH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_EXCLUSION_NAME_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_EXCLUSION_PATTERN_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_EXCLUSION_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_HOST_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_INDIVIDUAL_FILE_MATCHING);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_LICENSE_SEARCH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_MEMORY);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_OFFLINE_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_SNIPPET_MATCHING);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_UPLOAD_SOURCE_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_AGGREGATE_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_AGGREGATE_REMEDIATION_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_BUILDLESS);\n-            properties2.add(DetectPropertiesJava.DETECT_CLEANUP);\n-            properties2.add(DetectPropertiesJava.DETECT_CLONE_PROJECT_VERSION_LATEST);\n-            properties2.add(DetectPropertiesJava.DETECT_CLONE_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_CODE_LOCATION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_CONDA_ENVIRONMENT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_CONDA_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_CPAN_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_CPANM_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_CUSTOM_FIELDS_PROJECT);\n-            properties2.add(DetectPropertiesJava.DETECT_CUSTOM_FIELDS_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_DEFAULT_PROJECT_VERSION_SCHEME);\n-            properties2.add(DetectPropertiesJava.DETECT_DEFAULT_PROJECT_VERSION_TEXT);\n-            properties2.add(DetectPropertiesJava.DETECT_DEFAULT_PROJECT_VERSION_TIMEFORMAT);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_CONTINUE);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_DEFAULTS);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_FILES);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_IMAGE);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_IMAGE_ID);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_INSPECTOR_AIR_GAP_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_INSPECTOR_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_INSPECTOR_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_PATH_REQUIRED);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_PLATFORM_TOP_LAYER_ID);\n-            properties2.add(DetectPropertiesJava.DETECT_DOCKER_TAR);\n-            properties2.add(DetectPropertiesJava.DETECT_DOTNET_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_EXCLUDED_DETECTOR_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_FORCE_SUCCESS);\n-            properties2.add(DetectPropertiesJava.DETECT_GIT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_GO_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_BUILD_COMMAND);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_EXCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_EXCLUDED_PROJECTS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INCLUDED_PROJECTS);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INSPECTOR_AIR_GAP_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INSPECTOR_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_HEX_REBAR3_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_DETECTOR_SEARCH_EXCLUSION_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_IGNORE_CONNECTION_FAILURES);\n-            properties2.add(DetectPropertiesJava.DETECT_INCLUDED_DETECTOR_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_JAVA_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_LERNA_INCLUDE_PRIVATE);\n-            properties2.add(DetectPropertiesJava.DETECT_LERNA_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_BUILD_COMMAND);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_EXCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_EXCLUDED_SCOPES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_INCLUDE_PLUGINS);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_INCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_INCLUDED_SCOPES);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NOTICES_REPORT);\n-            properties2.add(DetectPropertiesJava.DETECT_NOTICES_REPORT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NPM_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_NPM_INCLUDE_DEV_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_NPM_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_CONFIG_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_EXCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_IGNORE_FAILURE);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INCLUDED_MODULES);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INSPECTOR_AIR_GAP_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INSPECTOR_VERSION);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_PACKAGES_REPO_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PACKAGIST_INCLUDE_DEV_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_PARALLEL_PROCESSORS);\n-            properties2.add(DetectPropertiesJava.DETECT_PARENT_PROJECT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PARENT_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PEAR_ONLY_REQUIRED_DEPS);\n-            properties2.add(DetectPropertiesJava.DETECT_PEAR_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_ONLY_PROJECT_TREE);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_PROJECT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PIP_REQUIREMENTS_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PIPENV_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_POLICY_CHECK_FAIL_ON_SEVERITIES);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_APPLICATION_ID);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CLONE_CATEGORIES);\n-            properties2.add(DetectPropertiesJava.DETECT_CODE_LOCATION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CODELOCATION_PREFIX);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CODELOCATION_SUFFIX);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_CODELOCATION_UNMAP);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_DESCRIPTION);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_DETECTOR);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_LEVEL_ADJUSTMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_TAGS);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_TIER);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_TOOL);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_USER_GROUPS);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_DISTRIBUTION);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_NICKNAME);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_NOTES);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_PHASE);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_VERSION_UPDATE);\n-            properties2.add(DetectPropertiesJava.DETECT_PYTHON_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PYTHON_PYTHON3);\n-            properties2.add(DetectPropertiesJava.DETECT_REPORT_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.DETECT_REQUIRED_DETECTOR_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_RESOLVE_TILDE_IN_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_RISK_REPORT_PDF);\n-            properties2.add(DetectPropertiesJava.DETECT_RISK_REPORT_PDF_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_RUBY_INCLUDE_DEV_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_RUBY_INCLUDE_RUNTIME_DEPENDENCIES);\n-            properties2.add(DetectPropertiesJava.DETECT_SBT_EXCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_SBT_INCLUDED_CONFIGURATIONS);\n-            properties2.add(DetectPropertiesJava.DETECT_SBT_REPORT_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_SCAN_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_SOURCE_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_SWIFT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_TEST_CONNECTION);\n-            properties2.add(DetectPropertiesJava.DETECT_TOOLS);\n-            properties2.add(DetectPropertiesJava.DETECT_TOOLS_EXCLUDED);\n-            properties2.add(DetectPropertiesJava.DETECT_TOOLS_OUTPUT_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_WAIT_FOR_RESULTS);\n-            properties2.add(DetectPropertiesJava.DETECT_YARN_PROD_ONLY);\n-            properties2.add(DetectPropertiesJava.DOCKER_PASSTHROUGH);\n-            properties2.add(DetectPropertiesJava.LOGGING_LEVEL_COM_SYNOPSYS_INTEGRATION);\n-            properties2.add(DetectPropertiesJava.LOGGING_LEVEL_DETECT);\n-            properties2.add(DetectPropertiesJava.PHONEHOME_PASSTHROUGH);\n-            properties2.add(DetectPropertiesJava.DETECT_API_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_API_TOKEN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_OFFLINE_MODE);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_HOST);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_IGNORED_HOSTS);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_NTLM_DOMAIN);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_NTLM_WORKSTATION);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_PASSWORD);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_PORT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_PROXY_USERNAME);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_TIMEOUT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_TRUST_CERT);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_URL);\n-            properties2.add(DetectPropertiesJava.BLACKDUCK_HUB_USERNAME);\n-            properties2.add(DetectPropertiesJava.DETECT_BITBAKE_REFERENCE_IMPL);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DISABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DISABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_SNIPPET_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_CONTINUE);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_DEPTH);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_EXCLUSION);\n-            properties2.add(DetectPropertiesJava.DETECT_BOM_TOOL_SEARCH_EXCLUSION_DEFAULTS);\n-            properties2.add(DetectPropertiesJava.DETECT_EXCLUDED_BOM_TOOL_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_INCLUDED_BOM_TOOL_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_REQUIRED_BOM_TOOL_TYPES);\n-            properties2.add(DetectPropertiesJava.DETECT_BLACKDUCK_SIGNATURE_SCANNER_PARALLEL_PROCESSORS);\n-            properties2.add(DetectPropertiesJava.DETECT_DISABLE_WITHOUT_BLACKDUCK);\n-            properties2.add(DetectPropertiesJava.DETECT_DISABLE_WITHOUT_HUB);\n-            properties2.add(DetectPropertiesJava.DETECT_GRADLE_INSPECTOR_REPOSITORY_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_DISABLED);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_DRY_RUN);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_EXCLUSION_NAME_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_EXCLUSION_PATTERNS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_HOST_URL);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_MEMORY);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_OFFLINE_LOCAL_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_PARALLEL_PROCESSORS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_PATHS);\n-            properties2.add(DetectPropertiesJava.DETECT_HUB_SIGNATURE_SCANNER_SNIPPET_MODE);\n-            properties2.add(DetectPropertiesJava.DETECT_MAVEN_SCOPE);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_INSPECTOR_NAME);\n-            properties2.add(DetectPropertiesJava.DETECT_NUGET_PATH);\n-            properties2.add(DetectPropertiesJava.DETECT_PROJECT_BOM_TOOL);\n-            properties2.add(DetectPropertiesJava.DETECT_SUPPRESS_CONFIGURATION_OUTPUT);\n-            properties2.add(DetectPropertiesJava.DETECT_SUPPRESS_RESULTS_OUTPUT);\n-            properties2.add(DetectPropertiesJava.DETECT_SWIP_ENABLED);\n-            properties2.add(DetectPropertiesJava.LOGGING_LEVEL_COM_BLACKDUCKSOFTWARE_INTEGRATION);\n-            properties2.add(DetectPropertiesJava.POLARIS_ACCESS_TOKEN);\n-            properties2.add(DetectPropertiesJava.POLARIS_ARGUMENTS);\n-            properties2.add(DetectPropertiesJava.POLARIS_COMMAND);\n-            properties2.add(DetectPropertiesJava.POLARIS_URL);\n+        return info1.getPrimaryGroup().equals(info2.getPrimaryGroup()) &&\n+                                                                      info1.getAdditionalGroups().containsAll(info2.getAdditionalGroups()) &&\n+                                                                      info2.getAdditionalGroups().containsAll(info1.getAdditionalGroups());\n+    }\n \n-        return properties2;\n+    private boolean equalCategory(Property p1, Property p2) {\n+        Category info1 = p1.getCategory();\n+        Category info2 = p2.getCategory();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n+        return info1.getName().equals(info2.getName());\n+    }\n+\n+    private boolean equalPropertyDeprecationInfo(Property p1, Property p2) {\n+        PropertyDeprecationInfo info1 = p1.getPropertyDeprecationInfo();\n+        PropertyDeprecationInfo info2 = p2.getPropertyDeprecationInfo();\n+        if (info1 == null && info2 == null) {\n+            return true;\n+        }\n+        if (info1 == null || info2 == null) {\n+            return false;\n+        }\n+\n+        return info1.getDescription().equals(info2.getDescription()) &&\n+            info1.getDeprecationText().equals(info2.getDeprecationText()) &&\n+            info1.getFailInVersion().getIntValue().equals(info2.getFailInVersion().getIntValue()) &&\n+            info1.getRemoveInVersion().getIntValue().equals(info2.getRemoveInVersion().getIntValue());\n+    }\n+\n+    private List<Property> collectJavaProperties() throws IllegalAccessException {\n+        List<Property> properties = new ArrayList<>();\n+        Field[] allFields = DetectPropertiesJava.class.getDeclaredFields();\n+        for (Field field : allFields) {\n+            if (!field.getType().equals(String.class)) {\n+                Object property = field.get(Property.class);\n+                properties.add((Property) property);\n+            }\n+        }\n+        return properties;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2OTczMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/197#discussion_r446369731", "bodyText": "These should have the public final modifier on them as well.\npublic so we can access them through reflection (https://stackoverflow.com/a/14078769). This will help with the tests as well.\nfinal so the variables cannot be overridden.", "author": "JakeMathews", "createdAt": "2020-06-26T19:26:16Z", "path": "src/main/java/com/synopsys/integration/detect/configuration/DetectPropertiesJava.java", "diffHunk": "@@ -0,0 +1,1570 @@\n+package com.synopsys.integration.detect.configuration;\n+\n+import static java.util.Collections.emptyList;\n+import static java.util.Collections.singletonList;\n+\n+import java.util.Arrays;\n+\n+import com.synopsys.integration.blackduck.api.generated.enumeration.LicenseFamilyLicenseFamilyRiskRulesReleaseDistributionType;\n+import com.synopsys.integration.blackduck.api.generated.enumeration.PolicyRuleSeverityType;\n+import com.synopsys.integration.blackduck.api.generated.enumeration.ProjectCloneCategoriesType;\n+import com.synopsys.integration.blackduck.api.manual.throwaway.generated.enumeration.ProjectVersionPhaseType;\n+import com.synopsys.integration.blackduck.codelocation.signaturescanner.command.IndividualFileMatching;\n+import com.synopsys.integration.blackduck.codelocation.signaturescanner.command.SnippetMatching;\n+import com.synopsys.integration.configuration.property.Property;\n+import com.synopsys.integration.configuration.property.PropertyBuilder;\n+import com.synopsys.integration.configuration.property.base.PassthroughProperty;\n+import com.synopsys.integration.configuration.property.types.bool.BooleanProperty;\n+import com.synopsys.integration.configuration.property.types.enumextended.ExtendedEnumProperty;\n+import com.synopsys.integration.configuration.property.types.enumextended.ExtendedEnumValue;\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumListProperty;\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumUtils;\n+import com.synopsys.integration.configuration.property.types.enums.EnumListProperty;\n+import com.synopsys.integration.configuration.property.types.enums.EnumProperty;\n+import com.synopsys.integration.configuration.property.types.integer.IntegerProperty;\n+import com.synopsys.integration.configuration.property.types.integer.NullableIntegerProperty;\n+import com.synopsys.integration.configuration.property.types.longs.LongProperty;\n+import com.synopsys.integration.configuration.property.types.path.NullablePathProperty;\n+import com.synopsys.integration.configuration.property.types.path.PathListProperty;\n+import com.synopsys.integration.configuration.property.types.path.PathProperty;\n+import com.synopsys.integration.configuration.property.types.string.NullableStringProperty;\n+import com.synopsys.integration.configuration.property.types.string.StringListProperty;\n+import com.synopsys.integration.configuration.property.types.string.StringProperty;\n+import com.synopsys.integration.detect.DetectMajorVersion;\n+import com.synopsys.integration.detect.DetectTool;\n+import com.synopsys.integration.detect.configuration.enums.DefaultVersionNameScheme;\n+import com.synopsys.integration.detect.tool.signaturescanner.enums.ExtendedIndividualFileMatchingMode;\n+import com.synopsys.integration.detect.tool.signaturescanner.enums.ExtendedSnippetMode;\n+import com.synopsys.integration.detect.workflow.bdio.AggregateMode;\n+import com.synopsys.integration.detectable.detectables.bazel.WorkspaceRule;\n+import com.synopsys.integration.detector.base.DetectorType;\n+import com.synopsys.integration.configuration.property.types.path.PathValue;\n+import com.synopsys.integration.log.LogLevel;\n+\n+import java.lang.Deprecated;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class DetectPropertiesJava {\n+\n+   static NullableStringProperty BLACKDUCK_API_TOKEN = new PropertyBuilder<>(new NullableStringProperty(\"blackduck.api.token\")).build(property -> {", "originalCommit": "56d8a218a3bcd359ccd90f2257d2e989bb1446fb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/configuration/DetectPropertiesJava.java b/src/main/java/com/synopsys/integration/detect/configuration/DetectPropertiesJava.java\nindex 2b5671a49..6f5b3aa63 100644\n--- a/src/main/java/com/synopsys/integration/detect/configuration/DetectPropertiesJava.java\n+++ b/src/main/java/com/synopsys/integration/detect/configuration/DetectPropertiesJava.java\n\n@@ -11,7 +11,6 @@ import com.synopsys.integration.blackduck.api.generated.enumeration.ProjectClone\n import com.synopsys.integration.blackduck.api.manual.throwaway.generated.enumeration.ProjectVersionPhaseType;\n import com.synopsys.integration.blackduck.codelocation.signaturescanner.command.IndividualFileMatching;\n import com.synopsys.integration.blackduck.codelocation.signaturescanner.command.SnippetMatching;\n-import com.synopsys.integration.configuration.property.Property;\n import com.synopsys.integration.configuration.property.PropertyBuilder;\n import com.synopsys.integration.configuration.property.base.PassthroughProperty;\n import com.synopsys.integration.configuration.property.types.bool.BooleanProperty;\n"}}, {"oid": "4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4d7c3329e250288755ba9ec776e77acb5ab9ba8e", "message": "feat: Altered test to collect properties from DetectPropertiesJava using reflection", "committedDate": "2020-06-29T20:01:20Z", "type": "commit"}, {"oid": "7d4cee647b376a9c9134d3748bbdcb775145d396", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7d4cee647b376a9c9134d3748bbdcb775145d396", "message": "feat: Commented out category check", "committedDate": "2020-07-01T16:43:58Z", "type": "commit"}, {"oid": "e6cf84f95d8bef8eeaa5737ac9634b84b2854658", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/e6cf84f95d8bef8eeaa5737ac9634b84b2854658", "message": "feat: Replaced usages of DetectProperties.kt with java equivalent", "committedDate": "2020-07-13T15:29:47Z", "type": "commit"}, {"oid": "707fbf5ca848447b0ac57a18e75409d7979fa93d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/707fbf5ca848447b0ac57a18e75409d7979fa93d", "message": "Merge branch 'master' into detectPropertiesJava", "committedDate": "2020-07-14T17:57:26Z", "type": "commit"}, {"oid": "eae61c93cc5338b263084ab1869d14cdf8689f11", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/eae61c93cc5338b263084ab1869d14cdf8689f11", "message": "feat: Replaced usages of kotlin detect properties with Java equivalent", "committedDate": "2020-07-20T15:56:10Z", "type": "commit"}, {"oid": "8f363fc998be557cb51cfaf5fa651dc4b7cece1c", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/8f363fc998be557cb51cfaf5fa651dc4b7cece1c", "message": "feat: Resolved syntax to support new java properties", "committedDate": "2020-07-20T17:52:35Z", "type": "commit"}, {"oid": "797ee3c8cd440ab1516e6e66bc17e33f461e357d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/797ee3c8cd440ab1516e6e66bc17e33f461e357d", "message": "refactor: Refactored property value retrieval", "committedDate": "2020-07-21T16:03:56Z", "type": "commit"}, {"oid": "0025eef467c5a73fd84f05ed4b5a32ebb1ff6dec", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0025eef467c5a73fd84f05ed4b5a32ebb1ff6dec", "message": "refactor(properties): Cleaned up code smells. Suppressed warnings we don't care about. Applied formatting.", "committedDate": "2020-07-21T16:50:55Z", "type": "commit"}, {"oid": "037023060642fbc8d7c8584ab2bf984361b13606", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/037023060642fbc8d7c8584ab2bf984361b13606", "message": "feat: Merged master.", "committedDate": "2020-09-08T18:51:44Z", "type": "commit"}, {"oid": "6e30dd25ca43839313237a471c58eab3d6560c22", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6e30dd25ca43839313237a471c58eab3d6560c22", "message": "feat: Merge master.", "committedDate": "2020-09-08T19:06:15Z", "type": "commit"}, {"oid": "82880b88e24085bd7d4655e0d837038e3afd651a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/82880b88e24085bd7d4655e0d837038e3afd651a", "message": "fix: Updated property reference.", "committedDate": "2020-09-08T19:12:21Z", "type": "commit"}, {"oid": "7d98311a494c197e8cec838b77f8843057a18db7", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7d98311a494c197e8cec838b77f8843057a18db7", "message": "fix: Updated GoBattery test.", "committedDate": "2020-09-08T19:22:24Z", "type": "commit"}, {"oid": "264c058aee1f6ee926ddef14f0328cc8246db74c", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/264c058aee1f6ee926ddef14f0328cc8246db74c", "message": "fix: Fixed errant property fields, added category check in PropertyVerificationTest.", "committedDate": "2020-09-09T21:53:49Z", "type": "commit"}, {"oid": "747f6975164b6b0b6fd0db77f89adfd5bc56d29d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/747f6975164b6b0b6fd0db77f89adfd5bc56d29d", "message": "fix: Removed debug statement.", "committedDate": "2020-09-09T21:54:26Z", "type": "commit"}]}