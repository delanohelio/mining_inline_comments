{"pr_number": 97, "pr_title": "Log executable output2", "pr_createdAt": "2020-01-06T20:28:35Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/97", "timeline": [{"oid": "90b7921ce55ccacc3a08e55133003bc200485045", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/90b7921ce55ccacc3a08e55133003bc200485045", "message": "feat(detectable): log executable standard and error output if return code is non-zero (IDETECT-1784)", "committedDate": "2020-01-03T19:50:26Z", "type": "commit"}, {"oid": "9b14c90ee44e78bb6d3c35eef3bf9ef200ccd18b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/9b14c90ee44e78bb6d3c35eef3bf9ef200ccd18b", "message": "fix(detectable): PR #96 (IDETECT-1784)", "committedDate": "2020-01-03T21:27:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3NzU2OQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/97#discussion_r363477569", "bodyText": "Why do you have these imports? It seems like these lines were the only lines changed in this file.", "author": "JakeMathews", "createdAt": "2020-01-06T20:52:32Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectable/executable/ExecutableOutput.java", "diffHunk": "@@ -1,64 +1,68 @@\n-/**\r\n- * detectable\r\n- *\r\n- * Copyright (c) 2019 Synopsys, Inc.\r\n- *\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements. See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership. The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License. You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied. See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package com.synopsys.integration.detectable.detectable.executable;\r\n-\r\n-import java.util.Arrays;\r\n-import java.util.List;\r\n-\r\n-public class ExecutableOutput {\r\n-    private int returnCode = 0;\r\n-    private final String standardOutput;\r\n-    private final String errorOutput;\r\n-    private final String commandDescription;\r\n-\r\n-    public ExecutableOutput(final String commandDescription, final int returnCode, final String standardOutput, final String errorOutput) {\r\n-        this.commandDescription = commandDescription;\r\n-        this.returnCode = returnCode;\r\n-        this.standardOutput = standardOutput;\r\n-        this.errorOutput = errorOutput;\r\n-    }\r\n-\r\n-    public List<String> getStandardOutputAsList() {\r\n-        return Arrays.asList(standardOutput.split(System.lineSeparator()));\r\n-    }\r\n-\r\n-    public List<String> getErrorOutputAsList() {\r\n-        return Arrays.asList(errorOutput.split(System.lineSeparator()));\r\n-    }\r\n-\r\n-    public String getStandardOutput() {\r\n-        return standardOutput;\r\n-    }\r\n-\r\n-    public String getErrorOutput() {\r\n-        return errorOutput;\r\n-    }\r\n-\r\n-    public int getReturnCode() {\r\n-        return returnCode;\r\n-    }\r\n-\r\n-    public String getCommandDescription() {\r\n-        return commandDescription;\r\n-    }\r\n-}\r\n+/**\n+ * detectable\n+ *\n+ * Copyright (c) 2019 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detectable.detectable.executable;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;", "originalCommit": "9b14c90ee44e78bb6d3c35eef3bf9ef200ccd18b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4611d8c5ace4c6d204ba0856aa9c083111b91772", "chunk": "diff --git a/detectable/src/main/java/com/synopsys/integration/detectable/detectable/executable/ExecutableOutput.java b/detectable/src/main/java/com/synopsys/integration/detectable/detectable/executable/ExecutableOutput.java\nindex c5754150a..a407e7a41 100644\n--- a/detectable/src/main/java/com/synopsys/integration/detectable/detectable/executable/ExecutableOutput.java\n+++ b/detectable/src/main/java/com/synopsys/integration/detectable/detectable/executable/ExecutableOutput.java\n\n@@ -25,10 +25,6 @@ package com.synopsys.integration.detectable.detectable.executable;\n import java.util.Arrays;\n import java.util.List;\n \n-import org.apache.commons.lang3.StringUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n public class ExecutableOutput {\n     private int returnCode = 0;\n     private final String standardOutput;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ5ODAwOA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/97#discussion_r363498008", "bodyText": "Can we add a log before each output indicating whether or not the output is standard or error?", "author": "JakeMathews", "createdAt": "2020-01-06T21:45:35Z", "path": "src/main/java/com/synopsys/integration/detect/tool/detector/DetectExecutableRunner.java", "diffHunk": "@@ -56,6 +58,15 @@ public static DetectExecutableRunner newInfo(EventSystem eventSystem) {\n     public ExecutableOutput execute(final Executable executable) throws ExecutableRunnerException {\n         final ExecutableOutput output = super.execute(executable);\n         eventSystem.publishEvent(Event.Executable, output);\n+        if (output.getReturnCode() != 0) {\n+            if (StringUtils.isNotBlank(output.getStandardOutput())) {", "originalCommit": "9b14c90ee44e78bb6d3c35eef3bf9ef200ccd18b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4611d8c5ace4c6d204ba0856aa9c083111b91772", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectExecutableRunner.java b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectExecutableRunner.java\nindex db9d7abac..b0540bc5d 100644\n--- a/src/main/java/com/synopsys/integration/detect/tool/detector/DetectExecutableRunner.java\n+++ b/src/main/java/com/synopsys/integration/detect/tool/detector/DetectExecutableRunner.java\n\n@@ -38,27 +38,29 @@ import com.synopsys.integration.detectable.detectable.executable.impl.SimpleExec\n public class DetectExecutableRunner extends SimpleExecutableRunner {\n     private final EventSystem eventSystem;\n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n+    private final boolean shouldLogOutput;\n \n-    public DetectExecutableRunner(final Consumer<String> outputConsumer, final Consumer<String> traceConsumer, EventSystem eventSystem) {\n+    public DetectExecutableRunner(final Consumer<String> outputConsumer, final Consumer<String> traceConsumer, EventSystem eventSystem, boolean shouldLogOutput) {\n         super(outputConsumer, traceConsumer);\n         this.eventSystem = eventSystem;\n+        this.shouldLogOutput = shouldLogOutput;\n     }\n \n     public static DetectExecutableRunner newDebug(EventSystem eventSystem) {\n         Logger logger = LoggerFactory.getLogger(SimpleExecutableRunner.class);\n-        return new DetectExecutableRunner(logger::debug, logger::trace, eventSystem);\n+        return new DetectExecutableRunner(logger::debug, logger::trace, eventSystem, true);\n     }\n \n     public static DetectExecutableRunner newInfo(EventSystem eventSystem) {\n         Logger logger = LoggerFactory.getLogger(SimpleExecutableRunner.class);\n-        return new DetectExecutableRunner(logger::info, logger::trace, eventSystem);\n+        return new DetectExecutableRunner(logger::info, logger::trace, eventSystem, false);\n     }\n \n     @Override\n     public ExecutableOutput execute(final Executable executable) throws ExecutableRunnerException {\n         final ExecutableOutput output = super.execute(executable);\n         eventSystem.publishEvent(Event.Executable, output);\n-        if (output.getReturnCode() != 0) {\n+        if (output.getReturnCode() != 0 && shouldLogOutput) {\n             if (StringUtils.isNotBlank(output.getStandardOutput())) {\n                 logger.info(output.getStandardOutput());\n             }\n"}}, {"oid": "4611d8c5ace4c6d204ba0856aa9c083111b91772", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4611d8c5ace4c6d204ba0856aa9c083111b91772", "message": "fix(detectable): Added boolean flag in DetectExecutableRunner to dictate logging of output (IDETECT-1802)", "committedDate": "2020-01-07T16:22:43Z", "type": "commit"}, {"oid": "171733b6b454f1c92e9d77fa79bbb25ab9449396", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/171733b6b454f1c92e9d77fa79bbb25ab9449396", "message": "fix(detectable): Added info log specifying Standard vs Error Output (IDETECT-1802)", "committedDate": "2020-01-07T16:28:55Z", "type": "commit"}, {"oid": "b5f762e912ee6acfd1232968f63d05baf9dd9dd3", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b5f762e912ee6acfd1232968f63d05baf9dd9dd3", "message": "fix(detectable): Added check to make sure logger not in Debug or Trace when logging executable output in DetectExecutableRunner (IDETECT-1802)", "committedDate": "2020-01-07T19:03:48Z", "type": "commit"}]}