{"pr_number": 198, "pr_title": "Sb bazel muliple rule types off master", "pr_createdAt": "2020-06-30T19:58:00Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/198", "timeline": [{"oid": "b9b16e47273b859002300ec4d4fae8f61afe0837", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b9b16e47273b859002300ec4d4fae8f61afe0837", "message": "Release 6.4.0-SIGQA1", "committedDate": "2020-06-15T22:37:40Z", "type": "commit"}, {"oid": "101dd21b528de4931bb0c31bf91c59c425bd2dfd", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/101dd21b528de4931bb0c31bf91c59c425bd2dfd", "message": "Using the next snapshot post release 6.4.0-SIGQA2-SNAPSHOT", "committedDate": "2020-06-15T22:48:06Z", "type": "commit"}, {"oid": "f837f67fcce4d9cb22641abbd37316796e03e8f2", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f837f67fcce4d9cb22641abbd37316796e03e8f2", "message": "feat(bazel): enable collection of dependencies from multiple repository rule types; previously existing tests pass", "committedDate": "2020-06-19T21:48:26Z", "type": "commit"}, {"oid": "f8f2cd86ac17a392d38e4627cb5c8cf8b2e1413d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f8f2cd86ac17a392d38e4627cb5c8cf8b2e1413d", "message": "test(bazel): added test for detecting multiple supported rules in a workspace file", "committedDate": "2020-06-19T21:49:18Z", "type": "commit"}, {"oid": "ab90204f10562a9589bf7dfe405e515c4892ee38", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ab90204f10562a9589bf7dfe405e515c4892ee38", "message": "test(bazel): added test for mixed-repo-rule build target scenario", "committedDate": "2020-06-21T16:29:29Z", "type": "commit"}, {"oid": "f70304ab8a9e336b8688dc2789c4c6398097c571", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f70304ab8a9e336b8688dc2789c4c6398097c571", "message": "fix(bazel): use cquery in first maven_jar query", "committedDate": "2020-06-22T15:59:37Z", "type": "commit"}, {"oid": "02e6426c46c9676bca364cc62ce38c040e1851c0", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/02e6426c46c9676bca364cc62ce38c040e1851c0", "message": "fix(bazel): fixes related to running w/ multiple rules, some of which don't apply", "committedDate": "2020-06-22T17:20:31Z", "type": "commit"}, {"oid": "03c8c82553c3e9d4b75cfe019d7bf30fbba7808c", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/03c8c82553c3e9d4b75cfe019d7bf30fbba7808c", "message": "style(doc): update bazel doc for change to cquery for maven_jar", "committedDate": "2020-06-22T17:22:57Z", "type": "commit"}, {"oid": "7341db2b09829ea81c4d065a2bd717b690cc2f54", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/7341db2b09829ea81c4d065a2bd717b690cc2f54", "message": "fix(bazel): improved error reporting from bazel command failures", "committedDate": "2020-06-22T19:43:22Z", "type": "commit"}, {"oid": "536cb7193a4cd30d8868aba01453b1bed64141a4", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/536cb7193a4cd30d8868aba01453b1bed64141a4", "message": "refactor(bazel): refactoring", "committedDate": "2020-06-22T20:20:20Z", "type": "commit"}, {"oid": "0b6616215ba51645bb79db391a14e2be292b5c33", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0b6616215ba51645bb79db391a14e2be292b5c33", "message": "test(bazel): added WorkspaceRuleChooser tests for multi-rule capability", "committedDate": "2020-06-22T21:44:50Z", "type": "commit"}, {"oid": "b34373d0fc44adc02f60e6a3f7cdda9a53dc0fca", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b34373d0fc44adc02f60e6a3f7cdda9a53dc0fca", "message": "test(bazel): Cleanup", "committedDate": "2020-06-22T21:47:30Z", "type": "commit"}, {"oid": "d745bf2b0cd03572a55ffd183bb9b5fe46e598b4", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d745bf2b0cd03572a55ffd183bb9b5fe46e598b4", "message": "feat(bazel): adding support for ALL and NONE to bazel dependency type", "committedDate": "2020-06-23T20:54:22Z", "type": "commit"}, {"oid": "9d52f088812068b8edc4fb8c29970f30722fe114", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/9d52f088812068b8edc4fb8c29970f30722fe114", "message": "refactor(bazel): clean up rule chooser", "committedDate": "2020-06-23T21:41:23Z", "type": "commit"}, {"oid": "ebd206fad80bfacea488db7bb366d2095bf61ec1", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ebd206fad80bfacea488db7bb366d2095bf61ec1", "message": "test(bazel): refactoring test", "committedDate": "2020-06-24T17:13:48Z", "type": "commit"}, {"oid": "0ff8a2f9e66b6dfd8677d15e3a638f4b2e9f11cc", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0ff8a2f9e66b6dfd8677d15e3a638f4b2e9f11cc", "message": "fix(bazel): Eliminate UNSPECIFIED choice for bazel dependency type, since NONE is now available", "committedDate": "2020-06-24T19:25:02Z", "type": "commit"}, {"oid": "ee48f69b9c01df827cb539982565801c35fd5506", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ee48f69b9c01df827cb539982565801c35fd5506", "message": "refactor(bazel): make better use of FilterableEnumUtils", "committedDate": "2020-06-24T19:41:44Z", "type": "commit"}, {"oid": "90e96089835c40bebf5d168b91476e467dd26ac1", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/90e96089835c40bebf5d168b91476e467dd26ac1", "message": "fix(bazel): Fix for the ALL rules case", "committedDate": "2020-06-24T20:46:35Z", "type": "commit"}, {"oid": "b86b1e53fafab795a079b233d8b76e34fd49c09d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b86b1e53fafab795a079b233d8b76e34fd49c09d", "message": "refactor(bazel): remove unused code", "committedDate": "2020-06-26T15:22:35Z", "type": "commit"}, {"oid": "6299c805fb5d0545503137436b71cda03a7c4d1a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/6299c805fb5d0545503137436b71cda03a7c4d1a", "message": "Merge branch 'sb_bazelMultipleRuleTypes' into sb_bazelMulipleRuleTypesOffMaster\n\n# Conflicts:\n#\tbuild.gradle", "committedDate": "2020-06-26T15:50:53Z", "type": "commit"}, {"oid": "24d608891f6b6653a5db1ea8fe3d7b83e51adaef", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/24d608891f6b6653a5db1ea8fe3d7b83e51adaef", "message": "refactor(bazel): naming", "committedDate": "2020-06-26T16:05:25Z", "type": "commit"}, {"oid": "5204e99a3aa1a7cd4227c792b08361217262c971", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/5204e99a3aa1a7cd4227c792b08361217262c971", "message": "refactor(bazel): Limit the complexity of FilterableEnumValue to BazelDetectableOptions (deal with it there, not in WorkspaceRuleChooser).", "committedDate": "2020-06-26T19:02:49Z", "type": "commit"}, {"oid": "d4540998a4c3fc86f9cfade72e03dcf1bc69b67b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d4540998a4c3fc86f9cfade72e03dcf1bc69b67b", "message": "Merge branch 'master' into sb_bazelMulipleRuleTypesOffMaster", "committedDate": "2020-06-30T18:25:07Z", "type": "commit"}, {"oid": "0a2dc2a319d36459d8d3527c392e6f9f42b01849", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/0a2dc2a319d36459d8d3527c392e6f9f42b01849", "message": "refactor(bazel): sonar code smell cleanup", "committedDate": "2020-06-30T20:11:27Z", "type": "commit"}, {"oid": "ec9c0384541c4cb416e4470a9c9a55cf828c9603", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/ec9c0384541c4cb416e4470a9c9a55cf828c9603", "message": "feat: Converted DetectableOptionFactory to java", "committedDate": "2020-07-01T19:45:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2NzQ3NA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r450367474", "bodyText": "I think this work should move to the configuration factory - imo options shouldn't have logic, they are POJO and should be constructed in a valid state. This would let detectable not need to know about FilterableEnumValue - the configuration just converts that to the appropriate Set and creates a valid option object.", "author": "taikuukaits", "createdAt": "2020-07-06T17:15:54Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/bazel/BazelDetectableOptions.java", "diffHunk": "@@ -22,30 +22,62 @@\n  */\n package com.synopsys.integration.detectable.detectables.bazel;\n \n+import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n+import java.util.Set;\n+\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumUtils;\n+import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumValue;\n \n public class BazelDetectableOptions {\n     private final String targetName;\n-    private final WorkspaceRule bazelDependencyRule;\n+    private final List<FilterableEnumValue<WorkspaceRule>> bazelDependencyRulesPropertyValues;\n     private final List<String> bazelCqueryAdditionalOptions;\n \n-    public BazelDetectableOptions(final String targetName, final WorkspaceRule bazelDependencyRule,\n-        final List<String> bazelCqueryAdditionalOptions) {\n+    public BazelDetectableOptions(String targetName, List<FilterableEnumValue<WorkspaceRule>> bazelDependencyRulesPropertyValues,\n+        List<String> bazelCqueryAdditionalOptions) {\n         this.targetName = targetName;\n-        this.bazelDependencyRule = bazelDependencyRule;\n+        this.bazelDependencyRulesPropertyValues = bazelDependencyRulesPropertyValues;\n         this.bazelCqueryAdditionalOptions = bazelCqueryAdditionalOptions;\n     }\n \n     public Optional<String> getTargetName() {\n         return Optional.ofNullable(targetName);\n     }\n \n-    public WorkspaceRule getBazelDependencyRule() {\n-        return bazelDependencyRule;\n-    }\n-\n     public List<String> getBazelCqueryAdditionalOptions() {\n         return bazelCqueryAdditionalOptions;\n     }\n+\n+    public Set<WorkspaceRule> getBazelDependencyRules() {", "originalCommit": "0a2dc2a319d36459d8d3527c392e6f9f42b01849", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyMzMzNA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r453923334", "bodyText": "I moved it to DetectableOptionFactory... is that what you meant?", "author": "stevebillings", "createdAt": "2020-07-13T20:48:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2NzQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "f50b8ea533e0d34e5b3ea76975a84c081af46493", "chunk": "diff --git a/detectable/src/main/java/com/synopsys/integration/detectable/detectables/bazel/BazelDetectableOptions.java b/detectable/src/main/java/com/synopsys/integration/detectable/detectables/bazel/BazelDetectableOptions.java\nindex f90ee0d06..4e559a167 100644\n--- a/detectable/src/main/java/com/synopsys/integration/detectable/detectables/bazel/BazelDetectableOptions.java\n+++ b/detectable/src/main/java/com/synopsys/integration/detectable/detectables/bazel/BazelDetectableOptions.java\n\n@@ -22,24 +22,18 @@\n  */\n package com.synopsys.integration.detectable.detectables.bazel;\n \n-import java.util.Arrays;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n-import java.util.Set;\n-\n-import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumUtils;\n-import com.synopsys.integration.configuration.property.types.enumfilterable.FilterableEnumValue;\n \n public class BazelDetectableOptions {\n     private final String targetName;\n-    private final List<FilterableEnumValue<WorkspaceRule>> bazelDependencyRulesPropertyValues;\n+    private final WorkspaceRule bazelDependencyRule;\n     private final List<String> bazelCqueryAdditionalOptions;\n \n-    public BazelDetectableOptions(String targetName, List<FilterableEnumValue<WorkspaceRule>> bazelDependencyRulesPropertyValues,\n-        List<String> bazelCqueryAdditionalOptions) {\n+    public BazelDetectableOptions(final String targetName, final WorkspaceRule bazelDependencyRule,\n+        final List<String> bazelCqueryAdditionalOptions) {\n         this.targetName = targetName;\n-        this.bazelDependencyRulesPropertyValues = bazelDependencyRulesPropertyValues;\n+        this.bazelDependencyRule = bazelDependencyRule;\n         this.bazelCqueryAdditionalOptions = bazelCqueryAdditionalOptions;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3MDE1MA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r450370150", "bodyText": "I think extractors should be tested in a battery test - the size of this test and the amount of mocking needed makes this test difficult to follow and it seems like a good candidate for a battery test. I wouldn't mind discussing this kind of test at large but this to me is what the battery is for.", "author": "taikuukaits", "createdAt": "2020-07-06T17:20:59Z", "path": "detectable/src/test/java/com/synopsys/integration/detectable/detectables/bazel/functional/bazel/BazelExtractorTest.java", "diffHunk": "@@ -191,4 +193,70 @@ public void testMavenInstall() throws ExecutableRunnerException, IntegrationExce\n         assertTrue(foundFailureAccess);\n         assertTrue(foundErrorProneAnnotations);\n     }\n+\n+    @Test\n+    public void testMultipleRuleTypes() throws ExecutableRunnerException, IntegrationException, IOException {\n+        Assumptions.assumeFalse(SystemUtils.IS_OS_WINDOWS);\n+\n+        BazelCommandExecutor bazelCommandExecutor = Mockito.mock(BazelCommandExecutor.class);\n+        BazelVariableSubstitutor bazelVariableSubstitutor = Mockito.mock(BazelVariableSubstitutor.class);\n+        ExternalIdFactory externalIdFactory = new ExternalIdFactory();\n+        File workspaceDir = new File(\".\");\n+        ExecutableRunner executableRunner = Mockito.mock(ExecutableRunner.class);\n+        BazelWorkspace bazelWorkspace = Mockito.mock(BazelWorkspace.class);\n+        Mockito.when(bazelWorkspace.getDependencyRuleTypes()).thenReturn(Sets.newHashSet(WorkspaceRule.MAVEN_INSTALL,\n+            WorkspaceRule.HASKELL_CABAL_LIBRARY));\n+        WorkspaceRuleChooser workspaceRuleChooser = Mockito.mock(WorkspaceRuleChooser.class);\n+        Mockito.when(workspaceRuleChooser.choose(\n+            Mockito.eq(Sets.newHashSet(WorkspaceRule.MAVEN_INSTALL, WorkspaceRule.HASKELL_CABAL_LIBRARY)),\n+            Mockito.isNull())).thenReturn(Sets.newHashSet(WorkspaceRule.MAVEN_INSTALL, WorkspaceRule.HASKELL_CABAL_LIBRARY));\n+        BazelExtractor bazelExtractor = new BazelExtractor(executableRunner, externalIdFactory, workspaceRuleChooser);\n+        File bazelExe = new File(\"/usr/bin/bazel\");\n+\n+        // bazel cquery --noimplicit_deps \"kind(j.*import, deps(//:ProjectRunner))\" --output build\n+        List<String> bazelArgsGetDependenciesMavenInstall = new ArrayList<>();\n+        bazelArgsGetDependenciesMavenInstall.add(\"cquery\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"--noimplicit_deps\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"kind(j.*import, deps(//:ProjectRunner))\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"--output\");\n+        bazelArgsGetDependenciesMavenInstall.add(\"build\");\n+        ExecutableOutput bazelCmdExecutableOutputGetDependenciesMavenInstall = Mockito.mock(ExecutableOutput.class);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesMavenInstall.getReturnCode()).thenReturn(0);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesMavenInstall.getStandardOutput()).thenReturn(\n+            \"jvm_import(\\n  name = \\\"com_google_guava_failureaccess\\\",\\n\" +\n+                \"  tags = [\\\"maven_coordinates=com.google.guava:failureaccess:1.0\\\"],\\n\" +\n+                \"  tags = [\\\"maven_coordinates=com.google.errorprone:error_prone_annotations:2.2.0\\\"],\");\n+        Mockito.when(executableRunner.execute(workspaceDir, bazelExe, bazelArgsGetDependenciesMavenInstall)).thenReturn(bazelCmdExecutableOutputGetDependenciesMavenInstall);\n+\n+        // bazel cquery --noimplicit_deps \"kind(haskell_cabal_library, deps(//:ProjectRunner))\" --output jsonproto\n+        List<String> bazelArgsGetDependenciesHaskellCabalLibrary = new ArrayList<>();\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"cquery\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"--noimplicit_deps\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"kind(haskell_cabal_library, deps(//:ProjectRunner))\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"--output\");\n+        bazelArgsGetDependenciesHaskellCabalLibrary.add(\"jsonproto\");\n+        ExecutableOutput bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary = Mockito.mock(ExecutableOutput.class);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary.getReturnCode()).thenReturn(0);\n+        File jsonProtoFile = new File(\"src/test/resources/detectables/functional/bazel/jsonProtoForHaskellCabalLibraries.txt\");\n+        String jsonProtoHaskellCabalLibrary = FileUtils.readFileToString(jsonProtoFile, StandardCharsets.UTF_8);\n+        Mockito.when(bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary.getStandardOutput()).thenReturn(jsonProtoHaskellCabalLibrary);\n+        Mockito.when(executableRunner.execute(workspaceDir, bazelExe, bazelArgsGetDependenciesHaskellCabalLibrary)).thenReturn(bazelCmdExecutableOutputGetDependenciesHaskellCabalLibrary);\n+\n+        Extraction result = bazelExtractor.extract(bazelExe, workspaceDir, bazelWorkspace, \"//:ProjectRunner\", new BazelProjectNameGenerator(), null, null);", "originalCommit": "0a2dc2a319d36459d8d3527c392e6f9f42b01849", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyMzQ5Mw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/198#discussion_r453923493", "bodyText": "Moved to a new battery test", "author": "stevebillings", "createdAt": "2020-07-13T20:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3MDE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "76bf1a57dc64afcabe7f587fdc6aea7098f6c925", "chunk": "diff --git a/detectable/src/test/java/com/synopsys/integration/detectable/detectables/bazel/functional/bazel/BazelExtractorTest.java b/detectable/src/test/java/com/synopsys/integration/detectable/detectables/bazel/functional/bazel/BazelExtractorTest.java\nindex 18646cfa4..c639f7cf4 100644\n--- a/detectable/src/test/java/com/synopsys/integration/detectable/detectables/bazel/functional/bazel/BazelExtractorTest.java\n+++ b/detectable/src/test/java/com/synopsys/integration/detectable/detectables/bazel/functional/bazel/BazelExtractorTest.java\n\n@@ -195,7 +195,7 @@ public class BazelExtractorTest {\n     }\n \n     @Test\n-    public void testMultipleRuleTypes() throws ExecutableRunnerException, IntegrationException, IOException {\n+    void testMultipleRuleTypes() throws ExecutableRunnerException, IntegrationException, IOException {\n         Assumptions.assumeFalse(SystemUtils.IS_OS_WINDOWS);\n \n         BazelCommandExecutor bazelCommandExecutor = Mockito.mock(BazelCommandExecutor.class);\n"}}, {"oid": "940ef2ee1427392f23273ee3766cbeeb18dffc09", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/940ef2ee1427392f23273ee3766cbeeb18dffc09", "message": "test(bazel): added first test in new bazel battery test", "committedDate": "2020-07-07T14:15:45Z", "type": "commit"}, {"oid": "595e2b3cc9ca816cada80b4beb73b1aeaa795df2", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/595e2b3cc9ca816cada80b4beb73b1aeaa795df2", "message": "test(bazel): battery now covers maven_install and haskell_cabal_library", "committedDate": "2020-07-07T14:47:50Z", "type": "commit"}, {"oid": "76bf1a57dc64afcabe7f587fdc6aea7098f6c925", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/76bf1a57dc64afcabe7f587fdc6aea7098f6c925", "message": "refactor(bazel): sonar code smells", "committedDate": "2020-07-07T15:14:18Z", "type": "commit"}, {"oid": "553bfed3e39aa0b768991fdbe305807fde9325a7", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/553bfed3e39aa0b768991fdbe305807fde9325a7", "message": "test: battery: template fix for case where a command is run multiple times", "committedDate": "2020-07-07T18:29:53Z", "type": "commit"}, {"oid": "cefe99e52e214912eaecb65e1865a865e3295713", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/cefe99e52e214912eaecb65e1865a865e3295713", "message": "test(bazel): added battery test for maven_jar", "committedDate": "2020-07-07T18:30:29Z", "type": "commit"}, {"oid": "366c982a0615a6e580d8ce17e28eb90492277871", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/366c982a0615a6e580d8ce17e28eb90492277871", "message": "test(bazel): added battery test for ALL rule types", "committedDate": "2020-07-08T00:01:35Z", "type": "commit"}, {"oid": "db81fdccbf48cf5f447107a36df13cfd268ff376", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/db81fdccbf48cf5f447107a36df13cfd268ff376", "message": "test(bazel): removed BazelExtractorTest, now replaced by battery tests", "committedDate": "2020-07-08T14:54:42Z", "type": "commit"}, {"oid": "30db84801c5bee7287c07ec97615d872c8d4d29f", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/30db84801c5bee7287c07ec97615d872c8d4d29f", "message": "merge from master", "committedDate": "2020-07-08T15:25:53Z", "type": "commit"}, {"oid": "e4dae7a199c9ae90f7f9540d677c25e8c70ba40b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/e4dae7a199c9ae90f7f9540d677c25e8c70ba40b", "message": "refactor(bazel): Simplified BazelWorkspace.", "committedDate": "2020-07-08T15:47:58Z", "type": "commit"}, {"oid": "d64d9bd9f62297a6187cdb1a3f7e9575ba51d2b2", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d64d9bd9f62297a6187cdb1a3f7e9575ba51d2b2", "message": "refactor(bazel): remove temp change", "committedDate": "2020-07-08T15:56:22Z", "type": "commit"}, {"oid": "793fd3e09b040737eb4a431765f72271eae31a37", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/793fd3e09b040737eb4a431765f72271eae31a37", "message": "test(gomod): fix expected results for gomod test", "committedDate": "2020-07-08T16:01:47Z", "type": "commit"}, {"oid": "b0769f47811fe23921577bc921f9e4778d389378", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b0769f47811fe23921577bc921f9e4778d389378", "message": "Merge pull request #204 from blackducksoftware/jake-bazel\n\nrefactor(bazel): Simplified BazelWorkspace.", "committedDate": "2020-07-08T16:11:39Z", "type": "commit"}, {"oid": "f50b8ea533e0d34e5b3ea76975a84c081af46493", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f50b8ea533e0d34e5b3ea76975a84c081af46493", "message": "feat: Deleted kotlin DetectableOptionFactory, replaced usages with Java version", "committedDate": "2020-07-10T16:35:38Z", "type": "commit"}, {"oid": "86978140cc59e8f86e7c8791e771cac01750327d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/86978140cc59e8f86e7c8791e771cac01750327d", "message": "merge from master", "committedDate": "2020-07-13T19:12:25Z", "type": "commit"}, {"oid": "c302898ed4e047d5a8db8ccbd187a82a7433c17a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/c302898ed4e047d5a8db8ccbd187a82a7433c17a", "message": "Merge commit 'f50b8ea533e0d34e5b3ea76975a84c081af46493' into sb_bazelMulipleRuleTypesOffMaster", "committedDate": "2020-07-13T19:33:48Z", "type": "commit"}, {"oid": "4d7afb65db15ecd7b39fc3083f3cc308509cb41a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4d7afb65db15ecd7b39fc3083f3cc308509cb41a", "message": "refactor(bazel): moved FilterableEnumValue complexity for workspace rule property from BazelDetectableOptions to DetectableOptionFactory.", "committedDate": "2020-07-13T19:59:39Z", "type": "commit"}, {"oid": "23abaae730159eb832f3dc600b977f554b3ae362", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/23abaae730159eb832f3dc600b977f554b3ae362", "message": "test(bazel): added tests for optionsFactory translation of user input (List<FilterableEnumValue<WorkspaceRule>> ) to a Set of WorkspaceRules", "committedDate": "2020-07-13T20:38:50Z", "type": "commit"}, {"oid": "43a6318c40ab79a38ce18339a1a86e40e6d8248b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/43a6318c40ab79a38ce18339a1a86e40e6d8248b", "message": "test(bazel): address sonar code smells", "committedDate": "2020-07-13T20:51:49Z", "type": "commit"}, {"oid": "4231bdbfa836e2ca7670dbf27e7abed761703822", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/4231bdbfa836e2ca7670dbf27e7abed761703822", "message": "Merge branch 'master' into sb_bazelMulipleRuleTypesOffMaster", "committedDate": "2020-07-13T21:11:03Z", "type": "commit"}]}