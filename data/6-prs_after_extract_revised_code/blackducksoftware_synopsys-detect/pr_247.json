{"pr_number": 247, "pr_title": "Pip Inspector: Find requirements.txt", "pr_createdAt": "2020-11-13T20:05:45Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/247", "timeline": [{"oid": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab", "message": "feat: PipInspector now will search for files named requirements.txt if detect.pip.requirements.paths is not set", "committedDate": "2020-11-13T20:04:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523203796", "bodyText": "Does the current file finder take into account search depth? I know some customers are going to have requirements files not at root level, for that we could just say use the property.", "author": "JakeMathews", "createdAt": "2020-11-13T20:23:59Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)", "originalCommit": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwODk4OA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523208988", "bodyText": "Hmm it doesn't. That seems odd. I think it's reasonable to expect that we'd respect search depth for this, I'll add that.", "author": "rottebds", "createdAt": "2020-11-13T20:35:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIxNTAzMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523215031", "bodyText": "I talked with Jordan about it. We think what you already have is good", "author": "JakeMathews", "createdAt": "2020-11-13T20:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIyNDgyNA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523224824", "bodyText": "Yeah, I think ideally we should respect search depth here but I'm not keen on adding another property.", "author": "rottebds", "createdAt": "2020-11-13T20:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwMzc5Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523205976", "bodyText": "Any reason for not using requirementFiles.isEmpty()?", "author": "JakeMathews", "createdAt": "2020-11-13T20:28:45Z", "path": "detectable/src/main/java/com/synopsys/integration/detectable/detectables/pip/PipInspectorDetectable.java", "diffHunk": "@@ -69,12 +76,21 @@ public PipInspectorDetectable(final DetectableEnvironment environment, final Fil\n     @Override\n     public DetectableResult applicable() {\n         setupFile = fileFinder.findFile(environment.getDirectory(), SETUPTOOLS_DEFAULT_FILE_NAME);\n-        final boolean hasSetups = setupFile != null;\n-        final boolean hasRequirements = pipInspectorDetectableOptions.getRequirementsFilePaths() != null && pipInspectorDetectableOptions.getRequirementsFilePaths().size() > 0;\n+        boolean hasSetups = setupFile != null;\n+\n+        requirementsFiles = pipInspectorDetectableOptions.getRequirementsFilePaths();\n+        if (CollectionUtils.isEmpty(pipInspectorDetectableOptions.getRequirementsFilePaths())) {\n+            requirementsFiles = fileFinder.findFiles(environment.getDirectory(), REQUIREMENTS_DEFAULT_FILE_NAME)\n+                                    .stream()\n+                                    .map(File::toPath)\n+                                    .collect(Collectors.toList());\n+        }\n+        boolean hasRequirements = CollectionUtils.isNotEmpty(requirementsFiles);", "originalCommit": "b261e8ea7c33d0e51ae53a0ad9a1e927db8446ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNjk5Mw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523206993", "bodyText": "Previous code checked if the requirementsFiles object was null, so I assumed it must be nullable.", "author": "rottebds", "createdAt": "2020-11-13T20:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNzgxOA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523207818", "bodyText": "I suppose at this point we're no longer nullable, so we could use the other method but meh-- I think isNotEmpty tells a better story than !object.isEmpty()", "author": "rottebds", "createdAt": "2020-11-13T20:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIxNTYyMQ==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/247#discussion_r523215621", "bodyText": "I agree with that", "author": "JakeMathews", "createdAt": "2020-11-13T20:43:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNTk3Ng=="}], "type": "inlineReview", "revised_code": null}]}