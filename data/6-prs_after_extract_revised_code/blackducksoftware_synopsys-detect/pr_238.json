{"pr_number": 238, "pr_title": "Reduce Congnitive Complexity in Interactive Mode", "pr_createdAt": "2020-10-08T21:57:18Z", "pr_url": "https://github.com/blackducksoftware/synopsys-detect/pull/238", "timeline": [{"oid": "5e032813e825cb776edbd414178371208b9b45b7", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/5e032813e825cb776edbd414178371208b9b45b7", "message": "refactor: Removing OperatingSystemType from Detect since we can get it from integration-common", "committedDate": "2020-10-02T16:17:45Z", "type": "commit"}, {"oid": "321573150ef4bf6805ac023af8bcadf02bad658d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/321573150ef4bf6805ac023af8bcadf02bad658d", "message": "refactor: Replace InteractiveMode inheritence with InteractionTree composition to reduce cognitive complexity", "committedDate": "2020-10-07T21:56:55Z", "type": "commit"}, {"oid": "fc6d7c630828214e764ca4995c5d887a990fcb82", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/fc6d7c630828214e764ca4995c5d887a990fcb82", "message": "Merge branch 'master' into reduce-cognitive-complexity", "committedDate": "2020-10-08T20:16:21Z", "type": "commit"}, {"oid": "c04548653f6365fe653fd193502623f6a1c0f23a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/c04548653f6365fe653fd193502623f6a1c0f23a", "message": "refactor: Remove ManagerFactory", "committedDate": "2020-10-08T20:17:57Z", "type": "commit"}, {"oid": "83c08a83a8e816892fe2ca86000b56b96f0c7242", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/83c08a83a8e816892fe2ca86000b56b96f0c7242", "message": "refactor: Renaming and repackaging", "committedDate": "2020-10-08T21:35:56Z", "type": "commit"}, {"oid": "8fd2ee0b31750e32f7fb673da8010abbdf4ad05a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/8fd2ee0b31750e32f7fb673da8010abbdf4ad05a", "message": "chore: Updating license header", "committedDate": "2020-10-08T22:00:02Z", "type": "commit"}, {"oid": "149824e39db6bf94735b7ea63124bed9390a6497", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/149824e39db6bf94735b7ea63124bed9390a6497", "message": "Merge branch 'master' into reduce-cognitive-complexity", "committedDate": "2020-10-23T17:38:28Z", "type": "commit"}, {"oid": "e6f7584bf0e4ba0761135ba987c55f73bb065e6b", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/e6f7584bf0e4ba0761135ba987c55f73bb065e6b", "message": "Merge branch 'master' into reduce-cognitive-complexity", "committedDate": "2020-10-23T17:43:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyMDQ4Ng==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r511120486", "bodyText": "BLACKDUCK_HUB_PASSWORD should be changed, but not relevant to your PR :)", "author": "taikuukaits", "createdAt": "2020-10-23T19:47:56Z", "path": "src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class BlackDuckServerDecisionBranch implements DecisionTree {\n+    public void traverse(Interactions interactions) {\n+        interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_URL.getProperty(), \"What is the Black Duck server url?\");\n+\n+        interactions\n+            .println(\"You can now configure Black Duck with either an API token -OR- a username and password. The API token must already exist on the Black Duck server, but it is the preferred approach to configure your connection.\");\n+        Boolean useApiToken = interactions.askYesOrNo(\"Would you like to use an existing API token?\");\n+        if (useApiToken) {\n+            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_API_TOKEN.getProperty(), \"What is the API token?\");\n+        } else {\n+            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_USERNAME.getProperty(), \"What is the username?\");\n+\n+            Boolean setHubPassword = interactions.askYesOrNoWithMessage(\"Would you like to set the password?\",\n+                \"WARNING: If you choose to save the settings, this password will be stored in plain text. You can set this password as an environment variable BLACKDUCK_HUB_PASSWORD.\");", "originalCommit": "e6f7584bf0e4ba0761135ba987c55f73bb065e6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MjQ1OA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r516282458", "bodyText": "Using the property name now, good change to make!", "author": "rottebds", "createdAt": "2020-11-02T22:06:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEyMDQ4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f1926ee68620a03d761552b86ee22db98c172fff", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java b/src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java\nindex 746f09c29..3c7b18acc 100644\n--- a/src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java\n+++ b/src/main/java/com/synopsys/integration/detect/interactive/BlackDuckServerDecisionBranch.java\n\n@@ -25,44 +25,43 @@ package com.synopsys.integration.detect.interactive;\n import com.synopsys.integration.detect.configuration.DetectProperties;\n \n public class BlackDuckServerDecisionBranch implements DecisionTree {\n-    public void traverse(Interactions interactions) {\n-        interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_URL.getProperty(), \"What is the Black Duck server url?\");\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_URL.getProperty(), \"What is the Black Duck server url?\");\n \n-        interactions\n-            .println(\"You can now configure Black Duck with either an API token -OR- a username and password. The API token must already exist on the Black Duck server, but it is the preferred approach to configure your connection.\");\n-        Boolean useApiToken = interactions.askYesOrNo(\"Would you like to use an existing API token?\");\n+        writer.println(\"You can now configure Black Duck with either an API token -OR- a username and password. The API token must already exist on the Black Duck server, but it is the preferred approach to configure your connection.\");\n+        Boolean useApiToken = writer.askYesOrNo(\"Would you like to use an existing API token?\");\n         if (useApiToken) {\n-            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_API_TOKEN.getProperty(), \"What is the API token?\");\n+            propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_API_TOKEN.getProperty(), \"What is the API token?\");\n         } else {\n-            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_USERNAME.getProperty(), \"What is the username?\");\n+            propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_USERNAME.getProperty(), \"What is the username?\");\n \n-            Boolean setHubPassword = interactions.askYesOrNoWithMessage(\"Would you like to set the password?\",\n+            Boolean setHubPassword = writer.askYesOrNoWithMessage(\"Would you like to set the password?\",\n                 \"WARNING: If you choose to save the settings, this password will be stored in plain text. You can set this password as an environment variable BLACKDUCK_HUB_PASSWORD.\");\n             if (setHubPassword) {\n-                interactions.setPropertyFromSecretQuestion(DetectProperties.BLACKDUCK_PASSWORD.getProperty(), \"What is the password?\");\n+                propertySourceBuilder.setPropertyFromSecretQuestion(DetectProperties.BLACKDUCK_PASSWORD.getProperty(), \"What is the password?\");\n             }\n         }\n \n-        Boolean useProxy = interactions.askYesOrNo(\"Would you like to configure a proxy?\");\n+        Boolean useProxy = writer.askYesOrNo(\"Would you like to configure a proxy?\");\n         if (useProxy) {\n-            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_HOST.getProperty(), \"What is the proxy host?\");\n-            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_PORT.getProperty(), \"What is the proxy port?\");\n-            interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_USERNAME.getProperty(), \"What is the Black Duck username?\");\n-            Boolean setHubPassword = interactions.askYesOrNoWithMessage(\"Would you like to set the Black Duck password?\",\n+            propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_HOST.getProperty(), \"What is the proxy host?\");\n+            propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_PORT.getProperty(), \"What is the proxy port?\");\n+            propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_USERNAME.getProperty(), \"What is the Black Duck username?\");\n+            Boolean setHubPassword = writer.askYesOrNoWithMessage(\"Would you like to set the Black Duck password?\",\n                 \"WARNING: If you choose to save the settings, this password will be stored in plain text. You can set this password as an environment variable BLACKDUCK_PROXY_PASSWORD.\");\n             if (setHubPassword) {\n-                interactions.setPropertyFromSecretQuestion(DetectProperties.BLACKDUCK_PROXY_PASSWORD.getProperty(), \"What is the proxy password?\");\n+                propertySourceBuilder.setPropertyFromSecretQuestion(DetectProperties.BLACKDUCK_PROXY_PASSWORD.getProperty(), \"What is the proxy password?\");\n             }\n-            Boolean useNtlmProxy = interactions.askYesOrNo(\"Do you use a ntlm proxy?\");\n+            Boolean useNtlmProxy = writer.askYesOrNo(\"Do you use a ntlm proxy?\");\n             if (useNtlmProxy) {\n-                interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_NTLM_DOMAIN.getProperty(), \"What is the ntlm proxy domain?\");\n-                interactions.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_NTLM_WORKSTATION.getProperty(), \"What is the ntlm proxy workstation?\");\n+                propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_NTLM_DOMAIN.getProperty(), \"What is the ntlm proxy domain?\");\n+                propertySourceBuilder.setPropertyFromQuestion(DetectProperties.BLACKDUCK_PROXY_NTLM_WORKSTATION.getProperty(), \"What is the ntlm proxy workstation?\");\n             }\n         }\n \n-        Boolean trustCert = interactions.askYesOrNo(\"Would you like to automatically trust certificates?\");\n+        Boolean trustCert = writer.askYesOrNo(\"Would you like to automatically trust certificates?\");\n         if (trustCert) {\n-            interactions.setProperty(DetectProperties.BLACKDUCK_TRUST_CERT.getProperty(), \"true\");\n+            propertySourceBuilder.setProperty(DetectProperties.BLACKDUCK_TRUST_CERT.getProperty(), \"true\");\n         }\n     }\n \n"}}, {"oid": "f1926ee68620a03d761552b86ee22db98c172fff", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/f1926ee68620a03d761552b86ee22db98c172fff", "message": "refactor: Splitting Interactions into a builder and a writer", "committedDate": "2020-10-27T14:27:50Z", "type": "commit"}, {"oid": "e85cc2a08029463783d2499c86590271f1397d83", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/e85cc2a08029463783d2499c86590271f1397d83", "message": "Merge branch 'master' into reduce-cognitive-complexity", "committedDate": "2020-10-28T17:06:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjAzNA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r513696034", "bodyText": "This also, I assume, has nothing to do with this PR, but instead of \"CLI scan\", I believe we usually use \"signature scan\".", "author": "stevebillings", "createdAt": "2020-10-28T19:09:53Z", "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class CliDecisionBranch implements DecisionTree {\n+    private final boolean connectedToBlackDuck;\n+\n+    public CliDecisionBranch(boolean connectedToBlackDuck) {\n+        this.connectedToBlackDuck = connectedToBlackDuck;\n+    }\n+\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        if (connectedToBlackDuck) {\n+            Boolean upload = writer.askYesOrNo(\"Would you like to upload CLI scan results to the Black Duck server?\");", "originalCommit": "f1926ee68620a03d761552b86ee22db98c172fff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwNTk0OA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r517405948", "bodyText": "Very good, I'll change that now.", "author": "rottebds", "createdAt": "2020-11-04T14:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NjAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "d0374e59bb15b4dab94dfce458ab25e180a8465a", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java b/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java\nindex 47240eec8..3c865bd74 100644\n--- a/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java\n+++ b/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java\n\n@@ -22,7 +22,9 @@\n  */\n package com.synopsys.integration.detect.interactive;\n \n-import com.synopsys.integration.detect.configuration.DetectProperties;\n+import static com.synopsys.integration.detect.configuration.DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN;\n+import static com.synopsys.integration.detect.configuration.DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_HOST_URL;\n+import static com.synopsys.integration.detect.configuration.DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_OFFLINE_LOCAL_PATH;\n \n public class CliDecisionBranch implements DecisionTree {\n     private final boolean connectedToBlackDuck;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzAzNw==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r513697037", "bodyText": "along the same vein (irrelevant to this PR), since everything is now called a scanner, it would be good to clarify this language at some point (to specify \"signature scanner\").", "author": "stevebillings", "createdAt": "2020-10-28T19:11:48Z", "path": "src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * synopsys-detect\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.detect.interactive;\n+\n+import com.synopsys.integration.detect.configuration.DetectProperties;\n+\n+public class CliDecisionBranch implements DecisionTree {\n+    private final boolean connectedToBlackDuck;\n+\n+    public CliDecisionBranch(boolean connectedToBlackDuck) {\n+        this.connectedToBlackDuck = connectedToBlackDuck;\n+    }\n+\n+    public void traverse(InteractivePropertySourceBuilder propertySourceBuilder, InteractiveWriter writer) {\n+        if (connectedToBlackDuck) {\n+            Boolean upload = writer.askYesOrNo(\"Would you like to upload CLI scan results to the Black Duck server?\");\n+            if (!upload) {\n+                propertySourceBuilder.setProperty(DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN.getProperty(), \"true\");\n+            }\n+        }\n+\n+        Boolean customScanner = writer.askYesOrNo(\"Would you like to provide a custom scanner?\");", "originalCommit": "f1926ee68620a03d761552b86ee22db98c172fff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwNjMxOA==", "url": "https://github.com/blackducksoftware/synopsys-detect/pull/238#discussion_r517406318", "bodyText": "I'm already making other changes to the dialogue in Interactive mode, so it seems fine to lump those in here. I'll do this now.", "author": "rottebds", "createdAt": "2020-11-04T14:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5NzAzNw=="}], "type": "inlineReview", "revised_code": {"commit": "d0374e59bb15b4dab94dfce458ab25e180a8465a", "chunk": "diff --git a/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java b/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java\nindex 47240eec8..3c865bd74 100644\n--- a/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java\n+++ b/src/main/java/com/synopsys/integration/detect/interactive/CliDecisionBranch.java\n\n@@ -22,7 +22,9 @@\n  */\n package com.synopsys.integration.detect.interactive;\n \n-import com.synopsys.integration.detect.configuration.DetectProperties;\n+import static com.synopsys.integration.detect.configuration.DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_DRY_RUN;\n+import static com.synopsys.integration.detect.configuration.DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_HOST_URL;\n+import static com.synopsys.integration.detect.configuration.DetectProperties.DETECT_BLACKDUCK_SIGNATURE_SCANNER_OFFLINE_LOCAL_PATH;\n \n public class CliDecisionBranch implements DecisionTree {\n     private final boolean connectedToBlackDuck;\n"}}, {"oid": "d0374e59bb15b4dab94dfce458ab25e180a8465a", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d0374e59bb15b4dab94dfce458ab25e180a8465a", "message": "fix: Using correct property environment variable names in Interactive Mode", "committedDate": "2020-10-28T21:05:29Z", "type": "commit"}, {"oid": "635a75250d6e1758654f30715e64398bd3b1d1dd", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/635a75250d6e1758654f30715e64398bd3b1d1dd", "message": "test: Adding InteractiveModeDecisionTreeTest", "committedDate": "2020-10-28T21:05:56Z", "type": "commit"}, {"oid": "06f20ef0d16b406f8517263d024d40255501c059", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/06f20ef0d16b406f8517263d024d40255501c059", "message": "test: Adding more comprehensive tests", "committedDate": "2020-10-30T21:57:00Z", "type": "commit"}, {"oid": "9f3f9dbad95e63414e2a84771b1535ab084b9c9d", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/9f3f9dbad95e63414e2a84771b1535ab084b9c9d", "message": "test: Improving coverage of the unit tests", "committedDate": "2020-11-02T19:30:45Z", "type": "commit"}, {"oid": "68fae7286286d60cf2943cd150952ffe7318173f", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/68fae7286286d60cf2943cd150952ffe7318173f", "message": "test: Converting to nonparameterized for clarity", "committedDate": "2020-11-02T21:58:07Z", "type": "commit"}, {"oid": "d8b86e2e2d141449b82f9b2d36c21628bb8a71aa", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/d8b86e2e2d141449b82f9b2d36c21628bb8a71aa", "message": "Merge branch 'master' into reduce-cognitive-complexity", "committedDate": "2020-11-02T21:58:32Z", "type": "commit"}, {"oid": "a4b698a73147ec8048372673d2d0a83fab9cf4fd", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/a4b698a73147ec8048372673d2d0a83fab9cf4fd", "message": "refactor: CLI Scan and 'scanner' changed to signature scan and signature scanner", "committedDate": "2020-11-04T15:00:08Z", "type": "commit"}, {"oid": "2b614cf449d3444f16eb32e697ef0d269b1108b8", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/2b614cf449d3444f16eb32e697ef0d269b1108b8", "message": "refactor: Using BlackDuckConnectivityChecker instead of rolling our own logic in Interactive mode", "committedDate": "2020-11-11T22:13:14Z", "type": "commit"}, {"oid": "404752f353289e14f4fb91581066b5b6b2d3d53c", "url": "https://github.com/blackducksoftware/synopsys-detect/commit/404752f353289e14f4fb91581066b5b6b2d3d53c", "message": "Merge branch 'master' into reduce-cognitive-complexity", "committedDate": "2020-11-11T22:13:32Z", "type": "commit"}]}