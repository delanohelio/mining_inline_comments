{"pr_number": 3432, "pr_title": "Dispatch v1 flow create to flow hs", "pr_createdAt": "2020-04-29T12:56:18Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3432", "timeline": [{"oid": "c3d64474f9a9f4694d249d4fd0278b48ec1e16b9", "url": "https://github.com/telstra/open-kilda/commit/c3d64474f9a9f4694d249d4fd0278b48ec1e16b9", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-04-29T17:51:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1NTI5Nw==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r418455297", "bodyText": "You don't need eval expression here - instead, you can use source = \"source.switchDpId\".", "author": "surabujin", "createdAt": "2020-05-01T08:06:42Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java", "diffHunk": "@@ -159,6 +160,42 @@ default FlowResponsePayload toFlowResponseOutput(FlowReadResponse r) {\n     @Mapping(target = \"type\", ignore = true)\n     FlowRequest toFlowRequest(FlowRequestV2 request);\n \n+\n+    @Mapping(target = \"flowId\", source = \"id\")\n+    @Mapping(target = \"sourceSwitch\", expression = \"java(request.getSource().getSwitchDpId())\")", "originalCommit": "c3d64474f9a9f4694d249d4fd0278b48ec1e16b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ1ODI2OQ==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r419458269", "bodyText": "fixed", "author": "rtretyak", "createdAt": "2020-05-04T14:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1NTI5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f1e7376caab493f3d9893b6912b260d8e2db5ccd", "chunk": "diff --git a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java\nindex 53eab6e06..f2f24716f 100644\n--- a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java\n+++ b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java\n\n@@ -162,12 +162,12 @@ public interface FlowMapper {\n \n \n     @Mapping(target = \"flowId\", source = \"id\")\n-    @Mapping(target = \"sourceSwitch\", expression = \"java(request.getSource().getSwitchDpId())\")\n-    @Mapping(target = \"destinationSwitch\", expression = \"java(request.getDestination().getSwitchDpId())\")\n-    @Mapping(target = \"sourcePort\", expression = \"java(request.getSource().getPortNumber())\")\n-    @Mapping(target = \"destinationPort\", expression = \"java(request.getDestination().getPortNumber())\")\n-    @Mapping(target = \"sourceVlan\", expression = \"java(request.getSource().getVlanId())\")\n-    @Mapping(target = \"destinationVlan\", expression = \"java(request.getDestination().getVlanId())\")\n+    @Mapping(target = \"sourceSwitch\", source = \"source.switchDpId\")\n+    @Mapping(target = \"destinationSwitch\", source = \"destination.switchDpId\")\n+    @Mapping(target = \"sourcePort\", source = \"source.portNumber\")\n+    @Mapping(target = \"destinationPort\", source = \"destination.portNumber\")\n+    @Mapping(target = \"sourceVlan\", source = \"source.vlanId\")\n+    @Mapping(target = \"destinationVlan\", source = \"destination.vlanId\")\n     @Mapping(target = \"bandwidth\", source = \"maximumBandwidth\")\n     @Mapping(target = \"transitEncapsulationId\", ignore = true)\n     @Mapping(target = \"type\", ignore = true)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MDM0NA==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r418460344", "bodyText": "Should it be placed into flowHsTopic?", "author": "surabujin", "createdAt": "2020-05-01T08:27:13Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java", "diffHunk": "@@ -170,17 +169,17 @@\n         final String correlationId = RequestCorrelationId.getId();\n         logger.info(\"Create flow: {}\", input);\n \n-        FlowCreateRequest payload;\n+        FlowRequest flowRequest;\n         try {\n-            payload = new FlowCreateRequest(new FlowDto(input), input.getDiverseFlowId());\n+            flowRequest =  flowMapper.toFlowCreateRequest(input);\n         } catch (IllegalArgumentException e) {\n             logger.error(\"Can not parse arguments: {}\", e.getMessage(), e);\n             throw new MessageException(correlationId, System.currentTimeMillis(), ErrorType.DATA_INVALID,\n                     e.getMessage(), \"Can not parse arguments of the create flow request\");\n         }\n \n         CommandMessage request = new CommandMessage(\n-                payload, System.currentTimeMillis(), correlationId, Destination.WFM);\n+                flowRequest, System.currentTimeMillis(), correlationId, Destination.WFM);\n \n         return messagingChannel.sendAndGet(topic, request)", "originalCommit": "c3d64474f9a9f4694d249d4fd0278b48ec1e16b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ1ODQxMA==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r419458410", "bodyText": "fixed", "author": "rtretyak", "createdAt": "2020-05-04T14:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MDM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "f1e7376caab493f3d9893b6912b260d8e2db5ccd", "chunk": "diff --git a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java\nindex 36317ce02..6a1fed496 100644\n--- a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java\n+++ b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java\n\n@@ -181,7 +181,7 @@ public class FlowServiceImpl implements FlowService {\n         CommandMessage request = new CommandMessage(\n                 flowRequest, System.currentTimeMillis(), correlationId, Destination.WFM);\n \n-        return messagingChannel.sendAndGet(topic, request)\n+        return messagingChannel.sendAndGet(flowHsTopic, request)\n                 .thenApply(FlowResponse.class::cast)\n                 .thenApply(FlowResponse::getPayload)\n                 .thenApply(flowMapper::toFlowResponseOutput);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MDcyNg==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r418460726", "bodyText": "Are we ready for a complete switch to H&S create? I.e. remove toggle for a fast rollback on v1 create? (Current mapping have such toggle).", "author": "surabujin", "createdAt": "2020-05-01T08:28:35Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java", "diffHunk": "@@ -170,17 +169,17 @@\n         final String correlationId = RequestCorrelationId.getId();\n         logger.info(\"Create flow: {}\", input);\n \n-        FlowCreateRequest payload;\n+        FlowRequest flowRequest;\n         try {\n-            payload = new FlowCreateRequest(new FlowDto(input), input.getDiverseFlowId());\n+            flowRequest =  flowMapper.toFlowCreateRequest(input);", "originalCommit": "c3d64474f9a9f4694d249d4fd0278b48ec1e16b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMjI4Mg==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r420612282", "bodyText": "It should be just tested, whole point to change worker on permanent basis", "author": "timofei-durakov", "createdAt": "2020-05-06T08:05:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MDcyNg=="}], "type": "inlineReview", "revised_code": {"commit": "f1e7376caab493f3d9893b6912b260d8e2db5ccd", "chunk": "diff --git a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java\nindex 36317ce02..6a1fed496 100644\n--- a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java\n+++ b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java\n\n@@ -181,7 +181,7 @@ public class FlowServiceImpl implements FlowService {\n         CommandMessage request = new CommandMessage(\n                 flowRequest, System.currentTimeMillis(), correlationId, Destination.WFM);\n \n-        return messagingChannel.sendAndGet(topic, request)\n+        return messagingChannel.sendAndGet(flowHsTopic, request)\n                 .thenApply(FlowResponse.class::cast)\n                 .thenApply(FlowResponse::getPayload)\n                 .thenApply(flowMapper::toFlowResponseOutput);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MTc5Mg==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r418461792", "bodyText": "I would like to have a copy constructor for DetectConnectedDevicesDto or mapper method to copy such objects (at least it remove code duplication).", "author": "surabujin", "createdAt": "2020-05-01T08:32:45Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java", "diffHunk": "@@ -159,6 +160,42 @@ default FlowResponsePayload toFlowResponseOutput(FlowReadResponse r) {\n     @Mapping(target = \"type\", ignore = true)\n     FlowRequest toFlowRequest(FlowRequestV2 request);\n \n+\n+    @Mapping(target = \"flowId\", source = \"id\")\n+    @Mapping(target = \"sourceSwitch\", expression = \"java(request.getSource().getSwitchDpId())\")\n+    @Mapping(target = \"destinationSwitch\", expression = \"java(request.getDestination().getSwitchDpId())\")\n+    @Mapping(target = \"sourcePort\", expression = \"java(request.getSource().getPortNumber())\")\n+    @Mapping(target = \"destinationPort\", expression = \"java(request.getDestination().getPortNumber())\")\n+    @Mapping(target = \"sourceVlan\", expression = \"java(request.getSource().getVlanId())\")\n+    @Mapping(target = \"destinationVlan\", expression = \"java(request.getDestination().getVlanId())\")\n+    @Mapping(target = \"bandwidth\", source = \"maximumBandwidth\")\n+    @Mapping(target = \"transitEncapsulationId\", ignore = true)\n+    @Mapping(target = \"type\", ignore = true)\n+    @Mapping(target = \"detectConnectedDevices\", ignore = true)\n+    FlowRequest toFlowRequest(FlowCreatePayload request);\n+\n+    /**\n+     * Map FlowCreatePayload.\n+     *\n+     * @param source {@link FlowCreatePayload} instance.\n+     * @return {@link FlowRequest} instance.\n+     */\n+    default FlowRequest toFlowCreateRequest(FlowCreatePayload source) {\n+        FlowRequest target = toFlowRequest(source).toBuilder().type(Type.CREATE).build();\n+        DetectConnectedDevicesDto detectConnectedDevicesDto = new DetectConnectedDevicesDto();\n+        if (source.getSource().getDetectConnectedDevices() != null) {", "originalCommit": "c3d64474f9a9f4694d249d4fd0278b48ec1e16b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMTc3MA==", "url": "https://github.com/telstra/open-kilda/pull/3432#discussion_r420611770", "bodyText": "in v1 detect info was part of flow endpoint, in v2 it's a separate entity.\nv1: FlowCreatePayload::FlowEndpointPayload::DetectConnectedDevicesPayload(separation based on endpoint level\nv2: FlowRequest::DetectConnectedDevicesDto - single object, separation based on field level,\ne.g. srcLldp/dstLldp\nDoes it make sense to implement such mapper? Could see little gain here.", "author": "timofei-durakov", "createdAt": "2020-05-06T08:04:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2MTc5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f1e7376caab493f3d9893b6912b260d8e2db5ccd", "chunk": "diff --git a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java\nindex 53eab6e06..f2f24716f 100644\n--- a/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java\n+++ b/src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/converter/FlowMapper.java\n\n@@ -162,12 +162,12 @@ public interface FlowMapper {\n \n \n     @Mapping(target = \"flowId\", source = \"id\")\n-    @Mapping(target = \"sourceSwitch\", expression = \"java(request.getSource().getSwitchDpId())\")\n-    @Mapping(target = \"destinationSwitch\", expression = \"java(request.getDestination().getSwitchDpId())\")\n-    @Mapping(target = \"sourcePort\", expression = \"java(request.getSource().getPortNumber())\")\n-    @Mapping(target = \"destinationPort\", expression = \"java(request.getDestination().getPortNumber())\")\n-    @Mapping(target = \"sourceVlan\", expression = \"java(request.getSource().getVlanId())\")\n-    @Mapping(target = \"destinationVlan\", expression = \"java(request.getDestination().getVlanId())\")\n+    @Mapping(target = \"sourceSwitch\", source = \"source.switchDpId\")\n+    @Mapping(target = \"destinationSwitch\", source = \"destination.switchDpId\")\n+    @Mapping(target = \"sourcePort\", source = \"source.portNumber\")\n+    @Mapping(target = \"destinationPort\", source = \"destination.portNumber\")\n+    @Mapping(target = \"sourceVlan\", source = \"source.vlanId\")\n+    @Mapping(target = \"destinationVlan\", source = \"destination.vlanId\")\n     @Mapping(target = \"bandwidth\", source = \"maximumBandwidth\")\n     @Mapping(target = \"transitEncapsulationId\", ignore = true)\n     @Mapping(target = \"type\", ignore = true)\n"}}, {"oid": "f1e7376caab493f3d9893b6912b260d8e2db5ccd", "url": "https://github.com/telstra/open-kilda/commit/f1e7376caab493f3d9893b6912b260d8e2db5ccd", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-04T13:50:50Z", "type": "forcePushed"}, {"oid": "3e2f43c2849978c083d105b00f4fc41075c1d73e", "url": "https://github.com/telstra/open-kilda/commit/3e2f43c2849978c083d105b00f4fc41075c1d73e", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-05T08:45:20Z", "type": "forcePushed"}, {"oid": "fd593fb254b74f6a1d20a1e7fff05172532024de", "url": "https://github.com/telstra/open-kilda/commit/fd593fb254b74f6a1d20a1e7fff05172532024de", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-06T07:53:55Z", "type": "forcePushed"}, {"oid": "ea35f76b7c07896fe7be92d2006e5268ef9409a4", "url": "https://github.com/telstra/open-kilda/commit/ea35f76b7c07896fe7be92d2006e5268ef9409a4", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-06T08:06:07Z", "type": "forcePushed"}, {"oid": "be3f3a51738f25aa8e502b57bf64fe06baa1cd9f", "url": "https://github.com/telstra/open-kilda/commit/be3f3a51738f25aa8e502b57bf64fe06baa1cd9f", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-06T08:44:05Z", "type": "forcePushed"}, {"oid": "67655453be9d76eb59b32cfd70889365e655405d", "url": "https://github.com/telstra/open-kilda/commit/67655453be9d76eb59b32cfd70889365e655405d", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-07T15:23:51Z", "type": "forcePushed"}, {"oid": "1c618725c3395afc12fa319df35e831f80268db4", "url": "https://github.com/telstra/open-kilda/commit/1c618725c3395afc12fa319df35e831f80268db4", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-12T09:10:00Z", "type": "forcePushed"}, {"oid": "94a4ceeb6c4dd7d9b4866c5c149df165c9b1d08d", "url": "https://github.com/telstra/open-kilda/commit/94a4ceeb6c4dd7d9b4866c5c149df165c9b1d08d", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-18T13:20:31Z", "type": "forcePushed"}, {"oid": "17dfaf9cb94390f8861f76cc2e305fe32113b7bc", "url": "https://github.com/telstra/open-kilda/commit/17dfaf9cb94390f8861f76cc2e305fe32113b7bc", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-18T15:40:22Z", "type": "forcePushed"}, {"oid": "fc3f468813b001a1a582bfb7acc4d71992047702", "url": "https://github.com/telstra/open-kilda/commit/fc3f468813b001a1a582bfb7acc4d71992047702", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-19T08:38:42Z", "type": "forcePushed"}, {"oid": "c408785182b712d564615435f4501303089e0753", "url": "https://github.com/telstra/open-kilda/commit/c408785182b712d564615435f4501303089e0753", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-19T14:12:23Z", "type": "forcePushed"}, {"oid": "8768b396d05430cc5f9a4f1aaceba62cbc3d2fbb", "url": "https://github.com/telstra/open-kilda/commit/8768b396d05430cc5f9a4f1aaceba62cbc3d2fbb", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-20T10:53:32Z", "type": "commit"}, {"oid": "8768b396d05430cc5f9a4f1aaceba62cbc3d2fbb", "url": "https://github.com/telstra/open-kilda/commit/8768b396d05430cc5f9a4f1aaceba62cbc3d2fbb", "message": "Dispatch v1 flow create to flow hs\n\n- changed worker for flow v1 create request\n- fixed compile time warnings", "committedDate": "2020-05-20T10:53:32Z", "type": "forcePushed"}]}