{"pr_number": 3926, "pr_title": "Zookeeper connections safe", "pr_createdAt": "2020-12-16T11:52:53Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3926", "timeline": [{"oid": "98b0e2da59af2b4c79efe31d4b83eff12b94aea5", "url": "https://github.com/telstra/open-kilda/commit/98b0e2da59af2b4c79efe31d4b83eff12b94aea5", "message": "- improvement in world map popup info for maximize and minimize the window\n\nresolves:#3855", "committedDate": "2020-12-02T08:45:12Z", "type": "commit"}, {"oid": "fb0b53183c4b48d9253885bf79f94dbae50f8009", "url": "https://github.com/telstra/open-kilda/commit/fb0b53183c4b48d9253885bf79f94dbae50f8009", "message": "Add flow-id for attendant traffic stat entries\n\nAdd new tag \"type\" for flow.raw.{packets,bytes,bits} metrics. And manage\nto fill of `flowid` tag for these metrics for flow attendant\ncookies/rules (server42 ingress rule).", "committedDate": "2020-12-02T10:38:34Z", "type": "commit"}, {"oid": "412871bbb2d48c9bb86c4b95dc69c9c32cfab13f", "url": "https://github.com/telstra/open-kilda/commit/412871bbb2d48c9bb86c4b95dc69c9c32cfab13f", "message": "turn on the multiTable mode by default for func tests", "committedDate": "2020-12-11T05:34:04Z", "type": "commit"}, {"oid": "d2fd37a1b28496b037f2ecdb10acec728c5db41e", "url": "https://github.com/telstra/open-kilda/commit/d2fd37a1b28496b037f2ecdb10acec728c5db41e", "message": "Fix flow loops for single switch flows", "committedDate": "2020-12-11T08:43:33Z", "type": "commit"}, {"oid": "2dfb7128012c4e03bf2b5e7e562fac52d1be7c40", "url": "https://github.com/telstra/open-kilda/commit/2dfb7128012c4e03bf2b5e7e562fac52d1be7c40", "message": "Fix swap endpoints for looped flows", "committedDate": "2020-12-14T14:38:30Z", "type": "commit"}, {"oid": "a80c859b84d6bf077491536b5d36fc93325c6a95", "url": "https://github.com/telstra/open-kilda/commit/a80c859b84d6bf077491536b5d36fc93325c6a95", "message": "add swapEndpoint test for flowLoop (#3894)", "committedDate": "2020-12-14T14:38:42Z", "type": "commit"}, {"oid": "d1bc20df3b6469916e335cd73d24efc514dbe335", "url": "https://github.com/telstra/open-kilda/commit/d1bc20df3b6469916e335cd73d24efc514dbe335", "message": "removed commented code", "committedDate": "2020-12-15T05:01:12Z", "type": "commit"}, {"oid": "b09e8fb65ac1d34eacbf3aefc2f5af60bab64622", "url": "https://github.com/telstra/open-kilda/commit/b09e8fb65ac1d34eacbf3aefc2f5af60bab64622", "message": "Reimplement round trip discovery event processing\n\nGetting rid of periodic round trip status emitting out of the network\ntopology watcher service and rework round trip events registration and\nprocessing alike one-way discovery events.", "committedDate": "2020-12-15T07:23:29Z", "type": "commit"}, {"oid": "78c57b62075dd9b1a2cb28a95dbb908a23854c1f", "url": "https://github.com/telstra/open-kilda/commit/78c57b62075dd9b1a2cb28a95dbb908a23854c1f", "message": "Remove transient from abstract bolt config field", "committedDate": "2020-12-15T07:28:28Z", "type": "commit"}, {"oid": "480ef14a77a9546d7dc7c9c055173641201cce0e", "url": "https://github.com/telstra/open-kilda/commit/480ef14a77a9546d7dc7c9c055173641201cce0e", "message": "Lock GRPC low level particularity into a single wrapper", "committedDate": "2020-12-15T08:30:06Z", "type": "commit"}, {"oid": "dd93dd488300302e0223e31c76d14c5cb48e47c5", "url": "https://github.com/telstra/open-kilda/commit/dd93dd488300302e0223e31c76d14c5cb48e47c5", "message": "Remove some unused classes in network topology", "committedDate": "2020-12-15T15:00:50Z", "type": "commit"}, {"oid": "5f0a54ea842f4fd77f6b9fd10204a79269600878", "url": "https://github.com/telstra/open-kilda/commit/5f0a54ea842f4fd77f6b9fd10204a79269600878", "message": "Fix multi-reroute spec\n\n- Cleanup verifier now also checks 'timeUnstable' on isls", "committedDate": "2020-12-17T12:09:08Z", "type": "commit"}, {"oid": "80de242f1285cc77167b6dba3467ea5eaaca3d75", "url": "https://github.com/telstra/open-kilda/commit/80de242f1285cc77167b6dba3467ea5eaaca3d75", "message": "improve \"System is able to detect and sync missing flowLoop rules\"", "committedDate": "2020-12-17T13:09:17Z", "type": "commit"}, {"oid": "df51fca0f0611c2535f03ee6f2189d937d3e7b69", "url": "https://github.com/telstra/open-kilda/commit/df51fca0f0611c2535f03ee6f2189d937d3e7b69", "message": "improve \"System does not retry after global timeout for reroute operation\"", "committedDate": "2020-12-17T13:09:17Z", "type": "commit"}, {"oid": "1580b0cd050296d71e3e9ef96aa408558bf29281", "url": "https://github.com/telstra/open-kilda/commit/1580b0cd050296d71e3e9ef96aa408558bf29281", "message": "improve ThrottlingRerouteSpec", "committedDate": "2020-12-17T13:09:18Z", "type": "commit"}, {"oid": "da61cafa0c3be57aec0ebcc0eb693e5913456b1c", "url": "https://github.com/telstra/open-kilda/commit/da61cafa0c3be57aec0ebcc0eb693e5913456b1c", "message": "unignore Server42RttSpec for hardware env", "committedDate": "2020-12-17T13:09:18Z", "type": "commit"}, {"oid": "7c70e63e535704ac4a52d2d080bab4b8ed89ea20", "url": "https://github.com/telstra/open-kilda/commit/7c70e63e535704ac4a52d2d080bab4b8ed89ea20", "message": "fix imports and improve 'cleanup' RoundTripIslSpec", "committedDate": "2020-12-17T13:09:18Z", "type": "commit"}, {"oid": "42de4a0ca593db76560fde1fb047aac5203e3db7", "url": "https://github.com/telstra/open-kilda/commit/42de4a0ca593db76560fde1fb047aac5203e3db7", "message": "ignore grpc test according to 3901", "committedDate": "2020-12-17T13:09:18Z", "type": "commit"}, {"oid": "3fd1117b9cc7bf3b7bac627a5bd04a50064216fc", "url": "https://github.com/telstra/open-kilda/commit/3fd1117b9cc7bf3b7bac627a5bd04a50064216fc", "message": "Added FL role and region to FL logs", "committedDate": "2020-12-18T09:09:04Z", "type": "commit"}, {"oid": "186db4f9aff2ccc75185e87dddefd65fae8270c7", "url": "https://github.com/telstra/open-kilda/commit/186db4f9aff2ccc75185e87dddefd65fae8270c7", "message": "refactored client", "committedDate": "2020-12-20T17:55:01Z", "type": "forcePushed"}, {"oid": "401c012ad2816f8e6c62f80e95e08da85b21743b", "url": "https://github.com/telstra/open-kilda/commit/401c012ad2816f8e6c62f80e95e08da85b21743b", "message": "Zk Connection clean up", "committedDate": "2020-12-20T19:35:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTk4NA==", "url": "https://github.com/telstra/open-kilda/pull/3926#discussion_r546531984", "bodyText": "note: safeRefreshConnection contains isRefreshIntervalPassed inside. So here we have double cheking. But This double checking saving us from calling synchronized method", "author": "niksv", "createdAt": "2020-12-21T06:33:08Z", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -60,42 +60,81 @@ public ZkClient(String id, String serviceName, String connectionString, int sess\n         this.lastRefreshAttempt = Instant.MIN;\n     }\n \n-    public abstract void init();\n+    /**\n+     * Init client.\n+     */\n+    public void init() {\n+        try {\n+            if (!isConnectionAlive()) {\n+                initZk();\n+            }\n+        } catch (IOException e) {\n+            log.error(String.format(\"Couldn't init ZooKeeper for component %s with run id %s and \"\n+                    + \"connection string %s. Error: %s\", serviceName, id, connectionString, e.getMessage()), e);\n+            closeZk();\n+        }\n+        if (isConnectionAlive()) {\n+            try {\n+                validateZNodes();\n+            } catch (KeeperException | InterruptedException | IOException | IllegalStateException e) {\n+                log.error(String.format(\"Couldn't validate nodes for component %s with run id %s and \"\n+                        + \"connection string %s. Error: %s\", serviceName, id, connectionString, e.getMessage()), e);\n+\n+            }\n+            subscribeNodes();\n+        }\n+    }\n \n     String getPaths(String... paths) {\n         return Paths.get(ROOT, paths).toString();\n     }\n \n-    boolean refreshConnection(KeeperState state) throws IOException {\n-        if (state == KeeperState.Disconnected || state == KeeperState.Expired) {\n-            closeZk();\n-            initZk();\n-            init();\n+    boolean refreshConnection(KeeperState state) {\n+        if ((state == KeeperState.Disconnected || state == KeeperState.Expired) && isRefreshIntervalPassed()) {", "originalCommit": "401c012ad2816f8e6c62f80e95e08da85b21743b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67c664d0641b3f7a7637ef4c5e9d575651b0b79c", "chunk": "diff --git a/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java b/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java\nindex f1832e907..03a251e31 100644\n--- a/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java\n+++ b/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java\n\n@@ -60,52 +60,29 @@ public abstract class ZkClient implements Watcher {\n         this.lastRefreshAttempt = Instant.MIN;\n     }\n \n-    /**\n-     * Init client.\n-     */\n-    public void init() {\n-        try {\n-            if (!isConnectionAlive()) {\n-                initZk();\n-            }\n-        } catch (IOException e) {\n-            log.error(String.format(\"Couldn't init ZooKeeper for component %s with run id %s and \"\n-                    + \"connection string %s. Error: %s\", serviceName, id, connectionString, e.getMessage()), e);\n-            closeZk();\n-        }\n-        if (isConnectionAlive()) {\n-            try {\n-                validateZNodes();\n-            } catch (KeeperException | InterruptedException | IOException | IllegalStateException e) {\n-                log.error(String.format(\"Couldn't validate nodes for component %s with run id %s and \"\n-                        + \"connection string %s. Error: %s\", serviceName, id, connectionString, e.getMessage()), e);\n-\n-            }\n-            subscribeNodes();\n-        }\n-    }\n+    public abstract void init();\n \n     String getPaths(String... paths) {\n         return Paths.get(ROOT, paths).toString();\n     }\n \n-    boolean refreshConnection(KeeperState state) {\n-        if ((state == KeeperState.Disconnected || state == KeeperState.Expired) && isRefreshIntervalPassed()) {\n-            safeRefreshConnection();\n+    boolean refreshConnection(KeeperState state) throws IOException {\n+        if (state == KeeperState.Disconnected || state == KeeperState.Expired) {\n+            closeZk();\n+            initZk();\n+            init();\n             return true;\n         }\n         return false;\n     }\n \n-    @VisibleForTesting\n-    boolean isRefreshIntervalPassed() {\n+    protected boolean isRefreshIntervalPassed() {\n         return Instant.now().isAfter(lastRefreshAttempt.plus(connectionRefreshInterval, ChronoUnit.SECONDS));\n     }\n \n     void closeZk() {\n         if (zookeeper != null) {\n             try {\n-                log.info(\"Going to close zookeeper connection 0x{}\", Long.toHexString(zookeeper.getSessionId()));\n                 zookeeper.close();\n             } catch (InterruptedException e) {\n                 log.warn(String.format(\"Failed to close connection to zk %s\", connectionString), e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4Nzc3OA==", "url": "https://github.com/telstra/open-kilda/pull/3926#discussion_r546587778", "bodyText": "You are making an assumption that nothing can happen with nodes while there where no connection to zk... as for me it is too optimistic.", "author": "surabujin", "createdAt": "2020-12-21T09:06:14Z", "path": "src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java", "diffHunk": "@@ -141,18 +167,31 @@ protected void ensureZNode(byte[] value, String... path) throws KeeperException,\n         }\n     }\n \n-    void validateNodes() throws KeeperException, InterruptedException, IOException {\n+    @VisibleForTesting\n+    void validateZNodes() throws KeeperException, InterruptedException, IOException {\n         ensureZNode(serviceName);\n         ensureZNode(serviceName, id);\n+        validateNodes();\n+        nodesValidated = true;", "originalCommit": "401c012ad2816f8e6c62f80e95e08da85b21743b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMzY1MQ==", "url": "https://github.com/telstra/open-kilda/pull/3926#discussion_r546623651", "bodyText": "not exactly, if zk is reconnected the flag is reseted to false", "author": "timofei-durakov", "createdAt": "2020-12-21T10:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4Nzc3OA=="}], "type": "inlineReview", "revised_code": {"commit": "67c664d0641b3f7a7637ef4c5e9d575651b0b79c", "chunk": "diff --git a/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java b/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java\nindex f1832e907..03a251e31 100644\n--- a/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java\n+++ b/src-java/blue-green/src/main/java/org/openkilda/bluegreen/ZkClient.java\n\n@@ -167,31 +141,18 @@ public abstract class ZkClient implements Watcher {\n         }\n     }\n \n-    @VisibleForTesting\n-    void validateZNodes() throws KeeperException, InterruptedException, IOException {\n+    void validateNodes() throws KeeperException, InterruptedException, IOException {\n         ensureZNode(serviceName);\n         ensureZNode(serviceName, id);\n-        validateNodes();\n-        nodesValidated = true;\n-\n     }\n \n-    abstract void subscribeNodes();\n-\n-    abstract void validateNodes() throws KeeperException, InterruptedException, IOException;\n-\n     /**\n      * Checks that connection to zookeeper is alive and nodes were validated.\n      */\n-    boolean isConnectionAlive() {\n-        // there is a state CONNECTING, that doesn't allow to use getState().isAlive()\n-        return zookeeper != null && zookeeper.getState().isConnected();\n-    }\n-\n-    /**\n-     * Checks whether client is in operational state.\n-     */\n-    public boolean isActive() {\n-        return isConnectionAlive() && nodesValidated;\n+    public boolean isConnectionAlive() {\n+        if (zookeeper == null || !nodesValidated) {\n+            return false;\n+        }\n+        return zookeeper.getState().isAlive();\n     }\n }\n"}}, {"oid": "67c664d0641b3f7a7637ef4c5e9d575651b0b79c", "url": "https://github.com/telstra/open-kilda/commit/67c664d0641b3f7a7637ef4c5e9d575651b0b79c", "message": "Merge pull request #3933 from telstra/fix/fl_logs\n\nAdded FL role and region to local FL logs", "committedDate": "2020-12-21T12:36:55Z", "type": "commit"}, {"oid": "8b8432153b576971407ff00a2f2027a8861f1acd", "url": "https://github.com/telstra/open-kilda/commit/8b8432153b576971407ff00a2f2027a8861f1acd", "message": "Merge pull request #3929 from telstra/functional/fix_multi_reroute\n\nFix multi-reroute spec", "committedDate": "2020-12-21T12:37:19Z", "type": "commit"}, {"oid": "23f32cb57142a7ea318dd51093129c3f29c59389", "url": "https://github.com/telstra/open-kilda/commit/23f32cb57142a7ea318dd51093129c3f29c59389", "message": "Merge pull request #3925 from telstra/network-topology-garbage-collection\n\nRemove some unused classes in network topology", "committedDate": "2020-12-21T12:37:59Z", "type": "commit"}, {"oid": "62a372c2e716f36bf590d804ca194a7817d505da", "url": "https://github.com/telstra/open-kilda/commit/62a372c2e716f36bf590d804ca194a7817d505da", "message": "Merge pull request #3917 from telstra/remove_transient\n\nRemove transient from abstract bolt config field", "committedDate": "2020-12-21T12:38:26Z", "type": "commit"}, {"oid": "8ffd5405c3fa9881e87adc45b54abb481434ae13", "url": "https://github.com/telstra/open-kilda/commit/8ffd5405c3fa9881e87adc45b54abb481434ae13", "message": "Merge pull request #3909 from telstra/improvement/world-map-infopopup\n\n Improvement in world map popup info for maximize and minimize the window", "committedDate": "2020-12-21T12:40:02Z", "type": "commit"}, {"oid": "6dd619ee2a7ea1e756a43c9d6852bd9122da985e", "url": "https://github.com/telstra/open-kilda/commit/6dd619ee2a7ea1e756a43c9d6852bd9122da985e", "message": "Merge pull request #3898 from telstra/add-flow-id-for-attendant-traffic-stat-entries\n\nAdd flow-id for attendant traffic stat entries", "committedDate": "2020-12-21T12:40:29Z", "type": "commit"}, {"oid": "13112dfc99bd6ecff2de0fe99543706f692712af", "url": "https://github.com/telstra/open-kilda/commit/13112dfc99bd6ecff2de0fe99543706f692712af", "message": "Merge pull request #3890 from telstra/test/enable_multiTable\n\nturn on the multiTable mode by default for func tests", "committedDate": "2020-12-21T12:41:05Z", "type": "commit"}, {"oid": "fa92a059fb37865cf5ed3a272436b1550c082be3", "url": "https://github.com/telstra/open-kilda/commit/fa92a059fb37865cf5ed3a272436b1550c082be3", "message": "Merge pull request #3877 from telstra/reimplement-round-trip-discovery-event-processing\n\nReimplement round trip discovery event processing", "committedDate": "2020-12-21T12:41:42Z", "type": "commit"}, {"oid": "1a9cd11c0aecc0f6113ade2492a0d25892c06715", "url": "https://github.com/telstra/open-kilda/commit/1a9cd11c0aecc0f6113ade2492a0d25892c06715", "message": "Merge pull request #3823 from telstra/lock-grpc-low-level-particularity-into-a-single-wrapper\n\nLock GRPC low level particularity into a single wrapper", "committedDate": "2020-12-21T12:42:24Z", "type": "commit"}, {"oid": "85df827e4e07145b236b747961adc14cab8053f8", "url": "https://github.com/telstra/open-kilda/commit/85df827e4e07145b236b747961adc14cab8053f8", "message": "Merge pull request #3892 from telstra/fix-flow-loop-swap-endpoint\n\nFix swap endpoints for looped flows", "committedDate": "2020-12-21T12:44:13Z", "type": "commit"}, {"oid": "69c310f6240d8d13dbabf1d36a0e7e53d65a47e5", "url": "https://github.com/telstra/open-kilda/commit/69c310f6240d8d13dbabf1d36a0e7e53d65a47e5", "message": "Merge pull request #3928 from telstra/test/improvements\n\nTest/improvements", "committedDate": "2020-12-21T15:49:17Z", "type": "commit"}, {"oid": "f94311222b009b4909986077689aac9e83159092", "url": "https://github.com/telstra/open-kilda/commit/f94311222b009b4909986077689aac9e83159092", "message": "Zk Connection clean up", "committedDate": "2020-12-21T18:33:58Z", "type": "forcePushed"}, {"oid": "a669f7a5142aa1c389a32db4444861e9cc8e9b13", "url": "https://github.com/telstra/open-kilda/commit/a669f7a5142aa1c389a32db4444861e9cc8e9b13", "message": "Zk Connection clean up", "committedDate": "2020-12-21T18:47:10Z", "type": "commit"}, {"oid": "a669f7a5142aa1c389a32db4444861e9cc8e9b13", "url": "https://github.com/telstra/open-kilda/commit/a669f7a5142aa1c389a32db4444861e9cc8e9b13", "message": "Zk Connection clean up", "committedDate": "2020-12-21T18:47:10Z", "type": "forcePushed"}]}