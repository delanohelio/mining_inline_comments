{"pr_number": 3653, "pr_title": "Add missing fields to flow patch operation.", "pr_createdAt": "2020-07-22T14:31:23Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3653", "timeline": [{"oid": "f7ce9dbf8e75d55561fe2f7433a68d0afe38e115", "url": "https://github.com/telstra/open-kilda/commit/f7ce9dbf8e75d55561fe2f7433a68d0afe38e115", "message": "Added missing fields to flow patch operation.", "committedDate": "2020-07-22T14:28:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3OTg0Ng==", "url": "https://github.com/telstra/open-kilda/pull/3653#discussion_r459879846", "bodyText": "please remove duplicate code, updateRequiredBySource and updateRequiredByDestination are almost the same", "author": "timofei-durakov", "createdAt": "2020-07-24T06:51:12Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/FlowOperationsService.java", "diffHunk": "@@ -357,77 +354,140 @@ public Flow updateFlow(FlowOperationsCarrier carrier, FlowPatch flowPatch) throw\n \n     @VisibleForTesting\n     UpdateFlowResult.UpdateFlowResultBuilder prepareFlowUpdateResult(FlowPatch flowPatch, Flow flow) {\n-        boolean updateRequired = flowPatch.getPathComputationStrategy() != null\n+        boolean updateRequired = updateRequiredByPathComputationStrategy(flowPatch, flow);\n+\n+        updateRequired |= updateRequiredBySource(flowPatch, flow);\n+        updateRequired |= updateRequiredByDestination(flowPatch, flow);\n+\n+        updateRequired |= flowPatch.getBandwidth() != null && flow.getBandwidth() != flowPatch.getBandwidth();\n+        updateRequired |= flowPatch.getAllocateProtectedPath() != null\n+                && !flowPatch.getAllocateProtectedPath().equals(flow.isAllocateProtectedPath());\n+\n+        updateRequired |= updateRequiredByDiverseFlowIdField(flowPatch, flow);\n+\n+        updateRequired |= flowPatch.getIgnoreBandwidth() != null\n+                && flow.isIgnoreBandwidth() != flowPatch.getIgnoreBandwidth();\n+\n+        updateRequired |= flowPatch.getEncapsulationType() != null\n+                && !flow.getEncapsulationType().equals(flowPatch.getEncapsulationType());\n+\n+        return UpdateFlowResult.builder()\n+                .needUpdateFlow(updateRequired);\n+    }\n+\n+    private boolean updateRequiredByPathComputationStrategy(FlowPatch flowPatch, Flow flow) {\n+        boolean changedStrategy = flowPatch.getPathComputationStrategy() != null\n                 && !flowPatch.getPathComputationStrategy().equals(flow.getPathComputationStrategy());\n         boolean changedMaxLatency = flowPatch.getMaxLatency() != null\n                 && !flowPatch.getMaxLatency().equals(flow.getMaxLatency());\n         boolean strategyIsMaxLatency =\n                 PathComputationStrategy.MAX_LATENCY.equals(flowPatch.getPathComputationStrategy())\n-                || flowPatch.getPathComputationStrategy() == null\n-                && PathComputationStrategy.MAX_LATENCY.equals(flow.getPathComputationStrategy());\n-        updateRequired |= changedMaxLatency && strategyIsMaxLatency;\n-\n-        // source endpoint\n-        updateRequired |= flowPatch.getSourceSwitch() != null\n-                && !flow.getSrcSwitch().getSwitchId().equals(flowPatch.getSourceSwitch());\n-        updateRequired |= flowPatch.getSourcePort() != null\n-                && flow.getSrcPort() != flowPatch.getSourcePort();\n-        updateRequired |= flowPatch.getSourceVlan() != null\n-                && flow.getSrcVlan() != flowPatch.getSourceVlan();\n-\n-        // destination endpoint\n-        updateRequired |= flowPatch.getDestinationSwitch() != null\n-                && !flow.getDestSwitch().getSwitchId().equals(flowPatch.getDestinationSwitch());\n-        updateRequired |= flowPatch.getDestinationPort() != null\n-                && flow.getDestPort() != flowPatch.getDestinationPort();\n-        updateRequired |= flowPatch.getDestinationVlan() != null\n-                && flow.getDestVlan() != flowPatch.getDestinationVlan();\n+                        || flowPatch.getPathComputationStrategy() == null\n+                        && PathComputationStrategy.MAX_LATENCY.equals(flow.getPathComputationStrategy());\n+        return changedStrategy || changedMaxLatency && strategyIsMaxLatency;\n+    }\n \n-        updateRequired |= flowPatch.getBandwidth() != null && flow.getBandwidth() != flowPatch.getBandwidth();\n-        updateRequired |= flowPatch.getAllocateProtectedPath() != null\n-                && !flowPatch.getAllocateProtectedPath().equals(flow.isAllocateProtectedPath());\n+    private boolean updateRequiredBySource(FlowPatch flowPatch, Flow flow) {", "originalCommit": "f7ce9dbf8e75d55561fe2f7433a68d0afe38e115", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}