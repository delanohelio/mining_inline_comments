{"pr_number": 3408, "pr_title": "Server 42 RTT: Added Output rules", "pr_createdAt": "2020-04-23T06:13:28Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3408", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MDQ1NA==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r413540454", "bodyText": ".outputPort(properties.getServer42Port()) could not be moved above because if() else section will be extended in next patch PRs", "author": "niksv", "createdAt": "2020-04-23T06:22:35Z", "path": "src-java/swmanager-topology/swmanager-storm-topology/src/main/java/org/openkilda/wfm/topology/switchmanager/service/impl/CommandBuilderImpl.java", "diffHunk": "@@ -121,10 +129,60 @@ public CommandBuilderImpl(PersistenceManager persistenceManager, FlowResourcesCo\n         return commands;\n     }\n \n-    private List<BaseInstallFlow> buildInstallDefaultRuleCommands(SwitchId switchId, List<Long> switchRules) {\n+    /**\n+     * Some default rules require additional properties to be installed. This method filters such rules.\n+     */\n+    private static boolean isDefaultRuleWithSpecialRequirements(long cookie) {\n+        return cookie == SERVER_42_OUTPUT_VLAN_COOKIE\n+                || cookie == SERVER_42_OUTPUT_VXLAN_COOKIE;\n+    }\n+\n+    /**\n+     * Some default rules require additional properties to be installed. This method creates commands for such rules.\n+     */\n+    private List<BaseInstallFlow> buildInstallSpecialDefaultRuleCommands(SwitchId switchId, List<Long> switchRules) {\n+        SwitchProperties properties = switchPropertiesRepository.findBySwitchId(switchId).orElseThrow(\n+                () -> new IllegalStateException(format(\"Switch properties not found for switch %s\", switchId)));\n+\n         List<BaseInstallFlow> commands = new ArrayList<>();\n+        for (Long cookie : switchRules) {\n+            InstallServer42FlowBuilder command = InstallServer42Flow.builder()\n+                    .transactionId(transactionIdGenerator.generate())\n+                    .cookie(cookie)\n+                    .switchId(switchId)\n+                    .multiTable(properties.isMultiTable())\n+                    .inputPort(0)\n+                    .outputPort(0)\n+                    .server42MacAddress(properties.getServer42MacAddress());\n+\n+            if (cookie == SERVER_42_OUTPUT_VLAN_COOKIE) {\n+                commands.add(command\n+                        .id(\"SWMANAGER_SERVER_42_OUTPUT_VLAN_RULE_INSTALL\")\n+                        .outputPort(properties.getServer42Port())\n+                        .build());\n+            } else if (cookie == SERVER_42_OUTPUT_VXLAN_COOKIE) {\n+                commands.add(command\n+                        .id(\"SWMANAGER_SERVER_42_OUTPUT_VXLAN_RULE_INSTALL\")\n+                        .outputPort(properties.getServer42Port())\n+                        .build());", "originalCommit": "c17c7c16be9c6fafff9e7199dc98537fc61b7c75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "864f69b810dacc08dd1cbc1c2bd4c95dfcc23d55", "url": "https://github.com/telstra/open-kilda/commit/864f69b810dacc08dd1cbc1c2bd4c95dfcc23d55", "message": "Server 42 RTT: Added Output rules", "committedDate": "2020-04-23T08:29:23Z", "type": "forcePushed"}, {"oid": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "url": "https://github.com/telstra/open-kilda/commit/0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "message": "Server 42 RTT: Added Output rules", "committedDate": "2020-04-23T17:13:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMTA1Mg==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414501052", "bodyText": "nit: fieldActions", "author": "dpoltavets", "createdAt": "2020-04-24T11:25:20Z", "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "diffHunk": "@@ -47,12 +48,12 @@\n \n     @JsonCreator\n     public FlowApplyActions(\n-            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_field\") FlowSetFieldAction fieldAction,\n+            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_fields\") List<FlowSetFieldAction> fieldAction,", "originalCommit": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMzg0Mw==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414623843", "bodyText": "fixed", "author": "niksv", "createdAt": "2020-04-24T14:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMTA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "chunk": "diff --git a/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java b/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java\nindex 0b6544b1d..139c37273 100644\n--- a/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java\n+++ b/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java\n\n@@ -48,12 +48,13 @@ public class FlowApplyActions implements Serializable {\n \n     @JsonCreator\n     public FlowApplyActions(\n-            @JsonProperty(\"output\") String flowOutput, @JsonProperty(\"set_fields\") List<FlowSetFieldAction> fieldAction,\n+            @JsonProperty(\"output\") String flowOutput,\n+            @JsonProperty(\"set_field_actions\") List<FlowSetFieldAction> setFieldActions,\n             @JsonProperty(\"push_vlan\") String pushVlan, @JsonProperty(\"POP_VLAN\") String popVlan,\n             @JsonProperty(\"meter\") String meter, @JsonProperty(\"push_vxlan\") String pushVxlan,\n             @JsonProperty(\"group\") String group, @JsonProperty(\"copy_field\") FlowCopyFieldAction copyFieldAction) {\n         this.flowOutput = flowOutput;\n-        this.fieldActions = fieldAction;\n+        this.setFieldActions = setFieldActions;\n         this.pushVlan = pushVlan;\n         this.popVlan = popVlan;\n         this.meter = meter;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMDE2OQ==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414600169", "bodyText": "why not setFieldActions?", "author": "timofei-durakov", "createdAt": "2020-04-24T14:01:57Z", "path": "src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java", "diffHunk": "@@ -30,8 +31,8 @@\n \n     @JsonProperty(\"output\")\n     private String flowOutput;\n-    @JsonProperty(\"set_field\")\n-    private FlowSetFieldAction fieldAction;\n+    @JsonProperty(\"set_fields\")\n+    private List<FlowSetFieldAction> fieldActions;", "originalCommit": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMzA1MA==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414623050", "bodyText": "renamed", "author": "niksv", "createdAt": "2020-04-24T14:33:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMDE2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "chunk": "diff --git a/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java b/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java\nindex 0b6544b1d..139c37273 100644\n--- a/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java\n+++ b/src-java/base-topology/base-messaging/src/main/java/org/openkilda/messaging/info/rule/FlowApplyActions.java\n\n@@ -31,8 +31,8 @@ public class FlowApplyActions implements Serializable {\n \n     @JsonProperty(\"output\")\n     private String flowOutput;\n-    @JsonProperty(\"set_fields\")\n-    private List<FlowSetFieldAction> fieldActions;\n+    @JsonProperty(\"set_field_actions\")\n+    private List<FlowSetFieldAction> setFieldActions;\n     @JsonProperty(\"push_vlan\")\n     private String pushVlan;\n     @JsonProperty(\"POP_VLAN\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMjU1Mg==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414602552", "bodyText": "why this method is removed?", "author": "timofei-durakov", "createdAt": "2020-04-24T14:05:27Z", "path": "src-java/floodlight-service/floodlight-api/src/main/java/org/openkilda/messaging/command/switches/SwitchRulesInstallRequest.java", "diffHunk": "@@ -124,13 +131,4 @@ public void setIslPorts(List<Integer> islPorts) {\n     public void setFlowPorts(List<Integer> flowPorts) {\n         this.flowPorts = flowPorts;\n     }\n-", "originalCommit": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyNjIyMA==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414626220", "bodyText": "Two reasons:\n\nIt's invalid because it contains only 3 fields but class has much more.\nTo do not add new field into toString() method, because it will be generated be @DaTa annotation", "author": "niksv", "createdAt": "2020-04-24T14:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMjU1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMzc4Nw==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414603787", "bodyText": "potential npe?", "author": "timofei-durakov", "createdAt": "2020-04-24T14:07:14Z", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "diffHunk": "@@ -787,6 +808,8 @@ private void doInstallSwitchRules(final CommandMessage message) {\n \n         final IKafkaProducerService producerService = getKafkaProducer();\n         final String replyToTopic = context.getKafkaSwitchManagerTopic();\n+        Integer server42Port = request.getServer42Port();", "originalCommit": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzOTU0Nw==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414639547", "bodyText": "fixed", "author": "niksv", "createdAt": "2020-04-24T14:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwMzc4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "chunk": "diff --git a/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java b/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java\nindex 76f39d71f..afbb6eae2 100644\n--- a/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java\n+++ b/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java\n\n@@ -808,8 +808,6 @@ class RecordHandler implements Runnable {\n \n         final IKafkaProducerService producerService = getKafkaProducer();\n         final String replyToTopic = context.getKafkaSwitchManagerTopic();\n-        Integer server42Port = request.getServer42Port();\n-        MacAddress server42MacAddress = request.getServer42MacAddress();\n \n         DatapathId dpid = DatapathId.of(request.getSwitchId().toLong());\n         ISwitchManager switchManager = context.getSwitchManager();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNDMzNA==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414604334", "bodyText": "the same", "author": "timofei-durakov", "createdAt": "2020-04-24T14:08:01Z", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java", "diffHunk": "@@ -1103,6 +1147,13 @@ private void doDeleteSwitchRules(final CommandMessage message) {\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_TRANSIT_COOKIE);\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_INGRESS_COOKIE);\n                     }\n+                    if (request.isServer42FlowRtt()) {\n+                        Integer server42Port = request.getServer42Port();", "originalCommit": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MDYwMA==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414640600", "bodyText": "fixed", "author": "niksv", "createdAt": "2020-04-24T14:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNDMzNA=="}], "type": "inlineReview", "revised_code": {"commit": "a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "chunk": "diff --git a/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java b/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java\nindex 76f39d71f..afbb6eae2 100644\n--- a/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java\n+++ b/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/kafka/RecordHandler.java\n\n@@ -1147,10 +1168,9 @@ class RecordHandler implements Runnable {\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_TRANSIT_COOKIE);\n                         processInstallDefaultFlowByCookie(request.getSwitchId(), ARP_INGRESS_COOKIE);\n                     }\n-                    if (request.isServer42FlowRtt()) {\n-                        Integer server42Port = request.getServer42Port();\n-                        MacAddress server42MacAddress = request.getServer42MacAddress();\n-\n+                    Integer server42Port = request.getServer42Port();\n+                    MacAddress server42MacAddress = request.getServer42MacAddress();\n+                    if (request.isServer42FlowRtt() && server42Port != null && server42MacAddress != null) {\n                         switchManager.installServer42OutputVlanFlow(dpid, server42Port, server42MacAddress);\n                         switchManager.installServer42OutputVxlanFlow(dpid, server42Port, server42MacAddress);\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNTMzNQ==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414605335", "bodyText": "max_len of what? please lead a comment", "author": "timofei-durakov", "createdAt": "2020-04-24T14:09:24Z", "path": "src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java", "diffHunk": "@@ -48,6 +50,7 @@\n      * OVS software switch manufacturer constant value.\n      */\n     public static final String OVS_MANUFACTURER = \"Nicira, Inc.\";\n+    private static final int MAX_LEN = 0xFFFFFFFF;", "originalCommit": "0b8d7e603819ed5eb9c489f5018de77d0ef6c777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0NDcxNQ==", "url": "https://github.com/telstra/open-kilda/pull/3408#discussion_r414644715", "bodyText": "fixed", "author": "niksv", "createdAt": "2020-04-24T15:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNTMzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "chunk": "diff --git a/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java b/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java\nindex f0a84046b..5e378c6ea 100644\n--- a/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java\n+++ b/src-java/floodlight-service/floodlight-modules/src/main/java/org/openkilda/floodlight/switchmanager/SwitchFlowUtils.java\n\n@@ -50,7 +50,10 @@ public final class SwitchFlowUtils {\n      * OVS software switch manufacturer constant value.\n      */\n     public static final String OVS_MANUFACTURER = \"Nicira, Inc.\";\n-    private static final int MAX_LEN = 0xFFFFFFFF;\n+    /**\n+     * Indicates the maximum size in bytes for a packet which will be send from switch to the controller.\n+     */\n+    private static final int MAX_PACKET_LEN = 0xFFFFFFFF;\n \n     private SwitchFlowUtils() {\n     }\n"}}, {"oid": "a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "url": "https://github.com/telstra/open-kilda/commit/a746ad7ef229610a57cd0cd747e79cc14a5df9cb", "message": "Server 42 RTT: Added Output rules", "committedDate": "2020-04-24T15:05:32Z", "type": "forcePushed"}, {"oid": "98e7b54b0982ce90689a2a3875a91ff8b099974a", "url": "https://github.com/telstra/open-kilda/commit/98e7b54b0982ce90689a2a3875a91ff8b099974a", "message": "Server 42 RTT: Added Output rules", "committedDate": "2020-04-24T15:22:06Z", "type": "forcePushed"}, {"oid": "4259ef1ab8b0f5a8730c1b7a19eb20cfbaf597f7", "url": "https://github.com/telstra/open-kilda/commit/4259ef1ab8b0f5a8730c1b7a19eb20cfbaf597f7", "message": "Server 42 RTT: Added Output rules", "committedDate": "2020-04-27T12:29:54Z", "type": "commit"}, {"oid": "4259ef1ab8b0f5a8730c1b7a19eb20cfbaf597f7", "url": "https://github.com/telstra/open-kilda/commit/4259ef1ab8b0f5a8730c1b7a19eb20cfbaf597f7", "message": "Server 42 RTT: Added Output rules", "committedDate": "2020-04-27T12:29:54Z", "type": "forcePushed"}]}