{"pr_number": 3923, "pr_title": "Workaround for loss of switch disconnect event", "pr_createdAt": "2020-12-15T14:53:46Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3923", "timeline": [{"oid": "01786329a296bb0c92d9a7a402ecce854f252d8e", "url": "https://github.com/telstra/open-kilda/commit/01786329a296bb0c92d9a7a402ecce854f252d8e", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-15T15:03:03Z", "type": "forcePushed"}, {"oid": "b1a61c9d3ac3cc98381ad63ce21ccbc19b7d39f8", "url": "https://github.com/telstra/open-kilda/commit/b1a61c9d3ac3cc98381ad63ce21ccbc19b7d39f8", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-16T13:46:29Z", "type": "forcePushed"}, {"oid": "3c6b025bd25a31c5a56fa290588699ee30bed2c8", "url": "https://github.com/telstra/open-kilda/commit/3c6b025bd25a31c5a56fa290588699ee30bed2c8", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-16T15:31:18Z", "type": "forcePushed"}, {"oid": "b9951c7affb6d0029f0cc631e4ee264259c63e67", "url": "https://github.com/telstra/open-kilda/commit/b9951c7affb6d0029f0cc631e4ee264259c63e67", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-16T16:49:44Z", "type": "forcePushed"}, {"oid": "e256a1d3e1b5a32098822ffa676c2c74a5d5eb06", "url": "https://github.com/telstra/open-kilda/commit/e256a1d3e1b5a32098822ffa676c2c74a5d5eb06", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-18T07:32:41Z", "type": "forcePushed"}, {"oid": "2d7c6858ecd0cfc91c82839a4f17f7b1ec617bc5", "url": "https://github.com/telstra/open-kilda/commit/2d7c6858ecd0cfc91c82839a4f17f7b1ec617bc5", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-18T07:42:08Z", "type": "forcePushed"}, {"oid": "b1fb5fa96e4b9583985adbba2ac2819a9049e0aa", "url": "https://github.com/telstra/open-kilda/commit/b1fb5fa96e4b9583985adbba2ac2819a9049e0aa", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-18T10:21:48Z", "type": "forcePushed"}, {"oid": "50229570508abae8e83f5a16ca719d8d128961db", "url": "https://github.com/telstra/open-kilda/commit/50229570508abae8e83f5a16ca719d8d128961db", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-18T13:27:54Z", "type": "forcePushed"}, {"oid": "d4de12a09a1ee6dc6a57fad165ed96d6f6cb78a7", "url": "https://github.com/telstra/open-kilda/commit/d4de12a09a1ee6dc6a57fad165ed96d6f6cb78a7", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-22T12:18:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1MDczOA==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r547450738", "bodyText": "it's equal 3 in main.yaml, why we have different value here?", "author": "niksv", "createdAt": "2020-12-22T18:59:34Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/NetworkTopologyConfig.java", "diffHunk": "@@ -92,6 +92,10 @@ default boolean isBfdEnabled() {\n     @Default(\"60\")\n     int getPortAntiFlapStatsDumpingInterval();\n \n+    @Key(\"switch.offline.generation.lag\")\n+    @Default(\"2\")", "originalCommit": "d4de12a09a1ee6dc6a57fad165ed96d6f6cb78a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkxNzMwNQ==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r547917305", "bodyText": "Because I have forgotten to change it in second place (with 2 we have instability in switch lost detection - possible false positive detection).", "author": "surabujin", "createdAt": "2020-12-23T11:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1MDczOA=="}], "type": "inlineReview", "revised_code": {"commit": "d949da9e6360286364d0347f8892114a85a94942", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/NetworkTopologyConfig.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/NetworkTopologyConfig.java\nindex 95eb07285..5e850f8ca 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/NetworkTopologyConfig.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/NetworkTopologyConfig.java\n\n@@ -93,7 +93,7 @@ public interface NetworkTopologyConfig extends AbstractTopologyConfig {\n     int getPortAntiFlapStatsDumpingInterval();\n \n     @Key(\"switch.offline.generation.lag\")\n-    @Default(\"2\")\n+    @Default(\"3\")\n     long getSwitchOfflineGenerationLag();\n \n     @Configuration\n"}}, {"oid": "d949da9e6360286364d0347f8892114a85a94942", "url": "https://github.com/telstra/open-kilda/commit/d949da9e6360286364d0347f8892114a85a94942", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2020-12-23T11:42:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMxNDc1MQ==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r576314751", "bodyText": "Could you revise the name? It's not obvious what \"dumpGeneration\", \"actualGeneration\" and \"OfflineGenerationLag\" in the context of SwitchFsm.", "author": "sergii-iakovenko", "createdAt": "2021-02-15T16:40:07Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/sw/SwitchFsm.java", "diffHunk": "@@ -74,7 +75,11 @@\n     private final SwitchRepository switchRepository;\n     private final SwitchPropertiesRepository switchPropertiesRepository;\n     private final KildaConfigurationRepository kildaConfigurationRepository;\n+\n+    @Getter\n     private final SwitchId switchId;\n+    @Getter\n+    private long dumpGeneration;", "originalCommit": "d949da9e6360286364d0347f8892114a85a94942", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE2ODU5MQ==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r613168591", "bodyText": "I have tried, don't think that it become more obvious. :(", "author": "surabujin", "createdAt": "2021-04-14T11:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMxNDc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "904199849d33ca70a92f41159b96da59cc261b39", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/sw/SwitchFsm.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/sw/SwitchFsm.java\nindex 764a6d427..38c57d1c1 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/sw/SwitchFsm.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/sw/SwitchFsm.java\n\n@@ -79,7 +79,7 @@ public final class SwitchFsm extends AbstractBaseFsm<SwitchFsm, SwitchFsmState,\n     @Getter\n     private final SwitchId switchId;\n     @Getter\n-    private long dumpGeneration;\n+    private long lastPeriodicDumpGenerationContainingSwitch;\n \n     private final Set<SwitchFeature> features = new HashSet<>();\n     private final Map<Integer, AbstractPort> portByNumber = new HashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM1NDY0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r576354642", "bodyText": "Could you add some javadoc with description what this class is for?", "author": "sergii-iakovenko", "createdAt": "2021-02-15T17:58:18Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/utils/GenerationTracker.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.network.utils;\n+\n+import lombok.Getter;\n+\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.Map;\n+\n+public class GenerationTracker<T> {", "originalCommit": "d949da9e6360286364d0347f8892114a85a94942", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE2ODY4OQ==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r613168689", "bodyText": "Same here.", "author": "surabujin", "createdAt": "2021-04-14T11:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM1NDY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "904199849d33ca70a92f41159b96da59cc261b39", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/utils/GenerationTracker.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/utils/GenerationTracker.java\nindex 37359e7b6..6ddb192af 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/utils/GenerationTracker.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/utils/GenerationTracker.java\n\n@@ -21,9 +21,13 @@ import java.util.HashMap;\n import java.util.LinkedList;\n import java.util.Map;\n \n+/**\n+ * Tracks stream of random identifiers (defined as type T) - assign each new/untracked identifier numeric\n+ * value(generation). Performs automatic cleanup of deprecated identifiers (in each moment keeps up to N identifiers).\n+ */\n public class GenerationTracker<T> {\n     @Getter\n-    private long actual = -1;\n+    private long lastSeenGeneration = -1;\n \n     private final long trackingLimit;\n \n"}}, {"oid": "6a3a38f81522d33b49f8820f4bd015c96424e3e3", "url": "https://github.com/telstra/open-kilda/commit/6a3a38f81522d33b49f8820f4bd015c96424e3e3", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2021-04-07T15:43:32Z", "type": "forcePushed"}, {"oid": "904199849d33ca70a92f41159b96da59cc261b39", "url": "https://github.com/telstra/open-kilda/commit/904199849d33ca70a92f41159b96da59cc261b39", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2021-04-14T11:34:37Z", "type": "forcePushed"}, {"oid": "39fc1d9a44abd5f723825fa74cb1c6d398dfe7e7", "url": "https://github.com/telstra/open-kilda/commit/39fc1d9a44abd5f723825fa74cb1c6d398dfe7e7", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2021-04-16T15:52:16Z", "type": "commit"}, {"oid": "39fc1d9a44abd5f723825fa74cb1c6d398dfe7e7", "url": "https://github.com/telstra/open-kilda/commit/39fc1d9a44abd5f723825fa74cb1c6d398dfe7e7", "message": "Workaround for loss of switch disconnect event\n\nReimplementation loss of switch disconnect event handling to avoid\nunintended offline of all switches (and down of all flows) on network\ntopology replug.", "committedDate": "2021-04-16T15:52:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjQxMzgzNw==", "url": "https://github.com/telstra/open-kilda/pull/3923#discussion_r616413837", "bodyText": "I hope we don't break some stuff. =)", "author": "nikitamarchenko", "createdAt": "2021-04-20T07:22:54Z", "path": "src-java/base-topology/base-storm-topology/src/main/java/org/openkilda/wfm/share/bolt/MonotonicClock.java", "diffHunk": "@@ -81,7 +81,7 @@ protected void handleInput(Tuple input) {\n     @Override\n     protected void init() {\n         if (baseClock == null) {\n-            baseClock = Clock.systemDefaultZone();\n+            baseClock = Clock.systemUTC();", "originalCommit": "39fc1d9a44abd5f723825fa74cb1c6d398dfe7e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}