{"pr_number": 3215, "pr_title": "Allow flowhs speaker request retry for all error codes", "pr_createdAt": "2020-02-17T16:53:54Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3215", "timeline": [{"oid": "4a13555f121aa1493f3ae7a565aa3c0458bf8241", "url": "https://github.com/telstra/open-kilda/commit/4a13555f121aa1493f3ae7a565aa3c0458bf8241", "message": "Allow flowhs speaker request retry for all error codes\n\nFlow H&S create operation use separate set of tools to perform speaker\nrequest retries. It allow to retry only for SWITCH_UNAVAILABE error.\nOther CRUD operation do retry on any error code. Rework create operation\nto mimic speaker retry logic of all other CRUD operations.", "committedDate": "2020-03-03T15:20:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2MDc4Mg==", "url": "https://github.com/telstra/open-kilda/pull/3215#discussion_r405660782", "bodyText": "nit: It's the only constructor, why not just assign the field?", "author": "sergii-iakovenko", "createdAt": "2020-04-08T16:37:51Z", "path": "src-java/flowhs-topology/flowhs-storm-topology/src/main/java/org/openkilda/wfm/topology/flowhs/fsm/common/SpeakerCommandFsm.java", "diffHunk": "@@ -30,20 +29,28 @@\n import org.squirrelframework.foundation.fsm.StateMachineBuilder;\n import org.squirrelframework.foundation.fsm.StateMachineBuilderFactory;\n \n+import java.util.HashSet;\n+import java.util.Set;\n+\n @Slf4j\n @Getter\n public final class SpeakerCommandFsm\n         extends WithCommandContextFsm<SpeakerCommandFsm, State, Event, SpeakerFlowSegmentResponse> {\n \n     private final FlowSegmentRequest request;\n     private final FlowCreateHubCarrier carrier;\n+    private final Set<ErrorCode> giveUpErrors = new HashSet<>();\n+    private final int allowedRetriesCount;\n     private int remainingRetries;\n \n-    private SpeakerCommandFsm(FlowSegmentRequest request, FlowCreateHubCarrier carrier, Integer retriesLimit) {\n+    private SpeakerCommandFsm(\n+            FlowSegmentRequest request, FlowCreateHubCarrier carrier, Set<ErrorCode> giveUpErrors,\n+            Integer retriesLimit) {\n         super(new CommandContext(request.getMessageContext().getCorrelationId()));\n         this.request = request;\n         this.carrier = carrier;\n-        this.remainingRetries = retriesLimit;\n+        this.giveUpErrors.addAll(giveUpErrors);", "originalCommit": "4a13555f121aa1493f3ae7a565aa3c0458bf8241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4a73e09df6ee364860f910e19f3ed6e5d69c618b", "url": "https://github.com/telstra/open-kilda/commit/4a73e09df6ee364860f910e19f3ed6e5d69c618b", "message": "Allow flowhs speaker request retry for all error codes\n\nFlow H&S create operation use separate set of tools to perform speaker\nrequest retries. It allow to retry only for SWITCH_UNAVAILABE error.\nOther CRUD operation do retry on any error code. Rework create operation\nto mimic speaker retry logic of all other CRUD operations.", "committedDate": "2020-05-15T09:47:06Z", "type": "commit"}, {"oid": "4a73e09df6ee364860f910e19f3ed6e5d69c618b", "url": "https://github.com/telstra/open-kilda/commit/4a73e09df6ee364860f910e19f3ed6e5d69c618b", "message": "Allow flowhs speaker request retry for all error codes\n\nFlow H&S create operation use separate set of tools to perform speaker\nrequest retries. It allow to retry only for SWITCH_UNAVAILABE error.\nOther CRUD operation do retry on any error code. Rework create operation\nto mimic speaker retry logic of all other CRUD operations.", "committedDate": "2020-05-15T09:47:06Z", "type": "forcePushed"}]}