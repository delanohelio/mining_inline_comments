{"pr_number": 3144, "pr_title": "ARP Part 5: Connected devices topology", "pr_createdAt": "2020-01-24T14:14:03Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3144", "timeline": [{"oid": "0fd12a0c9fb1852c99fc993fabc79ddd6e2cde95", "url": "https://github.com/telstra/open-kilda/commit/0fd12a0c9fb1852c99fc993fabc79ddd6e2cde95", "message": "ARP Part 5: Connected devices topology\n\nPart of #3118", "committedDate": "2020-02-06T05:49:05Z", "type": "forcePushed"}, {"oid": "6192cfa747a1290713908b569064ad415c08c4a0", "url": "https://github.com/telstra/open-kilda/commit/6192cfa747a1290713908b569064ad415c08c4a0", "message": "ARP Part 5: Connected devices topology\n\nPart of #3118", "committedDate": "2020-02-06T12:56:10Z", "type": "forcePushed"}, {"oid": "5f89628279f0ebd3ae97d405cda39b7e745eccb0", "url": "https://github.com/telstra/open-kilda/commit/5f89628279f0ebd3ae97d405cda39b7e745eccb0", "message": "Added Arp devices in responsec", "committedDate": "2020-02-06T13:30:15Z", "type": "forcePushed"}, {"oid": "38541a0c5e41b61d2c7885b18c0606621afeffd1", "url": "https://github.com/telstra/open-kilda/commit/38541a0c5e41b61d2c7885b18c0606621afeffd1", "message": "Added Arp devices in responsec", "committedDate": "2020-02-10T13:22:57Z", "type": "forcePushed"}, {"oid": "5bdaeff298cb8bab74cf2475941eb056de93fa30", "url": "https://github.com/telstra/open-kilda/commit/5bdaeff298cb8bab74cf2475941eb056de93fa30", "message": "Added Arp devices in responsec", "committedDate": "2020-02-12T13:47:45Z", "type": "forcePushed"}, {"oid": "0081c562b16fa1404e348c2bc6718a0bf02c1256", "url": "https://github.com/telstra/open-kilda/commit/0081c562b16fa1404e348c2bc6718a0bf02c1256", "message": "Added Arp devices in responses", "committedDate": "2020-02-13T06:31:38Z", "type": "forcePushed"}, {"oid": "bd070d8a4664c9d2ba5afb1e16c8f48745d51a4b", "url": "https://github.com/telstra/open-kilda/commit/bd070d8a4664c9d2ba5afb1e16c8f48745d51a4b", "message": "Added Arp devices in responses", "committedDate": "2020-02-13T12:03:57Z", "type": "forcePushed"}, {"oid": "dff2f42523cf9e0ea0606862cae5d79babcee52f", "url": "https://github.com/telstra/open-kilda/commit/dff2f42523cf9e0ea0606862cae5d79babcee52f", "message": "Added Arp devices in responses", "committedDate": "2020-02-13T12:11:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4NTUyOA==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r380185528", "bodyText": "Why do you need this sleep?", "author": "rozdy", "createdAt": "2020-02-17T13:37:22Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/test/java/org/openkilda/wfm/topology/connecteddevices/service/PacketServiceTest.java", "diffHunk": "@@ -130,6 +135,20 @@ public void testHandleLldpDataDifferentTimeOnUpdate() throws InterruptedExceptio\n         assertNotEquals(devices.iterator().next().getTimeFirstSeen(), devices.iterator().next().getTimeLastSeen());\n     }\n \n+    @Test\n+    public void testHandleArpDataDifferentTimeOnUpdate() throws InterruptedException {\n+        // create\n+        packetService.handleArpData(createArpInfoData());\n+\n+        Thread.sleep(10);", "originalCommit": "dff2f42523cf9e0ea0606862cae5d79babcee52f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4OTk0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r380189942", "bodyText": "this test checks that create and update operations has different timestams. MessageData class (parent of ArpInfoData) sets timestamp in constructor by System.currentTImeMills(). Some time this test is too fast and timestamp in create and update requests are equal. to guarantee different timestamp I added sleep(10) here", "author": "niksv", "createdAt": "2020-02-17T13:45:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4NTUyOA=="}], "type": "inlineReview", "revised_code": {"commit": "d183832ba4d03f49f9b2252c422d2123d0b09ad3", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/test/java/org/openkilda/wfm/topology/connecteddevices/service/PacketServiceTest.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/test/java/org/openkilda/wfm/topology/connecteddevices/service/PacketServiceTest.java\nindex 60e73f5ee..c4cbf3847 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/test/java/org/openkilda/wfm/topology/connecteddevices/service/PacketServiceTest.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/test/java/org/openkilda/wfm/topology/connecteddevices/service/PacketServiceTest.java\n\n@@ -135,7 +135,6 @@ public class PacketServiceTest extends Neo4jBasedTest {\n         assertNotEquals(devices.iterator().next().getTimeFirstSeen(), devices.iterator().next().getTimeLastSeen());\n     }\n \n-    @Test\n     public void testHandleArpDataDifferentTimeOnUpdate() throws InterruptedException {\n         // create\n         packetService.handleArpData(createArpInfoData());\n"}}, {"oid": "6f5ad81750c34810b5647182b5f19e022af5a8a5", "url": "https://github.com/telstra/open-kilda/commit/6f5ad81750c34810b5647182b5f19e022af5a8a5", "message": "Added Arp devices in responses", "committedDate": "2020-02-18T03:53:59Z", "type": "forcePushed"}, {"oid": "9fa137bbcc316531cebcc49b64bbee1790c7d2f2", "url": "https://github.com/telstra/open-kilda/commit/9fa137bbcc316531cebcc49b64bbee1790c7d2f2", "message": "Added Arp devices in responses", "committedDate": "2020-02-18T13:03:55Z", "type": "forcePushed"}, {"oid": "e08d840778507a6d19fa9500d37d292f6e1aeec4", "url": "https://github.com/telstra/open-kilda/commit/e08d840778507a6d19fa9500d37d292f6e1aeec4", "message": "Added Arp devices in responses", "committedDate": "2020-02-19T06:52:14Z", "type": "forcePushed"}, {"oid": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "url": "https://github.com/telstra/open-kilda/commit/5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "message": "Added Arp devices in responses", "committedDate": "2020-02-19T12:18:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MTEzNQ==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382451135", "bodyText": "Can we figure out which packet here, LLDP or ARP? If we can, then it would be better to log more accurate information.", "author": "dpoltavets", "createdAt": "2020-02-21T08:25:46Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -94,28 +103,60 @@ public void handleLldpData(LldpInfoData data) {\n         });\n     }\n \n-    private FlowRelatedData findFlowRelatedData(LldpInfoData data) {\n-        if (data.getCookie() == LLDP_POST_INGRESS_COOKIE) {\n+    /**\n+     * Handle Arp info data.\n+     */\n+    public void handleArpData(ArpInfoData data) {\n+        transactionManager.doInTransaction(() -> {\n+\n+            FlowRelatedData flowRelatedData = findFlowRelatedData(data);\n+            if (flowRelatedData == null) {\n+                return;\n+            }\n+\n+            SwitchConnectedDevice device = getOrBuildArpDevice(data, flowRelatedData.originalVlan);\n+\n+            if (device == null) {\n+                return;\n+            }\n+\n+            device.setTimeLastSeen(Instant.ofEpochMilli(data.getTimestamp()));\n+            device.setFlowId(flowRelatedData.flowId);\n+            device.setSource(flowRelatedData.source);\n+\n+            switchConnectedDeviceRepository.createOrUpdate(device);\n+        });\n+    }\n+\n+    private FlowRelatedData findFlowRelatedData(ConnectedDevicePacketBase data) {\n+        long cookie = data.getCookie();\n+        if (cookie == LLDP_POST_INGRESS_COOKIE\n+                || cookie == ARP_POST_INGRESS_COOKIE) {\n             return findFlowRelatedDataForVlanFlow(data);\n-        } else if (data.getCookie() == LLDP_POST_INGRESS_VXLAN_COOKIE) {\n+        } else if (cookie == LLDP_POST_INGRESS_VXLAN_COOKIE\n+                || cookie == ARP_POST_INGRESS_VXLAN_COOKIE) {\n             return findFlowRelatedDataForVxlanFlow(data);\n-        } else if (data.getCookie() == LLDP_POST_INGRESS_ONE_SWITCH_COOKIE) {\n+        } else if (cookie == LLDP_POST_INGRESS_ONE_SWITCH_COOKIE\n+                || cookie == ARP_POST_INGRESS_ONE_SWITCH_COOKIE) {\n             return findFlowRelatedDataForOneSwitchFlow(data);\n-        } else if (data.getCookie() == LLDP_INPUT_PRE_DROP_COOKIE\n-                || data.getCookie() == LLDP_INGRESS_COOKIE\n-                || data.getCookie() == LLDP_TRANSIT_COOKIE) {\n+        } else if (cookie == LLDP_INPUT_PRE_DROP_COOKIE\n+                || cookie == LLDP_INGRESS_COOKIE\n+                || cookie == LLDP_TRANSIT_COOKIE\n+                || cookie == ARP_INPUT_PRE_DROP_COOKIE\n+                || cookie == ARP_INGRESS_COOKIE\n+                || cookie == ARP_TRANSIT_COOKIE) {\n             int vlan = data.getVlans().isEmpty() ? 0 : data.getVlans().get(0);\n             return new FlowRelatedData(vlan, null, null);\n         }\n-        log.warn(\"Got LLDP packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n+        log.warn(\"Got LLDP or ARP packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -148,15 +148,15 @@ public class PacketService {\n             int vlan = data.getVlans().isEmpty() ? 0 : data.getVlans().get(0);\n             return new FlowRelatedData(vlan, null, null);\n         }\n-        log.warn(\"Got LLDP or ARP packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n-                data.getCookie(), data.getSwitchId(), data.getPortNumber(), data.getVlans());\n+        log.warn(\"Got {} packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n+                getPacketName(data), data.getCookie(), data.getSwitchId(), data.getPortNumber(), data.getVlans());\n         return null;\n     }\n \n     @VisibleForTesting\n     FlowRelatedData findFlowRelatedDataForVlanFlow(ConnectedDevicePacketBase data) {\n         if (data.getVlans().isEmpty()) {\n-            log.warn(\"Got LLDP or ARP packet without transit VLAN: {}\", data);\n+            log.warn(\"Got {} packet without transit VLAN: {}\", getPacketName(data), data);\n             return null;\n         }\n         int transitVlan = data.getVlans().get(0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MTcxOQ==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382451719", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:27:23Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -94,28 +103,60 @@ public void handleLldpData(LldpInfoData data) {\n         });\n     }\n \n-    private FlowRelatedData findFlowRelatedData(LldpInfoData data) {\n-        if (data.getCookie() == LLDP_POST_INGRESS_COOKIE) {\n+    /**\n+     * Handle Arp info data.\n+     */\n+    public void handleArpData(ArpInfoData data) {\n+        transactionManager.doInTransaction(() -> {\n+\n+            FlowRelatedData flowRelatedData = findFlowRelatedData(data);\n+            if (flowRelatedData == null) {\n+                return;\n+            }\n+\n+            SwitchConnectedDevice device = getOrBuildArpDevice(data, flowRelatedData.originalVlan);\n+\n+            if (device == null) {\n+                return;\n+            }\n+\n+            device.setTimeLastSeen(Instant.ofEpochMilli(data.getTimestamp()));\n+            device.setFlowId(flowRelatedData.flowId);\n+            device.setSource(flowRelatedData.source);\n+\n+            switchConnectedDeviceRepository.createOrUpdate(device);\n+        });\n+    }\n+\n+    private FlowRelatedData findFlowRelatedData(ConnectedDevicePacketBase data) {\n+        long cookie = data.getCookie();\n+        if (cookie == LLDP_POST_INGRESS_COOKIE\n+                || cookie == ARP_POST_INGRESS_COOKIE) {\n             return findFlowRelatedDataForVlanFlow(data);\n-        } else if (data.getCookie() == LLDP_POST_INGRESS_VXLAN_COOKIE) {\n+        } else if (cookie == LLDP_POST_INGRESS_VXLAN_COOKIE\n+                || cookie == ARP_POST_INGRESS_VXLAN_COOKIE) {\n             return findFlowRelatedDataForVxlanFlow(data);\n-        } else if (data.getCookie() == LLDP_POST_INGRESS_ONE_SWITCH_COOKIE) {\n+        } else if (cookie == LLDP_POST_INGRESS_ONE_SWITCH_COOKIE\n+                || cookie == ARP_POST_INGRESS_ONE_SWITCH_COOKIE) {\n             return findFlowRelatedDataForOneSwitchFlow(data);\n-        } else if (data.getCookie() == LLDP_INPUT_PRE_DROP_COOKIE\n-                || data.getCookie() == LLDP_INGRESS_COOKIE\n-                || data.getCookie() == LLDP_TRANSIT_COOKIE) {\n+        } else if (cookie == LLDP_INPUT_PRE_DROP_COOKIE\n+                || cookie == LLDP_INGRESS_COOKIE\n+                || cookie == LLDP_TRANSIT_COOKIE\n+                || cookie == ARP_INPUT_PRE_DROP_COOKIE\n+                || cookie == ARP_INGRESS_COOKIE\n+                || cookie == ARP_TRANSIT_COOKIE) {\n             int vlan = data.getVlans().isEmpty() ? 0 : data.getVlans().get(0);\n             return new FlowRelatedData(vlan, null, null);\n         }\n-        log.warn(\"Got LLDP packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n+        log.warn(\"Got LLDP or ARP packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n                 data.getCookie(), data.getSwitchId(), data.getPortNumber(), data.getVlans());\n         return null;\n     }\n \n     @VisibleForTesting\n-    FlowRelatedData findFlowRelatedDataForVlanFlow(LldpInfoData data) {\n+    FlowRelatedData findFlowRelatedDataForVlanFlow(ConnectedDevicePacketBase data) {\n         if (data.getVlans().isEmpty()) {\n-            log.warn(\"Got LLDP packet without transit VLAN: {}\", data);\n+            log.warn(\"Got LLDP or ARP packet without transit VLAN: {}\", data);", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -148,15 +148,15 @@ public class PacketService {\n             int vlan = data.getVlans().isEmpty() ? 0 : data.getVlans().get(0);\n             return new FlowRelatedData(vlan, null, null);\n         }\n-        log.warn(\"Got LLDP or ARP packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n-                data.getCookie(), data.getSwitchId(), data.getPortNumber(), data.getVlans());\n+        log.warn(\"Got {} packet from unknown rule with cookie {}. Switch {}, port {}, vlans {}\",\n+                getPacketName(data), data.getCookie(), data.getSwitchId(), data.getPortNumber(), data.getVlans());\n         return null;\n     }\n \n     @VisibleForTesting\n     FlowRelatedData findFlowRelatedDataForVlanFlow(ConnectedDevicePacketBase data) {\n         if (data.getVlans().isEmpty()) {\n-            log.warn(\"Got LLDP or ARP packet without transit VLAN: {}\", data);\n+            log.warn(\"Got {} packet without transit VLAN: {}\", getPacketName(data), data);\n             return null;\n         }\n         int transitVlan = data.getVlans().get(0);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MTc3MQ==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382451771", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:27:32Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -145,14 +186,14 @@ FlowRelatedData findFlowRelatedDataForVlanFlow(LldpInfoData data) {\n                 return new FlowRelatedData(flow.getDestVlan(), flow.getFlowId(), false);\n             }\n         } else {\n-            log.warn(\"Got LLDP packet from Flow {} on non-src/non-dst switch {}. Transit vlan: {}\",\n+            log.warn(\"Got LLDP or ARP packet from Flow {} on non-src/non-dst switch {}. Transit vlan: {}\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -186,8 +186,8 @@ public class PacketService {\n                 return new FlowRelatedData(flow.getDestVlan(), flow.getFlowId(), false);\n             }\n         } else {\n-            log.warn(\"Got LLDP or ARP packet from Flow {} on non-src/non-dst switch {}. Transit vlan: {}\",\n-                    flow.getFlowId(), data.getSwitchId(), transitVlan);\n+            log.warn(\"Got {} packet from Flow {} on non-src/non-dst switch {}. Transit vlan: {}\",\n+                    getPacketName(data), flow.getFlowId(), data.getSwitchId(), transitVlan);\n             return null;\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MTg1OA==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382451858", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:27:45Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -165,14 +206,14 @@ FlowRelatedData findFlowRelatedDataForVxlanFlow(LldpInfoData data) {\n         } else if (data.getSwitchId().equals(flow.getDestSwitch().getSwitchId())) {\n             return new FlowRelatedData(inputVlan, flow.getFlowId(), false);\n         } else {\n-            log.warn(\"Got LLDP packet from Flow {} on non-src/non-dst switch {}. Port number {}, input vlan {}\",\n+            log.warn(\"Got LLDP or ARP packet from Flow {} on non-src/non-dst switch {}. Port number {}, input vlan {}\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -206,8 +207,8 @@ public class PacketService {\n         } else if (data.getSwitchId().equals(flow.getDestSwitch().getSwitchId())) {\n             return new FlowRelatedData(inputVlan, flow.getFlowId(), false);\n         } else {\n-            log.warn(\"Got LLDP or ARP packet from Flow {} on non-src/non-dst switch {}. Port number {}, input vlan {}\",\n-                    flow.getFlowId(), data.getSwitchId(), data.getPortNumber(), inputVlan);\n+            log.warn(\"Got {} packet from Flow {} on non-src/non-dst switch {}. Port number {}, input vlan {}\",\n+                    getPacketName(data), flow.getFlowId(), data.getSwitchId(), data.getPortNumber(), inputVlan);\n             return null;\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MTkzMg==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382451932", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:27:58Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -184,7 +225,7 @@ FlowRelatedData findFlowRelatedDataForOneSwitchFlow(LldpInfoData data) {\n         }\n \n         if (!flow.isOneSwitchFlow()) {\n-            log.warn(\"Found NOT one switch flow {} by SwitchId {}, port number {}, vlan {} from LLDP packet\",\n+            log.warn(\"Found NOT one switch flow {} by SwitchId {}, port number {}, vlan {} from LLDP or ARP packet\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -218,15 +219,16 @@ public class PacketService {\n         int outputVlan = data.getVlans().isEmpty() ? 0 : data.getVlans().get(0);\n         // second vlan with which we got LLDP packet in Floodlight. Exists only for some full port flows.\n         int customerVlan = data.getVlans().size() > 1 ? data.getVlans().get(1) : 0;\n-        Flow flow = getFlowBySwitchIdInPortAndOutVlan(data.getSwitchId(), data.getPortNumber(), outputVlan);\n+        Flow flow = getFlowBySwitchIdInPortAndOutVlan(\n+                data.getSwitchId(), data.getPortNumber(), outputVlan, getPacketName(data));\n \n         if (flow == null) {\n             return null;\n         }\n \n         if (!flow.isOneSwitchFlow()) {\n-            log.warn(\"Found NOT one switch flow {} by SwitchId {}, port number {}, vlan {} from LLDP or ARP packet\",\n-                    flow.getFlowId(), data.getSwitchId(), data.getPortNumber(), outputVlan);\n+            log.warn(\"Found NOT one switch flow {} by SwitchId {}, port number {}, vlan {} from {} packet\",\n+                    flow.getFlowId(), data.getSwitchId(), data.getPortNumber(), outputVlan, getPacketName(data));\n             return null;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MjAxOA==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382452018", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:28:13Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -251,7 +292,7 @@ private FlowRelatedData getOneSwitchOnePortFlowRelatedData(\n                 return new FlowRelatedData(flow.getDestVlan(), flow.getFlowId(), false);\n             }\n         }\n-        log.warn(\"Got LLDP data for one switch one Flow with unknown output vlan {}. Flow {} Data {}\",\n+        log.warn(\"Got LLDP or ARP data for one switch one Flow with unknown output vlan {}. Flow {} Data {}\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -292,8 +294,8 @@ public class PacketService {\n                 return new FlowRelatedData(flow.getDestVlan(), flow.getFlowId(), false);\n             }\n         }\n-        log.warn(\"Got LLDP or ARP data for one switch one Flow with unknown output vlan {}. Flow {} Data {}\",\n-                outputVlan, flow.getFlowId(), data);\n+        log.warn(\"Got {} data for one switch one Flow with unknown output vlan {}. Flow {} Data {}\",\n+                getPacketName(data), outputVlan, flow.getFlowId(), data);\n         return null;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MjA1Ng==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382452056", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:28:22Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -282,7 +323,7 @@ private Flow getFlowBySwitchIdPortAndVlan(SwitchId switchId, int portNumber, int\n             if (fullPortFlow.isPresent()) {\n                 return fullPortFlow.get();\n             } else {\n-                log.warn(\"Couldn't find Flow for LLDP packet on endpoint: Switch {}, port {}, vlan {}\",\n+                log.warn(\"Couldn't find Flow for LLDP or ARP packet on endpoint: Switch {}, port {}, vlan {}\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -323,14 +325,14 @@ public class PacketService {\n             if (fullPortFlow.isPresent()) {\n                 return fullPortFlow.get();\n             } else {\n-                log.warn(\"Couldn't find Flow for LLDP or ARP packet on endpoint: Switch {}, port {}, vlan {}\",\n-                        switchId, portNumber, vlan);\n+                log.warn(\"Couldn't find Flow for {} packet on endpoint: Switch {}, port {}, vlan {}\",\n+                        packetName, switchId, portNumber, vlan);\n                 return null;\n             }\n         }\n     }\n \n-    private Flow getFlowBySwitchIdInPortAndOutVlan(SwitchId switchId, int inPort, int outVlan) {\n+    private Flow getFlowBySwitchIdInPortAndOutVlan(SwitchId switchId, int inPort, int outVlan, String packetName) {\n         Optional<Flow> flow = flowRepository.findBySwitchIdInPortAndOutVlan(switchId, inPort, outVlan);\n \n         if (flow.isPresent()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MjA4MA==", "url": "https://github.com/telstra/open-kilda/pull/3144#discussion_r382452080", "bodyText": "same", "author": "dpoltavets", "createdAt": "2020-02-21T08:28:27Z", "path": "src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java", "diffHunk": "@@ -301,14 +342,14 @@ private Flow getFlowBySwitchIdInPortAndOutVlan(SwitchId switchId, int inPort, in\n             if (fullPortFlow.isPresent()) {\n                 return fullPortFlow.get();\n             } else {\n-                log.warn(\"Couldn't find Flow for LLDP packet by: Switch {}, InPort {}, OutVlan {}\",\n+                log.warn(\"Couldn't find Flow for LLDP or ARP packet by: Switch {}, InPort {}, OutVlan {}\",", "originalCommit": "5c0f38851ba9d7e586ddf1d0047504d7bd9c801e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "004fd691c5cdab34528e670b5678b6b138914950", "chunk": "diff --git a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\nindex 8e2b9f330..aa07edf7f 100644\n--- a/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n+++ b/src-java/connecteddevices-topology/connecteddevices-storm-topology/src/main/java/org/openkilda/wfm/topology/connecteddevices/service/PacketService.java\n\n@@ -342,8 +344,8 @@ public class PacketService {\n             if (fullPortFlow.isPresent()) {\n                 return fullPortFlow.get();\n             } else {\n-                log.warn(\"Couldn't find Flow for LLDP or ARP packet by: Switch {}, InPort {}, OutVlan {}\",\n-                        switchId, inPort, outVlan);\n+                log.warn(\"Couldn't find Flow for {} packet by: Switch {}, InPort {}, OutVlan {}\",\n+                        packetName, switchId, inPort, outVlan);\n                 return null;\n             }\n         }\n"}}, {"oid": "004fd691c5cdab34528e670b5678b6b138914950", "url": "https://github.com/telstra/open-kilda/commit/004fd691c5cdab34528e670b5678b6b138914950", "message": "Improve logs", "committedDate": "2020-02-21T11:27:19Z", "type": "forcePushed"}, {"oid": "5d76f2307f036d703e8818a76baa35535f25ac2b", "url": "https://github.com/telstra/open-kilda/commit/5d76f2307f036d703e8818a76baa35535f25ac2b", "message": "Improve logs", "committedDate": "2020-03-02T12:58:47Z", "type": "forcePushed"}, {"oid": "d183832ba4d03f49f9b2252c422d2123d0b09ad3", "url": "https://github.com/telstra/open-kilda/commit/d183832ba4d03f49f9b2252c422d2123d0b09ad3", "message": "ARP Part 5: Connected devices topology\n\nPart of #3118", "committedDate": "2020-03-04T12:42:48Z", "type": "commit"}, {"oid": "57dd6c77e15038a62eb815caf457c14fea95cbc5", "url": "https://github.com/telstra/open-kilda/commit/57dd6c77e15038a62eb815caf457c14fea95cbc5", "message": "Added Arp devices in responses", "committedDate": "2020-03-04T12:42:48Z", "type": "commit"}, {"oid": "dc479db42542a3d447b7efae6534805d20c3778b", "url": "https://github.com/telstra/open-kilda/commit/dc479db42542a3d447b7efae6534805d20c3778b", "message": "Improve logs", "committedDate": "2020-03-04T12:42:48Z", "type": "commit"}, {"oid": "dc479db42542a3d447b7efae6534805d20c3778b", "url": "https://github.com/telstra/open-kilda/commit/dc479db42542a3d447b7efae6534805d20c3778b", "message": "Improve logs", "committedDate": "2020-03-04T12:42:48Z", "type": "forcePushed"}]}