{"pr_number": 3124, "pr_title": "ARP Part 2: Update Switch Properties", "pr_createdAt": "2020-01-20T12:34:12Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3124", "timeline": [{"oid": "a2c8e587c223ed4599e00ceb46461b7006d0027d", "url": "https://github.com/telstra/open-kilda/commit/a2c8e587c223ed4599e00ceb46461b7006d0027d", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-01-20T12:35:15Z", "type": "forcePushed"}, {"oid": "ef2f66cb3938d05be196284bca9e22a7e53cc8c8", "url": "https://github.com/telstra/open-kilda/commit/ef2f66cb3938d05be196284bca9e22a7e53cc8c8", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-01-21T11:27:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQyMDQyMA==", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r369420420", "bodyText": "Can we combine this condition and the condition above?", "author": "dpoltavets", "createdAt": "2020-01-22T08:22:12Z", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "diffHunk": "@@ -287,28 +287,61 @@ public SwitchPropertiesDto updateSwitchProperties(SwitchId switchId, SwitchPrope\n             SwitchProperties switchProperties = switchPropertiesRepository.findBySwitchId(switchId)\n                     .orElseThrow(() -> new SwitchPropertiesNotFoundException(switchId));\n \n-            if (!update.isMultiTable() && update.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n-            }\n+            validateSwitchProperties(switchId, update);\n \n-            final boolean previousMultiTableFlag = switchProperties.isMultiTable();\n-            final boolean previousLldpFlag = switchProperties.isSwitchLldp();\n+            // must be called before updating of switchProperties object\n+            final boolean isSwitchSyncNeeded = isSwitchSyncNeeded(switchProperties, update);\n \n             switchProperties.setMultiTable(update.isMultiTable());\n             switchProperties.setSwitchLldp(update.isSwitchLldp());\n+            switchProperties.setSwitchArp(update.isSwitchArp());\n             switchProperties.setSupportedTransitEncapsulation(update.getSupportedTransitEncapsulation());\n \n             switchPropertiesRepository.createOrUpdate(switchProperties);\n-            if (previousMultiTableFlag != update.isMultiTable() || previousLldpFlag != update.isSwitchLldp()) {\n+            if (isSwitchSyncNeeded) {\n                 carrier.requestSwitchSync(switchId);\n             }\n \n             return SwitchPropertiesMapper.INSTANCE.map(switchProperties);\n         });\n     }\n \n+    private boolean isSwitchSyncNeeded(SwitchProperties current, SwitchProperties updated) {\n+        return current.isMultiTable() != updated.isMultiTable()\n+                || current.isSwitchLldp() != updated.isSwitchLldp()\n+                || current.isSwitchArp() != updated.isSwitchArp();\n+    }\n+\n+    private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n+        if (!updatedSwitchProperties.isMultiTable()) {\n+            if (updatedSwitchProperties.isSwitchLldp()) {\n+                throw new IllegalSwitchPropertiesException(\n+                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n+                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n+            }\n+\n+            if (updatedSwitchProperties.isSwitchArp()) {", "originalCommit": "ef2f66cb3938d05be196284bca9e22a7e53cc8c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQyNjI3NQ==", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r369426275", "bodyText": "fixed", "author": "niksv", "createdAt": "2020-01-22T08:36:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQyMDQyMA=="}], "type": "inlineReview", "revised_code": {"commit": "8ccb3def2b4b83df88dee65daf58bee77f471b15", "chunk": "diff --git a/services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java b/services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java\nindex 37cbcf38e..9e6e21139 100644\n--- a/services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java\n+++ b/services/wfm/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java\n\n@@ -314,16 +314,14 @@ public class SwitchOperationsService implements ILinkOperationsServiceCarrier {\n \n     private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n         if (!updatedSwitchProperties.isMultiTable()) {\n+            String propertyErrorMessage = \"Illegal switch properties combination for switch %s. '%s' property \"\n+                    + \"can be set to 'true' only if 'multiTable' property is 'true'.\";\n             if (updatedSwitchProperties.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchLldp\"));\n             }\n \n             if (updatedSwitchProperties.isSwitchArp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchArp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchArp\"));\n             }\n \n             List<String> flowsWitchEnabledArp = flowRepository.findByEndpointSwitchWithEnabledArp(switchId).stream()\n"}}, {"oid": "8ccb3def2b4b83df88dee65daf58bee77f471b15", "url": "https://github.com/telstra/open-kilda/commit/8ccb3def2b4b83df88dee65daf58bee77f471b15", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-01-22T08:36:36Z", "type": "forcePushed"}, {"oid": "98e5fb28d573b30e3b4ab686cfc0e3e83ef84ac9", "url": "https://github.com/telstra/open-kilda/commit/98e5fb28d573b30e3b4ab686cfc0e3e83ef84ac9", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-06T05:45:58Z", "type": "forcePushed"}, {"oid": "56a8a73bd4b73d4ed9699ea3b7566080d45f9a7d", "url": "https://github.com/telstra/open-kilda/commit/56a8a73bd4b73d4ed9699ea3b7566080d45f9a7d", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-10T10:02:47Z", "type": "forcePushed"}, {"oid": "511a2d4635e25b8a394cb644e768d41793b3ea34", "url": "https://github.com/telstra/open-kilda/commit/511a2d4635e25b8a394cb644e768d41793b3ea34", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-10T11:37:23Z", "type": "forcePushed"}, {"oid": "4f7fb59989250e1fe5daf8cc5ad305312c2a641e", "url": "https://github.com/telstra/open-kilda/commit/4f7fb59989250e1fe5daf8cc5ad305312c2a641e", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-11T09:13:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MDcwMA==", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r378180700", "bodyText": "witch -> which or with", "author": "rozdy", "createdAt": "2020-02-12T11:01:20Z", "path": "src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java", "diffHunk": "@@ -288,28 +288,59 @@ public SwitchPropertiesDto updateSwitchProperties(SwitchId switchId, SwitchPrope\n             SwitchProperties switchProperties = switchPropertiesRepository.findBySwitchId(switchId)\n                     .orElseThrow(() -> new SwitchPropertiesNotFoundException(switchId));\n \n-            if (!update.isMultiTable() && update.isSwitchLldp()) {\n-                throw new IllegalSwitchPropertiesException(\n-                        String.format(\"Illegal switch properties combination for switch %s. 'switchLldp' property \"\n-                                + \"can be set to 'true' only if 'multiTable' property is 'true'.\", switchId));\n-            }\n+            validateSwitchProperties(switchId, update);\n \n-            final boolean previousMultiTableFlag = switchProperties.isMultiTable();\n-            final boolean previousLldpFlag = switchProperties.isSwitchLldp();\n+            // must be called before updating of switchProperties object\n+            final boolean isSwitchSyncNeeded = isSwitchSyncNeeded(switchProperties, update);\n \n             switchProperties.setMultiTable(update.isMultiTable());\n             switchProperties.setSwitchLldp(update.isSwitchLldp());\n+            switchProperties.setSwitchArp(update.isSwitchArp());\n             switchProperties.setSupportedTransitEncapsulation(update.getSupportedTransitEncapsulation());\n \n             switchPropertiesRepository.createOrUpdate(switchProperties);\n-            if (previousMultiTableFlag != update.isMultiTable() || previousLldpFlag != update.isSwitchLldp()) {\n+            if (isSwitchSyncNeeded) {\n                 carrier.requestSwitchSync(switchId);\n             }\n \n             return SwitchPropertiesMapper.INSTANCE.map(switchProperties);\n         });\n     }\n \n+    private boolean isSwitchSyncNeeded(SwitchProperties current, SwitchProperties updated) {\n+        return current.isMultiTable() != updated.isMultiTable()\n+                || current.isSwitchLldp() != updated.isSwitchLldp()\n+                || current.isSwitchArp() != updated.isSwitchArp();\n+    }\n+\n+    private void validateSwitchProperties(SwitchId switchId, SwitchProperties updatedSwitchProperties) {\n+        if (!updatedSwitchProperties.isMultiTable()) {\n+            String propertyErrorMessage = \"Illegal switch properties combination for switch %s. '%s' property \"\n+                    + \"can be set to 'true' only if 'multiTable' property is 'true'.\";\n+            if (updatedSwitchProperties.isSwitchLldp()) {\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchLldp\"));\n+            }\n+\n+            if (updatedSwitchProperties.isSwitchArp()) {\n+                throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchArp\"));\n+            }\n+\n+            List<String> flowsWitchEnabledArp = flowRepository.findByEndpointSwitchWithEnabledArp(switchId).stream()", "originalCommit": "4f7fb59989250e1fe5daf8cc5ad305312c2a641e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4ODQzMg==", "url": "https://github.com/telstra/open-kilda/pull/3124#discussion_r378188432", "bodyText": "fixed", "author": "niksv", "createdAt": "2020-02-12T11:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MDcwMA=="}], "type": "inlineReview", "revised_code": {"commit": "72d953156b75cf42710ffdd218d70fb3933e3999", "chunk": "diff --git a/src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java b/src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java\nindex a07d2f01e..19a69661d 100644\n--- a/src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java\n+++ b/src-java/nbworker-topology/nbworker-storm-topology/src/main/java/org/openkilda/wfm/topology/nbworker/services/SwitchOperationsService.java\n\n@@ -325,18 +325,18 @@ public class SwitchOperationsService implements ILinkOperationsServiceCarrier {\n                 throw new IllegalSwitchPropertiesException(String.format(propertyErrorMessage, switchId, \"switchArp\"));\n             }\n \n-            List<String> flowsWitchEnabledArp = flowRepository.findByEndpointSwitchWithEnabledArp(switchId).stream()\n+            List<String> flowsWithEnabledArp = flowRepository.findByEndpointSwitchWithEnabledArp(switchId).stream()\n                     .map(Flow::getFlowId)\n                     .collect(Collectors.toList());\n \n-            if (!flowsWitchEnabledArp.isEmpty()) {\n+            if (!flowsWithEnabledArp.isEmpty()) {\n                 throw new IllegalSwitchPropertiesException(\n                         String.format(\"Illegal switch properties combination for switch %s. \"\n                               + \"Detect Connected Devices feature via ARP is turn on for following flows [%s]. \"\n                               + \"For correct work of this feature switch property 'multiTable' must be set to 'true' \"\n                               + \"Please disable detecting of connected devices via ARP for each flow before set \"\n                               + \"'multiTable' property to 'false'\",\n-                                switchId, String.join(\", \", flowsWitchEnabledArp)));\n+                                switchId, String.join(\", \", flowsWithEnabledArp)));\n             }\n         }\n     }\n"}}, {"oid": "72d953156b75cf42710ffdd218d70fb3933e3999", "url": "https://github.com/telstra/open-kilda/commit/72d953156b75cf42710ffdd218d70fb3933e3999", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-12T11:17:00Z", "type": "forcePushed"}, {"oid": "aba1c93257f0f5dab3f41f53fad1b0dbc0590658", "url": "https://github.com/telstra/open-kilda/commit/aba1c93257f0f5dab3f41f53fad1b0dbc0590658", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-18T17:46:09Z", "type": "forcePushed"}, {"oid": "eea9e675867512bfea10e85e9713a8143b4b4bd2", "url": "https://github.com/telstra/open-kilda/commit/eea9e675867512bfea10e85e9713a8143b4b4bd2", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-19T11:57:21Z", "type": "forcePushed"}, {"oid": "9fe2169a03bae529627e17bf195301297dffd8b4", "url": "https://github.com/telstra/open-kilda/commit/9fe2169a03bae529627e17bf195301297dffd8b4", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-02-21T11:20:33Z", "type": "forcePushed"}, {"oid": "02663adba7532e3ba62fcce595a87dd8caafc4fc", "url": "https://github.com/telstra/open-kilda/commit/02663adba7532e3ba62fcce595a87dd8caafc4fc", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-03-02T11:26:52Z", "type": "forcePushed"}, {"oid": "48d22e02e164dfa01f2c68c411c49eb76db92532", "url": "https://github.com/telstra/open-kilda/commit/48d22e02e164dfa01f2c68c411c49eb76db92532", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-03-02T12:05:21Z", "type": "commit"}, {"oid": "48d22e02e164dfa01f2c68c411c49eb76db92532", "url": "https://github.com/telstra/open-kilda/commit/48d22e02e164dfa01f2c68c411c49eb76db92532", "message": "ARP Part 2: Update Switch Properties\n\nPart of #3118", "committedDate": "2020-03-02T12:05:21Z", "type": "forcePushed"}]}