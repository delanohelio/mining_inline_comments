{"pr_number": 3174, "pr_title": "Correct handle empty affected isl set in reroute throttling", "pr_createdAt": "2020-02-05T15:13:27Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3174", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxODA4OQ==", "url": "https://github.com/telstra/open-kilda/pull/3174#discussion_r375718089", "bodyText": "I think there's no sense to reset \"throttlingData.affectedIsl\" if it's empty already. So \"throttlingData.getAffectedIsl().isEmpty()\" must go to the \"else if\" block.", "author": "sergii-iakovenko", "createdAt": "2020-02-06T09:18:46Z", "path": "services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java", "diffHunk": "@@ -57,12 +57,16 @@ public ReroutesThrottling(long minDelay, long maxDelay, int defaultFlowPriority)\n      * @param throttlingData the correlation ID and flow priority.\n      */\n     public void putRequest(String flowId, FlowThrottlingData throttlingData) {\n-        log.info(\"Puts flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n+        log.info(\"Puts reroute request for flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n         FlowThrottlingData prevThrottlingData = reroutes.put(flowId, throttlingData);\n         if (prevThrottlingData != null) {\n-            throttlingData.getAffectedIsl().addAll(prevThrottlingData.getAffectedIsl());\n+            if (prevThrottlingData.getAffectedIsl().isEmpty() || throttlingData.getAffectedIsl().isEmpty()) {", "originalCommit": "ff05c86eb2fbe80aaa8a4cb43704a1f4f5a85665", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MTM5NA==", "url": "https://github.com/telstra/open-kilda/pull/3174#discussion_r375761394", "bodyText": "Fixed", "author": "rozdy", "createdAt": "2020-02-06T10:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxODA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "eb6a22b3b5d2a7aeeebeb5c0a038754f1811c80f", "chunk": "diff --git a/services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java b/services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java\nindex 0017de1ef..8aff7d99a 100644\n--- a/services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java\n+++ b/services/wfm/src/main/java/org/openkilda/wfm/topology/reroute/service/ReroutesThrottling.java\n\n@@ -60,9 +60,9 @@ public class ReroutesThrottling {\n         log.info(\"Puts reroute request for flow {} with correlationId {}\", flowId, throttlingData.getCorrelationId());\n         FlowThrottlingData prevThrottlingData = reroutes.put(flowId, throttlingData);\n         if (prevThrottlingData != null) {\n-            if (prevThrottlingData.getAffectedIsl().isEmpty() || throttlingData.getAffectedIsl().isEmpty()) {\n+            if (prevThrottlingData.getAffectedIsl().isEmpty()) {\n                 throttlingData.setAffectedIsl(Collections.emptySet());\n-            } else {\n+            } else if (!throttlingData.getAffectedIsl().isEmpty()) {\n                 throttlingData.getAffectedIsl().addAll(prevThrottlingData.getAffectedIsl());\n             }\n \n"}}, {"oid": "eb6a22b3b5d2a7aeeebeb5c0a038754f1811c80f", "url": "https://github.com/telstra/open-kilda/commit/eb6a22b3b5d2a7aeeebeb5c0a038754f1811c80f", "message": "Correct handle empty affected isl set in reroute throttling", "committedDate": "2020-02-06T10:43:13Z", "type": "forcePushed"}, {"oid": "b841eefe1bccfe065a9744f6d91d941f7e0666b0", "url": "https://github.com/telstra/open-kilda/commit/b841eefe1bccfe065a9744f6d91d941f7e0666b0", "message": "Correct handle empty affected isl set in reroute throttling", "committedDate": "2020-02-11T10:36:23Z", "type": "commit"}, {"oid": "b841eefe1bccfe065a9744f6d91d941f7e0666b0", "url": "https://github.com/telstra/open-kilda/commit/b841eefe1bccfe065a9744f6d91d941f7e0666b0", "message": "Correct handle empty affected isl set in reroute throttling", "committedDate": "2020-02-11T10:36:23Z", "type": "forcePushed"}]}