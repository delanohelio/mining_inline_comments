{"pr_number": 3682, "pr_title": "Fix deleting MOVED ISLs", "pr_createdAt": "2020-08-11T11:58:10Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3682", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODAwNQ==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r468548005", "bodyText": "This is definitely an incorrect solution. One ISL object/handler must not interfere with another. Plus race condition (it almost impossible in an environment where delete is done manually, but if it will be done by another application chances of the race quickly become realistic).\nPerhaps we should make step backward and do not control exhausted mode from IslFsm, but return this control into UniIslHandler. I propose to \"reset\" status of UniIslHandler at the end of ISL removal process. So, after reset, when UniIslHandler receive first FAIL response on discovery request it will turn on exausted mode by itself.\nSome point to uni-isl reset processing:\n\nreset request mut include IslReference - so UniIslHandler can compare it with it's own and perform reset only if reference match (do not reset already \"moved\" handler).\ndiscovery poll mode must be switched to \"generic\" mode.", "author": "surabujin", "createdAt": "2020-08-11T12:39:43Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java", "diffHunk": "@@ -343,9 +345,13 @@ private void sendInstallMultiTable(IIslCarrier carrier, Endpoint ingress, Endpoi\n         }\n     }\n \n-    private void sendEnableExhaustedPollMode(IIslCarrier carrier) {\n-        carrier.exhaustedPollModeUpdateRequest(reference.getSource(), true);\n-        carrier.exhaustedPollModeUpdateRequest(reference.getDest(), true);\n+    private void sendEnableExhaustedPollMode(IIslCarrier carrier, Endpoint endpoint) {\n+        Collection<Isl> isls = islRepository.findByEndpoint(endpoint.getDatapath(), endpoint.getPortNumber()).stream()", "originalCommit": "dcef4d0c67b2796d98153af12a139129ead3de0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEzNjQwOQ==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469136409", "bodyText": "A very good proposal. I've made changes according to it.", "author": "dpoltavets", "createdAt": "2020-08-12T09:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODAwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3ccc44e1a31bb85cb5e15ccf97d0bec82e22438", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java\nindex f2b318f35..1257b126b 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/controller/isl/IslFsm.java\n\n@@ -345,13 +343,9 @@ public final class IslFsm extends AbstractBaseFsm<IslFsm, IslFsmState, IslFsmEve\n         }\n     }\n \n-    private void sendEnableExhaustedPollMode(IIslCarrier carrier, Endpoint endpoint) {\n-        Collection<Isl> isls = islRepository.findByEndpoint(endpoint.getDatapath(), endpoint.getPortNumber()).stream()\n-                .filter(isl -> IslStatus.ACTIVE.equals(isl.getStatus()))\n-                .collect(Collectors.toList());\n-        if (isls.isEmpty()) {\n-            carrier.exhaustedPollModeUpdateRequest(endpoint, true);\n-        }\n+    private void sendIslRemovedNotification(IIslCarrier carrier) {\n+        carrier.islRemovedNotification(reference.getSource(), reference);\n+        carrier.islRemovedNotification(reference.getDest(), reference);\n     }\n \n     private void sendRemoveMultiTable(IIslCarrier carrier) {\n"}}, {"oid": "f3ccc44e1a31bb85cb5e15ccf97d0bec82e22438", "url": "https://github.com/telstra/open-kilda/commit/f3ccc44e1a31bb85cb5e15ccf97d0bec82e22438", "message": "Fixed deleting MOVED ISLs", "committedDate": "2020-08-12T09:37:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MTM0OA==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469241348", "bodyText": "It will be nice to log something here (on info level).", "author": "surabujin", "createdAt": "2020-08-12T13:01:27Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/service/NetworkUniIslService.java", "diffHunk": "@@ -134,6 +134,19 @@ public void uniIslRemove(Endpoint endpoint) {\n         endpointData.remove(endpoint);\n     }\n \n+    /**\n+     * Process ISL removed notification.\n+     */\n+    public void islRemovedNotification(Endpoint endpoint, IslReference removedIsl) {\n+        log.debug(\"Uni-ISL service receive ISL-REMOVED notification for {}\", endpoint);\n+\n+        IslReference storedIslReference = lookupEndpointData(endpoint);\n+        if (removedIsl.equals(storedIslReference)) {\n+            endpointData.put(endpoint, IslReference.of(endpoint));", "originalCommit": "f3ccc44e1a31bb85cb5e15ccf97d0bec82e22438", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MTE4MA==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469251180", "bodyText": "Log message has been added.", "author": "dpoltavets", "createdAt": "2020-08-12T13:16:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MTM0OA=="}], "type": "inlineReview", "revised_code": {"commit": "36c51f1ecf59515c0731abd32caf21f0b3205f7c", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/service/NetworkUniIslService.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/service/NetworkUniIslService.java\nindex 0e2fbc1e3..96b65a736 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/service/NetworkUniIslService.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/service/NetworkUniIslService.java\n\n@@ -142,6 +142,8 @@ public class NetworkUniIslService {\n \n         IslReference storedIslReference = lookupEndpointData(endpoint);\n         if (removedIsl.equals(storedIslReference)) {\n+            log.info(\"Received ISL-REMOVED notification. The endpoint data for {} has been set to the initial value.\",\n+                    endpoint);\n             endpointData.put(endpoint, IslReference.of(endpoint));\n             carrier.exhaustedPollModeUpdateRequest(endpoint, false);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MTg1OQ==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469241859", "bodyText": "loop... have been created.", "author": "surabujin", "createdAt": "2020-08-12T13:02:20Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/isl/IslHandler.java", "diffHunk": "@@ -193,12 +199,9 @@ public void auxiliaryPollModeUpdateRequest(Endpoint endpoint, boolean enableAuxi\n     }\n \n     @Override\n-    public void exhaustedPollModeUpdateRequest(Endpoint endpoint, boolean enableExhaustedPollMode) {\n-        WatchListCommand command = new WatchListExhaustedPollModeUpdateCommand(endpoint, enableExhaustedPollMode);\n-        // We emit without the anchor tuple because here we are generating a new event to change the mode.\n-        // Also, if a cycle appears in the future by the anchor tuple, it will be quite difficult to find it,\n-        // and we remove the possibility of this cycle appearing initially.\n-        emit(STREAM_POLL_ID, makePollTuple(command));\n+    public void islRemovedNotification(Endpoint srcEndpoint, IslReference reference) {\n+        emit(STREAM_UNIISL_ID, getCurrentTuple(),", "originalCommit": "f3ccc44e1a31bb85cb5e15ccf97d0bec82e22438", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MzI2Nw==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469253267", "bodyText": "Good catch. Thank you. Loop has been removed.", "author": "dpoltavets", "createdAt": "2020-08-12T13:20:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MTg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "36c51f1ecf59515c0731abd32caf21f0b3205f7c", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/isl/IslHandler.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/isl/IslHandler.java\nindex 0da87296d..4e921bf43 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/isl/IslHandler.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/isl/IslHandler.java\n\n@@ -200,8 +200,8 @@ public class IslHandler extends AbstractBolt implements IIslCarrier {\n \n     @Override\n     public void islRemovedNotification(Endpoint srcEndpoint, IslReference reference) {\n-        emit(STREAM_UNIISL_ID, getCurrentTuple(),\n-                makeUniIslTuple(new UniIslNotifyIslRemovedCommand(srcEndpoint, reference)));\n+        // We emit without the anchor tuple to break the loop.\n+        emit(STREAM_UNIISL_ID, makeUniIslTuple(new UniIslNotifyIslRemovedCommand(srcEndpoint, reference)));\n     }\n \n     private Values makeSpeakerRulesTuple(SpeakerRulesWorkerCommand command) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MjcwMg==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469242702", "bodyText": "extra line", "author": "surabujin", "createdAt": "2020-08-12T13:03:41Z", "path": "src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/uniisl/command/UniIslNotifyIslRemovedCommand.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/* Copyright 2020 Telstra Open Source\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ */\n+\n+package org.openkilda.wfm.topology.network.storm.bolt.uniisl.command;\n+\n+import org.openkilda.wfm.share.model.Endpoint;\n+import org.openkilda.wfm.share.model.IslReference;\n+import org.openkilda.wfm.topology.network.storm.bolt.uniisl.UniIslHandler;\n+\n+public class UniIslNotifyIslRemovedCommand extends UniIslCommand {\n+    private final IslReference reference;\n+\n+    public UniIslNotifyIslRemovedCommand(Endpoint endpoint, IslReference reference) {\n+        super(endpoint);\n+        this.reference = reference;\n+    }\n+\n+", "originalCommit": "f3ccc44e1a31bb85cb5e15ccf97d0bec82e22438", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1MzMzNw==", "url": "https://github.com/telstra/open-kilda/pull/3682#discussion_r469253337", "bodyText": "Removed", "author": "dpoltavets", "createdAt": "2020-08-12T13:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MjcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "36c51f1ecf59515c0731abd32caf21f0b3205f7c", "chunk": "diff --git a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/uniisl/command/UniIslNotifyIslRemovedCommand.java b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/uniisl/command/UniIslNotifyIslRemovedCommand.java\nindex 8be98af4d..bc310d8d6 100644\n--- a/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/uniisl/command/UniIslNotifyIslRemovedCommand.java\n+++ b/src-java/network-topology/network-storm-topology/src/main/java/org/openkilda/wfm/topology/network/storm/bolt/uniisl/command/UniIslNotifyIslRemovedCommand.java\n\n@@ -27,7 +27,6 @@ public class UniIslNotifyIslRemovedCommand extends UniIslCommand {\n         this.reference = reference;\n     }\n \n-\n     @Override\n     public void apply(UniIslHandler handler) {\n         handler.processIslRemovedNotification(getEndpoint(), reference);\n"}}, {"oid": "36c51f1ecf59515c0731abd32caf21f0b3205f7c", "url": "https://github.com/telstra/open-kilda/commit/36c51f1ecf59515c0731abd32caf21f0b3205f7c", "message": "Fixed deleting MOVED ISLs", "committedDate": "2020-08-12T13:14:40Z", "type": "commit"}, {"oid": "36c51f1ecf59515c0731abd32caf21f0b3205f7c", "url": "https://github.com/telstra/open-kilda/commit/36c51f1ecf59515c0731abd32caf21f0b3205f7c", "message": "Fixed deleting MOVED ISLs", "committedDate": "2020-08-12T13:14:40Z", "type": "forcePushed"}]}