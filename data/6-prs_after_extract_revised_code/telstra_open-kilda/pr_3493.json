{"pr_number": 3493, "pr_title": "Northbound V1 requests redirected to FlowHSTopology", "pr_createdAt": "2020-05-21T12:56:17Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3493", "timeline": [{"oid": "2baceb065a956949172d61f26515fb46cf0d6191", "url": "https://github.com/telstra/open-kilda/commit/2baceb065a956949172d61f26515fb46cf0d6191", "message": "Northbound V1 requests redirected to FlowHSTopology", "committedDate": "2020-05-22T07:42:44Z", "type": "commit"}, {"oid": "2baceb065a956949172d61f26515fb46cf0d6191", "url": "https://github.com/telstra/open-kilda/commit/2baceb065a956949172d61f26515fb46cf0d6191", "message": "Northbound V1 requests redirected to FlowHSTopology", "committedDate": "2020-05-22T07:42:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NTMwMw==", "url": "https://github.com/telstra/open-kilda/pull/3493#discussion_r429195303", "bodyText": "(nip) Why not include whole request payload (same as flow create do)?", "author": "surabujin", "createdAt": "2020-05-22T11:34:35Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java", "diffHunk": "@@ -244,22 +233,24 @@\n      * {@inheritDoc}\n      */\n     @Override\n-    public CompletableFuture<FlowResponsePayload> updateFlow(final FlowUpdatePayload input) {\n+    public CompletableFuture<FlowResponsePayload> updateFlow(final FlowUpdatePayload request) {\n+        logger.info(\"Update flow request for flow {}\", request.getId());", "originalCommit": "2baceb065a956949172d61f26515fb46cf0d6191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwMTY3OQ==", "url": "https://github.com/telstra/open-kilda/pull/3493#discussion_r429201679", "bodyText": "What about logging here?", "author": "surabujin", "createdAt": "2020-05-22T11:50:48Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java", "diffHunk": "@@ -386,7 +377,7 @@\n     private CompletableFuture<FlowResponsePayload> sendDeleteFlow(String flowId, String correlationId) {", "originalCommit": "2baceb065a956949172d61f26515fb46cf0d6191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwMjU4Mw==", "url": "https://github.com/telstra/open-kilda/pull/3493#discussion_r429202583", "bodyText": "Yey!!! At last!", "author": "surabujin", "createdAt": "2020-05-22T11:52:57Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java", "diffHunk": "@@ -499,9 +490,9 @@ private FlowPathPayload buildFlowPathPayload(List<FlowPathDto> paths, String flo\n     @Override\n     public CompletableFuture<BatchResults> unpushFlows(List<FlowInfoData> externalFlows, Boolean propagate,\n                                                        Boolean verify) {\n-        FlowOperation op = (propagate) ? FlowOperation.UNPUSH_PROPAGATE : FlowOperation.UNPUSH;\n-        // TODO: ADD the VERIFY implementation\n-        return flowPushUnpush(externalFlows, op);\n+        String correlationId = RequestCorrelationId.getId();\n+        throw new MessageException(correlationId, System.currentTimeMillis(), ErrorType.NOT_PERMITTED,", "originalCommit": "2baceb065a956949172d61f26515fb46cf0d6191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwNjIxOQ==", "url": "https://github.com/telstra/open-kilda/pull/3493#discussion_r429206219", "bodyText": "One more time - YEY!", "author": "surabujin", "createdAt": "2020-05-22T12:02:05Z", "path": "src-java/northbound-service/northbound/src/main/java/org/openkilda/northbound/service/impl/FlowServiceImpl.java", "diffHunk": "@@ -510,9 +501,9 @@ private FlowPathPayload buildFlowPathPayload(List<FlowPathDto> paths, String flo\n     @Override\n     public CompletableFuture<BatchResults> pushFlows(List<FlowInfoData> externalFlows,\n                                                      Boolean propagate, Boolean verify) {\n-        FlowOperation op = (propagate) ? FlowOperation.PUSH_PROPAGATE : FlowOperation.PUSH;\n-        // TODO: ADD the VERIFY implementation\n-        return flowPushUnpush(externalFlows, op);\n+        String correlationId = RequestCorrelationId.getId();\n+        throw new MessageException(correlationId, System.currentTimeMillis(), ErrorType.NOT_PERMITTED,", "originalCommit": "2baceb065a956949172d61f26515fb46cf0d6191", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}