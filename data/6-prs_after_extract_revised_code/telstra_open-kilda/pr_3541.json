{"pr_number": 3541, "pr_title": "Skip reroute requests for flows without affected path segment", "pr_createdAt": "2020-06-12T13:11:57Z", "pr_url": "https://github.com/telstra/open-kilda/pull/3541", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NDkzMg==", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r440254932", "bodyText": "em... what about the rest of paths passed into paths argument? Now you stop processing paths on first error (not so critical as stop processing all flows on the first error, but still incorrect).", "author": "surabujin", "createdAt": "2020-06-15T15:21:14Z", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -137,7 +141,13 @@ private void updateFlowPathsStateForFlow(SwitchId switchId, int port, List<FlowP\n                         || (pathSegment.getDestPort() == port\n                         && switchId.equals(pathSegment.getDestSwitch().getSwitchId()))) {\n                     pathSegment.setFailed(true);\n-                    pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                    try {\n+                        pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                    } catch (EntityNotFoundException e) {\n+                        log.warn(\"FlowPath {} not found. Skipping reroute for flow {}.\",\n+                                fp.getPathId(), fp.getFlow().getFlowId(), e);\n+                        return false;", "originalCommit": "e452895b38212ecda9fcdfb6354eadf99d3e26eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2NjcxOQ==", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r443566719", "bodyText": "Reworked.", "author": "rozdy", "createdAt": "2020-06-22T13:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NDkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "19d9e68ecc3817077272c57df636a27672cdc06b", "chunk": "diff --git a/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java b/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java\nindex d6baadba5..158401b43 100644\n--- a/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java\n+++ b/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java\n\n@@ -143,12 +144,12 @@ public class RerouteService {\n                     pathSegment.setFailed(true);\n                     try {\n                         pathSegmentRepository.updateFailedStatus(fp.getPathId(), pathSegment, true);\n+                        failedFlowPath = true;\n+                        rerouteRequired = true;\n                     } catch (EntityNotFoundException e) {\n-                        log.warn(\"FlowPath {} not found. Skipping reroute for flow {}.\",\n-                                fp.getPathId(), fp.getFlow().getFlowId(), e);\n-                        return false;\n+                        log.warn(\"Path segment not found for flow {} and path {}. Skipping path segment status update.\",\n+                                fp.getFlow().getFlowId(), fp.getPathId(), e);\n                     }\n-                    failedFlowPath = true;\n                     break;\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NTY2Nw==", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r440255667", "bodyText": "swapping this and following lines you can get rid of flowPathFound variable.", "author": "surabujin", "createdAt": "2020-06-15T15:22:19Z", "path": "src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java", "diffHunk": "@@ -98,21 +99,24 @@ public void rerouteAffectedFlows(MessageSender sender, String correlationId, Rer\n \n         for (FlowWithAffectedPaths entry : groupPathsForRerouting(affectedFlowPaths)) {\n             Flow flow = entry.getFlow();\n-            transactionManager.doInTransaction(() -> {\n-                updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());\n+            Boolean sendRerouteRequest = transactionManager.doInTransaction(() -> {\n+                boolean flowPathFound = updateFlowPathsStateForFlow(switchId, port, entry.getAffectedPaths());", "originalCommit": "e452895b38212ecda9fcdfb6354eadf99d3e26eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2NjY0Mg==", "url": "https://github.com/telstra/open-kilda/pull/3541#discussion_r443566642", "bodyText": "I can't swap lines because flow status computation is dependent on flow paths statuses.", "author": "rozdy", "createdAt": "2020-06-22T13:42:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1NTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4ac96ab980c01d8a98bec87a3619b7770a93d585", "chunk": "diff --git a/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java b/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java\nindex d6baadba5..c0a23ed72 100644\n--- a/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java\n+++ b/src-java/reroute-topology/reroute-storm-topology/src/main/java/org/openkilda/wfm/topology/reroute/service/RerouteService.java\n\n@@ -106,10 +107,8 @@ public class RerouteService {\n             });\n \n             if (sendRerouteRequest) {\n-                FlowThrottlingData flowThrottlingData = FlowThrottlingData.builder()\n+                FlowThrottlingData flowThrottlingData = getFlowThrottlingDataBuilder(flow)\n                         .correlationId(correlationId)\n-                        .priority(flow.getPriority())\n-                        .timeCreate(flow.getTimeCreate())\n                         .affectedIsl(Collections.singleton(affectedIsl))\n                         .force(false)\n                         .effectivelyDown(true)\n"}}, {"oid": "19d9e68ecc3817077272c57df636a27672cdc06b", "url": "https://github.com/telstra/open-kilda/commit/19d9e68ecc3817077272c57df636a27672cdc06b", "message": "Skip reroute requests for flows without affected path segment", "committedDate": "2020-06-22T13:33:00Z", "type": "forcePushed"}, {"oid": "4ac96ab980c01d8a98bec87a3619b7770a93d585", "url": "https://github.com/telstra/open-kilda/commit/4ac96ab980c01d8a98bec87a3619b7770a93d585", "message": "Skip reroute requests for flows without affected path segment", "committedDate": "2020-06-22T13:39:09Z", "type": "forcePushed"}, {"oid": "d01d3c086e31167ccf023aa3147552c63bc29cf8", "url": "https://github.com/telstra/open-kilda/commit/d01d3c086e31167ccf023aa3147552c63bc29cf8", "message": "Skip reroute requests for flows without affected path segment", "committedDate": "2020-07-01T09:58:26Z", "type": "forcePushed"}, {"oid": "68666123b2135907c635425533d7e78e8110ced7", "url": "https://github.com/telstra/open-kilda/commit/68666123b2135907c635425533d7e78e8110ced7", "message": "Skip reroute requests for flows without affected path segment", "committedDate": "2020-07-01T10:56:22Z", "type": "commit"}, {"oid": "68666123b2135907c635425533d7e78e8110ced7", "url": "https://github.com/telstra/open-kilda/commit/68666123b2135907c635425533d7e78e8110ced7", "message": "Skip reroute requests for flows without affected path segment", "committedDate": "2020-07-01T10:56:22Z", "type": "forcePushed"}]}