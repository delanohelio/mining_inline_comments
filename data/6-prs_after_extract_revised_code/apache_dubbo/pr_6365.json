{"pr_number": 6365, "pr_title": "fix #6306.  support TypeBuilder sort", "pr_createdAt": "2020-06-24T03:42:53Z", "pr_url": "https://github.com/apache/dubbo/pull/6365", "timeline": [{"oid": "c01cc6c5bcda371c055fe268ae4fb831b944959c", "url": "https://github.com/apache/dubbo/commit/c01cc6c5bcda371c055fe268ae4fb831b944959c", "message": "fix #6306. support TypeBuilder sort", "committedDate": "2020-06-24T03:41:19Z", "type": "commit"}, {"oid": "d27b9e7248264cccc3193b7522b53f0a5efb1f64", "url": "https://github.com/apache/dubbo/commit/d27b9e7248264cccc3193b7522b53f0a5efb1f64", "message": "fix #6306. support TypeBuilder sort", "committedDate": "2020-06-24T03:42:32Z", "type": "commit"}, {"oid": "ce92d712b206ebe4c810c231ad4a9b23669e7079", "url": "https://github.com/apache/dubbo/commit/ce92d712b206ebe4c810c231ad4a9b23669e7079", "message": "fix #6306. support TypeBuilder sort", "committedDate": "2020-06-24T04:46:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODcxNQ==", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r444628715", "bodyText": "Recommend to implement the interface org.apache.dubbo.common.lang.Prioritized", "author": "mercyblitz", "createdAt": "2020-06-24T03:48:50Z", "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java", "diffHunk": "@@ -28,6 +28,11 @@\n @SPI\n public interface TypeBuilder {", "originalCommit": "d27b9e7248264cccc3193b7522b53f0a5efb1f64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczODIzMg==", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r446738232", "bodyText": "\u5df2\u7ecf\u4fee\u6539\u3002", "author": "cvictory", "createdAt": "2020-06-29T02:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODcxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "ce92d712b206ebe4c810c231ad4a9b23669e7079", "chunk": "diff --git a/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java b/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java\nindex 101c2e7cd..57673fe59 100755\n--- a/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java\n+++ b/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java\n\n@@ -26,12 +27,7 @@ import java.util.Map;\n  * 2015/1/27.\n  */\n @SPI\n-public interface TypeBuilder {\n-\n-    // the smaller, it is have much more priority\n-    default int order(){\n-        return 100;\n-    }\n+public interface TypeBuilder extends Prioritized {\n \n     /**\n      * Whether the build accept the type or class passed in.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODg0Mw==", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r444628843", "bodyText": "Then invoke org.apache.dubbo.common.extension.ExtensionLoader#getSupportedExtensionInstances() using the internal sorting.", "author": "mercyblitz", "createdAt": "2020-06-24T03:49:26Z", "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java", "diffHunk": "@@ -36,14 +37,20 @@\n  */\n public class TypeDefinitionBuilder {\n     private static final Logger logger = LoggerFactory.getLogger(TypeDefinitionBuilder.class);\n-    private static final List<TypeBuilder> BUILDERS;\n+    static final List<TypeBuilder> BUILDERS;\n \n     static {\n         List<TypeBuilder> builders = new ArrayList<>();", "originalCommit": "d27b9e7248264cccc3193b7522b53f0a5efb1f64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczODIyMw==", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r446738223", "bodyText": "done", "author": "cvictory", "createdAt": "2020-06-29T02:20:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ce92d712b206ebe4c810c231ad4a9b23669e7079", "chunk": "diff --git a/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java b/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java\nindex 75a7d1510..8779a86da 100755\n--- a/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java\n+++ b/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java\n\n@@ -40,18 +41,9 @@ public class TypeDefinitionBuilder {\n     static final List<TypeBuilder> BUILDERS;\n \n     static {\n-        List<TypeBuilder> builders = new ArrayList<>();\n         ExtensionLoader<TypeBuilder> extensionLoader = ExtensionLoader.getExtensionLoader(TypeBuilder.class);\n-        for (String extensionName : extensionLoader.getSupportedExtensions()) {\n-            builders.add(extensionLoader.getExtension(extensionName));\n-        }\n-        builders.sort(new Comparator<TypeBuilder>() {\n-            @Override\n-            public int compare(TypeBuilder o1, TypeBuilder o2) {\n-                return o1.order() - o2.order();\n-            }\n-        });\n-        BUILDERS = builders;\n+        Set<TypeBuilder> tbs = extensionLoader.getSupportedExtensionInstances();\n+        BUILDERS = new ArrayList<>(tbs);\n     }\n \n     public static TypeDefinition build(Type type, Class<?> clazz, Map<Class<?>, TypeDefinition> typeCache) {\n"}}, {"oid": "3f29447afe83473033e86cb0a9f95e06c2f8a491", "url": "https://github.com/apache/dubbo/commit/3f29447afe83473033e86cb0a9f95e06c2f8a491", "message": "remove unused import", "committedDate": "2020-06-29T02:14:00Z", "type": "commit"}, {"oid": "ffdfe0826b6694f3f2f9d90b1132061e103351da", "url": "https://github.com/apache/dubbo/commit/ffdfe0826b6694f3f2f9d90b1132061e103351da", "message": "add license for test file", "committedDate": "2020-06-29T04:51:57Z", "type": "commit"}]}