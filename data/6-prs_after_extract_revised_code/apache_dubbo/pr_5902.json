{"pr_number": 5902, "pr_title": "[Dubbo-5871][Dubbo-5885][Dubbo-5899] Fix nacos registry not work bug since 2.7.6", "pr_createdAt": "2020-03-22T15:35:02Z", "pr_url": "https://github.com/apache/dubbo/pull/5902", "timeline": [{"oid": "c52ca7d89310c803897a56a023e5b5007ec9c0b5", "url": "https://github.com/apache/dubbo/commit/c52ca7d89310c803897a56a023e5b5007ec9c0b5", "message": "Merge pull request #1 from apache/master\n\nSync with official master branch", "committedDate": "2020-02-23T05:34:48Z", "type": "commit"}, {"oid": "ca4f9fb8c0dc6e71c8bf8fbaff0ed56a3e192e72", "url": "https://github.com/apache/dubbo/commit/ca4f9fb8c0dc6e71c8bf8fbaff0ed56a3e192e72", "message": "TO FIX bug with https://github.com/apache/dubbo/issues/5885", "committedDate": "2020-03-22T15:27:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ1MDgxMQ==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r396450811", "bodyText": "\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0c\u76ee\u524d\u4f60\u7684\u66f4\u6539\u5e94\u8be5\u53ea\u80fd\u89e3\u51b3instances\u4e3a\u7a7a\u7684\u95ee\u9898\uff0c\u4f46\u662f\u6ca1\u89e3\u51b3\u4e0d\u4e3a\u7a7a\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u4e2d\u4e00\u4e2aserviceName\u89e6\u53d1\u5b9e\u4f8b\u53d8\u52a8\u5bfc\u81f4\u7684\u8986\u76d6\u95ee\u9898\u3002", "author": "CodingSinger", "createdAt": "2020-03-23T13:30:33Z", "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java", "diffHunk": "@@ -169,12 +170,33 @@ private void doSubscribe(final URL url, final NotifyListener listener, final Set\n         execute(namingService -> {\n             for (String serviceName : serviceNames) {\n                 List<Instance> instances = namingService.getAllInstances(serviceName);\n+\n+                //TO FIX bug with https://github.com/apache/dubbo/issues/5885\n+                if (CollectionUtils.isEmpty(instances) && isServiceNamesWithCompatibleMode(url)) {", "originalCommit": "ca4f9fb8c0dc6e71c8bf8fbaff0ed56a3e192e72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5NDg5MA==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r396494890", "bodyText": "\u662f\u7684\uff0c\u73b0\u5728\u7684\u89e3\u51b3\u65b9\u6848\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u4e24\u4e2aserviceName\u8868\u793a\u540c\u4e00\u4e2a\u63a5\u53e3\uff0c\u53ea\u662f\u56e0\u4e3a\u7248\u672c\u95ee\u9898\u4ea7\u751f\u7684\u4e24\u4e2a\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u4e24\u4e2aserviceName\u7684instances\u5e94\u8be5\u653e\u5728\u4e00\u8d77\u8003\u8651\u3002\u6211\u6765\u6539\u4e0b\u4ee3\u7801", "author": "laddcn", "createdAt": "2020-03-23T14:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ1MDgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4MDY4MA==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r396580680", "bodyText": "\u6211\u589e\u52a0\u4e00\u4e2a\u5b9e\u4f8b\u7ba1\u7406\u5de5\u5177\u7c7b\uff0c\u5b9e\u73b0\u4e86\u76f8\u5173serviceName\u7684\u5b9e\u4f8b\u4e00\u8d77\u8003\u8651\uff0c\u907f\u514d\u4e86\u8986\u76d6\u95ee\u9898\uff0c\u540c\u65f6\u5bf9instances\u4e3a\u7a7a\u7684\u60c5\u51b5\u4f9d\u7136\u80fd\u6b63\u5e38\u5904\u7406\uff0c\u6d4b\u8bd5\u529f\u80fd\u6b63\u5e38\uff0c\u4e4b\u524d\u7684bug\u5df2\u7ecf\u89e3\u51b3\u3002", "author": "laddcn", "createdAt": "2020-03-23T16:23:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ1MDgxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8a4bc9b688b2ec0122e03a7b09d2dd7918ac5491", "chunk": "diff --git a/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java b/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java\nindex 1ea0c95a6..c1747d0a2 100644\n--- a/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java\n+++ b/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java\n\n@@ -163,22 +164,43 @@ public class NacosRegistry extends FailbackRegistry {\n     @Override\n     public void doSubscribe(final URL url, final NotifyListener listener) {\n         Set<String> serviceNames = getServiceNames(url, listener);\n+\n+        //Set corresponding serviceNames for easy search later\n+        if(isServiceNamesWithCompatibleMode(url)){\n+            for(String serviceName:serviceNames){\n+                NacosInstanceManageUtil.setCorrespondingServiceNames(serviceName, serviceNames);\n+            }\n+        }\n+\n         doSubscribe(url, listener, serviceNames);\n     }\n \n     private void doSubscribe(final URL url, final NotifyListener listener, final Set<String> serviceNames) {\n         execute(namingService -> {\n-            for (String serviceName : serviceNames) {\n-                List<Instance> instances = namingService.getAllInstances(serviceName);\n-\n-                //TO FIX bug with https://github.com/apache/dubbo/issues/5885\n-                if (CollectionUtils.isEmpty(instances) && isServiceNamesWithCompatibleMode(url)) {\n-                    return;\n+            if (isServiceNamesWithCompatibleMode(url)) {\n+                List<Instance> allCorrespondingInstanceList = Lists.newArrayList();\n+\n+                /**\n+                 * Get all instances with serviceNames to avoid instance overwrite and but with empty instance mentioned\n+                 * in https://github.com/apache/dubbo/issues/5885 and https://github.com/apache/dubbo/issues/5899\n+                 */\n+                for (String serviceName : serviceNames) {\n+                    List<Instance> instances = namingService.getAllInstances(serviceName);\n+                    NacosInstanceManageUtil.initOrRefreshServiceInstanceList(serviceName, instances);\n+                    allCorrespondingInstanceList.addAll(instances);\n+                }\n+                notifySubscriber(url, listener, allCorrespondingInstanceList);\n+                for (String serviceName : serviceNames) {\n+                    subscribeEventListener(serviceName, url, listener);\n+                }\n+            } else {\n+                for (String serviceName : serviceNames) {\n+                    List<Instance> instances = namingService.getAllInstances(serviceName);\n+                    notifySubscriber(url, listener, instances);\n+                    subscribeEventListener(serviceName, url, listener);\n                 }\n-\n-                notifySubscriber(url, listener, instances);\n-                subscribeEventListener(serviceName, url, listener);\n             }\n+\n         });\n     }\n \n"}}, {"oid": "8a4bc9b688b2ec0122e03a7b09d2dd7918ac5491", "url": "https://github.com/apache/dubbo/commit/8a4bc9b688b2ec0122e03a7b09d2dd7918ac5491", "message": "Avoid instances overwriting problem with different service name", "committedDate": "2020-03-23T16:18:25Z", "type": "commit"}, {"oid": "7121bfa0cf526c1d4015f2b7c933b89b48de4964", "url": "https://github.com/apache/dubbo/commit/7121bfa0cf526c1d4015f2b7c933b89b48de4964", "message": "Avoid duplicated service name which will lead duplicated subscribe", "committedDate": "2020-03-23T16:28:49Z", "type": "commit"}, {"oid": "bca6b6c3dc3c0a579f0d78d3906a1f5936fcc664", "url": "https://github.com/apache/dubbo/commit/bca6b6c3dc3c0a579f0d78d3906a1f5936fcc664", "message": "Resolve Conflicts", "committedDate": "2020-03-24T00:20:11Z", "type": "commit"}, {"oid": "91060c28f8d9809b1eb5ac285ddc507c05f2487d", "url": "https://github.com/apache/dubbo/commit/91060c28f8d9809b1eb5ac285ddc507c05f2487d", "message": "Resolve conflicts", "committedDate": "2020-03-24T00:24:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1OTM4NA==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r396959384", "bodyText": "\u8fd9\u91cc\u662f\u4e0d\u662f\u5e94\u8be5\u8003\u8651\u5e76\u53d1\u95ee\u9898\uff0c\u7528ConcurrentHashMap\u6bd4\u8f83\u5408\u9002\uff1f", "author": "CodingSinger", "createdAt": "2020-03-24T07:57:39Z", "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.registry.nacos.util;\n+\n+import com.alibaba.nacos.api.naming.pojo.Instance;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import org.apache.dubbo.common.utils.CollectionUtils;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Instance manage util for multiple serviceNames\n+ * To resolve bug with https://github.com/apache/dubbo/issues/5885 and https://github.com/apache/dubbo/issues/5899\n+ *\n+ * @since 2.7.6\n+ */\n+public class NacosInstanceManageUtil {\n+\n+    /**\n+     * serviceName -> refreshed instance list\n+     */\n+    private static final Map<String, List<Instance>> serviceInstanceListMap = Maps.newHashMap();\n+\n+    /**\n+     * serviceName -> corresponding serviceName list\n+     */\n+    private static final Map<String, Set<String>> correspondingServiceNamesMap = Maps.newHashMap();", "originalCommit": "91060c28f8d9809b1eb5ac285ddc507c05f2487d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9e1233525191d010177bab3530b58d8d0d6c0d29", "chunk": "diff --git a/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java b/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java\nindex b7321cbf7..6fa724d3c 100644\n--- a/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java\n+++ b/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java\n\n@@ -36,12 +36,12 @@ public class NacosInstanceManageUtil {\n     /**\n      * serviceName -> refreshed instance list\n      */\n-    private static final Map<String, List<Instance>> serviceInstanceListMap = Maps.newHashMap();\n+    private static final Map<String, List<Instance>> serviceInstanceListMap = Maps.newConcurrentMap();\n \n     /**\n      * serviceName -> corresponding serviceName list\n      */\n-    private static final Map<String, Set<String>> correspondingServiceNamesMap = Maps.newHashMap();\n+    private static final Map<String, Set<String>> correspondingServiceNamesMap = Maps.newConcurrentMap();\n \n     public static void setCorrespondingServiceNames(String serviceName, Set<String> serviceNames) {\n         correspondingServiceNamesMap.put(serviceName, serviceNames);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1OTU1NA==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r396959554", "bodyText": "\u540c\u4e0b", "author": "CodingSinger", "createdAt": "2020-03-24T07:57:59Z", "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.registry.nacos.util;\n+\n+import com.alibaba.nacos.api.naming.pojo.Instance;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import org.apache.dubbo.common.utils.CollectionUtils;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Instance manage util for multiple serviceNames\n+ * To resolve bug with https://github.com/apache/dubbo/issues/5885 and https://github.com/apache/dubbo/issues/5899\n+ *\n+ * @since 2.7.6\n+ */\n+public class NacosInstanceManageUtil {\n+\n+    /**\n+     * serviceName -> refreshed instance list\n+     */\n+    private static final Map<String, List<Instance>> serviceInstanceListMap = Maps.newHashMap();", "originalCommit": "91060c28f8d9809b1eb5ac285ddc507c05f2487d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA1OTM5OQ==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r397059399", "bodyText": "\u5df2\u66f4\u65b0", "author": "laddcn", "createdAt": "2020-03-24T10:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk1OTU1NA=="}], "type": "inlineReview", "revised_code": {"commit": "9e1233525191d010177bab3530b58d8d0d6c0d29", "chunk": "diff --git a/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java b/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java\nindex b7321cbf7..6fa724d3c 100644\n--- a/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java\n+++ b/dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/util/NacosInstanceManageUtil.java\n\n@@ -36,12 +36,12 @@ public class NacosInstanceManageUtil {\n     /**\n      * serviceName -> refreshed instance list\n      */\n-    private static final Map<String, List<Instance>> serviceInstanceListMap = Maps.newHashMap();\n+    private static final Map<String, List<Instance>> serviceInstanceListMap = Maps.newConcurrentMap();\n \n     /**\n      * serviceName -> corresponding serviceName list\n      */\n-    private static final Map<String, Set<String>> correspondingServiceNamesMap = Maps.newHashMap();\n+    private static final Map<String, Set<String>> correspondingServiceNamesMap = Maps.newConcurrentMap();\n \n     public static void setCorrespondingServiceNames(String serviceName, Set<String> serviceNames) {\n         correspondingServiceNamesMap.put(serviceName, serviceNames);\n"}}, {"oid": "9e1233525191d010177bab3530b58d8d0d6c0d29", "url": "https://github.com/apache/dubbo/commit/9e1233525191d010177bab3530b58d8d0d6c0d29", "message": "Use ConcurrentHashMap instead of HashMap", "committedDate": "2020-03-24T10:33:11Z", "type": "commit"}, {"oid": "9406634899166f026d439291550420991cdd31db", "url": "https://github.com/apache/dubbo/commit/9406634899166f026d439291550420991cdd31db", "message": "Resolve conflicts", "committedDate": "2020-03-24T10:42:21Z", "type": "commit"}, {"oid": "08101d9afe4a57937048c6beabebe1a634a9be67", "url": "https://github.com/apache/dubbo/commit/08101d9afe4a57937048c6beabebe1a634a9be67", "message": "Merge pull request #2 from apache/master\n\nSycn with master", "committedDate": "2020-03-24T10:43:04Z", "type": "commit"}, {"oid": "a6749aada8e92d5815311d4bc039579705482665", "url": "https://github.com/apache/dubbo/commit/a6749aada8e92d5815311d4bc039579705482665", "message": "Resolve conflicts", "committedDate": "2020-03-24T10:46:10Z", "type": "commit"}, {"oid": "c1a51d43313f0690f3f4f993c6d1432dba613e8a", "url": "https://github.com/apache/dubbo/commit/c1a51d43313f0690f3f4f993c6d1432dba613e8a", "message": "Resolve conflicts", "committedDate": "2020-03-24T10:50:00Z", "type": "commit"}, {"oid": "398a94ed33fc736589fe3a3c5982c40d0e5474b8", "url": "https://github.com/apache/dubbo/commit/398a94ed33fc736589fe3a3c5982c40d0e5474b8", "message": "Format codes", "committedDate": "2020-03-24T10:55:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4NDE3OA==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r398284178", "bodyText": "\u8fd9\u91cc\u6211\u89c9\u5f97\u8fd8\u662f\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u670d\u52a1\u7aef\u662f2.7.3\u4e4b\u524d\u7684\u7248\u672c\uff0c\u90a3\u5b83\u7684ur\u662f\u8001\u7684\u5f62\u5f0f\uff0c\u6309\u4f60\u8fd9\u4e2a\u3002\u5982\u679c\u6700\u540e\u4e00\u4e2aprovider\u4e0b\u7ebf\uff0c\u90a3\u8fd9\u91cc\u4e0d\u4f1a\u6309\u7167empty\u534f\u8bae\u53bb\u901a\u77e5\uff0c\u6240\u4ee5\u5ba2\u6237\u7aef\u7684\u6700\u540e\u4e00\u4e2aprovider\u7684\u4ee3\u7406invoker\u4e0d\u4f1a\u88ab\u6e05\u7406\u6389", "author": "tswstarplanet", "createdAt": "2020-03-26T02:35:24Z", "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java", "diffHunk": "@@ -162,20 +164,62 @@ public void doUnregister(final URL url) {\n     @Override\n     public void doSubscribe(final URL url, final NotifyListener listener) {\n         Set<String> serviceNames = getServiceNames(url, listener);\n+\n+        //Set corresponding serviceNames for easy search later\n+        if(isServiceNamesWithCompatibleMode(url)){\n+            for(String serviceName:serviceNames){\n+                NacosInstanceManageUtil.setCorrespondingServiceNames(serviceName, serviceNames);\n+            }\n+        }\n+", "originalCommit": "398a94ed33fc736589fe3a3c5982c40d0e5474b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMjUyMg==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r398302522", "bodyText": "\u8fd9\u91cc\u7684url\u662fconsumer\u7684\u5f15\u7528ref url\uff0c\u7c7b\u4f3cconsumer://ip/org.apache.dubbo.demo.DemoService?application=demo-consumer&category=providers,configurators,routers&check=false&dubbo=2.0.2&init=false&interface=org.apache.dubbo.demo.DemoService&methods=sayHello,sayHelloAsync&pid=46172&qos.port=33333&side=consumer&sticky=false&timestamp=1585126881120\uff0c\u73b0\u5728\u7684\u95ee\u9898\u662f2.7.3\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u7248\u672c\uff0cref url\u5bf9\u5e94\u7684serviceName\uff08\u5b58\u50a8\u5728nacos\u4e2d\u7684\u670d\u52a1\u540d\u79f0\uff09\u4e0d\u540c\u30022.7.6\u4e3a\u4e86\u517c\u5bb9\uff0c\u9488\u5bf9\u540c\u4e00\u4e2aurl\uff08consumer ref url\uff09\uff0c\u4f1a\u8ba2\u96052\u4e2aserviceName\u5bf9\u5e94\u7684nacos\u670d\u52a1\uff0c\u5bfc\u81f4\u4e86\u8fd9\u4e24\u4e2aissue\u91cc\u9762\u8bf4\u7684\u95ee\u9898\u3002\u6211\u73b0\u5728\u7684\u5904\u7406\u903b\u8f91\u662f\uff0c\u65b0\u8001serviceName\u5b9e\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u670d\u52a1\uff0c\u53ea\u662f\u5728nacos\u4e2d\u67092\u4e2a\u4e0d\u540c\u7684\u540d\u5b57\u3002\u56e0\u6b64\uff0c\u6211\u628a\u65b0\u8001\u4e24\u4e2aserviceName\u5bf9\u5e94\u7684\u670d\u52a1\u7edf\u4e00\u770b\u5f85\uff0c\u6bcf\u6b21\u66f4\u65b0\u53ef\u7528instances\u7684\u65f6\u5019\u4fdd\u8bc1\u4f1a\u5305\u542b\u4e24\u4e2aserviceName\u5bf9\u5e94\u7684\u6240\u6709instances\u3002\u4f60\u8bf4\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u670d\u52a1\u53ea\u67092.7.3\u4ee5\u4e0b\u7684provider\uff08\u53ea\u6709\u8001\u7248\u672c\u7684serviceName\u5bf9\u5e94\u7684\u670d\u52a1\uff09\uff0c\u5f53\u6240\u6709provider\u90fd\u4e0b\u7ebf\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u8fc72\u4e2aserviceName\u83b7\u53d6\u7684\u5065\u5eb7instances\u6570\u4e5f\u662f\u4e3a0\u7684\uff0cnotify\u6267\u884c\u65f6\uff0c\u4f1a\u628ainvokerUrl\uff08\u8fd9\u4e2a\u4ee3\u8868providerUrl\uff09\u7684\u534f\u8bae\u8bbe\u7f6e\u4e3aempty\uff0c\u4ece\u800c\u628aconsumer\u7aef\u63a5\u53e3\u7684\u8c03\u7528\u8bbe\u7f6e\u4e3aforbidden=true\u7981\u6b62\u6389\u3002\u7b49\u6709\u65b0\u7684provider\u4e0a\u7ebf\u7684\u65f6\u5019\uff0c\u4f1a\u8bbe\u7f6eforbidden=true\uff0c\u6062\u590d\u6b63\u5e38\u8c03\u7528\u3002\u5982\u679cprovider\u65e2\u6709\u8001\u7248\u672c\uff082.7.3\u4e4b\u524d\uff09\uff0c\u53c8\u6709\u65b0\u7248\u672c\uff082.7.3\u53ca\u4ee5\u540e\uff09\u7684\uff0c\u4f1a\u5728\u65b0\u8001\u7248\u672c\u7684\u6240\u6709instances\u90fd\u4e0b\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u628aconsumer\u7aef\u7684\u5f15\u7528\u7981\u6b62\u6389\u3002", "author": "laddcn", "createdAt": "2020-03-26T03:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4NDE3OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTMxOTcxMA==", "url": "https://github.com/apache/dubbo/pull/5902#discussion_r589319710", "bodyText": "\u4f60\u597d\uff0c\u6700\u8fd1\u770b\u8fd9\u5757\u4ee3\u7801\u89c9\u5f97\u6709\u70b9\u56f0\u60d1\u3002\u4e3a\u4ec0\u4e48\u5224\u65ad\u670d\u52a1\u662f\u5426\u9700\u8981\u517c\u5bb9\u7684\u65f6\u5019\uff0c\u8981\u901a\u8fc7createServiceName(url).isConcrete()\u53bb\u5224\u65ad\u5462\uff1f", "author": "horizonzy", "createdAt": "2021-03-08T10:29:34Z", "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosRegistry.java", "diffHunk": "@@ -162,20 +164,62 @@ public void doUnregister(final URL url) {\n     @Override\n     public void doSubscribe(final URL url, final NotifyListener listener) {\n         Set<String> serviceNames = getServiceNames(url, listener);\n+\n+        //Set corresponding serviceNames for easy search later\n+        if(isServiceNamesWithCompatibleMode(url)){\n+            for(String serviceName:serviceNames){\n+                NacosInstanceManageUtil.setCorrespondingServiceNames(serviceName, serviceNames);\n+            }\n+        }\n+\n         doSubscribe(url, listener, serviceNames);\n     }\n \n     private void doSubscribe(final URL url, final NotifyListener listener, final Set<String> serviceNames) {\n         execute(namingService -> {\n-            List<Instance> instances = new LinkedList();\n-            for (String serviceName : serviceNames) {\n-                instances.addAll(namingService.getAllInstances(serviceName));\n-                subscribeEventListener(serviceName, url, listener);\n+            if (isServiceNamesWithCompatibleMode(url)) {\n+                List<Instance> allCorrespondingInstanceList = Lists.newArrayList();\n+\n+                /**\n+                 * Get all instances with serviceNames to avoid instance overwrite and but with empty instance mentioned\n+                 * in https://github.com/apache/dubbo/issues/5885 and https://github.com/apache/dubbo/issues/5899\n+                 */\n+                for (String serviceName : serviceNames) {\n+                    List<Instance> instances = namingService.getAllInstances(serviceName);\n+                    NacosInstanceManageUtil.initOrRefreshServiceInstanceList(serviceName, instances);\n+                    allCorrespondingInstanceList.addAll(instances);\n+                }\n+                notifySubscriber(url, listener, allCorrespondingInstanceList);\n+                for (String serviceName : serviceNames) {\n+                    subscribeEventListener(serviceName, url, listener);\n+                }\n+            } else {\n+                List<Instance> instances = new LinkedList();\n+                for (String serviceName : serviceNames) {\n+                    instances.addAll(namingService.getAllInstances(serviceName));\n+                    notifySubscriber(url, listener, instances);\n+                    subscribeEventListener(serviceName, url, listener);\n+                }\n             }\n-            notifySubscriber(url, listener, instances);\n+\n         });\n     }\n \n+    /**\n+     * Since 2.7.6 the legacy service name will be added to serviceNames\n+     * to fix bug with https://github.com/apache/dubbo/issues/5442\n+     *\n+     * @param url\n+     * @return\n+     */\n+    private boolean isServiceNamesWithCompatibleMode(final URL url) {\n+        if (!isAdminProtocol(url) && createServiceName(url).isConcrete()) {", "originalCommit": "398a94ed33fc736589fe3a3c5982c40d0e5474b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}