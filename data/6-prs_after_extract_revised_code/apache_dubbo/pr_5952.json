{"pr_number": 5952, "pr_title": "Fix default config does not work as expected.", "pr_createdAt": "2020-03-31T12:15:44Z", "pr_url": "https://github.com/apache/dubbo/pull/5952", "timeline": [{"oid": "3d2b8f8eb60b2d4b6fc135e18d7af517620f5f13", "url": "https://github.com/apache/dubbo/commit/3d2b8f8eb60b2d4b6fc135e18d7af517620f5f13", "message": "fix isDefault does not work", "committedDate": "2020-03-31T12:11:44Z", "type": "commit"}, {"oid": "409f8f2855385eaaded02e5906a63b7d08c5f244", "url": "https://github.com/apache/dubbo/commit/409f8f2855385eaaded02e5906a63b7d08c5f244", "message": "refactor refectionUtils.getProperty", "committedDate": "2020-03-31T12:13:31Z", "type": "commit"}, {"oid": "eca0413d058c03480776bccd7956201c7fa3d7cd", "url": "https://github.com/apache/dubbo/commit/eca0413d058c03480776bccd7956201c7fa3d7cd", "message": "remove comment", "committedDate": "2020-03-31T12:14:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5MzA3Mw==", "url": "https://github.com/apache/dubbo/pull/5952#discussion_r402793073", "bodyText": "Why invoke the getDeclaredFields method here ?", "author": "zonghaishang", "createdAt": "2020-04-03T07:41:32Z", "path": "dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java", "diffHunk": "@@ -1273,16 +1272,18 @@ public static boolean isPublicInstanceField(Field field) {\n         Class<?> beanClass = bean.getClass();\n         BeanInfo beanInfo = null;\n         T propertyValue = null;\n+\n+        beanClass.getDeclaredFields();", "originalCommit": "3d2b8f8eb60b2d4b6fc135e18d7af517620f5f13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5NDc4Mw==", "url": "https://github.com/apache/dubbo/pull/5952#discussion_r402794783", "bodyText": "It's useless, will remove it now.", "author": "chickenlj", "createdAt": "2020-04-03T07:45:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5MzA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0c9439529538c9bb08175f8b452cd24ecc4e2b25", "chunk": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java\nindex 9e6b7c9ac..ea8d51f76 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java\n\n@@ -1260,24 +1260,23 @@ public final class ReflectUtils {\n     }\n \n     /**\n-     * Get the value from the specified bean and its property.\n+     * Get the value from the specified bean and its getter method.\n      *\n-     * @param bean         the bean instance\n-     * @param propertyName the name of property\n-     * @param <T>          the type of property value\n+     * @param bean       the bean instance\n+     * @param methodName the name of getter\n+     * @param <T>        the type of property value\n      * @return\n      * @since 2.7.5\n      */\n-    public static <T> T getProperty(Object bean, String propertyName) {\n+    public static <T> T getProperty(Object bean, String methodName) {\n         Class<?> beanClass = bean.getClass();\n         BeanInfo beanInfo = null;\n         T propertyValue = null;\n \n-        beanClass.getDeclaredFields();\n         try {\n             beanInfo = Introspector.getBeanInfo(beanClass);\n             propertyValue = (T) Stream.of(beanInfo.getMethodDescriptors())\n-                    .filter(methodDescriptor -> propertyName.equals(methodDescriptor.getName()))\n+                    .filter(methodDescriptor -> methodName.equals(methodDescriptor.getName()))\n                     .findFirst()\n                     .map(method -> {\n                         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5Mzc5Mw==", "url": "https://github.com/apache/dubbo/pull/5952#discussion_r402793793", "bodyText": "May be use PropertyDescriptor::getReadMethod, but consider the getXXX and isXXX scenarios more better ?", "author": "zonghaishang", "createdAt": "2020-04-03T07:42:59Z", "path": "dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java", "diffHunk": "@@ -1273,16 +1272,18 @@ public static boolean isPublicInstanceField(Field field) {\n         Class<?> beanClass = bean.getClass();\n         BeanInfo beanInfo = null;\n         T propertyValue = null;\n+\n+        beanClass.getDeclaredFields();\n         try {\n             beanInfo = Introspector.getBeanInfo(beanClass);\n-            propertyValue = (T) Stream.of(beanInfo.getPropertyDescriptors())\n-                    .filter(propertyDescriptor -> propertyName.equals(propertyDescriptor.getName()))\n-                    .map(PropertyDescriptor::getReadMethod)", "originalCommit": "3d2b8f8eb60b2d4b6fc135e18d7af517620f5f13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5OTE1Ng==", "url": "https://github.com/apache/dubbo/pull/5952#discussion_r402799156", "bodyText": "I am not sure, it cannot work as expected. Maybe it's because the strange name of the property and the method, it's not of the standard Bean specification:\nprivate Boolean isDefault; // should be default\n\npublic Boolean isDefault() {\n}", "author": "chickenlj", "createdAt": "2020-04-03T07:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5Mzc5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0c9439529538c9bb08175f8b452cd24ecc4e2b25", "chunk": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java\nindex 9e6b7c9ac..ea8d51f76 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ReflectUtils.java\n\n@@ -1260,24 +1260,23 @@ public final class ReflectUtils {\n     }\n \n     /**\n-     * Get the value from the specified bean and its property.\n+     * Get the value from the specified bean and its getter method.\n      *\n-     * @param bean         the bean instance\n-     * @param propertyName the name of property\n-     * @param <T>          the type of property value\n+     * @param bean       the bean instance\n+     * @param methodName the name of getter\n+     * @param <T>        the type of property value\n      * @return\n      * @since 2.7.5\n      */\n-    public static <T> T getProperty(Object bean, String propertyName) {\n+    public static <T> T getProperty(Object bean, String methodName) {\n         Class<?> beanClass = bean.getClass();\n         BeanInfo beanInfo = null;\n         T propertyValue = null;\n \n-        beanClass.getDeclaredFields();\n         try {\n             beanInfo = Introspector.getBeanInfo(beanClass);\n             propertyValue = (T) Stream.of(beanInfo.getMethodDescriptors())\n-                    .filter(methodDescriptor -> propertyName.equals(methodDescriptor.getName()))\n+                    .filter(methodDescriptor -> methodName.equals(methodDescriptor.getName()))\n                     .findFirst()\n                     .map(method -> {\n                         try {\n"}}, {"oid": "0c9439529538c9bb08175f8b452cd24ecc4e2b25", "url": "https://github.com/apache/dubbo/commit/0c9439529538c9bb08175f8b452cd24ecc4e2b25", "message": "remove useless method call", "committedDate": "2020-04-03T11:25:15Z", "type": "commit"}]}