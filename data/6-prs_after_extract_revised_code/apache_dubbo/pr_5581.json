{"pr_number": 5581, "pr_title": "Registry protocol listener", "pr_createdAt": "2020-01-03T09:18:46Z", "pr_url": "https://github.com/apache/dubbo/pull/5581", "timeline": [{"oid": "b447768398ca61bd8f09afecdd0a3762a115280c", "url": "https://github.com/apache/dubbo/commit/b447768398ca61bd8f09afecdd0a3762a115280c", "message": "introduce RegistryProtocolListener, and reRefer method on RegistryProtocol", "committedDate": "2020-01-02T12:51:54Z", "type": "commit"}, {"oid": "67db4fa581bfd026760e497c763b8b7d71f9a7e3", "url": "https://github.com/apache/dubbo/commit/67db4fa581bfd026760e497c763b8b7d71f9a7e3", "message": "make interface cleaner", "committedDate": "2020-01-03T07:41:24Z", "type": "commit"}, {"oid": "201f7a57e0507ccbc9b4bce019af95cf57850dda", "url": "https://github.com/apache/dubbo/commit/201f7a57e0507ccbc9b4bce019af95cf57850dda", "message": "re-register consumer model and provider model if necessary", "committedDate": "2020-01-03T16:35:20Z", "type": "commit"}, {"oid": "b817b299a692cefd37564b6fee94b87a8e892a64", "url": "https://github.com/apache/dubbo/commit/b817b299a692cefd37564b6fee94b87a8e892a64", "message": "Merge branch 'master' of https://github.com/apache/dubbo into registry-protocol-listener", "committedDate": "2020-01-03T16:36:23Z", "type": "commit"}, {"oid": "93809ff11c51d0a639e95b16ca430ba5067bdc9a", "url": "https://github.com/apache/dubbo/commit/93809ff11c51d0a639e95b16ca430ba5067bdc9a", "message": "make sure provider-model's servicekey changes before protocol's export, also update service metadata if necessary", "committedDate": "2020-01-03T18:06:19Z", "type": "commit"}, {"oid": "6bcd1d63f3c180ffb3653c379e6ae89e17211113", "url": "https://github.com/apache/dubbo/commit/6bcd1d63f3c180ffb3653c379e6ae89e17211113", "message": "also shallow copy method model", "committedDate": "2020-01-06T11:30:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYwNzk0OA==", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r363607948", "bodyText": "Please delete unused import, otherwise you can't pass ci check.", "author": "InstallingB", "createdAt": "2020-01-07T06:33:04Z", "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java", "diffHunk": "@@ -18,6 +18,7 @@\n \n import org.apache.dubbo.common.utils.Assert;\n import org.apache.dubbo.config.ReferenceConfigBase;\n+import org.apache.dubbo.config.annotation.Service;", "originalCommit": "6bcd1d63f3c180ffb3653c379e6ae89e17211113", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA3OTk0NQ==", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r364079945", "bodyText": "thanks, will do.", "author": "beiwei30", "createdAt": "2020-01-08T06:29:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYwNzk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "756660fa7496e1a06d937c0e89994901db11ecf0", "chunk": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java b/dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java\nindex 40783f955..271a3c420 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java\n\n@@ -16,9 +16,9 @@\n  */\n package org.apache.dubbo.rpc.model;\n \n+import org.apache.dubbo.common.BaseServiceMetadata;\n import org.apache.dubbo.common.utils.Assert;\n import org.apache.dubbo.config.ReferenceConfigBase;\n-import org.apache.dubbo.config.annotation.Service;\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n"}}, {"oid": "756660fa7496e1a06d937c0e89994901db11ecf0", "url": "https://github.com/apache/dubbo/commit/756660fa7496e1a06d937c0e89994901db11ecf0", "message": "enhance consumer model and provider model", "committedDate": "2020-01-07T11:47:10Z", "type": "commit"}, {"oid": "268360f067e9cd384d5ec4ecca7e4923c7a9c8d8", "url": "https://github.com/apache/dubbo/commit/268360f067e9cd384d5ec4ecca7e4923c7a9c8d8", "message": "Merge branch 'master' of https://github.com/apache/dubbo into registry-protocol-listener", "committedDate": "2020-01-07T11:48:17Z", "type": "commit"}, {"oid": "d739b515d98787dec2e6f5018b668a612eb1446b", "url": "https://github.com/apache/dubbo/commit/d739b515d98787dec2e6f5018b668a612eb1446b", "message": "fix minor issue when regiter consumer model wihtout group, and no need to re-build router chain", "committedDate": "2020-01-07T18:40:20Z", "type": "commit"}, {"oid": "e2d9d5ad1d5fc4595b5e5c8e560416fcd3746806", "url": "https://github.com/apache/dubbo/commit/e2d9d5ad1d5fc4595b5e5c8e560416fcd3746806", "message": "rebuild router chain, also clean up", "committedDate": "2020-01-08T06:25:37Z", "type": "commit"}, {"oid": "1a2d74a2ad987731f544cda550bdb784dbe4c7fd", "url": "https://github.com/apache/dubbo/commit/1a2d74a2ad987731f544cda550bdb784dbe4c7fd", "message": "optimize imports", "committedDate": "2020-01-08T06:32:50Z", "type": "commit"}, {"oid": "e918e3f936fcabd823533f70f398df902a92ad8d", "url": "https://github.com/apache/dubbo/commit/e918e3f936fcabd823533f70f398df902a92ad8d", "message": "avoid NPE", "committedDate": "2020-01-09T02:42:23Z", "type": "commit"}, {"oid": "e5641a8b53e47323879d4bcb4588ea0e36bb62f6", "url": "https://github.com/apache/dubbo/commit/e5641a8b53e47323879d4bcb4588ea0e36bb62f6", "message": "introduce onDestroy method", "committedDate": "2020-01-14T03:20:02Z", "type": "commit"}, {"oid": "8d2948077065693764bff2c6293ef006905d560f", "url": "https://github.com/apache/dubbo/commit/8d2948077065693764bff2c6293ef006905d560f", "message": "remove unused imports", "committedDate": "2020-01-14T03:24:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4NDQ0Ng==", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r367284446", "bodyText": "if newServiceKey equals serviceKey,then ProviderModel would be remove", "author": "qinliujie", "createdAt": "2020-01-16T08:25:35Z", "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ServiceRepository.java", "diffHunk": "@@ -84,33 +90,39 @@ public void registerConsumer(String serviceKey,\n                                  ReferenceConfigBase<?> rc,\n                                  Object proxy,\n                                  ServiceMetadata serviceMetadata) {\n-        consumers.computeIfAbsent(\n-                serviceKey,\n-                _k -> new ConsumerModel(\n-                        serviceMetadata.getServiceKey(),\n-                        proxy,\n-                        serviceDescriptor,\n-                        rc,\n-                        serviceMetadata\n-                )\n-        );\n+        ConsumerModel consumerModel = new ConsumerModel(serviceMetadata.getServiceKey(), proxy, serviceDescriptor, rc,\n+                serviceMetadata);\n+        consumers.putIfAbsent(serviceKey, consumerModel);\n+    }\n+\n+    public void reRegisterConsumer(String newServiceKey, String serviceKey) {\n+        ConsumerModel consumerModel = consumers.get(serviceKey);\n+        consumerModel.setServiceKey(newServiceKey);\n+        consumers.putIfAbsent(newServiceKey, consumerModel);\n+        consumers.remove(serviceKey);\n+\n     }\n \n     public void registerProvider(String serviceKey,\n                                  Object serviceInstance,\n                                  ServiceDescriptor serviceModel,\n                                  ServiceConfigBase<?> serviceConfig,\n                                  ServiceMetadata serviceMetadata) {\n-        providers.computeIfAbsent(\n-                serviceKey,\n-                _k -> new ProviderModel(\n-                        serviceKey,\n-                        serviceInstance,\n-                        serviceModel,\n-                        serviceConfig,\n-                        serviceMetadata\n-                )\n-        );\n+        ProviderModel providerModel = new ProviderModel(serviceKey, serviceInstance, serviceModel, serviceConfig,\n+                serviceMetadata);\n+        providers.putIfAbsent(serviceKey, providerModel);\n+        providersWithoutGroup.putIfAbsent(keyWithoutGroup(serviceKey), providerModel);\n+    }\n+\n+    private static String keyWithoutGroup(String serviceKey) {\n+        return interfaceFromServiceKey(serviceKey) + \":\" + versionFromServiceKey(serviceKey);\n+    }\n+\n+    public void reRegisterProvider(String newServiceKey, String serviceKey) {", "originalCommit": "8d2948077065693764bff2c6293ef006905d560f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4Nzk0Ng==", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r367287946", "bodyText": "is it should be if (shouldSimplified)", "author": "qinliujie", "createdAt": "2020-01-16T08:33:48Z", "path": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/integration/RegistryDirectory.java", "diffHunk": "@@ -616,8 +641,14 @@ public URL getRegisteredConsumerUrl() {\n         return registeredConsumerUrl;\r\n     }\r\n \r\n-    public void setRegisteredConsumerUrl(URL registeredConsumerUrl) {\r\n-        this.registeredConsumerUrl = registeredConsumerUrl;\r\n+    public void setRegisteredConsumerUrl(URL url) {\r\n+        if (!shouldSimplified) {\r", "originalCommit": "8d2948077065693764bff2c6293ef006905d560f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "381d93848b90f2b77a278a31ff9d28c2e13b2340", "url": "https://github.com/apache/dubbo/commit/381d93848b90f2b77a278a31ff9d28c2e13b2340", "message": "Merge branch 'master' into registry-protocol-listener", "committedDate": "2020-01-16T09:20:15Z", "type": "commit"}]}