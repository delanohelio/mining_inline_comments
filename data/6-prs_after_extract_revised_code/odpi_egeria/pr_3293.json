{"pr_number": 3293, "pr_title": "Refactor queries to exclude glossaries and classfications", "pr_createdAt": "2020-07-02T12:34:37Z", "pr_url": "https://github.com/odpi/egeria/pull/3293", "timeline": [{"oid": "cf3374a4342704c7fc34794792d004f3144fc66c", "url": "https://github.com/odpi/egeria/commit/cf3374a4342704c7fc34794792d004f3144fc66c", "message": "refactored queries to not include glossary terms and classifications\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-02T12:07:39Z", "type": "commit"}, {"oid": "19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "url": "https://github.com/odpi/egeria/commit/19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "message": "re-added imports\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-02T12:33:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5OTkxMw==", "url": "https://github.com/odpi/egeria/pull/3293#discussion_r449999913", "bodyText": "For consistency, better to remove the ... parameter from endToEnd method and have it within.", "author": "lcpopa", "createdAt": "2020-07-06T06:04:07Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java", "diffHunk": "@@ -637,8 +676,7 @@ public LineageResponse lineage(Scope scope, String guid, String displayNameMustC\n                 lineageVerticesAndEdges = helper.sourceAndDestination(guid, includeProcesses);\n                 break;\n             case END_TO_END:\n-                lineageVerticesAndEdges = helper.endToEnd(guid, includeProcesses, EDGE_LABEL_SEMANTIC_ASSIGNMENT,\n-                        EDGE_LABEL_DATAFLOW_WITH_PROCESS, EDGE_LABEL_CLASSIFICATION);\n+                lineageVerticesAndEdges = helper.endToEnd(guid, includeProcesses, EDGE_LABEL_DATAFLOW_WITH_PROCESS);", "originalCommit": "19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bef4cb432e3281dbe117b70813966a2f9409a739", "chunk": "diff --git a/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java b/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java\nindex f401faa7b4..7c28fd700a 100644\n--- a/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java\n+++ b/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnector.java\n\n@@ -676,7 +676,7 @@ public class LineageGraphConnector extends LineageGraphConnectorBase {\n                 lineageVerticesAndEdges = helper.sourceAndDestination(guid, includeProcesses);\n                 break;\n             case END_TO_END:\n-                lineageVerticesAndEdges = helper.endToEnd(guid, includeProcesses, EDGE_LABEL_DATAFLOW_WITH_PROCESS);\n+                lineageVerticesAndEdges = helper.endToEnd(guid, includeProcesses);\n                 break;\n             case ULTIMATE_SOURCE:\n                 lineageVerticesAndEdges = helper.ultimateSource(guid, includeProcesses);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDIwOA==", "url": "https://github.com/odpi/egeria/pull/3293#discussion_r450000208", "bodyText": "In case we need it, we can take the old query from git history, so deleting it is more fitting", "author": "lcpopa", "createdAt": "2020-07-06T06:05:06Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java", "diffHunk": "@@ -119,23 +115,32 @@ LineageVerticesAndEdges ultimateSource(String guid, boolean includeProcesses) {\n         return getCondensedLineage(guid, g, sourceGraph, getLineageVertices(sourcesList), SOURCE_CONDENSATION, includeProcesses);\n     }\n \n+ /*", "originalCommit": "19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bef4cb432e3281dbe117b70813966a2f9409a739", "chunk": "diff --git a/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java b/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\nindex 113d15de19..309bfb6873 100644\n--- a/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\n+++ b/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\n\n@@ -115,18 +115,6 @@ public class LineageGraphConnectorHelper {\n         return getCondensedLineage(guid, g, sourceGraph, getLineageVertices(sourcesList), SOURCE_CONDENSATION, includeProcesses);\n     }\n \n- /*\n-    old query for ultimate source\n-    g.V().has(PROPERTY_KEY_ENTITY_GUID, guid).\n-            union(\n-                    inE(EDGE_LABEL_SEMANTIC_ASSIGNMENT, EDGE_LABEL_CLASSIFICATION).subgraph(\"subGraph\").outV().simplePath(),\n-                    until(inE(EDGE_LABEL_DATAFLOW_WITH_PROCESS, EDGE_LABEL_SEMANTIC_ASSIGNMENT).count().is(0)).\n-                            repeat((Traversal) inE(EDGE_LABEL_DATAFLOW_WITH_PROCESS, EDGE_LABEL_SEMANTIC_ASSIGNMENT,\n-                                    EDGE_LABEL_CLASSIFICATION).subgraph(\"subGraph\").outV().simplePath())\n-            ).cap(\"subGraph\").next();\n-\n- */\n-\n     /**\n      * Returns a subgraph containing all leaf nodes of the full graph that are connected with the queried node.\n      * The queried node can be a column or table.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDI2Ng==", "url": "https://github.com/odpi/egeria/pull/3293#discussion_r450000266", "bodyText": "Same here", "author": "lcpopa", "createdAt": "2020-07-06T06:05:19Z", "path": "open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java", "diffHunk": "@@ -145,13 +150,22 @@ LineageVerticesAndEdges ultimateDestination(String guid, boolean includeProcesse\n         return getCondensedLineage(guid, g, destinationGraph, getLineageVertices(destinationsList), DESTINATION_CONDENSATION, includeProcesses);\n     }\n \n+/*", "originalCommit": "19d9ad96e0f6d17a66758d905adc5ab3f80533a0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bef4cb432e3281dbe117b70813966a2f9409a739", "chunk": "diff --git a/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java b/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\nindex 113d15de19..309bfb6873 100644\n--- a/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\n+++ b/open-metadata-implementation/adapters/open-connectors/governance-daemon-connectors/open-lineage-connectors/open-lineage-janus-connector/src/main/java/org/odpi/openmetadata/openconnectors/governancedaemonconnectors/openlineageconnectors/janusconnector/graph/LineageGraphConnectorHelper.java\n\n@@ -150,33 +138,22 @@ public class LineageGraphConnectorHelper {\n         return getCondensedLineage(guid, g, destinationGraph, getLineageVertices(destinationsList), DESTINATION_CONDENSATION, includeProcesses);\n     }\n \n-/*\n-    old query for ultimateDestination\n-    g.V().has(PROPERTY_KEY_ENTITY_GUID, guid).\n-            union(\n-                    inE(EDGE_LABEL_SEMANTIC_ASSIGNMENT, EDGE_LABEL_CLASSIFICATION).subgraph(\"subGraph\").outV().simplePath(),\n-                    until(outE(EDGE_LABEL_DATAFLOW_WITH_PROCESS).count().is(0)).\n-                            repeat((Traversal) outE(EDGE_LABEL_DATAFLOW_WITH_PROCESS).subgraph(\"subGraph\").inV().simplePath())\n-            ).cap(\"subGraph\").next();\n-*/\n-\n     /**\n      * Returns a subgraph containing all paths leading from any root node to the queried node, and all of the paths\n      * leading from the queried node to any leaf nodes. The queried node can be a column or table.\n      *\n-     * @param guid       The guid of the node of which the lineage is queried of. This can be a column or a table.\n-     * @param edgeLabels Traversed edges\n+     * @param guid The guid of the node of which the lineage is queried of. This can be a column or a table.\n      * @return a subgraph in an Open Lineage specific format.\n      */\n-    LineageVerticesAndEdges endToEnd(String guid, boolean includeProcesses, String... edgeLabels) {\n+    LineageVerticesAndEdges endToEnd(String guid, boolean includeProcesses) {\n \n         Graph endToEndGraph = (Graph)\n                 g.V().has(PROPERTY_KEY_ENTITY_GUID, guid).\n                         union(\n-                                until(inE(edgeLabels).count().is(0)).\n-                                        repeat((Traversal) inE(edgeLabels).subgraph(\"subGraph\").outV().simplePath()),\n-                                until(outE(edgeLabels).count().is(0)).\n-                                        repeat((Traversal) outE(edgeLabels).subgraph(\"subGraph\").inV().simplePath())\n+                                until(inE(EDGE_LABEL_DATAFLOW_WITH_PROCESS).count().is(0)).\n+                                        repeat((Traversal) inE(EDGE_LABEL_DATAFLOW_WITH_PROCESS).subgraph(\"subGraph\").outV().simplePath()),\n+                                until(outE(EDGE_LABEL_DATAFLOW_WITH_PROCESS).count().is(0)).\n+                                        repeat((Traversal) outE(EDGE_LABEL_DATAFLOW_WITH_PROCESS).subgraph(\"subGraph\").inV().simplePath())\n                         ).cap(\"subGraph\").next();\n \n         return getLineageVerticesAndEdges(endToEndGraph, includeProcesses);\n"}}, {"oid": "bef4cb432e3281dbe117b70813966a2f9409a739", "url": "https://github.com/odpi/egeria/commit/bef4cb432e3281dbe117b70813966a2f9409a739", "message": "fixed small issues\n\nSigned-off-by: marius-patrascu <marius-florin.patrascu@ing.com>", "committedDate": "2020-07-06T07:28:58Z", "type": "commit"}]}