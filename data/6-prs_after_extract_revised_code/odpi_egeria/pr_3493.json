{"pr_number": 3493, "pr_title": "Enchanted generic response", "pr_createdAt": "2020-08-16T07:27:34Z", "pr_url": "https://github.com/odpi/egeria/pull/3493", "timeline": [{"oid": "01d8ae00e66d4069cc009c9fe7f852a64ba6e839", "url": "https://github.com/odpi/egeria/commit/01d8ae00e66d4069cc009c9fe7f852a64ba6e839", "message": "# Fix incorrect names\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-08-14T10:59:25Z", "type": "commit"}, {"oid": "1bde5bed296c900bae2be6e0a1d46623da5ac100", "url": "https://github.com/odpi/egeria/commit/1bde5bed296c900bae2be6e0a1d46623da5ac100", "message": "# Split SubjectAreaOMASAPIResponse to GenericResponse. Added FFDCResponse interface.\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-08-16T07:19:13Z", "type": "commit"}, {"oid": "1e72b28a747e4bf64f346cc3ed95d714fc3b418b", "url": "https://github.com/odpi/egeria/commit/1e72b28a747e4bf64f346cc3ed95d714fc3b418b", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-16T08:17:34Z", "type": "commit"}, {"oid": "a7c19b1639ba5d6e2edaea547922f4562ee83348", "url": "https://github.com/odpi/egeria/commit/a7c19b1639ba5d6e2edaea547922f4562ee83348", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-17T11:11:37Z", "type": "commit"}, {"oid": "3c77e3fc8c8638dfd17afc98d82f89357cab5e38", "url": "https://github.com/odpi/egeria/commit/3c77e3fc8c8638dfd17afc98d82f89357cab5e38", "message": "Add ffdc services to gradle build for subject area fvt\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>", "committedDate": "2020-08-17T15:32:12Z", "type": "commit"}, {"oid": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "url": "https://github.com/odpi/egeria/commit/b7cc98423a1bcc08a22e33bff836ae02ee49559a", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-24T08:04:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyMDI1OA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475420258", "bodyText": "I suggest not using getHead as the method name. I assume this refers to the head (first) element in the array, which is terminology referring to the implementation. I suggest changing this to getOnlyResult()- or similar-  which makes more sense for the caller.\nThis led me to think that it might be clearer to have 2 child interfaces\n\nGenericMultiResponse - with getResults method\nGenericSingleResponse - with getResult method\n\nThe caller then uses the appropriate interface and associated method.", "author": "davidradl", "createdAt": "2020-08-24T08:19:44Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+\n+public interface GenericResponse<R> extends FFDCResponse {\n+\n+    /**\n+     * Add several results for the response\n+     * @param results collection with results\n+     * */\n+    void addAllResults(Collection<? extends R> results);\n+\n+    /**\n+     * Add single result for the response\n+     * @param result - one result\n+     * */\n+    void addResult(R result);\n+\n+    /**\n+     * Get all results of the response\n+     *\n+     * @return results\n+     **/\n+    List<R> getResult();\n+\n+    /**\n+     * Get head element from result array.", "originalCommit": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzOTg3NA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475839874", "bodyText": "In this case, this is just an auxiliary method, for those cases when we clearly know that we have a single result in our response. I don't think that we should divide into 2 interfaces in this case, it's just an auxiliary method for more convenient work on the back end and nothing more.", "author": "immmus", "createdAt": "2020-08-24T19:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyMDI1OA=="}], "type": "inlineReview", "revised_code": {"commit": "ba2bececbff456e973fc1e97d503151752de188d", "chunk": "diff --git a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java\nindex 1806b61312..21278bb693 100644\n--- a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java\n+++ b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java\n\n@@ -4,8 +4,11 @@ package org.odpi.openmetadata.commonservices.ffdc.rest;\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Optional;\n \n-\n+/**\n+ * If an OMAS uses Generic types to implement it's Java API, then the responses can implement this interface.\n+ */\n public interface GenericResponse<R> extends FFDCResponse {\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNDI0NA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475424244", "bodyText": "I am not sure what value = {\"head\"}) is doing here - I am not understanding; does this relate to the getHead methods?  Please could you add a comment to explain why it is needed and how it impacts the other parts of the code.", "author": "davidradl", "createdAt": "2020-08-24T08:27:06Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/responses/SubjectAreaOMASAPIResponse.java", "diffHunk": "@@ -20,26 +21,23 @@\n  */\n @JsonAutoDetect(getterVisibility = PUBLIC_ONLY, setterVisibility = PUBLIC_ONLY, fieldVisibility = NONE)\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-@JsonIgnoreProperties(ignoreUnknown = true)\n-public class SubjectAreaOMASAPIResponse<R> extends FFDCResponseBase {\n+@JsonIgnoreProperties(ignoreUnknown = true, value = {\"head\"})", "originalCommit": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzODEzMw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475838133", "bodyText": "Yes, value = {\"head\"}means that Jackson does not serialize result from getter (getHead). Because it does not need for clients in their json.", "author": "immmus", "createdAt": "2020-08-24T19:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNDI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0NjIzMQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r476246231", "bodyText": "Ah ok thanks.", "author": "davidradl", "createdAt": "2020-08-25T07:48:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNDI0NA=="}], "type": "inlineReview", "revised_code": {"commit": "7a4f12a0b9b8ce33c18d2ec3ee498f37ff3bd586", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/responses/SubjectAreaOMASAPIResponse.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/responses/SubjectAreaOMASAPIResponse.java\nindex 5be1c56c4b..b8ea910d74 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/responses/SubjectAreaOMASAPIResponse.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/responses/SubjectAreaOMASAPIResponse.java\n\n@@ -25,7 +25,7 @@ import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_\n public class SubjectAreaOMASAPIResponse<R> extends FFDCResponseBase implements GenericResponse<R> {\n     @JsonProperty(\"result\")\n     @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"class\", visible = true)\n-    private List<R> result = new ArrayList<>();\n+    private final List<R> result = new ArrayList<>();\n \n     @JsonCreator\n     public SubjectAreaOMASAPIResponse() { /* default constructor */ }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNjU0NQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475426545", "bodyText": "Shouldn't the spelling of this be Parameterization", "author": "davidradl", "createdAt": "2020-08-24T08:30:56Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java", "diffHunk": "@@ -1,27 +1,32 @@\n /* SPDX-License-Identifier: Apache-2.0 */\n /* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.accessservices.subjectarea.client;\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n \n-import org.odpi.openmetadata.accessservices.subjectarea.responses.SubjectAreaOMASAPIResponse;\n import org.springframework.core.ParameterizedTypeReference;\n import org.springframework.core.ResolvableType;\n \n /**\n- * @param <T> The type of the parameterized class whose objects will be returned in responses.\n+ * @param <Result> The type of the parameterized class whose objects will be returned in responses.\n  * The purpose of this interface is to enable capturing and passing a generic type. */\n-public interface Parametrization<T> {\n+public interface Parametrization<Result> {", "originalCommit": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzNDUzNQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475834535", "bodyText": "I this case it generic parameter is mark of result", "author": "immmus", "createdAt": "2020-08-24T19:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNjU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0NDE5OA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r476244198", "bodyText": "the interface name is Parametrization, but this is not a proper word , the closest word is Parameterization. I wondered if that was what you intended.", "author": "davidradl", "createdAt": "2020-08-25T07:45:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNjU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MTkwMw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r476281903", "bodyText": "Parametrization, also spelled parameterization, parametrisation or parameterisation, is the process of defining or choosing parameters. I read it in https://en.wikipedia.org/wiki/Parametrization", "author": "immmus", "createdAt": "2020-08-25T08:45:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNjU0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzNDQ0OA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r481034448", "bodyText": "Parametrization, also spelled parameterization, parametrisation or parameterisation, is the process of defining or choosing parameters. I read it in https://en.wikipedia.org/wiki/Parametrization\n\nNice evidence based response .", "author": "davidradl", "createdAt": "2020-09-01T10:22:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNjU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a4f12a0b9b8ce33c18d2ec3ee498f37ff3bd586", "chunk": "diff --git a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java\nindex 09a1d8fdb1..76ed57d9f1 100644\n--- a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java\n+++ b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java\n\n@@ -7,7 +7,7 @@ import org.springframework.core.ResolvableType;\n \n /**\n  * @param <Result> The type of the parameterized class whose objects will be returned in responses.\n- * The purpose of this interface is to enable capturing and passing a generic type. */\n+ * The purpose of this interface is to enable capturing and passing a generic result. */\n public interface Parametrization<Result> {\n     /**\n      * @return class type for Result\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNzEzOQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475427139", "bodyText": "should \"enable capturing and passing a generic type\" be \"enable capturing and passing a generic result\"", "author": "davidradl", "createdAt": "2020-08-24T08:32:02Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java", "diffHunk": "@@ -1,27 +1,32 @@\n /* SPDX-License-Identifier: Apache-2.0 */\n /* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.accessservices.subjectarea.client;\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n \n-import org.odpi.openmetadata.accessservices.subjectarea.responses.SubjectAreaOMASAPIResponse;\n import org.springframework.core.ParameterizedTypeReference;\n import org.springframework.core.ResolvableType;\n \n /**\n- * @param <T> The type of the parameterized class whose objects will be returned in responses.\n+ * @param <Result> The type of the parameterized class whose objects will be returned in responses.\n  * The purpose of this interface is to enable capturing and passing a generic type. */", "originalCommit": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg0MDYwNw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475840607", "bodyText": "Okay", "author": "immmus", "createdAt": "2020-08-24T19:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyNzEzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a4f12a0b9b8ce33c18d2ec3ee498f37ff3bd586", "chunk": "diff --git a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java\nindex 09a1d8fdb1..76ed57d9f1 100644\n--- a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java\n+++ b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/Parametrization.java\n\n@@ -7,7 +7,7 @@ import org.springframework.core.ResolvableType;\n \n /**\n  * @param <Result> The type of the parameterized class whose objects will be returned in responses.\n- * The purpose of this interface is to enable capturing and passing a generic type. */\n+ * The purpose of this interface is to enable capturing and passing a generic result. */\n public interface Parametrization<Result> {\n     /**\n      * @return class type for Result\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzMjA2MA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475432060", "bodyText": "I suggest changing this string to HasA so it matches the class name for consistency. Same for the other Lines.", "author": "davidradl", "createdAt": "2020-08-24T08:41:04Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/graph/LineTypeMapper.java", "diffHunk": "@@ -25,11 +25,11 @@\n      */\n     static public String  mapLineTypeToRelationshipTypeGuid(LineType lineType) {\n         String relationshipTypeName = lineType.name();\n-        if (lineType.equals(LineType.Hasa)) {\n+        if (lineType.equals(LineType.HasA)) {\n             relationshipTypeName =\"TermHASARelationship\";", "originalCommit": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgzMzAxMg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475833012", "bodyText": "@davidradl I thought about this but I saw this docs https://egeria.odpi.org/open-metadata-publication/website/open-metadata-types/0380-Spine-Objects.html and I realized that in the repository the name is such", "author": "immmus", "createdAt": "2020-08-24T19:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzMjA2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI0NTgxMw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r476245813", "bodyText": "@immmus I would suggest the omas is consistent with its own concepts; it should not use field names and the like because they match omrs, if there is a more appropriate concept to expose in the omas. This is one ofthe value adds of the omas, it exposes a more appropriate concept to a persona.", "author": "davidradl", "createdAt": "2020-08-25T07:48:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzMjA2MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzMzcyMg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475433722", "bodyText": "the comments say activity but the method name is Action. I suggest using the same noun to prevent potential confusion", "author": "davidradl", "createdAt": "2020-08-24T08:43:48Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/FFDCResponse.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n+\n+import java.util.Map;\n+\n+public interface FFDCResponse {\n+\n+    /**\n+     * Return the HTTP Code to use if forwarding response to HTTP client.\n+     *\n+     * @return integer HTTP status code\n+     */\n+    int getRelatedHTTPCode();\n+\n+    /**\n+     * Return the name of the Java class name to use to recreate the exception.\n+     *\n+     * @return String name of the fully-qualified java class name\n+     */\n+    String getExceptionClassName();\n+\n+    /**\n+     * Return the name of any nested exception that may indicate the root cause of the exception.\n+     *\n+     * @return exception class name\n+     */\n+    String getExceptionCausedBy();\n+\n+    /**\n+     * Return the description of the activity in progress when the exception occurred.", "originalCommit": "b7cc98423a1bcc08a22e33bff836ae02ee49559a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg0MjQzMg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r475842432", "bodyText": "Yes, okay I too think so", "author": "immmus", "createdAt": "2020-08-24T19:24:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzMzcyMg=="}], "type": "inlineReview", "revised_code": {"commit": "7a4f12a0b9b8ce33c18d2ec3ee498f37ff3bd586", "chunk": "diff --git a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/FFDCResponse.java b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/FFDCResponse.java\nindex a412b84d9f..73eef018f5 100644\n--- a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/FFDCResponse.java\n+++ b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/FFDCResponse.java\n\n@@ -28,7 +28,7 @@ public interface FFDCResponse {\n     String getExceptionCausedBy();\n \n     /**\n-     * Return the description of the activity in progress when the exception occurred.\n+     * Return the description of the action in progress when the exception occurred.\n      *\n      * @return string description\n      */\n"}}, {"oid": "6e2e0e51af336966eeee785df8cd95b70f41a27b", "url": "https://github.com/odpi/egeria/commit/6e2e0e51af336966eeee785df8cd95b70f41a27b", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-24T19:21:18Z", "type": "commit"}, {"oid": "7a4f12a0b9b8ce33c18d2ec3ee498f37ff3bd586", "url": "https://github.com/odpi/egeria/commit/7a4f12a0b9b8ce33c18d2ec3ee498f37ff3bd586", "message": "# small fix comments and added final to field.\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-08-24T19:28:31Z", "type": "commit"}, {"oid": "3e5a881a8ab34e3adfa04204e21346927f111493", "url": "https://github.com/odpi/egeria/commit/3e5a881a8ab34e3adfa04204e21346927f111493", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-25T22:01:26Z", "type": "commit"}, {"oid": "1da67d1db667e8de2e1f05e13f7ed2468040dd17", "url": "https://github.com/odpi/egeria/commit/1da67d1db667e8de2e1f05e13f7ed2468040dd17", "message": "# Renamed Parametrization to ResponseParameterization. Added default logic for detecting generic type.\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-08-26T08:53:45Z", "type": "commit"}, {"oid": "5236619995411d1de3f96b771fb1dbabfe480d6f", "url": "https://github.com/odpi/egeria/commit/5236619995411d1de3f96b771fb1dbabfe480d6f", "message": "Merge remote-tracking branch 'origin/Enchanted_generic_response' into Enchanted_generic_response", "committedDate": "2020-08-26T08:54:28Z", "type": "commit"}, {"oid": "63ff92ad8bf9bed79ba49ba669107e2f6d0faa26", "url": "https://github.com/odpi/egeria/commit/63ff92ad8bf9bed79ba49ba669107e2f6d0faa26", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-27T14:11:54Z", "type": "commit"}, {"oid": "f80906668e6c2ef39898387e4600c6ce07a7849f", "url": "https://github.com/odpi/egeria/commit/f80906668e6c2ef39898387e4600c6ce07a7849f", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-28T13:11:51Z", "type": "commit"}, {"oid": "d10c69d5906bb485c04b9a2792388128fab3fac6", "url": "https://github.com/odpi/egeria/commit/d10c69d5906bb485c04b9a2792388128fab3fac6", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-08-31T10:11:14Z", "type": "commit"}, {"oid": "f0cfa22de25307d5b26a1aea5f3cb301b1c20112", "url": "https://github.com/odpi/egeria/commit/f0cfa22de25307d5b26a1aea5f3cb301b1c20112", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-01T10:11:35Z", "type": "commit"}, {"oid": "beb55be39aa9fb4941d94b4f37a6f2544b0716dc", "url": "https://github.com/odpi/egeria/commit/beb55be39aa9fb4941d94b4f37a6f2544b0716dc", "message": "# Changed the logic of clients and the classes using them\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-02T00:21:30Z", "type": "commit"}, {"oid": "2fbd8ee685e5f135978f112613192383e93cba02", "url": "https://github.com/odpi/egeria/commit/2fbd8ee685e5f135978f112613192383e93cba02", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-02T00:24:13Z", "type": "commit"}, {"oid": "5f60c4c5909b3b3497c6a3f73bce0f1a1b27c185", "url": "https://github.com/odpi/egeria/commit/5f60c4c5909b3b3497c6a3f73bce0f1a1b27c185", "message": "# Changed comment\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-02T00:31:45Z", "type": "commit"}, {"oid": "96d48f31d59785c1b5b668d3b9e641d132a0afd7", "url": "https://github.com/odpi/egeria/commit/96d48f31d59785c1b5b668d3b9e641d132a0afd7", "message": "# fix javadoc\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-02T08:22:37Z", "type": "commit"}, {"oid": "10a65afd1323d189a02d7260cde66135acc6426a", "url": "https://github.com/odpi/egeria/commit/10a65afd1323d189a02d7260cde66135acc6426a", "message": "Merge remote-tracking branch 'origin/Enchanted_generic_response' into Enchanted_generic_response", "committedDate": "2020-09-02T08:23:37Z", "type": "commit"}, {"oid": "4fbe4199dd5786d4b13472501cd70cfd0ef4f1bc", "url": "https://github.com/odpi/egeria/commit/4fbe4199dd5786d4b13472501cd70cfd0ef4f1bc", "message": "# Modifiers to Java Language Specification\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-03T21:23:49Z", "type": "commit"}, {"oid": "dbc0f2ea9521d8eb6aa41d64cbc483e3c5a6abc5", "url": "https://github.com/odpi/egeria/commit/dbc0f2ea9521d8eb6aa41d64cbc483e3c5a6abc5", "message": "# Small change\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-03T22:03:47Z", "type": "commit"}, {"oid": "a9c750611d910f9f4af06a76c0f51db97b2a8be0", "url": "https://github.com/odpi/egeria/commit/a9c750611d910f9f4af06a76c0f51db97b2a8be0", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-04T19:46:26Z", "type": "commit"}, {"oid": "f56677e711fcaade43a8a96870c7597ef1898f19", "url": "https://github.com/odpi/egeria/commit/f56677e711fcaade43a8a96870c7597ef1898f19", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-08T10:02:48Z", "type": "commit"}, {"oid": "b0c877083ced220a1419fe13cbdb9fc333c9369b", "url": "https://github.com/odpi/egeria/commit/b0c877083ced220a1419fe13cbdb9fc333c9369b", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-16T09:55:03Z", "type": "commit"}, {"oid": "dcb86106c234c700b4afcebe84ecc7a92b309945", "url": "https://github.com/odpi/egeria/commit/dcb86106c234c700b4afcebe84ecc7a92b309945", "message": "# small fixes\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-16T10:29:31Z", "type": "commit"}, {"oid": "11da71ad6f7c0c5eb0f755de718e18c3dbc42685", "url": "https://github.com/odpi/egeria/commit/11da71ad6f7c0c5eb0f755de718e18c3dbc42685", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-17T16:33:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM4MTMxNw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490381317", "bodyText": "I am not sure what \"A standard set of customers\" means here. I suggest removing this line as it is describing the interface.", "author": "davidradl", "createdAt": "2020-09-17T16:15:35Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java", "diffHunk": "@@ -24,11 +20,10 @@\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaCategory}, {@link SubjectAreaTerm},\n- * {@link SubjectAreaProject}, {@link SubjectAreaGlossary}\n+ * A standard set of customers is described in {@link SubjectAreaNodeClients}", "originalCommit": "dcb86106c234c700b4afcebe84ecc7a92b309945", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3Mzc1MQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490473751", "bodyText": "@davidradl okay", "author": "immmus", "createdAt": "2020-09-17T18:36:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM4MTMxNw=="}], "type": "inlineReview", "revised_code": {"commit": "7e96ba5b47ce33f6feeae1292ffdd79632d5a94d", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nsimilarity index 90%\nrename from open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java\nrename to open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nindex 5a3a27790f..77413b65f6 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\n\n@@ -20,18 +20,17 @@ import java.util.*;\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaNodeClients}\n  */\n-public class SubjectAreaNode implements SubjectAreaNodeClients {\n+public class DefaultSubjectAreaNodeClients implements SubjectAreaNodeClients {\n     private final Map<Class<?>, SubjectAreaNodeClient<?>> cache = new HashMap<>();\n-    private static final String DEFAULT_SCAN_PACKAGE = SubjectAreaNode.class.getPackage().getName();\n+    private static final String DEFAULT_SCAN_PACKAGE = DefaultSubjectAreaNodeClients.class.getPackage().getName();\n \n     /**\n      * @param packagesToScan - search packages for finding classes placed by annotation {@link org.odpi.openmetadata.accessservices.subjectarea.client.nodes.SubjectAreaNodeClient}\n      * @param subjectAreaRestClient - rest client for Subject Area OMAS REST APIs\n      * */\n     @SuppressWarnings(\"rawtypes\")\n-    public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n+    public DefaultSubjectAreaNodeClients(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n         Set<String> packages = new HashSet<>(Arrays.asList(packagesToScan));\n         packages.add(DEFAULT_SCAN_PACKAGE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQwOTUzMA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490409530", "bodyText": "I think it would be more intuitive to change \"glossaries\" to \"glossaryClient and the same of the other methods.", "author": "davidradl", "createdAt": "2020-09-17T16:46:41Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNodeClients.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client.nodes;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.client.SubjectAreaNodeClient;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.nodes.projects.SubjectAreaProjectClient;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.category.Category;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.glossary.Glossary;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.project.Project;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.term.Term;\n+\n+public interface SubjectAreaNodeClients {\n+\n+    /**\n+     * Get the subject area glossary API class - use this class to issue glossary calls.\n+     *\n+     * @param <G> type for supplied and return.\n+     * @return subject area glossary API class\n+     */\n+    <G extends Glossary> SubjectAreaNodeClient<G> glossaries();", "originalCommit": "11da71ad6f7c0c5eb0f755de718e18c3dbc42685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MzU1MQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490473551", "bodyText": "@davidradl These method is found in SubjectAreaNode\"Clients\" and return SubjectAreaNode\"Client\" that clearly implies return client so I dont want rename these methods with postfix \"client\".", "author": "immmus", "createdAt": "2020-09-17T18:36:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQwOTUzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5NDUwMw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490794503", "bodyText": "@davidradl These method is found in SubjectAreaNode\"Clients\" and return SubjectAreaNode\"Client\" that clearly implies return client so I dont want rename these methods with postfix \"client\".\n\n@immus I can see that, I read a method called glossaries to be returning glossaries; with this in mind you may want to change them. I will not be insistent on this if you do not want to, as I do not see it as that important.", "author": "davidradl", "createdAt": "2020-09-18T08:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQwOTUzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxMTU4NQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490411585", "bodyText": "I suggest renaming SubjectAreaNode to SubjectAreaNodeClientsImpl; I think this would be more explicit. SubjectAreaNode sounds like an object.", "author": "davidradl", "createdAt": "2020-09-17T16:49:39Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java", "diffHunk": "@@ -24,11 +20,10 @@\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaCategory}, {@link SubjectAreaTerm},\n- * {@link SubjectAreaProject}, {@link SubjectAreaGlossary}\n+ * A standard set of customers is described in {@link SubjectAreaNodeClients}\n  */\n-public class SubjectAreaNode implements SubjectAreaCategory, SubjectAreaTerm, SubjectAreaProject, SubjectAreaGlossary {\n-    private Map<Class<?>, SubjectAreaNodeClient<?>> cache = new HashMap<>();\n+public class SubjectAreaNode implements SubjectAreaNodeClients {", "originalCommit": "11da71ad6f7c0c5eb0f755de718e18c3dbc42685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MTQzNA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490471434", "bodyText": "@davidradl I sugget DefaultSubjectAreaNodeClients. I think it is better.", "author": "immmus", "createdAt": "2020-09-17T18:32:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxMTU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7e96ba5b47ce33f6feeae1292ffdd79632d5a94d", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nsimilarity index 90%\nrename from open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java\nrename to open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nindex 5a3a27790f..77413b65f6 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\n\n@@ -20,18 +20,17 @@ import java.util.*;\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaNodeClients}\n  */\n-public class SubjectAreaNode implements SubjectAreaNodeClients {\n+public class DefaultSubjectAreaNodeClients implements SubjectAreaNodeClients {\n     private final Map<Class<?>, SubjectAreaNodeClient<?>> cache = new HashMap<>();\n-    private static final String DEFAULT_SCAN_PACKAGE = SubjectAreaNode.class.getPackage().getName();\n+    private static final String DEFAULT_SCAN_PACKAGE = DefaultSubjectAreaNodeClients.class.getPackage().getName();\n \n     /**\n      * @param packagesToScan - search packages for finding classes placed by annotation {@link org.odpi.openmetadata.accessservices.subjectarea.client.nodes.SubjectAreaNodeClient}\n      * @param subjectAreaRestClient - rest client for Subject Area OMAS REST APIs\n      * */\n     @SuppressWarnings(\"rawtypes\")\n-    public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n+    public DefaultSubjectAreaNodeClients(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n         Set<String> packages = new HashSet<>(Arrays.asList(packagesToScan));\n         packages.add(DEFAULT_SCAN_PACKAGE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxMjQzOQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490412439", "bodyText": "entities => Node.", "author": "davidradl", "createdAt": "2020-09-17T16:51:05Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java", "diffHunk": "@@ -24,11 +20,10 @@\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaCategory}, {@link SubjectAreaTerm},", "originalCommit": "11da71ad6f7c0c5eb0f755de718e18c3dbc42685", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e96ba5b47ce33f6feeae1292ffdd79632d5a94d", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nsimilarity index 90%\nrename from open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java\nrename to open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nindex 5a3a27790f..77413b65f6 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\n\n@@ -20,18 +20,17 @@ import java.util.*;\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaNodeClients}\n  */\n-public class SubjectAreaNode implements SubjectAreaNodeClients {\n+public class DefaultSubjectAreaNodeClients implements SubjectAreaNodeClients {\n     private final Map<Class<?>, SubjectAreaNodeClient<?>> cache = new HashMap<>();\n-    private static final String DEFAULT_SCAN_PACKAGE = SubjectAreaNode.class.getPackage().getName();\n+    private static final String DEFAULT_SCAN_PACKAGE = DefaultSubjectAreaNodeClients.class.getPackage().getName();\n \n     /**\n      * @param packagesToScan - search packages for finding classes placed by annotation {@link org.odpi.openmetadata.accessservices.subjectarea.client.nodes.SubjectAreaNodeClient}\n      * @param subjectAreaRestClient - rest client for Subject Area OMAS REST APIs\n      * */\n     @SuppressWarnings(\"rawtypes\")\n-    public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n+    public DefaultSubjectAreaNodeClients(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n         Set<String> packages = new HashSet<>(Arrays.asList(packagesToScan));\n         packages.add(DEFAULT_SCAN_PACKAGE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMDcxNA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490420714", "bodyText": "Please could you document this interface. I suggest something like. \"If an OMAS uses Generic types to implement it's Java API, then the responses can implement this interface.\"", "author": "davidradl", "createdAt": "2020-09-17T17:04:30Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+", "originalCommit": "11da71ad6f7c0c5eb0f755de718e18c3dbc42685", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba2bececbff456e973fc1e97d503151752de188d", "chunk": "diff --git a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java\nindex 1806b61312..21278bb693 100644\n--- a/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java\n+++ b/open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/GenericResponse.java\n\n@@ -4,8 +4,11 @@ package org.odpi.openmetadata.commonservices.ffdc.rest;\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Optional;\n \n-\n+/**\n+ * If an OMAS uses Generic types to implement it's Java API, then the responses can implement this interface.\n+ */\n public interface GenericResponse<R> extends FFDCResponse {\n \n     /**\n"}}, {"oid": "ba2bececbff456e973fc1e97d503151752de188d", "url": "https://github.com/odpi/egeria/commit/ba2bececbff456e973fc1e97d503151752de188d", "message": "# Renamed GenericResponse methods and change logic \"head\" method\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-17T18:55:22Z", "type": "commit"}, {"oid": "7e96ba5b47ce33f6feeae1292ffdd79632d5a94d", "url": "https://github.com/odpi/egeria/commit/7e96ba5b47ce33f6feeae1292ffdd79632d5a94d", "message": "# Renamed classes and small fixes\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-17T18:56:27Z", "type": "commit"}, {"oid": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "url": "https://github.com/odpi/egeria/commit/3d90b44b7573cc6a05ef530e4fec95640b35e18d", "message": "# Small fixes\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-17T19:03:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5OTk0Ng==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490799946", "bodyText": "Please could you comment why you need to suppress this warning.", "author": "davidradl", "createdAt": "2020-09-18T08:51:40Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/ResponseParameterization.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n+\n+import org.springframework.core.GenericTypeResolver;\n+import org.springframework.core.ParameterizedTypeReference;\n+import org.springframework.core.ResolvableType;\n+\n+/**\n+ * @param <Result> The type of the parameterized class whose objects will be returned in responses.\n+ *                 The purpose of this interface is to enable capturing and passing a generic result. */\n+public interface ResponseParameterization<Result> {\n+    /**\n+     * @return the response class type inherited from {@link GenericResponse}\n+     */\n+    @SuppressWarnings(\"rawtypes\")", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzMzYzOQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490933639", "bodyText": "It means that I know about it but it is not error.", "author": "immmus", "createdAt": "2020-09-18T13:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5OTk0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwMDEzOA==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490800138", "bodyText": "Please comment why you need to suppress unchecked", "author": "davidradl", "createdAt": "2020-09-18T08:52:01Z", "path": "open-metadata-implementation/common-services/ffdc-services/src/main/java/org/odpi/openmetadata/commonservices/ffdc/rest/ResponseParameterization.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.commonservices.ffdc.rest;\n+\n+import org.springframework.core.GenericTypeResolver;\n+import org.springframework.core.ParameterizedTypeReference;\n+import org.springframework.core.ResolvableType;\n+\n+/**\n+ * @param <Result> The type of the parameterized class whose objects will be returned in responses.\n+ *                 The purpose of this interface is to enable capturing and passing a generic result. */\n+public interface ResponseParameterization<Result> {\n+    /**\n+     * @return the response class type inherited from {@link GenericResponse}\n+     */\n+    @SuppressWarnings(\"rawtypes\")\n+    Class<? extends GenericResponse> responseType();\n+\n+    /**\n+     * Default method for return class type for Result\n+     *\n+     * This only works for classes where the first generic parameter matches the return type Result.\n+     * If your class has different logic, you can override the method and writing your own logic detecting the class type\n+     * or explicitly specify the returned class.\n+     *\n+     * @return class type for Result\n+     * @throws IllegalArgumentException if actualTypeArguments length is not equal one.\n+     */\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzMzcxMg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490933712", "bodyText": "It means that I know about it but it is not error.", "author": "immmus", "createdAt": "2020-09-18T13:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwMDEzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwMzA5Mg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490803092", "bodyText": "Please include a lot more comments as to what this class is doing. It is taking some time for me to work it out, so I think we need to make it easier for the readers you are not very familiar with the later Java capabilities .\nI think it is creating a cache of classes in a particular folder - that is has found using reflection and annotations.", "author": "davidradl", "createdAt": "2020-09-18T08:56:56Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java", "diffHunk": "@@ -24,19 +20,17 @@\n /**\n  * The OMAS client library implementation of the Subject Area OMAS.\n  * This interface provides entities {@link Node} authoring interface for subject area experts.\n- * A standard set of customers is described in {@link SubjectAreaCategory}, {@link SubjectAreaTerm},\n- * {@link SubjectAreaProject}, {@link SubjectAreaGlossary}\n  */\n-public class SubjectAreaNode implements SubjectAreaCategory, SubjectAreaTerm, SubjectAreaProject, SubjectAreaGlossary {\n-    private Map<Class<?>, SubjectAreaNodeClient<?>> cache = new HashMap<>();\n-    private static final String DEFAULT_SCAN_PACKAGE = SubjectAreaNode.class.getPackage().getName();\n+public class DefaultSubjectAreaNodeClients implements SubjectAreaNodeClients {\n+    private final Map<Class<?>, SubjectAreaNodeClient<?>> cache = new HashMap<>();", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzMjU2MQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490932561", "bodyText": "It became possible to do it in java 5 because reflection and annotations appeared in the 5 version. =) So it is not later Java capabilities.\nBut I will try to comment it:)", "author": "immmus", "createdAt": "2020-09-18T13:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwMzA5Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNDA0MQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490804041", "bodyText": "please add comments as to what the cache is.", "author": "davidradl", "createdAt": "2020-09-18T08:58:37Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java", "diffHunk": "@@ -49,14 +43,14 @@ public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient, String... pa\n                     ctor.setAccessible(true);\n                     final AbstractSubjectAreaNode newInstance =\n                             (AbstractSubjectAreaNode) ctor.newInstance(subjectAreaRestClient);\n-                    cache.put(newInstance.type(), newInstance);\n+                    cache.put(newInstance.resultType(), newInstance);", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNDg3MQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490804871", "bodyText": "please use the standard way of doing messages for subject area -add a new entry into SubjectAreaErrorCode and refer to that", "author": "davidradl", "createdAt": "2020-09-18T09:00:02Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java", "diffHunk": "@@ -49,14 +43,14 @@ public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient, String... pa\n                     ctor.setAccessible(true);\n                     final AbstractSubjectAreaNode newInstance =\n                             (AbstractSubjectAreaNode) ctor.newInstance(subjectAreaRestClient);\n-                    cache.put(newInstance.type(), newInstance);\n+                    cache.put(newInstance.resultType(), newInstance);\n                 }\n             } catch (NoSuchMethodException\n                     | IllegalAccessException\n                     | InstantiationException\n                     | InvocationTargetException e) {\n                 throw new ExceptionInInitializerError(\n-                        \"During initialization SubjectAreaNode an error has occurred - \"\n+                        \"During initialization `DefaultSubjectAreaNodeClients` an error has occurred - \"", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNTI4Nw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490805287", "bodyText": "please use the standard way of doing messages for subject area -add a new entry into SubjectAreaErrorCode and refer to that", "author": "davidradl", "createdAt": "2020-09-18T09:00:44Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java", "diffHunk": "@@ -109,6 +98,6 @@ public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient) {\n         if (cache.containsKey(clazz)) {\n             return (SubjectAreaNodeClient<T>) cache.get(clazz);\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Not found client for \" + clazz.getName());", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a9c937d9e4f216562031f4677184041d61cfac2", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\nindex e2eee53efb..26bb5e626c 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/DefaultSubjectAreaNodeClients.java\n\n@@ -98,6 +101,10 @@ public class DefaultSubjectAreaNodeClients implements SubjectAreaNodeClients {\n         if (cache.containsKey(clazz)) {\n             return (SubjectAreaNodeClient<T>) cache.get(clazz);\n         }\n-        throw new IllegalArgumentException(\"Not found client for \" + clazz.getName());\n+        final ExceptionMessageDefinition messageDefinition =\n+                SubjectAreaErrorCode.NOT_FOUND_CLIENT.getMessageDefinition(clazz.getName());\n+        final SubjectAreaCheckedException exc =\n+                new SubjectAreaCheckedException(messageDefinition, getClass().getName(), messageDefinition.getSystemAction());\n+        throw new IllegalArgumentException(exc);\n     }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNTU2Mg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490805562", "bodyText": "please use the standard way of doing messages for subject area -add a new entry into SubjectAreaErrorCode and refer to that", "author": "davidradl", "createdAt": "2020-09-18T09:01:12Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java", "diffHunk": "@@ -59,14 +58,14 @@ public SubjectAreaLine(SubjectAreaRestClient subjectAreaRestClient, String... pa\n                     ctor.setAccessible(true);\n                     final AbstractSubjectAreaRelationship newInstance =\n                             (AbstractSubjectAreaRelationship) ctor.newInstance(subjectAreaRestClient);\n-                    cache.put(newInstance.type(), newInstance);\n+                    cache.put(newInstance.resultType(), newInstance);\n                 }\n             } catch (NoSuchMethodException\n                     | IllegalAccessException\n                     | InstantiationException\n                     | InvocationTargetException e) {\n                 throw new ExceptionInInitializerError(\n-                        \"During initialization SubjectAreaLine an error has occurred - \"\n+                        \"During initialization `SubjectAreaLine` an error has occurred - \"", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwNTY0Mg==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490805642", "bodyText": "please use the standard way of doing messages for subject area -add a new entry into SubjectAreaErrorCode and refer to that", "author": "davidradl", "createdAt": "2020-09-18T09:01:21Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java", "diffHunk": "@@ -384,6 +293,6 @@ protected SubjectAreaProjectScopeClient(SubjectAreaRestClient subjectAreaRestCli\n         if (cache.containsKey(clazz)) {\n             return (SubjectAreaRelationshipClient<T>) cache.get(clazz);\n         }\n-        return null;\n+        throw new IllegalArgumentException(\"Not found client for \" + clazz.getName());", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a9c937d9e4f216562031f4677184041d61cfac2", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java\nindex 71e70453b9..d1f362b6d8 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java\n\n@@ -293,6 +296,10 @@ public class SubjectAreaLine implements SubjectAreaRelationshipClients {\n         if (cache.containsKey(clazz)) {\n             return (SubjectAreaRelationshipClient<T>) cache.get(clazz);\n         }\n-        throw new IllegalArgumentException(\"Not found client for \" + clazz.getName());\n+        final ExceptionMessageDefinition messageDefinition =\n+                SubjectAreaErrorCode.NOT_FOUND_CLIENT.getMessageDefinition(clazz.getName());\n+        final SubjectAreaCheckedException exc =\n+                new SubjectAreaCheckedException(messageDefinition, getClass().getName(), messageDefinition.getSystemAction());\n+        throw new IllegalArgumentException(exc);\n     }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwOTU1NQ==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490809555", "bodyText": "I am not clear why you call this a default. I would have thought that the scan would be standard and it picks up the content of the package using reflection. So we get classes loaded dynamically based on the scan. Are you envisaging a non-default scan - I am not sure what this would mean. Please let me know your thinking on the use of default - or remove it .", "author": "davidradl", "createdAt": "2020-09-18T09:08:24Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNodeClient.java", "diffHunk": "@@ -9,7 +9,7 @@\n \n /**\n  * Annotating client class for working with Node objects.\n- * These classes are scanned by {@link SubjectAreaNode}\n+ * These classes are scanned by {@link DefaultSubjectAreaNodeClients}", "originalCommit": "3d90b44b7573cc6a05ef530e4fec95640b35e18d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkzNTcxMw==", "url": "https://github.com/odpi/egeria/pull/3493#discussion_r490935713", "bodyText": "Okay I remove this.", "author": "immmus", "createdAt": "2020-09-18T13:06:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgwOTU1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ec1ca8d73c1ec9dac3670cccdefcfd502f965ccb", "chunk": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNodeClient.java b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNodeClient.java\nindex 2adcf99a92..78dd70e015 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNodeClient.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/nodes/SubjectAreaNodeClient.java\n\n@@ -9,7 +9,6 @@ import java.lang.annotation.Target;\n \n /**\n  * Annotating client class for working with Node objects.\n- * These classes are scanned by {@link DefaultSubjectAreaNodeClients}\n  */\n @Target({ElementType.TYPE})\n @Retention(RetentionPolicy.RUNTIME)\n"}}, {"oid": "91dac660d25f82c153189c6594db42308eead1b6", "url": "https://github.com/odpi/egeria/commit/91dac660d25f82c153189c6594db42308eead1b6", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-18T09:26:19Z", "type": "commit"}, {"oid": "ec1ca8d73c1ec9dac3670cccdefcfd502f965ccb", "url": "https://github.com/odpi/egeria/commit/ec1ca8d73c1ec9dac3670cccdefcfd502f965ccb", "message": "# removed comment\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-18T13:06:30Z", "type": "commit"}, {"oid": "a450cf00c178c3e80b314e9726409b817304fb72", "url": "https://github.com/odpi/egeria/commit/a450cf00c178c3e80b314e9726409b817304fb72", "message": "# removed comment\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-18T13:07:13Z", "type": "commit"}, {"oid": "f3b4060fccc2c89d604442e330f23d16a9328df5", "url": "https://github.com/odpi/egeria/commit/f3b4060fccc2c89d604442e330f23d16a9328df5", "message": "# Renamed methods in SubjectArea\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-21T14:45:11Z", "type": "commit"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "url": "https://github.com/odpi/egeria/commit/5a9c937d9e4f216562031f4677184041d61cfac2", "message": "# Added error code.\n\nSigned-off-by: immmus <fonto.trg@gmail.com>", "committedDate": "2020-09-22T09:17:04Z", "type": "commit"}, {"oid": "ef4819d0cc62fd28932a99caa1df25acff5bf9ba", "url": "https://github.com/odpi/egeria/commit/ef4819d0cc62fd28932a99caa1df25acff5bf9ba", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-22T11:51:22Z", "type": "commit"}, {"oid": "a0a414b6cb0ac490cd941ba452e6f271e4e3a67a", "url": "https://github.com/odpi/egeria/commit/a0a414b6cb0ac490cd941ba452e6f271e4e3a67a", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-23T08:58:57Z", "type": "commit"}, {"oid": "abd082dffd491f863582d6814ec2cffce73beba2", "url": "https://github.com/odpi/egeria/commit/abd082dffd491f863582d6814ec2cffce73beba2", "message": "Merge branch 'master' into Enchanted_generic_response", "committedDate": "2020-09-23T09:02:05Z", "type": "commit"}]}