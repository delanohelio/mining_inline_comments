{"pr_number": 5886, "pr_title": "fix gateway plugin async finish repeatedly when fallback configured", "pr_createdAt": "2020-11-24T02:44:18Z", "pr_url": "https://github.com/apache/skywalking/pull/5886", "timeline": [{"oid": "7fce75f6fc6233bdbfbb4fd1b88a7ea5811a9ce7", "url": "https://github.com/apache/skywalking/commit/7fce75f6fc6233bdbfbb4fd1b88a7ea5811a9ce7", "message": "fix async finish repeatedly when fallback configured", "committedDate": "2020-11-24T02:09:01Z", "type": "commit"}, {"oid": "4b3a25a08c548c563fb2397aa90749e07ee40f02", "url": "https://github.com/apache/skywalking/commit/4b3a25a08c548c563fb2397aa90749e07ee40f02", "message": "update changelog", "committedDate": "2020-11-24T02:53:23Z", "type": "commit"}, {"oid": "fee321b23482664a3e6628cad444f439a428a2e2", "url": "https://github.com/apache/skywalking/commit/fee321b23482664a3e6628cad444f439a428a2e2", "message": "Merge branch 'master' into master", "committedDate": "2021-07-13T09:54:40Z", "type": "commit"}, {"oid": "51fa373036c1aee4278d43ffbad50abe9a1c690c", "url": "https://github.com/apache/skywalking/commit/51fa373036c1aee4278d43ffbad50abe9a1c690c", "message": "fix operationName for PathParam", "committedDate": "2021-07-16T04:09:01Z", "type": "commit"}, {"oid": "f752cd973b618f1aa19590370766e9f178bf284d", "url": "https://github.com/apache/skywalking/commit/f752cd973b618f1aa19590370766e9f178bf284d", "message": "Merge branch 'master' into master", "committedDate": "2021-07-16T04:11:10Z", "type": "commit"}, {"oid": "7f9a65a5e3d41cf4d54d13739c004748806220bc", "url": "https://github.com/apache/skywalking/commit/7f9a65a5e3d41cf4d54d13739c004748806220bc", "message": "fix misuse of mono.then()", "committedDate": "2021-07-16T05:49:18Z", "type": "commit"}, {"oid": "39a253145e5e9830d7fe7084aefbe8fa41dc4bab", "url": "https://github.com/apache/skywalking/commit/39a253145e5e9830d7fe7084aefbe8fa41dc4bab", "message": "Merge branch 'master' of https://github.com/yujiaxinlong/skywalking", "committedDate": "2021-07-16T05:49:47Z", "type": "commit"}, {"oid": "9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2", "url": "https://github.com/apache/skywalking/commit/9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2", "message": "avoid opertionName overWrite during fallback", "committedDate": "2021-07-16T10:37:08Z", "type": "commit"}, {"oid": "ff66ed0a7f87a51c37044ef24d08a197225721c7", "url": "https://github.com/apache/skywalking/commit/ff66ed0a7f87a51c37044ef24d08a197225721c7", "message": "Merge branch 'master' into master", "committedDate": "2021-07-16T10:40:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTI0MTE1Mw==", "url": "https://github.com/apache/skywalking/pull/5886#discussion_r671241153", "bodyText": "What does pathPattern.matches(exchange.getRequest().getPath().pathWithinApplication()) mean? Could you add comments about this?", "author": "wu-sheng", "createdAt": "2021-07-16T13:09:10Z", "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "diffHunk": "@@ -77,13 +77,14 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         exchange.getAttributes().put(\"SKYWALING_SPAN\", span);\n     }\n     \n-    private void setPattern(AbstractSpan span, ServerWebExchange exchange) {\n+    private void maybeSetPattern(AbstractSpan span, ServerWebExchange exchange) {\n         if (span != null) {\n-            Object pathPattern = exchange.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);\n-            if (pathPattern != null) {\n-                span.setOperationName(((PathPattern) pathPattern).getPatternString());\n+            PathPattern pathPattern = exchange.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);\n+            if (pathPattern != null && pathPattern.matches(exchange.getRequest().getPath().pathWithinApplication())) {", "originalCommit": "9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f470e32ccc3007b82cff1a23fc95aaf8596d7819", "chunk": "diff --git a/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java b/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java\nindex 61e5dbfbc4..915f76b29f 100644\n--- a/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java\n+++ b/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java\n\n@@ -80,6 +80,8 @@ public class DispatcherHandlerHandleMethodInterceptor implements InstanceMethods\n     private void maybeSetPattern(AbstractSpan span, ServerWebExchange exchange) {\n         if (span != null) {\n             PathPattern pathPattern = exchange.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE);\n+            //check if the best matching pattern matches url in request\n+            //to avoid operationName overwritten by fallback url\n             if (pathPattern != null && pathPattern.matches(exchange.getRequest().getPath().pathWithinApplication())) {\n                 span.setOperationName(pathPattern.getPatternString());\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTI0MTU3NA==", "url": "https://github.com/apache/skywalking/pull/5886#discussion_r671241574", "bodyText": "Is this the right format? I am feeling not. Could you confirm? Rather than waste CI resources.", "author": "wu-sheng", "createdAt": "2021-07-16T13:09:53Z", "path": "apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java", "diffHunk": "@@ -93,14 +94,11 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n \n         AbstractSpan span = (AbstractSpan) exchange.getAttributes().get(\"SKYWALING_SPAN\");\n         \n-        return ((Mono) ret).flatMap(s -> {\n-                    setPattern(span, exchange);\n-                    return s;\n-                 })\n-                .doOnError(s -> setPattern(span, exchange))\n+                return ((Mono) ret)", "originalCommit": "9fac51ccf23ffcd981bb2ac3d8a83a9671fa51f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTY0MjU5Nw==", "url": "https://github.com/apache/skywalking/pull/5886#discussion_r671642597", "bodyText": "slightly changed code style so to doesn't looks weird now\u3002", "author": "yujiaxinlong", "createdAt": "2021-07-17T08:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTI0MTU3NA=="}], "type": "inlineReview", "revised_code": {"commit": "f470e32ccc3007b82cff1a23fc95aaf8596d7819", "chunk": "diff --git a/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java b/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java\nindex 61e5dbfbc4..915f76b29f 100644\n--- a/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java\n+++ b/apm-sniffer/optional-plugins/optional-spring-plugins/spring-webflux-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/webflux/v5/DispatcherHandlerHandleMethodInterceptor.java\n\n@@ -94,8 +96,7 @@ public class DispatcherHandlerHandleMethodInterceptor implements InstanceMethods\n \n         AbstractSpan span = (AbstractSpan) exchange.getAttributes().get(\"SKYWALING_SPAN\");\n         \n-                return ((Mono) ret)\n-                .doFinally(s -> {\n+                return ((Mono) ret).doFinally(s -> {\n \n                     if (span != null) {\n                         maybeSetPattern(span, exchange);\n"}}, {"oid": "f470e32ccc3007b82cff1a23fc95aaf8596d7819", "url": "https://github.com/apache/skywalking/commit/f470e32ccc3007b82cff1a23fc95aaf8596d7819", "message": "add comment", "committedDate": "2021-07-17T08:18:34Z", "type": "commit"}, {"oid": "4bc8c949ead10dcc4b2cea060f1cfd15cc9b59d9", "url": "https://github.com/apache/skywalking/commit/4bc8c949ead10dcc4b2cea060f1cfd15cc9b59d9", "message": "Merge branch 'master' of https://github.com/yujiaxinlong/skywalking", "committedDate": "2021-07-17T08:18:54Z", "type": "commit"}, {"oid": "3fe6a1468f397893828cd755cefcd9ae48b37f18", "url": "https://github.com/apache/skywalking/commit/3fe6a1468f397893828cd755cefcd9ae48b37f18", "message": "Merge branch 'master' into master", "committedDate": "2021-07-17T08:33:55Z", "type": "commit"}, {"oid": "a5915108ce889bc056a1eccc381e3d3a00a93ada", "url": "https://github.com/apache/skywalking/commit/a5915108ce889bc056a1eccc381e3d3a00a93ada", "message": "Merge branch 'master' into master", "committedDate": "2021-07-17T09:14:43Z", "type": "commit"}]}