{"pr_number": 4546, "pr_title": "Provide HTTP parameter in the profiling contet", "pr_createdAt": "2020-03-20T11:35:11Z", "pr_url": "https://github.com/apache/skywalking/pull/4546", "timeline": [{"oid": "a06c9e19f39f18356a0f82c1b6968e6c49b9da44", "url": "https://github.com/apache/skywalking/commit/a06c9e19f39f18356a0f82c1b6968e6c49b9da44", "message": "Provide active HTTP parameter collection automatically in the profiling context", "committedDate": "2020-03-20T11:32:39Z", "type": "commit"}, {"oid": "f020112c13575572ebaebc88d2693b751b15d671", "url": "https://github.com/apache/skywalking/commit/f020112c13575572ebaebc88d2693b751b15d671", "message": "Fix style check", "committedDate": "2020-03-20T11:36:11Z", "type": "commit"}, {"oid": "6c7d972421dd6ea93d5202f2343d19f770f8b867", "url": "https://github.com/apache/skywalking/commit/6c7d972421dd6ea93d5202f2343d19f770f8b867", "message": "fix style error", "committedDate": "2020-03-20T13:03:09Z", "type": "commit"}, {"oid": "3ef76fa6f9bfbd83be3f319d2a63ec08d329d725", "url": "https://github.com/apache/skywalking/commit/3ef76fa6f9bfbd83be3f319d2a63ec08d329d725", "message": "Merge branch 'master' into profile_active_http_param", "committedDate": "2020-03-20T13:16:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNTA1OA==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395635058", "bodyText": "We should not open this heavy object for this. Right now, only true/false should be opened.", "author": "wu-sheng", "createdAt": "2020-03-20T13:28:28Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/AbstractTracerContext.java", "diffHunk": "@@ -115,4 +116,10 @@\n      */\n     void asyncStop(AsyncSpan span);\n \n+    /**\n+     * Get current context profiler\n+     * @return null if not profiling\n+     */\n+    ThreadProfiler profiler();", "originalCommit": "3ef76fa6f9bfbd83be3f319d2a63ec08d329d725", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b99274c55c574bd6700253f9eec44040e8e2cea", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/AbstractTracerContext.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/AbstractTracerContext.java\nindex 7924f3de2f..4fb0999c68 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/AbstractTracerContext.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/AbstractTracerContext.java\n\n@@ -116,10 +115,4 @@ public interface AbstractTracerContext {\n      */\n     void asyncStop(AsyncSpan span);\n \n-    /**\n-     * Get current context profiler\n-     * @return null if not profiling\n-     */\n-    ThreadProfiler profiler();\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNTg0OQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395635849", "bodyText": "This will cost unexpected resource. We should use span to delegate. Such as span#isProfiling.", "author": "wu-sheng", "createdAt": "2020-03-20T13:29:49Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/ContextManager.java", "diffHunk": "@@ -224,4 +226,17 @@ public static RuntimeContext getRuntimeContext() {\n \n         return runtimeContext;\n     }\n+\n+    /**\n+     * Get current context profiling status\n+     * @return\n+     */\n+    public static ProfilingStatus getProfilingStatus() {\n+        final AbstractTracerContext context = get();", "originalCommit": "3ef76fa6f9bfbd83be3f319d2a63ec08d329d725", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b99274c55c574bd6700253f9eec44040e8e2cea", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/ContextManager.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/ContextManager.java\nindex f89cb27aba..0a5a96d00b 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/ContextManager.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/ContextManager.java\n\n@@ -227,16 +225,4 @@ public class ContextManager implements BootService {\n         return runtimeContext;\n     }\n \n-    /**\n-     * Get current context profiling status\n-     * @return\n-     */\n-    public static ProfilingStatus getProfilingStatus() {\n-        final AbstractTracerContext context = get();\n-        if (context == null) {\n-            return null;\n-        }\n-        final ThreadProfiler profiler = context.profiler();\n-        return profiler != null ? profiler.profilingStatus() : null;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjE4Mg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395636182", "bodyText": "I don't think we should open this.", "author": "wu-sheng", "createdAt": "2020-03-20T13:30:22Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java", "diffHunk": "@@ -106,9 +107,9 @@\n     private final long createTime;\n \n     /**\n-     * profiling status\n+     * profiling data\n      */\n-    private volatile boolean profiling;\n+    private volatile ThreadProfiler profiler;", "originalCommit": "3ef76fa6f9bfbd83be3f319d2a63ec08d329d725", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0MjkyMQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395642921", "bodyText": "Maybe I need to change it to ProfilingStatus because we need the status to check the current context is profiling or ready.", "author": "mrproliu", "createdAt": "2020-03-20T13:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2ODMwNw==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395668307", "bodyText": "What do you mean ready? The parameter collection only happens after the profile activated.", "author": "wu-sheng", "createdAt": "2020-03-20T14:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY3MzU5MQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395673591", "bodyText": "The profile has minDurationThreshold to explain only start profiling when bigger this parameter, before this time, it was ready status. I think on the ready status, we don't need to start the HTTP parameter happens.", "author": "mrproliu", "createdAt": "2020-03-20T14:28:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5MDI3Mw==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395690273", "bodyText": "I think we have a naming issue here. The current profiling should rename to pendingProfile, and we need a real profiling to indicate the thread dump started status.", "author": "wu-sheng", "createdAt": "2020-03-20T14:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5MjE2Mg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395692162", "bodyText": "Or you should refactor this as an enum, having value, NONE, PENDING and PROFILING. Also, this enum should have a method called isBeingWatched. PENDING and PROFILING should return yes.", "author": "wu-sheng", "createdAt": "2020-03-20T14:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3b99274c55c574bd6700253f9eec44040e8e2cea", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java\nindex a0cc9705e8..554869c94d 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/TracingContext.java\n\n@@ -107,9 +107,9 @@ public class TracingContext implements AbstractTracerContext {\n     private final long createTime;\n \n     /**\n-     * profiling data\n+     * profiling status\n      */\n-    private volatile ThreadProfiler profiler;\n+    private final ProfileStatusReference profilingStatus;\n \n     /**\n      * Initialize all fields with default value.\n"}}, {"oid": "3b99274c55c574bd6700253f9eec44040e8e2cea", "url": "https://github.com/apache/skywalking/commit/3b99274c55c574bd6700253f9eec44040e8e2cea", "message": "Add profile status, storage it into TracingContext. simplify to get profiling method", "committedDate": "2020-03-21T04:09:48Z", "type": "commit"}, {"oid": "aa82ad6d3e78089e2213dc30ec919273f7bfeaac", "url": "https://github.com/apache/skywalking/commit/aa82ad6d3e78089e2213dc30ec919273f7bfeaac", "message": "Change the profile status field name in TracingContext", "committedDate": "2020-03-21T04:13:33Z", "type": "commit"}, {"oid": "d7428114c4ee326c536cfc2d6c0841e3b852f241", "url": "https://github.com/apache/skywalking/commit/d7428114c4ee326c536cfc2d6c0841e3b852f241", "message": "Replace gone images", "committedDate": "2020-03-21T12:59:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MTc0OQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395991749", "bodyText": "either remove this or add descriptive comments", "author": "kezhenxu94", "createdAt": "2020-03-21T13:14:51Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java", "diffHunk": "@@ -126,4 +126,11 @@\n     AbstractSpan start(long startTime);\n \n     AbstractSpan setPeer(String remotePeer);\n+\n+    /**\n+     * Check current context has profiling\n+     *\n+     * @return\n+     */", "originalCommit": "d7428114c4ee326c536cfc2d6c0841e3b852f241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java\nindex 9493727e4f..842b181f93 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java\n\n@@ -129,8 +129,6 @@ public interface AbstractSpan extends AsyncSpan {\n \n     /**\n      * Check current context has profiling\n-     *\n-     * @return\n      */\n     boolean isProfiling();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MTg0Ng==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395991846", "bodyText": "PADDING? do you mean PENDING?", "author": "kezhenxu94", "createdAt": "2020-03-21T13:16:12Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required\n+     */\n+    NONE,\n+\n+    /**\n+     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n+     * the status will be changed to profiling, and the thread snapshot will be started\n+     */\n+    PADDING,", "originalCommit": "d7428114c4ee326c536cfc2d6c0841e3b852f241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 99fce2d24d..7c241e720c 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -31,7 +31,7 @@ public enum ProfileStatus {\n      * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n      * the status will be changed to profiling, and the thread snapshot will be started\n      */\n-    PADDING,\n+    PENDING,\n \n     /**\n      * Profile operation has been started, and dump thread snapshot will continue\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MTkyNg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395991926", "bodyText": "either remove this or add descriptive comments", "author": "kezhenxu94", "createdAt": "2020-03-21T13:17:14Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Wrapper {@link ProfileStatus}, make sure {@link org.apache.skywalking.apm.agent.core.context.TracingContext} with {@link ThreadProfiler} have same reference with {@link ProfileStatus},\n+ * And only the profile module could change the status\n+ */\n+public class ProfileStatusReference {\n+\n+    private volatile ProfileStatus status;\n+\n+    private ProfileStatusReference(ProfileStatus status) {\n+        this.status = status;\n+    }\n+\n+    /**\n+     * Create with not watching\n+     * @return", "originalCommit": "d7428114c4ee326c536cfc2d6c0841e3b852f241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\nindex 9b5b1b4ef8..47b02a71f2 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n\n@@ -32,7 +32,6 @@ public class ProfileStatusReference {\n \n     /**\n      * Create with not watching\n-     * @return\n      */\n     public static ProfileStatusReference createWithNone() {\n         return new ProfileStatusReference(ProfileStatus.NONE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MTk2OQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395991969", "bodyText": "ditto", "author": "kezhenxu94", "createdAt": "2020-03-21T13:17:41Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Wrapper {@link ProfileStatus}, make sure {@link org.apache.skywalking.apm.agent.core.context.TracingContext} with {@link ThreadProfiler} have same reference with {@link ProfileStatus},\n+ * And only the profile module could change the status\n+ */\n+public class ProfileStatusReference {\n+\n+    private volatile ProfileStatus status;\n+\n+    private ProfileStatusReference(ProfileStatus status) {\n+        this.status = status;\n+    }\n+\n+    /**\n+     * Create with not watching\n+     * @return\n+     */\n+    public static ProfileStatusReference createWithNone() {\n+        return new ProfileStatusReference(ProfileStatus.NONE);\n+    }\n+\n+    /**\n+     * Create with padding to profile\n+     * @return", "originalCommit": "d7428114c4ee326c536cfc2d6c0841e3b852f241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\nindex 9b5b1b4ef8..47b02a71f2 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n\n@@ -32,7 +32,6 @@ public class ProfileStatusReference {\n \n     /**\n      * Create with not watching\n-     * @return\n      */\n     public static ProfileStatusReference createWithNone() {\n         return new ProfileStatusReference(ProfileStatus.NONE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5Mjk0Mw==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r395992943", "bodyText": "Config.Plugin.SpringMVC.COLLECT_HTTP_PARAMS", "author": "kezhenxu94", "createdAt": "2020-03-21T13:31:18Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -185,6 +180,12 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n                 ContextManager.getRuntimeContext().remove(CONTROLLER_METHOD_STACK_DEPTH);\n             }\n \n+            // Active HTTP parameter collection automatically in the profiling context.\n+            // https://github.com/apache/skywalking/issues/4542\n+            if (!Config.Plugin.Tomcat.COLLECT_HTTP_PARAMS && span.isProfiling()) {", "originalCommit": "d7428114c4ee326c536cfc2d6c0841e3b852f241", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java b/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java\nindex 5b46b2c3ef..20638d6b49 100644\n--- a/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java\n\n@@ -182,7 +182,7 @@ public abstract class AbstractMethodInterceptor implements InstanceMethodsAround\n \n             // Active HTTP parameter collection automatically in the profiling context.\n             // https://github.com/apache/skywalking/issues/4542\n-            if (!Config.Plugin.Tomcat.COLLECT_HTTP_PARAMS && span.isProfiling()) {\n+            if (!Config.Plugin.SpringMVC.COLLECT_HTTP_PARAMS && span.isProfiling()) {\n                 collectHttpParam(request, span);\n             }\n \n"}}, {"oid": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "url": "https://github.com/apache/skywalking/commit/97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "message": "resolve issues", "committedDate": "2020-03-21T14:14:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0OTk3MQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396049971", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n          \n          \n            \n                 * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,", "author": "wu-sheng", "createdAt": "2020-03-22T03:15:49Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required\n+     */\n+    NONE,\n+\n+    /**\n+     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 7c241e720c..1fab052517 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -23,24 +23,24 @@ package org.apache.skywalking.apm.agent.core.profile;\n  */\n public enum ProfileStatus {\n     /**\n-     * Profile not required\n+     * No profile\n      */\n     NONE,\n \n     /**\n-     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n-     * the status will be changed to profiling, and the thread snapshot will be started\n+     * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,\n+     * Once the status changed to profiling, the thread snapshot is officially started\n      */\n     PENDING,\n \n     /**\n-     * Profile operation has been started, and dump thread snapshot will continue\n+     * Profile operation has been started.\n      */\n     PROFILING,\n \n     /**\n-     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n-     * or the current thread cannot take a thread snapshot operation again\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,\n+     * or the current thread isn't available.\n      */\n     STOPPED\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDAyNg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050026", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * the status will be changed to profiling, and the thread snapshot will be started\n          \n          \n            \n                 * Once the status changed to profiling, the thread snapshot is officially started", "author": "wu-sheng", "createdAt": "2020-03-22T03:17:22Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required\n+     */\n+    NONE,\n+\n+    /**\n+     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n+     * the status will be changed to profiling, and the thread snapshot will be started", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 7c241e720c..1fab052517 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -23,24 +23,24 @@ package org.apache.skywalking.apm.agent.core.profile;\n  */\n public enum ProfileStatus {\n     /**\n-     * Profile not required\n+     * No profile\n      */\n     NONE,\n \n     /**\n-     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n-     * the status will be changed to profiling, and the thread snapshot will be started\n+     * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,\n+     * Once the status changed to profiling, the thread snapshot is officially started\n      */\n     PENDING,\n \n     /**\n-     * Profile operation has been started, and dump thread snapshot will continue\n+     * Profile operation has been started.\n      */\n     PROFILING,\n \n     /**\n-     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n-     * or the current thread cannot take a thread snapshot operation again\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,\n+     * or the current thread isn't available.\n      */\n     STOPPED\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDEwNA==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050104", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * or the current thread cannot take a thread snapshot operation again\n          \n          \n            \n                 * or the current thread isn't available.", "author": "wu-sheng", "createdAt": "2020-03-22T03:19:02Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required\n+     */\n+    NONE,\n+\n+    /**\n+     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n+     * the status will be changed to profiling, and the thread snapshot will be started\n+     */\n+    PENDING,\n+\n+    /**\n+     * Profile operation has been started, and dump thread snapshot will continue\n+     */\n+    PROFILING,\n+\n+    /**\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n+     * or the current thread cannot take a thread snapshot operation again", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 7c241e720c..1fab052517 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -23,24 +23,24 @@ package org.apache.skywalking.apm.agent.core.profile;\n  */\n public enum ProfileStatus {\n     /**\n-     * Profile not required\n+     * No profile\n      */\n     NONE,\n \n     /**\n-     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n-     * the status will be changed to profiling, and the thread snapshot will be started\n+     * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,\n+     * Once the status changed to profiling, the thread snapshot is officially started\n      */\n     PENDING,\n \n     /**\n-     * Profile operation has been started, and dump thread snapshot will continue\n+     * Profile operation has been started.\n      */\n     PROFILING,\n \n     /**\n-     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n-     * or the current thread cannot take a thread snapshot operation again\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,\n+     * or the current thread isn't available.\n      */\n     STOPPED\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDExMQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050111", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n          \n          \n            \n                 * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,", "author": "wu-sheng", "createdAt": "2020-03-22T03:19:18Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required\n+     */\n+    NONE,\n+\n+    /**\n+     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n+     * the status will be changed to profiling, and the thread snapshot will be started\n+     */\n+    PENDING,\n+\n+    /**\n+     * Profile operation has been started, and dump thread snapshot will continue\n+     */\n+    PROFILING,\n+\n+    /**\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 7c241e720c..1fab052517 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -23,24 +23,24 @@ package org.apache.skywalking.apm.agent.core.profile;\n  */\n public enum ProfileStatus {\n     /**\n-     * Profile not required\n+     * No profile\n      */\n     NONE,\n \n     /**\n-     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n-     * the status will be changed to profiling, and the thread snapshot will be started\n+     * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,\n+     * Once the status changed to profiling, the thread snapshot is officially started\n      */\n     PENDING,\n \n     /**\n-     * Profile operation has been started, and dump thread snapshot will continue\n+     * Profile operation has been started.\n      */\n     PROFILING,\n \n     /**\n-     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n-     * or the current thread cannot take a thread snapshot operation again\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,\n+     * or the current thread isn't available.\n      */\n     STOPPED\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDE2OQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050169", "bodyText": "I think there is another typo, pending", "author": "wu-sheng", "createdAt": "2020-03-22T03:20:47Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Wrapper {@link ProfileStatus}, make sure {@link org.apache.skywalking.apm.agent.core.context.TracingContext} with {@link ThreadProfiler} have same reference with {@link ProfileStatus},\n+ * And only the profile module could change the status\n+ */\n+public class ProfileStatusReference {\n+\n+    private volatile ProfileStatus status;\n+\n+    private ProfileStatusReference(ProfileStatus status) {\n+        this.status = status;\n+    }\n+\n+    /**\n+     * Create with not watching\n+     */\n+    public static ProfileStatusReference createWithNone() {\n+        return new ProfileStatusReference(ProfileStatus.NONE);\n+    }\n+\n+    /**\n+     * Create with padding to profile\n+     */\n+    public static ProfileStatusReference createWithPadding() {", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\nindex 47b02a71f2..7d1149fc7a 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n\n@@ -38,9 +38,9 @@ public class ProfileStatusReference {\n     }\n \n     /**\n-     * Create with padding to profile\n+     * Create with pending to profile\n      */\n-    public static ProfileStatusReference createWithPadding() {\n+    public static ProfileStatusReference createWithPending() {\n         return new ProfileStatusReference(ProfileStatus.PENDING);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDI1Ng==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050256", "bodyText": "Why refer an issue here? Anything special?", "author": "wu-sheng", "createdAt": "2020-03-22T03:22:57Z", "path": "apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java", "diffHunk": "@@ -185,6 +180,12 @@ public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allA\n                 ContextManager.getRuntimeContext().remove(CONTROLLER_METHOD_STACK_DEPTH);\n             }\n \n+            // Active HTTP parameter collection automatically in the profiling context.\n+            // https://github.com/apache/skywalking/issues/4542", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java b/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java\nindex 20638d6b49..d601067943 100644\n--- a/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-commons/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/commons/interceptor/AbstractMethodInterceptor.java\n\n@@ -181,7 +181,6 @@ public abstract class AbstractMethodInterceptor implements InstanceMethodsAround\n             }\n \n             // Active HTTP parameter collection automatically in the profiling context.\n-            // https://github.com/apache/skywalking/issues/4542\n             if (!Config.Plugin.SpringMVC.COLLECT_HTTP_PARAMS && span.isProfiling()) {\n                 collectHttpParam(request, span);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDU3Mg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050572", "bodyText": "Don't refer to issue, unless there is something special, because if don't follow this, we will have thousands of issue links in the codes.", "author": "wu-sheng", "createdAt": "2020-03-22T03:30:25Z", "path": "apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptor.java", "diffHunk": "@@ -83,32 +83,26 @@ public void beforeMethod(EnhancedInstance objInst, Method method, Object[] allAr\n         SpanLayer.asHttp(span);\n \n         if (Config.Plugin.Tomcat.COLLECT_HTTP_PARAMS) {\n-            final Map<String, String[]> parameterMap = new HashMap<>();\n-            final org.apache.coyote.Request coyoteRequest = request.getCoyoteRequest();\n-            final Parameters parameters = coyoteRequest.getParameters();\n-            for (final Enumeration<String> names = parameters.getParameterNames(); names.hasMoreElements(); ) {\n-                final String name = names.nextElement();\n-                parameterMap.put(name, parameters.getParameterValues(name));\n-            }\n-\n-            if (!parameterMap.isEmpty()) {\n-                String tagValue = CollectionUtil.toString(parameterMap);\n-                tagValue = Config.Plugin.Http.HTTP_PARAMS_LENGTH_THRESHOLD > 0 ? StringUtil.cut(tagValue, Config.Plugin.Http.HTTP_PARAMS_LENGTH_THRESHOLD) : tagValue;\n-                Tags.HTTP.PARAMS.set(span, tagValue);\n-            }\n+            collectHttpParam(request, span);\n         }\n     }\n \n     @Override\n     public Object afterMethod(EnhancedInstance objInst, Method method, Object[] allArguments, Class<?>[] argumentsTypes,\n         Object ret) throws Throwable {\n+        Request request = (Request) allArguments[0];\n         HttpServletResponse response = (HttpServletResponse) allArguments[1];\n \n         AbstractSpan span = ContextManager.activeSpan();\n         if (IS_SERVLET_GET_STATUS_METHOD_EXIST && response.getStatus() >= 400) {\n             span.errorOccurred();\n             Tags.STATUS_CODE.set(span, Integer.toString(response.getStatus()));\n         }\n+        // Active HTTP parameter collection automatically in the profiling context.\n+        // https://github.com/apache/skywalking/issues/4542", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptor.java b/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptor.java\nindex 89863eb0f9..aa37060c16 100644\n--- a/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/tomcat-7.x-8.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/tomcat78x/TomcatInvokeInterceptor.java\n\n@@ -99,7 +99,6 @@ public class TomcatInvokeInterceptor implements InstanceMethodsAroundInterceptor\n             Tags.STATUS_CODE.set(span, Integer.toString(response.getStatus()));\n         }\n         // Active HTTP parameter collection automatically in the profiling context.\n-        // https://github.com/apache/skywalking/issues/4542\n         if (!Config.Plugin.Tomcat.COLLECT_HTTP_PARAMS && span.isProfiling()) {\n             collectHttpParam(request, span);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDcxNg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050716", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Profile not required\n          \n          \n            \n                 * No profile", "author": "wu-sheng", "createdAt": "2020-03-22T03:33:07Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 7c241e720c..1fab052517 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -23,24 +23,24 @@ package org.apache.skywalking.apm.agent.core.profile;\n  */\n public enum ProfileStatus {\n     /**\n-     * Profile not required\n+     * No profile\n      */\n     NONE,\n \n     /**\n-     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n-     * the status will be changed to profiling, and the thread snapshot will be started\n+     * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,\n+     * Once the status changed to profiling, the thread snapshot is officially started\n      */\n     PENDING,\n \n     /**\n-     * Profile operation has been started, and dump thread snapshot will continue\n+     * Profile operation has been started.\n      */\n     PROFILING,\n \n     /**\n-     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n-     * or the current thread cannot take a thread snapshot operation again\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,\n+     * or the current thread isn't available.\n      */\n     STOPPED\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDczNg==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050736", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Profile operation has been started, and dump thread snapshot will continue\n          \n          \n            \n                 * Profile operation has been started.", "author": "wu-sheng", "createdAt": "2020-03-22T03:33:28Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Profile status, include entire profile cycle\n+ */\n+public enum ProfileStatus {\n+    /**\n+     * Profile not required\n+     */\n+    NONE,\n+\n+    /**\n+     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n+     * the status will be changed to profiling, and the thread snapshot will be started\n+     */\n+    PENDING,\n+\n+    /**\n+     * Profile operation has been started, and dump thread snapshot will continue", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\nindex 7c241e720c..1fab052517 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatus.java\n\n@@ -23,24 +23,24 @@ package org.apache.skywalking.apm.agent.core.profile;\n  */\n public enum ProfileStatus {\n     /**\n-     * Profile not required\n+     * No profile\n      */\n     NONE,\n \n     /**\n-     * Prepare to profile, when {@link ProfileTask#getMinDurationThreshold()} is reached,\n-     * the status will be changed to profiling, and the thread snapshot will be started\n+     * Prepare to profile, until {@link ProfileTask#getMinDurationThreshold()} reached,\n+     * Once the status changed to profiling, the thread snapshot is officially started\n      */\n     PENDING,\n \n     /**\n-     * Profile operation has been started, and dump thread snapshot will continue\n+     * Profile operation has been started.\n      */\n     PROFILING,\n \n     /**\n-     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished executing,\n-     * or the current thread cannot take a thread snapshot operation again\n+     * The current {@link org.apache.skywalking.apm.agent.core.context.TracingContext} has finished,\n+     * or the current thread isn't available.\n      */\n     STOPPED\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDc2OQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050769", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean isBeingWatched() {\n          \n          \n            \n                /**\n          \n          \n            \n                 * The profile monitoring is watching, wait for some profile conditions.\n          \n          \n            \n                 */\n          \n          \n            \n                public boolean isBeingWatched() {", "author": "wu-sheng", "createdAt": "2020-03-22T03:34:29Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.agent.core.profile;\n+\n+/**\n+ * Wrapper {@link ProfileStatus}, make sure {@link org.apache.skywalking.apm.agent.core.context.TracingContext} with {@link ThreadProfiler} have same reference with {@link ProfileStatus},\n+ * And only the profile module could change the status\n+ */\n+public class ProfileStatusReference {\n+\n+    private volatile ProfileStatus status;\n+\n+    private ProfileStatusReference(ProfileStatus status) {\n+        this.status = status;\n+    }\n+\n+    /**\n+     * Create with not watching\n+     */\n+    public static ProfileStatusReference createWithNone() {\n+        return new ProfileStatusReference(ProfileStatus.NONE);\n+    }\n+\n+    /**\n+     * Create with padding to profile\n+     */\n+    public static ProfileStatusReference createWithPadding() {\n+        return new ProfileStatusReference(ProfileStatus.PENDING);\n+    }\n+\n+    public ProfileStatus get() {\n+        return this.status;\n+    }\n+\n+    public boolean isBeingWatched() {", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\nindex 47b02a71f2..7d1149fc7a 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileStatusReference.java\n\n@@ -38,9 +38,9 @@ public class ProfileStatusReference {\n     }\n \n     /**\n-     * Create with padding to profile\n+     * Create with pending to profile\n      */\n-    public static ProfileStatusReference createWithPadding() {\n+    public static ProfileStatusReference createWithPending() {\n         return new ProfileStatusReference(ProfileStatus.PENDING);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1MDg1MQ==", "url": "https://github.com/apache/skywalking/pull/4546#discussion_r396050851", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Check current context has profiling\n          \n          \n            \n                 * @return true if the span's owner(tracing context main thread) is been profiled.", "author": "wu-sheng", "createdAt": "2020-03-22T03:36:33Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java", "diffHunk": "@@ -126,4 +126,9 @@\n     AbstractSpan start(long startTime);\n \n     AbstractSpan setPeer(String remotePeer);\n+\n+    /**\n+     * Check current context has profiling", "originalCommit": "97460fb8630f8eb997f0e0958f6f499e7ddd1b76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b68d43d5f71ae065263698de3a64662896698aa7", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java\nindex 842b181f93..75946d3aa2 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractSpan.java\n\n@@ -128,7 +128,7 @@ public interface AbstractSpan extends AsyncSpan {\n     AbstractSpan setPeer(String remotePeer);\n \n     /**\n-     * Check current context has profiling\n+     * @return true if the span's owner(tracing context main thread) is been profiled.\n      */\n     boolean isProfiling();\n }\n"}}, {"oid": "b68d43d5f71ae065263698de3a64662896698aa7", "url": "https://github.com/apache/skywalking/commit/b68d43d5f71ae065263698de3a64662896698aa7", "message": "resole description issues", "committedDate": "2020-03-22T03:48:33Z", "type": "commit"}, {"oid": "d9ebc3131009b193ca824ab06e3116640cb52b74", "url": "https://github.com/apache/skywalking/commit/d9ebc3131009b193ca824ab06e3116640cb52b74", "message": "Merge branch 'master' into profile_active_http_param", "committedDate": "2020-03-22T05:19:53Z", "type": "commit"}]}