{"pr_number": 5510, "pr_title": "Check bootstrapServers type before casting for kafka-clients >= 2.1", "pr_createdAt": "2020-09-17T09:02:57Z", "pr_url": "https://github.com/apache/skywalking/pull/5510", "timeline": [{"oid": "901f0f2ccbf08c14cee5c52ce72965ca0a916a02", "url": "https://github.com/apache/skywalking/commit/901f0f2ccbf08c14cee5c52ce72965ca0a916a02", "message": "add unit test for ProducerConstructorMapInterceptor", "committedDate": "2020-09-17T08:16:15Z", "type": "commit"}, {"oid": "865ffa85a89fe91eaef968df79cf85c971c10ee6", "url": "https://github.com/apache/skywalking/commit/865ffa85a89fe91eaef968df79cf85c971c10ee6", "message": "setup another kafka template with list", "committedDate": "2020-09-17T08:40:11Z", "type": "commit"}, {"oid": "a83a656874ca292a535f88f1d5383448dac9b1a9", "url": "https://github.com/apache/skywalking/commit/a83a656874ca292a535f88f1d5383448dac9b1a9", "message": "fix style issues", "committedDate": "2020-09-17T09:01:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4OTU1Mg==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490089552", "bodyText": "Once you changed this, you should change the expected data yaml to map this.", "author": "wu-sheng", "createdAt": "2020-09-17T09:06:48Z", "path": "test/plugin/scenarios/spring-kafka-2.3.x-scenario/src/main/java/test/org/apache/skywalking/apm/testcase/spring/kafka/controller/CaseController.java", "diffHunk": "@@ -82,6 +85,21 @@ private void setUpProvider() {\n         }\n     }\n \n+    private void setUpAnotherProvider() {\n+        Map<String, Object> props = new HashMap<>();\n+        // use list type here\n+        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, Arrays.asList(bootstrapServers.split(\",\")));\n+        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n+        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n+        kafkaTemplate2 = new KafkaTemplate<String, String>(new DefaultKafkaProducerFactory<>(props));\n+        try {\n+            kafkaTemplate2.send(topicName, \"key\", \"ping\").get();\n+            kafkaTemplate2.flush();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+", "originalCommit": "a83a656874ca292a535f88f1d5383448dac9b1a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMwNjY0OQ==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490306649", "bodyText": "I have added more test cases for this scenario.  Pls have a check since I am not familiar with this part.", "author": "lujiajing1126", "createdAt": "2020-09-17T14:44:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4OTU1Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "94a453bff46c48eba781519e5fc4b46d2a386c7c", "url": "https://github.com/apache/skywalking/commit/94a453bff46c48eba781519e5fc4b46d2a386c7c", "message": "Merge branch 'master' into kafka_bootstrap_servers_type", "committedDate": "2020-09-17T12:24:05Z", "type": "commit"}, {"oid": "53c1222b366b7b37b42fbf8a8081fa9c2990ba75", "url": "https://github.com/apache/skywalking/commit/53c1222b366b7b37b42fbf8a8081fa9c2990ba75", "message": "add test cases", "committedDate": "2020-09-17T14:42:47Z", "type": "commit"}, {"oid": "7b100db02fa25d12eb1f131b015ac981ebbf88b2", "url": "https://github.com/apache/skywalking/commit/7b100db02fa25d12eb1f131b015ac981ebbf88b2", "message": "Merge branch 'master' into kafka_bootstrap_servers_type", "committedDate": "2020-09-18T01:01:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490677743", "bodyText": "Why add this comment? This interceptor is used for 2.1-, isn't it?", "author": "wu-sheng", "createdAt": "2020-09-18T03:22:25Z", "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java", "diffHunk": "@@ -22,16 +22,27 @@\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n import org.apache.skywalking.apm.util.StringUtil;\n \n+import java.util.List;\n import java.util.Map;\n+import java.util.regex.Pattern;\n \n+/**\n+ * Target at kafka-clients 2.1+\n+ */", "originalCommit": "7b100db02fa25d12eb1f131b015ac981ebbf88b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4NTQ3Mg==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490685472", "bodyText": "Why add this comment? This interceptor is used for 2.1-, isn't it?\n\nNo. The Map argument is used from Kafka 2.1+", "author": "lujiajing1126", "createdAt": "2020-09-18T03:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4NTg0Ng==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490685846", "bodyText": "But this interceptor still supports String as a parameter, I still can see the String casting.", "author": "wu-sheng", "createdAt": "2020-09-18T03:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4NTk5MQ==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490685991", "bodyText": "You didn't add any new instrumentation definition. So, this must be compatible with older releases.", "author": "wu-sheng", "createdAt": "2020-09-18T03:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4NjMzNA==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490686334", "bodyText": "But this interceptor still supports String as a parameter, I still can see the String casting.\n\nExactly. Regarding bootstrap.servers, the type of the value in the map can be String or List. Both types are supported by kafka client lib.", "author": "lujiajing1126", "createdAt": "2020-09-18T03:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4Njk5OQ==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490686999", "bodyText": "I am not talking about the codes. You added comment says this is for 2.1+, which is not accurate. It supports 2.1 also.", "author": "wu-sheng", "createdAt": "2020-09-18T03:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4NzYyOQ==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490687629", "bodyText": "I am not talking about the codes. You added comment says this is for 2.1+, which is not accurate. It supports 2.1 also.\n\nSo it should be \">=2.1.0\", I guess?", "author": "lujiajing1126", "createdAt": "2020-09-18T03:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4ODU2Mg==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490688562", "bodyText": "Fixed", "author": "lujiajing1126", "createdAt": "2020-09-18T03:59:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY3Nzc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ca5c9555f9e8f5898cf2f8cebac8d1ba9ce2556a", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java b/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java\nindex 57f22538b..f74a040fe 100644\n--- a/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java\n\n@@ -27,7 +27,7 @@ import java.util.Map;\n import java.util.regex.Pattern;\n \n /**\n- * Target at kafka-clients 2.1+\n+ * Target at kafka-clients >=2.1.0\n  */\n public class ProducerConstructorMapInterceptor implements InstanceConstructorInterceptor {\n     private static final Pattern COMMA_WITH_WHITESPACE = Pattern.compile(\"\\\\s*,\\\\s*\");\n"}}, {"oid": "ca5c9555f9e8f5898cf2f8cebac8d1ba9ce2556a", "url": "https://github.com/apache/skywalking/commit/ca5c9555f9e8f5898cf2f8cebac8d1ba9ce2556a", "message": "update comment", "committedDate": "2020-09-18T03:59:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4OTYyMA==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490689620", "bodyText": "Still confused what your new comments. Isn't 2.0 even 1.x client libraries using this interceptor?", "author": "wu-sheng", "createdAt": "2020-09-18T04:04:09Z", "path": "apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java", "diffHunk": "@@ -22,16 +22,27 @@\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n import org.apache.skywalking.apm.util.StringUtil;\n \n+import java.util.List;\n import java.util.Map;\n+import java.util.regex.Pattern;\n \n+/**\n+ * Target at kafka-clients >=2.1.0", "originalCommit": "ca5c9555f9e8f5898cf2f8cebac8d1ba9ce2556a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY5MTE4NQ==", "url": "https://github.com/apache/skywalking/pull/5510#discussion_r490691185", "bodyText": "Still confused what your new comments. Isn't 2.0 even 1.x client libraries using this interceptor?\n\nI see. You are right. It can be used even below 2.0, if users intend to use Map type constructors.\nI have removed this comment.", "author": "lujiajing1126", "createdAt": "2020-09-18T04:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4OTYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "649eac99b9167829c93249bf5be8a2ac939f9243", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java b/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java\nindex f74a040fe..cd6e507ab 100644\n--- a/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/main/java/org/apache/skywalking/apm/plugin/kafka/ProducerConstructorMapInterceptor.java\n\n@@ -26,9 +26,6 @@ import java.util.List;\n import java.util.Map;\n import java.util.regex.Pattern;\n \n-/**\n- * Target at kafka-clients >=2.1.0\n- */\n public class ProducerConstructorMapInterceptor implements InstanceConstructorInterceptor {\n     private static final Pattern COMMA_WITH_WHITESPACE = Pattern.compile(\"\\\\s*,\\\\s*\");\n \n"}}, {"oid": "649eac99b9167829c93249bf5be8a2ac939f9243", "url": "https://github.com/apache/skywalking/commit/649eac99b9167829c93249bf5be8a2ac939f9243", "message": "remove comment", "committedDate": "2020-09-18T04:09:05Z", "type": "commit"}]}