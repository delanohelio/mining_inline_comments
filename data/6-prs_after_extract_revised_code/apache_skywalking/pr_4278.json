{"pr_number": 4278, "pr_title": "Make MVC plugin support inherited annotations from interface", "pr_createdAt": "2020-01-23T10:04:00Z", "pr_url": "https://github.com/apache/skywalking/pull/4278", "timeline": [{"oid": "36a9faa4c8bef979cb2abb82042699207f10611f", "url": "https://github.com/apache/skywalking/commit/36a9faa4c8bef979cb2abb82042699207f10611f", "message": "Solve the problem of matching annotations of MVC plugin interface methods", "committedDate": "2020-01-23T09:47:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNDE0MA==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r370124140", "bodyText": "typo @author, and please remove the :", "author": "kezhenxu94", "createdAt": "2020-01-23T13:45:11Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.agent.core.plugin.match;\n+\n+import net.bytebuddy.build.HashCodeAndEqualsPlugin;\n+import net.bytebuddy.description.annotation.AnnotationList;\n+import net.bytebuddy.description.annotation.AnnotationSource;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.method.MethodList;\n+import net.bytebuddy.description.method.ParameterList;\n+import net.bytebuddy.description.type.TypeDefinition;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.description.type.TypeList;\n+import net.bytebuddy.matcher.CollectionItemMatcher;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.Objects;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n+\n+/**\n+ * @description: Matching used to match method annotations, Can match annotations on interface methods\n+ * @auther: jialong  by 2020-01-23 15:41", "originalCommit": "36a9faa4c8bef979cb2abb82042699207f10611f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyMjY1OQ==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r370222659", "bodyText": "Thanks for your correction", "author": "jialong121", "createdAt": "2020-01-23T16:28:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNDE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "17c3967b88b66f8204abaf52d85de4b9f297873f", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\nindex 80b90310f2..3ee88f9b5a 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\n\n@@ -34,8 +34,8 @@ import java.util.Objects;\n import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n \n /**\n- * @description: Matching used to match method annotations, Can match annotations on interface methods\n- * @auther: jialong  by 2020-01-23 15:41\n+ * Matching used to match method annotations, Can match annotations on interface methods\n+ * @auther jialong\n  */\n @HashCodeAndEqualsPlugin.Enhance\n public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNDM5MQ==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r370124391", "bodyText": "remove @description, it's not a valid JavaDoc tag", "author": "kezhenxu94", "createdAt": "2020-01-23T13:45:39Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.agent.core.plugin.match;\n+\n+import net.bytebuddy.build.HashCodeAndEqualsPlugin;\n+import net.bytebuddy.description.annotation.AnnotationList;\n+import net.bytebuddy.description.annotation.AnnotationSource;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.method.MethodList;\n+import net.bytebuddy.description.method.ParameterList;\n+import net.bytebuddy.description.type.TypeDefinition;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.description.type.TypeList;\n+import net.bytebuddy.matcher.CollectionItemMatcher;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.Objects;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n+\n+/**\n+ * @description: Matching used to match method annotations, Can match annotations on interface methods", "originalCommit": "36a9faa4c8bef979cb2abb82042699207f10611f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c3967b88b66f8204abaf52d85de4b9f297873f", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\nindex 80b90310f2..3ee88f9b5a 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\n\n@@ -34,8 +34,8 @@ import java.util.Objects;\n import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n \n /**\n- * @description: Matching used to match method annotations, Can match annotations on interface methods\n- * @auther: jialong  by 2020-01-23 15:41\n+ * Matching used to match method annotations, Can match annotations on interface methods\n+ * @auther jialong\n  */\n @HashCodeAndEqualsPlugin.Enhance\n public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNDczMQ==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r370124731", "bodyText": "ditto", "author": "kezhenxu94", "createdAt": "2020-01-23T13:46:16Z", "path": "apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/bytebuddy/MethodInheritsDeclaringAnnotationMatcherTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.agent.core.plugin.bytebuddy;\n+\n+import net.bytebuddy.description.annotation.AnnotationSource;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static org.apache.skywalking.apm.agent.core.plugin.match.MethodInheritsDeclaringAnnotationMatcher.isInheritsAnnotatedWith;\n+\n+/**\n+ * @description:\n+ * @auther: jialong  by 2020-01-23 16:09", "originalCommit": "36a9faa4c8bef979cb2abb82042699207f10611f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c3967b88b66f8204abaf52d85de4b9f297873f", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/bytebuddy/MethodInheritsDeclaringAnnotationMatcherTest.java b/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/bytebuddy/MethodInheritsDeclaringAnnotationMatcherTest.java\nindex 35481c21dd..53361fcc42 100644\n--- a/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/bytebuddy/MethodInheritsDeclaringAnnotationMatcherTest.java\n+++ b/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/plugin/bytebuddy/MethodInheritsDeclaringAnnotationMatcherTest.java\n\n@@ -33,8 +33,7 @@ import static net.bytebuddy.matcher.ElementMatchers.named;\n import static org.apache.skywalking.apm.agent.core.plugin.match.MethodInheritsDeclaringAnnotationMatcher.isInheritsAnnotatedWith;\n \n /**\n- * @description:\n- * @auther: jialong  by 2020-01-23 16:09\n+ * @auther jialong\n  */\n public class MethodInheritsDeclaringAnnotationMatcherTest {\n \n"}}, {"oid": "17c3967b88b66f8204abaf52d85de4b9f297873f", "url": "https://github.com/apache/skywalking/commit/17c3967b88b66f8204abaf52d85de4b9f297873f", "message": "Modify the wrong JavaDoc", "committedDate": "2020-01-23T14:37:39Z", "type": "commit"}, {"oid": "fc7ebdc8e947801420ac186856aa5dd639bc1ef9", "url": "https://github.com/apache/skywalking/commit/fc7ebdc8e947801420ac186856aa5dd639bc1ef9", "message": "update springmvc plugin test case", "committedDate": "2020-01-23T16:24:51Z", "type": "commit"}, {"oid": "f9c1fdee60cdf63f3c09c129d7b5dabcc86dc492", "url": "https://github.com/apache/skywalking/commit/f9c1fdee60cdf63f3c09c129d7b5dabcc86dc492", "message": "add apache license", "committedDate": "2020-01-23T16:37:11Z", "type": "commit"}, {"oid": "1a0056a948813ee1b94c2724fe3c439c219a6353", "url": "https://github.com/apache/skywalking/commit/1a0056a948813ee1b94c2724fe3c439c219a6353", "message": "fix update plugin bug", "committedDate": "2020-01-24T06:23:45Z", "type": "commit"}, {"oid": "1a0056a948813ee1b94c2724fe3c439c219a6353", "url": "https://github.com/apache/skywalking/commit/1a0056a948813ee1b94c2724fe3c439c219a6353", "message": "fix update plugin bug", "committedDate": "2020-01-24T06:23:45Z", "type": "forcePushed"}, {"oid": "28d5e523d92d89e11697492120a3f9c43666bf32", "url": "https://github.com/apache/skywalking/commit/28d5e523d92d89e11697492120a3f9c43666bf32", "message": "fix code bug", "committedDate": "2020-01-24T10:06:47Z", "type": "commit"}, {"oid": "07002bd6be532ab16e5b01846f1a0bd603ca58bb", "url": "https://github.com/apache/skywalking/commit/07002bd6be532ab16e5b01846f1a0bd603ca58bb", "message": "update spring-4.3.x-scenario expectedData", "committedDate": "2020-01-24T11:28:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODEwMg==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r371118102", "bodyText": "Inherit is a verb. This method name should be byMethodInheritanceAnnotationMatcher", "author": "wu-sheng", "createdAt": "2020-01-27T08:52:47Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.agent.core.plugin.match;\n+\n+import net.bytebuddy.build.HashCodeAndEqualsPlugin;\n+import net.bytebuddy.description.annotation.AnnotationList;\n+import net.bytebuddy.description.annotation.AnnotationSource;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.method.MethodList;\n+import net.bytebuddy.description.method.ParameterList;\n+import net.bytebuddy.description.type.TypeDefinition;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.description.type.TypeList;\n+import net.bytebuddy.matcher.CollectionItemMatcher;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.Objects;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n+\n+/**\n+ * Matching used to match method annotations, Can match annotations on interface methods\n+ * @auther jialong\n+ */\n+@HashCodeAndEqualsPlugin.Enhance\n+public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n+    /**\n+     * The matcher to be applied to the provided annotation list.\n+     */\n+    private final ElementMatcher<? super AnnotationList> matcher;\n+\n+    /**\n+     * Creates a new matcher for the annotations of an annotated element.\n+     *\n+     * @param matcher The matcher to be applied to the provided annotation list.\n+     */\n+    public MethodInheritsDeclaringAnnotationMatcher(ElementMatcher<? super AnnotationList> matcher) {\n+        this.matcher = matcher;\n+    }\n+\n+    @Override\n+    public boolean matches(T target) {\n+        if (matcher.matches(target.getDeclaredAnnotations())) {\n+            return true;\n+        }\n+        String name = target.getName();\n+        ParameterList<?> parameters = target.getParameters();\n+\n+        TypeDefinition declaringType = target.getDeclaringType();\n+        return recursiveMatches(declaringType, name, parameters);\n+    }\n+\n+\n+    private boolean recursiveMatches(TypeDefinition typeDefinition, String methodName, ParameterList<?> parameters) {\n+        TypeList.Generic interfaces = typeDefinition.getInterfaces();\n+        for (TypeDescription.Generic implInterface : interfaces) {\n+            if (recursiveMatches(implInterface, methodName, parameters)) {\n+                return true;\n+            }\n+            MethodList<MethodDescription.InGenericShape> declaredMethods = implInterface.getDeclaredMethods();\n+            for (MethodDescription declaredMethod : declaredMethods) {\n+                if (Objects.equals(declaredMethod.getName(), methodName) && parameterEquals(parameters, declaredMethod.getParameters())) {\n+                    return matcher.matches(declaredMethod.getDeclaredAnnotations());\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+\n+    private boolean parameterEquals(ParameterList<?> source, ParameterList<?> impl) {\n+        if (source.size() != impl.size()) {\n+            return false;\n+        }\n+        for (int i = 0; i < source.size(); i++) {\n+            if (!Objects.equals(source.get(i).getType(), impl.get(i).getType())) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static <T extends AnnotationSource> ElementMatcher.Junction<T> isInheritsAnnotatedWith(ElementMatcher<? super TypeDescription> matcher) {", "originalCommit": "07002bd6be532ab16e5b01846f1a0bd603ca58bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35fb823346693b01c6fa002c9314e50470d14443", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsAnnotationMatcher.java\nsimilarity index 90%\nrename from apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\nrename to apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsAnnotationMatcher.java\nindex 3ee88f9b5a..d5dfb8ccf5 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsAnnotationMatcher.java\n\n@@ -38,7 +38,7 @@ import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n  * @auther jialong\n  */\n @HashCodeAndEqualsPlugin.Enhance\n-public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n+public class MethodInheritsAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n     /**\n      * The matcher to be applied to the provided annotation list.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODE4NA==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r371118184", "bodyText": "Should rename to MethodInheritanceAnnotationMatcher", "author": "wu-sheng", "createdAt": "2020-01-27T08:53:00Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.agent.core.plugin.match;\n+\n+import net.bytebuddy.build.HashCodeAndEqualsPlugin;\n+import net.bytebuddy.description.annotation.AnnotationList;\n+import net.bytebuddy.description.annotation.AnnotationSource;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.method.MethodList;\n+import net.bytebuddy.description.method.ParameterList;\n+import net.bytebuddy.description.type.TypeDefinition;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.description.type.TypeList;\n+import net.bytebuddy.matcher.CollectionItemMatcher;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.Objects;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n+\n+/**\n+ * Matching used to match method annotations, Can match annotations on interface methods\n+ * @auther jialong\n+ */\n+@HashCodeAndEqualsPlugin.Enhance\n+public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {", "originalCommit": "07002bd6be532ab16e5b01846f1a0bd603ca58bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35fb823346693b01c6fa002c9314e50470d14443", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsAnnotationMatcher.java\nsimilarity index 90%\nrename from apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\nrename to apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsAnnotationMatcher.java\nindex 3ee88f9b5a..d5dfb8ccf5 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsDeclaringAnnotationMatcher.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritsAnnotationMatcher.java\n\n@@ -38,7 +38,7 @@ import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n  * @auther jialong\n  */\n @HashCodeAndEqualsPlugin.Enhance\n-public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n+public class MethodInheritsAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n     /**\n      * The matcher to be applied to the provided annotation list.\n      */\n"}}, {"oid": "35fb823346693b01c6fa002c9314e50470d14443", "url": "https://github.com/apache/skywalking/commit/35fb823346693b01c6fa002c9314e50470d14443", "message": "modify method name and class name", "committedDate": "2020-01-27T09:15:43Z", "type": "commit"}, {"oid": "507bfc8b99de78600ba6e2ba027490092d6aa3ee", "url": "https://github.com/apache/skywalking/commit/507bfc8b99de78600ba6e2ba027490092d6aa3ee", "message": "Modify method name class name", "committedDate": "2020-01-27T09:18:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE5MjEzNQ==", "url": "https://github.com/apache/skywalking/pull/4278#discussion_r371192135", "bodyText": "Still, @auther is not a valid JavaDoc\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @auther jialong\n          \n          \n            \n             * @author jialong", "author": "kezhenxu94", "createdAt": "2020-01-27T11:37:20Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritanceAnnotationMatcher.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.agent.core.plugin.match;\n+\n+import net.bytebuddy.build.HashCodeAndEqualsPlugin;\n+import net.bytebuddy.description.annotation.AnnotationList;\n+import net.bytebuddy.description.annotation.AnnotationSource;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.method.MethodList;\n+import net.bytebuddy.description.method.ParameterList;\n+import net.bytebuddy.description.type.TypeDefinition;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.description.type.TypeList;\n+import net.bytebuddy.matcher.CollectionItemMatcher;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import java.util.Objects;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n+\n+/**\n+ * Matching used to match method annotations, Can match annotations on interface methods\n+ * @auther jialong", "originalCommit": "507bfc8b99de78600ba6e2ba027490092d6aa3ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "362dc4906242689dfa90683711267725e55b5525", "chunk": "diff --git a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritanceAnnotationMatcher.java b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritanceAnnotationMatcher.java\nindex 125ab23c60..1b62350ced 100644\n--- a/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritanceAnnotationMatcher.java\n+++ b/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/plugin/match/MethodInheritanceAnnotationMatcher.java\n\n@@ -35,7 +35,7 @@ import static net.bytebuddy.matcher.ElementMatchers.annotationType;\n \n /**\n  * Matching used to match method annotations, Can match annotations on interface methods\n- * @auther jialong\n+ * @author jialong\n  */\n @HashCodeAndEqualsPlugin.Enhance\n public class MethodInheritanceAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {\n"}}, {"oid": "362dc4906242689dfa90683711267725e55b5525", "url": "https://github.com/apache/skywalking/commit/362dc4906242689dfa90683711267725e55b5525", "message": "update error JavaDoc", "committedDate": "2020-02-01T06:19:55Z", "type": "commit"}, {"oid": "a1b309e6eaf14dbb2d82cb8e0f625a0192d4ede3", "url": "https://github.com/apache/skywalking/commit/a1b309e6eaf14dbb2d82cb8e0f625a0192d4ede3", "message": "fix test case error", "committedDate": "2020-02-01T06:40:46Z", "type": "commit"}, {"oid": "b06b78c6e55d02ab08af71787725bf48f46b9b00", "url": "https://github.com/apache/skywalking/commit/b06b78c6e55d02ab08af71787725bf48f46b9b00", "message": "Merge branch 'master' into mvc_method_inherits_annotation_match_problem", "committedDate": "2020-02-01T06:42:50Z", "type": "commit"}]}