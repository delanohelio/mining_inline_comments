{"pr_number": 5887, "pr_title": "Add the plugin for Apache CXF 3.x", "pr_createdAt": "2020-11-24T10:10:51Z", "pr_url": "https://github.com/apache/skywalking/pull/5887", "timeline": [{"oid": "a6166533bceff32b6b0e23276d07acf436b24705", "url": "https://github.com/apache/skywalking/commit/a6166533bceff32b6b0e23276d07acf436b24705", "message": "Add the plugin for Apache CXF 3.x.", "committedDate": "2020-11-24T10:06:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3NDU5NA==", "url": "https://github.com/apache/skywalking/pull/5887#discussion_r529474594", "bodyText": "suggest: new ArrayList<>(1)", "author": "dmsolr", "createdAt": "2020-11-24T11:29:07Z", "path": "apm-sniffer/apm-sdk-plugin/cxf-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/cxf/v3/client/MessageSenderInterceptorInterceptor.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.plugin.cxf.v3.client;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.cxf.binding.soap.SoapMessage;\n+import org.apache.cxf.message.Message;\n+import org.apache.cxf.service.model.MessageInfo;\n+import org.apache.cxf.transport.http.Address;\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.context.tag.Tags;\n+import org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;\n+import org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;\n+import org.apache.skywalking.apm.network.trace.component.ComponentsDefine;\n+\n+public class MessageSenderInterceptorInterceptor implements InstanceMethodsAroundInterceptor {\n+    @Override\n+    public void beforeMethod(final EnhancedInstance objInst,\n+                             final Method method,\n+                             final Object[] allArguments,\n+                             final Class<?>[] argumentsTypes,\n+                             final MethodInterceptResult result) throws Throwable {\n+        SoapMessage message = (SoapMessage) allArguments[0];\n+        final String httpRequestMethod = (String) message.get(Message.HTTP_REQUEST_METHOD);\n+        final MessageInfo messageInfo = (MessageInfo) message.get(\"org.apache.cxf.service.model.MessageInfo\");\n+        final Address address = (Address) message.get(\"http.connection.address\");\n+\n+        if (null == httpRequestMethod || null == messageInfo || null == address) {\n+            return;\n+        }\n+        final String operationName = generateOperationName(messageInfo, address);\n+        AbstractSpan span = ContextManager.createExitSpan(operationName, address.getURI().getAuthority());\n+\n+        ContextCarrier contextCarrier = new ContextCarrier();\n+        ContextManager.inject(contextCarrier);\n+        span.setComponent(ComponentsDefine.APACHE_CXF);\n+        Tags.HTTP.METHOD.set(span, httpRequestMethod);\n+        Tags.URL.set(span, generateRequestURL(messageInfo, address));\n+        SpanLayer.asRPCFramework(span);\n+\n+        Map protocolHeaders = (Map) message.get(Message.PROTOCOL_HEADERS);\n+\n+        CarrierItem next = contextCarrier.items();\n+        while (next.hasNext()) {\n+            next = next.next();\n+            List<String> headerList = new ArrayList<>();", "originalCommit": "a6166533bceff32b6b0e23276d07acf436b24705", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3OTU0MQ==", "url": "https://github.com/apache/skywalking/pull/5887#discussion_r529479541", "bodyText": "done.", "author": "zifeihan", "createdAt": "2020-11-24T11:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3NDU5NA=="}], "type": "inlineReview", "revised_code": {"commit": "d5913718d681c4e9b211b7b04e8efdde6ef3ce72", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/cxf-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/cxf/v3/client/MessageSenderInterceptorInterceptor.java b/apm-sniffer/apm-sdk-plugin/cxf-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/cxf/v3/client/MessageSenderInterceptorInterceptor.java\nindex 16e6a80a16..6e3800ebe6 100644\n--- a/apm-sniffer/apm-sdk-plugin/cxf-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/cxf/v3/client/MessageSenderInterceptorInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/cxf-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/cxf/v3/client/MessageSenderInterceptorInterceptor.java\n\n@@ -67,7 +67,7 @@ public class MessageSenderInterceptorInterceptor implements InstanceMethodsAroun\n         CarrierItem next = contextCarrier.items();\n         while (next.hasNext()) {\n             next = next.next();\n-            List<String> headerList = new ArrayList<>();\n+            List<String> headerList = new ArrayList<>(1);\n             headerList.add(next.getHeadValue());\n             protocolHeaders.put(next.getHeadKey(), headerList);\n         }\n"}}, {"oid": "f395ba68c208d36d024ab11ac01fcd9438ccfea5", "url": "https://github.com/apache/skywalking/commit/f395ba68c208d36d024ab11ac01fcd9438ccfea5", "message": "Add License header.", "committedDate": "2020-11-24T11:33:03Z", "type": "commit"}, {"oid": "d5913718d681c4e9b211b7b04e8efdde6ef3ce72", "url": "https://github.com/apache/skywalking/commit/d5913718d681c4e9b211b7b04e8efdde6ef3ce72", "message": "Polishing.", "committedDate": "2020-11-24T11:34:55Z", "type": "commit"}, {"oid": "0df74f6c911692a8c495081a4083fbdb22b89088", "url": "https://github.com/apache/skywalking/commit/0df74f6c911692a8c495081a4083fbdb22b89088", "message": "Merge branch 'master' into cxf\n\n# Conflicts:\n#\tCHANGES.md", "committedDate": "2020-11-24T11:36:42Z", "type": "commit"}, {"oid": "8e83c9d4fd0cc278d9e3f7d1ebce8d128decbe69", "url": "https://github.com/apache/skywalking/commit/8e83c9d4fd0cc278d9e3f7d1ebce8d128decbe69", "message": "Polishing expectedData.yaml and some comments.", "committedDate": "2020-11-25T02:47:10Z", "type": "commit"}, {"oid": "9e20abe82b7724bbe9d2dff88e995bbcecead0cc", "url": "https://github.com/apache/skywalking/commit/9e20abe82b7724bbe9d2dff88e995bbcecead0cc", "message": "Polishing expectedData.yaml and some comments.", "committedDate": "2020-11-25T02:57:52Z", "type": "commit"}, {"oid": "81fde26b0901dddf2fe2f318dca77fedc12a9499", "url": "https://github.com/apache/skywalking/commit/81fde26b0901dddf2fe2f318dca77fedc12a9499", "message": "Merge branch 'master' into cxf", "committedDate": "2020-11-25T03:09:58Z", "type": "commit"}, {"oid": "aa2a7411c5455beb01ca884d43e253b130849c98", "url": "https://github.com/apache/skywalking/commit/aa2a7411c5455beb01ca884d43e253b130849c98", "message": "Merge branch 'master' into cxf", "committedDate": "2020-11-26T02:55:38Z", "type": "commit"}, {"oid": "36b0479b45484a8e631b78242cbf8ff046363273", "url": "https://github.com/apache/skywalking/commit/36b0479b45484a8e631b78242cbf8ff046363273", "message": "Polishing.", "committedDate": "2020-11-26T03:45:39Z", "type": "commit"}, {"oid": "a0b9a5726aa70d4dd2d769a413f8f8b7bd4d3034", "url": "https://github.com/apache/skywalking/commit/a0b9a5726aa70d4dd2d769a413f8f8b7bd4d3034", "message": "Polishing.", "committedDate": "2020-11-26T03:47:23Z", "type": "commit"}, {"oid": "d4585dc0d3803d25db52d6525b14ac7f4a3bbe7b", "url": "https://github.com/apache/skywalking/commit/d4585dc0d3803d25db52d6525b14ac7f4a3bbe7b", "message": "Merge branch 'master' into cxf", "committedDate": "2020-11-26T06:38:52Z", "type": "commit"}]}