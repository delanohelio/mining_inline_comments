{"pr_number": 5395, "pr_title": "Add logic-endpoint and testcase for elasticjob-2.x plugin", "pr_createdAt": "2020-08-26T16:50:49Z", "pr_url": "https://github.com/apache/skywalking/pull/5395", "timeline": [{"oid": "793cacfa8c7e95dd4ee5b7a7dc13850abc648389", "url": "https://github.com/apache/skywalking/commit/793cacfa8c7e95dd4ee5b7a7dc13850abc648389", "message": "Merge pull request #1 from apache/master\n\npull request", "committedDate": "2020-08-17T15:11:54Z", "type": "commit"}, {"oid": "9d3f6d57a90ae16cf55965927652aa563e558572", "url": "https://github.com/apache/skywalking/commit/9d3f6d57a90ae16cf55965927652aa563e558572", "message": "Merge pull request #3 from apache/master\n\nMerge master", "committedDate": "2020-08-23T06:39:58Z", "type": "commit"}, {"oid": "b2288385780d9df309f648b3ae1c814062ac58b2", "url": "https://github.com/apache/skywalking/commit/b2288385780d9df309f648b3ae1c814062ac58b2", "message": "Merge pull request #4 from apache/master\n\nmerge", "committedDate": "2020-08-24T14:47:53Z", "type": "commit"}, {"oid": "2a55f6ff06e4e639015d34c2a4950e46da5b786a", "url": "https://github.com/apache/skywalking/commit/2a55f6ff06e4e639015d34c2a4950e46da5b786a", "message": "Merge pull request #5 from apache/master\n\nmerge", "committedDate": "2020-08-26T12:38:30Z", "type": "commit"}, {"oid": "1c9572f0496493c7f70db3e759621c4be628f5f0", "url": "https://github.com/apache/skywalking/commit/1c9572f0496493c7f70db3e759621c4be628f5f0", "message": "Merge pull request #6 from apache/master\n\nSupport IN filter expressions in OAL (#5390)", "committedDate": "2020-08-26T16:41:15Z", "type": "commit"}, {"oid": "5f282b66253073e8f977d17463b1882fc3fcfad8", "url": "https://github.com/apache/skywalking/commit/5f282b66253073e8f977d17463b1882fc3fcfad8", "message": "Add  logic-endpoint and testcase for elasticjob-2.x plugin", "committedDate": "2020-08-26T16:41:49Z", "type": "commit"}, {"oid": "e58949a992cc5201f285016cb045b046bcf9eff6", "url": "https://github.com/apache/skywalking/commit/e58949a992cc5201f285016cb045b046bcf9eff6", "message": "fixed", "committedDate": "2020-08-26T17:45:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg1MzA3NQ==", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477853075", "bodyText": "Please don't use Chinese in the source codes. Keep all comments in English.", "author": "wu-sheng", "createdAt": "2020-08-27T01:12:17Z", "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.job;\n+\n+import com.dangdang.ddframe.job.api.simple.SimpleJob;\n+import com.dangdang.ddframe.job.config.JobCoreConfiguration;\n+import com.dangdang.ddframe.job.config.simple.SimpleJobConfiguration;\n+import com.dangdang.ddframe.job.lite.api.JobScheduler;\n+import com.dangdang.ddframe.job.lite.config.LiteJobConfiguration;\n+import com.dangdang.ddframe.job.lite.spring.api.SpringJobScheduler;\n+import com.dangdang.ddframe.job.reg.base.CoordinatorRegistryCenter;\n+import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperConfiguration;\n+import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class JobConfig {\n+\n+    private final String cron = \"0/5 * * * * ?\";\n+    private final int shardingTotalCount = 1;\n+    private final String shardingItemParameters = \"0=test\";\n+    private final String jobParameters = \"parameter\";\n+\n+    @Bean\n+    public SimpleJob simpleJob() {\n+        return new DemoSimpleJob();\n+    }\n+\n+    @Bean(initMethod = \"init\")\n+    public ZookeeperRegistryCenter regCenter(@Value(\"${elasticjob.regCenter.serverList}\") final String serverList,\n+                                             @Value(\"${elasticjob.regCenter.namespace}\") final String namespace) {\n+        return new ZookeeperRegistryCenter(new ZookeeperConfiguration(serverList, namespace));\n+    }\n+\n+    @Bean(initMethod = \"init\")\n+    public JobScheduler simpleJobScheduler(final SimpleJob simpleJob, final CoordinatorRegistryCenter regCenter) {\n+        return new SpringJobScheduler(simpleJob, regCenter,\n+                getLiteJobConfiguration(simpleJob.getClass(),\n+                cron, shardingTotalCount, shardingItemParameters, jobParameters));\n+    }\n+\n+    private LiteJobConfiguration getLiteJobConfiguration(final Class<? extends SimpleJob> jobClass,\n+                                                         final String cron,\n+                                                         final int shardingTotalCount,\n+                                                         final String shardingItemParameters,\n+                                                         final String jobParameters) {\n+        // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e", "originalCommit": "e58949a992cc5201f285016cb045b046bcf9eff6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg5NTE0Ng==", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477895146", "bodyText": "ok", "author": "hailin0", "createdAt": "2020-08-27T01:46:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg1MzA3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ad7d8aeffe9ef969f9944c29f889b6a0f381f6e8", "chunk": "diff --git a/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java b/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java\ndeleted file mode 100644\nindex a95dd0916..000000000\n--- a/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java\n+++ /dev/null\n\n@@ -1,75 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- *\n- */\n-\n-package org.apache.skywalking.apm.testcase.elasticjob.job;\n-\n-import com.dangdang.ddframe.job.api.simple.SimpleJob;\n-import com.dangdang.ddframe.job.config.JobCoreConfiguration;\n-import com.dangdang.ddframe.job.config.simple.SimpleJobConfiguration;\n-import com.dangdang.ddframe.job.lite.api.JobScheduler;\n-import com.dangdang.ddframe.job.lite.config.LiteJobConfiguration;\n-import com.dangdang.ddframe.job.lite.spring.api.SpringJobScheduler;\n-import com.dangdang.ddframe.job.reg.base.CoordinatorRegistryCenter;\n-import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperConfiguration;\n-import com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.Configuration;\n-\n-@Configuration\n-public class JobConfig {\n-\n-    private final String cron = \"0/5 * * * * ?\";\n-    private final int shardingTotalCount = 1;\n-    private final String shardingItemParameters = \"0=test\";\n-    private final String jobParameters = \"parameter\";\n-\n-    @Bean\n-    public SimpleJob simpleJob() {\n-        return new DemoSimpleJob();\n-    }\n-\n-    @Bean(initMethod = \"init\")\n-    public ZookeeperRegistryCenter regCenter(@Value(\"${elasticjob.regCenter.serverList}\") final String serverList,\n-                                             @Value(\"${elasticjob.regCenter.namespace}\") final String namespace) {\n-        return new ZookeeperRegistryCenter(new ZookeeperConfiguration(serverList, namespace));\n-    }\n-\n-    @Bean(initMethod = \"init\")\n-    public JobScheduler simpleJobScheduler(final SimpleJob simpleJob, final CoordinatorRegistryCenter regCenter) {\n-        return new SpringJobScheduler(simpleJob, regCenter,\n-                getLiteJobConfiguration(simpleJob.getClass(),\n-                cron, shardingTotalCount, shardingItemParameters, jobParameters));\n-    }\n-\n-    private LiteJobConfiguration getLiteJobConfiguration(final Class<? extends SimpleJob> jobClass,\n-                                                         final String cron,\n-                                                         final int shardingTotalCount,\n-                                                         final String shardingItemParameters,\n-                                                         final String jobParameters) {\n-        // \u5b9a\u4e49\u4f5c\u4e1a\u6838\u5fc3\u914d\u7f6e\n-        JobCoreConfiguration simpleCoreConfig = JobCoreConfiguration.newBuilder(jobClass.getName(), cron, shardingTotalCount).\n-                shardingItemParameters(shardingItemParameters).jobParameter(jobParameters).build();\n-        // \u5b9a\u4e49SIMPLE\u7c7b\u578b\u914d\u7f6e\n-        SimpleJobConfiguration simpleJobConfig = new SimpleJobConfiguration(simpleCoreConfig, jobClass.getCanonicalName());\n-        // \u5b9a\u4e49Lite\u4f5c\u4e1a\u6839\u914d\u7f6e\n-        LiteJobConfiguration simpleJobRootConfig = LiteJobConfiguration.newBuilder(simpleJobConfig).overwrite(true).build();\n-        return simpleJobRootConfig;\n-\n-    }\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDIwNg==", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477954206", "bodyText": "What is this?", "author": "wu-sheng", "createdAt": "2020-08-27T02:29:13Z", "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.controller;\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+@Log4j2\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @RequestMapping(\"/call\")\n+    @ResponseBody\n+    public String call() {\n+        // your codes", "originalCommit": "e58949a992cc5201f285016cb045b046bcf9eff6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad7d8aeffe9ef969f9944c29f889b6a0f381f6e8", "chunk": "diff --git a/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java b/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java\ndeleted file mode 100644\nindex 538e19a1e..000000000\n--- a/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java\n+++ /dev/null\n\n@@ -1,47 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- *\n- */\n-\n-package org.apache.skywalking.apm.testcase.elasticjob.controller;\n-\n-import lombok.extern.log4j.Log4j2;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.ResponseBody;\n-import org.springframework.web.bind.annotation.RestController;\n-\n-@RestController\n-@RequestMapping(\"/case\")\n-@Log4j2\n-public class CaseController {\n-\n-    private static final String SUCCESS = \"Success\";\n-\n-    @RequestMapping(\"/call\")\n-    @ResponseBody\n-    public String call() {\n-        // your codes\n-        return SUCCESS;\n-    }\n-\n-    @RequestMapping(\"/healthCheck\")\n-    @ResponseBody\n-    public String healthCheck() {\n-        // your codes\n-        return SUCCESS;\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDQzMw==", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r477954433", "bodyText": "Same here.", "author": "wu-sheng", "createdAt": "2020-08-27T02:29:23Z", "path": "test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.skywalking.apm.testcase.elasticjob.controller;\n+\n+import lombok.extern.log4j.Log4j2;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/case\")\n+@Log4j2\n+public class CaseController {\n+\n+    private static final String SUCCESS = \"Success\";\n+\n+    @RequestMapping(\"/call\")\n+    @ResponseBody\n+    public String call() {\n+        // your codes\n+        return SUCCESS;\n+    }\n+\n+    @RequestMapping(\"/healthCheck\")\n+    @ResponseBody\n+    public String healthCheck() {\n+        // your codes", "originalCommit": "e58949a992cc5201f285016cb045b046bcf9eff6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODAyMDI2Mw==", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r478020263", "bodyText": "This is a template generated by test framework", "author": "hailin0", "createdAt": "2020-08-27T03:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDQzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA0NjAwNg==", "url": "https://github.com/apache/skywalking/pull/5395#discussion_r478046006", "bodyText": "Don't keep them. Template is for reminding you only.", "author": "wu-sheng", "createdAt": "2020-08-27T03:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1NDQzMw=="}], "type": "inlineReview", "revised_code": {"commit": "ad7d8aeffe9ef969f9944c29f889b6a0f381f6e8", "chunk": "diff --git a/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java b/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java\ndeleted file mode 100644\nindex 538e19a1e..000000000\n--- a/test/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java\n+++ /dev/null\n\n@@ -1,47 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- *\n- */\n-\n-package org.apache.skywalking.apm.testcase.elasticjob.controller;\n-\n-import lombok.extern.log4j.Log4j2;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.ResponseBody;\n-import org.springframework.web.bind.annotation.RestController;\n-\n-@RestController\n-@RequestMapping(\"/case\")\n-@Log4j2\n-public class CaseController {\n-\n-    private static final String SUCCESS = \"Success\";\n-\n-    @RequestMapping(\"/call\")\n-    @ResponseBody\n-    public String call() {\n-        // your codes\n-        return SUCCESS;\n-    }\n-\n-    @RequestMapping(\"/healthCheck\")\n-    @ResponseBody\n-    public String healthCheck() {\n-        // your codes\n-        return SUCCESS;\n-    }\n-\n-}\n"}}, {"oid": "ad7d8aeffe9ef969f9944c29f889b6a0f381f6e8", "url": "https://github.com/apache/skywalking/commit/ad7d8aeffe9ef969f9944c29f889b6a0f381f6e8", "message": "Merge pull request #7 from apache/master\n\nmerge", "committedDate": "2020-08-27T13:29:50Z", "type": "commit"}, {"oid": "e97c95c76c8e71005d33f57fd483d81067a3ab23", "url": "https://github.com/apache/skywalking/commit/e97c95c76c8e71005d33f57fd483d81067a3ab23", "message": "Add  logic-endpoint and testcase for elasticjob-2.x plugin", "committedDate": "2020-08-27T13:58:47Z", "type": "commit"}, {"oid": "a1388f51bc62330e89cd6ff3f0b206bea9fccec5", "url": "https://github.com/apache/skywalking/commit/a1388f51bc62330e89cd6ff3f0b206bea9fccec5", "message": "fixed", "committedDate": "2020-08-27T13:58:47Z", "type": "commit"}, {"oid": "6d52d155ca92023d71ca018eb8271e96d80f1fd5", "url": "https://github.com/apache/skywalking/commit/6d52d155ca92023d71ca018eb8271e96d80f1fd5", "message": "fixed", "committedDate": "2020-08-27T13:58:47Z", "type": "commit"}, {"oid": "978cbb3f2192fd2e16accb93bf30214bb6f6253d", "url": "https://github.com/apache/skywalking/commit/978cbb3f2192fd2e16accb93bf30214bb6f6253d", "message": "Merge pull request #8 from apache/master\n\nmerge", "committedDate": "2020-08-27T14:01:51Z", "type": "commit"}, {"oid": "b554dab05f99aaafd7c60fa5e54c47ea846e7498", "url": "https://github.com/apache/skywalking/commit/b554dab05f99aaafd7c60fa5e54c47ea846e7498", "message": "Merge branch 'elasticjob-2.x' of github.com:hailin0/skywalking\n\n\u0001 Conflicts:\n\u0001\ttest/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/controller/CaseController.java\n\u0001\ttest/plugin/scenarios/elasticjob-2.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticjob/job/JobConfig.java", "committedDate": "2020-08-27T14:11:29Z", "type": "commit"}, {"oid": "4bddab7ee81df028c514b43c5d6ad38bf9516ad2", "url": "https://github.com/apache/skywalking/commit/4bddab7ee81df028c514b43c5d6ad38bf9516ad2", "message": "fixed", "committedDate": "2020-08-27T14:25:36Z", "type": "commit"}, {"oid": "e4831e00310b4ba3f376a3f2cd429d69749d2dc7", "url": "https://github.com/apache/skywalking/commit/e4831e00310b4ba3f376a3f2cd429d69749d2dc7", "message": "fixed", "committedDate": "2020-08-27T16:35:21Z", "type": "commit"}, {"oid": "2931b767e654b9c5dffa77ffed6a26b8f682f8a7", "url": "https://github.com/apache/skywalking/commit/2931b767e654b9c5dffa77ffed6a26b8f682f8a7", "message": "Merge branch 'master' into elasticjob-2.x", "committedDate": "2020-08-28T01:42:15Z", "type": "commit"}, {"oid": "56ffbf87337902e46bad3bd5b624e4366831acce", "url": "https://github.com/apache/skywalking/commit/56ffbf87337902e46bad3bd5b624e4366831acce", "message": "Merge branch 'master' into elasticjob-2.x", "committedDate": "2020-08-28T04:56:47Z", "type": "commit"}]}