{"pr_number": 4276, "pr_title": "Provide AVRO plugin", "pr_createdAt": "2020-01-20T13:58:10Z", "pr_url": "https://github.com/apache/skywalking/pull/4276", "timeline": [{"oid": "ca713f52bd7c276aff77d7e200b4b363616c00ad", "url": "https://github.com/apache/skywalking/commit/ca713f52bd7c276aff77d7e200b4b363616c00ad", "message": "Provide Avro plugin", "committedDate": "2020-01-18T17:23:54Z", "type": "commit"}, {"oid": "42b559b36874133e5d8f0d1d0831310f7082d535", "url": "https://github.com/apache/skywalking/commit/42b559b36874133e5d8f0d1d0831310f7082d535", "message": "provide testcase for avro-plugin", "committedDate": "2020-01-20T08:34:45Z", "type": "commit"}, {"oid": "03139f4b523a42767723548a409fcda6fb05bfb6", "url": "https://github.com/apache/skywalking/commit/03139f4b523a42767723548a409fcda6fb05bfb6", "message": "update", "committedDate": "2020-01-20T09:15:39Z", "type": "commit"}, {"oid": "39cfe96a9cc5d7b6aee98a8b8133803da562a21a", "url": "https://github.com/apache/skywalking/commit/39cfe96a9cc5d7b6aee98a8b8133803da562a21a", "message": "push", "committedDate": "2020-01-20T11:26:03Z", "type": "commit"}, {"oid": "165e435f1e3e06d76be6ce0a2413c67007eefcae", "url": "https://github.com/apache/skywalking/commit/165e435f1e3e06d76be6ce0a2413c67007eefcae", "message": "compate with 1.7.3 and lower", "committedDate": "2020-01-20T13:39:01Z", "type": "commit"}, {"oid": "b552be49204301a6459fe9702511f5a4e20b0a6b", "url": "https://github.com/apache/skywalking/commit/b552be49204301a6459fe9702511f5a4e20b0a6b", "message": "compate with 1.7.3 and lower", "committedDate": "2020-01-20T13:41:05Z", "type": "commit"}, {"oid": "baf424ea1edcb58052b407ee4cbc3d071e11144f", "url": "https://github.com/apache/skywalking/commit/baf424ea1edcb58052b407ee4cbc3d071e11144f", "message": "Merge branch 'master' into avro-plugin-devel", "committedDate": "2020-01-20T14:00:49Z", "type": "commit"}, {"oid": "0d9896aa43d6f4420ab9200b610032a9b02608ed", "url": "https://github.com/apache/skywalking/commit/0d9896aa43d6f4420ab9200b610032a9b02608ed", "message": "fix", "committedDate": "2020-01-20T14:58:06Z", "type": "commit"}, {"oid": "a3c4354adbdc68d82758d163ab4d2d8c24a54778", "url": "https://github.com/apache/skywalking/commit/a3c4354adbdc68d82758d163ab4d2d8c24a54778", "message": "update", "committedDate": "2020-01-20T14:59:22Z", "type": "commit"}, {"oid": "bc7c902f14626f942c406508180e0ee0ff04867e", "url": "https://github.com/apache/skywalking/commit/bc7c902f14626f942c406508180e0ee0ff04867e", "message": "fix expectedData.yml issue", "committedDate": "2020-01-25T08:26:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIzMzU2MA==", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r371233560", "bodyText": "Why empty string.", "author": "arugal", "createdAt": "2020-01-27T13:17:58Z", "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.plugin.avro;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import org.apache.avro.Protocol;\n+import org.apache.avro.ipc.Requestor;\n+import org.apache.avro.ipc.Transceiver;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+\n+public abstract class AbstractRequestInterceptor implements InstanceConstructorInterceptor, InstanceMethodsAroundInterceptor {\n+    private static final ILog LOG = LogManager.getLogger(GenericRequestorInterceptor.class);\n+\n+    @Override\n+    public void onConstruct(EnhancedInstance objInst, Object[] allArguments) {\n+        if (objInst.getSkyWalkingDynamicField() == null) {\n+            Requestor requestor = (Requestor)objInst;\n+            requestor.addRPCPlugin(new SWClientRPCPlugin());\n+\n+            Protocol protocol = (Protocol)allArguments[0];\n+            Transceiver transceiver = (Transceiver)allArguments[1];\n+            try {\n+                objInst.setSkyWalkingDynamicField(new AvroInstance(\n+                    protocol.getNamespace() + \".\" + protocol.getName() + \".\",\n+                    transceiver.getRemoteName()\n+                ));\n+            } catch (IOException e) {\n+                objInst.setSkyWalkingDynamicField(new AvroInstance(\"Undefined\", \"Undefined\"));\n+                LOG.error(\"\", e);", "originalCommit": "bc7c902f14626f942c406508180e0ee0ff04867e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e609ecaddb1273dde4d56ca719670423c5b0b554", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java b/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java\nindex b97c343d51..97894fae4b 100644\n--- a/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java\n\n@@ -47,7 +47,7 @@ public abstract class AbstractRequestInterceptor implements InstanceConstructorI\n                 ));\n             } catch (IOException e) {\n                 objInst.setSkyWalkingDynamicField(new AvroInstance(\"Undefined\", \"Undefined\"));\n-                LOG.error(\"\", e);\n+                LOG.error(\"Failed to get Avro Remote Client Information.\", e);\n             }\n         }\n     }\n"}}, {"oid": "3436602c1a6859d53facac2805961e9874ea82c7", "url": "https://github.com/apache/skywalking/commit/3436602c1a6859d53facac2805961e9874ea82c7", "message": "add unit test", "committedDate": "2020-01-28T15:14:37Z", "type": "commit"}, {"oid": "e609ecaddb1273dde4d56ca719670423c5b0b554", "url": "https://github.com/apache/skywalking/commit/e609ecaddb1273dde4d56ca719670423c5b0b554", "message": "update", "committedDate": "2020-01-28T15:30:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MTIyNw==", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r372141227", "bodyText": "LOG to logger? I remember most codes use this.", "author": "wu-sheng", "createdAt": "2020-01-29T00:59:24Z", "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.plugin.avro;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import org.apache.avro.Protocol;\n+import org.apache.avro.ipc.Requestor;\n+import org.apache.avro.ipc.Transceiver;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+import org.apache.skywalking.apm.agent.core.logging.api.ILog;\n+import org.apache.skywalking.apm.agent.core.logging.api.LogManager;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceConstructorInterceptor;\n+import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n+\n+public abstract class AbstractRequestInterceptor implements InstanceConstructorInterceptor, InstanceMethodsAroundInterceptor {\n+    private static final ILog LOG = LogManager.getLogger(GenericRequestorInterceptor.class);", "originalCommit": "e609ecaddb1273dde4d56ca719670423c5b0b554", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82cbbb843d6f90c5deba8a17ca58570b1cac2a45", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java b/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java\nindex 97894fae4b..b30c6f77cb 100644\n--- a/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java\n+++ b/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/AbstractRequestInterceptor.java\n\n@@ -30,7 +30,7 @@ import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceC\n import org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;\n \n public abstract class AbstractRequestInterceptor implements InstanceConstructorInterceptor, InstanceMethodsAroundInterceptor {\n-    private static final ILog LOG = LogManager.getLogger(GenericRequestorInterceptor.class);\n+    private static final ILog logger = LogManager.getLogger(GenericRequestorInterceptor.class);\n \n     @Override\n     public void onConstruct(EnhancedInstance objInst, Object[] allArguments) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MjA1MA==", "url": "https://github.com/apache/skywalking/pull/4276#discussion_r372142050", "bodyText": "Is this check really meaningful? Such as in some cases, the context wouldn't be active? This Check is also a payload.", "author": "wu-sheng", "createdAt": "2020-01-29T01:03:04Z", "path": "apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.apache.skywalking.apm.plugin.avro;\n+\n+import org.apache.avro.ipc.RPCContext;\n+import org.apache.avro.ipc.RPCPlugin;\n+import org.apache.skywalking.apm.agent.core.context.CarrierItem;\n+import org.apache.skywalking.apm.agent.core.context.ContextCarrier;\n+import org.apache.skywalking.apm.agent.core.context.ContextManager;\n+\n+import java.nio.ByteBuffer;\n+\n+public class SWClientRPCPlugin extends RPCPlugin {\n+\n+    @Override\n+    public void clientSendRequest(RPCContext context) {\n+        if (ContextManager.isActive()) {", "originalCommit": "e609ecaddb1273dde4d56ca719670423c5b0b554", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82cbbb843d6f90c5deba8a17ca58570b1cac2a45", "chunk": "diff --git a/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java b/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java\nindex a2c173fe35..d06e3a4f17 100644\n--- a/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java\n+++ b/apm-sniffer/apm-sdk-plugin/avro-plugin/src/main/java/org/apache/skywalking/apm/plugin/avro/SWClientRPCPlugin.java\n\n@@ -25,19 +25,21 @@ import org.apache.skywalking.apm.agent.core.context.ContextManager;\n \n import java.nio.ByteBuffer;\n \n+/**\n+ * A SkyWalking tracing plugin for Avro Client.\n+ * Inject CarrierItems into RPC's metadata from cross-process propagation.\n+ */\n public class SWClientRPCPlugin extends RPCPlugin {\n \n     @Override\n     public void clientSendRequest(RPCContext context) {\n-        if (ContextManager.isActive()) {\n-            ContextCarrier carrier = new ContextCarrier();\n-            ContextManager.inject(carrier);\n+        ContextCarrier carrier = new ContextCarrier();\n+        ContextManager.inject(carrier);\n \n-            CarrierItem items = carrier.items();\n-            while (items.hasNext()) {\n-                items = items.next();\n-                context.requestCallMeta().put(items.getHeadKey(), ByteBuffer.wrap(items.getHeadValue().getBytes()));\n-            }\n+        CarrierItem items = carrier.items();\n+        while (items.hasNext()) {\n+            items = items.next();\n+            context.requestCallMeta().put(items.getHeadKey(), ByteBuffer.wrap(items.getHeadValue().getBytes()));\n         }\n     }\n \n"}}, {"oid": "bf047317fc63c30434388f94ec848a6b75a90dd3", "url": "https://github.com/apache/skywalking/commit/bf047317fc63c30434388f94ec848a6b75a90dd3", "message": "Merge branch 'master' into avro-plugin-devel", "committedDate": "2020-01-29T05:19:45Z", "type": "commit"}, {"oid": "82cbbb843d6f90c5deba8a17ca58570b1cac2a45", "url": "https://github.com/apache/skywalking/commit/82cbbb843d6f90c5deba8a17ca58570b1cac2a45", "message": "fix something according to suggestions.", "committedDate": "2020-01-29T07:46:41Z", "type": "commit"}, {"oid": "cf789a5503f8eec749153ffbd5205d8b43b639ec", "url": "https://github.com/apache/skywalking/commit/cf789a5503f8eec749153ffbd5205d8b43b639ec", "message": "Merge branch 'avro-plugin-devel' of https://github.com/dmsolr/skywalking into avro-plugin-devel", "committedDate": "2020-01-29T07:46:56Z", "type": "commit"}, {"oid": "8b381465e020ab4882b362edd1f44e5b4adf7126", "url": "https://github.com/apache/skywalking/commit/8b381465e020ab4882b362edd1f44e5b4adf7126", "message": "Merge branch 'master' into avro-plugin-devel", "committedDate": "2020-01-29T07:47:08Z", "type": "commit"}, {"oid": "9a2633374218366debd1f5c66b773a1ddc6fa4e3", "url": "https://github.com/apache/skywalking/commit/9a2633374218366debd1f5c66b773a1ddc6fa4e3", "message": "Merge branch 'avro-plugin-devel' of https://github.com/dmsolr/skywalking into avro-plugin-devel", "committedDate": "2020-01-29T07:47:19Z", "type": "commit"}, {"oid": "95f6cda7276d3a22a4c63a5c73f6cc3e89d00bf5", "url": "https://github.com/apache/skywalking/commit/95f6cda7276d3a22a4c63a5c73f6cc3e89d00bf5", "message": "Merge branch 'master' into avro-plugin-devel", "committedDate": "2020-01-29T09:04:52Z", "type": "commit"}, {"oid": "65ca7d6291eba270b118be26b4f61b5c7aeae33b", "url": "https://github.com/apache/skywalking/commit/65ca7d6291eba270b118be26b4f61b5c7aeae33b", "message": "fix expectedData.yml", "committedDate": "2020-01-29T16:03:06Z", "type": "commit"}]}