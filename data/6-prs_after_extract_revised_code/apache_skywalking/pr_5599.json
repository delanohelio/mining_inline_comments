{"pr_number": 5599, "pr_title": "Fix JdkObsolete issue", "pr_createdAt": "2020-09-30T15:10:31Z", "pr_url": "https://github.com/apache/skywalking/pull/5599", "timeline": [{"oid": "9959d8ee866ef8ee3945b26a5103dc8d1ce143b8", "url": "https://github.com/apache/skywalking/commit/9959d8ee866ef8ee3945b26a5103dc8d1ce143b8", "message": "Fix JdkObsolete issue", "committedDate": "2020-09-30T15:09:59Z", "type": "commit"}, {"oid": "c2cc62e44f6521752ad69ba09e7f03dd2dd26e49", "url": "https://github.com/apache/skywalking/commit/c2cc62e44f6521752ad69ba09e7f03dd2dd26e49", "message": "Merge branch 'master' into fix/JdkObsolete", "committedDate": "2020-09-30T15:11:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5MDExOA==", "url": "https://github.com/apache/skywalking/pull/5599#discussion_r497590118", "bodyText": "This format seems very strange, please fix.", "author": "wu-sheng", "createdAt": "2020-09-30T15:12:17Z", "path": "apm-application-toolkit/apm-toolkit-opentracing/src/main/java/org/apache/skywalking/apm/toolkit/opentracing/SkywalkingSpanBuilder.java", "diffHunk": "@@ -84,8 +83,10 @@ public SkywalkingSpanBuilder(String operationName) {\n                 isExit = false;\n             }\n         } else if (Tags.PEER_HOST_IPV4.getKey().equals(key) || Tags.PEER_HOST_IPV6.getKey()\n-                                                                                  .equals(key) || Tags.PEER_HOSTNAME.getKey()\n-                                                                                                                    .equals(key)) {\n+                                                                                  .equals(\n+                                                                                      key) || Tags.PEER_HOSTNAME.getKey()\n+                                                                                                                .equals(\n+                                                                                                                    key)) {", "originalCommit": "c2cc62e44f6521752ad69ba09e7f03dd2dd26e49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYxMDQ0MA==", "url": "https://github.com/apache/skywalking/pull/5599#discussion_r497610440", "bodyText": "Done", "author": "ascrutae", "createdAt": "2020-09-30T15:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5MDExOA=="}], "type": "inlineReview", "revised_code": {"commit": "0c41ea3dc8c859a0a8bc800712b72733e7262c70", "chunk": "diff --git a/apm-application-toolkit/apm-toolkit-opentracing/src/main/java/org/apache/skywalking/apm/toolkit/opentracing/SkywalkingSpanBuilder.java b/apm-application-toolkit/apm-toolkit-opentracing/src/main/java/org/apache/skywalking/apm/toolkit/opentracing/SkywalkingSpanBuilder.java\nindex e0eee3a572..3b531ffeca 100644\n--- a/apm-application-toolkit/apm-toolkit-opentracing/src/main/java/org/apache/skywalking/apm/toolkit/opentracing/SkywalkingSpanBuilder.java\n+++ b/apm-application-toolkit/apm-toolkit-opentracing/src/main/java/org/apache/skywalking/apm/toolkit/opentracing/SkywalkingSpanBuilder.java\n\n@@ -82,11 +82,8 @@ public class SkywalkingSpanBuilder implements Tracer.SpanBuilder {\n                 isEntry = false;\n                 isExit = false;\n             }\n-        } else if (Tags.PEER_HOST_IPV4.getKey().equals(key) || Tags.PEER_HOST_IPV6.getKey()\n-                                                                                  .equals(\n-                                                                                      key) || Tags.PEER_HOSTNAME.getKey()\n-                                                                                                                .equals(\n-                                                                                                                    key)) {\n+        } else if (Tags.PEER_HOST_IPV4.getKey().equals(key) ||\n+            Tags.PEER_HOST_IPV6.getKey().equals(key) || Tags.PEER_HOSTNAME.getKey().equals(key)) {\n             peer = value;\n         } else if (Tags.PEER_SERVICE.getKey().equals(key)) {\n             operationName = value;\n"}}, {"oid": "0c41ea3dc8c859a0a8bc800712b72733e7262c70", "url": "https://github.com/apache/skywalking/commit/0c41ea3dc8c859a0a8bc800712b72733e7262c70", "message": "Fix code style", "committedDate": "2020-09-30T15:39:16Z", "type": "commit"}, {"oid": "0c41ea3dc8c859a0a8bc800712b72733e7262c70", "url": "https://github.com/apache/skywalking/commit/0c41ea3dc8c859a0a8bc800712b72733e7262c70", "message": "Fix code style", "committedDate": "2020-09-30T15:39:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyNDU4MQ==", "url": "https://github.com/apache/skywalking/pull/5599#discussion_r497624581", "bodyText": "GetClassOnEnum:  Calling getClass() on an enum may return a subclass of the enum type", "author": "sonatype-lift", "createdAt": "2020-09-30T15:59:20Z", "path": "apm-sniffer/apm-test-tools/src/main/java/org/apache/skywalking/apm/agent/test/tools/AgentServiceRule.java", "diffHunk": "@@ -38,11 +38,11 @@ protected void after() {\n         super.after();\n         try {", "originalCommit": "9959d8ee866ef8ee3945b26a5103dc8d1ce143b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6042685a6cc8ca97b79766de03d723f84a0c18ae", "chunk": "diff --git a/apm-sniffer/apm-test-tools/src/main/java/org/apache/skywalking/apm/agent/test/tools/AgentServiceRule.java b/apm-sniffer/apm-test-tools/src/main/java/org/apache/skywalking/apm/agent/test/tools/AgentServiceRule.java\nindex b547e0df06..3622e2cf53 100644\n--- a/apm-sniffer/apm-test-tools/src/main/java/org/apache/skywalking/apm/agent/test/tools/AgentServiceRule.java\n+++ b/apm-sniffer/apm-test-tools/src/main/java/org/apache/skywalking/apm/agent/test/tools/AgentServiceRule.java\n\n@@ -38,7 +38,7 @@ public class AgentServiceRule extends ExternalResource {\n         super.after();\n         try {\n             FieldSetter.setValue(\n-                ServiceManager.INSTANCE.getClass(), \"bootedServices\", new HashMap<Class, BootService>());\n+                ServiceManager.INSTANCE.getDeclaringClass(), \"bootedServices\", new HashMap<Class, BootService>());\n             FieldSetter.setValue(\n                 IgnoredTracerContext.ListenerManager.class, \"LISTENERS\", new ArrayList<TracingContextListener>());\n             FieldSetter.setValue(\n"}}, {"oid": "6042685a6cc8ca97b79766de03d723f84a0c18ae", "url": "https://github.com/apache/skywalking/commit/6042685a6cc8ca97b79766de03d723f84a0c18ae", "message": "Merge branch 'master' into fix/JdkObsolete", "committedDate": "2020-10-01T00:18:36Z", "type": "commit"}]}