{"pr_number": 4748, "pr_title": "Support define multiple OAL configuration", "pr_createdAt": "2020-05-06T14:09:49Z", "pr_url": "https://github.com/apache/skywalking/pull/4748", "timeline": [{"oid": "4ea7963f041e466699e0bcf093e63ccde04d12b4", "url": "https://github.com/apache/skywalking/commit/4ea7963f041e466699e0bcf093e63ccde04d12b4", "message": "support define multiple oal configurations", "committedDate": "2020-05-06T14:08:01Z", "type": "commit"}, {"oid": "19e5f348852c65333cb0cd10e193279e77c0bffb", "url": "https://github.com/apache/skywalking/commit/19e5f348852c65333cb0cd10e193279e77c0bffb", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-06T14:09:58Z", "type": "commit"}, {"oid": "59096143bcb4da8a199f48daac41d0db8a04dd01", "url": "https://github.com/apache/skywalking/commit/59096143bcb4da8a199f48daac41d0db8a04dd01", "message": "fix profile tool", "committedDate": "2020-05-06T14:34:28Z", "type": "commit"}, {"oid": "37ce145ddb2236fa4cb3b4c43966dc85d5dda400", "url": "https://github.com/apache/skywalking/commit/37ce145ddb2236fa4cb3b4c43966dc85d5dda400", "message": "Merge remote-tracking branch 'origin/patch1' into patch1", "committedDate": "2020-05-06T14:35:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTMwMg==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r420851302", "bodyText": "Enum is now good for extension, because you have to change the source codes. Please consider this as an abstract type.", "author": "wu-sheng", "createdAt": "2020-05-06T14:47:42Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALDefine.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.skywalking.oap.server.core.oal.rt;\n+\n+import lombok.Getter;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+/**\n+ * Define multiple OAL configuration\n+ */\n+@Getter\n+public enum OALDefine {", "originalCommit": "37ce145ddb2236fa4cb3b4c43966dc85d5dda400", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMTY1Mg==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r420901652", "bodyText": "Is that right ?\n@Getter\npublic abstract class OALDefine {\n\n    OALDefine(final String configFile,\n              final String sourcePackage,\n              final String dynamicMetricsClassPackage,\n              final String dynamicMetricsBuilderClassPackage, final String dynamicDispatcherClassPackage) {\n        this.configFile = requireNonNull(configFile);\n        this.sourcePackage = requireNonNull(sourcePackage);\n        this.dynamicMetricsClassPackage = requireNonNull(dynamicMetricsClassPackage);\n        this.dynamicMetricsBuilderClassPackage = requireNonNull(dynamicMetricsBuilderClassPackage);\n        this.dynamicDispatcherClassPackage = requireNonNull(dynamicDispatcherClassPackage);\n    }\n\n    private final String configFile;\n    private final String sourcePackage;\n    private final String dynamicMetricsClassPackage;\n    private final String dynamicMetricsBuilderClassPackage;\n    private final String dynamicDispatcherClassPackage;\n}\npublic class OfficialOALDefine extends OALDefine {\n\n    public static final OfficialOALDefine INSTANCE = new OfficialOALDefine();\n\n    private OfficialOALDefine() {\n        super(\n            \"official_analysis.oal\",\n            \"org.apache.skywalking.oap.server.core.source.\",\n            \"org.apache.skywalking.oal.rt.official.metrics.\",\n            \"org.apache.skywalking.oal.rt.official.metrics.builder.\",\n            \"org.apache.skywalking.oal.rt.official.dispatcher.\"\n        );\n    }\n}", "author": "arugal", "createdAt": "2020-05-06T15:53:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE1MDkxNQ==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421150915", "bodyText": "Yes. Like this.", "author": "wu-sheng", "createdAt": "2020-05-06T23:30:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI0NjUwOQ==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421246509", "bodyText": "Done.", "author": "arugal", "createdAt": "2020-05-07T05:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1MTMwMg=="}], "type": "inlineReview", "revised_code": {"commit": "536f29b19d921b54a858835d6a50f592eec6a659", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALDefine.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALDefine.java\nindex 356bcae7b3..6e7edde7a2 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALDefine.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALDefine.java\n\n@@ -18,6 +18,8 @@\n package org.apache.skywalking.oap.server.core.oal.rt;\n \n import lombok.Getter;\n+import lombok.ToString;\n+import org.apache.skywalking.oap.server.core.Const;\n \n import static java.util.Objects.requireNonNull;\n \n"}}, {"oid": "73711dbc7f4c1095898190c83064e8e2123de7c9", "url": "https://github.com/apache/skywalking/commit/73711dbc7f4c1095898190c83064e8e2123de7c9", "message": "fix ut", "committedDate": "2020-05-06T15:45:03Z", "type": "commit"}, {"oid": "f2ea3d1fd0ccb33dc4fbaf6f286da8227c5a6ca4", "url": "https://github.com/apache/skywalking/commit/f2ea3d1fd0ccb33dc4fbaf6f286da8227c5a6ca4", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-07T01:28:11Z", "type": "commit"}, {"oid": "536f29b19d921b54a858835d6a50f592eec6a659", "url": "https://github.com/apache/skywalking/commit/536f29b19d921b54a858835d6a50f592eec6a659", "message": "follow review", "committedDate": "2020-05-07T05:21:50Z", "type": "commit"}, {"oid": "222dd45fbc1e61dea88e84437ba67525e556418f", "url": "https://github.com/apache/skywalking/commit/222dd45fbc1e61dea88e84437ba67525e556418f", "message": "Merge remote-tracking branch 'origin/patch1' into patch1", "committedDate": "2020-05-07T05:22:09Z", "type": "commit"}, {"oid": "af5f817ef6ce12cf134bae0d42ed06868bc2bbd1", "url": "https://github.com/apache/skywalking/commit/af5f817ef6ce12cf134bae0d42ed06868bc2bbd1", "message": "fix checkstyle", "committedDate": "2020-05-07T05:31:12Z", "type": "commit"}, {"oid": "fbfd49328fd5209e854f36ce0bbabc31ec1577bd", "url": "https://github.com/apache/skywalking/commit/fbfd49328fd5209e854f36ce0bbabc31ec1577bd", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-07T10:43:43Z", "type": "commit"}, {"oid": "609ad6a25089a2f706dfe08dec788e43d88d93b6", "url": "https://github.com/apache/skywalking/commit/609ad6a25089a2f706dfe08dec788e43d88d93b6", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-07T12:56:20Z", "type": "commit"}, {"oid": "963b68118eb59e3d80b52a737aad767d2b54d589", "url": "https://github.com/apache/skywalking/commit/963b68118eb59e3d80b52a737aad767d2b54d589", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-07T15:01:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3NDI3Mw==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421874273", "bodyText": "loader -> load", "author": "wu-sheng", "createdAt": "2020-05-08T00:47:29Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngineLoaderService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.skywalking.oap.server.core.oal.rt;\n+\n+import java.lang.reflect.Constructor;\n+import java.util.HashSet;\n+import java.util.Set;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.StreamAnnotationListener;\n+import org.apache.skywalking.oap.server.core.source.SourceReceiver;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.apache.skywalking.oap.server.library.module.ModuleProvider;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+import org.apache.skywalking.oap.server.library.module.Service;\n+\n+/**\n+ * Activate {@link OALEngine} according to {@link OALDefine}\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class OALEngineLoaderService implements Service {\n+\n+    private final Set<OALDefine> oalDefineSet = new HashSet<>();\n+    private final ModuleManager moduleManager;\n+\n+    /**\n+     * Normally it is invoked in the {@link ModuleProvider#start()} of the receiver-plugin module.\n+     */\n+    public void loader(OALDefine define) throws ModuleStartException {", "originalCommit": "963b68118eb59e3d80b52a737aad767d2b54d589", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3NDMzOQ==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421874339", "bodyText": "Should not have ModuleStartException, this is not a module", "author": "wu-sheng", "createdAt": "2020-05-08T00:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3NDI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4NzAyMg==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421887022", "bodyText": "OALEngine throws ModuleStartException and OALCompileException. Meanwhile OALEngineLoaderService#load() is called in ModuleProvider#start().\n\n  \n    \n      skywalking/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngine.java\n    \n    \n        Lines 28 to 36\n      in\n      d713076\n    \n    \n    \n    \n\n        \n          \n           public interface OALEngine { \n        \n\n        \n          \n               void setStreamListener(StreamAnnotationListener listener) throws ModuleStartException; \n        \n\n        \n          \n            \n        \n\n        \n          \n               void setDispatcherListener(DispatcherDetectorListener listener) throws ModuleStartException; \n        \n\n        \n          \n            \n        \n\n        \n          \n               void start(ClassLoader currentClassLoader) throws ModuleStartException, OALCompileException; \n        \n\n        \n          \n            \n        \n\n        \n          \n               void notifyAllListeners() throws ModuleStartException; \n        \n\n        \n          \n           }", "author": "arugal", "createdAt": "2020-05-08T01:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3NDI3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4NzA4Mw==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421887083", "bodyText": "loader -> load\n\nDone.", "author": "arugal", "createdAt": "2020-05-08T01:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3NDI3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "886c3484ef3ab85bdcbe00618a3c60473ff04a4c", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngineLoaderService.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngineLoaderService.java\nindex 3231040fc2..5d2b0d239a 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngineLoaderService.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngineLoaderService.java\n\n@@ -43,7 +43,7 @@ public class OALEngineLoaderService implements Service {\n     /**\n      * Normally it is invoked in the {@link ModuleProvider#start()} of the receiver-plugin module.\n      */\n-    public void loader(OALDefine define) throws ModuleStartException {\n+    public void load(OALDefine define) throws ModuleStartException {\n         if (oalDefineSet.contains(define)) {\n             // each oal define will only be activated once\n             return;\n"}}, {"oid": "886c3484ef3ab85bdcbe00618a3c60473ff04a4c", "url": "https://github.com/apache/skywalking/commit/886c3484ef3ab85bdcbe00618a3c60473ff04a4c", "message": "follow review", "committedDate": "2020-05-08T01:33:33Z", "type": "commit"}, {"oid": "f5f63d8c13154104cb352778b118d3072560bfba", "url": "https://github.com/apache/skywalking/commit/f5f63d8c13154104cb352778b118d3072560bfba", "message": "Merge remote-tracking branch 'origin/patch1' into patch1", "committedDate": "2020-05-08T01:33:51Z", "type": "commit"}, {"oid": "cad3f798215389ffaba333168ca941c4ee95a71e", "url": "https://github.com/apache/skywalking/commit/cad3f798215389ffaba333168ca941c4ee95a71e", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-08T01:37:55Z", "type": "commit"}, {"oid": "f05f007ef66281409ba71930b1321d38464f36b5", "url": "https://github.com/apache/skywalking/commit/f05f007ef66281409ba71930b1321d38464f36b5", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-08T03:15:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNTI2MA==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421915260", "bodyText": "Seems you did not override the hashCode and equals methods in OALDefine and its subclasses", "author": "kezhenxu94", "createdAt": "2020-05-08T03:24:13Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/oal/rt/OALEngineLoaderService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.skywalking.oap.server.core.oal.rt;\n+\n+import java.lang.reflect.Constructor;\n+import java.util.HashSet;\n+import java.util.Set;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.skywalking.oap.server.core.CoreModule;\n+import org.apache.skywalking.oap.server.core.analysis.StreamAnnotationListener;\n+import org.apache.skywalking.oap.server.core.source.SourceReceiver;\n+import org.apache.skywalking.oap.server.library.module.ModuleManager;\n+import org.apache.skywalking.oap.server.library.module.ModuleProvider;\n+import org.apache.skywalking.oap.server.library.module.ModuleStartException;\n+import org.apache.skywalking.oap.server.library.module.Service;\n+\n+/**\n+ * Activate {@link OALEngine} according to {@link OALDefine}\n+ */\n+@Slf4j\n+@RequiredArgsConstructor\n+public class OALEngineLoaderService implements Service {\n+\n+    private final Set<OALDefine> oalDefineSet = new HashSet<>();\n+    private final ModuleManager moduleManager;\n+\n+    /**\n+     * Normally it is invoked in the {@link ModuleProvider#start()} of the receiver-plugin module.\n+     */\n+    public void load(OALDefine define) throws ModuleStartException {\n+        if (oalDefineSet.contains(define)) {", "originalCommit": "f05f007ef66281409ba71930b1321d38464f36b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNjIyNg==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421916226", "bodyText": "Default, hash* uses the object ID, so, this only works for the same object, rather than the same OAL.\nThis should be fixed.\nBTW, I am considering to enhance this later, merging the content rather than the file only. But this is totally another story.", "author": "wu-sheng", "createdAt": "2020-05-08T03:28:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNTI2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkyOTM5Nw==", "url": "https://github.com/apache/skywalking/pull/4748#discussion_r421929397", "bodyText": "Done.", "author": "arugal", "createdAt": "2020-05-08T04:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNTI2MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "997d40afb2f81e7fd9d323cc9fe0cebe77bfd39a", "url": "https://github.com/apache/skywalking/commit/997d40afb2f81e7fd9d323cc9fe0cebe77bfd39a", "message": "fix", "committedDate": "2020-05-08T04:22:10Z", "type": "commit"}, {"oid": "ffbb19e48f1e6c7d60c7711852b80cfee3459d68", "url": "https://github.com/apache/skywalking/commit/ffbb19e48f1e6c7d60c7711852b80cfee3459d68", "message": "Merge remote-tracking branch 'origin/patch1' into patch1", "committedDate": "2020-05-08T04:22:29Z", "type": "commit"}, {"oid": "a64f7d53ae8d2d9c9baacfa0defce1ea22c7beb3", "url": "https://github.com/apache/skywalking/commit/a64f7d53ae8d2d9c9baacfa0defce1ea22c7beb3", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-08T13:30:49Z", "type": "commit"}, {"oid": "3533eb254207147be78a59df96f7895854e0c13e", "url": "https://github.com/apache/skywalking/commit/3533eb254207147be78a59df96f7895854e0c13e", "message": "rollback code", "committedDate": "2020-05-08T13:36:04Z", "type": "commit"}, {"oid": "f542b24dbff64ac92814a5a19c7138fd6389b6a5", "url": "https://github.com/apache/skywalking/commit/f542b24dbff64ac92814a5a19c7138fd6389b6a5", "message": "Merge branch 'master' into patch1", "committedDate": "2020-05-08T14:57:02Z", "type": "commit"}]}