{"pr_number": 4335, "pr_title": "Provide profile analyze query", "pr_createdAt": "2020-02-09T11:17:46Z", "pr_url": "https://github.com/apache/skywalking/pull/4335", "timeline": [{"oid": "aeaa6ab9b512ab737241ed0420336762ce7dfdd5", "url": "https://github.com/apache/skywalking/commit/aeaa6ab9b512ab737241ed0420336762ce7dfdd5", "message": "provide profile analyze query", "committedDate": "2020-02-09T11:15:08Z", "type": "commit"}, {"oid": "dca31eea7a3e292f5041967c8eee20140ad3698b", "url": "https://github.com/apache/skywalking/commit/dca31eea7a3e292f5041967c8eee20140ad3698b", "message": "adding profile analyzation data query log", "committedDate": "2020-02-09T11:33:12Z", "type": "commit"}, {"oid": "9dbabfacc6075d00e58497de3db1ca7d19515a4e", "url": "https://github.com/apache/skywalking/commit/9dbabfacc6075d00e58497de3db1ca7d19515a4e", "message": "replace some java code line number to not null, adapt multiple java version", "committedDate": "2020-02-09T11:58:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc4MDcxMw==", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r376780713", "bodyText": "From your codes, count is pageSize.", "author": "wu-sheng", "createdAt": "2020-02-09T12:42:40Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java", "diffHunk": "@@ -38,4 +38,17 @@\n      */\n     List<BasicTrace> queryProfiledSegments(String taskId) throws IOException;\n \n+    /**\n+     * search snapshots with paging\n+     * sort by sequence\n+     * @param segmentId profiled segment id\n+     * @param start start dump time\n+     * @param end end dump time\n+     * @param minSequence search sequence start number\n+     * @param count page count\n+     * @return snapshots\n+     * @throws IOException\n+     */\n+    List<ProfileThreadSnapshotRecord> queryRecordsWithPaging(String segmentId, long start, long end, int minSequence, int count) throws IOException;", "originalCommit": "9dbabfacc6075d00e58497de3db1ca7d19515a4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "232832a1252e55003998ddf6d934d9e55b2a7723", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java\nindex 8777eb8a99..39728aefce 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/profile/IProfileThreadSnapshotQueryDAO.java\n\n@@ -45,10 +45,10 @@ public interface IProfileThreadSnapshotQueryDAO extends DAO {\n      * @param start start dump time\n      * @param end end dump time\n      * @param minSequence search sequence start number\n-     * @param count page count\n+     * @param pageSize page size\n      * @return snapshots\n      * @throws IOException\n      */\n-    List<ProfileThreadSnapshotRecord> queryRecordsWithPaging(String segmentId, long start, long end, int minSequence, int count) throws IOException;\n+    List<ProfileThreadSnapshotRecord> queryRecordsWithPaging(String segmentId, long start, long end, int minSequence, int pageSize) throws IOException;\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc4MDc1Mw==", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r376780753", "bodyText": "This should be open in the core configuration.", "author": "wu-sheng", "createdAt": "2020-02-09T12:43:13Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -34,12 +39,45 @@\n \n     private static final ProfileAnalyzeCollector ANALYZE_COLLECTOR = new ProfileAnalyzeCollector();\n \n+    private static final int THREAD_SNAPSHOT_ANALYZE_BATCH_SIZE = 100;", "originalCommit": "9dbabfacc6075d00e58497de3db1ca7d19515a4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6ae85dcf7beaf45ffa03c2892d11a1a7ba48964", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\nindex 80e178b0a1..2666965632 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n\n@@ -39,13 +39,14 @@ public class ProfileAnalyzer {\n \n     private static final ProfileAnalyzeCollector ANALYZE_COLLECTOR = new ProfileAnalyzeCollector();\n \n-    private static final int THREAD_SNAPSHOT_ANALYZE_BATCH_SIZE = 100;\n+    private final int threadSnapshotAnalyzeBatchSize;\n \n     private final ModuleManager moduleManager;\n     private IProfileThreadSnapshotQueryDAO profileThreadSnapshotQueryDAO;\n \n-    public ProfileAnalyzer(ModuleManager moduleManager) {\n+    public ProfileAnalyzer(ModuleManager moduleManager, int snapshotAnalyzeBatchSize) {\n         this.moduleManager = moduleManager;\n+        this.threadSnapshotAnalyzeBatchSize = snapshotAnalyzeBatchSize;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc4MDc4NA==", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r376780784", "bodyText": "200 or 6200?", "author": "wu-sheng", "createdAt": "2020-02-09T12:43:43Z", "path": "test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java", "diffHunk": "@@ -45,8 +45,8 @@ public User createAuthor(@RequestBody final CreateUser createUser) throws Interr\n         if (!createUser.getEnableProfiling()) {\n             return user;\n         } else {\n-            // sleep 10 second\n-            TimeUnit.SECONDS.sleep(10);\n+            // sleep 200 milliseconds\n+            TimeUnit.MILLISECONDS.sleep(6200);", "originalCommit": "9dbabfacc6075d00e58497de3db1ca7d19515a4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "232832a1252e55003998ddf6d934d9e55b2a7723", "chunk": "diff --git a/test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java b/test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java\nindex 05ae23c88d..d05fae9a8a 100644\n--- a/test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java\n+++ b/test/e2e/e2e-profile/e2e-profile-service/src/main/java/org/apache/skywalking/e2e/profile/TestController.java\n\n@@ -45,7 +45,7 @@ public class TestController {\n         if (!createUser.getEnableProfiling()) {\n             return user;\n         } else {\n-            // sleep 200 milliseconds\n+            // sleep 6200 milliseconds\n             TimeUnit.MILLISECONDS.sleep(6200);\n             return user;\n         }\n"}}, {"oid": "232832a1252e55003998ddf6d934d9e55b2a7723", "url": "https://github.com/apache/skywalking/commit/232832a1252e55003998ddf6d934d9e55b2a7723", "message": "change naming", "committedDate": "2020-02-09T12:57:50Z", "type": "commit"}, {"oid": "d6ae85dcf7beaf45ffa03c2892d11a1a7ba48964", "url": "https://github.com/apache/skywalking/commit/d6ae85dcf7beaf45ffa03c2892d11a1a7ba48964", "message": "make analyze profile snapshot paging size configurable", "committedDate": "2020-02-09T13:02:19Z", "type": "commit"}, {"oid": "d8741807e915071757dbad3e2a5ea99049a873e1", "url": "https://github.com/apache/skywalking/commit/d8741807e915071757dbad3e2a5ea99049a873e1", "message": "fix Compilation failure", "committedDate": "2020-02-09T13:09:46Z", "type": "commit"}, {"oid": "564c1c5b0aada963dc790c9221e84035af9fc7a4", "url": "https://github.com/apache/skywalking/commit/564c1c5b0aada963dc790c9221e84035af9fc7a4", "message": "change mysql download url", "committedDate": "2020-02-09T13:18:51Z", "type": "commit"}, {"oid": "01b02586ed52c1ed6d3fe2180a721591dd587c58", "url": "https://github.com/apache/skywalking/commit/01b02586ed52c1ed6d3fe2180a721591dd587c58", "message": "fix mysql error", "committedDate": "2020-02-09T13:37:31Z", "type": "commit"}, {"oid": "d66a0cc659773a4347865ca86a65484db2428506", "url": "https://github.com/apache/skywalking/commit/d66a0cc659773a4347865ca86a65484db2428506", "message": "change mysql url", "committedDate": "2020-02-09T14:17:38Z", "type": "commit"}, {"oid": "52e701564686a4dea1dd7376ecc49655345e1b4b", "url": "https://github.com/apache/skywalking/commit/52e701564686a4dea1dd7376ecc49655345e1b4b", "message": "change download mysql driver url", "committedDate": "2020-02-09T14:31:24Z", "type": "commit"}, {"oid": "5ae5a5a79c6cc640e5c58b1db7ca186786d6d205", "url": "https://github.com/apache/skywalking/commit/5ae5a5a79c6cc640e5c58b1db7ca186786d6d205", "message": "Update rc0-prepare.sh", "committedDate": "2020-02-09T16:02:29Z", "type": "commit"}, {"oid": "c377ede766839e41ee580a674a683c29640e54de", "url": "https://github.com/apache/skywalking/commit/c377ede766839e41ee580a674a683c29640e54de", "message": "adding logs", "committedDate": "2020-02-10T01:07:12Z", "type": "commit"}, {"oid": "3413acaf8506a058d5502f14a4dfd5d69dac43ef", "url": "https://github.com/apache/skywalking/commit/3413acaf8506a058d5502f14a4dfd5d69dac43ef", "message": "adding sleep on query service failed", "committedDate": "2020-02-10T01:08:27Z", "type": "commit"}, {"oid": "31f4b6ee963bdd42a29e79ae97f610721bb57679", "url": "https://github.com/apache/skywalking/commit/31f4b6ee963bdd42a29e79ae97f610721bb57679", "message": "change service verify type", "committedDate": "2020-02-10T01:57:17Z", "type": "commit"}, {"oid": "b30c8476b4498feba0a3cee7d9238fab073ebf42", "url": "https://github.com/apache/skywalking/commit/b30c8476b4498feba0a3cee7d9238fab073ebf42", "message": "fix es searching index error", "committedDate": "2020-02-10T02:25:53Z", "type": "commit"}, {"oid": "886a07afe20920172812a441bd35991145c41d79", "url": "https://github.com/apache/skywalking/commit/886a07afe20920172812a441bd35991145c41d79", "message": "1. resole es query error\n2. change mysql e2e test download driver url", "committedDate": "2020-02-10T02:55:11Z", "type": "commit"}, {"oid": "e02fa57b6ecb9715062574547d8cef1419a85daa", "url": "https://github.com/apache/skywalking/commit/e02fa57b6ecb9715062574547d8cef1419a85daa", "message": "using parallel stream to query snapshots", "committedDate": "2020-02-10T13:03:43Z", "type": "commit"}, {"oid": "0594ec1846c3cbe8edb75c04b6eaeda8d881db45", "url": "https://github.com/apache/skywalking/commit/0594ec1846c3cbe8edb75c04b6eaeda8d881db45", "message": "Merge branch 'master' into profile_analyze_query", "committedDate": "2020-02-10T13:05:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MTI0Nw==", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r377051247", "bodyText": "Out of snapshot analyze limit,  xxx snapshots found, but analysis first yyy snapshots only.", "author": "wu-sheng", "createdAt": "2020-02-10T13:08:45Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -32,14 +39,90 @@\n  */\n public class ProfileAnalyzer {\n \n+    private static final Logger LOGGER = LoggerFactory.getLogger(ProfileAnalyzer.class);\n+\n     private static final ProfileAnalyzeCollector ANALYZE_COLLECTOR = new ProfileAnalyzeCollector();\n \n+    private final int threadSnapshotAnalyzeBatchSize;\n+    private final int analyzeSnapshotMaxSize;\n+\n+    private final ModuleManager moduleManager;\n+    private IProfileThreadSnapshotQueryDAO profileThreadSnapshotQueryDAO;\n+\n+    public ProfileAnalyzer(ModuleManager moduleManager, int snapshotAnalyzeBatchSize, int analyzeSnapshotMaxSize) {\n+        this.moduleManager = moduleManager;\n+        this.threadSnapshotAnalyzeBatchSize = snapshotAnalyzeBatchSize;\n+        this.analyzeSnapshotMaxSize = analyzeSnapshotMaxSize;\n+    }\n+\n+    /**\n+     * search snapshots and analyze\n+     * @param segmentId\n+     * @param start\n+     * @param end\n+     * @return\n+     */\n+    public ProfileAnalyzation analyze(String segmentId, long start, long end) throws IOException {\n+        ProfileAnalyzation analyzation = new ProfileAnalyzation();\n+\n+        // query sequence range list\n+        SequenceSearch sequenceSearch = getAllSequenceRange(segmentId, start, end);\n+        if (sequenceSearch == null) {\n+            analyzation.setTip(\"Data not found\");\n+            return analyzation;\n+        }\n+        if (sequenceSearch.totalSequenceCount > analyzeSnapshotMaxSize) {\n+            analyzation.setTip(\"Out of snapshot analyze limit, current size:\" + sequenceSearch.totalSequenceCount + \", only analyze snapshot count: \" + analyzeSnapshotMaxSize);", "originalCommit": "0594ec1846c3cbe8edb75c04b6eaeda8d881db45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c911c3be7c6de31d37d1bb72526fc28d04cc36f", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\nindex ca586325a5..c878626620 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n\n@@ -72,13 +72,13 @@ public class ProfileAnalyzer {\n             return analyzation;\n         }\n         if (sequenceSearch.totalSequenceCount > analyzeSnapshotMaxSize) {\n-            analyzation.setTip(\"Out of snapshot analyze limit, current size:\" + sequenceSearch.totalSequenceCount + \", only analyze snapshot count: \" + analyzeSnapshotMaxSize);\n+            analyzation.setTip(\"Out of snapshot analyze limit, \" + sequenceSearch.totalSequenceCount + \" snapshots found, but analysis first \" + analyzeSnapshotMaxSize + \" snapshots only.\");\n         }\n \n         // query snapshots\n-        List<ProfileStack> stacks = sequenceSearch.ranges.parallelStream().map(r -> {\n+        List<ProfileStack> stacks = sequenceSearch.getRanges().parallelStream().map(r -> {\n             try {\n-                return getProfileThreadSnapshotQueryDAO().queryRecords(segmentId, r.minSequence, r.maxSequence);\n+                return getProfileThreadSnapshotQueryDAO().queryRecords(segmentId, r.getMinSequence(), r.getMaxSequence());\n             } catch (IOException e) {\n                 LOGGER.warn(e.getMessage(), e);\n                 return Collections.<ProfileThreadSnapshotRecord>emptyList();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MjkzNw==", "url": "https://github.com/apache/skywalking/pull/4335#discussion_r377052937", "bodyText": "Even for an inner class, please use set/get, rather than accessing fields directly.", "author": "wu-sheng", "createdAt": "2020-02-10T13:12:22Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -50,9 +133,28 @@ public static ProfileAnalyzation analyze(List<ProfileStack> stacks) {\n                 .filter(s -> CollectionUtils.isNotEmpty(s.getStack()))\n                 .collect(Collectors.groupingBy(s -> s.getStack().get(0), ANALYZE_COLLECTOR));\n \n-        ProfileAnalyzation analyzer = new ProfileAnalyzation();\n-        analyzer.setTrees(new ArrayList<>(stackTrees.values()));\n-        return analyzer;\n+        return new ArrayList<>(stackTrees.values());\n     }\n \n+    private IProfileThreadSnapshotQueryDAO getProfileThreadSnapshotQueryDAO() {\n+        if (profileThreadSnapshotQueryDAO == null) {\n+            profileThreadSnapshotQueryDAO = moduleManager.find(StorageModule.NAME).provider().getService(IProfileThreadSnapshotQueryDAO.class);\n+        }\n+        return profileThreadSnapshotQueryDAO;\n+    }\n+\n+    private static class SequenceSearch {\n+        LinkedList<SequenceRange> ranges = new LinkedList<>();\n+        int totalSequenceCount;\n+    }\n+\n+    private static class SequenceRange {", "originalCommit": "0594ec1846c3cbe8edb75c04b6eaeda8d881db45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c911c3be7c6de31d37d1bb72526fc28d04cc36f", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\nindex ca586325a5..c878626620 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n\n@@ -144,17 +143,41 @@ public class ProfileAnalyzer {\n     }\n \n     private static class SequenceSearch {\n-        LinkedList<SequenceRange> ranges = new LinkedList<>();\n-        int totalSequenceCount;\n+        private LinkedList<SequenceRange> ranges = new LinkedList<>();\n+        private int totalSequenceCount;\n+\n+        public SequenceSearch(int totalSequenceCount) {\n+            this.totalSequenceCount = totalSequenceCount;\n+        }\n+\n+        public LinkedList<SequenceRange> getRanges() {\n+            return ranges;\n+        }\n+\n+        public int getTotalSequenceCount() {\n+            return totalSequenceCount;\n+        }\n     }\n \n     private static class SequenceRange {\n-        int minSequence;\n-        int maxSequence;\n+        private int minSequence;\n+        private int maxSequence;\n \n         public SequenceRange(int minSequence, int maxSequence) {\n             this.minSequence = minSequence;\n             this.maxSequence = maxSequence;\n         }\n+\n+        public int getMinSequence() {\n+            return minSequence;\n+        }\n+\n+        public int getMaxSequence() {\n+            return maxSequence;\n+        }\n+\n+        public void increaseMaxSequence() {\n+            this.maxSequence++;\n+        }\n     }\n }\n"}}, {"oid": "9c911c3be7c6de31d37d1bb72526fc28d04cc36f", "url": "https://github.com/apache/skywalking/commit/9c911c3be7c6de31d37d1bb72526fc28d04cc36f", "message": "1. using set/get on inner class\n2. fix tip", "committedDate": "2020-02-10T13:25:13Z", "type": "commit"}, {"oid": "aa5b2395922ab4bc87bed5bd5dfcd915bc307e9e", "url": "https://github.com/apache/skywalking/commit/aa5b2395922ab4bc87bed5bd5dfcd915bc307e9e", "message": "fix doc error", "committedDate": "2020-02-10T14:21:14Z", "type": "commit"}, {"oid": "307004c562066ca2fc114213e3b417e68deac1ba", "url": "https://github.com/apache/skywalking/commit/307004c562066ca2fc114213e3b417e68deac1ba", "message": "fix difference api of es7", "committedDate": "2020-02-10T22:47:39Z", "type": "commit"}, {"oid": "d75d970607df6ffb172535d9784902773dbeb518", "url": "https://github.com/apache/skywalking/commit/d75d970607df6ffb172535d9784902773dbeb518", "message": "add es7 doc", "committedDate": "2020-02-11T01:05:15Z", "type": "commit"}]}