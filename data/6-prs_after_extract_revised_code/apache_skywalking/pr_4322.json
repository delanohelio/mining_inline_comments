{"pr_number": 4322, "pr_title": "provide profiled segment list query", "pr_createdAt": "2020-02-05T09:34:28Z", "pr_url": "https://github.com/apache/skywalking/pull/4322", "timeline": [{"oid": "d0520fade8714ffdcc7e76c144854d0756b7e085", "url": "https://github.com/apache/skywalking/commit/d0520fade8714ffdcc7e76c144854d0756b7e085", "message": "provide profiled segment query", "committedDate": "2020-02-05T09:28:36Z", "type": "commit"}, {"oid": "d0fb5b3c2977fbdf1d3790757795ec6d6649ab2a", "url": "https://github.com/apache/skywalking/commit/d0fb5b3c2977fbdf1d3790757795ec6d6649ab2a", "message": "Merge branch 'master' into profile_query", "committedDate": "2020-02-05T09:34:37Z", "type": "commit"}, {"oid": "f290673e72724501095e550ed004646402e3b484", "url": "https://github.com/apache/skywalking/commit/f290673e72724501095e550ed004646402e3b484", "message": "Merge branch 'master' into profile_query", "committedDate": "2020-02-05T12:36:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzMTAyMA==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375231020", "bodyText": "As using incrementAndGet, <= should be <?", "author": "wu-sheng", "createdAt": "2020-02-05T12:38:35Z", "path": "apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/profile/ProfileTaskExecutionContext.java", "diffHunk": "@@ -150,7 +150,7 @@ public ProfileTask getTask() {\n \n     public boolean isStartProfileable() {\n         // check is out of max sampling count check\n-        return totalStartedProfilingCount.incrementAndGet() > task.getMaxSamplingCount();\n+        return totalStartedProfilingCount.incrementAndGet() <= task.getMaxSamplingCount();", "originalCommit": "f290673e72724501095e550ed004646402e3b484", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0NTk2MQ==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375245961", "bodyText": "If maxSamplingCount is 2, and totalStartedProfilingCount start with 0.\nUse < to decide isStartProfileable, the second time to incrementAndGet will return false. That's not right.", "author": "mrproliu", "createdAt": "2020-02-05T13:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzMTAyMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzMzkzMA==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375233930", "bodyText": "Refer to the specific commit id, such as https://github.com/apache/skywalking/tree/421ba88dbfba48cdc5845547381aa4763775b4b1/docs/...\nBecause we don't know whether the doc exists in the master branch.", "author": "wu-sheng", "createdAt": "2020-02-05T12:45:22Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java", "diffHunk": "@@ -28,7 +28,7 @@\n /**\n  * Analyze {@link ProfileStack} data to {@link ProfileAnalyzation}\n  *\n- * See: https://github.com/apache/skywalking/blob/docs/en/guides/backend-profile.md#thread-analyst\n+ * See:  https://github.com/apache/skywalking/blob/master/docs/en/guides/backend-profile.md#thread-analyst", "originalCommit": "f290673e72724501095e550ed004646402e3b484", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b9cfe4cca0e6250f40dcc0ca0a789c231a3c298", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\nindex 3920f8327a..72857f8577 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/profile/analyze/ProfileAnalyzer.java\n\n@@ -28,7 +28,7 @@ import java.util.stream.Collectors;\n /**\n  * Analyze {@link ProfileStack} data to {@link ProfileAnalyzation}\n  *\n- * See:  https://github.com/apache/skywalking/blob/master/docs/en/guides/backend-profile.md#thread-analyst\n+ * See: https://github.com/apache/skywalking/blob/421ba88dbfba48cdc5845547381aa4763775b4b1/docs/en/guides/backend-profile.md#thread-analyst\n  */\n public class ProfileAnalyzer {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIzNjk3MA==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375236970", "bodyText": "I think it is better to use queryProfiledSegments(String taskId) to replace this method and IProfileThreadSnapshotQueryDAO interface. There seems meaningless to add a new interface.", "author": "wu-sheng", "createdAt": "2020-02-05T12:52:33Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java", "diffHunk": "@@ -42,4 +42,12 @@ TraceBrief queryBasicTraces(long startSecondTB, long endSecondTB, long minDurati\n      * @throws IOException\n      */\n     List<Span> doFlexibleTraceQuery(String traceId) throws IOException;\n+\n+    /**\n+     * query trace basic info list from appoint segments\n+     * @param segmentIdList\n+     * @return\n+     * @throws IOException\n+     */\n+    List<BasicTrace> queryBySegmentIdList(List<String> segmentIdList) throws IOException;", "originalCommit": "f290673e72724501095e550ed004646402e3b484", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d87571c59afaa4f0a8f32513070d84df9071f062", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java\nindex 48321f1479..6517d2f8bc 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java\n\n@@ -42,12 +42,4 @@ public interface ITraceQueryDAO extends Service {\n      * @throws IOException\n      */\n     List<Span> doFlexibleTraceQuery(String traceId) throws IOException;\n-\n-    /**\n-     * query trace basic info list from appoint segments\n-     * @param segmentIdList\n-     * @return\n-     * @throws IOException\n-     */\n-    List<BasicTrace> queryBySegmentIdList(List<String> segmentIdList) throws IOException;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0MDA4MQ==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375240081", "bodyText": "return value should be clear, it represents the segments having profile snapshot data.", "author": "wu-sheng", "createdAt": "2020-02-05T12:59:29Z", "path": "oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java", "diffHunk": "@@ -42,4 +42,12 @@ TraceBrief queryBasicTraces(long startSecondTB, long endSecondTB, long minDurati\n      * @throws IOException\n      */\n     List<Span> doFlexibleTraceQuery(String traceId) throws IOException;\n+\n+    /**\n+     * query trace basic info list from appoint segments\n+     * @param segmentIdList\n+     * @return", "originalCommit": "f290673e72724501095e550ed004646402e3b484", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d87571c59afaa4f0a8f32513070d84df9071f062", "chunk": "diff --git a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java\nindex 48321f1479..6517d2f8bc 100644\n--- a/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java\n+++ b/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/storage/query/ITraceQueryDAO.java\n\n@@ -42,12 +42,4 @@ public interface ITraceQueryDAO extends Service {\n      * @throws IOException\n      */\n     List<Span> doFlexibleTraceQuery(String traceId) throws IOException;\n-\n-    /**\n-     * query trace basic info list from appoint segments\n-     * @param segmentIdList\n-     * @return\n-     * @throws IOException\n-     */\n-    List<BasicTrace> queryBySegmentIdList(List<String> segmentIdList) throws IOException;\n }\n"}}, {"oid": "4b9cfe4cca0e6250f40dcc0ca0a789c231a3c298", "url": "https://github.com/apache/skywalking/commit/4b9cfe4cca0e6250f40dcc0ca0a789c231a3c298", "message": "change doc reference", "committedDate": "2020-02-05T13:15:39Z", "type": "commit"}, {"oid": "d87571c59afaa4f0a8f32513070d84df9071f062", "url": "https://github.com/apache/skywalking/commit/d87571c59afaa4f0a8f32513070d84df9071f062", "message": "combine query profiled segment to single method", "committedDate": "2020-02-05T13:50:36Z", "type": "commit"}, {"oid": "563ff6fe52f6cbbfbe875b673fb11aa016eeb338", "url": "https://github.com/apache/skywalking/commit/563ff6fe52f6cbbfbe875b673fb11aa016eeb338", "message": "fix query error", "committedDate": "2020-02-05T14:54:50Z", "type": "commit"}, {"oid": "db2809d2873ed24519485107bc980b6af9c67e20", "url": "https://github.com/apache/skywalking/commit/db2809d2873ed24519485107bc980b6af9c67e20", "message": "remove trace dao reference", "committedDate": "2020-02-05T15:21:45Z", "type": "commit"}, {"oid": "b18fb1a36cbecaeab9340216d4dd41ee955200a7", "url": "https://github.com/apache/skywalking/commit/b18fb1a36cbecaeab9340216d4dd41ee955200a7", "message": "add empty oal script to profile e2e test", "committedDate": "2020-02-06T01:29:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNzYyNw==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375627627", "bodyText": "What is the difference? Please remove the useless one.", "author": "wu-sheng", "createdAt": "2020-02-06T03:44:29Z", "path": "test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java", "diffHunk": "@@ -78,8 +75,8 @@ public void setUp() {\n         //        final String swWebappPort = System.getProperty(\"sw.webapp.port\", \"32783\");\n         final String swWebappPort = System.getProperty(\"sw.webapp.port\", \"12800\");\n         final String instrumentedServiceHost = System.getProperty(\"service.host\", \"127.0.0.1\");\n-        final String instrumentedServicePort = System.getProperty(\"service.port\", \"32782\");\n-        //        final String instrumentedServicePort = System.getProperty(\"service.port\", \"9090\");\n+//        final String instrumentedServicePort = System.getProperty(\"service.port\", \"32782\");\n+        final String instrumentedServicePort = System.getProperty(\"service.port\", \"9090\");", "originalCommit": "b18fb1a36cbecaeab9340216d4dd41ee955200a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc617998b9352ca5c4155b9e150fdf4c51853591", "chunk": "diff --git a/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java b/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java\nindex b4155ad70d..25b05dfc88 100644\n--- a/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java\n+++ b/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java\n\n@@ -72,10 +76,8 @@ public class ProfileVerificationITCase {\n     @Before\n     public void setUp() {\n         final String swWebappHost = System.getProperty(\"sw.webapp.host\", \"127.0.0.1\");\n-        //        final String swWebappPort = System.getProperty(\"sw.webapp.port\", \"32783\");\n         final String swWebappPort = System.getProperty(\"sw.webapp.port\", \"12800\");\n         final String instrumentedServiceHost = System.getProperty(\"service.host\", \"127.0.0.1\");\n-//        final String instrumentedServicePort = System.getProperty(\"service.port\", \"32782\");\n         final String instrumentedServicePort = System.getProperty(\"service.port\", \"9090\");\n         profileClient = new ProfileClient(swWebappHost, swWebappPort);\n         instrumentedServiceUrl = \"http://\" + instrumentedServiceHost + \":\" + instrumentedServicePort;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyODA0NA==", "url": "https://github.com/apache/skywalking/pull/4322#discussion_r375628044", "bodyText": "You should still send traffic and verify service/instance/endpoint, just no metrics of service/instance/endpoint. If no traffic, then there is no trace to be profiled.", "author": "wu-sheng", "createdAt": "2020-02-06T03:46:42Z", "path": "test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java", "diffHunk": "@@ -89,28 +86,6 @@ public void setUp() {\n     public void verify() throws Exception {\n         final LocalDateTime minutesAgo = LocalDateTime.now(ZoneOffset.UTC);\n \n-        while (true) {\n-            try {\n-                final ResponseEntity<String> responseEntity = sendRequest(false);\n-                LOGGER.info(\"responseEntity: {}\", responseEntity);\n-                assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.OK);\n-                final List<Trace> traces = profileClient.traces(\n-                        new TracesQuery()\n-                                .start(minutesAgo)\n-                                .end(LocalDateTime.now())\n-                                .orderByDuration()\n-                );\n-                if (!traces.isEmpty()) {\n-                    break;\n-                }\n-                Thread.sleep(10000L);\n-            } catch (Exception ignored) {\n-            }\n-        }\n-\n-        // verify basic info\n-        verifyServices(minutesAgo);", "originalCommit": "b18fb1a36cbecaeab9340216d4dd41ee955200a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc617998b9352ca5c4155b9e150fdf4c51853591", "chunk": "diff --git a/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java b/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java\nindex b4155ad70d..25b05dfc88 100644\n--- a/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java\n+++ b/test/e2e/e2e-profile/e2e-profile-test-runner/src/test/java/org/apache/skywalking/e2e/ProfileVerificationITCase.java\n\n@@ -86,6 +88,37 @@ public class ProfileVerificationITCase {\n     public void verify() throws Exception {\n         final LocalDateTime minutesAgo = LocalDateTime.now(ZoneOffset.UTC);\n \n+        while (true) {\n+            try {\n+                final ResponseEntity<String> responseEntity = sendRequest(false);\n+                LOGGER.info(\"responseEntity: {}\", responseEntity);\n+                assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.OK);\n+                final List<Trace> traces = profileClient.traces(\n+                        new TracesQuery()\n+                                .start(minutesAgo)\n+                                .end(LocalDateTime.now())\n+                                .orderByDuration()\n+                );\n+                if (!traces.isEmpty()) {\n+                    break;\n+                }\n+                Thread.sleep(10000L);\n+            } catch (Exception ignored) {\n+            }\n+        }\n+\n+        // verify basic info\n+        int verifyServiceCount = 3;\n+        for (int i = 1; i <= verifyServiceCount; i++) {\n+            try {\n+                verifyServices(minutesAgo);\n+            } catch (Exception e) {\n+                if (i == verifyServiceCount) {\n+                    throw new IllegalStateException(\"match services fail!\", e);\n+                }\n+            }\n+        }\n+\n         // create profile task\n         verifyCreateProfileTask(minutesAgo);\n \n"}}, {"oid": "fc617998b9352ca5c4155b9e150fdf4c51853591", "url": "https://github.com/apache/skywalking/commit/fc617998b9352ca5c4155b9e150fdf4c51853591", "message": "recover verify services", "committedDate": "2020-02-06T04:32:48Z", "type": "commit"}, {"oid": "82a43fad7c7d89735db26572b9fd858b563ed08e", "url": "https://github.com/apache/skywalking/commit/82a43fad7c7d89735db26572b9fd858b563ed08e", "message": "fix doc error", "committedDate": "2020-02-06T07:56:45Z", "type": "commit"}, {"oid": "c3f31d29a35f5f99757290702ec8ae053b633438", "url": "https://github.com/apache/skywalking/commit/c3f31d29a35f5f99757290702ec8ae053b633438", "message": "Merge branch 'master' into profile_query", "committedDate": "2020-02-06T09:28:53Z", "type": "commit"}, {"oid": "73eda494b13b284d8c4f6bace2661c1a03b702dd", "url": "https://github.com/apache/skywalking/commit/73eda494b13b284d8c4f6bace2661c1a03b702dd", "message": "fix missing provider", "committedDate": "2020-02-06T10:07:01Z", "type": "commit"}, {"oid": "b556f8e94029c0dc15fb8c2026370f2ed4bea30a", "url": "https://github.com/apache/skywalking/commit/b556f8e94029c0dc15fb8c2026370f2ed4bea30a", "message": "fix e2e test", "committedDate": "2020-02-06T11:38:41Z", "type": "commit"}]}