{"pr_number": 5270, "pr_title": "[IMPORTANT] Query traces with tags as condition", "pr_createdAt": "2020-08-08T14:20:21Z", "pr_url": "https://github.com/apache/skywalking/pull/5270", "timeline": [{"oid": "d9d781ce267cf3f62cf55517fffbb9f174b0b70e", "url": "https://github.com/apache/skywalking/commit/d9d781ce267cf3f62cf55517fffbb9f174b0b70e", "message": "Support tag-based query in ES 6/7", "committedDate": "2020-08-07T10:03:43Z", "type": "commit"}, {"oid": "f2e3961ab987fdaeb4c272aeb14a5e3d117c153e", "url": "https://github.com/apache/skywalking/commit/f2e3961ab987fdaeb4c272aeb14a5e3d117c153e", "message": "Try to support H2/MySQL case for tags.", "committedDate": "2020-08-07T16:06:44Z", "type": "commit"}, {"oid": "20e27ee90d4e3a7bdeeb37c9ccda22bef17da877", "url": "https://github.com/apache/skywalking/commit/20e27ee90d4e3a7bdeeb37c9ccda22bef17da877", "message": "Support trace query by using tag as conditions.", "committedDate": "2020-08-08T14:14:22Z", "type": "commit"}, {"oid": "f24e6a0ef9ac38591ea2470bf72e48660ed3f876", "url": "https://github.com/apache/skywalking/commit/f24e6a0ef9ac38591ea2470bf72e48660ed3f876", "message": "Merge commit '9b6a4ed28ce957238851cb0a504ff8ad3c74e59b' into tag-query", "committedDate": "2020-08-08T14:14:53Z", "type": "commit"}, {"oid": "06c2620dbc0bb50ce4fabbe658ef194a6c520281", "url": "https://github.com/apache/skywalking/commit/06c2620dbc0bb50ce4fabbe658ef194a6c520281", "message": "Fix format.", "committedDate": "2020-08-08T14:20:43Z", "type": "commit"}, {"oid": "3bfe9dbff1989953e76f33744c5fba90998db150", "url": "https://github.com/apache/skywalking/commit/3bfe9dbff1989953e76f33744c5fba90998db150", "message": "Add checks for the new configurations, and make some extra available slots for new tags, but still will fail if the user doesn't notice the document, and reach the boundary.", "committedDate": "2020-08-08T15:13:07Z", "type": "commit"}, {"oid": "633150b3833ca116acc131f6c7caeb46c5b56d63", "url": "https://github.com/apache/skywalking/commit/633150b3833ca116acc131f6c7caeb46c5b56d63", "message": "Merge branch 'master' into tag-query", "committedDate": "2020-08-08T15:43:55Z", "type": "commit"}, {"oid": "e1c91c7764ac98ae3c55caf1677b84d2a517895f", "url": "https://github.com/apache/skywalking/commit/e1c91c7764ac98ae3c55caf1677b84d2a517895f", "message": "Merge branch 'master' into tag-query", "committedDate": "2020-08-09T08:45:23Z", "type": "commit"}, {"oid": "d41801b56e7daaee00416c67166fb2947d865391", "url": "https://github.com/apache/skywalking/commit/d41801b56e7daaee00416c67166fb2947d865391", "message": "influxdb implementation", "committedDate": "2020-08-09T18:26:00Z", "type": "commit"}, {"oid": "6f1f68daa40076e6f6e4025d01da33803aef4531", "url": "https://github.com/apache/skywalking/commit/6f1f68daa40076e6f6e4025d01da33803aef4531", "message": "Merge branch 'master' into tag-query", "committedDate": "2020-08-09T23:36:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0NjcwMA==", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467646700", "bodyText": "Tag keys could be duplicated as it is in the different spans, what will happen here?", "author": "wu-sheng", "createdAt": "2020-08-10T00:13:24Z", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java", "diffHunk": "@@ -68,6 +71,15 @@ public InfluxInsertRequest addFieldAsTag(String fieldName, String tagName) {\n         return this;\n     }\n \n+    public InfluxInsertRequest tags(List<SpanTag> tags) {\n+        if (!Objects.isNull(tags) && !tags.isEmpty()) {\n+            for (final SpanTag tag : tags) {\n+                builder.addField(tag.getKey(), tag.getValue());", "originalCommit": "d41801b56e7daaee00416c67166fb2947d865391", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9297ad3bbb71d12e13a02b1c98be05e3938ea6e5", "chunk": "diff --git a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java\nindex dab11f4bdc..a99abd0d8c 100644\n--- a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java\n+++ b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java\n\n@@ -80,6 +80,11 @@ public class InfluxInsertRequest implements InsertRequest, UpdateRequest {\n         return this;\n     }\n \n+    public InfluxInsertRequest tag(String key, String value) {\n+        builder.tag(key, value);\n+        return this;\n+    }\n+\n     public Point getPoint() {\n         return builder.build();\n     }\n"}}, {"oid": "9297ad3bbb71d12e13a02b1c98be05e3938ea6e5", "url": "https://github.com/apache/skywalking/commit/9297ad3bbb71d12e13a02b1c98be05e3938ea6e5", "message": "support multi-value", "committedDate": "2020-08-10T03:52:35Z", "type": "commit"}, {"oid": "35ee7bcce977ee08af72fdbac4e390dd68074496", "url": "https://github.com/apache/skywalking/commit/35ee7bcce977ee08af72fdbac4e390dd68074496", "message": "fix", "committedDate": "2020-08-10T04:15:28Z", "type": "commit"}, {"oid": "527ce68a27f9dcee3e225c45b4b7b37d6e2b78c1", "url": "https://github.com/apache/skywalking/commit/527ce68a27f9dcee3e225c45b4b7b37d6e2b78c1", "message": "fix", "committedDate": "2020-08-10T06:53:49Z", "type": "commit"}, {"oid": "d6c7c18a9b34f890495e5d2b7264ff28cd2840fe", "url": "https://github.com/apache/skywalking/commit/d6c7c18a9b34f890495e5d2b7264ff28cd2840fe", "message": "fix checkstyle", "committedDate": "2020-08-10T07:20:45Z", "type": "commit"}, {"oid": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8", "url": "https://github.com/apache/skywalking/commit/4b44bc4fa1bf55400579b5209c2308a8c05c06f8", "message": "fixg", "committedDate": "2020-08-10T07:59:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTc2Ng==", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467759766", "bodyText": "This should be replaced by CollectionUtil#isNotEmpty.", "author": "wu-sheng", "createdAt": "2020-08-10T08:36:07Z", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "diffHunk": "@@ -121,6 +125,13 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n+        if (Objects.nonNull(tags) && !tags.isEmpty()) {", "originalCommit": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d45ea29c2de43d4d4d25abfa993e7e28e707da4", "chunk": "diff --git a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java\nindex 76f025ca02..f01602b924 100644\n--- a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java\n+++ b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java\n\n@@ -125,10 +125,10 @@ public class TraceQuery implements ITraceQueryDAO {\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n-        if (Objects.nonNull(tags) && !tags.isEmpty()) {\n+        if (CollectionUtils.isNotEmpty(tags)) {\n             WhereNested<WhereQueryImpl<SelectQueryImpl>> nested = recallQuery.andNested();\n             for (final SpanTag tag : tags) {\n-                nested.or(contains(tag.getKey(), tag.getValue()));\n+                nested.and(contains(tag.getKey(), \"'\" + tag.getValue() + \"'\"));\n             }\n             nested.close();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTkwMQ==", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467759901", "bodyText": "This should be and. All tags in the conditions should be matched.", "author": "wu-sheng", "createdAt": "2020-08-10T08:36:26Z", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java", "diffHunk": "@@ -121,6 +125,13 @@ public TraceBrief queryBasicTraces(long startSecondTB,\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n+        if (Objects.nonNull(tags) && !tags.isEmpty()) {\n+            WhereNested<WhereQueryImpl<SelectQueryImpl>> nested = recallQuery.andNested();\n+            for (final SpanTag tag : tags) {\n+                nested.or(contains(tag.getKey(), tag.getValue()));", "originalCommit": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MDAwMA==", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467760000", "bodyText": "Where is the regex match you mentioned?", "author": "wu-sheng", "createdAt": "2020-08-10T08:36:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2Mjg4OA==", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467762888", "bodyText": "Oh, I see you just contains as existing, so could be a mismatch if there is one value includes another one's, such as 200 with 2000.", "author": "wu-sheng", "createdAt": "2020-08-10T08:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc1OTkwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8d45ea29c2de43d4d4d25abfa993e7e28e707da4", "chunk": "diff --git a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java\nindex 76f025ca02..f01602b924 100644\n--- a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java\n+++ b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/TraceQuery.java\n\n@@ -125,10 +125,10 @@ public class TraceQuery implements ITraceQueryDAO {\n                 recallQuery.and(eq(SegmentRecord.IS_ERROR, BooleanUtils.FALSE));\n                 break;\n         }\n-        if (Objects.nonNull(tags) && !tags.isEmpty()) {\n+        if (CollectionUtils.isNotEmpty(tags)) {\n             WhereNested<WhereQueryImpl<SelectQueryImpl>> nested = recallQuery.andNested();\n             for (final SpanTag tag : tags) {\n-                nested.or(contains(tag.getKey(), tag.getValue()));\n+                nested.and(contains(tag.getKey(), \"'\" + tag.getValue() + \"'\"));\n             }\n             nested.close();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MDQzNQ==", "url": "https://github.com/apache/skywalking/pull/5270#discussion_r467760435", "bodyText": "Local IDE shows, this method is useless.", "author": "wu-sheng", "createdAt": "2020-08-10T08:37:45Z", "path": "oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java", "diffHunk": "@@ -68,6 +71,20 @@ public InfluxInsertRequest addFieldAsTag(String fieldName, String tagName) {\n         return this;\n     }\n \n+    public InfluxInsertRequest tags(List<SpanTag> tags) {", "originalCommit": "4b44bc4fa1bf55400579b5209c2308a8c05c06f8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d45ea29c2de43d4d4d25abfa993e7e28e707da4", "chunk": "diff --git a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java\nindex a99abd0d8c..c510d2e810 100644\n--- a/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java\n+++ b/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/base/InfluxInsertRequest.java\n\n@@ -71,15 +72,6 @@ public class InfluxInsertRequest implements InsertRequest, UpdateRequest {\n         return this;\n     }\n \n-    public InfluxInsertRequest tags(List<SpanTag> tags) {\n-        if (!Objects.isNull(tags) && !tags.isEmpty()) {\n-            for (final SpanTag tag : tags) {\n-                builder.addField(tag.getKey(), tag.getValue());\n-            }\n-        }\n-        return this;\n-    }\n-\n     public InfluxInsertRequest tag(String key, String value) {\n         builder.tag(key, value);\n         return this;\n"}}, {"oid": "5f12e2f83d8d11ac8465331e40b6bf40c6ac8db7", "url": "https://github.com/apache/skywalking/commit/5f12e2f83d8d11ac8465331e40b6bf40c6ac8db7", "message": "fix", "committedDate": "2020-08-10T10:28:13Z", "type": "commit"}, {"oid": "8ebcdd38169c24a974d2c66028284a1d102c75e0", "url": "https://github.com/apache/skywalking/commit/8ebcdd38169c24a974d2c66028284a1d102c75e0", "message": "Merge branch 'master' into tag-query", "committedDate": "2020-08-10T13:07:49Z", "type": "commit"}, {"oid": "8d45ea29c2de43d4d4d25abfa993e7e28e707da4", "url": "https://github.com/apache/skywalking/commit/8d45ea29c2de43d4d4d25abfa993e7e28e707da4", "message": "following review", "committedDate": "2020-08-10T15:18:03Z", "type": "commit"}]}