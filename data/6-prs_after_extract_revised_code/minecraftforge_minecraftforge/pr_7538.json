{"pr_number": 7538, "pr_title": "Add a SoundType subclass that uses suppliers", "pr_createdAt": "2020-12-07T14:42:30Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538", "timeline": [{"oid": "b66bac512992ec9230e008f2f5f926eecbcd5fff", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/b66bac512992ec9230e008f2f5f926eecbcd5fff", "message": "Add a SoundType subclass that uses suppliers", "committedDate": "2020-12-07T13:45:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MjE3OQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537562179", "bodyText": "Might be worth throwing some java docs on this class that gives a brief summary of why this exists (given you wrote a very detailed thing for the PR explaining it you can probably just copy paste parts of that here)", "author": "pupnewfster", "createdAt": "2020-12-07T14:45:36Z", "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+public class ForgeSoundType extends SoundType", "originalCommit": "b66bac512992ec9230e008f2f5f926eecbcd5fff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3OTA2Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537579063", "bodyText": "Added a condensed/summarized version of the PR description as javadocs to the ForgeSoundType class. This should give modders more insight into why it exists.\n(I thought about linking this PR's URL in the @see section, but decided against it for now. If modders are curious, they could always git blame/search on GitHub to find the commit and this PR).", "author": "sciwhiz12", "createdAt": "2020-12-07T15:06:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MjE3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c2f5c836f632feccf09429fd4d624e473d1cff13", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java b/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java\nindex badf1f2fa..542b5b1ba 100644\n--- a/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java\n+++ b/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java\n\n@@ -19,12 +19,34 @@\n \n package net.minecraftforge.common.util;\n \n+import net.minecraft.block.Block;\n import net.minecraft.block.SoundType;\n import net.minecraft.util.SoundEvent;\n+import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.registries.DeferredRegister;\n \n import javax.annotation.Nonnull;\n import java.util.function.Supplier;\n \n+/**\n+ * A subclass of {@link SoundType} that uses {@link Supplier<SoundEvent>}s.\n+ * <p>\n+ * This class allows mod developers to safely create custom {@code SoundType}s for use in their e.g. {@link Block}.\n+ * <p>\n+ * The problem with using {@code SoundType} directly is it requires {@link SoundEvent} instances directly, because\n+ * {@code SoundType}s are required to be present during {@link Block} creation and registration. However,\n+ * {@code SoundEvent} must also be registered.\n+ * <p>\n+ * A possible solution of initializing {@code SoundEvent}s first would require static initialization of the\n+ * {@code SoundEvent} instances and later registration, which goes against the contract of the registry system and\n+ * prevents the use of {@link DeferredRegister} and {@link RegistryObject}s.\n+ * <p>\n+ * This class offers an alternative and preferable solution, by allowing mods to create {@link SoundType}s using\n+ * {@link Supplier}s of {@link SoundEvent}s instead, which do not require static initialization of {@code SoundEvent}s\n+ * and allow the direct use of {@code RegistryObject}s.\n+ *\n+ * @see SoundType\n+ */\n public class ForgeSoundType extends SoundType\n {\n     private final Supplier<SoundEvent> breakSound;\n"}}, {"oid": "c2f5c836f632feccf09429fd4d624e473d1cff13", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/c2f5c836f632feccf09429fd4d624e473d1cff13", "message": "Add javadoc to ForgeSoundType", "committedDate": "2020-12-07T15:03:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTE4Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r537709186", "bodyText": "I know this sounds dumb, but can you add (SoundEvent) casts to all these nulls?\nThe other option is writing some form of dev-time validation that this class has the same methods/constructors as the parent.\nThe idea is to make it a error if Mojang changes any of the argument types.\nThus notifying us that we need to update this class.", "author": "LexManos", "createdAt": "2020-12-07T17:55:39Z", "path": "src/main/java/net/minecraftforge/common/util/ForgeSoundType.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.util;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.SoundType;\n+import net.minecraft.util.SoundEvent;\n+import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.registries.DeferredRegister;\n+\n+import javax.annotation.Nonnull;\n+import java.util.function.Supplier;\n+\n+/**\n+ * A subclass of {@link SoundType} that uses {@link Supplier<SoundEvent>}s.\n+ * <p>\n+ * This class allows mod developers to safely create custom {@code SoundType}s for use in their e.g. {@link Block}.\n+ * <p>\n+ * The problem with using {@code SoundType} directly is it requires {@link SoundEvent} instances directly, because\n+ * {@code SoundType}s are required to be present during {@link Block} creation and registration. However,\n+ * {@code SoundEvent} must also be registered.\n+ * <p>\n+ * A possible solution of initializing {@code SoundEvent}s first would require static initialization of the\n+ * {@code SoundEvent} instances and later registration, which goes against the contract of the registry system and\n+ * prevents the use of {@link DeferredRegister} and {@link RegistryObject}s.\n+ * <p>\n+ * This class offers an alternative and preferable solution, by allowing mods to create {@link SoundType}s using\n+ * {@link Supplier}s of {@link SoundEvent}s instead, which do not require static initialization of {@code SoundEvent}s\n+ * and allow the direct use of {@code RegistryObject}s.\n+ *\n+ * @see SoundType\n+ */\n+public class ForgeSoundType extends SoundType\n+{\n+    private final Supplier<SoundEvent> breakSound;\n+    private final Supplier<SoundEvent> stepSound;\n+    private final Supplier<SoundEvent> placeSound;\n+    private final Supplier<SoundEvent> hitSound;\n+    private final Supplier<SoundEvent> fallSound;\n+\n+    public ForgeSoundType(float volumeIn, float pitchIn, Supplier<SoundEvent> breakSoundIn, Supplier<SoundEvent> stepSoundIn, Supplier<SoundEvent> placeSoundIn, Supplier<SoundEvent> hitSoundIn, Supplier<SoundEvent> fallSoundIn)\n+    {\n+        super(volumeIn, pitchIn, null, null, null, null, null);", "originalCommit": "c2f5c836f632feccf09429fd4d624e473d1cff13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNzA5Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7538#discussion_r538037093", "bodyText": "Adding casts like that does makes sense, once the idea behind it is known. I've added the casts to the nulls.", "author": "sciwhiz12", "createdAt": "2020-12-08T05:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwOTE4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1717d5904668fa2448e5ebb31ff8e50d9d33b528", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java b/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java\nindex 542b5b1ba..523ac3640 100644\n--- a/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java\n+++ b/src/main/java/net/minecraftforge/common/util/ForgeSoundType.java\n\n@@ -57,7 +57,7 @@ public class ForgeSoundType extends SoundType\n \n     public ForgeSoundType(float volumeIn, float pitchIn, Supplier<SoundEvent> breakSoundIn, Supplier<SoundEvent> stepSoundIn, Supplier<SoundEvent> placeSoundIn, Supplier<SoundEvent> hitSoundIn, Supplier<SoundEvent> fallSoundIn)\n     {\n-        super(volumeIn, pitchIn, null, null, null, null, null);\n+        super(volumeIn, pitchIn, (SoundEvent) null, (SoundEvent) null, (SoundEvent) null, (SoundEvent) null, (SoundEvent) null);\n         this.breakSound = breakSoundIn;\n         this.stepSound = stepSoundIn;\n         this.placeSound = placeSoundIn;\n"}}, {"oid": "1717d5904668fa2448e5ebb31ff8e50d9d33b528", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/1717d5904668fa2448e5ebb31ff8e50d9d33b528", "message": "Add SoundEvent casts to null parameters in superclass constructor call\n\nThis makes the constructor error if the superclass constructor's parameters changes.", "committedDate": "2020-12-08T04:58:14Z", "type": "commit"}, {"oid": "0e2fa517bbf909a776b3b3fd83fd52a79256b94e", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0e2fa517bbf909a776b3b3fd83fd52a79256b94e", "message": "Deprecate and move comment to SoundType constructor", "committedDate": "2020-12-08T04:59:13Z", "type": "commit"}, {"oid": "735ac41aeaf08c3f697b61f8234dea1324d03196", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/735ac41aeaf08c3f697b61f8234dea1324d03196", "message": "Merge branch '1.16.x' into forge_sound_type", "committedDate": "2020-12-28T21:07:47Z", "type": "commit"}]}