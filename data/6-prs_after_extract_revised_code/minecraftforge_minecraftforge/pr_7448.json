{"pr_number": 7448, "pr_title": "Implement feature for mods to define new world types", "pr_createdAt": "2020-10-29T04:53:46Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM4OTE1OA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r514389158", "bodyText": "The customization screens need a way of sending the modified DimensionGeneratorSettings back to the WorldOptionsScreen. The built-in BiomeGeneratorTypeScreens use WorldOptionsScreen::func_239043_a_ which has protected access (I just AT'd it in my PR)", "author": "Won-Ton", "createdAt": "2020-10-29T16:18:22Z", "path": "src/test/java/net/minecraftforge/debug/world/ForgeWorldTypeTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package net.minecraftforge.debug.world;\n+\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.widget.button.Button;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraft.world.gen.settings.DimensionGeneratorSettings;\n+import net.minecraftforge.client.ForgeWorldTypeScreens;\n+import net.minecraftforge.common.world.ForgeWorldType;\n+import net.minecraftforge.event.RegistryEvent;\n+import net.minecraftforge.fml.common.Mod;\n+import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;\n+import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;\n+import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;\n+import net.minecraftforge.registries.ObjectHolder;\n+\n+@Mod(\"forge_world_type_test\")\n+public class ForgeWorldTypeTest\n+{\n+    @ObjectHolder(\"forge_world_type_test:test_world_type\")\n+    public static ForgeWorldType testWorldType;\n+\n+    public ForgeWorldTypeTest()\n+    {\n+        FMLJavaModLoadingContext.get().getModEventBus().addGenericListener(ForgeWorldType.class, this::registerWorldTypes);\n+        FMLJavaModLoadingContext.get().getModEventBus().addListener(this::registerWorldTypeScreenFactories);\n+        FMLJavaModLoadingContext.get().getModEventBus().addListener(this::commonSetup);\n+    }\n+\n+    private void registerWorldTypes(RegistryEvent.Register<ForgeWorldType> event)\n+    {\n+        event.getRegistry().registerAll(\n+                new ForgeWorldType(DimensionGeneratorSettings::func_242750_a).setRegistryName(\"test_world_type\")\n+        );\n+    }\n+\n+    private void commonSetup(FMLCommonSetupEvent event)\n+    {\n+        ForgeWorldType.setDefaultWorldType(testWorldType);\n+    }\n+\n+    private void registerWorldTypeScreenFactories(FMLClientSetupEvent event)\n+    {\n+        ForgeWorldTypeScreens.registerFactory(testWorldType, (returnTo, dimensionGeneratorSettings) -> new Screen(testWorldType.getDisplayName())\n+        {\n+            @Override\n+            protected void init()\n+            {\n+                super.init();\n+\n+                addButton(new Button(0, 0, 120, 20, new StringTextComponent(\"close\"), btn -> {\n+                    Minecraft.getInstance().displayGuiScreen(returnTo);\n+                }));\n+            }\n+        });", "originalCommit": "593e740cb862bf3c567d88b42de4bf88e40edf90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NTcyMw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r514395723", "bodyText": "True. I have also added that AT line since it makes sense to use the existing vanilla accessor.", "author": "gigaherz", "createdAt": "2020-10-29T16:27:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM4OTE1OA=="}], "type": "inlineReview", "revised_code": {"commit": "0b2722acd3a129d49656647cac6f215ec352a079", "chunk": "diff --git a/src/test/java/net/minecraftforge/debug/world/ForgeWorldTypeTest.java b/src/test/java/net/minecraftforge/debug/world/ForgeWorldTypeTest.java\nindex 831ec8ba5..b8b89e044 100644\n--- a/src/test/java/net/minecraftforge/debug/world/ForgeWorldTypeTest.java\n+++ b/src/test/java/net/minecraftforge/debug/world/ForgeWorldTypeTest.java\n\n@@ -1,3 +1,22 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n package net.minecraftforge.debug.world;\n \n import net.minecraft.client.Minecraft;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyNDgwOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r514424808", "bodyText": ".define(\"defaultWorldType\", \"proposed-default\");\n\ntypo?", "author": "alcatrazEscapee", "createdAt": "2020-10-29T17:07:42Z", "path": "src/main/java/net/minecraftforge/common/ForgeConfig.java", "diffHunk": "@@ -108,10 +108,35 @@\n                     .comment(\"Fix advancement loading to use a proper topological sort. This may have visibility side-effects and can thus be turned off if needed for data-pack compatibility.\")\n                     .translation(\"forge.configgui.fixAdvancementLoading\")\n                     .define(\"fixAdvancementLoading\", true);\n+\n             builder.pop();\n         }\n     }\n \n+    /**\n+     * General configuration that doesn't need to be synchronized but needs to be available before server startup\n+     */\n+    public static class Common {\n+        public final ForgeConfigSpec.ConfigValue<? extends String> defaultWorldType;\n+\n+        Common(ForgeConfigSpec.Builder builder)\n+        {\n+            builder.comment(\"General configuration settings\")\n+                    .push(\"general\");\n+\n+            defaultWorldType = builder\n+                    .comment(\"Defines a default world type to use instead of the vanilla 'default' default.\",\n+                            \"Special values:\",\n+                            \"\\t\\\"default\\\": Use the vanilla default, ignore mod-provided defaults.\",\n+                            \"\\t\\\"proposed-default\\\": Use the mod-provided default, or vanilla if none present (default).\")\n+                    .translation(\"forge.configgui.defaultWorldType\")\n+                    .define(\"fixAdvancementLoading\", \"proposed-default\");", "originalCommit": "6ad4f7b154423377b79a3d3e88501843045229fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyNjczMw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r514426733", "bodyText": "I'm not seeing the typo?\nEDIT: Oh wait copypasta \ud83e\udd26", "author": "gigaherz", "createdAt": "2020-10-29T17:10:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyNDgwOA=="}], "type": "inlineReview", "revised_code": {"commit": "0b2722acd3a129d49656647cac6f215ec352a079", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/ForgeConfig.java b/src/main/java/net/minecraftforge/common/ForgeConfig.java\nindex 02d60c7d2..65a840a56 100644\n--- a/src/main/java/net/minecraftforge/common/ForgeConfig.java\n+++ b/src/main/java/net/minecraftforge/common/ForgeConfig.java\n\n@@ -130,7 +130,7 @@ public class ForgeConfig\n                             \"\\t\\\"default\\\": Use the vanilla default, ignore mod-provided defaults.\",\n                             \"\\t\\\"proposed-default\\\": Use the mod-provided default, or vanilla if none present (default).\")\n                     .translation(\"forge.configgui.defaultWorldType\")\n-                    .define(\"fixAdvancementLoading\", \"proposed-default\");\n+                    .define(\"defaultWorldType\", \"proposed-default\");\n \n             builder.pop();\n         }\n"}}, {"oid": "0b2722acd3a129d49656647cac6f215ec352a079", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0b2722acd3a129d49656647cac6f215ec352a079", "message": "Add missing license headers.", "committedDate": "2020-11-05T02:13:21Z", "type": "forcePushed"}, {"oid": "8b18af5f875be644f8803751e031fb375881c177", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/8b18af5f875be644f8803751e031fb375881c177", "message": "Add missing license headers.", "committedDate": "2020-11-05T02:28:14Z", "type": "forcePushed"}, {"oid": "74274be844a6ce36b6e93c6a1aab912bbf40229b", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/74274be844a6ce36b6e93c6a1aab912bbf40229b", "message": "Implement feature for mods to define new world types and their corresponding settings screens.\n* Add ability to change the default world type.\n  * Mods can propose defaults, but they have no final say in which one gets picked.\n  * The default world type configurable via forge config, so users have the final say.\n  * When not configured, the logic will use whatever the last proposed world type may be.", "committedDate": "2020-11-10T20:13:17Z", "type": "forcePushed"}, {"oid": "98a0daaf57099e9930b1938cd1d5b80a802d181d", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/98a0daaf57099e9930b1938cd1d5b80a802d181d", "message": "Implement feature for mods to define new world types and their corresponding settings screens.\n* Add ability to change the default world type.\n  * Mods can propose defaults, but they have no final say in which one gets picked.\n  * The default world type configurable via forge config, so users have the final say.\n  * When not configured, the logic will use whatever the last proposed world type may be.", "committedDate": "2020-11-10T20:17:02Z", "type": "forcePushed"}, {"oid": "9c40de6fb84a0aeac728f853ae6b84f8d5031186", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/9c40de6fb84a0aeac728f853ae6b84f8d5031186", "message": "Remove method to set a default.\nAdd missing licenses.", "committedDate": "2020-11-10T21:14:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4OTQzOQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r520889439", "bodyText": "Might I suggest a rewording of this, to avoid the doubled-up \"default\" word?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .comment(\"Defines a default world type to use instead of the vanilla 'default' default.\")\n          \n          \n            \n                                .comment(\"Defines a default world type to use. The vanilla default world type is represented by 'default'.\")", "author": "sciwhiz12", "createdAt": "2020-11-10T21:37:07Z", "path": "src/main/java/net/minecraftforge/common/ForgeConfig.java", "diffHunk": "@@ -108,10 +108,32 @@\n                     .comment(\"Fix advancement loading to use a proper topological sort. This may have visibility side-effects and can thus be turned off if needed for data-pack compatibility.\")\n                     .translation(\"forge.configgui.fixAdvancementLoading\")\n                     .define(\"fixAdvancementLoading\", true);\n+\n             builder.pop();\n         }\n     }\n \n+    /**\n+     * General configuration that doesn't need to be synchronized but needs to be available before server startup\n+     */\n+    public static class Common {\n+        public final ForgeConfigSpec.ConfigValue<? extends String> defaultWorldType;\n+\n+        Common(ForgeConfigSpec.Builder builder)\n+        {\n+            builder.comment(\"General configuration settings\")\n+                    .push(\"general\");\n+\n+            defaultWorldType = builder\n+                    .comment(\"Defines a default world type to use instead of the vanilla 'default' default.\")", "originalCommit": "9c40de6fb84a0aeac728f853ae6b84f8d5031186", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e4536e7451d69b7d38fc0cc812a515cc6a5f8f6", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/ForgeConfig.java b/src/main/java/net/minecraftforge/common/ForgeConfig.java\nindex 5e4902693..05ad3ec07 100644\n--- a/src/main/java/net/minecraftforge/common/ForgeConfig.java\n+++ b/src/main/java/net/minecraftforge/common/ForgeConfig.java\n\n@@ -125,7 +125,7 @@ public class ForgeConfig\n                     .push(\"general\");\n \n             defaultWorldType = builder\n-                    .comment(\"Defines a default world type to use instead of the vanilla 'default' default.\")\n+                    .comment(\"Defines a default world type to use. The vanilla default world type is represented by 'default'.\")\n                     .translation(\"forge.configgui.defaultWorldType\")\n                     .define(\"defaultWorldType\", \"default\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5MTA1Mg==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r520891052", "bodyText": "Just rearranging and fixing a probable misspell.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.error(\"The defaultWorldType specific in the forge config '{}' has not been registered. The vanilla default generator will be used.\", defaultWorldType);\n          \n          \n            \n                        LOGGER.error(\"The defaultWorldType '{}' specified in the forge config has not been registered. The vanilla default generator will be used.\", defaultWorldType);", "author": "sciwhiz12", "createdAt": "2020-11-10T21:40:13Z", "path": "src/main/java/net/minecraftforge/common/world/ForgeWorldType.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Minecraft Forge\n+ * Copyright (c) 2016-2020.\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.common.world;\n+\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.StringUtils;\n+import net.minecraft.util.Util;\n+import net.minecraft.util.registry.DynamicRegistries;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import net.minecraft.world.DimensionType;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.gen.ChunkGenerator;\n+import net.minecraft.world.gen.DimensionSettings;\n+import net.minecraft.world.gen.settings.DimensionGeneratorSettings;\n+import net.minecraftforge.common.ForgeConfig;\n+import net.minecraftforge.registries.ForgeRegistries;\n+import net.minecraftforge.registries.ForgeRegistryEntry;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class ForgeWorldType extends ForgeRegistryEntry<ForgeWorldType>\n+{\n+    private static final Logger LOGGER = LogManager.getLogger();\n+\n+    public static ForgeWorldType getDefaultWorldType()\n+    {\n+        String defaultWorldType = ForgeConfig.COMMON.defaultWorldType.get();\n+\n+        if (StringUtils.isNullOrEmpty(defaultWorldType) || \"default\".equals(defaultWorldType))\n+            return null; // use vanilla\n+\n+        ForgeWorldType def = ForgeRegistries.WORLD_TYPES.getValue(new ResourceLocation(defaultWorldType));\n+        if (def == null)\n+        {\n+            LOGGER.error(\"The defaultWorldType specific in the forge config '{}' has not been registered. The vanilla default generator will be used.\", defaultWorldType);", "originalCommit": "9c40de6fb84a0aeac728f853ae6b84f8d5031186", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5MzM4OQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r520893389", "bodyText": "oops, I didn't English very well there.", "author": "gigaherz", "createdAt": "2020-11-10T21:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5MTA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5e4536e7451d69b7d38fc0cc812a515cc6a5f8f6", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/world/ForgeWorldType.java b/src/main/java/net/minecraftforge/common/world/ForgeWorldType.java\nindex 53f4834a5..907c4f22f 100644\n--- a/src/main/java/net/minecraftforge/common/world/ForgeWorldType.java\n+++ b/src/main/java/net/minecraftforge/common/world/ForgeWorldType.java\n\n@@ -51,7 +51,7 @@ public class ForgeWorldType extends ForgeRegistryEntry<ForgeWorldType>\n         ForgeWorldType def = ForgeRegistries.WORLD_TYPES.getValue(new ResourceLocation(defaultWorldType));\n         if (def == null)\n         {\n-            LOGGER.error(\"The defaultWorldType specific in the forge config '{}' has not been registered. The vanilla default generator will be used.\", defaultWorldType);\n+            LOGGER.error(\"The defaultWorldType '{}' specified in the forge config has not been registered. The vanilla default generator will be used.\", defaultWorldType);\n         }\n \n         return def;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NDIxNA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r525374214", "bodyText": "Would it be worth noting in the comment that modded world-types must be specified with a namespace? Modders will need to relay that information anyway (for server.properties) but there could still be confusion since \"default\" isn't prefixed with \"minecraft:\"", "author": "Won-Ton", "createdAt": "2020-11-17T18:03:07Z", "path": "src/main/java/net/minecraftforge/common/ForgeConfig.java", "diffHunk": "@@ -108,10 +108,32 @@\n                     .comment(\"Fix advancement loading to use a proper topological sort. This may have visibility side-effects and can thus be turned off if needed for data-pack compatibility.\")\n                     .translation(\"forge.configgui.fixAdvancementLoading\")\n                     .define(\"fixAdvancementLoading\", true);\n+\n             builder.pop();\n         }\n     }\n \n+    /**\n+     * General configuration that doesn't need to be synchronized but needs to be available before server startup\n+     */\n+    public static class Common {\n+        public final ForgeConfigSpec.ConfigValue<? extends String> defaultWorldType;\n+\n+        Common(ForgeConfigSpec.Builder builder)\n+        {\n+            builder.comment(\"General configuration settings\")\n+                    .push(\"general\");\n+\n+            defaultWorldType = builder\n+                    .comment(\"Defines a default world type to use. The vanilla default world type is represented by 'default'.\")", "originalCommit": "8a76c69864b01cc4183366f84c17a5ae44149385", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNTYzNQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7448#discussion_r525405635", "bodyText": "Good idea. It may be confusing otherwise for those who are used to writing \"biomesoplenty\", which would mean \"minecraft:biomesoplenty\" with this change.", "author": "gigaherz", "createdAt": "2020-11-17T18:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NDIxNA=="}], "type": "inlineReview", "revised_code": {"commit": "0f89f23b1cc4bdad73efdb3fafc5268394705527", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/ForgeConfig.java b/src/main/java/net/minecraftforge/common/ForgeConfig.java\nindex 05ad3ec07..c3ecc2595 100644\n--- a/src/main/java/net/minecraftforge/common/ForgeConfig.java\n+++ b/src/main/java/net/minecraftforge/common/ForgeConfig.java\n\n@@ -125,7 +125,8 @@ public class ForgeConfig\n                     .push(\"general\");\n \n             defaultWorldType = builder\n-                    .comment(\"Defines a default world type to use. The vanilla default world type is represented by 'default'.\")\n+                    .comment(\"Defines a default world type to use. The vanilla default world type is represented by 'default'.\",\n+                             \"The modded world types are registry names which should include the registry namespace, such as 'examplemod:example_world_type'.\")\n                     .translation(\"forge.configgui.defaultWorldType\")\n                     .define(\"defaultWorldType\", \"default\");\n \n"}}, {"oid": "5e4536e7451d69b7d38fc0cc812a515cc6a5f8f6", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/5e4536e7451d69b7d38fc0cc812a515cc6a5f8f6", "message": "Implement feature for mods to define new world types and their corresponding settings screens.\nThe default world type is configurable via forge's config.", "committedDate": "2020-11-27T22:54:46Z", "type": "commit"}, {"oid": "5e4536e7451d69b7d38fc0cc812a515cc6a5f8f6", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/5e4536e7451d69b7d38fc0cc812a515cc6a5f8f6", "message": "Implement feature for mods to define new world types and their corresponding settings screens.\nThe default world type is configurable via forge's config.", "committedDate": "2020-11-27T22:54:46Z", "type": "forcePushed"}, {"oid": "0f89f23b1cc4bdad73efdb3fafc5268394705527", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0f89f23b1cc4bdad73efdb3fafc5268394705527", "message": "Clarify how the defaultWorldType config is meant to be a registry name with a namespace, for non-vanilla world types.", "committedDate": "2020-11-27T23:37:43Z", "type": "commit"}]}