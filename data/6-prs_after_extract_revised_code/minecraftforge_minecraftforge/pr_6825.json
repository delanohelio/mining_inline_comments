{"pr_number": 6825, "pr_title": "Make Type classes safe to use in concurrent loading", "pr_createdAt": "2020-06-26T09:28:38Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825", "timeline": [{"oid": "02f35fd8080cf8ab08c264ea4aec500ee15780f9", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/02f35fd8080cf8ab08c264ea4aec500ee15780f9", "message": "Make Type classes safe to use in concurrent loading", "committedDate": "2020-06-26T09:26:36Z", "type": "commit"}, {"oid": "2face67e4b88b4a08deee4fc6df99b61bc8384a7", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/2face67e4b88b4a08deee4fc6df99b61bc8384a7", "message": "Actually make PlantType safe", "committedDate": "2020-06-26T09:28:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDQxOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825#discussion_r446200418", "bodyText": "I don't think calling get() while another thread is in the middle of computeIfAbsent is thread-safe", "author": "gigaherz", "createdAt": "2020-06-26T13:57:18Z", "path": "src/main/java/net/minecraftforge/common/PlantType.java", "diffHunk": "@@ -41,24 +43,33 @@\n \n     /**\n      * Getting a custom {@link PlantType}, or an existing one if it has the same name as that one. Your plant should implement {@link IPlantable}\n-     * and return this custom type in {@link IPlantable#getPlantType(IBlockAccess, BlockPos)}.\n+     * and return this custom type in {@link IPlantable#getPlantType(IBlockReader, BlockPos)}.\n      *\n      * <p>If your new plant grows on blocks like any one of them above, never create a new {@link PlantType}.\n-     * This enumeration is only functioning in\n-     * {@link net.minecraft.block.Block#canSustainPlant(IBlockState, IWorldReader, BlockPos, EnumFacing, IPlantable)},\n+     * This Type is only functioning in\n+     * {@link net.minecraft.block.Block#canSustainPlant(BlockState, IBlockReader, BlockPos, Direction, IPlantable)},\n      * which you are supposed to override this function in your new block and create a new plant type to grow on that block.\n      *\n-     * <p>You can create an instance of your plant type in your API and let your/others mods access it. It will be faster than calling this method.\n+     * This method can be called during parallel loading\n      * @param name the name of the type of plant, you had better follow the style above\n      * @return the acquired {@link PlantType}, a new one if not found.\n      */\n     public static PlantType get(String name)\n     {\n-        return VALUES.computeIfAbsent(name, e -> {\n-            if (INVALID_CHARACTERS.matcher(e).find())\n-                throw new IllegalArgumentException(\"PlantType.get() called with invalid name: \" + name);\n-            return new PlantType(e);\n-        });\n+        PlantType type = VALUES.get(name);", "originalCommit": "2face67e4b88b4a08deee4fc6df99b61bc8384a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxOTQ4Nw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6825#discussion_r446319487", "bodyText": "So I did some reading, and it turns out computeIfAbset that ConcurrentHashMap actually allows the behaviour as I used it, however, computeIfAbsent is already enoguh, as the implementation for ConcurrentHashMap is written so it guranteeres that not race condition will occur", "author": "ichttt", "createdAt": "2020-06-26T17:35:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDQxOA=="}], "type": "inlineReview", "revised_code": {"commit": "35aa0af4f3a6804b153d42f70dc986b1f430eac8", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/PlantType.java b/src/main/java/net/minecraftforge/common/PlantType.java\nindex 90a204705..c6354c36d 100644\n--- a/src/main/java/net/minecraftforge/common/PlantType.java\n+++ b/src/main/java/net/minecraftforge/common/PlantType.java\n\n@@ -56,20 +56,12 @@ public final class PlantType\n      */\n     public static PlantType get(String name)\n     {\n-        PlantType type = VALUES.get(name);\n-        if (type == null)\n+        return VALUES.computeIfAbsent(name, e ->\n         {\n-            synchronized (PlantType.class)\n-            {\n-                type = VALUES.computeIfAbsent(name, e ->\n-                {\n-                    if (INVALID_CHARACTERS.matcher(e).find())\n-                        throw new IllegalArgumentException(\"PlantType.get() called with invalid name: \" + name);\n-                    return new PlantType(e);\n-                });\n-            }\n-        }\n-        return type;\n+            if (INVALID_CHARACTERS.matcher(e).find())\n+                throw new IllegalArgumentException(\"PlantType.get() called with invalid name: \" + name);\n+            return new PlantType(e);\n+        });\n     }\n \n     private final String name;\n"}}, {"oid": "35aa0af4f3a6804b153d42f70dc986b1f430eac8", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/35aa0af4f3a6804b153d42f70dc986b1f430eac8", "message": "Just use computeIfAbsent directly", "committedDate": "2020-06-26T17:33:20Z", "type": "commit"}]}