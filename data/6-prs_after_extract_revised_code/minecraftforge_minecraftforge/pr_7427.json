{"pr_number": 7427, "pr_title": "Fixed Configs not correcting when hot-loaded from changes on disk", "pr_createdAt": "2020-10-22T05:25:36Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427", "timeline": [{"oid": "0c2fdca9772b2c8e9560f2c60c41bdd1b06a4c75", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0c2fdca9772b2c8e9560f2c60c41bdd1b06a4c75", "message": "Fixed Configs not correcting when hot-loaded from changes on disk\n\nCloses #7367", "committedDate": "2020-10-22T05:26:54Z", "type": "forcePushed"}, {"oid": "7a93b73026002b4c440fa29a1310ea10512d8548", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/7a93b73026002b4c440fa29a1310ea10512d8548", "message": "Fixed Configs not correcting when hot-loaded from changes on disk\n\nCloses #7367", "committedDate": "2020-10-22T05:30:24Z", "type": "forcePushed"}, {"oid": "ef398626450e11a6255e62d0a6963901255cf990", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/ef398626450e11a6255e62d0a6963901255cf990", "message": "Fixed Configs not correcting when hot-loaded from changes on disk\n\nCloses #7367", "committedDate": "2020-10-22T05:31:24Z", "type": "forcePushed"}, {"oid": "e8a2a31cdaf428e5d528881e2d504a5f323ad4aa", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/e8a2a31cdaf428e5d528881e2d504a5f323ad4aa", "message": "Log messages when backups fail", "committedDate": "2020-11-01T22:19:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxMjEwNg==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516012106", "bodyText": "Braces on newlines, please.", "author": "sciwhiz12", "createdAt": "2020-11-02T14:33:49Z", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;\n+        File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--){", "originalCommit": "68e010520afb1c1f8d51dee587901faaeb54026f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae8bebd77389d922884b3c0269b18f8b9084c6bb", "chunk": "diff --git a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\nindex 9d3b413ed..a3d76555d 100644\n--- a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n+++ b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n\n@@ -94,26 +96,19 @@ public class ConfigFileTypeHandler {\n     }\n \n     public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n-        int maxBackups = 5;\n+        int i = 0;\n         File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n-        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n-        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n-        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        String bakFileName = commentedFileConfig.getFile().getName();\n+        File bakFile = new File(bakFileLocation,bakFileName + \".bak\");\n+        while(bakFile.exists()) {\n+            if(i >= 10) { // Set a limit so we don't spin forever\n+                LOGGER.warn(CONFIG, \"Refusing to back up config file {} due to an excess of backups\", commentedFileConfig.getFile().getName());\n+                return;\n+            }\n+            bakFile = new File(bakFileLocation, bakFileName + \"-\" + ++i + \".bak\");\n+        }\n         try\n         {\n-            for(int i = maxBackups; i > 0; i--){\n-                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n-                if(oldBak.exists()){\n-                    if(i == maxBackups)\n-                    {\n-                        if (oldBak.delete()) continue;\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as the oldest backup, {}, could not be deleted\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                        return;\n-                    }\n-                    if (!oldBak.renameTo(new File(bakFileLocation, bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension)))\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as an old backup, {}, could not be renamed\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                }\n-            }\n             Files.copy(commentedFileConfig.getNioPath(),bakFile.toPath());\n         }\n         catch (IOException exception)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxMjE5Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516012196", "bodyText": "Braces on newlines, please.", "author": "sciwhiz12", "createdAt": "2020-11-02T14:33:58Z", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;\n+        File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--){\n+                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(oldBak.exists()){", "originalCommit": "68e010520afb1c1f8d51dee587901faaeb54026f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae8bebd77389d922884b3c0269b18f8b9084c6bb", "chunk": "diff --git a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\nindex 9d3b413ed..a3d76555d 100644\n--- a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n+++ b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n\n@@ -94,26 +96,19 @@ public class ConfigFileTypeHandler {\n     }\n \n     public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n-        int maxBackups = 5;\n+        int i = 0;\n         File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n-        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n-        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n-        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        String bakFileName = commentedFileConfig.getFile().getName();\n+        File bakFile = new File(bakFileLocation,bakFileName + \".bak\");\n+        while(bakFile.exists()) {\n+            if(i >= 10) { // Set a limit so we don't spin forever\n+                LOGGER.warn(CONFIG, \"Refusing to back up config file {} due to an excess of backups\", commentedFileConfig.getFile().getName());\n+                return;\n+            }\n+            bakFile = new File(bakFileLocation, bakFileName + \"-\" + ++i + \".bak\");\n+        }\n         try\n         {\n-            for(int i = maxBackups; i > 0; i--){\n-                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n-                if(oldBak.exists()){\n-                    if(i == maxBackups)\n-                    {\n-                        if (oldBak.delete()) continue;\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as the oldest backup, {}, could not be deleted\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                        return;\n-                    }\n-                    if (!oldBak.renameTo(new File(bakFileLocation, bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension)))\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as an old backup, {}, could not be renamed\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                }\n-            }\n             Files.copy(commentedFileConfig.getNioPath(),bakFile.toPath());\n         }\n         catch (IOException exception)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516014668", "bodyText": "Just asking, wouldn't this be better as a static constant, instead of a local constant?", "author": "sciwhiz12", "createdAt": "2020-11-02T14:37:36Z", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,35 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int maxBackups = 5;", "originalCommit": "68e010520afb1c1f8d51dee587901faaeb54026f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4MjE0Nw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516082147", "bodyText": "Added an overload that allows the caller to choose maxBackups and a TODO requesting ideas on how to allow mods to set maxBackups for their own config", "author": "DaemonUmbra", "createdAt": "2020-11-02T16:11:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA=="}], "type": "inlineReview", "revised_code": {"commit": "ae8bebd77389d922884b3c0269b18f8b9084c6bb", "chunk": "diff --git a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\nindex 9d3b413ed..a3d76555d 100644\n--- a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n+++ b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n\n@@ -94,26 +96,19 @@ public class ConfigFileTypeHandler {\n     }\n \n     public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n-        int maxBackups = 5;\n+        int i = 0;\n         File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n-        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n-        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n-        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        String bakFileName = commentedFileConfig.getFile().getName();\n+        File bakFile = new File(bakFileLocation,bakFileName + \".bak\");\n+        while(bakFile.exists()) {\n+            if(i >= 10) { // Set a limit so we don't spin forever\n+                LOGGER.warn(CONFIG, \"Refusing to back up config file {} due to an excess of backups\", commentedFileConfig.getFile().getName());\n+                return;\n+            }\n+            bakFile = new File(bakFileLocation, bakFileName + \"-\" + ++i + \".bak\");\n+        }\n         try\n         {\n-            for(int i = maxBackups; i > 0; i--){\n-                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n-                if(oldBak.exists()){\n-                    if(i == maxBackups)\n-                    {\n-                        if (oldBak.delete()) continue;\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as the oldest backup, {}, could not be deleted\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                        return;\n-                    }\n-                    if (!oldBak.renameTo(new File(bakFileLocation, bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension)))\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as an old backup, {}, could not be renamed\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                }\n-            }\n             Files.copy(commentedFileConfig.getNioPath(),bakFile.toPath());\n         }\n         catch (IOException exception)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4OTI4MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r516389281", "bodyText": "Use NIO, not java.io.File. This will be a lot cleaner..", "author": "cpw", "createdAt": "2020-11-03T01:53:24Z", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +93,42 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n+    {\n+        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n+    }\n+\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n+    {\n+        File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--)\n+            {\n+                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(oldBak.exists())\n+                {\n+                    if(i == maxBackups)\n+                    {\n+                        if (oldBak.delete()) continue;\n+                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as the oldest backup, {}, could not be deleted\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n+                        return;\n+                    }\n+                    if (!oldBak.renameTo(new File(bakFileLocation, bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension)))\n+                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as an old backup, {}, could not be renamed\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n+                }", "originalCommit": "7ad08caca2bc3f4e80307b13390ff3e86af09370", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae8bebd77389d922884b3c0269b18f8b9084c6bb", "chunk": "diff --git a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\nindex b6dc9c489..a3d76555d 100644\n--- a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n+++ b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n\n@@ -93,34 +95,20 @@ public class ConfigFileTypeHandler {\n         return true;\n     }\n \n-    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n-    {\n-        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n-    }\n-\n-    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n-    {\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig) {\n+        int i = 0;\n         File bakFileLocation = commentedFileConfig.getFile().getParentFile();\n-        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n-        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n-        File bakFile = new File(bakFileLocation, bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        String bakFileName = commentedFileConfig.getFile().getName();\n+        File bakFile = new File(bakFileLocation,bakFileName + \".bak\");\n+        while(bakFile.exists()) {\n+            if(i >= 10) { // Set a limit so we don't spin forever\n+                LOGGER.warn(CONFIG, \"Refusing to back up config file {} due to an excess of backups\", commentedFileConfig.getFile().getName());\n+                return;\n+            }\n+            bakFile = new File(bakFileLocation, bakFileName + \"-\" + ++i + \".bak\");\n+        }\n         try\n         {\n-            for(int i = maxBackups; i > 0; i--)\n-            {\n-                File oldBak = new File(bakFileLocation, bakFileName + \"-\" + i + \".\" + bakFileExtension);\n-                if(oldBak.exists())\n-                {\n-                    if(i == maxBackups)\n-                    {\n-                        if (oldBak.delete()) continue;\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as the oldest backup, {}, could not be deleted\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                        return;\n-                    }\n-                    if (!oldBak.renameTo(new File(bakFileLocation, bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension)))\n-                        LOGGER.warn(CONFIG, \"Failed to back up config file {} as an old backup, {}, could not be renamed\", commentedFileConfig.getFile().getName(), oldBak.getAbsolutePath());\n-                }\n-            }\n             Files.copy(commentedFileConfig.getNioPath(),bakFile.toPath());\n         }\n         catch (IOException exception)\n"}}, {"oid": "ae8bebd77389d922884b3c0269b18f8b9084c6bb", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/ae8bebd77389d922884b3c0269b18f8b9084c6bb", "message": "Fixed Configs not correcting when hot-loaded from changes on disk\n\nCloses #7367", "committedDate": "2020-11-07T02:32:00Z", "type": "commit"}, {"oid": "d93c07998c0ce57b567b9babd5312d4d43f8444c", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/d93c07998c0ce57b567b9babd5312d4d43f8444c", "message": "Modify backups to operate in a similar manner to log archives\n\nbak files will now be numbered from new -> old with the oldest backup being deleted upon the maximum (currently 5, again similar to the current log config) being reached", "committedDate": "2020-11-07T02:32:01Z", "type": "commit"}, {"oid": "cb7377db9cad18c16868ff94349f3e802f2aa551", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/cb7377db9cad18c16868ff94349f3e802f2aa551", "message": "Log messages when backups fail", "committedDate": "2020-11-07T02:32:01Z", "type": "commit"}, {"oid": "4434e7ed5f1e5878e347948c53ea1f17c4eba88e", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/4434e7ed5f1e5878e347948c53ea1f17c4eba88e", "message": "Clean up unnecessary imports I didn't notice before", "committedDate": "2020-11-07T02:32:02Z", "type": "commit"}, {"oid": "0284c6bb89c622888ad218b66218d49a9e2fc0d7", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0284c6bb89c622888ad218b66218d49a9e2fc0d7", "message": "Remove unnecessary \"CORE\" import\n\nand use CONFIG like everything else", "committedDate": "2020-11-07T02:32:02Z", "type": "commit"}, {"oid": "97150b49ff30e189d7218aba4ac69512e66d9c06", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/97150b49ff30e189d7218aba4ac69512e66d9c06", "message": "Address comment relating to brace placement\n\nAnd provide possible solution to comment relating to maxBackups value", "committedDate": "2020-11-07T02:32:03Z", "type": "commit"}, {"oid": "2e5821c153f7a5373325977e1699cbb987c688f0", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/2e5821c153f7a5373325977e1699cbb987c688f0", "message": "Addressed comment regarding using NIO instead of IO", "committedDate": "2020-11-07T02:34:35Z", "type": "commit"}, {"oid": "2e5821c153f7a5373325977e1699cbb987c688f0", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/2e5821c153f7a5373325977e1699cbb987c688f0", "message": "Addressed comment regarding using NIO instead of IO", "committedDate": "2020-11-07T02:34:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDY4Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r519084686", "bodyText": "Before anyone comments on this part, Log4J doesn't seem to have a method for both {} params and throwable printing at the same time.", "author": "DaemonUmbra", "createdAt": "2020-11-07T02:37:27Z", "path": "src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java", "diffHunk": "@@ -91,6 +92,38 @@ private boolean setupConfigFile(final ModConfig modConfig, final Path file, fina\n         return true;\n     }\n \n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig)\n+    {\n+        backUpConfig(commentedFileConfig, 5); //TODO: Think of a way for mods to set their own preference (include a sanity check as well, no disk stuffing)\n+    }\n+\n+    public static void backUpConfig(final CommentedFileConfig commentedFileConfig, final int maxBackups)\n+    {\n+        Path bakFileLocation = commentedFileConfig.getNioPath().getParent();\n+        String bakFileName = FilenameUtils.removeExtension(commentedFileConfig.getFile().getName());\n+        String bakFileExtension = FilenameUtils.getExtension(commentedFileConfig.getFile().getName()) + \".bak\";\n+        Path bakFile = bakFileLocation.resolve(bakFileName + \"-1\" + \".\" + bakFileExtension);\n+        try\n+        {\n+            for(int i = maxBackups; i > 0; i--)\n+            {\n+                Path oldBak = bakFileLocation.resolve(bakFileName + \"-\" + i + \".\" + bakFileExtension);\n+                if(Files.exists(oldBak))\n+                {\n+                    if(i >= maxBackups)\n+                        Files.delete(oldBak);\n+                    else\n+                        Files.move(oldBak, bakFileLocation.resolve(bakFileName + \"-\" + (i + 1) + \".\" + bakFileExtension));\n+                }\n+            }\n+            Files.copy(commentedFileConfig.getNioPath(), bakFile);\n+        }\n+        catch (IOException exception)\n+        {\n+            LOGGER.warn(CONFIG, \"Failed to back up config file \" + commentedFileConfig.getNioPath(), exception);", "originalCommit": "2e5821c153f7a5373325977e1699cbb987c688f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NTYwOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r519085608", "bodyText": "Actually it does, I looked it up at one point, and it turns out log4j has \"hidden\" functionality that makes it treat it as such if it has one more passed to it than the parameters and is a throwable.", "author": "pupnewfster", "createdAt": "2020-11-07T02:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NjM3Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7427#discussion_r519086376", "bodyText": "TIL", "author": "DaemonUmbra", "createdAt": "2020-11-07T02:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NDY4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c19746f8508b0648c4cbb588158cb518dd437f99", "chunk": "diff --git a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\nindex c7dbac8e9..7294b2ecd 100644\n--- a/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n+++ b/src/main/java/net/minecraftforge/fml/config/ConfigFileTypeHandler.java\n\n@@ -120,7 +120,7 @@ public class ConfigFileTypeHandler {\n         }\n         catch (IOException exception)\n         {\n-            LOGGER.warn(CONFIG, \"Failed to back up config file \" + commentedFileConfig.getNioPath(), exception);\n+            LOGGER.warn(CONFIG, \"Failed to back up config file {}\", commentedFileConfig.getNioPath(), exception);\n         }\n     }\n \n"}}, {"oid": "c19746f8508b0648c4cbb588158cb518dd437f99", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/c19746f8508b0648c4cbb588158cb518dd437f99", "message": "Adjusted to utilize the undocumented feature of using both {} and throwable printing in Log4j", "committedDate": "2020-11-07T02:55:08Z", "type": "commit"}]}