{"pr_number": 7176, "pr_title": "[1.16] IForgeBlock#getToolModifiedState (Handling Axe, Hoe, and Shovel Right Click)", "pr_createdAt": "2020-07-26T05:37:27Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTQ1OQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460571459", "bodyText": "Return the original state if you can't find a modified one, not null.", "author": "Lanse505", "createdAt": "2020-07-26T20:44:50Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java", "diffHunk": "@@ -887,4 +890,37 @@ default boolean shouldDisplayFluidOverlay(BlockState state, IBlockDisplayReader\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param state The current state\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n+    {\n+    \tSet<ToolType> tool = stack.getToolTypes();\n+    \tif(tool.contains(ToolType.AXE)) {\n+    \t\tBlock block = AxeItem.BLOCK_STRIPPING_MAP.get(state.getBlock());\n+    \t\tif(block == null && tool.size() == 1) return null;\n+    \t\tif(block != null) return block.getDefaultState().with(RotatedPillarBlock.AXIS, state.get(RotatedPillarBlock.AXIS));\n+    \t}\n+    \tif(tool.contains(ToolType.HOE)) {\n+    \t\tBlockState modifiedState = HoeItem.HOE_LOOKUP.get(state.getBlock());\n+    \t\tif(modifiedState == null && tool.size() == 1) return null;\n+    \t\tif(modifiedState != null) return modifiedState;\n+    \t}\n+    \tif(tool.contains(ToolType.SHOVEL)) {\n+    \t\tBlockState modifiedState = ShovelItem.SHOVEL_LOOKUP.get(state.getBlock());\n+    \t\treturn modifiedState;\n+    \t}\n+    \treturn null;", "originalCommit": "17947576efdc1ccd5c794c8eebe7aea41819960a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTcxOQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460571719", "bodyText": "The reason I return null is that AxeItem, HoeItem, and ShovelItem all check if the block isn't in the list by comparing the result to null.", "author": "ChampionAsh5357", "createdAt": "2020-07-26T20:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTQ1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTk4NA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460571984", "bodyText": "Hmm, that's fair enough.", "author": "Lanse505", "createdAt": "2020-07-26T20:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTQ1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\nindex 38d9484f9..6820873bf 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n\n@@ -890,37 +887,4 @@ public interface IForgeBlock\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param state The current state\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n-    {\n-    \tSet<ToolType> tool = stack.getToolTypes();\n-    \tif(tool.contains(ToolType.AXE)) {\n-    \t\tBlock block = AxeItem.BLOCK_STRIPPING_MAP.get(state.getBlock());\n-    \t\tif(block == null && tool.size() == 1) return null;\n-    \t\tif(block != null) return block.getDefaultState().with(RotatedPillarBlock.AXIS, state.get(RotatedPillarBlock.AXIS));\n-    \t}\n-    \tif(tool.contains(ToolType.HOE)) {\n-    \t\tBlockState modifiedState = HoeItem.HOE_LOOKUP.get(state.getBlock());\n-    \t\tif(modifiedState == null && tool.size() == 1) return null;\n-    \t\tif(modifiedState != null) return modifiedState;\n-    \t}\n-    \tif(tool.contains(ToolType.SHOVEL)) {\n-    \t\tBlockState modifiedState = ShovelItem.SHOVEL_LOOKUP.get(state.getBlock());\n-    \t\treturn modifiedState;\n-    \t}\n-    \treturn null;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTU3NQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460571575", "bodyText": "I'd say fire the event here, at the beginning and if it returns not the original state, then return that state.\nOtherwise continue.", "author": "Lanse505", "createdAt": "2020-07-26T20:45:35Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java", "diffHunk": "@@ -887,4 +890,37 @@ default boolean shouldDisplayFluidOverlay(BlockState state, IBlockDisplayReader\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param state The current state\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n+    {\n+    \tSet<ToolType> tool = stack.getToolTypes();", "originalCommit": "17947576efdc1ccd5c794c8eebe7aea41819960a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3Njk1MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460576951", "bodyText": "I've added the event.", "author": "ChampionAsh5357", "createdAt": "2020-07-26T21:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\nindex 38d9484f9..6820873bf 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n\n@@ -890,37 +887,4 @@ public interface IForgeBlock\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param state The current state\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n-    {\n-    \tSet<ToolType> tool = stack.getToolTypes();\n-    \tif(tool.contains(ToolType.AXE)) {\n-    \t\tBlock block = AxeItem.BLOCK_STRIPPING_MAP.get(state.getBlock());\n-    \t\tif(block == null && tool.size() == 1) return null;\n-    \t\tif(block != null) return block.getDefaultState().with(RotatedPillarBlock.AXIS, state.get(RotatedPillarBlock.AXIS));\n-    \t}\n-    \tif(tool.contains(ToolType.HOE)) {\n-    \t\tBlockState modifiedState = HoeItem.HOE_LOOKUP.get(state.getBlock());\n-    \t\tif(modifiedState == null && tool.size() == 1) return null;\n-    \t\tif(modifiedState != null) return modifiedState;\n-    \t}\n-    \tif(tool.contains(ToolType.SHOVEL)) {\n-    \t\tBlockState modifiedState = ShovelItem.SHOVEL_LOOKUP.get(state.getBlock());\n-    \t\treturn modifiedState;\n-    \t}\n-    \treturn null;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzA4Nw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577087", "bodyText": "There really should be a private final originalState, so there is always a clean reference to the originalState.", "author": "Lanse505", "createdAt": "2020-07-26T21:44:33Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +444,47 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+    \tprivate final PlayerEntity player;\n+    \tprivate final ItemStack stack;\n+    \tprivate BlockState finalState;\n+    \t\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n+\t\t\tsuper(world, pos, originalState);\n+\t\t\tthis.player = player;\n+\t\t\tthis.stack = stack;\n+\t\t\tthis.finalState = originalState;", "originalCommit": "659eb51679e339ae14693c20d2d72aeb3e88251d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzQ1MA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577450", "bodyText": "I extended BlockEvent, which holds a private final originalState.", "author": "ChampionAsh5357", "createdAt": "2020-07-26T21:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzQ5Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577496", "bodyText": "Ah fair enough, ignore me :P", "author": "Lanse505", "createdAt": "2020-07-26T21:49:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzY4OQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577689", "bodyText": "You can resolve this", "author": "Lanse505", "createdAt": "2020-07-26T21:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzA4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 6f37e2c26..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -444,47 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate BlockState finalState;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.finalState = originalState;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer()\n-\t\t{\n-\t\t\treturn player;\n-\t\t}\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack()\n-\t\t{\n-\t\t\treturn stack;\n-\t\t}\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState)\n-\t\t{\n-\t\t\tthis.finalState = finalState;\n-\t\t}\n-\t\t\n-\t\tpublic BlockState getFinalState()\n-\t\t{\n-\t\t\treturn finalState;\n-\t\t}\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzE0OQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577149", "bodyText": "Should probably just be state. (Nitpicky)", "author": "Lanse505", "createdAt": "2020-07-26T21:44:58Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +444,47 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+    \tprivate final PlayerEntity player;\n+    \tprivate final ItemStack stack;\n+    \tprivate BlockState finalState;", "originalCommit": "659eb51679e339ae14693c20d2d72aeb3e88251d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzUzNQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577535", "bodyText": "Referenced as finalState to know the diference between getState and getFinalState in code. However, I can change to state. (less nitpicky)", "author": "ChampionAsh5357", "createdAt": "2020-07-26T21:49:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzYyNA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577624", "bodyText": "You can resolve this, it's valid since there is already a getState, setState, and original state things.", "author": "Lanse505", "createdAt": "2020-07-26T21:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 6f37e2c26..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -444,47 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate BlockState finalState;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.finalState = originalState;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer()\n-\t\t{\n-\t\t\treturn player;\n-\t\t}\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack()\n-\t\t{\n-\t\t\treturn stack;\n-\t\t}\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState)\n-\t\t{\n-\t\t\tthis.finalState = finalState;\n-\t\t}\n-\t\t\n-\t\tpublic BlockState getFinalState()\n-\t\t{\n-\t\t\treturn finalState;\n-\t\t}\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzI3MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577271", "bodyText": "All the getter lines are wrong formatting should be same line getters.\ni.e.\npublic PlayerEntity getPlayer() { return player; }", "author": "Lanse505", "createdAt": "2020-07-26T21:46:23Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +444,47 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+    \tprivate final PlayerEntity player;\n+    \tprivate final ItemStack stack;\n+    \tprivate BlockState finalState;\n+    \t\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n+\t\t\tsuper(world, pos, originalState);\n+\t\t\tthis.player = player;\n+\t\t\tthis.stack = stack;\n+\t\t\tthis.finalState = originalState;\n+\t\t}\n+\t\t\n+\t\tpublic PlayerEntity getPlayer()", "originalCommit": "659eb51679e339ae14693c20d2d72aeb3e88251d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3Nzg4MA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577880", "bodyText": "Most of the formatting for BlockEvent is incorrect then.", "author": "ChampionAsh5357", "createdAt": "2020-07-26T21:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3Nzk0MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577941", "bodyText": "I might be wrong, but that's how I've been told my triage in the past to format the getters/setters.", "author": "Lanse505", "createdAt": "2020-07-26T21:54:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzI3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 6f37e2c26..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -444,47 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate BlockState finalState;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.finalState = originalState;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer()\n-\t\t{\n-\t\t\treturn player;\n-\t\t}\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack()\n-\t\t{\n-\t\t\treturn stack;\n-\t\t}\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState)\n-\t\t{\n-\t\t\tthis.finalState = finalState;\n-\t\t}\n-\t\t\n-\t\tpublic BlockState getFinalState()\n-\t\t{\n-\t\t\treturn finalState;\n-\t\t}\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM2Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577363", "bodyText": "I'd say as above change it to state and getState and setState.", "author": "Lanse505", "createdAt": "2020-07-26T21:47:29Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +444,47 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+    \tprivate final PlayerEntity player;\n+    \tprivate final ItemStack stack;\n+    \tprivate BlockState finalState;\n+    \t\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n+\t\t\tsuper(world, pos, originalState);\n+\t\t\tthis.player = player;\n+\t\t\tthis.stack = stack;\n+\t\t\tthis.finalState = originalState;\n+\t\t}\n+\t\t\n+\t\tpublic PlayerEntity getPlayer()\n+\t\t{\n+\t\t\treturn player;\n+\t\t}\n+\t\t\n+\t\tpublic ItemStack getHeldItemStack()\n+\t\t{\n+\t\t\treturn stack;\n+\t\t}\n+\t\t\n+\t\tpublic void setFinalState(BlockState finalState)", "originalCommit": "659eb51679e339ae14693c20d2d72aeb3e88251d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzU1Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577553", "bodyText": "You can resolve this", "author": "Lanse505", "createdAt": "2020-07-26T21:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzYxOQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577619", "bodyText": "Extends BlockEvent. Cannot use getState. Better to specify what it does though. Can rename setFinalState to setState though if still wanted.", "author": "ChampionAsh5357", "createdAt": "2020-07-26T21:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 6f37e2c26..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -444,47 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate BlockState finalState;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.finalState = originalState;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer()\n-\t\t{\n-\t\t\treturn player;\n-\t\t}\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack()\n-\t\t{\n-\t\t\treturn stack;\n-\t\t}\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState)\n-\t\t{\n-\t\t\tthis.finalState = finalState;\n-\t\t}\n-\t\t\n-\t\tpublic BlockState getFinalState()\n-\t\t{\n-\t\t\treturn finalState;\n-\t\t}\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM3MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577371", "bodyText": "I'd say as above change it to state and getState and setState.", "author": "Lanse505", "createdAt": "2020-07-26T21:47:35Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +444,47 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+    \tprivate final PlayerEntity player;\n+    \tprivate final ItemStack stack;\n+    \tprivate BlockState finalState;\n+    \t\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n+\t\t\tsuper(world, pos, originalState);\n+\t\t\tthis.player = player;\n+\t\t\tthis.stack = stack;\n+\t\t\tthis.finalState = originalState;\n+\t\t}\n+\t\t\n+\t\tpublic PlayerEntity getPlayer()\n+\t\t{\n+\t\t\treturn player;\n+\t\t}\n+\t\t\n+\t\tpublic ItemStack getHeldItemStack()\n+\t\t{\n+\t\t\treturn stack;\n+\t\t}\n+\t\t\n+\t\tpublic void setFinalState(BlockState finalState)\n+\t\t{\n+\t\t\tthis.finalState = finalState;\n+\t\t}\n+\t\t\n+\t\tpublic BlockState getFinalState()", "originalCommit": "659eb51679e339ae14693c20d2d72aeb3e88251d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzU1NA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460577554", "bodyText": "You can resolve this", "author": "Lanse505", "createdAt": "2020-07-26T21:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3ODA4NQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460578085", "bodyText": "Extends BlockEvent. Cannot use getState. Better to specify what it does though.", "author": "ChampionAsh5357", "createdAt": "2020-07-26T21:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3ODEyOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r460578128", "bodyText": "once again, you can mark all of these comments as resolved now Champion :P", "author": "Lanse505", "createdAt": "2020-07-26T21:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 6f37e2c26..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -444,47 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate BlockState finalState;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.finalState = originalState;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer()\n-\t\t{\n-\t\t\treturn player;\n-\t\t}\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack()\n-\t\t{\n-\t\t\treturn stack;\n-\t\t}\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState)\n-\t\t{\n-\t\t\tthis.finalState = finalState;\n-\t\t}\n-\t\t\n-\t\tpublic BlockState getFinalState()\n-\t\t{\n-\t\t\treturn finalState;\n-\t\t}\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NTM1OA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461045358", "bodyText": "Brackets should be on a new line, and four spaces should be used instead of using tabs.", "author": "pupnewfster", "createdAt": "2020-07-27T17:17:18Z", "path": "src/test/java/net/minecraftforge/debug/block/ToolInteractTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package net.minecraftforge.debug.block;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.world.BlockEvent.BlockToolInteractEvent;\n+import net.minecraftforge.fml.common.Mod;\n+\n+@Mod(\"tool_interact_test\")\n+public class ToolInteractTest {", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/test/java/net/minecraftforge/debug/block/ToolInteractTest.java b/src/test/java/net/minecraftforge/debug/block/ToolInteractTest.java\ndeleted file mode 100644\nindex 6d24c4b4a..000000000\n--- a/src/test/java/net/minecraftforge/debug/block/ToolInteractTest.java\n+++ /dev/null\n\n@@ -1,34 +0,0 @@\n-package net.minecraftforge.debug.block;\n-\n-import org.apache.logging.log4j.LogManager;\n-import org.apache.logging.log4j.Logger;\n-\n-import net.minecraftforge.common.MinecraftForge;\n-import net.minecraftforge.event.world.BlockEvent.BlockToolInteractEvent;\n-import net.minecraftforge.fml.common.Mod;\n-\n-@Mod(\"tool_interact_test\")\n-public class ToolInteractTest {\n-\n-\tprivate static final Logger LOGGER = LogManager.getLogger();\n-\t\n-\tpublic ToolInteractTest() {\n-\t\tMinecraftForge.EVENT_BUS.addListener(this::onToolInteraction);\n-\t}\n-\t\n-\tprivate void onToolInteraction(final BlockToolInteractEvent event) {\n-\t\t//Test 1: No Changes, just test if event is called. State and Final State should be the same\n-\t\tLOGGER.info(\"BlockState {} is modified to {} at position {} by {} with {}\", event.getState(), event.getFinalState(), event.getPos(), event.getPlayer(), event.getHeldItemStack());\n-\t\t\n-\t\t\n-\t\t//Test 2: Canceling, nothing in game should change\n-\t\t/*event.setCanceled(true);\n-\t\tLOGGER.info(\"Event has been canceled: {}\", event.isCanceled());\n-\t\t*/\n-\t\t\n-\t\t//Test 3: Altering\n-\t\t/*event.setFinalState(Blocks.ACACIA_FENCE.getDefaultState());\n-\t\tLOGGER.info(\"BlockState {} is modified to {} at position {} by {} with {}\", event.getState(), event.getFinalState(), event.getPos(), event.getPlayer(), event.getHeldItemStack());\n-\t\t*/\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NTk5OA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461045998", "bodyText": "Brackets should be on a new line, and four spaces should be used instead of using tabs. This added event has a mix of tabs/spaces and also brackets on the same line some of which having the bracket the body and the closing bracket even being on the same line.", "author": "pupnewfster", "createdAt": "2020-07-27T17:18:23Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +447,39 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 95b2a4ff3..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -447,39 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate final Set<ToolType> toolTypes;\n-    \tprivate BlockState state;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.state = originalState;\n-\t\t\tthis.toolTypes = toolTypes;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer() { return player; }\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack() { return stack; }\n-\t\t\n-\t\tpublic Set<ToolType> getToolTypes() { return Collections.unmodifiableSet(toolTypes); }\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState) { this.state = finalState; }\n-\t\t\n-\t\tpublic BlockState getFinalState() { return state; }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjgwOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461046808", "bodyText": "Brackets should be on a new line, and four spaces should be used instead of using tabs. Also change Set<ToolType> toolTypes to ToolType toolType (see my main comment for more info)", "author": "pupnewfster", "createdAt": "2020-07-27T17:19:47Z", "path": "src/main/java/net/minecraftforge/event/ForgeEventFactory.java", "diffHunk": "@@ -358,6 +360,13 @@ public static int onHoeUse(ItemUseContext context)\n         }\n         return 0;\n     }\n+    \n+    @Nullable\n+    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/ForgeEventFactory.java b/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\nindex e8e11e492..ce29c1dfc 100644\n--- a/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\n+++ b/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\n\n@@ -360,13 +359,6 @@ public class ForgeEventFactory\n         }\n         return 0;\n     }\n-    \n-    @Nullable\n-    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {\n-    \tBlockToolInteractEvent event = new BlockToolInteractEvent(world, pos, originalState, player, stack, toolTypes);\n-    \tif(MinecraftForge.EVENT_BUS.post(event)) return null;\n-    \treturn event.getFinalState();\n-    }\n \n     public static int onApplyBonemeal(@Nonnull PlayerEntity player, @Nonnull World world, @Nonnull BlockPos pos, @Nonnull BlockState state, @Nonnull ItemStack stack)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Nzg2Nw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461047867", "bodyText": "This should probably be like other events in format:\nreturn MinecraftForge.EVENT_BUS.post(event) ? null : event.getFinalState();", "author": "pupnewfster", "createdAt": "2020-07-27T17:21:30Z", "path": "src/main/java/net/minecraftforge/event/ForgeEventFactory.java", "diffHunk": "@@ -358,6 +360,13 @@ public static int onHoeUse(ItemUseContext context)\n         }\n         return 0;\n     }\n+    \n+    @Nullable\n+    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {\n+    \tBlockToolInteractEvent event = new BlockToolInteractEvent(world, pos, originalState, player, stack, toolTypes);\n+    \tif(MinecraftForge.EVENT_BUS.post(event)) return null;\n+    \treturn event.getFinalState();", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/ForgeEventFactory.java b/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\nindex e8e11e492..ce29c1dfc 100644\n--- a/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\n+++ b/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\n\n@@ -360,13 +359,6 @@ public class ForgeEventFactory\n         }\n         return 0;\n     }\n-    \n-    @Nullable\n-    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {\n-    \tBlockToolInteractEvent event = new BlockToolInteractEvent(world, pos, originalState, player, stack, toolTypes);\n-    \tif(MinecraftForge.EVENT_BUS.post(event)) return null;\n-    \treturn event.getFinalState();\n-    }\n \n     public static int onApplyBonemeal(@Nonnull PlayerEntity player, @Nonnull World world, @Nonnull BlockPos pos, @Nonnull BlockState state, @Nonnull ItemStack stack)\n     {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0ODc1Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461048753", "bodyText": "This line is a mix of spaces and tabs, and should only be spaces.", "author": "pupnewfster", "createdAt": "2020-07-27T17:22:57Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java", "diffHunk": "@@ -778,4 +779,39 @@ default boolean shouldDisplayFluidOverlay(IBlockDisplayReader world, BlockPos po\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n+    {\n+    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n+    }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @param toolTypes The tool types to be considered when performing the action\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n+    {\n+    \treturn getBlockState().getBlock().getToolModifiedState(getBlockState(), world, pos, player, stack, toolTypes);", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\nindex 34b54c15b..81b2a0078 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n\n@@ -779,39 +778,4 @@ public interface IForgeBlockState\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n-    {\n-    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n-    }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @param toolTypes The tool types to be considered when performing the action\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n-    {\n-    \treturn getBlockState().getBlock().getToolModifiedState(getBlockState(), world, pos, player, stack, toolTypes);\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1MDc5OA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461050798", "bodyText": "The implementation of this method is a mess of spaces and tabs, should be all tabs. Brackets should be on their own lines and there should be a space after the if statements before the parenthesis. Also change Set<ToolType> toolTypes to ToolType toolType (see my main comment for more info)", "author": "pupnewfster", "createdAt": "2020-07-27T17:26:20Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java", "diffHunk": "@@ -887,4 +890,38 @@ default boolean shouldDisplayFluidOverlay(BlockState state, IBlockDisplayReader\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param state The current state\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\nindex 120e5637c..6820873bf 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n\n@@ -890,38 +887,4 @@ public interface IForgeBlock\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param state The current state\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n-    {\n-    \tBlockState eventState = net.minecraftforge.event.ForgeEventFactory.onToolUse(state, world, pos, player, stack, toolTypes);\n-    \tif(eventState != state) return eventState;\n-    \tif(toolTypes.contains(ToolType.AXE)) {\n-    \t\tBlock block = AxeItem.BLOCK_STRIPPING_MAP.get(state.getBlock());\n-    \t\tif(block == null && toolTypes.size() == 1) return null;\n-    \t\tif(block != null) return block.getDefaultState().with(RotatedPillarBlock.AXIS, state.get(RotatedPillarBlock.AXIS));\n-    \t}\n-    \tif(toolTypes.contains(ToolType.HOE)) {\n-    \t\tBlockState modifiedState = HoeItem.HOE_LOOKUP.get(state.getBlock());\n-    \t\tif(modifiedState == null && toolTypes.size() == 1) return null;\n-    \t\tif(modifiedState != null) return modifiedState;\n-    \t}\n-    \tif(toolTypes.contains(ToolType.SHOVEL)) {\n-    \t\tBlockState modifiedState = ShovelItem.SHOVEL_LOOKUP.get(state.getBlock());\n-    \t\treturn modifiedState;\n-    \t}\n-    \treturn null;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODQzOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461058438", "bodyText": "This should list it as an example (For example: Used to determine...), as mods can add other tool types so these are not the only cases that may exist.", "author": "pupnewfster", "createdAt": "2020-07-27T17:39:29Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +447,39 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 95b2a4ff3..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -447,39 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate final Set<ToolType> toolTypes;\n-    \tprivate BlockState state;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.state = originalState;\n-\t\t\tthis.toolTypes = toolTypes;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer() { return player; }\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack() { return stack; }\n-\t\t\n-\t\tpublic Set<ToolType> getToolTypes() { return Collections.unmodifiableSet(toolTypes); }\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState) { this.state = finalState; }\n-\t\t\n-\t\tpublic BlockState getFinalState() { return state; }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODU2Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461058563", "bodyText": "This should list it as an example (For example: Used to determine...), as mods can add other tool types so these are not the only cases that may exist.", "author": "pupnewfster", "createdAt": "2020-07-27T17:39:43Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java", "diffHunk": "@@ -887,4 +890,38 @@ default boolean shouldDisplayFluidOverlay(BlockState state, IBlockDisplayReader\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\nindex 120e5637c..6820873bf 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlock.java\n\n@@ -890,38 +887,4 @@ public interface IForgeBlock\n     {\n         return state.getBlock() instanceof BreakableBlock || state.getBlock() instanceof LeavesBlock;\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param state The current state\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(BlockState state, World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n-    {\n-    \tBlockState eventState = net.minecraftforge.event.ForgeEventFactory.onToolUse(state, world, pos, player, stack, toolTypes);\n-    \tif(eventState != state) return eventState;\n-    \tif(toolTypes.contains(ToolType.AXE)) {\n-    \t\tBlock block = AxeItem.BLOCK_STRIPPING_MAP.get(state.getBlock());\n-    \t\tif(block == null && toolTypes.size() == 1) return null;\n-    \t\tif(block != null) return block.getDefaultState().with(RotatedPillarBlock.AXIS, state.get(RotatedPillarBlock.AXIS));\n-    \t}\n-    \tif(toolTypes.contains(ToolType.HOE)) {\n-    \t\tBlockState modifiedState = HoeItem.HOE_LOOKUP.get(state.getBlock());\n-    \t\tif(modifiedState == null && toolTypes.size() == 1) return null;\n-    \t\tif(modifiedState != null) return modifiedState;\n-    \t}\n-    \tif(toolTypes.contains(ToolType.SHOVEL)) {\n-    \t\tBlockState modifiedState = ShovelItem.SHOVEL_LOOKUP.get(state.getBlock());\n-    \t\treturn modifiedState;\n-    \t}\n-    \treturn null;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1ODgwMQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461058801", "bodyText": "This should list it as an example (For example: Used to determine...), as mods can add other tool types so these are not the only cases that may exist.", "author": "pupnewfster", "createdAt": "2020-07-27T17:40:08Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java", "diffHunk": "@@ -778,4 +779,39 @@ default boolean shouldDisplayFluidOverlay(IBlockDisplayReader world, BlockPos po\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n+    {\n+    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n+    }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\nindex 34b54c15b..81b2a0078 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n\n@@ -779,39 +778,4 @@ public interface IForgeBlockState\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n-    {\n-    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n-    }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @param toolTypes The tool types to be considered when performing the action\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n-    {\n-    \treturn getBlockState().getBlock().getToolModifiedState(getBlockState(), world, pos, player, stack, toolTypes);\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODIyOQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461068229", "bodyText": "This method should be removed (see my main comment for more info)", "author": "pupnewfster", "createdAt": "2020-07-27T17:56:40Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java", "diffHunk": "@@ -778,4 +779,39 @@ default boolean shouldDisplayFluidOverlay(IBlockDisplayReader world, BlockPos po\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\nindex 34b54c15b..81b2a0078 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n\n@@ -779,39 +778,4 @@ public interface IForgeBlockState\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n-    {\n-    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n-    }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @param toolTypes The tool types to be considered when performing the action\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n-    {\n-    \treturn getBlockState().getBlock().getToolModifiedState(getBlockState(), world, pos, player, stack, toolTypes);\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODQ5NA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461068494", "bodyText": "Change Set<ToolType> toolTypes to ToolType toolType (see my main comment for more info)", "author": "pupnewfster", "createdAt": "2020-07-27T17:57:09Z", "path": "src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java", "diffHunk": "@@ -778,4 +779,39 @@ default boolean shouldDisplayFluidOverlay(IBlockDisplayReader world, BlockPos po\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n+    {\n+    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n+    }\n+    \n+    /**\n+     * Returns the state that this block should transform into when right clicked by a tool.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * Return null if vanilla behavior should be disabled.\n+     *\n+     * @param world The world\n+     * @param pos The block position in world\n+     * @param player The player clicking the block\n+     * @param stack The stack being used by the player\n+     * @param toolTypes The tool types to be considered when performing the action\n+     * @return The resulting state after the action has been performed\n+     */\n+    @Nullable\n+    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\nindex 34b54c15b..81b2a0078 100644\n--- a/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n+++ b/src/main/java/net/minecraftforge/common/extensions/IForgeBlockState.java\n\n@@ -779,39 +778,4 @@ public interface IForgeBlockState\n     {\n         return getBlockState().getBlock().shouldDisplayFluidOverlay(getBlockState(), world, pos, fluidState);\n     }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack)\n-    {\n-    \treturn getToolModifiedState(world, pos, player, stack, stack.getToolTypes());\n-    }\n-    \n-    /**\n-     * Returns the state that this block should transform into when right clicked by a tool.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * Return null if vanilla behavior should be disabled.\n-     *\n-     * @param world The world\n-     * @param pos The block position in world\n-     * @param player The player clicking the block\n-     * @param stack The stack being used by the player\n-     * @param toolTypes The tool types to be considered when performing the action\n-     * @return The resulting state after the action has been performed\n-     */\n-    @Nullable\n-    default BlockState getToolModifiedState(World world, BlockPos pos, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes)\n-    {\n-    \treturn getBlockState().getBlock().getToolModifiedState(getBlockState(), world, pos, player, stack, toolTypes);\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODk1MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461068951", "bodyText": "Change Set<ToolType> toolTypes to ToolType toolType (see my main comment for more info)", "author": "pupnewfster", "createdAt": "2020-07-27T17:57:57Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +447,39 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+    \tprivate final PlayerEntity player;\n+    \tprivate final ItemStack stack;\n+    \tprivate final Set<ToolType> toolTypes;\n+    \tprivate BlockState state;\n+    \t\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {", "originalCommit": "b54e9b6764c65e68cbcdaf61fd9596b9b7af026c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex 95b2a4ff3..c27550af6 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -447,39 +444,4 @@ public class BlockEvent extends Event\n             return size;\n         }\n     }\n-    \n-    /**\n-     * Fired when when this block is right clicked by a tool to change its state.\n-     * Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n-     * \n-     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n-     * from changing the block's state.\n-     */\n-    @Cancelable\n-    public static class BlockToolInteractEvent extends BlockEvent\n-    {\n-\n-    \tprivate final PlayerEntity player;\n-    \tprivate final ItemStack stack;\n-    \tprivate final Set<ToolType> toolTypes;\n-    \tprivate BlockState state;\n-    \t\n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, Set<ToolType> toolTypes) {\n-\t\t\tsuper(world, pos, originalState);\n-\t\t\tthis.player = player;\n-\t\t\tthis.stack = stack;\n-\t\t\tthis.state = originalState;\n-\t\t\tthis.toolTypes = toolTypes;\n-\t\t}\n-\t\t\n-\t\tpublic PlayerEntity getPlayer() { return player; }\n-\t\t\n-\t\tpublic ItemStack getHeldItemStack() { return stack; }\n-\t\t\n-\t\tpublic Set<ToolType> getToolTypes() { return Collections.unmodifiableSet(toolTypes); }\n-\t\t\n-\t\tpublic void setFinalState(BlockState finalState) { this.state = finalState; }\n-\t\t\n-\t\tpublic BlockState getFinalState() { return state; }\n-    }\n }\n"}}, {"oid": "3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/3c8aea63d6e60143d8561484eb3b25e3025cd5ae", "message": "AxeStrippingMapRegistry and Example\n\nSwitched single stripping map for a stripping map registry similar to how brewing is done.\n\nImplement a system that fits into the current state of the Minecraft code.\n\nDetermine resultant state based on BlockState input and use some simple property copiers to match the data.", "committedDate": "2020-07-27T21:43:00Z", "type": "commit"}, {"oid": "a4b9b84d7f213f1c5059979411f349958abcff2d", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/a4b9b84d7f213f1c5059979411f349958abcff2d", "message": "Update mods.toml", "committedDate": "2020-07-27T21:43:23Z", "type": "commit"}, {"oid": "e5ae443ea1a07a975d09ae9352198622a8c9ae2e", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/e5ae443ea1a07a975d09ae9352198622a8c9ae2e", "message": "Generics fix\n\nIncorrectly ordered them such that the input could extend the output and not vice versa. Fixes this issue.", "committedDate": "2020-07-27T21:43:24Z", "type": "commit"}, {"oid": "83d614585b348ebfc12ec09f1c90e53ebd305c9d", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/83d614585b348ebfc12ec09f1c90e53ebd305c9d", "message": "Fix test case", "committedDate": "2020-07-27T21:43:24Z", "type": "commit"}, {"oid": "0c9f81486f4f957b7cb4e8f66852a2b4435f451b", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/0c9f81486f4f957b7cb4e8f66852a2b4435f451b", "message": "Remove Original Solution\n\nRemove stripping registry framework in place for new one", "committedDate": "2020-07-27T21:43:38Z", "type": "commit"}, {"oid": "a5880b08911a9f6e67484e2342d2f00b0ded20e8", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/a5880b08911a9f6e67484e2342d2f00b0ded20e8", "message": "IForgeBlock Implementation\n\nHooks into all three tools.", "committedDate": "2020-07-27T21:43:39Z", "type": "commit"}, {"oid": "c4a1be60458009067fff7fa9ced097c52aa36756", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/c4a1be60458009067fff7fa9ced097c52aa36756", "message": "Added event hook BlockToolInteractEvent", "committedDate": "2020-07-27T21:43:39Z", "type": "commit"}, {"oid": "e5c9967874ba78aacc0af154475ad9a451263eee", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/e5c9967874ba78aacc0af154475ad9a451263eee", "message": "Added Test Mod to verify event", "committedDate": "2020-07-27T21:43:57Z", "type": "commit"}, {"oid": "83aa6ebb347772c5f2453b98565cd6b9173382cc", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/83aa6ebb347772c5f2453b98565cd6b9173382cc", "message": "finalState -> state and setter/getter one line\n\nExtends BlockEvent so the other reviews are subject for review", "committedDate": "2020-07-27T21:43:58Z", "type": "commit"}, {"oid": "03258da7da7918acc457f7731f22b3f587a7efcf", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/03258da7da7918acc457f7731f22b3f587a7efcf", "message": "Added specific ToolType implementation\n\nAllows the user to specify which tooltypes to consider when using their custom tool.", "committedDate": "2020-07-27T21:43:58Z", "type": "commit"}, {"oid": "7c9621db05f97367f3571443c43458863c08367b", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/7c9621db05f97367f3571443c43458863c08367b", "message": "Format Fixes and Reinventions of Static Helpers\n\nHopefully fixed all formatting errors?\n\nSet<ToolType> -> ToolType\n\nAxe, Hoe, Shovel now have static helpers\n\nUseHoeEvent now deprecated, deprecate onHoeUse?\n\nBlockToolInteractEvent needs to be either left alone to alter vanilla behavior or ported to a generic item use event somehow.", "committedDate": "2020-07-27T21:43:59Z", "type": "commit"}, {"oid": "d676a99f1034d163b194cac9f0756f9ea0289593", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/d676a99f1034d163b194cac9f0756f9ea0289593", "message": "Ternary Operator Fix\n\nUpdated ForgeEventFactory::onToolUse to include ternary operator.", "committedDate": "2020-07-27T21:44:00Z", "type": "commit"}, {"oid": "d676a99f1034d163b194cac9f0756f9ea0289593", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/d676a99f1034d163b194cac9f0756f9ea0289593", "message": "Ternary Operator Fix\n\nUpdated ForgeEventFactory::onToolUse to include ternary operator.", "committedDate": "2020-07-27T21:44:00Z", "type": "forcePushed"}, {"oid": "3f93a32e91333e5d6cc70300dbc00e6bddf60e2a", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/3f93a32e91333e5d6cc70300dbc00e6bddf60e2a", "message": "Merge remote-tracking branch 'upstream/1.16.x' into 1.16.x-stripping", "committedDate": "2020-07-28T17:25:43Z", "type": "commit"}, {"oid": "9441236193199acfd436dca27b5c5f34aee4fa64", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/9441236193199acfd436dca27b5c5f34aee4fa64", "message": "Update mods.toml\n\nExactly what it says to get the test mod loading.", "committedDate": "2020-07-28T17:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1ODkxOQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461758919", "bodyText": "The spacing of this class is still rather screwed up and I believe is a mixture of tabs and spaces", "author": "pupnewfster", "createdAt": "2020-07-28T17:42:18Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +445,55 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * For example: Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+        private final PlayerEntity player;\n+        private final ItemStack stack;\n+        private final ToolType toolType;\n+        private BlockState state;\n+\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, ToolType toolType)", "originalCommit": "3f93a32e91333e5d6cc70300dbc00e6bddf60e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b9dcbd2013465156488121aa5c1ae2ed08efe1b", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex dda4a0dfc..95a024c70 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -462,38 +462,51 @@ public class BlockEvent extends Event\n         private final ToolType toolType;\n         private BlockState state;\n \n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, ToolType toolType)\n-\t    {\n-\t\t    super(world, pos, originalState);\n-\t\t    this.player = player;\n-\t\t    this.stack = stack;\n-\t\t    this.state = originalState;\n-\t\t    this.toolType = toolType;\n-\t\t}\n-\n-\t    public PlayerEntity getPlayer()\n-\t    { \n-\t        return player;\n-\t    }\n-\t\t\n-\t    public ItemStack getHeldItemStack()\n-\t    {\n-\t        return stack;\n-\t    }\n+        public BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, ToolType toolType)\n+        {\n+            super(world, pos, originalState);\n+            this.player = player;\n+            this.stack = stack;\n+            this.state = originalState;\n+            this.toolType = toolType;\n+        }\n \n-\t    public ToolType getToolType()\n-\t    {\n-\t        return toolType;\n-\t    }\n+        /**Gets the player using the tool.*/\n+        public PlayerEntity getPlayer()\n+        {\n+            return player;\n+        }\n \n-\t    public void setFinalState(BlockState finalState)\n-\t    {\n-\t        this.state = finalState;\n+        /**Gets the tool being used.*/\n+        public ItemStack getHeldItemStack()\n+        {\n+            return stack;\n \t    }\n \n-\t    public BlockState getFinalState()\n-\t    {\n-\t        return state;\n-\t    }\n+        /**Gets the current type of the tool being compared against.*/\n+        public ToolType getToolType()\n+        {\n+            return toolType;\n+        }\n+\n+        /**\n+         * Sets the transformed state after tool use.\n+         * If not set, will return the original state.\n+         * This will be bypassed if canceled returning null instead.\n+         * */\n+        public void setFinalState(BlockState finalState)\n+        {\n+            this.state = finalState;\n+        }\n+\n+        /**\n+         * Gets the transformed state after tool use.\n+         * If setFinalState not called, will return the original state.\n+         * This will be bypassed if canceled returning null instead.\n+         * */\n+        public BlockState getFinalState()\n+        {\n+            return state;\n+        }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1OTE2Mw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461759163", "bodyText": "Bracket should be on the next line", "author": "pupnewfster", "createdAt": "2020-07-28T17:42:42Z", "path": "src/main/java/net/minecraftforge/event/ForgeEventFactory.java", "diffHunk": "@@ -359,6 +361,12 @@ public static int onHoeUse(ItemUseContext context)\n         }\n         return 0;\n     }\n+    \n+    @Nullable\n+    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, ToolType toolType) {", "originalCommit": "3f93a32e91333e5d6cc70300dbc00e6bddf60e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b9dcbd2013465156488121aa5c1ae2ed08efe1b", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/ForgeEventFactory.java b/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\nindex 8eb303711..99e3a682c 100644\n--- a/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\n+++ b/src/main/java/net/minecraftforge/event/ForgeEventFactory.java\n\n@@ -363,7 +363,8 @@ public class ForgeEventFactory\n     }\n     \n     @Nullable\n-    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, ToolType toolType) {\n+    public static BlockState onToolUse(BlockState originalState, World world, BlockPos pos, PlayerEntity player, ItemStack stack, ToolType toolType)\n+    {\n         BlockToolInteractEvent event = new BlockToolInteractEvent(world, pos, originalState, player, stack, toolType);\n         return MinecraftForge.EVENT_BUS.post(event) ? null : event.getFinalState();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MDEyMA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/7176#discussion_r461760120", "bodyText": "It probably would be nice to java doc all the methods in this event, but at the very least these two methods should have an explanation of what they do.", "author": "pupnewfster", "createdAt": "2020-07-28T17:44:19Z", "path": "src/main/java/net/minecraftforge/event/world/BlockEvent.java", "diffHunk": "@@ -444,4 +445,55 @@ public PortalSpawnEvent(IWorld world, BlockPos pos, BlockState state, NetherPort\n             return size;\n         }\n     }\n+    \n+    /**\n+     * Fired when when this block is right clicked by a tool to change its state.\n+     * For example: Used to determine if an axe can strip, a shovel can path, or a hoe can till.\n+     * \n+     * This event is {@link Cancelable}. If canceled, this will prevent the tool\n+     * from changing the block's state.\n+     */\n+    @Cancelable\n+    public static class BlockToolInteractEvent extends BlockEvent\n+    {\n+\n+        private final PlayerEntity player;\n+        private final ItemStack stack;\n+        private final ToolType toolType;\n+        private BlockState state;\n+\n+\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, ToolType toolType)\n+\t    {\n+\t\t    super(world, pos, originalState);\n+\t\t    this.player = player;\n+\t\t    this.stack = stack;\n+\t\t    this.state = originalState;\n+\t\t    this.toolType = toolType;\n+\t\t}\n+\n+\t    public PlayerEntity getPlayer()\n+\t    { \n+\t        return player;\n+\t    }\n+\t\t\n+\t    public ItemStack getHeldItemStack()\n+\t    {\n+\t        return stack;\n+\t    }\n+\n+\t    public ToolType getToolType()\n+\t    {\n+\t        return toolType;\n+\t    }\n+\n+\t    public void setFinalState(BlockState finalState)\n+\t    {\n+\t        this.state = finalState;\n+\t    }\n+\n+\t    public BlockState getFinalState()\n+\t    {\n+\t        return state;\n+\t    }", "originalCommit": "3f93a32e91333e5d6cc70300dbc00e6bddf60e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b9dcbd2013465156488121aa5c1ae2ed08efe1b", "chunk": "diff --git a/src/main/java/net/minecraftforge/event/world/BlockEvent.java b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\nindex dda4a0dfc..95a024c70 100644\n--- a/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n+++ b/src/main/java/net/minecraftforge/event/world/BlockEvent.java\n\n@@ -462,38 +462,51 @@ public class BlockEvent extends Event\n         private final ToolType toolType;\n         private BlockState state;\n \n-\t\tpublic BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, ToolType toolType)\n-\t    {\n-\t\t    super(world, pos, originalState);\n-\t\t    this.player = player;\n-\t\t    this.stack = stack;\n-\t\t    this.state = originalState;\n-\t\t    this.toolType = toolType;\n-\t\t}\n-\n-\t    public PlayerEntity getPlayer()\n-\t    { \n-\t        return player;\n-\t    }\n-\t\t\n-\t    public ItemStack getHeldItemStack()\n-\t    {\n-\t        return stack;\n-\t    }\n+        public BlockToolInteractEvent(IWorld world, BlockPos pos, BlockState originalState, PlayerEntity player, ItemStack stack, ToolType toolType)\n+        {\n+            super(world, pos, originalState);\n+            this.player = player;\n+            this.stack = stack;\n+            this.state = originalState;\n+            this.toolType = toolType;\n+        }\n \n-\t    public ToolType getToolType()\n-\t    {\n-\t        return toolType;\n-\t    }\n+        /**Gets the player using the tool.*/\n+        public PlayerEntity getPlayer()\n+        {\n+            return player;\n+        }\n \n-\t    public void setFinalState(BlockState finalState)\n-\t    {\n-\t        this.state = finalState;\n+        /**Gets the tool being used.*/\n+        public ItemStack getHeldItemStack()\n+        {\n+            return stack;\n \t    }\n \n-\t    public BlockState getFinalState()\n-\t    {\n-\t        return state;\n-\t    }\n+        /**Gets the current type of the tool being compared against.*/\n+        public ToolType getToolType()\n+        {\n+            return toolType;\n+        }\n+\n+        /**\n+         * Sets the transformed state after tool use.\n+         * If not set, will return the original state.\n+         * This will be bypassed if canceled returning null instead.\n+         * */\n+        public void setFinalState(BlockState finalState)\n+        {\n+            this.state = finalState;\n+        }\n+\n+        /**\n+         * Gets the transformed state after tool use.\n+         * If setFinalState not called, will return the original state.\n+         * This will be bypassed if canceled returning null instead.\n+         * */\n+        public BlockState getFinalState()\n+        {\n+            return state;\n+        }\n     }\n }\n"}}, {"oid": "6b9dcbd2013465156488121aa5c1ae2ed08efe1b", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6b9dcbd2013465156488121aa5c1ae2ed08efe1b", "message": "Statics and Formats and Restructures, Oh my!\n\nMade individual tool references public and called in IForgeBlock.\n\nMoved event call to IForgeBlockState to prevent removal.\n\nFixed a bunch of formatting errors hopefully...\n\nAdded JavaDocs for all methods in BlockToolInteractEvent.", "committedDate": "2020-07-28T19:35:49Z", "type": "commit"}, {"oid": "df0b611169de0d59770dfea53f90ae6c01397133", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/df0b611169de0d59770dfea53f90ae6c01397133", "message": "Deprecate ForgeEventFactory::onHoeUse\n\nDeprecating references of UseHoeEvent.", "committedDate": "2020-07-28T19:39:06Z", "type": "commit"}, {"oid": "cf5eb295546d3f5ef59f699e9342b7b54728d39d", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/cf5eb295546d3f5ef59f699e9342b7b54728d39d", "message": "Remove useless parameters\n\nThis should've happened earlier, I forgot to...oops.\n\nAll static helpers are reduced to only the state parameter.", "committedDate": "2020-07-28T20:11:08Z", "type": "commit"}, {"oid": "2f07d5bbbb85fd57d6ded20eb5a2114693805118", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/2f07d5bbbb85fd57d6ded20eb5a2114693805118", "message": "Merge branch '1.16.x' into 1.16.x-stripping", "committedDate": "2020-08-03T23:48:41Z", "type": "commit"}]}