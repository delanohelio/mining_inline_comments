{"pr_number": 6630, "pr_title": "Patch EarlyProgressVisualization on mac", "pr_createdAt": "2020-04-17T00:01:27Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/6630", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkzNjQ4MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6630#discussion_r409936481", "bodyText": "This still needs the disable flag, because there is some edgecases like macs in this case that have issues. So there needs to be a way to work around it.\nPlus the entire point of this being off thread is to not block vanilla loading... Having the GL context be created in the main thread has no side effects to Minecraft crating its own GL context in the same thread?", "author": "LexManos", "createdAt": "2020-04-17T01:13:31Z", "path": "src/fmllauncher/java/net/minecraftforge/fml/loading/progress/EarlyProgressVisualization.java", "diffHunk": "@@ -30,9 +30,8 @@\n \n     public void accept(final Dist dist) {\n         if (visualization != null) return;\n-        // We don't show the window on Mac because mac is super mega triple shit and can't handle anything out of the ordinary\n         final boolean ismac = System.getProperty(\"os.name\").toLowerCase(Locale.ROOT).contains(\"mac\");\n-        visualization = dist.isClient() && !ismac && Boolean.parseBoolean(System.getProperty(\"fml.earlyprogresswindow\", \"true\")) ? new ClientVisualization() : new NoVisualization();\n+        visualization = new ClientVisualization(ismac);", "originalCommit": "c3aaad2e069290c17b151737a7611004906a3f90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0NTM1Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6630#discussion_r409945356", "bodyText": "I removed the NoVisualization default/backup as I didn't see a point of keeping a dead and empty class, but that could be added back in if you believe it should still be there. That flag is used to switch between glfwPollEvents being called on the secondary thread or it not being called at all and on which thread the window and context are created on (as Win32 requires polling to be on the same thread that it was created on). If glfwPollEvents could be called during the loading then these two paths could be unified under the glfw's defined behavior.\nThere is no additional blocking going on from these commits, all that is moved to the main thread is the creation and deletion of the context, previously deletion was waited upon anyway so only creation is new work/wait time for the main thread. Actual rendering and context binding still always takes place on a second thread.\nIn regards to the GL context creation, tldr: no. The OpenGL specification describes behavior with multiple contexts and shared contexts, and in this case the entire context and glfw are cleaned up before Minecraft creates it's context. With GLFW it is actually undefined behavior to create an OpenGL context on any thread but the main thread.", "author": "RogueLogix", "createdAt": "2020-04-17T01:45:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkzNjQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0NjM1MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6630#discussion_r409946351", "bodyText": "oh, i see the disable flag you are talking about, i didnt even realize that was there, let me correct that.", "author": "RogueLogix", "createdAt": "2020-04-17T01:49:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkzNjQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk0NzY4MA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6630#discussion_r409947680", "bodyText": "disable flag added back in.", "author": "RogueLogix", "createdAt": "2020-04-17T01:54:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkzNjQ4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "677e2104a0314a7092634a8874472969d4a7cb73", "chunk": "diff --git a/src/fmllauncher/java/net/minecraftforge/fml/loading/progress/EarlyProgressVisualization.java b/src/fmllauncher/java/net/minecraftforge/fml/loading/progress/EarlyProgressVisualization.java\nindex b8626eb54..e0ad06194 100644\n--- a/src/fmllauncher/java/net/minecraftforge/fml/loading/progress/EarlyProgressVisualization.java\n+++ b/src/fmllauncher/java/net/minecraftforge/fml/loading/progress/EarlyProgressVisualization.java\n\n@@ -22,26 +22,49 @@ package net.minecraftforge.fml.loading.progress;\n import net.minecraftforge.api.distmarker.Dist;\n \n import java.util.Locale;\n+import java.util.function.IntSupplier;\n+import java.util.function.LongSupplier;\n+import java.util.function.Supplier;\n \n public enum EarlyProgressVisualization {\n     INSTANCE;\n \n     private Visualization visualization;\n \n-    public void accept(final Dist dist) {\n-        if (visualization != null) return;\n-        final boolean ismac = System.getProperty(\"os.name\").toLowerCase(Locale.ROOT).contains(\"mac\");\n-        visualization = new ClientVisualization(ismac);\n-        visualization.start();\n+    public Runnable accept(final Dist dist) {\n+        visualization = dist.isClient() && Boolean.parseBoolean(System.getProperty(\"fml.earlyprogresswindow\", \"true\")) ? new ClientVisualization() : new NoVisualization();\n+        return visualization.start();\n     }\n \n-    public void join() {\n-        visualization.join();\n+    public long handOffWindow(final IntSupplier width, final IntSupplier height, final Supplier<String> title, final LongSupplier monitor) {\n+        return visualization.handOffWindow(width, height, title, monitor);\n+    }\n+\n+    public boolean replacedWindow() {\n+        return visualization.replacedWindow();\n     }\n \n     interface Visualization {\n-        void start();\n-        void join();\n+        Runnable start();\n+\n+        default long handOffWindow(final IntSupplier width, final IntSupplier height, final Supplier<String> title, LongSupplier monitorSupplier) {\n+            return new LongSupplier() {\n+                @Override\n+                public long getAsLong() {\n+                    return org.lwjgl.glfw.GLFW.glfwCreateWindow(width.getAsInt(), height.getAsInt(), title.get(), monitorSupplier.getAsLong(), 0L);\n+                }\n+            }.getAsLong();\n+        }\n+\n+        default boolean replacedWindow() { return false; }\n     }\n+\n+    private static class NoVisualization implements Visualization {\n+        @Override\n+        public Runnable start() {\n+            return () -> {};\n+        }\n+    }\n+\n }\n \n"}}, {"oid": "677e2104a0314a7092634a8874472969d4a7cb73", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/677e2104a0314a7092634a8874472969d4a7cb73", "message": "move handOffWindow down near start()", "committedDate": "2020-04-26T22:41:53Z", "type": "commit"}, {"oid": "6a0b16817d3d5f4f85d8670c0dd63abc7a488490", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6a0b16817d3d5f4f85d8670c0dd63abc7a488490", "message": "Move ClientVisualization to secondary thread", "committedDate": "2020-04-26T23:06:44Z", "type": "commit"}, {"oid": "6a0b16817d3d5f4f85d8670c0dd63abc7a488490", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6a0b16817d3d5f4f85d8670c0dd63abc7a488490", "message": "Move ClientVisualization to secondary thread", "committedDate": "2020-04-26T23:06:44Z", "type": "forcePushed"}]}