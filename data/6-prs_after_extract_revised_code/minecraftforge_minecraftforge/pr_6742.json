{"pr_number": 6742, "pr_title": "Add custom registry type support to DeferredRegister.", "pr_createdAt": "2020-06-04T03:21:24Z", "pr_url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742", "timeline": [{"oid": "1ebf8e01b4d7d996059859252bcffdd125453751", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/1ebf8e01b4d7d996059859252bcffdd125453751", "message": "Add custom registry type support to DeferredRegister.", "committedDate": "2020-06-04T03:19:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTQ1Ng==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435205456", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n          \n          \n            \n                /**\n          \n          \n            \n                 * Use for vanilla/forge registries. See example above.\n          \n          \n            \n                 */\n          \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)", "author": "Cyborgmas", "createdAt": "2020-06-04T12:12:26Z", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)", "originalCommit": "1ebf8e01b4d7d996059859252bcffdd125453751", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "143fcd0b617a143d6039af828e4500c15a4cd731", "chunk": "diff --git a/src/main/java/net/minecraftforge/registries/DeferredRegister.java b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\nindex ed7570be8..1681f3e2f 100644\n--- a/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n+++ b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\n@@ -64,6 +64,9 @@ public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n         return new DeferredRegister<B>(reg, modid);\n     }\n \n+    /**\n+     * Use for custom registries that are made during the NewRegistry event. \n+     */\n     public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)\n     {\n         return new DeferredRegister<B>(base, modid);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435205723", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)\n          \n          \n            \n                /**\n          \n          \n            \n                 * Use for custom registries that are made during the NewRegistry event. \n          \n          \n            \n                 */\n          \n          \n            \n                public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "author": "Cyborgmas", "createdAt": "2020-06-04T12:12:57Z", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -56,15 +59,35 @@\n  */\n public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n {\n-    private final IForgeRegistry<T> type;\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(IForgeRegistry<B> reg, String modid)\n+    {\n+        return new DeferredRegister<B>(reg, modid);\n+    }\n+\n+    public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)", "originalCommit": "1ebf8e01b4d7d996059859252bcffdd125453751", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxMDY2Mg==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435210662", "bodyText": "In java it isn't @see THING it is {@link THING}", "author": "pupnewfster", "createdAt": "2020-06-04T12:22:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxMjU5MA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435212590", "bodyText": "Hmm it worked though. Gave me a link to the function.", "author": "Cyborgmas", "createdAt": "2020-06-04T12:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIxNDA0NQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435214045", "bodyText": "Ah turns out java also has a @see I just have never actually seen it used before so didn't realize it was actually a thing.", "author": "pupnewfster", "createdAt": "2020-06-04T12:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNTcyMw=="}], "type": "inlineReview", "revised_code": {"commit": "143fcd0b617a143d6039af828e4500c15a4cd731", "chunk": "diff --git a/src/main/java/net/minecraftforge/registries/DeferredRegister.java b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\nindex ed7570be8..1681f3e2f 100644\n--- a/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n+++ b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\n@@ -64,6 +64,9 @@ public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n         return new DeferredRegister<B>(reg, modid);\n     }\n \n+    /**\n+     * Use for custom registries that are made during the NewRegistry event. \n+     */\n     public static <B extends IForgeRegistryEntry<B>> DeferredRegister<B> create(Class<B> base, String modid)\n     {\n         return new DeferredRegister<B>(base, modid);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjAzOA==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435206038", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n          \n          \n            \n                /**\n          \n          \n            \n                 * For custom registries only, fills the {@link #registryFactory} to be called later see {@link #register(IEventBus)}\n          \n          \n            \n                 *\n          \n          \n            \n                 * Calls {@link RegistryBuilder#setName} and {@link RegistryBuilder#setType} automatically.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param name  Path of the registry's {@link ResourceLocation}\n          \n          \n            \n                 * @param sup   Supplier of the RegistryBuilder that is called to fill {@link #type} during the NewRegistry event\n          \n          \n            \n                 * @return      A supplier of the {@link IForgeRegistry} created by the builder.\n          \n          \n            \n                 */\n          \n          \n            \n                public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {", "author": "Cyborgmas", "createdAt": "2020-06-04T12:13:31Z", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -80,13 +103,32 @@ public DeferredRegister(IForgeRegistry<T> reg, String modid)\n         Objects.requireNonNull(name);\n         Objects.requireNonNull(sup);\n         final ResourceLocation key = new ResourceLocation(modid, name);\n-        RegistryObject<I> ret = RegistryObject.of(key, this.type);\n+\n+        RegistryObject<I> ret;\n+        if (this.type != null)\n+            ret = RegistryObject.of(key, this.type);\n+        else if (this.superType != null)\n+            ret = RegistryObject.of(key, this.superType, this.modid);\n+        else\n+            throw new IllegalStateException(\"Could not create RegistryObject in DeferredRegister\");\n+\n         if (entries.putIfAbsent((RegistryObject<T>) ret, () -> sup.get().setRegistryName(key)) != null) {\n             throw new IllegalArgumentException(\"Duplicate registration \" + name);\n         }\n+\n         return ret;\n     }\n \n+    public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {", "originalCommit": "1ebf8e01b4d7d996059859252bcffdd125453751", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d74ef665071c840d117144efa9d58f58badaf5c", "chunk": "diff --git a/src/main/java/net/minecraftforge/registries/DeferredRegister.java b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\nindex ed7570be8..0ef00f562 100644\n--- a/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n+++ b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\n@@ -119,6 +119,15 @@ public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n         return ret;\n     }\n \n+    /**\n+     * For custom registries only, fills the {@link #registryFactory} to be called later see {@link #register(IEventBus)}\n+     *\n+     * Calls {@link RegistryBuilder#setName} and {@link RegistryBuilder#setType} automatically.\n+     *\n+     * @param name  Path of the registry's {@link ResourceLocation}\n+     * @param sup   Supplier of the RegistryBuilder that is called to fill {@link #type} during the NewRegistry event\n+     * @return      A supplier of the {@link IForgeRegistry} created by the builder.\n+     */\n     public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n         if (this.superType == null)\n             throw new IllegalStateException(\"Cannot create a registry without specifying a base type\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIwNjQ5MQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435206491", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * See the example usage.\n          \n          \n            \n                 * See the example usage.\n          \n          \n            \n                 *\n          \n          \n            \n                 * If using this for a custom registry, creates the the registry for you in {@link #createRegistry} using the {@link RegistryEvent.NewRegistry} event\n          \n          \n            \n                 * If no {@link #registryFactory} was provided, listens to the NewRegistry event on {@link EventPriority.LOWEST} to check if the registry was properly created.", "author": "Cyborgmas", "createdAt": "2020-06-04T12:14:25Z", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -80,13 +103,32 @@ public DeferredRegister(IForgeRegistry<T> reg, String modid)\n         Objects.requireNonNull(name);\n         Objects.requireNonNull(sup);\n         final ResourceLocation key = new ResourceLocation(modid, name);\n-        RegistryObject<I> ret = RegistryObject.of(key, this.type);\n+\n+        RegistryObject<I> ret;\n+        if (this.type != null)\n+            ret = RegistryObject.of(key, this.type);\n+        else if (this.superType != null)\n+            ret = RegistryObject.of(key, this.superType, this.modid);\n+        else\n+            throw new IllegalStateException(\"Could not create RegistryObject in DeferredRegister\");\n+\n         if (entries.putIfAbsent((RegistryObject<T>) ret, () -> sup.get().setRegistryName(key)) != null) {\n             throw new IllegalArgumentException(\"Duplicate registration \" + name);\n         }\n+\n         return ret;\n     }\n \n+    public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n+        if (this.superType == null)\n+            throw new IllegalStateException(\"Cannot create a registry without specifying a base type\");\n+        if (this.type != null || this.registryFactory != null)\n+            throw new IllegalStateException(\"Cannot create a registry for a type that already exists\");\n+\n+        this.registryFactory = () -> sup.get().setName(new ResourceLocation(modid, name)).setType(this.superType);\n+        return () -> this.type;\n+    }\n+\n     /**\n      * Adds our event handler to the specified event bus, this MUST be called in order for this class to function.\n      * See the example usage.", "originalCommit": "1ebf8e01b4d7d996059859252bcffdd125453751", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d74ef665071c840d117144efa9d58f58badaf5c", "chunk": "diff --git a/src/main/java/net/minecraftforge/registries/DeferredRegister.java b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\nindex ed7570be8..0ef00f562 100644\n--- a/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n+++ b/src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\n@@ -119,6 +119,15 @@ public class DeferredRegister<T extends IForgeRegistryEntry<T>>\n         return ret;\n     }\n \n+    /**\n+     * For custom registries only, fills the {@link #registryFactory} to be called later see {@link #register(IEventBus)}\n+     *\n+     * Calls {@link RegistryBuilder#setName} and {@link RegistryBuilder#setType} automatically.\n+     *\n+     * @param name  Path of the registry's {@link ResourceLocation}\n+     * @param sup   Supplier of the RegistryBuilder that is called to fill {@link #type} during the NewRegistry event\n+     * @return      A supplier of the {@link IForgeRegistry} created by the builder.\n+     */\n     public Supplier<IForgeRegistry<T>> makeRegistry(final String name, final Supplier<RegistryBuilder<T>> sup) {\n         if (this.superType == null)\n             throw new IllegalStateException(\"Cannot create a registry without specifying a base type\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTQxMQ==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435455411", "bodyText": "As a reference to Class<T> superType is now stored in DeferredRegister would it make more sense to just compare event.getGenericType() to that rather than querying the registry for it?", "author": "pupnewfster", "createdAt": "2020-06-04T18:17:02Z", "path": "src/main/java/net/minecraftforge/registries/DeferredRegister.java", "diffHunk": "@@ -108,7 +156,7 @@ public void register(IEventBus bus)\n \n     private void addEntries(RegistryEvent.Register<?> event)\n     {\n-        if (event.getGenericType() == this.type.getRegistrySuperType())\n+        if (this.type != null && event.getGenericType() == this.type.getRegistrySuperType())", "originalCommit": "1ebf8e01b4d7d996059859252bcffdd125453751", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NzQzMw==", "url": "https://github.com/MinecraftForge/MinecraftForge/pull/6742#discussion_r435467433", "bodyText": "No, because the intent is to not have superType be in here/definitive.\nAs one of the intentions is to be able to be used as a soft link.\nBy referring to the registry by name or some other method.", "author": "LexManos", "createdAt": "2020-06-04T18:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTQxMQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "6d74ef665071c840d117144efa9d58f58badaf5c", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/6d74ef665071c840d117144efa9d58f58badaf5c", "message": "Update src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\nCo-authored-by: Cyborgmas <thpetuaudletang@gmail.com>", "committedDate": "2020-06-12T22:24:54Z", "type": "commit"}, {"oid": "143fcd0b617a143d6039af828e4500c15a4cd731", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/143fcd0b617a143d6039af828e4500c15a4cd731", "message": "Update src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\nCo-authored-by: Cyborgmas <thpetuaudletang@gmail.com>", "committedDate": "2020-06-12T22:26:39Z", "type": "commit"}, {"oid": "41c4905fe9a6418bf53905ebf48b8cca95fce304", "url": "https://github.com/MinecraftForge/MinecraftForge/commit/41c4905fe9a6418bf53905ebf48b8cca95fce304", "message": "Update src/main/java/net/minecraftforge/registries/DeferredRegister.java\n\nCo-authored-by: Cyborgmas <thpetuaudletang@gmail.com>", "committedDate": "2020-06-12T22:27:22Z", "type": "commit"}]}