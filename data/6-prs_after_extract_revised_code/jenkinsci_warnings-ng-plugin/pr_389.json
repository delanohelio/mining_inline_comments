{"pr_number": 389, "pr_title": "[JENKINS-59791] Added remote API for blames info", "pr_createdAt": "2020-02-21T06:23:52Z", "pr_url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389", "timeline": [{"oid": "c95d216c67dd62586a30a3cd5dee2d62f4839380", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/c95d216c67dd62586a30a3cd5dee2d62f4839380", "message": "added BlameApi", "committedDate": "2020-02-21T06:08:13Z", "type": "commit"}, {"oid": "58b21630e7729fa7b3394e56bf4d4604aa6fe2b1", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/58b21630e7729fa7b3394e56bf4d4604aa6fe2b1", "message": "resolved some quality issues", "committedDate": "2020-02-21T06:37:12Z", "type": "commit"}, {"oid": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/57603ba43b63369a513eba8f8a9ae9a8407ecf1c", "message": "refactored IssueApi's constructor to allow nullable param", "committedDate": "2020-02-21T07:07:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382440428", "bodyText": "Wouldn't it be much simpler if we denormalize the Blames and add 3 additional getters to IssueApi? Then BlameApi is not required at all?", "author": "uhafner", "createdAt": "2020-02-21T07:55:36Z", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.jenkins.plugins.analysis.core.restapi;\n+\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+\n+import io.jenkins.plugins.forensics.blame.FileBlame;\n+\n+/**\n+ * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+@ExportedBean\n+public class BlameApi {", "originalCommit": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3MTg4Ng==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382471886", "bodyText": "The reason I add the BlameApi and to take the blame information as object list in each issue in json/xml is that because I saw the getLineStart/End method, so I thought it could be possible that we have multiple blames for an issue which contains multiple lines. Does that situation exist? And about your suggestion, what about if I add some getters like getAuthor(filename, line) in Blames, or just simply access them in IssueApi?", "author": "XiongKezhi", "createdAt": "2020-02-21T09:15:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3Njc4Ng==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382476786", "bodyText": "The reason I add the BlameApi and to make the blame infomations as object list in each issue in json/xml is that because I saw the getLineStart/End method, so I thought it could be possible that we have multiple blames for a issue which contains multiple line. Does that situation really exists? And about your suggestion, what about if I add some getters like getAuthor(filename, line) in Blames, or just simplely access them in IssueApi?\n\nNo, this situation cannot happen since the blames are computed from the issue startLine attribute, so each issue has a 1:1 mapping to the blames currently. It is already denormalized in the model. So it makes sense to just have 3 additional attributes in IssueApi that delegate to the corresponding blame, see https://github.com/jenkinsci/warnings-ng-plugin/blob/master/src/main/java/io/jenkins/plugins/analysis/core/model/BlamesModel.java#L78 for details.", "author": "uhafner", "createdAt": "2020-02-21T09:25:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3NzE2OQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382477169", "bodyText": "BlameApi is not required at all", "author": "uhafner", "createdAt": "2020-02-21T09:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzOTI0MQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382539241", "bodyText": "Thanks for pointing out, I got it.", "author": "XiongKezhi", "createdAt": "2020-02-21T11:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}], "type": "inlineReview", "revised_code": {"commit": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "chunk": "diff --git a/src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java b/src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java\ndeleted file mode 100644\nindex f86a088f0..000000000\n--- a/src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java\n+++ /dev/null\n\n@@ -1,55 +0,0 @@\n-package io.jenkins.plugins.analysis.core.restapi;\n-\n-import org.kohsuke.stapler.export.Exported;\n-import org.kohsuke.stapler.export.ExportedBean;\n-\n-import io.jenkins.plugins.forensics.blame.FileBlame;\n-\n-/**\n- * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n- *\n- * @author Kezhi Xiong\n- */\n-@ExportedBean\n-public class BlameApi {\n-    private final FileBlame fileBlame;\n-    private final int line;\n-\n-    /**\n-     * Creates a new {@link IssueApi}.\n-     *\n-     * @param fileBlame\n-     *         the file blame to expose the properties from\n-     * @param line\n-     *         the line number of the blame in this file\n-     */\n-    public BlameApi(final FileBlame fileBlame, final int line) {\n-        this.fileBlame = fileBlame;\n-        this.line = line;\n-    }\n-\n-    @Exported\n-    public int getLine() {\n-        return line;\n-    }\n-\n-    @Exported\n-    public String getAuthor() {\n-        return fileBlame.getName(line);\n-    }\n-\n-    @Exported\n-    public String getEmail() {\n-        return fileBlame.getEmail(line);\n-    }\n-\n-    @Exported\n-    public String getCommit() {\n-        return fileBlame.getCommit(line);\n-    }\n-\n-    @Exported\n-    public int getTime() {\n-        return fileBlame.getTime(line);\n-    }\n-}\n"}}, {"oid": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "message": "refactored code and deleted the BlameApi for simplicity", "committedDate": "2020-02-21T11:43:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzkxOA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382913918", "bodyText": "Use Blame from #391.", "author": "uhafner", "createdAt": "2020-02-22T13:49:09Z", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -13,15 +16,19 @@\n @ExportedBean\n public class IssueApi {\n     private final Issue issue;\n+    private final FileBlame fileBlame;", "originalCommit": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aef2f6c72df915a99829f9c98bb43db234092378", "chunk": "diff --git a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\nindex 3a15b6b4b..519bad7ee 100644\n--- a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n+++ b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n\n@@ -16,19 +15,18 @@ import io.jenkins.plugins.forensics.blame.FileBlame;\n @ExportedBean\n public class IssueApi {\n     private final Issue issue;\n-    private final FileBlame fileBlame;\n+    private final Blame blame;\n \n     /**\n      * Creates a new {@link IssueApi}.\n-     *\n-     * @param issue\n+     *  @param issue\n      *         the issue to expose the properties from\n-     * @param fileBlame\n-     *          the blame of the issue file\n+     * @param blame\n+     *          the blame which contains this issue\n      */\n-    public IssueApi(final Issue issue, @Nullable final FileBlame fileBlame) {\n+    public IssueApi(final Issue issue, final Blame blame) {\n         this.issue = issue;\n-        this.fileBlame = fileBlame;\n+        this.blame = blame;\n     }\n \n     @Exported\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzkyNg==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382913926", "bodyText": "see above", "author": "uhafner", "createdAt": "2020-02-22T13:49:23Z", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -13,15 +16,19 @@\n @ExportedBean\n public class IssueApi {\n     private final Issue issue;\n+    private final FileBlame fileBlame;\n \n     /**\n      * Creates a new {@link IssueApi}.\n      *\n      * @param issue\n      *         the issue to expose the properties from\n+     * @param fileBlame\n+     *          the blame of the issue file\n      */\n-    public IssueApi(final Issue issue) {\n+    public IssueApi(final Issue issue, @Nullable final FileBlame fileBlame) {", "originalCommit": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aef2f6c72df915a99829f9c98bb43db234092378", "chunk": "diff --git a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\nindex 3a15b6b4b..519bad7ee 100644\n--- a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n+++ b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n\n@@ -16,19 +15,18 @@ import io.jenkins.plugins.forensics.blame.FileBlame;\n @ExportedBean\n public class IssueApi {\n     private final Issue issue;\n-    private final FileBlame fileBlame;\n+    private final Blame blame;\n \n     /**\n      * Creates a new {@link IssueApi}.\n-     *\n-     * @param issue\n+     *  @param issue\n      *         the issue to expose the properties from\n-     * @param fileBlame\n-     *          the blame of the issue file\n+     * @param blame\n+     *          the blame which contains this issue\n      */\n-    public IssueApi(final Issue issue, @Nullable final FileBlame fileBlame) {\n+    public IssueApi(final Issue issue, final Blame blame) {\n         this.issue = issue;\n-        this.fileBlame = fileBlame;\n+        this.blame = blame;\n     }\n \n     @Exported\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzk4MA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382913980", "bodyText": "Using Blame introduced in #391 makes this call much simpler:\nreturn blame.getAuthor();", "author": "uhafner", "createdAt": "2020-02-22T13:50:25Z", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -103,4 +110,43 @@ public String getReference() {\n     public String getFingerprint() {\n         return issue.getFingerprint();\n     }\n+\n+    /**\n+     * Returns the author's name of the blame.\n+     *\n+     * @return the name of the author\n+     */\n+    @Exported\n+    public String getAuthor() {\n+        if (fileBlame != null) {", "originalCommit": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aef2f6c72df915a99829f9c98bb43db234092378", "chunk": "diff --git a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\nindex 3a15b6b4b..519bad7ee 100644\n--- a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n+++ b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n\n@@ -118,10 +116,7 @@ public class IssueApi {\n      */\n     @Exported\n     public String getAuthor() {\n-        if (fileBlame != null) {\n-            return fileBlame.getName(getLineStart());\n-        }\n-        return \"\";\n+        return blame.getAuthor();\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNDA0Nw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382914047", "bodyText": "I think it makes sense to add an addedAt property as well.", "author": "uhafner", "createdAt": "2020-02-22T13:51:11Z", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -103,4 +110,43 @@ public String getReference() {\n     public String getFingerprint() {\n         return issue.getFingerprint();\n     }\n+\n+    /**\n+     * Returns the author's name of the blame.\n+     *\n+     * @return the name of the author\n+     */\n+    @Exported\n+    public String getAuthor() {\n+        if (fileBlame != null) {\n+            return fileBlame.getName(getLineStart());\n+        }\n+        return \"\";\n+    }\n+\n+    /**\n+     * Returns the author's email of the blame.\n+     *\n+     * @return the email of the author\n+     */\n+    @Exported\n+    public String getEmail() {\n+        if (fileBlame != null) {\n+            return fileBlame.getEmail(getLineStart());\n+        }\n+        return \"\";\n+    }\n+\n+    /**\n+     * Returns the commit's sha1 of the blame.\n+     *\n+     * @return the commit's sha1 of the blame\n+     */\n+    @Exported\n+    public String getCommit() {\n+        if (fileBlame != null) {\n+            return fileBlame.getCommit(getLineStart());\n+        }\n+        return \"\";\n+    }", "originalCommit": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aef2f6c72df915a99829f9c98bb43db234092378", "chunk": "diff --git a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\nindex 3a15b6b4b..519bad7ee 100644\n--- a/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n+++ b/src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java\n\n@@ -118,10 +116,7 @@ public class IssueApi {\n      */\n     @Exported\n     public String getAuthor() {\n-        if (fileBlame != null) {\n-            return fileBlame.getName(getLineStart());\n-        }\n-        return \"\";\n+        return blame.getAuthor();\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNDQ2Mg==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382914462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (blames.contains(issue.getFileName())) {\n          \n          \n            \n                        return new IssueApi(issue, blames.getBlame(issue.getFileName()));\n          \n          \n            \n                    }\n          \n          \n            \n                    return new IssueApi(issue, null);\n          \n          \n            \n            return new IssueApi(issue, new Blame(issue, blames));", "author": "uhafner", "createdAt": "2020-02-22T13:57:34Z", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java", "diffHunk": "@@ -33,7 +40,14 @@ public ReportApi(final Report report) {\n     }\n \n     private List<IssueApi> map() {\n-        return report.stream().map(IssueApi::new).collect(Collectors.toList());\n+        return report.stream().map(this::createIssueApi).collect(Collectors.toList());\n+    }\n+\n+    private IssueApi createIssueApi(final Issue issue) {\n+        if (blames.contains(issue.getFileName())) {\n+            return new IssueApi(issue, blames.getBlame(issue.getFileName()));\n+        }\n+        return new IssueApi(issue, null);", "originalCommit": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aef2f6c72df915a99829f9c98bb43db234092378", "chunk": "diff --git a/src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java b/src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java\nindex 4c6aeaf7c..2fcfb9d50 100644\n--- a/src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java\n+++ b/src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java\n\n@@ -44,10 +45,7 @@ public class ReportApi {\n     }\n \n     private IssueApi createIssueApi(final Issue issue) {\n-        if (blames.contains(issue.getFileName())) {\n-            return new IssueApi(issue, blames.getBlame(issue.getFileName()));\n-        }\n-        return new IssueApi(issue, null);\n+        return new IssueApi(issue, new Blame(issue, blames));\n     }\n \n     @Exported\n"}}, {"oid": "bc12d1e64790c0457439e94c0e0ad185a0ce1956", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/bc12d1e64790c0457439e94c0e0ad185a0ce1956", "message": "Merge remote-tracking branch 'upstream/master' into JENKINS-59791", "committedDate": "2020-02-22T15:48:31Z", "type": "commit"}, {"oid": "aef2f6c72df915a99829f9c98bb43db234092378", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/aef2f6c72df915a99829f9c98bb43db234092378", "message": "refactored to use Blame in IssueApi", "committedDate": "2020-02-22T17:53:54Z", "type": "commit"}]}