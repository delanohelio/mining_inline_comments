{"pr_number": 497, "pr_title": "JENKINS-62187: Add UI test for Details Tab", "pr_createdAt": "2020-05-27T21:13:34Z", "pr_url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497", "timeline": [{"oid": "c880783e4b989352c203372b992083ad5edaaac4", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/c880783e4b989352c203372b992083ad5edaaac4", "message": "add details table object", "committedDate": "2020-05-26T16:53:17Z", "type": "commit"}, {"oid": "af5805fc4391f914ffee0c96701bfa7322c64c89", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/af5805fc4391f914ffee0c96701bfa7322c64c89", "message": "refactor details tables creation", "committedDate": "2020-05-26T17:58:38Z", "type": "commit"}, {"oid": "6cac20626a3a7d93ba1a838b39050375570753e1", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/6cac20626a3a7d93ba1a838b39050375570753e1", "message": "refactor details tab objects", "committedDate": "2020-05-26T17:59:23Z", "type": "commit"}, {"oid": "b903b9537d1eecba40a6ebf2030d1c92b20a82b0", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/b903b9537d1eecba40a6ebf2030d1c92b20a82b0", "message": "recreate tests from integration test", "committedDate": "2020-05-26T21:09:04Z", "type": "commit"}, {"oid": "0f142ffde539bcd018cac926aabe35f9be898dd0", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/0f142ffde539bcd018cac926aabe35f9be898dd0", "message": "add test for checkstyle with multiple pages", "committedDate": "2020-05-27T21:05:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyODQ0MA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497#discussion_r432928440", "bodyText": "Hier w\u00e4re es noch nett, den Autor der Integrationstests mit aufzuf\u00fchren.", "author": "uhafner", "createdAt": "2020-05-31T09:39:21Z", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+\n+import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Integration tests for the details tab part of issue overview page.\n+ *\n+ * @author Kevin Richter\n+ * @author Simon Sch\u00f6nwiese\n+ */", "originalCommit": "0f142ffde539bcd018cac926aabe35f9be898dd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "chunk": "diff --git a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\nindex d50888254..53a4f64a2 100644\n--- a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n+++ b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n\n@@ -11,12 +11,14 @@ import org.jenkinsci.test.acceptance.po.Build;\n import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n \n import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+import io.jenkins.plugins.analysis.warnings.CategoriesDetailsTable.Header;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n \n /**\n  * Integration tests for the details tab part of issue overview page.\n  *\n+ * @author Nils Engelbrecht\n  * @author Kevin Richter\n  * @author Simon Sch\u00f6nwiese\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTg3MQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497#discussion_r432929871", "bodyText": "Custom assertions nutzen! Das macht den Source Code leichter lesbar (auch in den anderen Tests).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Collection<Tab> tabs = resultPage.getAvailableTabs();\n          \n          \n            \n                    assertThat(tabs).containsExactlyInAnyOrder(Tab.ISSUES, Tab.TYPES, Tab.CATEGORIES);\n          \n          \n            \n                    assertThat(resultPage).hasOnlyAvailableTabs(Tab.ISSUES, Tab.TYPES, Tab.CATEGORIES);", "author": "uhafner", "createdAt": "2020-05-31T09:57:15Z", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+\n+import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Integration tests for the details tab part of issue overview page.\n+ *\n+ * @author Kevin Richter\n+ * @author Simon Sch\u00f6nwiese\n+ */\n+@WithPlugins(\"warnings-ng\")\n+public class DetailsTabUiTest extends AbstractJUnitTest {\n+\n+    private static final String WARNINGS_PLUGIN_PREFIX = \"/details_tab_test/\";\n+\n+    /**\n+     * When a single warning is being recognized only the issues-tab should be shown.\n+     */\n+    @Test\n+    public void shouldPopulateDetailsTabSingleWarning() {\n+        FreeStyleJob job = createFreeStyleJob(\"java1Warning.txt\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setToolWithPattern(\"Java\", \"**/*.txt\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"java\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsOnlyOnce(Tab.ISSUES);\n+        assertThat(resultPage.getActiveTab()).isEqualTo(Tab.ISSUES);\n+\n+        IssuesDetailsTable issuesDetailsTable = resultPage.openIssuesTable();\n+        assertThat(issuesDetailsTable.getTableRows()).hasSize(1);\n+    }\n+\n+    /**\n+     * When two warnings are being recognized in one file the tabs issues, files and folders should be shown.\n+     */\n+    @Test\n+    public void shouldPopulateDetailsTabMultipleWarnings() {\n+        FreeStyleJob job = createFreeStyleJob(\"java2Warnings.txt\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setToolWithPattern(\"Java\", \"**/*.txt\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"java\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactly(Tab.FOLDERS, Tab.FILES, Tab.ISSUES);\n+\n+        FoldersDetailsTable foldersDetailsTable = resultPage.openFoldersTable();\n+        assertThat(foldersDetailsTable.getTotal()).isEqualTo(2);\n+\n+        FilesDetailsTable filesDetailsTable = resultPage.openFilesTable();\n+        assertThat(filesDetailsTable.getTotal()).isEqualTo(2);\n+\n+        IssuesDetailsTable issuesDetailsTable = resultPage.openIssuesTable();\n+        assertThat(issuesDetailsTable.getTotal()).isEqualTo(2);\n+    }\n+\n+    /**\n+     * When switching details-tab and the page is being reloaded, the previously selected tab should be memorized and\n+     * still be active.\n+     */\n+    @Test\n+    public void shouldMemorizeSelectedTabAsActiveOnPageReload() {\n+        FreeStyleJob job = createFreeStyleJob(\"../checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"checkstyle\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactlyInAnyOrder(Tab.ISSUES, Tab.TYPES, Tab.CATEGORIES);", "originalCommit": "0f142ffde539bcd018cac926aabe35f9be898dd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "chunk": "diff --git a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\nindex d50888254..53a4f64a2 100644\n--- a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n+++ b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n\n@@ -11,12 +11,14 @@ import org.jenkinsci.test.acceptance.po.Build;\n import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n \n import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+import io.jenkins.plugins.analysis.warnings.CategoriesDetailsTable.Header;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n \n /**\n  * Integration tests for the details tab part of issue overview page.\n  *\n+ * @author Nils Engelbrecht\n  * @author Kevin Richter\n  * @author Simon Sch\u00f6nwiese\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTkxNA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497#discussion_r432929914", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import static org.assertj.core.api.Assertions.assertThat;\n          \n          \n            \n            import static io.jenkins.plugins.analysis.warnings.Assertions.*;", "author": "uhafner", "createdAt": "2020-05-31T09:57:43Z", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+\n+import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+\n+import static org.assertj.core.api.Assertions.assertThat;", "originalCommit": "0f142ffde539bcd018cac926aabe35f9be898dd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "chunk": "diff --git a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\nindex d50888254..53a4f64a2 100644\n--- a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n+++ b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n\n@@ -11,12 +11,14 @@ import org.jenkinsci.test.acceptance.po.Build;\n import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n \n import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+import io.jenkins.plugins.analysis.warnings.CategoriesDetailsTable.Header;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n \n /**\n  * Integration tests for the details tab part of issue overview page.\n  *\n+ * @author Nils Engelbrecht\n  * @author Kevin Richter\n  * @author Simon Sch\u00f6nwiese\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDExNg==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497#discussion_r432930116", "bodyText": "Die Header k\u00f6nnte man noch in einen Enum packen (pro Table)", "author": "uhafner", "createdAt": "2020-05-31T10:00:22Z", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+\n+import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Integration tests for the details tab part of issue overview page.\n+ *\n+ * @author Kevin Richter\n+ * @author Simon Sch\u00f6nwiese\n+ */\n+@WithPlugins(\"warnings-ng\")\n+public class DetailsTabUiTest extends AbstractJUnitTest {\n+\n+    private static final String WARNINGS_PLUGIN_PREFIX = \"/details_tab_test/\";\n+\n+    /**\n+     * When a single warning is being recognized only the issues-tab should be shown.\n+     */\n+    @Test\n+    public void shouldPopulateDetailsTabSingleWarning() {\n+        FreeStyleJob job = createFreeStyleJob(\"java1Warning.txt\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setToolWithPattern(\"Java\", \"**/*.txt\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"java\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsOnlyOnce(Tab.ISSUES);\n+        assertThat(resultPage.getActiveTab()).isEqualTo(Tab.ISSUES);\n+\n+        IssuesDetailsTable issuesDetailsTable = resultPage.openIssuesTable();\n+        assertThat(issuesDetailsTable.getTableRows()).hasSize(1);\n+    }\n+\n+    /**\n+     * When two warnings are being recognized in one file the tabs issues, files and folders should be shown.\n+     */\n+    @Test\n+    public void shouldPopulateDetailsTabMultipleWarnings() {\n+        FreeStyleJob job = createFreeStyleJob(\"java2Warnings.txt\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setToolWithPattern(\"Java\", \"**/*.txt\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"java\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactly(Tab.FOLDERS, Tab.FILES, Tab.ISSUES);\n+\n+        FoldersDetailsTable foldersDetailsTable = resultPage.openFoldersTable();\n+        assertThat(foldersDetailsTable.getTotal()).isEqualTo(2);\n+\n+        FilesDetailsTable filesDetailsTable = resultPage.openFilesTable();\n+        assertThat(filesDetailsTable.getTotal()).isEqualTo(2);\n+\n+        IssuesDetailsTable issuesDetailsTable = resultPage.openIssuesTable();\n+        assertThat(issuesDetailsTable.getTotal()).isEqualTo(2);\n+    }\n+\n+    /**\n+     * When switching details-tab and the page is being reloaded, the previously selected tab should be memorized and\n+     * still be active.\n+     */\n+    @Test\n+    public void shouldMemorizeSelectedTabAsActiveOnPageReload() {\n+        FreeStyleJob job = createFreeStyleJob(\"../checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"checkstyle\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactlyInAnyOrder(Tab.ISSUES, Tab.TYPES, Tab.CATEGORIES);\n+\n+        assertThat(resultPage.getActiveTab()).isNotEqualTo(Tab.TYPES);\n+        resultPage.openTab(Tab.TYPES);\n+        assertThat(resultPage.getActiveTab()).isEqualTo(Tab.TYPES);\n+\n+        // reload page\n+        resultPage.open();\n+        assertThat(resultPage.getActiveTab()).isEqualTo(Tab.TYPES);\n+    }\n+\n+    /**\n+     * When having a larger checkstyle result, the table should display all Tabs, tables and pages correctly and should\n+     * be able to change the page.\n+     */\n+    @Test\n+    public void shouldWorkWithMultipleTabsAndPages() {\n+        FreeStyleJob job = createFreeStyleJob(\"../checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"checkstyle\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactlyInAnyOrder(Tab.ISSUES, Tab.TYPES, Tab.CATEGORIES);\n+\n+        CategoriesDetailsTable categoriesDetailsTable = resultPage.openCategoriesTable();\n+        assertThat(categoriesDetailsTable.getHeaders()).containsExactlyInAnyOrder(\"Category\", \"Total\", \"Distribution\");", "originalCommit": "0f142ffde539bcd018cac926aabe35f9be898dd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "chunk": "diff --git a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\nindex d50888254..53a4f64a2 100644\n--- a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n+++ b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n\n@@ -11,12 +11,14 @@ import org.jenkinsci.test.acceptance.po.Build;\n import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n \n import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+import io.jenkins.plugins.analysis.warnings.CategoriesDetailsTable.Header;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n \n /**\n  * Integration tests for the details tab part of issue overview page.\n  *\n+ * @author Nils Engelbrecht\n  * @author Kevin Richter\n  * @author Simon Sch\u00f6nwiese\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDIzMg==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497#discussion_r432930232", "bodyText": "Bitte den JavaDoc gerade ziehen (am besten das Checkstyle Plugin installieren in IntelliJ).", "author": "uhafner", "createdAt": "2020-05-31T10:02:00Z", "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/AbstractDetailsTable.java", "diffHunk": "@@ -10,42 +10,31 @@\n \n import org.jenkinsci.test.acceptance.po.PageObject;\n \n-/**\n- * Class representing an issues-table on the {@link AnalysisResult}.\n- *\n- * @author Stephan Pl\u00f6derl\n- */\n-public class IssuesTable {\n+public abstract class AbstractDetailsTable {", "originalCommit": "0f142ffde539bcd018cac926aabe35f9be898dd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "chunk": "diff --git a/ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/AbstractDetailsTable.java b/ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/AbstractDetailsTable.java\nindex ac45e374b..f21af58ec 100644\n--- a/ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/AbstractDetailsTable.java\n+++ b/ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/AbstractDetailsTable.java\n\n@@ -10,6 +10,12 @@ import org.openqa.selenium.WebElement;\n \n import org.jenkinsci.test.acceptance.po.PageObject;\n \n+/**\n+ * Class representing an issues-table on the {@link AnalysisResult}.\n+ *\n+ * @author Stephan Pl\u00f6derl\n+ * @author Kevin Richter\n+ */\n public abstract class AbstractDetailsTable {\n     private final AnalysisResult resultDetailsPage;\n     private final List<GenericTableRow> tableRows = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDQzMA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/497#discussion_r432930430", "bodyText": "Vielleicht eine Methode reload im AnalysisResult definieren, die open aufruft, dann muss man nicht jedesmal den Kommentar mitschleppen...", "author": "uhafner", "createdAt": "2020-05-31T10:04:08Z", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+\n+import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Integration tests for the details tab part of issue overview page.\n+ *\n+ * @author Kevin Richter\n+ * @author Simon Sch\u00f6nwiese\n+ */\n+@WithPlugins(\"warnings-ng\")\n+public class DetailsTabUiTest extends AbstractJUnitTest {\n+\n+    private static final String WARNINGS_PLUGIN_PREFIX = \"/details_tab_test/\";\n+\n+    /**\n+     * When a single warning is being recognized only the issues-tab should be shown.\n+     */\n+    @Test\n+    public void shouldPopulateDetailsTabSingleWarning() {\n+        FreeStyleJob job = createFreeStyleJob(\"java1Warning.txt\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setToolWithPattern(\"Java\", \"**/*.txt\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"java\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsOnlyOnce(Tab.ISSUES);\n+        assertThat(resultPage.getActiveTab()).isEqualTo(Tab.ISSUES);\n+\n+        IssuesDetailsTable issuesDetailsTable = resultPage.openIssuesTable();\n+        assertThat(issuesDetailsTable.getTableRows()).hasSize(1);\n+    }\n+\n+    /**\n+     * When two warnings are being recognized in one file the tabs issues, files and folders should be shown.\n+     */\n+    @Test\n+    public void shouldPopulateDetailsTabMultipleWarnings() {\n+        FreeStyleJob job = createFreeStyleJob(\"java2Warnings.txt\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setToolWithPattern(\"Java\", \"**/*.txt\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"java\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactly(Tab.FOLDERS, Tab.FILES, Tab.ISSUES);\n+\n+        FoldersDetailsTable foldersDetailsTable = resultPage.openFoldersTable();\n+        assertThat(foldersDetailsTable.getTotal()).isEqualTo(2);\n+\n+        FilesDetailsTable filesDetailsTable = resultPage.openFilesTable();\n+        assertThat(filesDetailsTable.getTotal()).isEqualTo(2);\n+\n+        IssuesDetailsTable issuesDetailsTable = resultPage.openIssuesTable();\n+        assertThat(issuesDetailsTable.getTotal()).isEqualTo(2);\n+    }\n+\n+    /**\n+     * When switching details-tab and the page is being reloaded, the previously selected tab should be memorized and\n+     * still be active.\n+     */\n+    @Test\n+    public void shouldMemorizeSelectedTabAsActiveOnPageReload() {\n+        FreeStyleJob job = createFreeStyleJob(\"../checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+\n+        Build build = job.startBuild().waitUntilFinished();\n+        assertThat(build.isSuccess()).isTrue();\n+\n+        AnalysisResult resultPage = new AnalysisResult(build, \"checkstyle\");\n+        resultPage.open();\n+\n+        Collection<Tab> tabs = resultPage.getAvailableTabs();\n+        assertThat(tabs).containsExactlyInAnyOrder(Tab.ISSUES, Tab.TYPES, Tab.CATEGORIES);\n+\n+        assertThat(resultPage.getActiveTab()).isNotEqualTo(Tab.TYPES);\n+        resultPage.openTab(Tab.TYPES);\n+        assertThat(resultPage.getActiveTab()).isEqualTo(Tab.TYPES);\n+\n+        // reload page\n+        resultPage.open();", "originalCommit": "0f142ffde539bcd018cac926aabe35f9be898dd0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "chunk": "diff --git a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\nindex d50888254..53a4f64a2 100644\n--- a/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n+++ b/ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DetailsTabUiTest.java\n\n@@ -11,12 +11,14 @@ import org.jenkinsci.test.acceptance.po.Build;\n import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n \n import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+import io.jenkins.plugins.analysis.warnings.CategoriesDetailsTable.Header;\n \n-import static org.assertj.core.api.Assertions.assertThat;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n \n /**\n  * Integration tests for the details tab part of issue overview page.\n  *\n+ * @author Nils Engelbrecht\n  * @author Kevin Richter\n  * @author Simon Sch\u00f6nwiese\n  */\n"}}, {"oid": "f5ad77dce28ea52b9993fda4212bf006c8bb5388", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/f5ad77dce28ea52b9993fda4212bf006c8bb5388", "message": "improve comments and refactor tests", "committedDate": "2020-06-02T09:36:05Z", "type": "commit"}, {"oid": "19a5581561e63cdfc7fafc9540823b26a6514d7a", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/19a5581561e63cdfc7fafc9540823b26a6514d7a", "message": "Merge remote-tracking branch 'remotes/origin/master' into ui-tests-details\n\n# Conflicts:\n#\tui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/WarningsPluginUiTest.java", "committedDate": "2020-06-02T19:35:51Z", "type": "commit"}, {"oid": "a685423f135bd424220b8106aa8acee7455eaad0", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/a685423f135bd424220b8106aa8acee7455eaad0", "message": "Use new IssuesDetailsTable in all tests.", "committedDate": "2020-06-02T22:02:37Z", "type": "commit"}, {"oid": "18507a308c72870a8fde648510e33c71ef1c696e", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/18507a308c72870a8fde648510e33c71ef1c696e", "message": "Use a generic properties table.", "committedDate": "2020-06-02T22:46:57Z", "type": "commit"}, {"oid": "d456d16f35f9c721f06a47d4f157fb78421d64ad", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/d456d16f35f9c721f06a47d4f157fb78421d64ad", "message": "Implement more ui tests", "committedDate": "2020-06-09T12:10:50Z", "type": "commit"}, {"oid": "e46bc8e1216b3267dd7dd4feea158e07706133d3", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/e46bc8e1216b3267dd7dd4feea158e07706133d3", "message": "Refactor tests and move code in separate methods", "committedDate": "2020-06-11T20:50:24Z", "type": "commit"}]}