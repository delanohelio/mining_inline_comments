{"pr_number": 1544, "pr_title": "DG-616 Permanent Delete support in SR client", "pr_createdAt": "2020-07-21T20:06:59Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1544", "timeline": [{"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a", "url": "https://github.com/confluentinc/schema-registry/commit/a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a", "message": "DG-616 Permanent Deleet support in SR client", "committedDate": "2020-07-21T20:05:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjE4NQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422185", "bodyText": "Do we need this default ?", "author": "dragosvictor", "createdAt": "2020-07-21T22:20:19Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "originalCommit": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyNTQ2Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458425462", "bodyText": "yes, otherwise other clients in different repo which are dependent on it will fail. Thanks to @rayokota for suggesting this approach.", "author": "maverick64", "createdAt": "2020-07-21T22:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyNTYwOA==", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458425608", "bodyText": "same for others below.", "author": "maverick64", "createdAt": "2020-07-21T22:28:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjE4NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjI0Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422242", "bodyText": "Do we need this default ?", "author": "dragosvictor", "createdAt": "2020-07-21T22:20:27Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n \n-  public Integer deleteSchemaVersion(String subject, String version)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n+      throws IOException, RestClientException {\n+    return deleteSubject(requestProperties, subject, false);\n+  }\n+\n+  public default List<Integer> deleteSubject(Map<String,\n+          String> requestProperties, String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "originalCommit": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjI5Ng==", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422296", "bodyText": "Do we need this default ?", "author": "dragosvictor", "createdAt": "2020-07-21T22:20:35Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n \n-  public Integer deleteSchemaVersion(String subject, String version)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n+      throws IOException, RestClientException {\n+    return deleteSubject(requestProperties, subject, false);\n+  }\n+\n+  public default List<Integer> deleteSubject(Map<String,\n+          String> requestProperties, String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public default Integer deleteSchemaVersion(String subject, String version)\n+      throws IOException, RestClientException {\n+    return deleteSchemaVersion(subject, version, false);\n+  }\n \n-  public Integer deleteSchemaVersion(\n+  public default Integer deleteSchemaVersion(\n+          String subject,\n+          String version,\n+          boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "originalCommit": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjMyOA==", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422328", "bodyText": "Do we need this default ?", "author": "dragosvictor", "createdAt": "2020-07-21T22:20:39Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n \n-  public Integer deleteSchemaVersion(String subject, String version)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n+      throws IOException, RestClientException {\n+    return deleteSubject(requestProperties, subject, false);\n+  }\n+\n+  public default List<Integer> deleteSubject(Map<String,\n+          String> requestProperties, String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public default Integer deleteSchemaVersion(String subject, String version)\n+      throws IOException, RestClientException {\n+    return deleteSchemaVersion(subject, version, false);\n+  }\n \n-  public Integer deleteSchemaVersion(\n+  public default Integer deleteSchemaVersion(\n+          String subject,\n+          String version,\n+          boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public default Integer deleteSchemaVersion(\n       Map<String, String> requestProperties,\n       String subject,\n       String version)\n-      throws IOException, RestClientException;\n+      throws IOException, RestClientException {\n+    return deleteSchemaVersion(requestProperties, subject, version, false);\n+  }\n+\n+  public default Integer deleteSchemaVersion(\n+      Map<String, String> requestProperties,\n+      String subject,\n+      String version,\n+      boolean isPermanent)\n+      throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "originalCommit": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}