{"pr_number": 1449, "pr_title": "DG-402 Add support for packages in ProtobufConverter", "pr_createdAt": "2020-05-13T20:37:50Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1449", "timeline": [{"oid": "9d7ddf4f90f37ec933afdb4401ac0639016c9027", "url": "https://github.com/confluentinc/schema-registry/commit/9d7ddf4f90f37ec933afdb4401ac0639016c9027", "message": "DG-402 Add support for packages in ProtobufConverter", "committedDate": "2020-05-13T20:36:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MDIwNQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1449#discussion_r424740205", "bodyText": "can fullName be just . ?", "author": "maverick64", "createdAt": "2020-05-13T21:25:12Z", "path": "protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java", "diffHunk": "@@ -317,14 +319,36 @@ private DynamicSchema rawSchemaFromConnectSchema(Schema rootElem) {\n     try {\n       DynamicSchema.Builder schema = DynamicSchema.newBuilder();\n       schema.setSyntax(ProtobufSchema.PROTO3);\n-      String name = getNameOrDefault(rootElem.name());\n+      String fullName = getNameOrDefault(rootElem.name());\n+      String[] split = splitName(fullName);\n+      String namespace = split[0];\n+      String name = split[1];\n+      if (namespace != null) {\n+        schema.setPackage(namespace);\n+      }\n       schema.addMessageDefinition(messageDefinitionFromConnectSchema(schema, name, rootElem));\n       return schema.build();\n     } catch (Descriptors.DescriptorValidationException e) {\n       throw new IllegalStateException(e);\n     }\n   }\n \n+  /**\n+   * Split a full dotted-syntax name into a namespace and a single-component name.\n+   */\n+  private static String[] splitName(String fullName) {\n+    String[] result = new String[2];\n+    int indexLastDot = fullName.lastIndexOf('.');", "originalCommit": "9d7ddf4f90f37ec933afdb4401ac0639016c9027", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg0MTAyNw==", "url": "https://github.com/confluentinc/schema-registry/pull/1449#discussion_r424841027", "bodyText": "No", "author": "rayokota", "createdAt": "2020-05-14T02:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MDIwNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NTg1MA==", "url": "https://github.com/confluentinc/schema-registry/pull/1449#discussion_r424745850", "bodyText": "Do we need a test without namespace but have the flag set?", "author": "maverick64", "createdAt": "2020-05-13T21:37:43Z", "path": "protobuf-converter/src/test/java/io/confluent/connect/protobuf/ProtobufConverterTest.java", "diffHunk": "@@ -232,6 +254,25 @@ public void testToConnectDataForValue() throws Exception {\n     assertEquals(expected, result);\n   }\n \n+  @Test\n+  public void testToConnectDataForValueWithNamespace() throws Exception {", "originalCommit": "9d7ddf4f90f37ec933afdb4401ac0639016c9027", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}