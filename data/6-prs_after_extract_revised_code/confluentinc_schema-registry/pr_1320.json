{"pr_number": 1320, "pr_title": "Fixes for map handling in Protobuf plugin", "pr_createdAt": "2020-02-10T01:19:28Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1320", "timeline": [{"oid": "ce41de1c068cc01e3dc49ce3e080f0d5669ba157", "url": "https://github.com/confluentinc/schema-registry/commit/ce41de1c068cc01e3dc49ce3e080f0d5669ba157", "message": "Allow reading from FileDescriptorProto", "committedDate": "2020-02-09T03:39:02Z", "type": "commit"}, {"oid": "b82fb8538b1a86d356b6a6250c6ee643d21cc052", "url": "https://github.com/confluentinc/schema-registry/commit/b82fb8538b1a86d356b6a6250c6ee643d21cc052", "message": "Fix map handling", "committedDate": "2020-02-09T16:48:02Z", "type": "commit"}, {"oid": "fe7d03e4666abbb66aaca03edde06d42d3a1b90f", "url": "https://github.com/confluentinc/schema-registry/commit/fe7d03e4666abbb66aaca03edde06d42d3a1b90f", "message": "Minor fixes", "committedDate": "2020-02-09T20:26:26Z", "type": "commit"}, {"oid": "c399bfba8582d4d4a1fd967bbd1c52437a6b839c", "url": "https://github.com/confluentinc/schema-registry/commit/c399bfba8582d4d4a1fd967bbd1c52437a6b839c", "message": "Upgrade to wire 3.0.3", "committedDate": "2020-02-09T20:37:50Z", "type": "commit"}, {"oid": "a85e0c28b9339d5846865ea79b49306624dd4b59", "url": "https://github.com/confluentinc/schema-registry/commit/a85e0c28b9339d5846865ea79b49306624dd4b59", "message": "Ensure map entries are generated last", "committedDate": "2020-02-09T23:28:04Z", "type": "commit"}, {"oid": "f1bbf1043f417a671c2aa3ab4e11b6dfcff97778", "url": "https://github.com/confluentinc/schema-registry/commit/f1bbf1043f417a671c2aa3ab4e11b6dfcff97778", "message": "Minor API cleanup", "committedDate": "2020-02-09T23:33:44Z", "type": "commit"}, {"oid": "7290de5b15471edacab1ef3a15a325bc5380b57e", "url": "https://github.com/confluentinc/schema-registry/commit/7290de5b15471edacab1ef3a15a325bc5380b57e", "message": "Minor code cleanup", "committedDate": "2020-02-10T00:05:06Z", "type": "commit"}, {"oid": "1a459f1ffe0999eef6f4d49f339e3bea900243f0", "url": "https://github.com/confluentinc/schema-registry/commit/1a459f1ffe0999eef6f4d49f339e3bea900243f0", "message": "Minor code cleanup", "committedDate": "2020-02-10T01:20:01Z", "type": "commit"}, {"oid": "b8bc69230c00d49aa09ee86d9c116342bd2fec20", "url": "https://github.com/confluentinc/schema-registry/commit/b8bc69230c00d49aa09ee86d9c116342bd2fec20", "message": "Add format query param to get by id", "committedDate": "2020-02-11T17:31:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyMTIyOQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1320#discussion_r377921229", "bodyText": "I think it might be a bit nicer to have another overload for the default format: 'text' (in addition to empty or null).\nIn the clients, I feel like I want an enum for specifying this: SchemaFormat.Text/Serialized. Less flexible structure than a string, but I don't feel it'll ever be too limiting?", "author": "mhowlett", "createdAt": "2020-02-11T21:51:20Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -866,13 +877,19 @@ public SchemaString get(int id, boolean fetchMaxId) throws SchemaRegistryExcepti\n     }\n     SchemaString schemaString = new SchemaString();\n     schemaString.setSchemaType(schema.getSchemaType());\n-    schemaString.setSchemaString(schema.getSchema());\n-    List<SchemaReference> refs = schema.getReferences();\n-    if (refs != null) {\n-      schemaString.setReferences(refs.stream()\n-          .map(ref -> new io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference(\n-              ref.getName(), ref.getSubject(), ref.getVersion()))\n-          .collect(Collectors.toList()));\n+    List<io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference> refs =\n+        schema.getReferences() != null\n+        ? schema.getReferences().stream()\n+            .map(ref -> new io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference(\n+                ref.getName(), ref.getSubject(), ref.getVersion()))\n+          .collect(Collectors.toList())\n+        : null;\n+    schemaString.setReferences(refs);\n+    if (format != null && !format.trim().isEmpty()) {\n+      ParsedSchema parsedSchema = parseSchema(schema.getSchemaType(), schema.getSchema(), refs);\n+      schemaString.setSchemaString(parsedSchema.formattedString(format));\n+    } else {", "originalCommit": "b8bc69230c00d49aa09ee86d9c116342bd2fec20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkzNDc0OA==", "url": "https://github.com/confluentinc/schema-registry/pull/1320#discussion_r377934748", "bodyText": "I was also thinking of possibly having a pretty-print option as well, in the future.", "author": "rayokota", "createdAt": "2020-02-11T22:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyMTIyOQ=="}], "type": "inlineReview", "revised_code": null}]}