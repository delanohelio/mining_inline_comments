{"pr_number": 1495, "pr_title": "DG-402 Missed some places where dotted names can occur", "pr_createdAt": "2020-06-16T00:42:24Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1495", "timeline": [{"oid": "981d0bd175606d2eab37c0465d4e5e35466b93b7", "url": "https://github.com/confluentinc/schema-registry/commit/981d0bd175606d2eab37c0465d4e5e35466b93b7", "message": "DG-402 Missed some places where dotted names can occur", "committedDate": "2020-06-16T00:41:05Z", "type": "commit"}, {"oid": "aa4002fa3e572cace8485a845fd3a4b5b2d0aa26", "url": "https://github.com/confluentinc/schema-registry/commit/aa4002fa3e572cace8485a845fd3a4b5b2d0aa26", "message": "Fix comment", "committedDate": "2020-06-16T00:44:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMzQ0OA==", "url": "https://github.com/confluentinc/schema-registry/pull/1495#discussion_r440523448", "bodyText": "renamed to getUnqualifiedName?", "author": "maverick64", "createdAt": "2020-06-16T00:46:19Z", "path": "protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java", "diffHunk": "@@ -983,6 +968,35 @@ private static boolean isMapDescriptor(\n         && fieldDescriptors.get(1).getName().equals(VALUE_FIELD);\n   }\n \n+  /**\n+   * Split a full dotted-syntax name into a namespace and a single-component name.\n+   */\n+  private static String[] splitName(String fullName) {\n+    String[] result = new String[2];\n+    int indexLastDot = fullName.lastIndexOf('.');\n+    if (indexLastDot >= 0) {\n+      result[0] = fullName.substring(0, indexLastDot);\n+      result[1] = fullName.substring(indexLastDot + 1);\n+    } else {\n+      result[0] = null;\n+      result[1] = fullName;\n+    }\n+    return result;\n+  }\n+\n+  /**\n+   * Strip the namespace for a name.\n+   */\n+  private String unqualifyName(String name) {", "originalCommit": "981d0bd175606d2eab37c0465d4e5e35466b93b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MjcyMg==", "url": "https://github.com/confluentinc/schema-registry/pull/1495#discussion_r440542722", "bodyText": "Done", "author": "rayokota", "createdAt": "2020-06-16T01:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMzQ0OA=="}], "type": "inlineReview", "revised_code": {"commit": "1ac1d8940f8a74ffd5df9c56cdb39405d04efbf0", "chunk": "diff --git a/protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java b/protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java\nindex 76fe0f06e..6db522507 100644\n--- a/protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java\n+++ b/protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java\n\n@@ -985,9 +986,9 @@ public class ProtobufData {\n   }\n \n   /**\n-   * Strip the namespace for a name.\n+   * Strip the namespace from a name.\n    */\n-  private String unqualifyName(String name) {\n+  private String getUnqualifiedName(String name) {\n     String fullName = getNameOrDefault(name);\n     int indexLastDot = fullName.lastIndexOf('.');\n     if (indexLastDot >= 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMzY3OQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1495#discussion_r440523679", "bodyText": "is there any UT covering this case?", "author": "maverick64", "createdAt": "2020-06-16T00:47:23Z", "path": "protobuf-converter/src/main/java/io/confluent/connect/protobuf/ProtobufData.java", "diffHunk": "@@ -376,22 +376,6 @@ private DynamicSchema rawSchemaFromConnectSchema(Schema rootElem) {\n     }\n   }\n \n-  /**\n-   * Split a full dotted-syntax name into a namespace and a single-component name.\n-   */\n-  private static String[] splitName(String fullName) {\n-    String[] result = new String[2];\n-    int indexLastDot = fullName.lastIndexOf('.');\n-    if (indexLastDot >= 0) {\n-      result[0] = fullName.substring(0, indexLastDot);\n-      result[1] = fullName.substring(indexLastDot + 1);\n-    } else {\n-      result[0] = null;\n-      result[1] = fullName;\n-    }\n-    return result;\n-  }\n-\n   private MessageDefinition messageDefinitionFromConnectSchema(", "originalCommit": "981d0bd175606d2eab37c0465d4e5e35466b93b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0Mjc1Nw==", "url": "https://github.com/confluentinc/schema-registry/pull/1495#discussion_r440542757", "bodyText": "Added a unit test", "author": "rayokota", "createdAt": "2020-06-16T01:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMzY3OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1ac1d8940f8a74ffd5df9c56cdb39405d04efbf0", "url": "https://github.com/confluentinc/schema-registry/commit/1ac1d8940f8a74ffd5df9c56cdb39405d04efbf0", "message": "Minor renaming", "committedDate": "2020-06-16T00:56:43Z", "type": "commit"}, {"oid": "302fc26f76048eab1a4c75cc0a3953116ad4624b", "url": "https://github.com/confluentinc/schema-registry/commit/302fc26f76048eab1a4c75cc0a3953116ad4624b", "message": "Add unit test", "committedDate": "2020-06-16T01:54:10Z", "type": "commit"}]}