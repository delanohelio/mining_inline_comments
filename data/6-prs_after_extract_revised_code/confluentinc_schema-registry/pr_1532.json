{"pr_number": 1532, "pr_title": "DG-540 Add batch get schema API", "pr_createdAt": "2020-07-09T22:25:22Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1532", "timeline": [{"oid": "8477ea15130992c2c2237d6e3953611dbbef87f7", "url": "https://github.com/confluentinc/schema-registry/commit/8477ea15130992c2c2237d6e3953611dbbef87f7", "message": "DG-540 Add batch schema API", "committedDate": "2020-07-09T22:03:57Z", "type": "commit"}, {"oid": "fa28e424774123594e2313122384de3d015c64cb", "url": "https://github.com/confluentinc/schema-registry/commit/fa28e424774123594e2313122384de3d015c64cb", "message": "Add unit test", "committedDate": "2020-07-09T22:22:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMzcyMw==", "url": "https://github.com/confluentinc/schema-registry/pull/1532#discussion_r452523723", "bodyText": "Don't need to sort as keys are already pre-sorted", "author": "rayokota", "createdAt": "2020-07-09T22:26:07Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1341,14 +1344,36 @@ public void setModeOrForward(String subject, Mode mode, Map<String, String> head\n \n   private List<Schema> sortSchemasByVersion(Iterator<SchemaRegistryValue> schemas,\n                                             boolean returnDeletedSchemas) {\n+    return sortSchemasByVersion(schemas, returnDeletedSchemas, false);\n+  }\n+\n+  private List<Schema> sortSchemasByVersion(Iterator<SchemaRegistryValue> schemas,\n+                                            boolean returnDeletedSchemas,\n+                                            boolean returnLatestOnly) {\n     List<Schema> schemaList = new ArrayList<>();\n+    Schema previousSchema = null;\n     while (schemas.hasNext()) {\n       SchemaValue schemaValue = (SchemaValue) schemas.next();\n-      if (returnDeletedSchemas || !schemaValue.isDeleted()) {\n-        schemaList.add(getSchemaEntityFromSchemaValue(schemaValue));\n+      if (!returnDeletedSchemas && schemaValue.isDeleted()) {\n+        continue;\n+      }\n+      Schema schema = getSchemaEntityFromSchemaValue(schemaValue);\n+      if (returnLatestOnly) {\n+        if (previousSchema != null && !schema.getSubject().equals(previousSchema.getSubject())) {\n+          schemaList.add(previousSchema);\n+        }\n+      } else {\n+        schemaList.add(schema);\n+      }\n+      previousSchema = schema;\n+    }\n+    if (returnLatestOnly && previousSchema != null) {\n+      // handle last subject\n+      Schema lastSchema = schemaList.isEmpty() ? null : schemaList.get(schemaList.size() - 1);\n+      if (lastSchema == null || !lastSchema.getSubject().equals(previousSchema.getSubject())) {\n+        schemaList.add(previousSchema);\n       }\n     }\n-    Collections.sort(schemaList);", "originalCommit": "fa28e424774123594e2313122384de3d015c64cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMzgxMA==", "url": "https://github.com/confluentinc/schema-registry/pull/1532#discussion_r452523810", "bodyText": "Don't need to sort as keys are already pre-sorted", "author": "rayokota", "createdAt": "2020-07-09T22:26:22Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1358,7 +1383,6 @@ public void setModeOrForward(String subject, Mode mode, Map<String, String> head\n       SchemaValue schemaValue = (SchemaValue) schemas.next();\n       schemaList.add(schemaValue);\n     }\n-    Collections.sort(schemaList);", "originalCommit": "fa28e424774123594e2313122384de3d015c64cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}