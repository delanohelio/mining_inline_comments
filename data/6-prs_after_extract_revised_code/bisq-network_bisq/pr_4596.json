{"pr_number": 4596, "pr_title": "Simplify GrpcOffersService#createOffer (refactor)", "pr_createdAt": "2020-10-05T16:00:03Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4596", "timeline": [{"oid": "dd67acc153bf53d4210b4f9d2ee6c184d2fdf3a1", "url": "https://github.com/bisq-network/bisq/commit/dd67acc153bf53d4210b4f9d2ee6c184d2fdf3a1", "message": "Simplify GrpcOffersService#createOffer (refactor)\n\nPush the placeOffer call down into CoreOffersService#createOffer,\nand use a countdown latch to wait for async placeOffer to\ncomplete.", "committedDate": "2020-10-05T15:23:54Z", "type": "commit"}, {"oid": "2d34730bd8530a141ef1255cf690c7584937889b", "url": "https://github.com/bisq-network/bisq/commit/2d34730bd8530a141ef1255cf690c7584937889b", "message": "Fix method name", "committedDate": "2020-10-05T16:51:48Z", "type": "commit"}, {"oid": "3f3f4f06f52d5fb60e90248d154ac72d6b076cf2", "url": "https://github.com/bisq-network/bisq/commit/3f3f4f06f52d5fb60e90248d154ac72d6b076cf2", "message": "Use consumer::accept instead of a countdown latch\n\nThis is more readable and stylistically consistent.", "committedDate": "2020-10-05T17:32:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk4ODAzNA==", "url": "https://github.com/bisq-network/bisq/pull/4596#discussion_r499988034", "bodyText": "I think it would be more clear to not return the offer, as it is passed via the Consumer<Offer> resultHandler.", "author": "chimp1984", "createdAt": "2020-10-06T03:38:31Z", "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -87,15 +88,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n     }\n \n     // Create and place new offer.\n-    Offer createOffer(String currencyCode,\n-                      String directionAsString,\n-                      String priceAsString,\n-                      boolean useMarketBasedPrice,\n-                      double marketPriceMargin,\n-                      long amountAsLong,\n-                      long minAmountAsLong,\n-                      double buyerSecurityDeposit,\n-                      String paymentAccountId) {\n+    Offer createAndPlaceOffer(String currencyCode,", "originalCommit": "3f3f4f06f52d5fb60e90248d154ac72d6b076cf2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyNjUyNg==", "url": "https://github.com/bisq-network/bisq/pull/4596#discussion_r500326526", "bodyText": "Clever.   Fix is in commit 30e6dae.", "author": "ghubstan", "createdAt": "2020-10-06T14:21:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk4ODAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "30e6dae90b0140dbcae90ecf664875e8fd95f047", "chunk": "diff --git a/core/src/main/java/bisq/core/api/CoreOffersService.java b/core/src/main/java/bisq/core/api/CoreOffersService.java\nindex f94db1b95a..ded8287ea9 100644\n--- a/core/src/main/java/bisq/core/api/CoreOffersService.java\n+++ b/core/src/main/java/bisq/core/api/CoreOffersService.java\n\n@@ -88,16 +88,16 @@ class CoreOffersService {\n     }\n \n     // Create and place new offer.\n-    Offer createAndPlaceOffer(String currencyCode,\n-                              String directionAsString,\n-                              String priceAsString,\n-                              boolean useMarketBasedPrice,\n-                              double marketPriceMargin,\n-                              long amountAsLong,\n-                              long minAmountAsLong,\n-                              double buyerSecurityDeposit,\n-                              String paymentAccountId,\n-                              Consumer<Offer> resultHandler) {\n+    void createAndPlaceOffer(String currencyCode,\n+                             String directionAsString,\n+                             String priceAsString,\n+                             boolean useMarketBasedPrice,\n+                             double marketPriceMargin,\n+                             long amountAsLong,\n+                             long minAmountAsLong,\n+                             double buyerSecurityDeposit,\n+                             String paymentAccountId,\n+                             Consumer<Offer> resultHandler) {\n         String upperCaseCurrencyCode = currencyCode.toUpperCase();\n         String offerId = createOfferService.getRandomOfferId();\n         Direction direction = Direction.valueOf(directionAsString.toUpperCase());\n"}}, {"oid": "30e6dae90b0140dbcae90ecf664875e8fd95f047", "url": "https://github.com/bisq-network/bisq/commit/30e6dae90b0140dbcae90ecf664875e8fd95f047", "message": "Change return type to void\n\nThe prior Offer return type is redundant and confusing given the\nnew offer is passed up via the Consumer<Offer> resultHandler.", "committedDate": "2020-10-06T14:19:08Z", "type": "commit"}]}