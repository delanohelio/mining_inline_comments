{"pr_number": 4672, "pr_title": "Refactor offer/trade related classes in core and desktop", "pr_createdAt": "2020-10-20T18:13:29Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4672", "timeline": [{"oid": "ab6be235162764d3a3af0a3ad4b45a4ca3864848", "url": "https://github.com/bisq-network/bisq/commit/ab6be235162764d3a3af0a3ad4b45a4ca3864848", "message": "Refactor offer/trade related classes in core and desktop\n\nThese refactoring changes are for reducing existing and potential\nduplication coming with the addition of new trading protocol support\nin the gRPC API.  Some minor styling and logic simplification changes\nare also include.\n\n- Convert OfferUtil to injected singleton, and move various offer related\n  utility methods into it.\n\n- Delete both MakerFeeProvider classes, which were wrappers around the same\n  static old OfferUtil method.\n\n- Inject OfferUtil into CreateOfferDataModel, CreateOfferViewModel,\n  TakeOfferDataModel, TakeOfferViewModel, MutableOfferDataModel,\n  MutableOfferViewModel, OfferDataModel, EditOfferDataModel,\n  EditOfferViewModel\n\n- Refactor TakeOfferViewModel\n\n\tUse OfferUtil, remove unused fields & methods.\n\tMade minor logic simplification, style and formatting changes.\n\n- MutableOfferDataModel\n\n\tMade minor logic simplification, style and formatting changes.\n\n- MutableOfferView uses new paymentAccount.isHalCashAccount().\n\n- MutableOfferViewModel\n\n\tRefactored to use new VolumeUtil, CoinUtil, OfferUtil.\n\tRemoved unused fields & accessors.\n\tMade minor style change.\n\n- Refactored OfferDataModel to use new OfferUtil\n\n- Refactor CreateOfferService\n\n\tInject and use OfferUtil\n\tMove some utility methods to OfferUtil\n\tRemove unused fields\n\n- Offer\n\n\tRefactored to use new VolumeUtil for volume calculations.\n\tMade stateProperty and errorMessageProperty fields private.\n\n- PaymentAccount\n\n\tMoved isHalCashAccount type check to this class.\n\tMoved getTradeCurrency logic to this class.\n\n- Contract, radeStatistics2, TradeStatistics3\n\n\tRefactored to use new VolumeUtil for volume calculations.\n\n- Trade\n\n\tRefactored to use new VolumeUtil for volume calculations.\n\tMade minor logic simplification, style and formatting changes.\n\n- CoinUtil\n\n\tMoved some coin utility methods into this class\n\n- CoinUtilTest\n\n\tMoved (coin related) tests from CoinCryptoUtilsTest and OfferUtilTest\n\tinto CoinUtilTest, and deleted OfferUtilTest, CoinCryptoUtilsTest.\n\n- Adjust create and edit offer tests to model refactoring", "committedDate": "2020-10-20T18:06:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMxODA0NQ==", "url": "https://github.com/bisq-network/bisq/pull/4672#discussion_r509318045", "bodyText": "Shouldn't these be isNonZero...?", "author": "sqrrm", "createdAt": "2020-10-21T14:07:07Z", "path": "desktop/src/main/java/bisq/desktop/main/offer/MutableOfferDataModel.java", "diffHunk": "@@ -133,6 +133,9 @@\n     protected boolean allowAmountUpdate = true;\n     private final TradeStatisticsManager tradeStatisticsManager;\n \n+    private final Predicate<ObjectProperty<Coin>> isPositiveAmount = (c) -> c.get() != null && !c.get().isZero();\n+    private final Predicate<ObjectProperty<Price>> isPositivePrice = (p) -> p.get() != null && !p.get().isZero();\n+    private final Predicate<ObjectProperty<Volume>> isPositiveVolume = (v) -> v.get() != null && !v.get().isZero();", "originalCommit": "ab6be235162764d3a3af0a3ad4b45a4ca3864848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwOTQyNQ==", "url": "https://github.com/bisq-network/bisq/pull/4672#discussion_r509409425", "bodyText": "Fixed in 2ae6bfa, sub branch 5-suggested-changes.  Fixes for this PR will go into a separate PR.", "author": "ghubstan", "createdAt": "2020-10-21T15:58:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMxODA0NQ=="}], "type": "inlineReview", "revised_code": null}]}