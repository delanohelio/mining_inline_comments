{"pr_number": 4525, "pr_title": "Refactor apitest for api calls to any daemon type", "pr_createdAt": "2020-09-14T15:52:35Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4525", "timeline": [{"oid": "359037a3ba9358282b9cf6ba687656a809a4a78a", "url": "https://github.com/bisq-network/bisq/commit/359037a3ba9358282b9cf6ba687656a809a4a78a", "message": "Move version service proto def to bottom of grpc.proto", "committedDate": "2020-09-14T13:43:31Z", "type": "commit"}, {"oid": "15b60445873304e614be6d9ba20c9e86181f6cba", "url": "https://github.com/bisq-network/bisq/commit/15b60445873304e614be6d9ba20c9e86181f6cba", "message": "Add dispute agents service proto def to grpc.proto", "committedDate": "2020-09-14T13:44:19Z", "type": "commit"}, {"oid": "bbf4f09181746759961f5404f241fa183dd6c5ec", "url": "https://github.com/bisq-network/bisq/commit/bbf4f09181746759961f5404f241fa183dd6c5ec", "message": "Add core impl for registering dispute agents\n\nThis change supports registering mediators and refund agents on\ndaemons running on regest or testnet chains.  Registering\narbitrators is not supported.", "committedDate": "2020-09-14T14:04:10Z", "type": "commit"}, {"oid": "3386b43e52de5a0eae01ac3612c63e422300d293", "url": "https://github.com/bisq-network/bisq/commit/3386b43e52de5a0eae01ac3612c63e422300d293", "message": "Add GrpcDisputeAgentsService to GrpcServer", "committedDate": "2020-09-14T14:39:36Z", "type": "commit"}, {"oid": "304047eacaae2f95760d3b336a9d2affcc8bc4be", "url": "https://github.com/bisq-network/bisq/commit/304047eacaae2f95760d3b336a9d2affcc8bc4be", "message": "Create GrpcDisputeAgentsService stub", "committedDate": "2020-09-14T14:40:22Z", "type": "commit"}, {"oid": "899bea8df5cbd42e85a2ace4b61d2e9ebf2e709f", "url": "https://github.com/bisq-network/bisq/commit/899bea8df5cbd42e85a2ace4b61d2e9ebf2e709f", "message": "Replace \"localhost\" strings with InetAddress.getLoopbackAddress calls", "committedDate": "2020-09-14T14:53:02Z", "type": "commit"}, {"oid": "148a0f120015e6923a5bc517aa114c879467a384", "url": "https://github.com/bisq-network/bisq/commit/148a0f120015e6923a5bc517aa114c879467a384", "message": "Refactor test cases to use arbitrary grpc stubs\n\nMost test cases send requests to the alicedaemon, but new test cases\nwill need to be able to send requests to arbitration and bob daemons.", "committedDate": "2020-09-14T15:09:04Z", "type": "commit"}, {"oid": "8384dd80049a5e1f05212e78b15551eb2c3f81e1", "url": "https://github.com/bisq-network/bisq/commit/8384dd80049a5e1f05212e78b15551eb2c3f81e1", "message": "Add api dispute agent registration test case\n\nThis test case checks that mediators and refund agents can be\nregistered over grpc, but not on mainnet.", "committedDate": "2020-09-14T15:13:36Z", "type": "commit"}, {"oid": "3f0394f722904c3130a36ef60740197dbb68cb88", "url": "https://github.com/bisq-network/bisq/commit/3f0394f722904c3130a36ef60740197dbb68cb88", "message": "Bump version to 1.3.8", "committedDate": "2020-09-14T15:14:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5MTkwMQ==", "url": "https://github.com/bisq-network/bisq/pull/4525#discussion_r489491901", "bodyText": "Relying on string matching for tests makes them fragile. At a minimum we should probably add a note for strings that are used in this way.", "author": "sqrrm", "createdAt": "2020-09-16T14:41:08Z", "path": "apitest/src/test/java/bisq/apitest/method/RegisterDisputeAgentsTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.apitest.method;\n+\n+import bisq.proto.grpc.RegisterDisputeAgentRequest;\n+\n+import io.grpc.StatusRuntimeException;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Order;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestMethodOrder;\n+\n+import static bisq.apitest.config.BisqAppConfig.arbdaemon;\n+import static bisq.common.app.DevEnv.DEV_PRIVILEGE_PRIV_KEY;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.fail;\n+import static org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\n+\n+\n+@SuppressWarnings(\"ResultOfMethodCallIgnored\")\n+@Slf4j\n+@TestMethodOrder(OrderAnnotation.class)\n+public class RegisterDisputeAgentsTest extends MethodTest {\n+\n+    @BeforeAll\n+    public static void setUp() {\n+        try {\n+            setUpScaffold(\"bitcoind,seednode,arbdaemon\");\n+        } catch (Exception ex) {\n+            fail(ex);\n+        }\n+    }\n+\n+    @Test\n+    @Order(1)\n+    public void testRegisterArbitratorShouldThrowException() {\n+        var req =\n+                createRegisterDisputeAgentRequest(\"arbitrator\");\n+        Throwable exception = assertThrows(StatusRuntimeException.class, () ->\n+                grpcStubs(arbdaemon).disputeAgentsService.registerDisputeAgent(req));\n+        assertEquals(\"INVALID_ARGUMENT: arbitrators must be registered in a Bisq UI\",", "originalCommit": "8384dd80049a5e1f05212e78b15551eb2c3f81e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwODA0MA==", "url": "https://github.com/bisq-network/bisq/pull/4525#discussion_r489508040", "bodyText": "I will fix this in another PR.", "author": "ghubstan", "createdAt": "2020-09-16T15:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5MTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwOTQwNQ==", "url": "https://github.com/bisq-network/bisq/pull/4525#discussion_r489509405", "bodyText": "Yeah, I think this happens quite a bit in other tests as well iirc. Not urgent, but good to have a better solution for the future.", "author": "sqrrm", "createdAt": "2020-09-16T15:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5MTkwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ4MzA5MQ==", "url": "https://github.com/bisq-network/bisq/pull/4525#discussion_r491483091", "bodyText": "This string matching problem has bitten me a few times, when I misspelled \"bitciond\" in some test case setups.\nPR 4540 fixes it.", "author": "ghubstan", "createdAt": "2020-09-19T18:57:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5MTkwMQ=="}], "type": "inlineReview", "revised_code": null}]}