{"pr_number": 4789, "pr_title": "Fix remaining blackmail vulnerabilities", "pr_createdAt": "2020-11-13T08:48:38Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4789", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjQ2NA==", "url": "https://github.com/bisq-network/bisq/pull/4789#discussion_r523236464", "bodyText": "The Transaction.bitcoinSerializeToStream method does use that flag not only for adding segwit data but also for writing a flag:\n // marker, flag\n        if (useSegwit) {\n            stream.write(0);\n            stream.write(1);\n        }\n\nI don't know which function this flag has, but maybe its more safe to remove the segwit data in a different way. Maybe @oscarguindzberg can add his input here...", "author": "chimp1984", "createdAt": "2020-11-13T21:16:17Z", "path": "core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java", "diffHunk": "@@ -32,6 +34,9 @@ public BuyerAsMakerSendsInputsForDepositTxResponse(TaskRunner<Trade> taskHandler\n \n     @Override\n     protected byte[] getPreparedDepositTx() {\n-        return processModel.getPreparedDepositTx();\n+        Transaction preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(processModel.getPreparedDepositTx());\n+        // Remove witnesses from preparedDepositTx, so that the seller can still compute the final\n+        // tx id, but cannot publish it before providing the buyer with a signed delayed payout tx.\n+        return preparedDepositTx.bitcoinSerialize(false);", "originalCommit": "5762701f99b3f5f499aa04f5a7945a237062977e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NTQ2NQ==", "url": "https://github.com/bisq-network/bisq/pull/4789#discussion_r523285465", "bodyText": "the function of the flag is \"tx serialzed using the new segwit format\".\nbitcoinSerialize(false) seems fine if you want to avoid sending the signatures.", "author": "oscarguindzberg", "createdAt": "2020-11-13T23:35:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjQ2NA=="}], "type": "inlineReview", "revised_code": {"commit": "79fa21953348f2ec8dbc9318a193c05c6d583e53", "chunk": "diff --git a/core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java b/core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java\nindex 85de45cf24..ebc60a4c65 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java\n\n@@ -34,9 +32,6 @@ public class BuyerAsMakerSendsInputsForDepositTxResponse extends MakerSendsInput\n \n     @Override\n     protected byte[] getPreparedDepositTx() {\n-        Transaction preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(processModel.getPreparedDepositTx());\n-        // Remove witnesses from preparedDepositTx, so that the seller can still compute the final\n-        // tx id, but cannot publish it before providing the buyer with a signed delayed payout tx.\n-        return preparedDepositTx.bitcoinSerialize(false);\n+        return processModel.getPreparedDepositTx();\n     }\n }\n"}}, {"oid": "79fa21953348f2ec8dbc9318a193c05c6d583e53", "url": "https://github.com/bisq-network/bisq/commit/79fa21953348f2ec8dbc9318a193c05c6d583e53", "message": "Fix missing segwit case when sanitising preparedDepositTx\n\nMake sure witness data is stripped from the seller's prepared deposit\ntx, in addition to ScriptSig data, to prevent the buyer from being able\nto publish it prematurely (before having signed the delayed payout tx).", "committedDate": "2020-11-19T17:19:07Z", "type": "commit"}, {"oid": "f02d5ee2167ad1d6743996acfef846b4b2f87562", "url": "https://github.com/bisq-network/bisq/commit/f02d5ee2167ad1d6743996acfef846b4b2f87562", "message": "Send seller's delayedPayoutTx signature to peer ASAP\n\nInclude a new 'delayedPayoutTxSellerSignature' field with the prepared\ndelayed payout tx sent to the buyer, in DelayedPayoutTxSignatureRequest.\nThis will allow the buyer to compute the final, signed delayedPayoutTx\nas early as possible and withhold their deposit tx witness from the\nseller until they know they have a valid delayedPayoutTx, preventing its\npremature publishing in the fully segwit case. (To be done in a later\ncommit - for now just save the seller's delayedPayoutTx signature.)\n\nAs part of this, run the SellerSignsDelayedPayoutTx trade task at an\nearlier step (just after payout tx creation) to make its signature\navailable to the seller ASAP. Also rename 'delayedPayoutTxSignature' to\n'delayedPayoutTxBuyerSignature' in DelayedPayoutTxSignatureResponse.", "committedDate": "2020-11-19T17:19:12Z", "type": "commit"}, {"oid": "803035bdbbb4976521b1f23829371731a59d60d4", "url": "https://github.com/bisq-network/bisq/commit/803035bdbbb4976521b1f23829371731a59d60d4", "message": "Add new BuyerFinalizesDelayedPayoutTx task\n\nImprove validation of the buyer's delayed payout tx (both before & after\nthey get the final DepositTxAndDelayedPayoutTxMessage from the peer), by\nfinalising it independently of the seller. This is now possible since\ntheir 2-of-2 signature is included in the DelayedPayoutSignatureRequest.\nCheck that the final delayedPayoutTx received from the seller matches it\nbyte-for-byte (which actually makes its receipt redundant now).\n\nThis also fixes an apparent security bug, where the final validation of\nthe delayedPayoutTx appears to skip any kind of signature check (only a\ndeposit tx hash check, which is still necessary).\n\nFinally, optimistically check the deposit tx against the input of the\nprepared delayedPayoutTx received from the seller, in the case that the\nformer is non-malleable (that is, the fully segwit case) and thus has a\nstable ID given by the hash of the buyer's preparedDepositTx.", "committedDate": "2020-11-19T17:19:13Z", "type": "commit"}, {"oid": "5a3b0726920e072692cab30aca42b1b09573968b", "url": "https://github.com/bisq-network/bisq/commit/5a3b0726920e072692cab30aca42b1b09573968b", "message": "Withhold witnesses in buyer->seller depositTx data, until last step\n\nStrip all input witnesses from the depositTx message fields sent from\nthe buyer, until the last (DelayedPayoutTxSignatureResponse) message is\nsent, where they can be bundled in as an extra field. Since the witness\ndata doesn't affect the final deposit tx id, the seller does not need to\nknow it until actually publishing the tx.\n\nIn the (fully) segwit case, this allows the buyer to prevent the seller\nfrom publishing the deposit tx until the buyer has a valid, fully signed\ndelayedPayoutTx. Provide the final witness data in an extra 'depositTx'\nfield in DelayedPayoutTxSignatureResponse, which the seller can merge\nwith his depositTx witness block (for his own input signatures).", "committedDate": "2020-11-19T17:19:13Z", "type": "commit"}, {"oid": "69d1e16f5e59441dfc34a66969a1ec7d35330331", "url": "https://github.com/bisq-network/bisq/commit/69d1e16f5e59441dfc34a66969a1ec7d35330331", "message": "Prevent takers from using non-segwit deposit tx inputs\n\nDisallow non-P2WH depositTx inputs from the taker, while continuing to\nallow them from the maker, so that offers created pre-v1.5.0 can still\nbe taken. (After some time, those inputs could be disallowed too.)\n\nThis is mainly to prevent mass blackmail attacks, where more victims'\nmoney could be locked up than the DAO could possibly compensate them all\nfor. (This is probably only an attractive attack for a buyer anyway, at\nleast with the earlier commits.)", "committedDate": "2020-11-19T17:19:14Z", "type": "commit"}, {"oid": "3574204e7d2959c1c071102f41695b4ec44a4c37", "url": "https://github.com/bisq-network/bisq/commit/3574204e7d2959c1c071102f41695b4ec44a4c37", "message": "Fix faulty signature check in finalizeDelayedPayoutTx\n\nMake sure to use the segwit version of Script.correctlySpends in\nTradeWalletService.finalizeDelayedPayoutTx, which requires the input\nvalue and witness to be passed explicitly (as the latter holds the\nactual signature). This was causing BuyerFinalizesDelayedPayoutTx to\nfail to do any kind of signature check.\n\nAlso refactor the method slightly and remove a redundant call to\nWalletService.checkScriptSig (which does the same thing as\nTransactionInput.verify) in the branch used by the seller.", "committedDate": "2020-11-19T17:19:14Z", "type": "commit"}, {"oid": "3574204e7d2959c1c071102f41695b4ec44a4c37", "url": "https://github.com/bisq-network/bisq/commit/3574204e7d2959c1c071102f41695b4ec44a4c37", "message": "Fix faulty signature check in finalizeDelayedPayoutTx\n\nMake sure to use the segwit version of Script.correctlySpends in\nTradeWalletService.finalizeDelayedPayoutTx, which requires the input\nvalue and witness to be passed explicitly (as the latter holds the\nactual signature). This was causing BuyerFinalizesDelayedPayoutTx to\nfail to do any kind of signature check.\n\nAlso refactor the method slightly and remove a redundant call to\nWalletService.checkScriptSig (which does the same thing as\nTransactionInput.verify) in the branch used by the seller.", "committedDate": "2020-11-19T17:19:14Z", "type": "forcePushed"}, {"oid": "345426fb50b7e80042ab6df2b8cd994ea9530658", "url": "https://github.com/bisq-network/bisq/commit/345426fb50b7e80042ab6df2b8cd994ea9530658", "message": "Add further validation checks for delayed payout tx\n\nDo some extra sanity checks like tx.outputSum < tx.inputSum, to rule out\nany edge cases where an invalid delayed payout tx might still arise.", "committedDate": "2020-11-19T17:30:16Z", "type": "commit"}]}