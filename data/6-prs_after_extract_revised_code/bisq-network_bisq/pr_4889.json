{"pr_number": 4889, "pr_title": "Avoid case of multi trades with same offer", "pr_createdAt": "2020-12-03T19:51:07Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4889", "timeline": [{"oid": "1fdc43e4d0315817fae46e6bda07293c629006f1", "url": "https://github.com/bisq-network/bisq/commit/1fdc43e4d0315817fae46e6bda07293c629006f1", "message": "Increase timeout for trade protocol task runners from 30 to 60 sec", "committedDate": "2020-12-03T16:53:35Z", "type": "commit"}, {"oid": "2d5fc33ba48e48add4db494558511703785d5d3a", "url": "https://github.com/bisq-network/bisq/commit/2d5fc33ba48e48add4db494558511703785d5d3a", "message": "Move MakerRemovesOpenOffer to first task to avoid that if take offer\nfails early that we get another trade with same id at maker in case another use takes the offer afterwards.", "committedDate": "2020-12-03T19:19:24Z", "type": "commit"}, {"oid": "8f99ca0b6355405eb83d54ea604b4edf61013975", "url": "https://github.com/bisq-network/bisq/commit/8f99ca0b6355405eb83d54ea604b4edf61013975", "message": "Add uid to trade to make sure that look up for process model cannot\nfail in case of multiple trades with the same offer id.\nUse uid instead of the weaker offerId as key for the tradeProtocolByTradeId map", "committedDate": "2020-12-03T19:43:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2MDQ2NQ==", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535660465", "bodyText": "Could this be abused by sending a bad request, causing offers to be removed but guaranteed failed trade?", "author": "sqrrm", "createdAt": "2020-12-03T21:48:02Z", "path": "core/src/main/java/bisq/core/trade/protocol/BuyerAsMakerProtocol.java", "diffHunk": "@@ -100,8 +100,8 @@ protected void handle(DelayedPayoutTxSignatureRequest message, NodeAddress peer)\n                 .with(message)\n                 .from(peer))\n                 .setup(tasks(\n-                        BuyerProcessDelayedPayoutTxSignatureRequest.class,\n                         MakerRemovesOpenOffer.class,\n+                        BuyerProcessDelayedPayoutTxSignatureRequest.class,", "originalCommit": "2d5fc33ba48e48add4db494558511703785d5d3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5Njc4OQ==", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535696789", "bodyText": "Was thinking the same, but a taker could do it anyway at any point later as well. We could add some feature to restore offers which got closed from a trade failure by cloning  the offer and change the id. So that would render such an attack as ineffective.", "author": "chimp1984", "createdAt": "2020-12-03T22:41:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2MDQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwOTc4Mw==", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535709783", "bodyText": "Yeah, it's an area that needs some more thought and this is not the real issue.", "author": "sqrrm", "createdAt": "2020-12-03T23:02:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2MDQ2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2Njc5MA==", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535666790", "bodyText": "How would this happen? Collision of randomUUID?", "author": "sqrrm", "createdAt": "2020-12-03T21:54:11Z", "path": "core/src/main/java/bisq/core/trade/TradeManager.java", "diffHunk": "@@ -269,10 +271,15 @@ private void handleTakeOfferRequest(NodeAddress peer, InputsForDepositTxRequest\n                     openOffer.getMediatorNodeAddress(),\n                     openOffer.getRefundAgentNodeAddress(),\n                     btcWalletService,\n-                    getNewProcessModel(offer));\n+                    getNewProcessModel(offer),\n+                    UUID.randomUUID().toString());\n         }\n         TradeProtocol tradeProtocol = TradeProtocolFactory.getNewTradeProtocol(trade);\n-        tradeProtocolByTradeId.put(trade.getId(), tradeProtocol);\n+        TradeProtocol prev = tradeProtocolByTradeId.put(trade.getUid(), tradeProtocol);\n+        if (prev != null) {\n+            log.error(\"We had already an entry with uid {}\", trade.getUid());", "originalCommit": "8f99ca0b6355405eb83d54ea604b4edf61013975", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5NTk1OA==", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535695958", "bodyText": "If for some reason the same trade is entering those methods. Should not be possible but prefer to keep the log to detect it if there is still some bug.", "author": "chimp1984", "createdAt": "2020-12-03T22:40:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2Njc5MA=="}], "type": "inlineReview", "revised_code": null}]}