{"pr_number": 4612, "pr_title": "Segwit for the trade protocol", "pr_createdAt": "2020-10-09T22:36:49Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4612", "timeline": [{"oid": "752c1ecc085cb36fad895eedf8d8d6dc5771c77c", "url": "https://github.com/bisq-network/bisq/commit/752c1ecc085cb36fad895eedf8d8d6dc5771c77c", "message": "TransactionWitness.redeemP2WSH() now receives a Script", "committedDate": "2020-10-15T16:13:46Z", "type": "forcePushed"}, {"oid": "42625e87adbe13baa5b2c9e747416423864e31b6", "url": "https://github.com/bisq-network/bisq/commit/42625e87adbe13baa5b2c9e747416423864e31b6", "message": "TransactionWitness.redeemP2WSH() now receives a Script", "committedDate": "2020-10-15T17:16:47Z", "type": "forcePushed"}, {"oid": "12b70e27cca421b09c4a1403404727792b03913f", "url": "https://github.com/bisq-network/bisq/commit/12b70e27cca421b09c4a1403404727792b03913f", "message": "Revert \"Validate AddressEntry.segwit\"\n\nThis reverts commit e49c56527825a443b794ab74cee24b12d5b9eb45.", "committedDate": "2020-10-15T17:25:36Z", "type": "forcePushed"}, {"oid": "326949fe2c3157ff97445cb5cb1f4d048489ac5e", "url": "https://github.com/bisq-network/bisq/commit/326949fe2c3157ff97445cb5cb1f4d048489ac5e", "message": "Remove unused imports", "committedDate": "2020-10-15T19:04:12Z", "type": "forcePushed"}, {"oid": "a44285d299e5265767fe9c6e9330ddb01095ad44", "url": "https://github.com/bisq-network/bisq/commit/a44285d299e5265767fe9c6e9330ddb01095ad44", "message": "Set TRADE_PROTOCOL_VERSION to 3", "committedDate": "2020-10-19T22:35:56Z", "type": "forcePushed"}, {"oid": "aae2d25762e59c4583fd76baab50dd50989730d9", "url": "https://github.com/bisq-network/bisq/commit/aae2d25762e59c4583fd76baab50dd50989730d9", "message": "Set TRADE_PROTOCOL_VERSION to 3", "committedDate": "2020-10-21T18:55:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NzEyNg==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509797126", "bodyText": "Maybe better to use \"hashedMultiSigOutputIsLegacy\" to avoid the 2x negation. Makes it easier to read...", "author": "chimp1984", "createdAt": "2020-10-21T23:43:38Z", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -957,7 +1013,15 @@ public Transaction traderSignAndFinalizeDisputedPayoutTx(byte[] depositTxSeriali\n \n         // take care of sorting!\n         Script redeemScript = get2of3MultiSigRedeemScript(buyerPubKey, sellerPubKey, arbitratorPubKey);\n-        Sha256Hash sigHash = payoutTx.hashForSignature(0, redeemScript, Transaction.SigHash.ALL, false);\n+        Sha256Hash sigHash;\n+        boolean hashedMultiSigOutputIsSegwit = !ScriptPattern.isP2SH(hashedMultiSigOutput.getScriptPubKey());", "originalCommit": "cb292843ae9ee2894c558c7bcebf7597fb569d80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MjI0Mw==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510182243", "bodyText": "fixed.", "author": "oscarguindzberg", "createdAt": "2020-10-22T13:56:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NzEyNg=="}], "type": "inlineReview", "revised_code": {"commit": "1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "chunk": "diff --git a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\nindex ff8983e0e0..acaaeef782 100644\n--- a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n+++ b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n\n@@ -1014,8 +1007,8 @@ public class TradeWalletService {\n         // take care of sorting!\n         Script redeemScript = get2of3MultiSigRedeemScript(buyerPubKey, sellerPubKey, arbitratorPubKey);\n         Sha256Hash sigHash;\n-        boolean hashedMultiSigOutputIsSegwit = !ScriptPattern.isP2SH(hashedMultiSigOutput.getScriptPubKey());\n-        if (!hashedMultiSigOutputIsSegwit) {\n+        boolean hashedMultiSigOutputIsLegacy = !ScriptPattern.isP2SH(hashedMultiSigOutput.getScriptPubKey());\n+        if (hashedMultiSigOutputIsLegacy) {\n             sigHash = payoutTx.hashForSignature(0, redeemScript, Transaction.SigHash.ALL, false);\n         } else {\n             Coin inputValue = hashedMultiSigOutput.getValue();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5ODE4NQ==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509798185", "bodyText": "duplicate \"the the\"", "author": "chimp1984", "createdAt": "2020-10-21T23:47:04Z", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1181,6 +1181,11 @@ private RawTransactionInput getRawInputFromTransactionInput(@NotNull Transaction\n                 \"input.getConnectedOutput().getParentTransaction() must not be null\");\n         checkNotNull(input.getValue(), \"input.getValue() must not be null\");\n \n+        // If we would be sure all bisq nodes migrated to bitcoinj 0.15, bitcoinSerialize(true) can be used.\n+        // Since there is no way to check migration to bitcoinj 0.15,\n+        // Config.SEGWIT_TRADE_PROTOCOL_ACTIVE could be checked instead.\n+        // Actually, given the serialized tx is used just as the connected tx of an input,\n+        // we don't need the the connected tx's witness data.", "originalCommit": "dfa7e5d82bb98a5178daede7e665778421036c45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5OTM1MQ==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509799351", "bodyText": "Isn't the input always from the users own wallet (not the peers input)? If so I don't understand the above comment. Then this code is only execute anyway if the user runs the new version and segwit could be used.", "author": "chimp1984", "createdAt": "2020-10-21T23:51:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5ODE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MjM4NQ==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510182385", "bodyText": "duplicate \"the the\"\n\nfixed", "author": "oscarguindzberg", "createdAt": "2020-10-22T13:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5ODE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NTE0MA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510195140", "bodyText": "Isn't the input always from the users own wallet (not the peers input)? If so I don't understand the above comment. Then this code is only execute anyway if the user runs the new version and segwit could be used.\n\nWhen creating the deposit tx, traders will have a tx with an input from her wallet and an input from the counterparty.  Traders collaborate creating the deposit tx. They send RawTransactionInput over p2p. So, if you are trading with a node that was not upgraded to bitcoinj 0.15 and RawTransactionInput.parentTransaction is serialized with segwit data, the other node won't be able to parse RawTransactionInput.parentTransaction correctly.\nExtra comments:\n\nRawTransactionInput.parentTransaction could be replaced with RawTransactionInput.parentTransactionHash since the tx is only used to obtain its hash.\nSince we upgraded the trade protocol version, it is not possible to take a trade from a not-upgraded node, but better be on the safe side. This comment made probably more sense for the previous release.", "author": "oscarguindzberg", "createdAt": "2020-10-22T14:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5ODE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NTg4MA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510195880", "bodyText": "I will update the comment to make it more clear.", "author": "oscarguindzberg", "createdAt": "2020-10-22T14:13:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5ODE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "chunk": "diff --git a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\nindex a3c616d31a..acaaeef782 100644\n--- a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n+++ b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n\n@@ -1181,25 +1173,13 @@ public class TradeWalletService {\n                 \"input.getConnectedOutput().getParentTransaction() must not be null\");\n         checkNotNull(input.getValue(), \"input.getValue() must not be null\");\n \n-        // If we would be sure all bisq nodes migrated to bitcoinj 0.15, bitcoinSerialize(true) can be used.\n-        // Since there is no way to check migration to bitcoinj 0.15,\n-        // Config.SEGWIT_TRADE_PROTOCOL_ACTIVE could be checked instead.\n-        // Actually, given the serialized tx is used just as the connected tx of an input,\n-        // we don't need the the connected tx's witness data.\n+        // bitcoinSerialize(false) is used just in case the serialized tx is parsed by a bisq node still using\n+        // bitcoinj 0.14. The serialized tx is just used to obtain its hash, so the witness data is not relevant.\n         return new RawTransactionInput(input.getOutpoint().getIndex(),\n                 input.getConnectedOutput().getParentTransaction().bitcoinSerialize(false),\n                 input.getValue().value);\n     }\n \n-    private byte[] getMakersScriptSigProgram(TransactionInput transactionInput) throws TransactionVerificationException {\n-        byte[] scriptProgram = transactionInput.getScriptSig().getProgram();\n-        if (scriptProgram.length == 0) {\n-            throw new TransactionVerificationException(\"Inputs from maker not signed.\");\n-        }\n-\n-        return scriptProgram;\n-    }\n-\n     private TransactionInput getTransactionInput(Transaction depositTx,\n                                                  byte[] scriptProgram,\n                                                  RawTransactionInput rawTransactionInput) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5OTcyMw==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509799723", "bodyText": "We will be on 1.4.2 or more likely 1.5.0", "author": "chimp1984", "createdAt": "2020-10-21T23:52:11Z", "path": "common/src/main/java/bisq/common/app/Version.java", "diffHunk": "@@ -92,10 +92,13 @@ private static int getSubVersion(String version, int index) {\n \n     // The version no. of the current protocol. The offer holds that version.\n     // A taker will check the version of the offers to see if his version is compatible.\n-    // Offers created with the old version will become invalid and have to be canceled.\n+    // For the switch to version 2, offers created with the old version will become invalid and have to be canceled.\n+    // For the switch to version 3, offers created with the old version can be migrated to version 3 just by opening\n+    // the Bisq app.\n     // VERSION = 0.5.0 -> TRADE_PROTOCOL_VERSION = 1\n     // Version 1.2.2 -> TRADE_PROTOCOL_VERSION = 2\n-    public static final int TRADE_PROTOCOL_VERSION = 2;\n+    // Version 1.4.1 -> TRADE_PROTOCOL_VERSION = 3", "originalCommit": "aae2d25762e59c4583fd76baab50dd50989730d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5OTc0Mw==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510199743", "bodyText": "fixed.", "author": "oscarguindzberg", "createdAt": "2020-10-22T14:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5OTcyMw=="}], "type": "inlineReview", "revised_code": {"commit": "1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "chunk": "diff --git a/common/src/main/java/bisq/common/app/Version.java b/common/src/main/java/bisq/common/app/Version.java\nindex b726dce5b8..27cd64ad58 100644\n--- a/common/src/main/java/bisq/common/app/Version.java\n+++ b/common/src/main/java/bisq/common/app/Version.java\n\n@@ -97,7 +97,7 @@ public class Version {\n     // the Bisq app.\n     // VERSION = 0.5.0 -> TRADE_PROTOCOL_VERSION = 1\n     // Version 1.2.2 -> TRADE_PROTOCOL_VERSION = 2\n-    // Version 1.4.1 -> TRADE_PROTOCOL_VERSION = 3\n+    // Version 1.5.0 -> TRADE_PROTOCOL_VERSION = 3\n     public static final int TRADE_PROTOCOL_VERSION = 3;\n     private static int p2pMessageVersion;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMTMxMg==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509811312", "bodyText": "Variable is redundant now. Also does not throw exception anymore", "author": "chimp1984", "createdAt": "2020-10-22T00:31:30Z", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1193,10 +1196,6 @@ private RawTransactionInput getRawInputFromTransactionInput(@NotNull Transaction\n \n     private byte[] getMakersScriptSigProgram(TransactionInput transactionInput) throws TransactionVerificationException {\n         byte[] scriptProgram = transactionInput.getScriptSig().getProgram();\n-        if (scriptProgram.length == 0) {\n-            throw new TransactionVerificationException(\"Inputs from maker not signed.\");\n-        }\n-\n         return scriptProgram;", "originalCommit": "9f4f258dd6c9effc036ac4d4d3b14ec6ed13213f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIwNTk0Mw==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510205943", "bodyText": "This all started with scriptProgram.length == 0 being valid for a segwit input.\nI just removed the method and moved its content to where it was being used, i.e. takerSignsDepositTx().\nSee takerSignsDepositTx():\n                byte[] makersScriptSigProgram = makersInput.getScriptSig().getProgram();\n                if (makersScriptSigProgram.length == 0 && TransactionWitness.EMPTY.equals(makersInput.getWitness())) {\n                    throw new TransactionVerificationException(\"Inputs from maker not signed.\");\n                }\n\nSee 7eb808d", "author": "oscarguindzberg", "createdAt": "2020-10-22T14:25:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMTMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzMTY2MA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510231660", "bodyText": "Yes, I saw. But now the method does not throw TransactionVerificationException anymore.", "author": "chimp1984", "createdAt": "2020-10-22T14:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMTMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NjYzNQ==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510266635", "bodyText": "I saw you removed the method. Good so...", "author": "chimp1984", "createdAt": "2020-10-22T15:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMTMxMg=="}], "type": "inlineReview", "revised_code": {"commit": "1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "chunk": "diff --git a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\nindex a91a90677d..acaaeef782 100644\n--- a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n+++ b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n\n@@ -1184,21 +1173,13 @@ public class TradeWalletService {\n                 \"input.getConnectedOutput().getParentTransaction() must not be null\");\n         checkNotNull(input.getValue(), \"input.getValue() must not be null\");\n \n-        // If we would be sure all bisq nodes migrated to bitcoinj 0.15, bitcoinSerialize(true) can be used.\n-        // Since there is no way to check migration to bitcoinj 0.15,\n-        // Config.SEGWIT_TRADE_PROTOCOL_ACTIVE could be checked instead.\n-        // Actually, given the serialized tx is used just as the connected tx of an input,\n-        // we don't need the the connected tx's witness data.\n+        // bitcoinSerialize(false) is used just in case the serialized tx is parsed by a bisq node still using\n+        // bitcoinj 0.14. The serialized tx is just used to obtain its hash, so the witness data is not relevant.\n         return new RawTransactionInput(input.getOutpoint().getIndex(),\n                 input.getConnectedOutput().getParentTransaction().bitcoinSerialize(false),\n                 input.getValue().value);\n     }\n \n-    private byte[] getMakersScriptSigProgram(TransactionInput transactionInput) throws TransactionVerificationException {\n-        byte[] scriptProgram = transactionInput.getScriptSig().getProgram();\n-        return scriptProgram;\n-    }\n-\n     private TransactionInput getTransactionInput(Transaction depositTx,\n                                                  byte[] scriptProgram,\n                                                  RawTransactionInput rawTransactionInput) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjEzNQ==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509812135", "bodyText": "Is createP2PKHOutputScript correct? Would expect a segwit method...", "author": "chimp1984", "createdAt": "2020-10-22T00:34:34Z", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1286,11 +1286,7 @@ private void signInput(Transaction transaction, TransactionInput input, int inpu\n                 input.setScriptSig(ScriptBuilder.createInputScript(txSig, sigKey));\n             }\n         } else if (ScriptPattern.isP2WPKH(scriptPubKey)) {\n-            // TODO: Consider using this alternative way to build the scriptCode (taken from bitcoinj master)\n-            // Script scriptCode = ScriptBuilder.createP2PKHOutputScript(sigKey)\n-            Script scriptCode = new ScriptBuilder().data(\n-                    ScriptBuilder.createOutputScript(LegacyAddress.fromKey(transaction.getParams(), sigKey)).getProgram())\n-                    .build();\n+            Script scriptCode = ScriptBuilder.createP2PKHOutputScript(sigKey);", "originalCommit": "35a657769945f946019fc974c8a06cf1431f1a1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIyMDc5OA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510220798", "bodyText": "Yes, it is correct.\nI know it sounds weird.\nTo sign a P2WPKH input you have to serialize the tx with a specific format, hash it and then sign the hash.\nThat specific format includes something called the scriptCode which should be: OP_DUP OP_HASH160 pubKeyHash OP_EQUALVERIFY OP_CHECKSIG. That is the same script format used in P2PKH outputs.\nDetailed info: https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki", "author": "oscarguindzberg", "createdAt": "2020-10-22T14:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjEzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzMjY2NA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510232664", "bodyText": "Ok. Maybe a comment would be good with backgorund info.", "author": "chimp1984", "createdAt": "2020-10-22T14:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjEzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMzMjU1OA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510332558", "bodyText": "done.", "author": "oscarguindzberg", "createdAt": "2020-10-22T17:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMjEzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "46c7d9e44daffc375e8412a1ddf675ea6cdc81f8", "chunk": "diff --git a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\nindex 4f5a1074c4..46d9cea8bb 100644\n--- a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n+++ b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n\n@@ -1286,6 +1268,7 @@ public class TradeWalletService {\n                 input.setScriptSig(ScriptBuilder.createInputScript(txSig, sigKey));\n             }\n         } else if (ScriptPattern.isP2WPKH(scriptPubKey)) {\n+            // scriptCode is expected to have the format of a legacy P2PKH output script\n             Script scriptCode = ScriptBuilder.createP2PKHOutputScript(sigKey);\n             Coin value = input.getValue();\n             TransactionSignature txSig = transaction.calculateWitnessSignature(inputIndex, sigKey, scriptCode, value,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMzI4Mg==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r509813282", "bodyText": "Why not take the input from preparedDelayedPayoutTx? If that is not possible, I would prefer to pass over the deposit tx to the signDelayedPayoutTx method and do the deail work in the TradeWalletService to keep the transaction domain more isolated there.", "author": "chimp1984", "createdAt": "2020-10-22T00:38:59Z", "path": "core/src/main/java/bisq/core/trade/protocol/tasks/buyer/BuyerSignsDelayedPayoutTx.java", "diffHunk": "@@ -46,7 +48,12 @@ protected void run() {\n             runInterceptHook();\n \n             Transaction preparedDelayedPayoutTx = checkNotNull(processModel.getPreparedDelayedPayoutTx());\n+\n             BtcWalletService btcWalletService = processModel.getBtcWalletService();\n+            NetworkParameters params = btcWalletService.getParams();\n+            Transaction preparedDepositTx = new Transaction(params, processModel.getPreparedDepositTx());\n+            Coin delayedPayoutTxInputValue = preparedDepositTx.getOutput(0).getValue();\n+", "originalCommit": "cb292843ae9ee2894c558c7bcebf7597fb569d80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzMDYzNA==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510230634", "bodyText": "In bitcoin (the protocol) inputs do not include the amount.\nIn bitcoinj (the library) you can connect a TransactionInput to its related TransactionOutput and then ask the TransactionInput its value. But it is only possible if you connected both of them.\nI moved the code to obtain the input value to TradeWalletService.", "author": "oscarguindzberg", "createdAt": "2020-10-22T14:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgxMzI4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "chunk": "diff --git a/core/src/main/java/bisq/core/trade/protocol/tasks/buyer/BuyerSignsDelayedPayoutTx.java b/core/src/main/java/bisq/core/trade/protocol/tasks/buyer/BuyerSignsDelayedPayoutTx.java\nindex a15bd322c4..d56cf2e821 100644\n--- a/core/src/main/java/bisq/core/trade/protocol/tasks/buyer/BuyerSignsDelayedPayoutTx.java\n+++ b/core/src/main/java/bisq/core/trade/protocol/tasks/buyer/BuyerSignsDelayedPayoutTx.java\n\n@@ -52,7 +52,6 @@ public class BuyerSignsDelayedPayoutTx extends TradeTask {\n             BtcWalletService btcWalletService = processModel.getBtcWalletService();\n             NetworkParameters params = btcWalletService.getParams();\n             Transaction preparedDepositTx = new Transaction(params, processModel.getPreparedDepositTx());\n-            Coin delayedPayoutTxInputValue = preparedDepositTx.getOutput(0).getValue();\n \n             String id = processModel.getOffer().getId();\n \n"}}, {"oid": "1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "url": "https://github.com/bisq-network/bisq/commit/1d79dfbd057c2159236d2d5a4d03f15aac2f38c9", "message": "Delete Config.SEGWIT_TRADE_PROTOCOL_ACTIVE", "committedDate": "2020-10-22T15:19:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTgxNg==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510265816", "bodyText": "getRawInputFromTransactionInput is used only by methods for creating the deposit tx. With the trade protocol update we do not have mixed cases of segwit/legacy here. Or do I miss something?", "author": "chimp1984", "createdAt": "2020-10-22T15:42:52Z", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1183,11 +1183,8 @@ private RawTransactionInput getRawInputFromTransactionInput(@NotNull Transaction\n                 \"input.getConnectedOutput().getParentTransaction() must not be null\");\n         checkNotNull(input.getValue(), \"input.getValue() must not be null\");\n \n-        // If we would be sure all bisq nodes migrated to bitcoinj 0.15, bitcoinSerialize(true) can be used.\n-        // Since there is no way to check migration to bitcoinj 0.15,\n-        // Config.SEGWIT_TRADE_PROTOCOL_ACTIVE could be checked instead.\n-        // Actually, given the serialized tx is used just as the connected tx of an input,\n-        // we don't need the connected tx's witness data.\n+        // bitcoinSerialize(false) is used just in case the serialized tx is parsed by a bisq node still using\n+        // bitcoinj 0.14. The serialized tx is just used to obtain its hash, so the witness data is not relevant.\n         return new RawTransactionInput(input.getOutpoint().getIndex(),", "originalCommit": "fea6f0899c235d5e4ed5bf67940be8ee746d177c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MDExMg==", "url": "https://github.com/bisq-network/bisq/pull/4612#discussion_r510340112", "bodyText": "yes, you are right, just fixed the comment to explain that.", "author": "oscarguindzberg", "createdAt": "2020-10-22T17:35:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTgxNg=="}], "type": "inlineReview", "revised_code": {"commit": "46c7d9e44daffc375e8412a1ddf675ea6cdc81f8", "chunk": "diff --git a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\nindex ceac0d32a9..46d9cea8bb 100644\n--- a/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n+++ b/core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java\n\n@@ -1184,17 +1174,14 @@ public class TradeWalletService {\n         checkNotNull(input.getValue(), \"input.getValue() must not be null\");\n \n         // bitcoinSerialize(false) is used just in case the serialized tx is parsed by a bisq node still using\n-        // bitcoinj 0.14. The serialized tx is just used to obtain its hash, so the witness data is not relevant.\n+        // bitcoinj 0.14. This is not supposed to happen ever since Version.TRADE_PROTOCOL_VERSION was set to 3,\n+        // but it costs nothing to be on the safe side.\n+        // The serialized tx is just used to obtain its hash, so the witness data is not relevant.\n         return new RawTransactionInput(input.getOutpoint().getIndex(),\n                 input.getConnectedOutput().getParentTransaction().bitcoinSerialize(false),\n                 input.getValue().value);\n     }\n \n-    private byte[] getMakersScriptSigProgram(TransactionInput transactionInput) throws TransactionVerificationException {\n-        byte[] scriptProgram = transactionInput.getScriptSig().getProgram();\n-        return scriptProgram;\n-    }\n-\n     private TransactionInput getTransactionInput(Transaction depositTx,\n                                                  byte[] scriptProgram,\n                                                  RawTransactionInput rawTransactionInput) {\n"}}, {"oid": "46c7d9e44daffc375e8412a1ddf675ea6cdc81f8", "url": "https://github.com/bisq-network/bisq/commit/46c7d9e44daffc375e8412a1ddf675ea6cdc81f8", "message": "Fix2 - Explain why bitcoinSerialize(false) is used", "committedDate": "2020-10-26T22:17:26Z", "type": "forcePushed"}, {"oid": "86a35b94e2944fdb33e1caa6d51609bc8782c244", "url": "https://github.com/bisq-network/bisq/commit/86a35b94e2944fdb33e1caa6d51609bc8782c244", "message": "Explain why createP2PKHOutputScript() is used", "committedDate": "2020-10-26T22:57:57Z", "type": "forcePushed"}, {"oid": "19bdf79f7cda637e08c1171a44f60a61aca73ae0", "url": "https://github.com/bisq-network/bisq/commit/19bdf79f7cda637e08c1171a44f60a61aca73ae0", "message": "Remove unused imports", "committedDate": "2020-10-26T23:21:08Z", "type": "forcePushed"}, {"oid": "0dda9d4a9514fcbf45e3adb7adbcce91d84dc77a", "url": "https://github.com/bisq-network/bisq/commit/0dda9d4a9514fcbf45e3adb7adbcce91d84dc77a", "message": "Remove unused imports", "committedDate": "2020-10-28T21:08:49Z", "type": "forcePushed"}, {"oid": "ef97daac8998da2ae72ef6a6ac209c33a4c2223a", "url": "https://github.com/bisq-network/bisq/commit/ef97daac8998da2ae72ef6a6ac209c33a4c2223a", "message": "Use bitcoinj 0.15.8 (commit fcec3da)", "committedDate": "2020-11-05T14:47:38Z", "type": "commit"}, {"oid": "161e220a4f5464f263639e93fdbb89f468f0106f", "url": "https://github.com/bisq-network/bisq/commit/161e220a4f5464f263639e93fdbb89f468f0106f", "message": "BtcWalletService: Use segwit addresses", "committedDate": "2020-11-05T14:47:40Z", "type": "commit"}, {"oid": "06e5091f79024e5739e8b496f2aad79cf5795483", "url": "https://github.com/bisq-network/bisq/commit/06e5091f79024e5739e8b496f2aad79cf5795483", "message": "TradeWalletService use P2WSH", "committedDate": "2020-11-05T14:47:40Z", "type": "commit"}, {"oid": "4a05b6d6d5ef1175f4a3918ed500b580c186ef9e", "url": "https://github.com/bisq-network/bisq/commit/4a05b6d6d5ef1175f4a3918ed500b580c186ef9e", "message": "Revert \"Construct dummy outputs with LegacyAddress\"\n\nThis reverts commit b8f5c6e970fc29b705478aac8a655a73bed52a7e.", "committedDate": "2020-11-05T14:47:40Z", "type": "commit"}, {"oid": "22ba9a898b5ad4db64f4cc1f3089347afbb5a6c0", "url": "https://github.com/bisq-network/bisq/commit/22ba9a898b5ad4db64f4cc1f3089347afbb5a6c0", "message": "Explain why bitcoinSerialize(false) is used", "committedDate": "2020-11-05T14:47:41Z", "type": "commit"}, {"oid": "3585dc95fcda1ef27ade1bd832ee35b7ab0b222c", "url": "https://github.com/bisq-network/bisq/commit/3585dc95fcda1ef27ade1bd832ee35b7ab0b222c", "message": "Create the scriptCode the right way", "committedDate": "2020-11-05T14:47:41Z", "type": "commit"}, {"oid": "953a5f0bb547c8c390af49c6c8dd74a55aa62bd6", "url": "https://github.com/bisq-network/bisq/commit/953a5f0bb547c8c390af49c6c8dd74a55aa62bd6", "message": "Deal with P2WPKH has empty scriptSig", "committedDate": "2020-11-05T14:47:41Z", "type": "commit"}, {"oid": "d1620c4fd76f7024d40a503c2b1eabea8a786134", "url": "https://github.com/bisq-network/bisq/commit/d1620c4fd76f7024d40a503c2b1eabea8a786134", "message": "Revert \"Validate AddressEntry.segwit\"\n\nThis reverts commit e49c56527825a443b794ab74cee24b12d5b9eb45.", "committedDate": "2020-11-05T14:47:41Z", "type": "commit"}, {"oid": "a3d7c71410f0ad0f6aa7476e6d2deba9c29dda5b", "url": "https://github.com/bisq-network/bisq/commit/a3d7c71410f0ad0f6aa7476e6d2deba9c29dda5b", "message": "Set TRADE_PROTOCOL_VERSION to 3", "committedDate": "2020-11-05T14:47:41Z", "type": "commit"}, {"oid": "dffa251e1dc160b7b1bfe334b759d2b08de2c3d9", "url": "https://github.com/bisq-network/bisq/commit/dffa251e1dc160b7b1bfe334b759d2b08de2c3d9", "message": "Remove unused imports", "committedDate": "2020-11-05T14:47:41Z", "type": "commit"}, {"oid": "dffa251e1dc160b7b1bfe334b759d2b08de2c3d9", "url": "https://github.com/bisq-network/bisq/commit/dffa251e1dc160b7b1bfe334b759d2b08de2c3d9", "message": "Remove unused imports", "committedDate": "2020-11-05T14:47:41Z", "type": "forcePushed"}]}