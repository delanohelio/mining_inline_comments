{"pr_number": 4692, "pr_title": "Block on tx-fee-request in core TakeOfferModel init", "pr_createdAt": "2020-10-23T16:04:07Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4692", "timeline": [{"oid": "cb65de6d2e1497eb8eaf86404fc3285729aba87c", "url": "https://github.com/bisq-network/bisq/commit/cb65de6d2e1497eb8eaf86404fc3285729aba87c", "message": "Block on tx-fee-request in core TakeOfferModel init\n\nAdded license comment too.", "committedDate": "2020-10-23T15:47:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NzYyNQ==", "url": "https://github.com/bisq-network/bisq/pull/4692#discussion_r511497625", "bodyText": "I assume that method is only used by API so far. But to make it usable for GUI app as well a blocking request is not possible as it would block the UI thread. Is there a strong reason why you need to do it blocking and not via a callback/result handler design?", "author": "chimp1984", "createdAt": "2020-10-24T17:57:51Z", "path": "core/src/main/java/bisq/core/offer/takeoffer/TakeOfferModel.java", "diffHunk": "@@ -141,12 +160,19 @@ private void calculateTxFees() {\n         // Payout tx: 371 bytes\n         // Disputed payout tx: 408 bytes\n \n-        // Request actual fees:\n-        log.info(\"Start requestTxFee: txFeeFromFeeService={}\", txFeeFromFeeService);\n-        feeService.requestFees(() -> {\n-            txFeePerByteFromFeeService = feeService.getTxFeePerByte();\n-            txFeeFromFeeService = offerUtil.getTxFeeBySize(txFeePerByteFromFeeService, feeTxSize);\n-        });\n+        txFeePerByteFromFeeService = getTxFeePerByte();\n+        txFeeFromFeeService = offerUtil.getTxFeeBySize(txFeePerByteFromFeeService, feeTxSize);\n+        log.info(\"{} txFeePerByte = {}\", feeService.getClass().getSimpleName(), txFeePerByteFromFeeService);\n+    }\n+\n+    private Coin getTxFeePerByte() {\n+        try {\n+            CompletableFuture<Void> feeRequestFuture = CompletableFuture.runAsync(feeService::requestFees);\n+            feeRequestFuture.get();  // Block until async fee request is complete.", "originalCommit": "cb65de6d2e1497eb8eaf86404fc3285729aba87c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA4MzA4MA==", "url": "https://github.com/bisq-network/bisq/pull/4692#discussion_r513083080", "bodyText": "My bad, thought this was already used by UI. Would be better to handle this with callbacks. That way it should be usable by both API and UI eventually.", "author": "sqrrm", "createdAt": "2020-10-27T23:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NzYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA4NjkwMw==", "url": "https://github.com/bisq-network/bisq/pull/4692#discussion_r513086903", "bodyText": "If I understand correctly (@sqrrm), you want this TakeOfferModel snippet changed to using a callback instead of a CompletableFuture.\nDo you mind if I make this change in a later PR?  I am working on a chain of 15 pr/branches, and this is branch #1 in the chain.", "author": "ghubstan", "createdAt": "2020-10-27T23:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NzYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU3MzgxMA==", "url": "https://github.com/bisq-network/bisq/pull/4692#discussion_r514573810", "bodyText": "Yeah, can be done in a later PR. Having it block is still more correct than before and since this is only used by API for now, it's not a problem to merge.", "author": "sqrrm", "createdAt": "2020-10-29T21:18:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5NzYyNQ=="}], "type": "inlineReview", "revised_code": null}]}