{"pr_number": 4215, "pr_title": "Reject expired data", "pr_createdAt": "2020-04-29T23:39:27Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4215", "timeline": [{"oid": "d9628802cbf0622496c9a7c5c926d49a7a4c75db", "url": "https://github.com/bisq-network/bisq/commit/d9628802cbf0622496c9a7c5c926d49a7a4c75db", "message": "If a new received protectedStorageEntry is expired we do not store it\nand do not broadcast.\n\nIt is unclear why we receive expired data (some are very old), but a\nmanipulated node might produce that and as it only removed at each\nbatch process running each minute to clean out expired data it still\ncould propagate. Is an attack vector also to flood the network with\noutdated offers where the maker is likely not online.\n\nShould fix https://github.com/bisq-network/bisq/issues/4026", "committedDate": "2020-04-29T23:37:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxOTk4MA==", "url": "https://github.com/bisq-network/bisq/pull/4215#discussion_r417819980", "bodyText": "I guess you meant peer.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.warn(\"We received an expired protectedStorageEntry from ppper {}. getCreationTimeStamp={}, protectedStorageEntry={}\",\n          \n          \n            \n                        log.warn(\"We received an expired protectedStorageEntry from peer {}. getCreationTimeStamp={}, protectedStorageEntry={}\",", "author": "ripcurlx", "createdAt": "2020-04-30T07:48:16Z", "path": "p2p/src/main/java/bisq/network/p2p/storage/P2PDataStorage.java", "diffHunk": "@@ -580,6 +577,15 @@ private boolean addProtectedStorageEntry(ProtectedStorageEntry protectedStorageE\n             return false;\n         }\n \n+        // To avoid that expired data get stored and broadcast we check early for expire date.\n+        if (protectedStorageEntry.isExpired(clock)) {\n+            log.warn(\"We received an expired protectedStorageEntry from ppper {}. getCreationTimeStamp={}, protectedStorageEntry={}\",", "originalCommit": "d9628802cbf0622496c9a7c5c926d49a7a4c75db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c57e73b867692e65d75c6301b7d90e5775a51c0a", "chunk": "diff --git a/p2p/src/main/java/bisq/network/p2p/storage/P2PDataStorage.java b/p2p/src/main/java/bisq/network/p2p/storage/P2PDataStorage.java\nindex 96374b2375..c4ef3071ec 100644\n--- a/p2p/src/main/java/bisq/network/p2p/storage/P2PDataStorage.java\n+++ b/p2p/src/main/java/bisq/network/p2p/storage/P2PDataStorage.java\n\n@@ -579,7 +579,7 @@ public class P2PDataStorage implements MessageListener, ConnectionListener, Pers\n \n         // To avoid that expired data get stored and broadcast we check early for expire date.\n         if (protectedStorageEntry.isExpired(clock)) {\n-            log.warn(\"We received an expired protectedStorageEntry from ppper {}. getCreationTimeStamp={}, protectedStorageEntry={}\",\n+            log.warn(\"We received an expired protectedStorageEntry from peer {}. getCreationTimeStamp={}, protectedStorageEntry={}\",\n                     sender != null ? sender.getFullAddress() : \"sender is null\",\n                     new Date(protectedStorageEntry.getCreationTimeStamp()),\n                     protectedStorageEntry);\n"}}, {"oid": "c57e73b867692e65d75c6301b7d90e5775a51c0a", "url": "https://github.com/bisq-network/bisq/commit/c57e73b867692e65d75c6301b7d90e5775a51c0a", "message": "Fix typo in log statement", "committedDate": "2020-04-30T08:23:37Z", "type": "commit"}]}