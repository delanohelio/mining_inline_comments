{"pr_number": 4608, "pr_title": "Add new 'getoffer offer-id' api method", "pr_createdAt": "2020-10-07T15:12:14Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4608", "timeline": [{"oid": "29d1905f3178db5971b8a448604e7b04a796b561", "url": "https://github.com/bisq-network/bisq/commit/29d1905f3178db5971b8a448604e7b04a796b561", "message": "Add new 'getoffer offer-id' api method\n\nThere are a number of use cases where a user may want to see a single\noffer instead of every offer for a currency pair on the buy or sell side.\nThe changes are:\n\n- Add getoffer to grpc.proto\n- Add new method to GrpcOffersService, CoreApi, CoreOffersService\n- Add new method to CLI\n- Adjust create offer tests to use this new convenience", "committedDate": "2020-10-07T15:09:13Z", "type": "commit"}, {"oid": "3a3f456fc9e0c211ebc0bafa050472b82f0ed58c", "url": "https://github.com/bisq-network/bisq/commit/3a3f456fc9e0c211ebc0bafa050472b82f0ed58c", "message": "Wrap Exception in gRPC StatusRuntimeException", "committedDate": "2020-10-07T18:58:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4NTczMg==", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r504985732", "bodyText": "Not wrong, but it's a bit odd to make list when we're looking for one element. .findAny() returns an Optional<> which you could then do offer.isPresent() and return offer.get() making it clear we only expect to find one offer.", "author": "sqrrm", "createdAt": "2020-10-14T21:35:19Z", "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -67,6 +68,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n         this.user = user;\n     }\n \n+    Offer getOffer(String id) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> o.getId().equals(id))\n+                .collect(Collectors.toList());", "originalCommit": "29d1905f3178db5971b8a448604e7b04a796b561", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAyNDY4OA==", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r505024688", "bodyText": "Resolved by commit 8394bd1", "author": "ghubstan", "createdAt": "2020-10-14T22:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4NTczMg=="}], "type": "inlineReview", "revised_code": {"commit": "8394bd1f6401a0b6f6843bd3b31e3c3b391d7f3c", "chunk": "diff --git a/core/src/main/java/bisq/core/api/CoreOffersService.java b/core/src/main/java/bisq/core/api/CoreOffersService.java\nindex 43da78dcfa..da07677f1b 100644\n--- a/core/src/main/java/bisq/core/api/CoreOffersService.java\n+++ b/core/src/main/java/bisq/core/api/CoreOffersService.java\n\n@@ -69,13 +69,10 @@ class CoreOffersService {\n     }\n \n     Offer getOffer(String id) {\n-        List<Offer> offers = offerBookService.getOffers().stream()\n+        return offerBookService.getOffers().stream()\n                 .filter(o -> o.getId().equals(id))\n-                .collect(Collectors.toList());\n-        if (offers.isEmpty())\n-            throw new IllegalArgumentException(format(\"offer with id '%s' not found\", id));\n-        else\n-            return offers.get(0);\n+                .findAny().orElseThrow(() ->\n+                        new IllegalStateException(format(\"offer with id '%s' not found\", id)));\n     }\n \n     List<Offer> getOffers(String direction, String currencyCode) {\n"}}, {"oid": "8394bd1f6401a0b6f6843bd3b31e3c3b391d7f3c", "url": "https://github.com/bisq-network/bisq/commit/8394bd1f6401a0b6f6843bd3b31e3c3b391d7f3c", "message": "Tidy up getOffer(id)", "committedDate": "2020-10-14T22:26:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NDc5OA==", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r505094798", "bodyText": "As we expect only one I would use a findAny and create an optional instead of a list.", "author": "chimp1984", "createdAt": "2020-10-15T00:25:07Z", "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -67,6 +68,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n         this.user = user;\n     }\n \n+    Offer getOffer(String id) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> o.getId().equals(id))\n+                .collect(Collectors.toList());", "originalCommit": "29d1905f3178db5971b8a448604e7b04a796b561", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NTI2MQ==", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r505095261", "bodyText": "Ah see you changed that in 8394bd1 ;-)", "author": "chimp1984", "createdAt": "2020-10-15T00:26:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NDc5OA=="}], "type": "inlineReview", "revised_code": null}]}