{"pr_number": 4953, "pr_title": "Cache results in account witness domain", "pr_createdAt": "2020-12-15T06:16:56Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4953", "timeline": [{"oid": "1314fd61a5e76eb73da054d018c0ac57c590279d", "url": "https://github.com/bisq-network/bisq/commit/1314fd61a5e76eb73da054d018c0ac57c590279d", "message": "Add accountAgeWitnessCache\n\nThe accountAgeWitnessMap is very large (70k items) and\naccess is a bit expensive. We usually only access less\nthan 100 items, those who have offers online. So we\nuse a cache for a fast lookup and only if\nnot found there we use the accountAgeWitnessMap and\nput then the new item into our cache.", "committedDate": "2020-12-16T00:15:40Z", "type": "commit"}, {"oid": "359dc3759dae1ea16642da0a40f8412bd660edb4", "url": "https://github.com/bisq-network/bisq/commit/359dc3759dae1ea16642da0a40f8412bd660edb4", "message": "Add getSignedWitnessSetCache\n\nThe getSignedWitnessSet is called very often and is a bit\nexpensive. We cache the result in that map but we\nremove the cache entry if we get a matching SignedWitness\nadded to the signedWitnessMap.", "committedDate": "2020-12-16T00:15:40Z", "type": "commit"}, {"oid": "425bfa3bf72a58bdbbc695391cf54cf6fb5cfcd8", "url": "https://github.com/bisq-network/bisq/commit/425bfa3bf72a58bdbbc695391cf54cf6fb5cfcd8", "message": "Fix failing test (remove did operate on map\ndirectly and we did not remove the item from the cache)\n\n- Add getSignedWitnessMapValues method for access to signedWitnessMap values\n- Remove Getter for signedWitnessMap\n- Add removeSignedWitness method (used in test only)\n- Use addToMap in test instead of direct access to map\n- Remove getSignedWitnessSetCache entry matching\nsignedWitness.getHashAsByteArray() as well.\nSee comment. @sqrrm: Can you cross check?", "committedDate": "2020-12-16T00:15:40Z", "type": "commit"}, {"oid": "f2273e663db4712651e2022b6a73607e6cd78975", "url": "https://github.com/bisq-network/bisq/commit/f2273e663db4712651e2022b6a73607e6cd78975", "message": "Use ConcurrentHashMap for cache.\n\nAs the normal maps are not using a ConcurrentHashMap it is\nlikely unnecessary as well that I am not aware of a\nmulti-threaded access.\nBut as it does not show any difference in performance\nit is likely the bit more safe option.", "committedDate": "2020-12-16T00:15:40Z", "type": "commit"}, {"oid": "f2273e663db4712651e2022b6a73607e6cd78975", "url": "https://github.com/bisq-network/bisq/commit/f2273e663db4712651e2022b6a73607e6cd78975", "message": "Use ConcurrentHashMap for cache.\n\nAs the normal maps are not using a ConcurrentHashMap it is\nlikely unnecessary as well that I am not aware of a\nmulti-threaded access.\nBut as it does not show any difference in performance\nit is likely the bit more safe option.", "committedDate": "2020-12-16T00:15:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5NzkzMQ==", "url": "https://github.com/bisq-network/bisq/pull/4953#discussion_r544697931", "bodyText": "The name is a bit off for a map, just signedWitnessSetCache would be more natural.", "author": "sqrrm", "createdAt": "2020-12-16T23:29:28Z", "path": "core/src/main/java/bisq/core/account/sign/SignedWitnessService.java", "diffHunk": "@@ -75,10 +76,15 @@\n     private final ArbitratorManager arbitratorManager;\n     private final User user;\n \n-    @Getter\n     private final Map<P2PDataStorage.ByteArray, SignedWitness> signedWitnessMap = new HashMap<>();\n+\n+    // The getSignedWitnessSet is called very often and is a bit expensive. We cache the result in that map but we\n+    // remove the cache entry if we get a matching SignedWitness added to the signedWitnessMap.\n+    private final Map<P2PDataStorage.ByteArray, Set<SignedWitness>> getSignedWitnessSetCache = new ConcurrentHashMap<>();", "originalCommit": "f2273e663db4712651e2022b6a73607e6cd78975", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyNTU5Mw==", "url": "https://github.com/bisq-network/bisq/pull/4953#discussion_r544725593", "bodyText": "Agree...", "author": "chimp1984", "createdAt": "2020-12-17T00:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5NzkzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "35e2bf63831f4c9a5592fdf9ad15da78eb6bc1ca", "chunk": "diff --git a/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java b/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\nindex e2ff6e152d..7caf96d62e 100644\n--- a/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\n+++ b/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\n\n@@ -80,7 +80,7 @@ public class SignedWitnessService {\n \n     // The getSignedWitnessSet is called very often and is a bit expensive. We cache the result in that map but we\n     // remove the cache entry if we get a matching SignedWitness added to the signedWitnessMap.\n-    private final Map<P2PDataStorage.ByteArray, Set<SignedWitness>> getSignedWitnessSetCache = new ConcurrentHashMap<>();\n+    private final Map<P2PDataStorage.ByteArray, Set<SignedWitness>> signedWitnessSetCache = new ConcurrentHashMap<>();\n \n     private final FilterManager filterManager;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMjUyMg==", "url": "https://github.com/bisq-network/bisq/pull/4953#discussion_r544702522", "bodyText": "This looks redundant, it's removing the same item from the cache again. hash is calculated as new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()) when following the calls to signedWitness.", "author": "sqrrm", "createdAt": "2020-12-16T23:40:49Z", "path": "core/src/main/java/bisq/core/account/sign/SignedWitnessService.java", "diffHunk": "@@ -487,8 +509,18 @@ private boolean verifyDate(SignedWitness signedWitness, long childSignedWitnessD\n     ///////////////////////////////////////////////////////////////////////////////////////////\n \n     @VisibleForTesting\n-    void addToMap(SignedWitness signedWitness) {\n-        signedWitnessMap.putIfAbsent(signedWitness.getHashAsByteArray(), signedWitness);\n+    public void addToMap(SignedWitness signedWitness) {\n+        P2PDataStorage.ByteArray hash = signedWitness.getHashAsByteArray();\n+        signedWitnessMap.putIfAbsent(hash, signedWitness);\n+\n+        // We remove the entry with that hash in case we have cached it, so at the next getSignedWitnessSet\n+        // call we use the updated signedWitnessMap to re-fill our cache.\n+        getSignedWitnessSetCache.remove(new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()));\n+\n+        // Not sure if that is needed as well, tests did succeed in both cases, but seems to be more safe to remove\n+        // potential entries with hash as well. A removed item in getSignedWitnessSetCache carries no risk, though a\n+        // remaining item would.\n+        getSignedWitnessSetCache.remove(hash);", "originalCommit": "f2273e663db4712651e2022b6a73607e6cd78975", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyNjI2Nw==", "url": "https://github.com/bisq-network/bisq/pull/4953#discussion_r544726267", "bodyText": "I have not looked closely but I took it from the getSignedWitnessSet methods where signedWitness.getHashAsByteArray() got compared with new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()). Have not looked deeper into the domain if those 2 data are the same actually. If so, yes that second remove is pointless.", "author": "chimp1984", "createdAt": "2020-12-17T00:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMjUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "35e2bf63831f4c9a5592fdf9ad15da78eb6bc1ca", "chunk": "diff --git a/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java b/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\nindex e2ff6e152d..7caf96d62e 100644\n--- a/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\n+++ b/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\n\n@@ -515,12 +515,12 @@ public class SignedWitnessService {\n \n         // We remove the entry with that hash in case we have cached it, so at the next getSignedWitnessSet\n         // call we use the updated signedWitnessMap to re-fill our cache.\n-        getSignedWitnessSetCache.remove(new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()));\n+        signedWitnessSetCache.remove(new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()));\n \n         // Not sure if that is needed as well, tests did succeed in both cases, but seems to be more safe to remove\n         // potential entries with hash as well. A removed item in getSignedWitnessSetCache carries no risk, though a\n         // remaining item would.\n-        getSignedWitnessSetCache.remove(hash);\n+        signedWitnessSetCache.remove(hash);\n     }\n \n     private void publishSignedWitness(SignedWitness signedWitness) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMzg4Nw==", "url": "https://github.com/bisq-network/bisq/pull/4953#discussion_r544703887", "bodyText": "This seems redundant, same reason as earlier comment", "author": "sqrrm", "createdAt": "2020-12-16T23:44:11Z", "path": "core/src/main/java/bisq/core/account/sign/SignedWitnessService.java", "diffHunk": "@@ -501,7 +533,22 @@ private void publishSignedWitness(SignedWitness signedWitness) {\n     }\n \n     private void doRepublishAllSignedWitnesses() {\n-        signedWitnessMap.forEach((e, signedWitness) -> p2PService.addPersistableNetworkPayload(signedWitness, true));\n+        getSignedWitnessMapValues()\n+                .forEach(signedWitness -> p2PService.addPersistableNetworkPayload(signedWitness, true));\n+    }\n+\n+    @VisibleForTesting\n+    public void removeSignedWitness(SignedWitness signedWitness) {\n+        P2PDataStorage.ByteArray hash = signedWitness.getHashAsByteArray();\n+        signedWitnessMap.remove(hash);\n+\n+        // Need to remove the entry matching signedWitness.getAccountAgeWitnessHash() (test would fail otherwise)\n+        getSignedWitnessSetCache.remove(new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()));\n+\n+        // Not sure if that is needed as well, tests did succeed in both cases, but seems to be more safe to remove\n+        // potential entries with hash as well. A removed item in getSignedWitnessSetCache carries no risk, though a\n+        // remaining item would.\n+        getSignedWitnessSetCache.remove(hash);", "originalCommit": "f2273e663db4712651e2022b6a73607e6cd78975", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35e2bf63831f4c9a5592fdf9ad15da78eb6bc1ca", "chunk": "diff --git a/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java b/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\nindex e2ff6e152d..7caf96d62e 100644\n--- a/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\n+++ b/core/src/main/java/bisq/core/account/sign/SignedWitnessService.java\n\n@@ -543,12 +543,12 @@ public class SignedWitnessService {\n         signedWitnessMap.remove(hash);\n \n         // Need to remove the entry matching signedWitness.getAccountAgeWitnessHash() (test would fail otherwise)\n-        getSignedWitnessSetCache.remove(new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()));\n+        signedWitnessSetCache.remove(new P2PDataStorage.ByteArray(signedWitness.getAccountAgeWitnessHash()));\n \n         // Not sure if that is needed as well, tests did succeed in both cases, but seems to be more safe to remove\n         // potential entries with hash as well. A removed item in getSignedWitnessSetCache carries no risk, though a\n         // remaining item would.\n-        getSignedWitnessSetCache.remove(hash);\n+        signedWitnessSetCache.remove(hash);\n     }\n \n     // Remove SignedWitnesses that are signed by TRADE that also have an ARBITRATOR signature\n"}}, {"oid": "35e2bf63831f4c9a5592fdf9ad15da78eb6bc1ca", "url": "https://github.com/bisq-network/bisq/commit/35e2bf63831f4c9a5592fdf9ad15da78eb6bc1ca", "message": "Rename getSignedWitnessSetCache to signedWitnessSetCache", "committedDate": "2020-12-20T14:34:00Z", "type": "commit"}, {"oid": "b6a01d0ac7ae189b9272bc76b15bba8a9f5d1efb", "url": "https://github.com/bisq-network/bisq/commit/b6a01d0ac7ae189b9272bc76b15bba8a9f5d1efb", "message": "Rename signedWitnessSetCache to signedWitnessSetByAccountAgeWitnessHash\nChange comments (after understanding the domain usage better)\nMaintain the set at add and remove methods\nUse HashMap instead of ConcurrentHashMap as that class is only used\nfrom UserThread and other fields are not threadsafe either.", "committedDate": "2020-12-20T15:00:28Z", "type": "commit"}, {"oid": "aea904d24f032358afa6d000fced4fd5d7287380", "url": "https://github.com/bisq-network/bisq/commit/aea904d24f032358afa6d000fced4fd5d7287380", "message": "We do not need to lookup in getSignedWitnessMapValues\nanymore as we maintain the signedWitnessSetByAccountAgeWitnessHash\nat each add/remove operation.", "committedDate": "2020-12-20T15:28:28Z", "type": "commit"}, {"oid": "1462673e57dd8887117ac793084cd2cfd39d4438", "url": "https://github.com/bisq-network/bisq/commit/1462673e57dd8887117ac793084cd2cfd39d4438", "message": "Use getSignedWitnessSet instead of\niterations over getSignedWitnessMapValues", "committedDate": "2020-12-20T15:29:46Z", "type": "commit"}, {"oid": "f5bb702d6b4d6aae1e0cbea81f12bf1ef92ad43f", "url": "https://github.com/bisq-network/bisq/commit/f5bb702d6b4d6aae1e0cbea81f12bf1ef92ad43f", "message": "Improve arbitratorSignOrphanWitness method", "committedDate": "2020-12-20T15:32:50Z", "type": "commit"}]}