{"pr_number": 4711, "pr_title": "Implement api methods 'keepfunds', 'withdrawfunds'", "pr_createdAt": "2020-10-26T23:50:09Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4711", "timeline": [{"oid": "cb65de6d2e1497eb8eaf86404fc3285729aba87c", "url": "https://github.com/bisq-network/bisq/commit/cb65de6d2e1497eb8eaf86404fc3285729aba87c", "message": "Block on tx-fee-request in core TakeOfferModel init\n\nAdded license comment too.", "committedDate": "2020-10-23T15:47:06Z", "type": "commit"}, {"oid": "ab20225cd2d50003a8f7f45feca6227a2370a9fb", "url": "https://github.com/bisq-network/bisq/commit/ab20225cd2d50003a8f7f45feca6227a2370a9fb", "message": "Add compiler warning suppression, remove comment", "committedDate": "2020-10-24T19:25:20Z", "type": "commit"}, {"oid": "63cf4369904855013ac5b8e37de43462c02e1551", "url": "https://github.com/bisq-network/bisq/commit/63cf4369904855013ac5b8e37de43462c02e1551", "message": "Add fields to grpc TradeInfo proto & wrapper", "committedDate": "2020-10-24T19:27:03Z", "type": "commit"}, {"oid": "296e4f98cb6231ed2226e72d95c1317981a9d008", "url": "https://github.com/bisq-network/bisq/commit/296e4f98cb6231ed2226e72d95c1317981a9d008", "message": "Replace static TradeUtil with singleton TradeUtil\n\nThe API is going to need some desktop trade utilities, which should be\nshared between :desktop and :core.api.", "committedDate": "2020-10-24T20:26:10Z", "type": "commit"}, {"oid": "ccd3c99f2e5b9cf276e6b70bceb34e73fb0a6858", "url": "https://github.com/bisq-network/bisq/commit/ccd3c99f2e5b9cf276e6b70bceb34e73fb0a6858", "message": "Fix comment typos", "committedDate": "2020-10-24T20:45:01Z", "type": "commit"}, {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019", "url": "https://github.com/bisq-network/bisq/commit/24ba9215cd12f65605b23c2f5d53037258afd019", "message": "Refactor PendingTradesViewModel methods -> TradeUtil & OfferUtil", "committedDate": "2020-10-25T13:41:19Z", "type": "commit"}, {"oid": "36ad1379496d29bf26d6d3c90c4cc50b8c74b928", "url": "https://github.com/bisq-network/bisq/commit/36ad1379496d29bf26d6d3c90c4cc50b8c74b928", "message": "Remove trailing spaces for codacy", "committedDate": "2020-10-25T13:54:40Z", "type": "commit"}, {"oid": "95bcb1ef9c74c6fa48f946ebc29b9af55bd1ed70", "url": "https://github.com/bisq-network/bisq/commit/95bcb1ef9c74c6fa48f946ebc29b9af55bd1ed70", "message": "Refactor PendingTradesDataModel methods -> TradeUtil\n\nScope of this refactoring is small;  more can be done, but the short\nterm goal is to share trade util logic with core api.\n\n- Removed unused method getCurrencyCode()\n- Made minor style changes\n- Removed duplicated code block", "committedDate": "2020-10-25T14:27:30Z", "type": "commit"}, {"oid": "bbd7a31c88907e7c29ce473e5a71603f976ace21", "url": "https://github.com/bisq-network/bisq/commit/bbd7a31c88907e7c29ce473e5a71603f976ace21", "message": "Remove unused import", "committedDate": "2020-10-25T14:38:03Z", "type": "commit"}, {"oid": "161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "url": "https://github.com/bisq-network/bisq/commit/161dbade0d04dcd7439e3ed94929a4c4ce3fdab0", "message": "Add getRole(tradeId) to core api\n\nAPI users will need to see their role as maker/taker when looking at trade details.\n\n- Add getRole(trade) to TradeUtil.\n- Add getTradeRole(tradeId) to CoreApi, CoreTradesService.\n- Add role field to TradeInfo proto and its wrapper class.", "committedDate": "2020-10-25T19:22:20Z", "type": "commit"}, {"oid": "3379376babab645af1f65cf595aca06768fd40c1", "url": "https://github.com/bisq-network/bisq/commit/3379376babab645af1f65cf595aca06768fd40c1", "message": "Refactor CLI output formatting code & add trade formatter\n\n- Move output column header specs to its own shared constants class.\n\n- Add new TradeFormat class for printing trade details in the console.\n\n- Print formatted trade in api trade tests -- to see output before\n  using formatter in CLI (in next PR).", "committedDate": "2020-10-25T19:50:22Z", "type": "commit"}, {"oid": "d8bc26588c90d35436380143988e485b62a19e83", "url": "https://github.com/bisq-network/bisq/commit/d8bc26588c90d35436380143988e485b62a19e83", "message": "Add license comment", "committedDate": "2020-10-25T19:52:45Z", "type": "commit"}, {"oid": "31435bba51162f2ba352a7c055f5af9106010e5f", "url": "https://github.com/bisq-network/bisq/commit/31435bba51162f2ba352a7c055f5af9106010e5f", "message": "Move semicolon up from blank line", "committedDate": "2020-10-25T20:02:40Z", "type": "commit"}, {"oid": "2b23704b5af862f947b64b1ca30234f8641b0114", "url": "https://github.com/bisq-network/bisq/commit/2b23704b5af862f947b64b1ca30234f8641b0114", "message": "Add 'gettrade' to api method CLI", "committedDate": "2020-10-25T20:15:02Z", "type": "commit"}, {"oid": "a2b292318cfbe753f8aca403051a59d7ddc8b8d2", "url": "https://github.com/bisq-network/bisq/commit/a2b292318cfbe753f8aca403051a59d7ddc8b8d2", "message": "Add boolean 'showcontract' argument to api's 'gettrade'\n\nOptionally print the json contract for a given trade id.", "committedDate": "2020-10-25T20:44:18Z", "type": "commit"}, {"oid": "a8decafc2ffd9956c273d35470d86866a29d810f", "url": "https://github.com/bisq-network/bisq/commit/a8decafc2ffd9956c273d35470d86866a29d810f", "message": "Stub out api methods 'keepfunds', 'withdrawfunds'\n\nThis PR adds trade closing method stubs to keep funds in the\nBisq wallet or send them to an external BTC wallet.\n\n- Add grpc protos\n- Add new methods to GrpcTradesService, CoreApi\n- Stub out implementations in CoreTradesService\n- Add methods to CLI", "committedDate": "2020-10-26T20:43:08Z", "type": "commit"}, {"oid": "a3631a022f477cd2e9a00134be978c75a0ce3ec4", "url": "https://github.com/bisq-network/bisq/commit/a3631a022f477cd2e9a00134be978c75a0ce3ec4", "message": "Implement api methods 'keepfunds', 'withdrawfunds'\n\nThe CoreTradesService was refactored to work for newly added api methods:\n\n- keepfunds -- close trade, keep funds in bisq wallet\n\n- withdrawfunds -- close trade, withdraw funds to external btc wallet\n\nA getKey accessor was added to CoreWalletsService (needed by withdrawfunds impl).", "committedDate": "2020-10-26T23:44:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyMDI3OA==", "url": "https://github.com/bisq-network/bisq/pull/4711#discussion_r515520278", "bodyText": "There is no guarantee that the Tradable is a Trade here, probably good to add a check for instanceof.", "author": "sqrrm", "createdAt": "2020-10-31T17:37:51Z", "path": "core/src/main/java/bisq/core/api/CoreTradesService.java", "diffHunk": "@@ -116,26 +137,109 @@ void confirmPaymentReceived(String tradeId) {\n         }\n     }\n \n-    @SuppressWarnings(\"unused\")\n     void keepFunds(String tradeId) {\n-        log.info(\"TODO\");\n+        verifyTradeIsNotClosed(tradeId);\n+        var trade = getOpenTrade(tradeId).orElseThrow(() ->\n+                new IllegalArgumentException(format(\"trade with id '%s' not found\", tradeId)));\n+        log.info(\"Keeping funds received from trade {}\", tradeId);\n+        tradeManager.onTradeCompleted(trade);\n     }\n \n-    @SuppressWarnings(\"unused\")\n-    void withdrawFunds(String tradeId, String address) {\n-        log.info(\"TODO\");\n+    void withdrawFunds(String tradeId, String toAddress) {\n+        // An encrypted wallet must be unlocked for this operation.\n+        verifyTradeIsNotClosed(tradeId);\n+        var trade = getOpenTrade(tradeId).orElseThrow(() ->\n+                new IllegalArgumentException(format(\"trade with id '%s' not found\", tradeId)));\n+\n+        verifyIsValidBTCAddress(toAddress);\n+\n+        var fromAddressEntry = btcWalletService.getOrCreateAddressEntry(trade.getId(), TRADE_PAYOUT);\n+        verifyFundsNotWithdrawn(fromAddressEntry);\n+\n+        var amount = trade.getPayoutAmount();\n+        var fee = getEstimatedTxFee(fromAddressEntry.getAddressString(), toAddress, amount);\n+        var receiverAmount = amount.subtract(fee);\n+\n+        log.info(format(\"Withdrawing funds received from trade %s:\"\n+                        + \"%n From %s%n To %s%n Amt %s%n Tx Fee %s%n Receiver Amt %s\",\n+                tradeId,\n+                fromAddressEntry.getAddressString(),\n+                toAddress,\n+                amount.toFriendlyString(),\n+                fee.toFriendlyString(),\n+                receiverAmount.toFriendlyString()));\n+\n+        tradeManager.onWithdrawRequest(\n+                toAddress,\n+                amount,\n+                fee,\n+                coreWalletsService.getKey(),\n+                trade,\n+                () -> {\n+                },\n+                (errorMessage, throwable) -> {\n+                    log.error(errorMessage, throwable);\n+                    throw new IllegalStateException(errorMessage, throwable);\n+                });\n     }\n \n     String getTradeRole(String tradeId) {\n         return tradeUtil.getRole(getTrade(tradeId));\n     }\n \n     Trade getTrade(String tradeId) {\n-        return tradeManager.getTradeById(tradeId).orElseThrow(() ->\n-                new IllegalArgumentException(format(\"trade with id '%s' not found\", tradeId)));\n+        return getOpenTrade(tradeId).orElseGet(() ->\n+                getClosedTrade(tradeId).orElseThrow(() ->\n+                        new IllegalArgumentException(format(\"trade with id '%s' not found\", tradeId))\n+                ));\n+    }\n+\n+    private Optional<Trade> getOpenTrade(String tradeId) {\n+        return tradeManager.getTradeById(tradeId);\n+    }\n+\n+    private Optional<Trade> getClosedTrade(String tradeId) {\n+        return closedTradableManager.getTradableById(tradeId).map(value -> (Trade) value);", "originalCommit": "a3631a022f477cd2e9a00134be978c75a0ce3ec4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyNjkyOA==", "url": "https://github.com/bisq-network/bisq/pull/4711#discussion_r515526928", "bodyText": "Fixed in PR #4731, commit fcdfc68.", "author": "ghubstan", "createdAt": "2020-10-31T18:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyMDI3OA=="}], "type": "inlineReview", "revised_code": null}]}