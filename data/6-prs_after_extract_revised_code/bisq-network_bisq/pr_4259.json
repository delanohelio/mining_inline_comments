{"pr_number": 4259, "pr_title": "Secondary sort order for offer book (rewrite)", "pr_createdAt": "2020-05-15T17:22:51Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4259", "timeline": [{"oid": "2b797dafedfcf7b133431a6ee06b9f8ae03d2992", "url": "https://github.com/bisq-network/bisq/commit/2b797dafedfcf7b133431a6ee06b9f8ae03d2992", "message": "Secondary sort order for offer book\n\nA rewrite of @freimair's PR\nhttps://github.com/bisq-network/bisq/pull/4168.\n\nAdds a secondary sort order of offers in market offer book by offer\namount that goes from high to low. Also, refactors-away overcomplicated\nprevious implementation of primary sort.\n\nCo-authored-by: Florian Reimair <office@florianreimair.at>\nCo-authored-by: cd2357 <15956136+cd2357@users.noreply.github.com>", "committedDate": "2020-05-15T17:15:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MzAwNg==", "url": "https://github.com/bisq-network/bisq/pull/4259#discussion_r429693006", "bodyText": "boolean isCrypto = CurrencyUtil.isCryptoCurrency(getCurrencyCode());", "author": "jmacxx", "createdAt": "2020-05-25T00:42:55Z", "path": "desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java", "diffHunk": "@@ -276,22 +276,24 @@ private boolean isAnyPricePresent() {\n     }\n \n     private void updateChartData() {\n+\n+        // Offer price can be null (if price feed unavailable), thus a null-tolerant comparator is used.\n+        Comparator<Offer> offerPriceComparator = Comparator.comparing(Offer::getPrice, Comparator.nullsLast(Comparator.naturalOrder()));\n+        // Offer amounts are used for the secondary sort. They are sorted from high to low.\n+        Comparator<Offer> offerAmountComparator = Comparator.comparing(Offer::getAmount).reversed();\n+", "originalCommit": "2b797dafedfcf7b133431a6ee06b9f8ae03d2992", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3dc13b6effcd4dd08be113828da28a6d07d6a830", "chunk": "diff --git a/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java b/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\nindex b1eaadd5e3..dc6fcf4de3 100644\n--- a/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\n+++ b/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\n\n@@ -279,6 +279,14 @@ class OfferBookChartViewModel extends ActivatableViewModel {\n \n         // Offer price can be null (if price feed unavailable), thus a null-tolerant comparator is used.\n         Comparator<Offer> offerPriceComparator = Comparator.comparing(Offer::getPrice, Comparator.nullsLast(Comparator.naturalOrder()));\n+\n+        // Trading btc-fiat is considered as buying/selling BTC, but trading btc-altcoin is\n+        // considered as buying/selling Altcoin. Because of this, when viewing a btc-altcoin pair,\n+        // the buy column is actually the sell column and vice versa. To maintain the expected\n+        // ordering, we have to reverse the price comparator.\n+        boolean isCrypto = CurrencyUtil.isCryptoCurrency(getCurrencyCode());\n+        if (isCrypto) offerPriceComparator = offerPriceComparator.reversed();\n+\n         // Offer amounts are used for the secondary sort. They are sorted from high to low.\n         Comparator<Offer> offerAmountComparator = Comparator.comparing(Offer::getAmount).reversed();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MzA3Mg==", "url": "https://github.com/bisq-network/bisq/pull/4259#discussion_r429693072", "bodyText": "(isCrypto ? offerPriceComparator : offerPriceComparator.reversed()) // Buy offers, as opposed to sell offers, are primarily sorted from high price to low.", "author": "jmacxx", "createdAt": "2020-05-25T00:43:31Z", "path": "desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java", "diffHunk": "@@ -276,22 +276,24 @@ private boolean isAnyPricePresent() {\n     }\n \n     private void updateChartData() {\n+\n+        // Offer price can be null (if price feed unavailable), thus a null-tolerant comparator is used.\n+        Comparator<Offer> offerPriceComparator = Comparator.comparing(Offer::getPrice, Comparator.nullsLast(Comparator.naturalOrder()));\n+        // Offer amounts are used for the secondary sort. They are sorted from high to low.\n+        Comparator<Offer> offerAmountComparator = Comparator.comparing(Offer::getAmount).reversed();\n+\n+        var buyOfferSortComparator =\n+            offerPriceComparator.reversed() // Buy offers, as opposed to sell offers, are primarily sorted from high price to low.", "originalCommit": "2b797dafedfcf7b133431a6ee06b9f8ae03d2992", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3dc13b6effcd4dd08be113828da28a6d07d6a830", "chunk": "diff --git a/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java b/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\nindex b1eaadd5e3..dc6fcf4de3 100644\n--- a/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\n+++ b/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\n\n@@ -279,6 +279,14 @@ class OfferBookChartViewModel extends ActivatableViewModel {\n \n         // Offer price can be null (if price feed unavailable), thus a null-tolerant comparator is used.\n         Comparator<Offer> offerPriceComparator = Comparator.comparing(Offer::getPrice, Comparator.nullsLast(Comparator.naturalOrder()));\n+\n+        // Trading btc-fiat is considered as buying/selling BTC, but trading btc-altcoin is\n+        // considered as buying/selling Altcoin. Because of this, when viewing a btc-altcoin pair,\n+        // the buy column is actually the sell column and vice versa. To maintain the expected\n+        // ordering, we have to reverse the price comparator.\n+        boolean isCrypto = CurrencyUtil.isCryptoCurrency(getCurrencyCode());\n+        if (isCrypto) offerPriceComparator = offerPriceComparator.reversed();\n+\n         // Offer amounts are used for the secondary sort. They are sorted from high to low.\n         Comparator<Offer> offerAmountComparator = Comparator.comparing(Offer::getAmount).reversed();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MzEzOA==", "url": "https://github.com/bisq-network/bisq/pull/4259#discussion_r429693138", "bodyText": "(isCrypto ? offerPriceComparator.reversed() : offerPriceComparator)", "author": "jmacxx", "createdAt": "2020-05-25T00:44:14Z", "path": "desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java", "diffHunk": "@@ -276,22 +276,24 @@ private boolean isAnyPricePresent() {\n     }\n \n     private void updateChartData() {\n+\n+        // Offer price can be null (if price feed unavailable), thus a null-tolerant comparator is used.\n+        Comparator<Offer> offerPriceComparator = Comparator.comparing(Offer::getPrice, Comparator.nullsLast(Comparator.naturalOrder()));\n+        // Offer amounts are used for the secondary sort. They are sorted from high to low.\n+        Comparator<Offer> offerAmountComparator = Comparator.comparing(Offer::getAmount).reversed();\n+\n+        var buyOfferSortComparator =\n+            offerPriceComparator.reversed() // Buy offers, as opposed to sell offers, are primarily sorted from high price to low.\n+            .thenComparing(offerAmountComparator);\n+        var sellOfferSortComparator =\n+            offerPriceComparator", "originalCommit": "2b797dafedfcf7b133431a6ee06b9f8ae03d2992", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3dc13b6effcd4dd08be113828da28a6d07d6a830", "chunk": "diff --git a/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java b/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\nindex b1eaadd5e3..dc6fcf4de3 100644\n--- a/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\n+++ b/desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java\n\n@@ -279,6 +279,14 @@ class OfferBookChartViewModel extends ActivatableViewModel {\n \n         // Offer price can be null (if price feed unavailable), thus a null-tolerant comparator is used.\n         Comparator<Offer> offerPriceComparator = Comparator.comparing(Offer::getPrice, Comparator.nullsLast(Comparator.naturalOrder()));\n+\n+        // Trading btc-fiat is considered as buying/selling BTC, but trading btc-altcoin is\n+        // considered as buying/selling Altcoin. Because of this, when viewing a btc-altcoin pair,\n+        // the buy column is actually the sell column and vice versa. To maintain the expected\n+        // ordering, we have to reverse the price comparator.\n+        boolean isCrypto = CurrencyUtil.isCryptoCurrency(getCurrencyCode());\n+        if (isCrypto) offerPriceComparator = offerPriceComparator.reversed();\n+\n         // Offer amounts are used for the secondary sort. They are sorted from high to low.\n         Comparator<Offer> offerAmountComparator = Comparator.comparing(Offer::getAmount).reversed();\n \n"}}, {"oid": "3dc13b6effcd4dd08be113828da28a6d07d6a830", "url": "https://github.com/bisq-network/bisq/commit/3dc13b6effcd4dd08be113828da28a6d07d6a830", "message": "Fix reversed ordering in altcoin market", "committedDate": "2020-05-25T09:37:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1MDY0OQ==", "url": "https://github.com/bisq-network/bisq/pull/4259#discussion_r429950649", "bodyText": "Prefer no blank lines at the beginning of methods.", "author": "sqrrm", "createdAt": "2020-05-25T14:00:53Z", "path": "desktop/src/main/java/bisq/desktop/main/market/offerbook/OfferBookChartViewModel.java", "diffHunk": "@@ -276,22 +276,32 @@ private boolean isAnyPricePresent() {\n     }\n \n     private void updateChartData() {\n+", "originalCommit": "3dc13b6effcd4dd08be113828da28a6d07d6a830", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}