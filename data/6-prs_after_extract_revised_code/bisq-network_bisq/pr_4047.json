{"pr_number": 4047, "pr_title": "Added graceful shutdown hook", "pr_createdAt": "2020-03-11T12:53:20Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4047", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MDUxNQ==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r391040515", "bodyText": "Is there a reason why you labeled it Monitor Shutdown Hook ?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            }, \"Monitor Shutdown Hook \")\n          \n          \n            \n                            }, \"BisqExecutable Shutdown Hook\")", "author": "ripcurlx", "createdAt": "2020-03-11T15:07:37Z", "path": "core/src/main/java/bisq/core/app/BisqExecutable.java", "diffHunk": "@@ -100,6 +101,12 @@ protected void doExecute() {\n         CoreSetup.setup(config);\n         addCapabilities();\n \n+        // exit gracefully on shutdown\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+                    gracefulShutDown(() -> log.info(\"gracefulShutDown complete\"));\n+                }, \"Monitor Shutdown Hook \")", "originalCommit": "6d1f266debe7c07636e816ba206f2d7aeb6105de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MTU5NA==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r391041594", "bodyText": "copy and paste... my bad", "author": "freimair", "createdAt": "2020-03-11T15:09:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MDUxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "1bf1ae43777d44c82566693aea7c49d7f7f0ae96", "chunk": "diff --git a/core/src/main/java/bisq/core/app/BisqExecutable.java b/core/src/main/java/bisq/core/app/BisqExecutable.java\nindex 8e12e19b61..d336550260 100644\n--- a/core/src/main/java/bisq/core/app/BisqExecutable.java\n+++ b/core/src/main/java/bisq/core/app/BisqExecutable.java\n\n@@ -101,11 +105,15 @@ public abstract class BisqExecutable implements GracefulShutDownHandler, BisqSet\n         CoreSetup.setup(config);\n         addCapabilities();\n \n-        // exit gracefully on shutdown\n-        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n-                    gracefulShutDown(() -> log.info(\"gracefulShutDown complete\"));\n-                }, \"Monitor Shutdown Hook \")\n-        );\n+        Signal.handle(new Signal(\"INT\"), signal -> {\n+            gracefulShutDown(() -> {\n+            });\n+        });\n+\n+        Signal.handle(new Signal(\"TERM\"), signal -> {\n+            gracefulShutDown(() -> {\n+            });\n+        });\n \n         // If application is JavaFX application we need to wait until it is initialized\n         launchApplication();\n"}}, {"oid": "1bf1ae43777d44c82566693aea7c49d7f7f0ae96", "url": "https://github.com/bisq-network/bisq/commit/1bf1ae43777d44c82566693aea7c49d7f7f0ae96", "message": "Added graceful shutdown hook\n\nGraceful shutdown has only be done in case of an error or when\nusing the GUI. A regular eg. seednode shutdown is not covered\nthough.\n\nNow, SIGTERM and SIGINT triggers a graceful shutdown procedure.", "committedDate": "2020-03-26T16:09:29Z", "type": "commit"}, {"oid": "53752f852226fd485541d22ec40627bb5a96baf0", "url": "https://github.com/bisq-network/bisq/commit/53752f852226fd485541d22ec40627bb5a96baf0", "message": "Fix shutdown order", "committedDate": "2020-03-26T16:27:12Z", "type": "commit"}, {"oid": "c20c4b63ac56e1f6b1ff4071f2129d4554a8ceb2", "url": "https://github.com/bisq-network/bisq/commit/c20c4b63ac56e1f6b1ff4071f2129d4554a8ceb2", "message": "Wait for connections to be closed\n\nThe close connection process did fire up worker threads to actually\nclose the connections. Yet, once all threads have been spawned,\nthe code proceeds assuming that there are no connections left open\nwithout checking.\nThis lead to situations where tor has been shutdown already but\nopen connections. These connections tried to gracefully close but\nwithout tor, that only caused a wall of exceptions.", "committedDate": "2020-03-26T16:27:41Z", "type": "commit"}, {"oid": "2e7483dff63d77ecc1f8bcf6afc1143db0a7a285", "url": "https://github.com/bisq-network/bisq/commit/2e7483dff63d77ecc1f8bcf6afc1143db0a7a285", "message": "Only send message bundle if not stopped", "committedDate": "2020-03-26T16:27:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MjU0Mg==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399142542", "bodyText": "Is there a specific reason why you used 10 milliseconds before triggering the complete handler?", "author": "ripcurlx", "createdAt": "2020-03-27T09:42:15Z", "path": "core/src/main/java/bisq/core/offer/OpenOfferManager.java", "diffHunk": "@@ -221,8 +224,25 @@ public void shutDown(@Nullable Runnable completeHandler) {\n         log.info(\"Remove open offers at shutDown. Number of open offers: {}\", size);\n         if (offerBookService.isBootstrapped() && size > 0) {\n             openOffers.forEach(openOffer -> offerBookService.removeOfferAtShutDown(openOffer.getOffer().getOfferPayload()));\n+\n+            // wait for offers to be removed, offerBookService::removeOfferAtShutdown may create threads to remove offers...\n+            LocalTime timeout = LocalTime.now().plus(Duration.ofSeconds(15));\n+            while (!openOffers.getList().isEmpty()) {\n+                // check timeout\n+                if (timeout.isBefore(LocalTime.now())) {\n+                    log.error(\"Could not remove all offers within timeout (\" + openOffers.size() + \" offers remaining). Moving on.\");\n+                    break;\n+                }\n+                try {\n+                    // reduce system load\n+                    Thread.sleep(10);\n+                } catch (InterruptedException e) {\n+                    // ignore\n+                }\n+            }\n+\n             if (completeHandler != null)\n-                UserThread.runAfter(completeHandler, size * 200 + 500, TimeUnit.MILLISECONDS);\n+                UserThread.runAfter(completeHandler, 10, TimeUnit.MILLISECONDS);", "originalCommit": "f0678fc9c62c4f0abdf544da019c0a09422c5b92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4MzYzNQ==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399583635", "bodyText": "In fact after digging into this again, I believe it is best to actually revert this change. We do not have any means of checking whether offers have been taken down already. Syncing that up would mean that we need to alter a whole lot of \"stopping\" business logic in the code. Although, exactly that is due someday, it is imho not necessary now.", "author": "freimair", "createdAt": "2020-03-27T23:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MjU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8bab25ac177b7b56863e2eecb4f4a83b02955e42", "chunk": "diff --git a/core/src/main/java/bisq/core/offer/OpenOfferManager.java b/core/src/main/java/bisq/core/offer/OpenOfferManager.java\nindex 1ef4e0ff11..8407ae433a 100644\n--- a/core/src/main/java/bisq/core/offer/OpenOfferManager.java\n+++ b/core/src/main/java/bisq/core/offer/OpenOfferManager.java\n\n@@ -224,25 +221,8 @@ public class OpenOfferManager implements PeerManager.Listener, DecryptedDirectMe\n         log.info(\"Remove open offers at shutDown. Number of open offers: {}\", size);\n         if (offerBookService.isBootstrapped() && size > 0) {\n             openOffers.forEach(openOffer -> offerBookService.removeOfferAtShutDown(openOffer.getOffer().getOfferPayload()));\n-\n-            // wait for offers to be removed, offerBookService::removeOfferAtShutdown may create threads to remove offers...\n-            LocalTime timeout = LocalTime.now().plus(Duration.ofSeconds(15));\n-            while (!openOffers.getList().isEmpty()) {\n-                // check timeout\n-                if (timeout.isBefore(LocalTime.now())) {\n-                    log.error(\"Could not remove all offers within timeout (\" + openOffers.size() + \" offers remaining). Moving on.\");\n-                    break;\n-                }\n-                try {\n-                    // reduce system load\n-                    Thread.sleep(10);\n-                } catch (InterruptedException e) {\n-                    // ignore\n-                }\n-            }\n-\n             if (completeHandler != null)\n-                UserThread.runAfter(completeHandler, 10, TimeUnit.MILLISECONDS);\n+                UserThread.runAfter(completeHandler, size * 200 + 500, TimeUnit.MILLISECONDS);\n         } else {\n             if (completeHandler != null)\n                 completeHandler.run();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MzE5OQ==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399143199", "bodyText": "NIT: I think we decided at some point not to use conditionals within one line anymore", "author": "ripcurlx", "createdAt": "2020-03-27T09:43:27Z", "path": "p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java", "diffHunk": "@@ -187,6 +187,7 @@ private BooleanProperty torNetworkNodeShutDown() {\n                 long ts = System.currentTimeMillis();\n                 log.debug(\"Shutdown torNetworkNode\");\n                 try {\n+                    if (tor == null) tor = Tor.getDefault();", "originalCommit": "1e4af51a1bd1514aeb5b6af3fe51f2c883f21e56", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bab25ac177b7b56863e2eecb4f4a83b02955e42", "chunk": "diff --git a/p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java b/p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java\nindex 800285c656..d55e7b9862 100644\n--- a/p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java\n+++ b/p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java\n\n@@ -187,7 +187,14 @@ public class TorNetworkNode extends NetworkNode {\n                 long ts = System.currentTimeMillis();\n                 log.debug(\"Shutdown torNetworkNode\");\n                 try {\n-                    if (tor == null) tor = Tor.getDefault();\n+                    /**\n+                     * make sure we get tor.\n+                     * - there have been situations where <code>tor</code> isn't set yet, which would leave tor running\n+                     * - downside is that if tor is not already started, we start it here just to shut it down. However,\n+                     *   that can only be the case if Bisq gets shutdown even before it reaches step 2/4 at startup.\n+                     * The risk seems worth it compared to the risk of not shutting down tor.\n+                     */\n+                    tor = Tor.getDefault();\n                     if (tor != null)\n                         tor.shutdown();\n                     log.debug(\"Shutdown torNetworkNode done after \" + (System.currentTimeMillis() - ts) + \" ms.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0NzMxNg==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399147316", "bodyText": "Is there a specific reason why we don't want to have this in our logs anymore?", "author": "ripcurlx", "createdAt": "2020-03-27T09:50:29Z", "path": "p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java", "diffHunk": "@@ -225,7 +225,7 @@ public void onSuccess(Connection connection) {\n                 }\n \n                 public void onFailure(@NotNull Throwable throwable) {\n-                    log.info(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());\n+                    log.debug(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());", "originalCommit": "546719deadc658775761a98f50fac75647d27aa4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0NzA4OQ==", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399647089", "bodyText": "this logline is only triggered in a very limited and rare set of situations. One of them being after tor has been shutdown already (but not if tor is gone without a trigger from Bisq). Plus, this log line does not help support. Iff the info is necessary, --logLevel=DEBUG is there.\nGenerally, log outputs are scattered throughout the p2p package. I am currently working on a battle plan to refactor the message handling in order to get more reliability and control over what happens (we do have a lost message every now and then, and I found hints on why that is).", "author": "freimair", "createdAt": "2020-03-28T10:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0NzMxNg=="}], "type": "inlineReview", "revised_code": {"commit": "8bab25ac177b7b56863e2eecb4f4a83b02955e42", "chunk": "diff --git a/p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java b/p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java\nindex f924669b7d..935f9895c3 100644\n--- a/p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java\n+++ b/p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java\n\n@@ -225,7 +225,7 @@ public abstract class NetworkNode implements MessageListener {\n                 }\n \n                 public void onFailure(@NotNull Throwable throwable) {\n-                    log.debug(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());\n+                    log.info(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());\n                     UserThread.execute(() -> resultFuture.setException(throwable));\n                 }\n             });\n"}}, {"oid": "8bab25ac177b7b56863e2eecb4f4a83b02955e42", "url": "https://github.com/bisq-network/bisq/commit/8bab25ac177b7b56863e2eecb4f4a83b02955e42", "message": "Make sure to shut down tor\n\nHere, the tor object is a member variable and there are cases where\nthis member variable is not set yet.\nSituation arose where a sigterm/sigint shutdown is requested and due\nto the member variable not set tor was left running.", "committedDate": "2020-03-28T10:27:25Z", "type": "commit"}, {"oid": "0bbb8e69523eac6fe77906d45683ccc1b6ac8b1d", "url": "https://github.com/bisq-network/bisq/commit/0bbb8e69523eac6fe77906d45683ccc1b6ac8b1d", "message": "Harmonize System::exit usage\n\nThe actual System::exit commands have been scattered around various\nplaces in the code. Sometimes, actual system exit depended on the\ncalling code to reach its end of execution.", "committedDate": "2020-03-28T10:27:36Z", "type": "commit"}, {"oid": "0fb4f13319351bdf81de0619d22b414e4fef5b24", "url": "https://github.com/bisq-network/bisq/commit/0fb4f13319351bdf81de0619d22b414e4fef5b24", "message": "Fix closing the app by gui exit\n\nBefore, the graceful shutdown procedures have been executed in the\nuser thread. However, the sync mechanics for connections/offers\ncaused a lockup, as some little parts of the code do execute on the\nuser thread as well.", "committedDate": "2020-03-28T10:27:37Z", "type": "commit"}, {"oid": "c588b19074856d4b29f9b9e48a82c07103912349", "url": "https://github.com/bisq-network/bisq/commit/c588b19074856d4b29f9b9e48a82c07103912349", "message": "Log output shows graceful shutdown message", "committedDate": "2020-03-28T10:27:37Z", "type": "commit"}, {"oid": "4ff4801e5c296109917448eabec03b8e3cfb0ef8", "url": "https://github.com/bisq-network/bisq/commit/4ff4801e5c296109917448eabec03b8e3cfb0ef8", "message": "Cleanup logging", "committedDate": "2020-03-28T10:27:37Z", "type": "commit"}, {"oid": "50ba2cd74050a36d33115fc540a09d1ccd985592", "url": "https://github.com/bisq-network/bisq/commit/50ba2cd74050a36d33115fc540a09d1ccd985592", "message": "Only send message bundle if not stopped", "committedDate": "2020-03-28T10:27:37Z", "type": "commit"}, {"oid": "50ba2cd74050a36d33115fc540a09d1ccd985592", "url": "https://github.com/bisq-network/bisq/commit/50ba2cd74050a36d33115fc540a09d1ccd985592", "message": "Only send message bundle if not stopped", "committedDate": "2020-03-28T10:27:37Z", "type": "forcePushed"}]}