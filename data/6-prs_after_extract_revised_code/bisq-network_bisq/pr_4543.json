{"pr_number": 4543, "pr_title": "Add signature to dispute result and various other improvements", "pr_createdAt": "2020-09-21T04:05:40Z", "pr_url": "https://github.com/bisq-network/bisq/pull/4543", "timeline": [{"oid": "4f1cbbd00ec77ee6d8dc18bd07ea3552cb359037", "url": "https://github.com/bisq-network/bisq/commit/4f1cbbd00ec77ee6d8dc18bd07ea3552cb359037", "message": "Add check for refund agent if donation address is valid", "committedDate": "2020-09-11T20:35:47Z", "type": "commit"}, {"oid": "2b0433870cb859239f6b8462838103b00533b990", "url": "https://github.com/bisq-network/bisq/commit/2b0433870cb859239f6b8462838103b00533b990", "message": "Dont allow opening refudn agent dispute if delayed payout tx is invalid.", "committedDate": "2020-09-11T22:00:24Z", "type": "commit"}, {"oid": "c48abbf575531f9e26fe00072ce48a1dd3c3bd8b", "url": "https://github.com/bisq-network/bisq/commit/c48abbf575531f9e26fe00072ce48a1dd3c3bd8b", "message": "Improve address validation code", "committedDate": "2020-09-11T22:37:03Z", "type": "commit"}, {"oid": "d82631f52ce71bb9b1ff1718ee6cbcc30445a85e", "url": "https://github.com/bisq-network/bisq/commit/d82631f52ce71bb9b1ff1718ee6cbcc30445a85e", "message": "Fix some issues found during testing\nRefactorings", "committedDate": "2020-09-12T00:41:08Z", "type": "commit"}, {"oid": "677211badf15297b1ef6c419ced865679dcbdb0d", "url": "https://github.com/bisq-network/bisq/commit/677211badf15297b1ef6c419ced865679dcbdb0d", "message": "Allow close dispute for refund agent without payout", "committedDate": "2020-09-12T01:24:31Z", "type": "commit"}, {"oid": "08fb5966296c013cce5c5384a10e747260379d56", "url": "https://github.com/bisq-network/bisq/commit/08fb5966296c013cce5c5384a10e747260379d56", "message": "Call validatePayoutTx only after trades are initialized", "committedDate": "2020-09-12T01:25:48Z", "type": "commit"}, {"oid": "05e1039423c265b4319bf40d065746ccb8e1c829", "url": "https://github.com/bisq-network/bisq/commit/05e1039423c265b4319bf40d065746ccb8e1c829", "message": "Call validatePayoutTx only after trades are initialized", "committedDate": "2020-09-12T01:28:23Z", "type": "commit"}, {"oid": "7ac6e715d361450aa40d9cc233b95f769e1f0b11", "url": "https://github.com/bisq-network/bisq/commit/7ac6e715d361450aa40d9cc233b95f769e1f0b11", "message": "Dispute agent sign summary. Add tool for verification", "committedDate": "2020-09-12T05:35:58Z", "type": "commit"}, {"oid": "559028e5006a14c3e791bcc91a03b0a8992079b5", "url": "https://github.com/bisq-network/bisq/commit/559028e5006a14c3e791bcc91a03b0a8992079b5", "message": "Remove unused var", "committedDate": "2020-09-12T05:46:52Z", "type": "commit"}, {"oid": "48066ae124f30251d96a694b53398001328789bb", "url": "https://github.com/bisq-network/bisq/commit/48066ae124f30251d96a694b53398001328789bb", "message": "Remove setting of pubKey as it is not needed", "committedDate": "2020-09-12T05:49:27Z", "type": "commit"}, {"oid": "0c46e7dd529603bd11af5214a3577b8080d74fd0", "url": "https://github.com/bisq-network/bisq/commit/0c46e7dd529603bd11af5214a3577b8080d74fd0", "message": "Add more data to summary msg", "committedDate": "2020-09-12T21:19:42Z", "type": "commit"}, {"oid": "de4fb17a19592d5c51910ba4ebe68d472a142dcb", "url": "https://github.com/bisq-network/bisq/commit/de4fb17a19592d5c51910ba4ebe68d472a142dcb", "message": "Improve summary notes", "committedDate": "2020-09-13T01:18:04Z", "type": "commit"}, {"oid": "966b22a69d4c9c02cb50ce705a1f6e25b3afc687", "url": "https://github.com/bisq-network/bisq/commit/966b22a69d4c9c02cb50ce705a1f6e25b3afc687", "message": "Fix line breaks", "committedDate": "2020-09-13T01:24:32Z", "type": "commit"}, {"oid": "29f3a7c4957c32163e8c5f9c6ab9649dcdf51141", "url": "https://github.com/bisq-network/bisq/commit/29f3a7c4957c32163e8c5f9c6ab9649dcdf51141", "message": "Merge branch 'master_upstream' into allow-refund-agent-close-without-payout", "committedDate": "2020-09-17T01:38:02Z", "type": "commit"}, {"oid": "b0b43343455ac6ee853a5278fa292d08cf7e381e", "url": "https://github.com/bisq-network/bisq/commit/b0b43343455ac6ee853a5278fa292d08cf7e381e", "message": "Merge branch 'master_upstream' into dispute-agents-sign-summary", "committedDate": "2020-09-17T01:38:45Z", "type": "commit"}, {"oid": "1c0bef787a03d4a87a29ea44492d30a72805992e", "url": "https://github.com/bisq-network/bisq/commit/1c0bef787a03d4a87a29ea44492d30a72805992e", "message": "Merge branch 'master_upstream' into verify-donation-address-for-refund-agent", "committedDate": "2020-09-17T01:40:08Z", "type": "commit"}, {"oid": "1c41db4a767e1d70aabe99c9af5d47bd0e3b6112", "url": "https://github.com/bisq-network/bisq/commit/1c41db4a767e1d70aabe99c9af5d47bd0e3b6112", "message": "Fix wrong handling of mainnet RECIPIENT_BTC_ADDRESSes\n\nWe must not add main net addresses if not on mainnet", "committedDate": "2020-09-17T18:46:00Z", "type": "commit"}, {"oid": "3d4427cdfd43edc803cc5a44a9e93b20447bc828", "url": "https://github.com/bisq-network/bisq/commit/3d4427cdfd43edc803cc5a44a9e93b20447bc828", "message": "Add result of filter match. Add more filter data (tx ids, json)", "committedDate": "2020-09-17T18:54:45Z", "type": "commit"}, {"oid": "45cee2a2729c91dc4a627a5ba2747c45b4673b26", "url": "https://github.com/bisq-network/bisq/commit/45cee2a2729c91dc4a627a5ba2747c45b4673b26", "message": "Add check for disputes with duplicated trade ID or payout tx ids", "committedDate": "2020-09-18T00:05:55Z", "type": "commit"}, {"oid": "f46a991101b65575381033c04ab583721e573048", "url": "https://github.com/bisq-network/bisq/commit/f46a991101b65575381033c04ab583721e573048", "message": "Merge branch 'dispute-agents-sign-summary' into dispute-agent-branch", "committedDate": "2020-09-18T00:07:28Z", "type": "commit"}, {"oid": "b2a9262b9335156da57d11454a306597ef274992", "url": "https://github.com/bisq-network/bisq/commit/b2a9262b9335156da57d11454a306597ef274992", "message": "Merge branch 'verify-donation-address-for-refund-agent' into dispute-agent-branch\n\n# Conflicts:\n#\tcore/src/main/java/bisq/core/support/dispute/DisputeManager.java\n#\tdesktop/src/main/java/bisq/desktop/main/support/dispute/agent/DisputeAgentView.java", "committedDate": "2020-09-18T00:09:26Z", "type": "commit"}, {"oid": "c1850cb47b160abb26c11391a484e39014bfca33", "url": "https://github.com/bisq-network/bisq/commit/c1850cb47b160abb26c11391a484e39014bfca33", "message": "Merge branch 'master_upstream' into dispute-agent-branch\n\n# Conflicts:\n#\tdesktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java", "committedDate": "2020-09-20T18:23:13Z", "type": "commit"}, {"oid": "32930477ab74dd0ae86e2cc8993549c95a57818e", "url": "https://github.com/bisq-network/bisq/commit/32930477ab74dd0ae86e2cc8993549c95a57818e", "message": "Set agentsUid to new uuid in case it is null from persisted data", "committedDate": "2020-09-20T19:49:32Z", "type": "commit"}, {"oid": "d31deff9c4c96cca36792ddc989d88206da9fe1b", "url": "https://github.com/bisq-network/bisq/commit/d31deff9c4c96cca36792ddc989d88206da9fe1b", "message": "Remove dev log", "committedDate": "2020-09-20T19:50:02Z", "type": "commit"}, {"oid": "25bc616db49a17c4b9f129caa075b6f482fbe16b", "url": "https://github.com/bisq-network/bisq/commit/25bc616db49a17c4b9f129caa075b6f482fbe16b", "message": "Add check for multiple deposit txs", "committedDate": "2020-09-20T19:51:09Z", "type": "commit"}, {"oid": "4878a101d407094bb99a047428fc4cdb3d01e0d6", "url": "https://github.com/bisq-network/bisq/commit/4878a101d407094bb99a047428fc4cdb3d01e0d6", "message": "Optimize testIfDisputeTriesReplay methods to avoid that maps get created at each iteration", "committedDate": "2020-09-20T20:32:19Z", "type": "commit"}, {"oid": "c6778d6b2dc6e84f8f9e207f452dd020250372d2", "url": "https://github.com/bisq-network/bisq/commit/c6778d6b2dc6e84f8f9e207f452dd020250372d2", "message": "Add copy to csv data button to report screen", "committedDate": "2020-09-21T01:20:39Z", "type": "commit"}, {"oid": "72dca0b55a94f4eba3ed6cc6ad8b9ebd121361fe", "url": "https://github.com/bisq-network/bisq/commit/72dca0b55a94f4eba3ed6cc6ad8b9ebd121361fe", "message": "Add cylce index", "committedDate": "2020-09-21T02:25:12Z", "type": "commit"}, {"oid": "2943316f90ac17c5dd6dcb599bfaa48423db427c", "url": "https://github.com/bisq-network/bisq/commit/2943316f90ac17c5dd6dcb599bfaa48423db427c", "message": "Remove agentsUid from protobuf, rename to uid", "committedDate": "2020-09-21T02:31:51Z", "type": "commit"}, {"oid": "30e9add4dc641c82dab7499e6f2f05c700912620", "url": "https://github.com/bisq-network/bisq/commit/30e9add4dc641c82dab7499e6f2f05c700912620", "message": "Refactor: rename DelayedPayoutTxValidation to TradeDataValidation", "committedDate": "2020-09-21T02:40:21Z", "type": "commit"}, {"oid": "3206c6215153b413666a8d1da6366a83978d43a8", "url": "https://github.com/bisq-network/bisq/commit/3206c6215153b413666a8d1da6366a83978d43a8", "message": "Refactor: Move RegexValidator from bisq.desktop.util.validation to bisq.core.util.validation\n\nAdd RegexValidatorFactory\nMove regex tests from GUIUtilTest to new RegexValidatorTest class", "committedDate": "2020-09-21T02:58:32Z", "type": "commit"}, {"oid": "987bf4953ab1dd939d9e3f08ee929d9bff9f0309", "url": "https://github.com/bisq-network/bisq/commit/987bf4953ab1dd939d9e3f08ee929d9bff9f0309", "message": "Add node address validation", "committedDate": "2020-09-21T03:10:48Z", "type": "commit"}, {"oid": "baa915f5deaf97788902bd77aa6142f483de96fc", "url": "https://github.com/bisq-network/bisq/commit/baa915f5deaf97788902bd77aa6142f483de96fc", "message": "Add validateNodeAddress at onOpenNewDisputeMessage\n\n- Cleanups", "committedDate": "2020-09-21T03:32:53Z", "type": "commit"}, {"oid": "d52199e6daf9e0159afed77259051ba3d95f9f10", "url": "https://github.com/bisq-network/bisq/commit/d52199e6daf9e0159afed77259051ba3d95f9f10", "message": "Merge branch 'refactor-regexvalidator' into dispute-agent-branch", "committedDate": "2020-09-21T04:13:15Z", "type": "commit"}, {"oid": "c7a3f9592530361fc3413bd19fac13deddf44498", "url": "https://github.com/bisq-network/bisq/commit/c7a3f9592530361fc3413bd19fac13deddf44498", "message": "Rename filterString to filterTerm", "committedDate": "2020-09-21T04:15:20Z", "type": "commit"}, {"oid": "76c82631de404b0fc954243480174143d32b39c9", "url": "https://github.com/bisq-network/bisq/commit/76c82631de404b0fc954243480174143d32b39c9", "message": "Ignore onion address validation for localhost", "committedDate": "2020-09-21T05:04:05Z", "type": "commit"}, {"oid": "a9f10624c2615e82996999e1c43e41c84c26e2c5", "url": "https://github.com/bisq-network/bisq/commit/a9f10624c2615e82996999e1c43e41c84c26e2c5", "message": "Move validation after adding dispute to list", "committedDate": "2020-09-21T05:20:12Z", "type": "commit"}, {"oid": "81bea14af2145c39473a2cd3aa929b9afcbb357c", "url": "https://github.com/bisq-network/bisq/commit/81bea14af2145c39473a2cd3aa929b9afcbb357c", "message": "Show popup to peer who accepted mediators suggestion once locktime is over", "committedDate": "2020-09-21T06:16:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1OTI4Ng==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494259286", "bodyText": "This should be warning level log, error better used for unexpected code paths.", "author": "sqrrm", "createdAt": "2020-09-24T12:04:16Z", "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java", "diffHunk": "@@ -536,6 +538,25 @@ private void doOpenDispute(boolean isSupportTicket, Transaction depositTx) {\n         // In case we re-open a dispute we allow Trade.DisputeState.REFUND_REQUESTED\n         useRefundAgent = disputeState == Trade.DisputeState.MEDIATION_CLOSED || disputeState == Trade.DisputeState.REFUND_REQUESTED;\n \n+        AtomicReference<String> donationAddressString = new AtomicReference<>(\"\");\n+        Transaction delayedPayoutTx = trade.getDelayedPayoutTx();\n+        try {\n+            DelayedPayoutTxValidation.validatePayoutTx(trade,\n+                    delayedPayoutTx,\n+                    daoFacade,\n+                    btcWalletService,\n+                    donationAddressString::set);\n+        } catch (DelayedPayoutTxValidation.DonationAddressException |\n+                DelayedPayoutTxValidation.InvalidTxException |\n+                DelayedPayoutTxValidation.InvalidLockTimeException |\n+                DelayedPayoutTxValidation.MissingDelayedPayoutTxException |\n+                DelayedPayoutTxValidation.AmountMismatchException e) {\n+            // The peer sent us an invalid donation address. We do not return here as we don't want to break\n+            // mediation/arbitration and log only the issue. The dispute agent will run validation as well and will get\n+            // a popup displayed to react.\n+            log.error(\"Donation address invalid. {}\", e.toString());", "originalCommit": "4f1cbbd00ec77ee6d8dc18bd07ea3552cb359037", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk2MTk5Mg==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494961992", "bodyText": "Agree.", "author": "chimp1984", "createdAt": "2020-09-25T12:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1OTI4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f37446b9919a9905d5c7dda97ea983924bcf52af", "chunk": "diff --git a/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java b/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java\nindex e1f2b10d9b..fe94474fe7 100644\n--- a/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java\n+++ b/desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesDataModel.java\n\n@@ -541,20 +541,23 @@ public class PendingTradesDataModel extends ActivatableDataModel {\n         AtomicReference<String> donationAddressString = new AtomicReference<>(\"\");\n         Transaction delayedPayoutTx = trade.getDelayedPayoutTx();\n         try {\n-            DelayedPayoutTxValidation.validatePayoutTx(trade,\n+            TradeDataValidation.validatePayoutTx(trade,\n                     delayedPayoutTx,\n                     daoFacade,\n                     btcWalletService,\n                     donationAddressString::set);\n-        } catch (DelayedPayoutTxValidation.DonationAddressException |\n-                DelayedPayoutTxValidation.InvalidTxException |\n-                DelayedPayoutTxValidation.InvalidLockTimeException |\n-                DelayedPayoutTxValidation.MissingDelayedPayoutTxException |\n-                DelayedPayoutTxValidation.AmountMismatchException e) {\n+        } catch (TradeDataValidation.ValidationException e) {\n             // The peer sent us an invalid donation address. We do not return here as we don't want to break\n             // mediation/arbitration and log only the issue. The dispute agent will run validation as well and will get\n             // a popup displayed to react.\n-            log.error(\"Donation address invalid. {}\", e.toString());\n+            log.error(\"DelayedPayoutTxValidation failed. {}\", e.toString());\n+\n+            if (useRefundAgent) {\n+                // We don't allow to continue and publish payout tx and open refund agent case.\n+                // In case it was caused by some bug we want to prevent a wrong payout. In case its a scam attempt we\n+                // want to protect the refund agent.\n+                return;\n+            }\n         }\n \n         ResultHandler resultHandler;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MzA5Mw==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494263093", "bodyText": "I'm thinking we should phase out the older addresses and reject them if used for new trades.", "author": "sqrrm", "createdAt": "2020-09-24T12:10:53Z", "path": "core/src/main/java/bisq/core/trade/DelayedPayoutTxValidation.java", "diffHunk": "@@ -83,26 +80,33 @@\n         }\n     }\n \n-    public static boolean isValidDonationAddress(Dispute dispute, DaoFacade daoFacade) {\n-        String addressAsString = dispute.getDonationAddressOfDelayedPayoutTx();\n+    public static void validateDonationAddress(String addressAsString, DaoFacade daoFacade)\n+            throws DonationAddressException {\n \n-        // Old clients don't have it set yet. Can be removed after a forced update\n         if (addressAsString == null) {\n-            return true;\n+            return;\n         }\n \n-        // We use all past addresses from DAO param changes as the dispute case might have been opened later and the\n-        // DAO param changed in the meantime.\n+        // We support any of the past addresses as well as in case the peer has not enabled the DAO or is out of sync we\n+        // do not want to break validation.\n         Set<String> allPastParamValues = daoFacade.getAllPastParamValues(Param.RECIPIENT_BTC_ADDRESS);\n \n-        if (allPastParamValues.contains(addressAsString)) {\n-            return true;\n-        }\n+        // If Dao is deactivated we need to add the default address as getAllPastParamValues will not return us any.\n+        allPastParamValues.add(Param.RECIPIENT_BTC_ADDRESS.getDefaultValue());\n+\n+        // If Dao is deactivated we need to add the past addresses used as well.\n+        // This list need to be updated once a new address gets defined.\n+        allPastParamValues.add(\"3EtUWqsGThPtjwUczw27YCo6EWvQdaPUyp\"); // burning man 2019\n+        allPastParamValues.add(\"3A8Zc1XioE2HRzYfbb5P8iemCS72M6vRJV\"); // burningman2", "originalCommit": "c48abbf575531f9e26fe00072ce48a1dd3c3bd8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk2MzQ5Nw==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494963497", "bodyText": "There are still too many trades with those. I don't know exactly why that happens but could partially reproduce it with quick test with some out of sync DAO state. I think letting them fail is a bit harsh.", "author": "chimp1984", "createdAt": "2020-09-25T12:47:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MzA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk2NjIzNg==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494966236", "bodyText": "I think it's fair. An easy fix is to download a new version and disable the dao.\nWe don't have a good way to phase out those old addresses, but they are essentially phased out on the DAO side, but traders still use them. It's almost a year later so I think phasing it out is not that bad.", "author": "sqrrm", "createdAt": "2020-09-25T12:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MzA5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f37446b9919a9905d5c7dda97ea983924bcf52af", "chunk": "diff --git a/core/src/main/java/bisq/core/trade/DelayedPayoutTxValidation.java b/core/src/main/java/bisq/core/trade/DelayedPayoutTxValidation.java\ndeleted file mode 100644\nindex 42717e1746..0000000000\n--- a/core/src/main/java/bisq/core/trade/DelayedPayoutTxValidation.java\n+++ /dev/null\n\n@@ -1,264 +0,0 @@\n-/*\n- * This file is part of Bisq.\n- *\n- * Bisq is free software: you can redistribute it and/or modify it\n- * under the terms of the GNU Affero General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or (at\n- * your option) any later version.\n- *\n- * Bisq is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n- * License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-package bisq.core.trade;\n-\n-import bisq.core.btc.wallet.BtcWalletService;\n-import bisq.core.dao.DaoFacade;\n-import bisq.core.dao.governance.param.Param;\n-import bisq.core.offer.Offer;\n-import bisq.core.support.dispute.Dispute;\n-\n-import org.bitcoinj.core.Address;\n-import org.bitcoinj.core.Coin;\n-import org.bitcoinj.core.NetworkParameters;\n-import org.bitcoinj.core.Transaction;\n-import org.bitcoinj.core.TransactionInput;\n-import org.bitcoinj.core.TransactionOutPoint;\n-import org.bitcoinj.core.TransactionOutput;\n-\n-import java.util.Set;\n-import java.util.function.Consumer;\n-\n-import lombok.extern.slf4j.Slf4j;\n-\n-import javax.annotation.Nullable;\n-\n-import static com.google.common.base.Preconditions.checkArgument;\n-import static com.google.common.base.Preconditions.checkNotNull;\n-\n-@Slf4j\n-public class DelayedPayoutTxValidation {\n-\n-    public static class DonationAddressException extends Exception {\n-        DonationAddressException(String msg) {\n-            super(msg);\n-        }\n-    }\n-\n-    public static class MissingDelayedPayoutTxException extends Exception {\n-        MissingDelayedPayoutTxException(String msg) {\n-            super(msg);\n-        }\n-    }\n-\n-    public static class InvalidTxException extends Exception {\n-        InvalidTxException(String msg) {\n-            super(msg);\n-        }\n-    }\n-\n-    public static class AmountMismatchException extends Exception {\n-        AmountMismatchException(String msg) {\n-            super(msg);\n-        }\n-    }\n-\n-    public static class InvalidLockTimeException extends Exception {\n-        InvalidLockTimeException(String msg) {\n-            super(msg);\n-        }\n-    }\n-\n-    public static class InvalidInputException extends Exception {\n-        InvalidInputException(String msg) {\n-            super(msg);\n-        }\n-    }\n-\n-    public static void validateDonationAddress(String addressAsString, DaoFacade daoFacade)\n-            throws DonationAddressException {\n-\n-        if (addressAsString == null) {\n-            return;\n-        }\n-\n-        // We support any of the past addresses as well as in case the peer has not enabled the DAO or is out of sync we\n-        // do not want to break validation.\n-        Set<String> allPastParamValues = daoFacade.getAllPastParamValues(Param.RECIPIENT_BTC_ADDRESS);\n-\n-        // If Dao is deactivated we need to add the default address as getAllPastParamValues will not return us any.\n-        allPastParamValues.add(Param.RECIPIENT_BTC_ADDRESS.getDefaultValue());\n-\n-        // If Dao is deactivated we need to add the past addresses used as well.\n-        // This list need to be updated once a new address gets defined.\n-        allPastParamValues.add(\"3EtUWqsGThPtjwUczw27YCo6EWvQdaPUyp\"); // burning man 2019\n-        allPastParamValues.add(\"3A8Zc1XioE2HRzYfbb5P8iemCS72M6vRJV\"); // burningman2\n-\n-\n-        if (!allPastParamValues.contains(addressAsString)) {\n-            String errorMsg = \"Donation address is not a valid DAO donation address.\" +\n-                    \"\\nAddress used in the dispute: \" + addressAsString +\n-                    \"\\nAll DAO param donation addresses:\" + allPastParamValues;\n-            log.error(errorMsg);\n-            throw new DonationAddressException(errorMsg);\n-        }\n-    }\n-\n-    public static void validatePayoutTx(Trade trade,\n-                                        Transaction delayedPayoutTx,\n-                                        DaoFacade daoFacade,\n-                                        BtcWalletService btcWalletService)\n-            throws DonationAddressException, MissingDelayedPayoutTxException,\n-            InvalidTxException, InvalidLockTimeException, AmountMismatchException {\n-        validatePayoutTx(trade,\n-                delayedPayoutTx,\n-                null,\n-                daoFacade,\n-                btcWalletService,\n-                null);\n-    }\n-\n-    public static void validatePayoutTx(Trade trade,\n-                                        Transaction delayedPayoutTx,\n-                                        @Nullable Dispute dispute,\n-                                        DaoFacade daoFacade,\n-                                        BtcWalletService btcWalletService)\n-            throws DonationAddressException, MissingDelayedPayoutTxException,\n-            InvalidTxException, InvalidLockTimeException, AmountMismatchException {\n-        validatePayoutTx(trade,\n-                delayedPayoutTx,\n-                dispute,\n-                daoFacade,\n-                btcWalletService,\n-                null);\n-    }\n-\n-    public static void validatePayoutTx(Trade trade,\n-                                        Transaction delayedPayoutTx,\n-                                        DaoFacade daoFacade,\n-                                        BtcWalletService btcWalletService,\n-                                        @Nullable Consumer<String> addressConsumer)\n-            throws DonationAddressException, MissingDelayedPayoutTxException,\n-            InvalidTxException, InvalidLockTimeException, AmountMismatchException {\n-        validatePayoutTx(trade,\n-                delayedPayoutTx,\n-                null,\n-                daoFacade,\n-                btcWalletService,\n-                addressConsumer);\n-    }\n-\n-    public static void validatePayoutTx(Trade trade,\n-                                        Transaction delayedPayoutTx,\n-                                        @Nullable Dispute dispute,\n-                                        DaoFacade daoFacade,\n-                                        BtcWalletService btcWalletService,\n-                                        @Nullable Consumer<String> addressConsumer)\n-            throws DonationAddressException, MissingDelayedPayoutTxException,\n-            InvalidTxException, InvalidLockTimeException, AmountMismatchException {\n-        String errorMsg;\n-        if (delayedPayoutTx == null) {\n-            errorMsg = \"DelayedPayoutTx must not be null\";\n-            log.error(errorMsg);\n-            throw new MissingDelayedPayoutTxException(\"DelayedPayoutTx must not be null\");\n-        }\n-\n-        // Validate tx structure\n-        if (delayedPayoutTx.getInputs().size() != 1) {\n-            errorMsg = \"Number of delayedPayoutTx inputs must be 1\";\n-            log.error(errorMsg);\n-            log.error(delayedPayoutTx.toString());\n-            throw new InvalidTxException(errorMsg);\n-        }\n-\n-        if (delayedPayoutTx.getOutputs().size() != 1) {\n-            errorMsg = \"Number of delayedPayoutTx outputs must be 1\";\n-            log.error(errorMsg);\n-            log.error(delayedPayoutTx.toString());\n-            throw new InvalidTxException(errorMsg);\n-        }\n-\n-        // connectedOutput is null and input.getValue() is null at that point as the tx is not committed to the wallet\n-        // yet. So we cannot check that the input matches but we did the amount check earlier in the trade protocol.\n-\n-        // Validate lock time\n-        if (delayedPayoutTx.getLockTime() != trade.getLockTime()) {\n-            errorMsg = \"delayedPayoutTx.getLockTime() must match trade.getLockTime()\";\n-            log.error(errorMsg);\n-            log.error(delayedPayoutTx.toString());\n-            throw new InvalidLockTimeException(errorMsg);\n-        }\n-\n-        // Validate seq num\n-        if (delayedPayoutTx.getInput(0).getSequenceNumber() != TransactionInput.NO_SEQUENCE - 1) {\n-            errorMsg = \"Sequence number must be 0xFFFFFFFE\";\n-            log.error(errorMsg);\n-            log.error(delayedPayoutTx.toString());\n-            throw new InvalidLockTimeException(errorMsg);\n-        }\n-\n-        // Check amount\n-        TransactionOutput output = delayedPayoutTx.getOutput(0);\n-        Offer offer = checkNotNull(trade.getOffer());\n-        Coin msOutputAmount = offer.getBuyerSecurityDeposit()\n-                .add(offer.getSellerSecurityDeposit())\n-                .add(checkNotNull(trade.getTradeAmount()));\n-\n-        if (!output.getValue().equals(msOutputAmount)) {\n-            errorMsg = \"Output value of deposit tx and delayed payout tx is not matching. Output: \" + output + \" / msOutputAmount: \" + msOutputAmount;\n-            log.error(errorMsg);\n-            log.error(delayedPayoutTx.toString());\n-            throw new AmountMismatchException(errorMsg);\n-        }\n-\n-        NetworkParameters params = btcWalletService.getParams();\n-        Address address = output.getAddressFromP2PKHScript(params);\n-        if (address == null) {\n-            // The donation address can be a multisig address as well.\n-            address = output.getAddressFromP2SH(params);\n-            if (address == null) {\n-                errorMsg = \"Donation address cannot be resolved (not of type P2PKHScript or P2SH). Output: \" + output;\n-                log.error(errorMsg);\n-                log.error(delayedPayoutTx.toString());\n-                throw new DonationAddressException(errorMsg);\n-            }\n-        }\n-\n-        String addressAsString = address.toString();\n-        if (addressConsumer != null) {\n-            addressConsumer.accept(addressAsString);\n-        }\n-\n-        validateDonationAddress(addressAsString, daoFacade);\n-\n-        if (dispute != null) {\n-            // Verify that address in the dispute matches the one in the trade.\n-            String donationAddressOfDelayedPayoutTx = dispute.getDonationAddressOfDelayedPayoutTx();\n-            // Old clients don't have it set yet. Can be removed after a forced update\n-            if (donationAddressOfDelayedPayoutTx != null) {\n-                checkArgument(addressAsString.equals(donationAddressOfDelayedPayoutTx),\n-                        \"donationAddressOfDelayedPayoutTx from dispute does not match address from delayed payout tx\");\n-            }\n-        }\n-    }\n-\n-    public static void validatePayoutTxInput(Transaction depositTx,\n-                                             Transaction delayedPayoutTx)\n-            throws InvalidInputException {\n-        TransactionInput input = delayedPayoutTx.getInput(0);\n-        checkNotNull(input, \"delayedPayoutTx.getInput(0) must not be null\");\n-        // input.getConnectedOutput() is null as the tx is not committed at that point\n-\n-        TransactionOutPoint outpoint = input.getOutpoint();\n-        if (!outpoint.getHash().toString().equals(depositTx.getHashAsString()) || outpoint.getIndex() != 0) {\n-            throw new InvalidInputException(\"Input of delayed payout transaction does not point to output of deposit tx.\\n\" +\n-                    \"Delayed payout tx=\" + delayedPayoutTx + \"\\n\" +\n-                    \"Deposit tx=\" + depositTx);\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5ODQ3NA==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494898474", "bodyText": "Wouldn't it be better to automatically check the signature and add the result to the dispute graphics somewhere? Also, the refundagent gets this message when a user opens a refund case, this message doesn't verify since there is a header from the user included\nSystem message: Mediator's dispute summary:\nMediator's node address: localhost:3600\n\nWithout that header the it would verify. Perhaps we should also make that message autoverify by adding a ----HEADER---- and ----END HEADER---- separator?\nAnother, probably separate issue, the popup from double clicking a chat message cannot be closed nicely (this might be an old thing though), never tried double clicking the messages in the chat.", "author": "sqrrm", "createdAt": "2020-09-25T10:31:45Z", "path": "desktop/src/main/java/bisq/desktop/main/support/dispute/DisputeView.java", "diffHunk": "@@ -222,6 +263,12 @@ public void initialize() {\n             showFullReport();\n         });\n \n+        sigCheckButton = new AutoTooltipButton(Res.get(\"support.sigCheck.button\"));\n+        HBox.setHgrow(sigCheckButton, Priority.NEVER);\n+        sigCheckButton.setOnAction(e -> {", "originalCommit": "81bea14af2145c39473a2cd3aa929b9afcbb357c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk2NDQ4MA==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494964480", "bodyText": "The signature is not intended as check for the traders/arbitrator as that is anyway part of the p2p messaging (each msg gets checked if it is signed correctly by the sender). It is only intended for DAO voters.", "author": "chimp1984", "createdAt": "2020-09-25T12:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5ODQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk2NTIwOQ==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494965209", "bodyText": "\"Another, probably separate issue, the popup from double clicking a chat message cannot be closed nicely (this might be an old thing though), never tried double clicking the messages in the chat.\" -> can you make an issue for that. I want not to extend that PR further, already too much ;-)", "author": "chimp1984", "createdAt": "2020-09-25T12:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5ODQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk2NjY4MA==", "url": "https://github.com/bisq-network/bisq/pull/4543#discussion_r494966680", "bodyText": "Indeed, will look at that separately.", "author": "sqrrm", "createdAt": "2020-09-25T12:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5ODQ3NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f37446b9919a9905d5c7dda97ea983924bcf52af", "url": "https://github.com/bisq-network/bisq/commit/f37446b9919a9905d5c7dda97ea983924bcf52af", "message": "Change log level", "committedDate": "2020-09-25T14:39:45Z", "type": "commit"}, {"oid": "8ac468d84f41ea125b415be080b0c62fd3f867fc", "url": "https://github.com/bisq-network/bisq/commit/8ac468d84f41ea125b415be080b0c62fd3f867fc", "message": "Commit to trigger travis as it got stuck...", "committedDate": "2020-09-25T19:23:06Z", "type": "commit"}, {"oid": "25c4b4d0fc9fbcd2cb8d1b865cb4c639815c642d", "url": "https://github.com/bisq-network/bisq/commit/25c4b4d0fc9fbcd2cb8d1b865cb4c639815c642d", "message": "Merge branch 'master_upstream' into dispute-agent-branch\n\n# Conflicts:\n#\tcore/src/main/java/bisq/core/trade/DelayedPayoutTxValidation.java", "committedDate": "2020-09-25T19:53:20Z", "type": "commit"}, {"oid": "423cc7134ed7e85d36a314a30f741074ca5a57f9", "url": "https://github.com/bisq-network/bisq/commit/423cc7134ed7e85d36a314a30f741074ca5a57f9", "message": "Add changes from merge conflict (class was renamed)", "committedDate": "2020-09-25T20:01:20Z", "type": "commit"}]}