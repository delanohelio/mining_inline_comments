{"pr_number": 1226, "pr_title": "CLI Tools", "pr_createdAt": "2020-04-27T18:24:28Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1226", "timeline": [{"oid": "0496d5333e633b3641b434a20fd9c929fa31de2b", "url": "https://github.com/rsksmart/rskj/commit/0496d5333e633b3641b434a20fd9c929fa31de2b", "message": "Refactor CLI tools", "committedDate": "2020-04-27T19:12:59Z", "type": "forcePushed"}, {"oid": "e52054b02552857dca3b62487eb5227259038e0b", "url": "https://github.com/rsksmart/rskj/commit/e52054b02552857dca3b62487eb5227259038e0b", "message": "Removing old code", "committedDate": "2020-04-28T20:24:39Z", "type": "forcePushed"}, {"oid": "48dc1e06901754a457e4a9e8e63f506b86844df7", "url": "https://github.com/rsksmart/rskj/commit/48dc1e06901754a457e4a9e8e63f506b86844df7", "message": "Removing old code", "committedDate": "2020-05-06T19:05:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NTQ0NA==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r422275444", "bodyText": "should we check the presence of the filename? same in the other classes", "author": "nicops", "createdAt": "2020-05-08T17:37:51Z", "path": "rskj-core/src/main/java/co/rsk/ConnectBlocks.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package co.rsk;\n+\n+import co.rsk.trie.TrieStore;\n+import org.bouncycastle.util.encoders.Hex;\n+import org.ethereum.core.Block;\n+import org.ethereum.core.BlockFactory;\n+import org.ethereum.core.Blockchain;\n+import org.ethereum.db.BlockStore;\n+import org.ethereum.db.ReceiptStore;\n+\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+/**\n+ * The entry point for connect blocks CLI tool\n+ */\n+public class ConnectBlocks {\n+    public static void main(String[] args) throws IOException {\n+        RskContext ctx = new RskContext(args);\n+\n+        BlockFactory blockFactory = ctx.getBlockFactory();\n+        Blockchain blockchain = ctx.getBlockchain();\n+        TrieStore trieStore = ctx.getTrieStore();\n+        BlockStore blockStore = ctx.getBlockStore();\n+        ReceiptStore receiptStore = ctx.getReceiptStore();\n+\n+        String filename = args[0];", "originalCommit": "48dc1e06901754a457e4a9e8e63f506b86844df7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMTA5NA==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r423111094", "bodyText": "The current code is oriented to be simple. We could improve the user experience if these tools are really used", "author": "ajlopezrsk", "createdAt": "2020-05-11T15:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NTQ0NA=="}], "type": "inlineReview", "revised_code": {"commit": "2d270ff28173061b4585f4cdd919032eadb82f9b", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/ConnectBlocks.java b/rskj-core/src/main/java/co/rsk/ConnectBlocks.java\ndeleted file mode 100644\nindex f47ded5bd..000000000\n--- a/rskj-core/src/main/java/co/rsk/ConnectBlocks.java\n+++ /dev/null\n\n@@ -1,72 +0,0 @@\n-/*\n- * This file is part of RskJ\n- * Copyright (C) 2017 RSK Labs Ltd.\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Lesser General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program. If not, see <http://www.gnu.org/licenses/>.\n- */\n-package co.rsk;\n-\n-import co.rsk.trie.TrieStore;\n-import org.bouncycastle.util.encoders.Hex;\n-import org.ethereum.core.Block;\n-import org.ethereum.core.BlockFactory;\n-import org.ethereum.core.Blockchain;\n-import org.ethereum.db.BlockStore;\n-import org.ethereum.db.ReceiptStore;\n-\n-import java.io.BufferedReader;\n-import java.io.FileReader;\n-import java.io.IOException;\n-\n-/**\n- * The entry point for connect blocks CLI tool\n- */\n-public class ConnectBlocks {\n-    public static void main(String[] args) throws IOException {\n-        RskContext ctx = new RskContext(args);\n-\n-        BlockFactory blockFactory = ctx.getBlockFactory();\n-        Blockchain blockchain = ctx.getBlockchain();\n-        TrieStore trieStore = ctx.getTrieStore();\n-        BlockStore blockStore = ctx.getBlockStore();\n-        ReceiptStore receiptStore = ctx.getReceiptStore();\n-\n-        String filename = args[0];\n-\n-        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {\n-            execute(blockFactory, blockchain, trieStore, blockStore, receiptStore, reader);\n-        }\n-    }\n-\n-    public static void execute(BlockFactory blockFactory, Blockchain blockchain, TrieStore trieStore, BlockStore blockStore, ReceiptStore receiptStore, BufferedReader reader) throws IOException {\n-        for (String line = reader.readLine(); line != null; line = reader.readLine()) {\n-            String[] parts = line.split(\",\");\n-\n-            if (parts.length < 4) {\n-                continue;\n-            }\n-\n-            byte[] encoded = Hex.decode(parts[3]);\n-\n-            Block block = blockFactory.decodeBlock(encoded);\n-            block.seal();\n-\n-            blockchain.tryToConnect(block);\n-        }\n-\n-        blockStore.flush();\n-        trieStore.flush();\n-        receiptStore.flush();\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NTg0OA==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r422275848", "bodyText": "this returns a value that explains if the block has been connected or not. what happens if we don't check it?", "author": "nicops", "createdAt": "2020-05-08T17:38:40Z", "path": "rskj-core/src/main/java/co/rsk/ConnectBlocks.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package co.rsk;\n+\n+import co.rsk.trie.TrieStore;\n+import org.bouncycastle.util.encoders.Hex;\n+import org.ethereum.core.Block;\n+import org.ethereum.core.BlockFactory;\n+import org.ethereum.core.Blockchain;\n+import org.ethereum.db.BlockStore;\n+import org.ethereum.db.ReceiptStore;\n+\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+/**\n+ * The entry point for connect blocks CLI tool\n+ */\n+public class ConnectBlocks {\n+    public static void main(String[] args) throws IOException {\n+        RskContext ctx = new RskContext(args);\n+\n+        BlockFactory blockFactory = ctx.getBlockFactory();\n+        Blockchain blockchain = ctx.getBlockchain();\n+        TrieStore trieStore = ctx.getTrieStore();\n+        BlockStore blockStore = ctx.getBlockStore();\n+        ReceiptStore receiptStore = ctx.getReceiptStore();\n+\n+        String filename = args[0];\n+\n+        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {\n+            execute(blockFactory, blockchain, trieStore, blockStore, receiptStore, reader);\n+        }\n+    }\n+\n+    public static void execute(BlockFactory blockFactory, Blockchain blockchain, TrieStore trieStore, BlockStore blockStore, ReceiptStore receiptStore, BufferedReader reader) throws IOException {\n+        for (String line = reader.readLine(); line != null; line = reader.readLine()) {\n+            String[] parts = line.split(\",\");\n+\n+            if (parts.length < 4) {\n+                continue;\n+            }\n+\n+            byte[] encoded = Hex.decode(parts[3]);\n+\n+            Block block = blockFactory.decodeBlock(encoded);\n+            block.seal();\n+\n+            blockchain.tryToConnect(block);", "originalCommit": "48dc1e06901754a457e4a9e8e63f506b86844df7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMjIyNQ==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r423112225", "bodyText": "Nothing. The supplied blocks could be connected best ones, or only connect, or even invalid. One of the use case of this tool is to run the external blocks, maybe to check the execution logs", "author": "ajlopezrsk", "createdAt": "2020-05-11T15:11:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NTg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "2d270ff28173061b4585f4cdd919032eadb82f9b", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/ConnectBlocks.java b/rskj-core/src/main/java/co/rsk/ConnectBlocks.java\ndeleted file mode 100644\nindex f47ded5bd..000000000\n--- a/rskj-core/src/main/java/co/rsk/ConnectBlocks.java\n+++ /dev/null\n\n@@ -1,72 +0,0 @@\n-/*\n- * This file is part of RskJ\n- * Copyright (C) 2017 RSK Labs Ltd.\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Lesser General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program. If not, see <http://www.gnu.org/licenses/>.\n- */\n-package co.rsk;\n-\n-import co.rsk.trie.TrieStore;\n-import org.bouncycastle.util.encoders.Hex;\n-import org.ethereum.core.Block;\n-import org.ethereum.core.BlockFactory;\n-import org.ethereum.core.Blockchain;\n-import org.ethereum.db.BlockStore;\n-import org.ethereum.db.ReceiptStore;\n-\n-import java.io.BufferedReader;\n-import java.io.FileReader;\n-import java.io.IOException;\n-\n-/**\n- * The entry point for connect blocks CLI tool\n- */\n-public class ConnectBlocks {\n-    public static void main(String[] args) throws IOException {\n-        RskContext ctx = new RskContext(args);\n-\n-        BlockFactory blockFactory = ctx.getBlockFactory();\n-        Blockchain blockchain = ctx.getBlockchain();\n-        TrieStore trieStore = ctx.getTrieStore();\n-        BlockStore blockStore = ctx.getBlockStore();\n-        ReceiptStore receiptStore = ctx.getReceiptStore();\n-\n-        String filename = args[0];\n-\n-        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {\n-            execute(blockFactory, blockchain, trieStore, blockStore, receiptStore, reader);\n-        }\n-    }\n-\n-    public static void execute(BlockFactory blockFactory, Blockchain blockchain, TrieStore trieStore, BlockStore blockStore, ReceiptStore receiptStore, BufferedReader reader) throws IOException {\n-        for (String line = reader.readLine(); line != null; line = reader.readLine()) {\n-            String[] parts = line.split(\",\");\n-\n-            if (parts.length < 4) {\n-                continue;\n-            }\n-\n-            byte[] encoded = Hex.decode(parts[3]);\n-\n-            Block block = blockFactory.decodeBlock(encoded);\n-            block.seal();\n-\n-            blockchain.tryToConnect(block);\n-        }\n-\n-        blockStore.flush();\n-        trieStore.flush();\n-        receiptStore.flush();\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NjMwNQ==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r422276305", "bodyText": "why do we need to flush? since we're re executing blocks, we shouldn't be having new data here. or could we?", "author": "nicops", "createdAt": "2020-05-08T17:39:36Z", "path": "rskj-core/src/main/java/co/rsk/ExecuteBlocks.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package co.rsk;\n+\n+import co.rsk.core.bc.BlockExecutor;\n+import co.rsk.trie.TrieStore;\n+import org.ethereum.core.Block;\n+import org.ethereum.db.BlockStore;\n+\n+/**\n+ * The entry point for execute blocks CLI tool\n+ */\n+public class ExecuteBlocks {\n+    public static void main(String[] args) {\n+        RskContext ctx = new RskContext(args);\n+\n+        BlockExecutor blockExecutor = ctx.getBlockExecutor();\n+        BlockStore blockStore = ctx.getBlockStore();\n+        TrieStore trieStore = ctx.getTrieStore();\n+        \n+        execute(args, blockExecutor, blockStore, trieStore);\n+    }\n+    \n+    public static void execute(String[] args, BlockExecutor blockExecutor, BlockStore blockStore, TrieStore trieStore) {\n+        long fromBlockNumber = Long.parseLong(args[0]);\n+        long toBlockNumber = Long.parseLong(args[1]);\n+\n+        for (long n = fromBlockNumber; n <= toBlockNumber; n++) {\n+            Block block = blockStore.getChainBlockByNumber(n);\n+            Block parent = blockStore.getBlockByHash(block.getParentHash().getBytes());\n+\n+            blockExecutor.execute(block, parent.getHeader(), false, false);\n+        }\n+\n+        trieStore.flush();", "originalCommit": "48dc1e06901754a457e4a9e8e63f506b86844df7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMzM0Ng==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r423113346", "bodyText": "Well, it's related with the \"missing trie\" issue, just in case a trie that should be in the database, was not before the run of this command", "author": "ajlopezrsk", "createdAt": "2020-05-11T15:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NjMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2d270ff28173061b4585f4cdd919032eadb82f9b", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/ExecuteBlocks.java b/rskj-core/src/main/java/co/rsk/ExecuteBlocks.java\ndeleted file mode 100644\nindex e27d775ee..000000000\n--- a/rskj-core/src/main/java/co/rsk/ExecuteBlocks.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-/*\n- * This file is part of RskJ\n- * Copyright (C) 2017 RSK Labs Ltd.\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Lesser General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program. If not, see <http://www.gnu.org/licenses/>.\n- */\n-package co.rsk;\n-\n-import co.rsk.core.bc.BlockExecutor;\n-import co.rsk.trie.TrieStore;\n-import org.ethereum.core.Block;\n-import org.ethereum.db.BlockStore;\n-\n-/**\n- * The entry point for execute blocks CLI tool\n- */\n-public class ExecuteBlocks {\n-    public static void main(String[] args) {\n-        RskContext ctx = new RskContext(args);\n-\n-        BlockExecutor blockExecutor = ctx.getBlockExecutor();\n-        BlockStore blockStore = ctx.getBlockStore();\n-        TrieStore trieStore = ctx.getTrieStore();\n-        \n-        execute(args, blockExecutor, blockStore, trieStore);\n-    }\n-    \n-    public static void execute(String[] args, BlockExecutor blockExecutor, BlockStore blockStore, TrieStore trieStore) {\n-        long fromBlockNumber = Long.parseLong(args[0]);\n-        long toBlockNumber = Long.parseLong(args[1]);\n-\n-        for (long n = fromBlockNumber; n <= toBlockNumber; n++) {\n-            Block block = blockStore.getChainBlockByNumber(n);\n-            Block parent = blockStore.getBlockByHash(block.getParentHash().getBytes());\n-\n-            blockExecutor.execute(block, parent.getHeader(), false, false);\n-        }\n-\n-        trieStore.flush();\n-        blockStore.flush();\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NjcxMA==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r422276710", "bodyText": "shouldn't we raise an error here instead of continue? why silently swallow the error?", "author": "nicops", "createdAt": "2020-05-08T17:40:30Z", "path": "rskj-core/src/main/java/co/rsk/ImportBlocks.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package co.rsk;\n+\n+import co.rsk.core.BlockDifficulty;\n+import org.bouncycastle.util.encoders.Hex;\n+import org.ethereum.core.Block;\n+import org.ethereum.core.BlockFactory;\n+import org.ethereum.db.BlockStore;\n+\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.math.BigInteger;\n+\n+/**\n+ * The entry point for import blocks CLI tool\n+ */\n+public class ImportBlocks {\n+    public static void main(String[] args) throws IOException {\n+        RskContext ctx = new RskContext(args);\n+        BlockFactory blockFactory = ctx.getBlockFactory();\n+        BlockStore blockStore = ctx.getBlockStore();\n+\n+        String filename = args[0];\n+\n+        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {\n+            execute(blockFactory, blockStore, reader);\n+        }\n+    }\n+\n+    public static void execute(BlockFactory blockFactory, BlockStore blockStore, BufferedReader reader) throws IOException {\n+        for (String line = reader.readLine(); line != null; line = reader.readLine()) {\n+            String[] parts = line.split(\",\");\n+\n+            if (parts.length < 4) {\n+                continue;", "originalCommit": "48dc1e06901754a457e4a9e8e63f506b86844df7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMzgwMQ==", "url": "https://github.com/rsksmart/rskj/pull/1226#discussion_r423113801", "bodyText": "Only for simplicity, until these tools were really used", "author": "ajlopezrsk", "createdAt": "2020-05-11T15:14:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3NjcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2d270ff28173061b4585f4cdd919032eadb82f9b", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/ImportBlocks.java b/rskj-core/src/main/java/co/rsk/ImportBlocks.java\ndeleted file mode 100644\nindex 2954792f3..000000000\n--- a/rskj-core/src/main/java/co/rsk/ImportBlocks.java\n+++ /dev/null\n\n@@ -1,66 +0,0 @@\n-/*\n- * This file is part of RskJ\n- * Copyright (C) 2017 RSK Labs Ltd.\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Lesser General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program. If not, see <http://www.gnu.org/licenses/>.\n- */\n-package co.rsk;\n-\n-import co.rsk.core.BlockDifficulty;\n-import org.bouncycastle.util.encoders.Hex;\n-import org.ethereum.core.Block;\n-import org.ethereum.core.BlockFactory;\n-import org.ethereum.db.BlockStore;\n-\n-import java.io.BufferedReader;\n-import java.io.FileReader;\n-import java.io.IOException;\n-import java.math.BigInteger;\n-\n-/**\n- * The entry point for import blocks CLI tool\n- */\n-public class ImportBlocks {\n-    public static void main(String[] args) throws IOException {\n-        RskContext ctx = new RskContext(args);\n-        BlockFactory blockFactory = ctx.getBlockFactory();\n-        BlockStore blockStore = ctx.getBlockStore();\n-\n-        String filename = args[0];\n-\n-        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {\n-            execute(blockFactory, blockStore, reader);\n-        }\n-    }\n-\n-    public static void execute(BlockFactory blockFactory, BlockStore blockStore, BufferedReader reader) throws IOException {\n-        for (String line = reader.readLine(); line != null; line = reader.readLine()) {\n-            String[] parts = line.split(\",\");\n-\n-            if (parts.length < 4) {\n-                continue;\n-            }\n-\n-            byte[] encoded = Hex.decode(parts[3]);\n-\n-            Block block = blockFactory.decodeBlock(encoded);\n-\n-            BlockDifficulty totalDifficulty = new BlockDifficulty(new BigInteger(Hex.decode(parts[2])));\n-\n-            blockStore.saveBlock(block, totalDifficulty, true);\n-        }\n-\n-        blockStore.flush();\n-    }\n-}\n"}}, {"oid": "2d270ff28173061b4585f4cdd919032eadb82f9b", "url": "https://github.com/rsksmart/rskj/commit/2d270ff28173061b4585f4cdd919032eadb82f9b", "message": "ShowStateInfo, ExportState", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "eec818720580c8133f84f05159386d78ea017b38", "url": "https://github.com/rsksmart/rskj/commit/eec818720580c8133f84f05159386d78ea017b38", "message": "Skip embeddable nodes in state export", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "4fb14fc43f9b982f4c1ed64ff8a40541475d1797", "url": "https://github.com/rsksmart/rskj/commit/4fb14fc43f9b982f4c1ed64ff8a40541475d1797", "message": "Fix code", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "d29ccc6d7adda80bee58b1f0a57bc0cd20e2c788", "url": "https://github.com/rsksmart/rskj/commit/d29ccc6d7adda80bee58b1f0a57bc0cd20e2c788", "message": "Export blocks", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "e29d0563726a6e532eb8495bf3d7e4183552d043", "url": "https://github.com/rsksmart/rskj/commit/e29d0563726a6e532eb8495bf3d7e4183552d043", "message": "Import blocks from file", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "cffc07d8e08cd206f2c5a08d1508b0eccc8470cb", "url": "https://github.com/rsksmart/rskj/commit/cffc07d8e08cd206f2c5a08d1508b0eccc8470cb", "message": "Execute blocks", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "379eca5cfd5c9746ca5243cdbc9b0822aa54c8c2", "url": "https://github.com/rsksmart/rskj/commit/379eca5cfd5c9746ca5243cdbc9b0822aa54c8c2", "message": "Import state", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "8fdfb8b63358362b32b826a1b757bcfbbdd00fdd", "url": "https://github.com/rsksmart/rskj/commit/8fdfb8b63358362b32b826a1b757bcfbbdd00fdd", "message": "Connect blocks; changes in ShowStateInfo; remove unused imports", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "2943f6c243f237f13da8696cbdd00e5d80c92e61", "url": "https://github.com/rsksmart/rskj/commit/2943f6c243f237f13da8696cbdd00e5d80c92e61", "message": "Adding flush to receipt store", "committedDate": "2020-05-12T16:13:39Z", "type": "commit"}, {"oid": "58d7b4f292cd75484f125b27d2d8bea824145c73", "url": "https://github.com/rsksmart/rskj/commit/58d7b4f292cd75484f125b27d2d8bea824145c73", "message": "Add support embedded nodes with long value into export state logic", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "f8718c30755ff80891409621e15604c7fa992b35", "url": "https://github.com/rsksmart/rskj/commit/f8718c30755ff80891409621e15604c7fa992b35", "message": "Add support embedded nodes with long value into show state information logic", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "d5194974dd4b6372dc6537a14fc9a1b2f95897c7", "url": "https://github.com/rsksmart/rskj/commit/d5194974dd4b6372dc6537a14fc9a1b2f95897c7", "message": "Export blocks test", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "d9402a94cc35bd2f511dd1d540697f7070b8302f", "url": "https://github.com/rsksmart/rskj/commit/d9402a94cc35bd2f511dd1d540697f7070b8302f", "message": "ExportState test", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "03bf557387f8b9a217d516469ec1c196eb5e6539", "url": "https://github.com/rsksmart/rskj/commit/03bf557387f8b9a217d516469ec1c196eb5e6539", "message": "ExecuteBlocks test", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "0ecb808413d38f4a6309aaee1e2b7a7f738b9c5e", "url": "https://github.com/rsksmart/rskj/commit/0ecb808413d38f4a6309aaee1e2b7a7f738b9c5e", "message": "ConnectBlocks test", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "dbd81eff94372bc5e8fc1ea790e0fedb9973b645", "url": "https://github.com/rsksmart/rskj/commit/dbd81eff94372bc5e8fc1ea790e0fedb9973b645", "message": "Removing unused imports", "committedDate": "2020-05-12T16:13:40Z", "type": "commit"}, {"oid": "37bbd75ce2effc5db58661d376fda283e83d0aca", "url": "https://github.com/rsksmart/rskj/commit/37bbd75ce2effc5db58661d376fda283e83d0aca", "message": "ImportState test", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "660973260a0dd7cae918a72346ba7023f1d1c5df", "url": "https://github.com/rsksmart/rskj/commit/660973260a0dd7cae918a72346ba7023f1d1c5df", "message": "ShowStateInfo test", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "7d8135bea716301c32fc1798dff1e5a2fd5cf652", "url": "https://github.com/rsksmart/rskj/commit/7d8135bea716301c32fc1798dff1e5a2fd5cf652", "message": "Refactor CLI tools", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "e8f07a15f0d4a2c5bf5ff0e1e65ace0003f6d6b0", "url": "https://github.com/rsksmart/rskj/commit/e8f07a15f0d4a2c5bf5ff0e1e65ace0003f6d6b0", "message": "Using isPresent in optional tries", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "b93c0ea0e1e0a6b00ba3fbd23db214988c717010", "url": "https://github.com/rsksmart/rskj/commit/b93c0ea0e1e0a6b00ba3fbd23db214988c717010", "message": "ImportBlock test", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "74dbbde10ddb9dec3fdc008c24feaab12cc6304d", "url": "https://github.com/rsksmart/rskj/commit/74dbbde10ddb9dec3fdc008c24feaab12cc6304d", "message": "ImportBlocks minor refactor", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "43bfacd6e310e48976b1168e9ce99d2146aad60f", "url": "https://github.com/rsksmart/rskj/commit/43bfacd6e310e48976b1168e9ce99d2146aad60f", "message": "Fixing optional trie issue in ShowStateInfo", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "6c99df5ee87ac46967eda8adf49818b15cdc9d8a", "url": "https://github.com/rsksmart/rskj/commit/6c99df5ee87ac46967eda8adf49818b15cdc9d8a", "message": "Using reader as resource in try", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "944b4fe7580d65b7a645e344d49e4c7cd526328e", "url": "https://github.com/rsksmart/rskj/commit/944b4fe7580d65b7a645e344d49e4c7cd526328e", "message": "Removing old code", "committedDate": "2020-05-12T16:13:41Z", "type": "commit"}, {"oid": "139820e4e3692e5dd3857448c0f3c86c0bd85c3a", "url": "https://github.com/rsksmart/rskj/commit/139820e4e3692e5dd3857448c0f3c86c0bd85c3a", "message": "Adding comment to CLI tools entry points", "committedDate": "2020-05-12T16:13:42Z", "type": "commit"}, {"oid": "139820e4e3692e5dd3857448c0f3c86c0bd85c3a", "url": "https://github.com/rsksmart/rskj/commit/139820e4e3692e5dd3857448c0f3c86c0bd85c3a", "message": "Adding comment to CLI tools entry points", "committedDate": "2020-05-12T16:13:42Z", "type": "forcePushed"}, {"oid": "77225f24d56f792e827a927989a797f374a41c2b", "url": "https://github.com/rsksmart/rskj/commit/77225f24d56f792e827a927989a797f374a41c2b", "message": "Moving CLI tools to co.rsk.cli.tools package", "committedDate": "2020-05-13T14:50:56Z", "type": "commit"}]}