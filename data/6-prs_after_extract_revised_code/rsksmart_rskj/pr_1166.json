{"pr_number": 1166, "pr_title": "Difficulty divisor drop", "pr_createdAt": "2020-01-30T13:33:55Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1166", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxMjg3MQ==", "url": "https://github.com/rsksmart/rskj/pull/1166#discussion_r373012871", "bodyText": "Since the method is no longer static I think the constants parameter could be dropped", "author": "M-Picco", "createdAt": "2020-01-30T15:21:21Z", "path": "rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java", "diffHunk": "@@ -48,7 +48,7 @@ public BlockDifficulty calcDifficulty(BlockHeader header, BlockHeader parentHead\n         return getBlockDifficulty(header, parentHeader, constants);\n     }\n \n-    private static BlockDifficulty getBlockDifficulty(\n+    private BlockDifficulty getBlockDifficulty(\n             BlockHeader curBlockHeader,\n             BlockHeader parent,\n             Constants constants) {", "originalCommit": "9b0e99e071247ee95de74513821a8879f919de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c442e2608806ed193bf519cabcc9ad02921ae060", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java b/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\nindex 09974648e..30b04bd95 100644\n--- a/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\n+++ b/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\n\n@@ -45,24 +45,18 @@ public class DifficultyCalculator {\n             }\n         }\n \n-        return getBlockDifficulty(header, parentHeader, constants);\n+        return getBlockDifficulty(header, parentHeader);\n     }\n \n     private BlockDifficulty getBlockDifficulty(\n             BlockHeader curBlockHeader,\n-            BlockHeader parent,\n-            Constants constants) {\n+            BlockHeader parent) {\n         BlockDifficulty pd = parent.getDifficulty();\n         long parentBlockTS = parent.getTimestamp();\n         int uncleCount = curBlockHeader.getUncleCount();\n         long curBlockTS = curBlockHeader.getTimestamp();\n         int duration = constants.getDurationLimit();\n-        BigInteger difDivisor = constants.getDifficultyBoundDivisor();\n-        if (activationConfig.isActive(ConsensusRule.RSKIP156, curBlockHeader.getNumber())\n-            && constants.getChainId() != Constants.REGTEST_CHAIN_ID) {\n-            // Unless we are in regtest, this RSKIP increments the difficulty divisor from 50 to 400\n-            difDivisor = BigInteger.valueOf(400);\n-        }\n+        BigInteger difDivisor = constants.getDifficultyBoundDivisor(activationConfig.forBlock(curBlockHeader.getNumber()));\n         BlockDifficulty minDif = constants.getMinimumDifficulty();\n         return calcDifficultyWithTimeStamps(curBlockTS, parentBlockTS, pd, uncleCount, duration, difDivisor, minDif);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxNDI1Mg==", "url": "https://github.com/rsksmart/rskj/pull/1166#discussion_r373014252", "bodyText": "Could a constant be introduced for the value 400?", "author": "M-Picco", "createdAt": "2020-01-30T15:23:35Z", "path": "rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java", "diffHunk": "@@ -58,6 +58,11 @@ private static BlockDifficulty getBlockDifficulty(\n         long curBlockTS = curBlockHeader.getTimestamp();\n         int duration = constants.getDurationLimit();\n         BigInteger difDivisor = constants.getDifficultyBoundDivisor();\n+        if (activationConfig.isActive(ConsensusRule.RSKIP156, curBlockHeader.getNumber())\n+            && constants.getChainId() != Constants.REGTEST_CHAIN_ID) {\n+            // Unless we are in regtest, this RSKIP increments the difficulty divisor from 50 to 400\n+            difDivisor = BigInteger.valueOf(400);", "originalCommit": "9b0e99e071247ee95de74513821a8879f919de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c442e2608806ed193bf519cabcc9ad02921ae060", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java b/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\nindex 09974648e..30b04bd95 100644\n--- a/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\n+++ b/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\n\n@@ -45,24 +45,18 @@ public class DifficultyCalculator {\n             }\n         }\n \n-        return getBlockDifficulty(header, parentHeader, constants);\n+        return getBlockDifficulty(header, parentHeader);\n     }\n \n     private BlockDifficulty getBlockDifficulty(\n             BlockHeader curBlockHeader,\n-            BlockHeader parent,\n-            Constants constants) {\n+            BlockHeader parent) {\n         BlockDifficulty pd = parent.getDifficulty();\n         long parentBlockTS = parent.getTimestamp();\n         int uncleCount = curBlockHeader.getUncleCount();\n         long curBlockTS = curBlockHeader.getTimestamp();\n         int duration = constants.getDurationLimit();\n-        BigInteger difDivisor = constants.getDifficultyBoundDivisor();\n-        if (activationConfig.isActive(ConsensusRule.RSKIP156, curBlockHeader.getNumber())\n-            && constants.getChainId() != Constants.REGTEST_CHAIN_ID) {\n-            // Unless we are in regtest, this RSKIP increments the difficulty divisor from 50 to 400\n-            difDivisor = BigInteger.valueOf(400);\n-        }\n+        BigInteger difDivisor = constants.getDifficultyBoundDivisor(activationConfig.forBlock(curBlockHeader.getNumber()));\n         BlockDifficulty minDif = constants.getMinimumDifficulty();\n         return calcDifficultyWithTimeStamps(curBlockTS, parentBlockTS, pd, uncleCount, duration, difDivisor, minDif);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxNTEyNA==", "url": "https://github.com/rsksmart/rskj/pull/1166#discussion_r373015124", "bodyText": "This new block could be moved to a private method which returns the final divisor in order to improve legibility.", "author": "M-Picco", "createdAt": "2020-01-30T15:24:51Z", "path": "rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java", "diffHunk": "@@ -58,6 +58,11 @@ private static BlockDifficulty getBlockDifficulty(\n         long curBlockTS = curBlockHeader.getTimestamp();\n         int duration = constants.getDurationLimit();\n         BigInteger difDivisor = constants.getDifficultyBoundDivisor();\n+        if (activationConfig.isActive(ConsensusRule.RSKIP156, curBlockHeader.getNumber())", "originalCommit": "9b0e99e071247ee95de74513821a8879f919de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c442e2608806ed193bf519cabcc9ad02921ae060", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java b/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\nindex 09974648e..30b04bd95 100644\n--- a/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\n+++ b/rskj-core/src/main/java/co/rsk/core/DifficultyCalculator.java\n\n@@ -45,24 +45,18 @@ public class DifficultyCalculator {\n             }\n         }\n \n-        return getBlockDifficulty(header, parentHeader, constants);\n+        return getBlockDifficulty(header, parentHeader);\n     }\n \n     private BlockDifficulty getBlockDifficulty(\n             BlockHeader curBlockHeader,\n-            BlockHeader parent,\n-            Constants constants) {\n+            BlockHeader parent) {\n         BlockDifficulty pd = parent.getDifficulty();\n         long parentBlockTS = parent.getTimestamp();\n         int uncleCount = curBlockHeader.getUncleCount();\n         long curBlockTS = curBlockHeader.getTimestamp();\n         int duration = constants.getDurationLimit();\n-        BigInteger difDivisor = constants.getDifficultyBoundDivisor();\n-        if (activationConfig.isActive(ConsensusRule.RSKIP156, curBlockHeader.getNumber())\n-            && constants.getChainId() != Constants.REGTEST_CHAIN_ID) {\n-            // Unless we are in regtest, this RSKIP increments the difficulty divisor from 50 to 400\n-            difDivisor = BigInteger.valueOf(400);\n-        }\n+        BigInteger difDivisor = constants.getDifficultyBoundDivisor(activationConfig.forBlock(curBlockHeader.getNumber()));\n         BlockDifficulty minDif = constants.getMinimumDifficulty();\n         return calcDifficultyWithTimeStamps(curBlockTS, parentBlockTS, pd, uncleCount, duration, difDivisor, minDif);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMDUxMw==", "url": "https://github.com/rsksmart/rskj/pull/1166#discussion_r373030513", "bodyText": "Since this \"constant\" is no longer constant maybe we should find a way to remove it from here", "author": "M-Picco", "createdAt": "2020-01-30T15:49:22Z", "path": "rskj-core/src/main/java/org/ethereum/config/Constants.java", "diffHunk": "@@ -89,6 +89,7 @@ public BlockDifficulty getFallbackMiningDifficulty() {\n     }\n \n     public BigInteger getDifficultyBoundDivisor() {", "originalCommit": "9b0e99e071247ee95de74513821a8879f919de5f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c442e2608806ed193bf519cabcc9ad02921ae060", "chunk": "diff --git a/rskj-core/src/main/java/org/ethereum/config/Constants.java b/rskj-core/src/main/java/org/ethereum/config/Constants.java\nindex 1b221796e..878bb4b5f 100644\n--- a/rskj-core/src/main/java/org/ethereum/config/Constants.java\n+++ b/rskj-core/src/main/java/org/ethereum/config/Constants.java\n\n@@ -88,8 +91,13 @@ public class Constants {\n         return fallbackMiningDifficulty;\n     }\n \n-    public BigInteger getDifficultyBoundDivisor() {\n+    public BigInteger getDifficultyBoundDivisor(ActivationConfig.ForBlock activationConfig) {\n         // divisor used since inception until the RSKIP156\n+        if (activationConfig.isActive(ConsensusRule.RSKIP156)\n+                && getChainId() != Constants.REGTEST_CHAIN_ID) {\n+            // Unless we are in regtest, this RSKIP increments the difficulty divisor from 50 to 400\n+            return RSKIP156_DIF_BOUND_DIVISOR;\n+        }\n         return difficultyBoundDivisor;\n     }\n \n"}}, {"oid": "c442e2608806ed193bf519cabcc9ad02921ae060", "url": "https://github.com/rsksmart/rskj/commit/c442e2608806ed193bf519cabcc9ad02921ae060", "message": "Added tests", "committedDate": "2020-01-30T16:50:48Z", "type": "forcePushed"}, {"oid": "c919f51aa739ec9621506c9ee1eb33edf620f6f5", "url": "https://github.com/rsksmart/rskj/commit/c919f51aa739ec9621506c9ee1eb33edf620f6f5", "message": "Added tests", "committedDate": "2020-01-31T14:17:01Z", "type": "forcePushed"}, {"oid": "f83f0f90356193145c951c8b0e1fe35c43470088", "url": "https://github.com/rsksmart/rskj/commit/f83f0f90356193145c951c8b0e1fe35c43470088", "message": "Added tests", "committedDate": "2020-01-31T16:37:55Z", "type": "forcePushed"}, {"oid": "a7d67899e3399be3e693be45696c71a1f6065b98", "url": "https://github.com/rsksmart/rskj/commit/a7d67899e3399be3e693be45696c71a1f6065b98", "message": "Implemented difficulty divisor increase", "committedDate": "2020-02-13T15:05:02Z", "type": "commit"}, {"oid": "d7f7cc993d8f35b2222c87ee834cda2e8d69ee31", "url": "https://github.com/rsksmart/rskj/commit/d7f7cc993d8f35b2222c87ee834cda2e8d69ee31", "message": "Added tests", "committedDate": "2020-02-13T15:05:02Z", "type": "commit"}, {"oid": "d7f7cc993d8f35b2222c87ee834cda2e8d69ee31", "url": "https://github.com/rsksmart/rskj/commit/d7f7cc993d8f35b2222c87ee834cda2e8d69ee31", "message": "Added tests", "committedDate": "2020-02-13T15:05:02Z", "type": "forcePushed"}]}