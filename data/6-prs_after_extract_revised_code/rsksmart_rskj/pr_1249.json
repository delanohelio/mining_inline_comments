{"pr_number": 1249, "pr_title": "Lc lightsync refactor", "pr_createdAt": "2020-05-29T18:30:59Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1249", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0OTQzMA==", "url": "https://github.com/rsksmart/rskj/pull/1249#discussion_r433249430", "bodyText": "little typo shold -> should", "author": "julianlen", "createdAt": "2020-06-01T13:57:33Z", "path": "rskj-core/src/main/java/co/rsk/net/light/LightSyncProcessor.java", "diffHunk": "@@ -187,4 +159,33 @@ private LightStatus getCurrentStatus(Block block) {\n         BlockDifficulty totalDifficulty = blockStore.getTotalDifficultyForHash(bestHash);\n         return new LightStatus((byte) 0, config.networkId(), totalDifficulty, bestHash, bestNumber, genesis.getHash().getBytes());\n     }\n+\n+    private boolean isCompatible(LightStatus msgStatus, LightPeer lightPeer, ChannelHandlerContext ctx,\n+                                 LightClientHandler lightClientHandler){\n+        // HOW TO USE: Any new check you want to include, you shold add a compareStatusParam with its", "originalCommit": "fa9c21260657c5b1ce7148799ffb9ffc0419f6d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5ad3d63339b3becd550cd9889991cc6bf83c8a8", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/net/light/LightSyncProcessor.java b/rskj-core/src/main/java/co/rsk/net/light/LightSyncProcessor.java\nindex 6217813ca..60b45132d 100644\n--- a/rskj-core/src/main/java/co/rsk/net/light/LightSyncProcessor.java\n+++ b/rskj-core/src/main/java/co/rsk/net/light/LightSyncProcessor.java\n\n@@ -160,32 +161,47 @@ public class LightSyncProcessor {\n         return new LightStatus((byte) 0, config.networkId(), totalDifficulty, bestHash, bestNumber, genesis.getHash().getBytes());\n     }\n \n-    private boolean isCompatible(LightStatus msgStatus, LightPeer lightPeer, ChannelHandlerContext ctx,\n-                                 LightClientHandler lightClientHandler){\n-        // HOW TO USE: Any new check you want to include, you shold add a compareStatusParam with its\n-        // properties to compare\n-        return compareStatusParam(version, msgStatus.getProtocolVersion(),\n-                ReasonCode.INCOMPATIBLE_PROTOCOL, \"Protocol Incompatibility\",\n-                lightPeer, ctx, lightClientHandler) &&\n-\n-        compareStatusParam(config.networkId(), msgStatus.getNetworkId(),\n-                ReasonCode.NULL_IDENTITY, \"Invalid Network\",\n-                lightPeer, ctx, lightClientHandler) &&\n-\n-        compareStatusParam(genesis.getHash(), new Keccak256(msgStatus.getGenesisHash()),\n-                ReasonCode.UNEXPECTED_GENESIS, \"Unexpected Genesis\",\n-                lightPeer, ctx, lightClientHandler);\n-    }\n+    private class CompatibilityChecker {\n+        LightPeer lightPeer;\n+        ChannelHandlerContext ctx;\n+        LightClientHandler lightClientHandler;\n+        LightStatus msgStatus;\n+\n+        private CompatibilityChecker(LightPeer lightPeer,\n+                                     ChannelHandlerContext ctx,\n+                                     LightClientHandler lightClientHandler,\n+                                     LightStatus msgStatus){\n+            this.lightPeer = lightPeer;\n+            this.ctx = ctx;\n+            this.lightClientHandler = lightClientHandler;\n+            this.msgStatus = msgStatus;\n+        }\n+\n+        private boolean isCompatible(){\n+            return compare(version, msgStatus.getProtocolVersion(),\n+            ReasonCode.INCOMPATIBLE_PROTOCOL, \"Protocol Incompatibility\") &&\n+\n+            compare(config.networkId(), msgStatus.getNetworkId(),\n+                    ReasonCode.NULL_IDENTITY, \"Invalid Network\") &&\n+\n+            compare(genesis.getHash(), new Keccak256(msgStatus.getGenesisHash()),\n+                    ReasonCode.UNEXPECTED_GENESIS, \"Unexpected Genesis\");\n+        }\n \n-    private boolean compareStatusParam(Object expectedParam, Object msgParam, ReasonCode reason, String reasonText,\n-                                       LightPeer lightPeer, ChannelHandlerContext ctx, LightClientHandler lightClientHandler){\n-        if (!expectedParam.equals(msgParam)) {\n-            loggerNet.info(\"Client expected {} - but was {}\", expectedParam, msgParam);\n+        private boolean compare(Object expected, Object msg, ReasonCode reason, String reasonText){\n+            if (!expected.equals(msg)) {\n+                disconnect(reason, reasonText, expected, msg);\n+                return false;\n+            }\n+            return true;\n+        }\n+\n+        private void disconnect(ReasonCode reason, String reasonText,\n+                                Object expectedParam, Object returnedParam) {\n             loggerNet.info(\"Removing LCHandler for {} reason: {}\", ctx.channel().remoteAddress(), reasonText);\n+            loggerNet.info(\"Client expected {} - but was {}\", expectedParam, returnedParam);\n             lightPeer.disconnect(reason);\n             ctx.pipeline().remove(lightClientHandler);\n-            return false;\n         }\n-        return true;\n     }\n }\n"}}, {"oid": "f5ad3d63339b3becd550cd9889991cc6bf83c8a8", "url": "https://github.com/rsksmart/rskj/commit/f5ad3d63339b3becd550cd9889991cc6bf83c8a8", "message": "posible refactior", "committedDate": "2020-06-01T14:05:32Z", "type": "commit"}, {"oid": "403597528e5e2959a0194b8d776cefd731b8810d", "url": "https://github.com/rsksmart/rskj/commit/403597528e5e2959a0194b8d776cefd731b8810d", "message": "added visiblefortesting tag", "committedDate": "2020-06-01T14:05:32Z", "type": "forcePushed"}, {"oid": "babdf4e21d47a5fe8d5ed6d2533a2ae470fc7dbf", "url": "https://github.com/rsksmart/rskj/commit/babdf4e21d47a5fe8d5ed6d2533a2ae470fc7dbf", "message": "better refactor", "committedDate": "2020-06-01T14:08:16Z", "type": "commit"}, {"oid": "1b01559d87b8149c7e304ac76286b931d0c0a631", "url": "https://github.com/rsksmart/rskj/commit/1b01559d87b8149c7e304ac76286b931d0c0a631", "message": "added visiblefortesting tag", "committedDate": "2020-06-01T14:08:27Z", "type": "commit"}, {"oid": "1b01559d87b8149c7e304ac76286b931d0c0a631", "url": "https://github.com/rsksmart/rskj/commit/1b01559d87b8149c7e304ac76286b931d0c0a631", "message": "added visiblefortesting tag", "committedDate": "2020-06-01T14:08:27Z", "type": "forcePushed"}]}