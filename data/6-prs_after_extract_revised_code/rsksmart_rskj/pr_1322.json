{"pr_number": 1322, "pr_title": "Update peg-in instructions parser according to changes in the protocol", "pr_createdAt": "2020-09-30T13:20:56Z", "pr_url": "https://github.com/rsksmart/rskj/pull/1322", "timeline": [{"oid": "022bde0b6e76bb37e577ec7d8839940d34f610ce", "url": "https://github.com/rsksmart/rskj/commit/022bde0b6e76bb37e577ec7d8839940d34f610ce", "message": "Peg-in protocol version uses 1 byte instead of 2", "committedDate": "2020-10-01T16:52:58Z", "type": "commit"}, {"oid": "e1dd837134ca93853f9012661011517f98a3f9a3", "url": "https://github.com/rsksmart/rskj/commit/e1dd837134ca93853f9012661011517f98a3f9a3", "message": "Add prefix verification to peg-in instrcutions parser.\n\nPeg-in instructions parser now verifies that a prefix is included in the payload indicating the OP_RETURN output is for RSK. Updated tests to create transaction objects for each case instead of using raw txs.", "committedDate": "2020-10-01T16:52:58Z", "type": "forcePushed"}, {"oid": "0af8958e8fee039386225b65398753e92c3c6831", "url": "https://github.com/rsksmart/rskj/commit/0af8958e8fee039386225b65398753e92c3c6831", "message": "Add prefix verification to peg-in instrcutions parser.\n\nPeg-in instructions parser now verifies that a prefix is included in the payload indicating the OP_RETURN output is for RSK. Updated tests to create transaction objects for each case instead of using raw txs.", "committedDate": "2020-10-01T17:20:53Z", "type": "forcePushed"}, {"oid": "1e72f3d5c3d148beacff01d855e9d9f1b3cdd927", "url": "https://github.com/rsksmart/rskj/commit/1e72f3d5c3d148beacff01d855e9d9f1b3cdd927", "message": "Add prefix verification to peg-in instrcutions parser.\n\nPeg-in instructions parser now verifies that a prefix is included in the payload indicating the OP_RETURN output is for RSK. Updated tests to create transaction objects for each case instead of using raw txs.", "committedDate": "2020-10-01T17:22:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NjI2OQ==", "url": "https://github.com/rsksmart/rskj/pull/1322#discussion_r498466269", "bodyText": "I guess you could define RSKT_HEX with the result of this Hex.decode instead so you avoid parsing it all the time", "author": "josedahlquist", "createdAt": "2020-10-01T19:24:45Z", "path": "rskj-core/src/main/java/co/rsk/peg/pegininstructions/PeginInstructionsProvider.java", "diffHunk": "@@ -53,45 +55,49 @@\n         return Optional.of(peginInstructions);\n     }\n \n-    protected static byte[] extractOpReturnData(BtcTransaction btcTx)\n-        throws PeginInstructionsException {\n-        byte[] data = new byte[]{};\n-        int opReturnOccurrences = 0;\n-\n+    protected static byte[] extractOpReturnData(BtcTransaction btcTx) throws PeginInstructionsException {\n         logger.trace(\"[extractOpReturnData] Getting OP_RETURN data for btc tx: {}\", btcTx.getHash());\n \n-        for (int i=0; i<btcTx.getOutputs().size(); i++) {\n-            List<ScriptChunk> chunksByOutput = btcTx.getOutput(i).getScriptPubKey().getChunks();\n-            if (chunksByOutput.get(0).opcode == ScriptOpCodes.OP_RETURN) {\n-                if (chunksByOutput.size() > 1) {\n-                    data = btcTx.getOutput(i).getScriptPubKey().getChunks().get(1).data;\n-                    opReturnOccurrences++;\n-                } else {\n-                    // OP_RETURN exist but data is empty\n-                    opReturnOccurrences++;\n-                    data = null;\n-                }\n+        byte[] data = new byte[]{};\n+        int opReturnForRskOccurrences = 0;\n+\n+        for (int i = 0; i < btcTx.getOutputs().size(); i++) {\n+            TransactionOutput txOutput = btcTx.getOutput(i);\n+            if(hasOpReturnForRsk(txOutput)) {\n+                data = txOutput.getScriptPubKey().getChunks().get(1).data;\n+                opReturnForRskOccurrences++;\n             }\n         }\n \n-        if (opReturnOccurrences == 0) {\n+        if (opReturnForRskOccurrences == 0) {\n             String message = String.format(\"No OP_RETURN output found for tx %s\", btcTx.getHash());\n             throw new NoOpReturnException(message);\n         }\n \n-        if (opReturnOccurrences > 1) {\n-            String message = String.format(\"Only one output with OP_RETURN is allowed. Found %d\",\n-                opReturnOccurrences);\n+        if (opReturnForRskOccurrences > 1) {\n+            String message = String.format(\"Only one output with OP_RETURN for RSK is allowed. Found %d\",\n+                opReturnForRskOccurrences);\n             logger.debug(\"[extractOpReturnData] {}\", message);\n             throw new PeginInstructionsException(message);\n         }\n \n-        if (data == null) {\n-            String message = \"Empty OP_RETURN data found\";\n-            logger.debug(\"[extractOpReturnData] {}\", message);\n-            throw new PeginInstructionsException(message);\n+        return data;\n+    }\n+\n+    private static boolean hasOpReturnForRsk(TransactionOutput txOutput) {\n+        if(txOutput.getScriptPubKey().isOpReturn()) {\n+            // Check if it has data with `RSKT` prefix\n+            List<ScriptChunk> chunksByOutput = txOutput.getScriptPubKey().getChunks();\n+            if (chunksByOutput.size() > 1 &&\n+                chunksByOutput.get(1).data != null &&\n+                chunksByOutput.get(1).data.length >= 4) {\n+                byte[] prefix = Arrays.copyOfRange(chunksByOutput.get(1).data, 0, 4);\n+                if (Arrays.equals(prefix, Hex.decode(RSKT_HEX))) {", "originalCommit": "1e72f3d5c3d148beacff01d855e9d9f1b3cdd927", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2794c97aed48cd8f0fa78b70d387664ff6ac40f", "chunk": "diff --git a/rskj-core/src/main/java/co/rsk/peg/pegininstructions/PeginInstructionsProvider.java b/rskj-core/src/main/java/co/rsk/peg/pegininstructions/PeginInstructionsProvider.java\nindex 8a7040627..ea249c5f8 100644\n--- a/rskj-core/src/main/java/co/rsk/peg/pegininstructions/PeginInstructionsProvider.java\n+++ b/rskj-core/src/main/java/co/rsk/peg/pegininstructions/PeginInstructionsProvider.java\n\n@@ -92,7 +92,7 @@ public class PeginInstructionsProvider {\n                 chunksByOutput.get(1).data != null &&\n                 chunksByOutput.get(1).data.length >= 4) {\n                 byte[] prefix = Arrays.copyOfRange(chunksByOutput.get(1).data, 0, 4);\n-                if (Arrays.equals(prefix, Hex.decode(RSKT_HEX))) {\n+                if (Arrays.equals(prefix, RSKT_HEX)) {\n                     return true;\n                 }\n             }\n"}}, {"oid": "b2794c97aed48cd8f0fa78b70d387664ff6ac40f", "url": "https://github.com/rsksmart/rskj/commit/b2794c97aed48cd8f0fa78b70d387664ff6ac40f", "message": "Add prefix verification to peg-in instrcutions parser.\n\nPeg-in instructions parser now verifies that a prefix is included in the payload indicating the OP_RETURN output is for RSK. Updated tests to create transaction objects for each case instead of using raw txs.", "committedDate": "2020-10-05T18:35:10Z", "type": "commit"}, {"oid": "b2794c97aed48cd8f0fa78b70d387664ff6ac40f", "url": "https://github.com/rsksmart/rskj/commit/b2794c97aed48cd8f0fa78b70d387664ff6ac40f", "message": "Add prefix verification to peg-in instrcutions parser.\n\nPeg-in instructions parser now verifies that a prefix is included in the payload indicating the OP_RETURN output is for RSK. Updated tests to create transaction objects for each case instead of using raw txs.", "committedDate": "2020-10-05T18:35:10Z", "type": "forcePushed"}]}