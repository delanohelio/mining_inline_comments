{"pr_number": 1080, "pr_title": "Don't throw JobInterrupted exception if state is \"finished\" and waiting on cleanup job to run", "pr_createdAt": "2020-08-18T13:08:09Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1080", "timeline": [{"oid": "012b321d2db402e564aba387f3709318839c1686", "url": "https://github.com/UNC-Libraries/box-c/commit/012b321d2db402e564aba387f3709318839c1686", "message": "Don't throw JobInterrupted exception if state is \"finished\" and waiting on cleanup job to run.", "committedDate": "2020-08-18T13:04:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI4MDI4OQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1080#discussion_r472280289", "bodyText": "I'm not totally sure if the check of the job name is necessary, but interrupting the job if somehow it gets set to finished and isn't a cleanup job is probably fine since that would be an error at this time.\nMy only suggestion is that instead of doing a contains check on the job name, you can do this instanceof CleanupDepositJob instead, or maybe it needs to be getClass(), I'm not sure, but either would be good and a bit safer than a string check.", "author": "bbpennel", "createdAt": "2020-08-18T15:22:33Z", "path": "deposit/src/main/java/edu/unc/lib/deposit/work/AbstractDepositJob.java", "diffHunk": "@@ -370,7 +370,10 @@ protected void interruptJobIfStopped() throws JobInterruptedException {\n         }\n \n         DepositState state = getDepositStatusFactory().getState(depositId);\n-        if (!DepositState.running.equals(state)) {\n+\n+        // Only throw error if state is changed and it's not a finished deposit waiting on cleanup job\n+        if (!DepositState.running.equals(state) &&\n+                (!DepositState.finished.equals(state) && !jobName.contains(\"CleanupDepositJob\"))) {", "originalCommit": "012b321d2db402e564aba387f3709318839c1686", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6537f3ea35fad77a8f24afed0ae337e4175bab14", "chunk": "diff --git a/deposit/src/main/java/edu/unc/lib/deposit/work/AbstractDepositJob.java b/deposit/src/main/java/edu/unc/lib/deposit/work/AbstractDepositJob.java\nindex 9fffce448..47c56a22d 100644\n--- a/deposit/src/main/java/edu/unc/lib/deposit/work/AbstractDepositJob.java\n+++ b/deposit/src/main/java/edu/unc/lib/deposit/work/AbstractDepositJob.java\n\n@@ -373,7 +374,7 @@ public abstract class AbstractDepositJob implements Runnable {\n \n         // Only throw error if state is changed and it's not a finished deposit waiting on cleanup job\n         if (!DepositState.running.equals(state) &&\n-                (!DepositState.finished.equals(state) && !jobName.contains(\"CleanupDepositJob\"))) {\n+                (!DepositState.finished.equals(state) && !(this instanceof CleanupDepositJob))) {\n             throw new JobInterruptedException(\"State for deposit \" + depositId + \" changed from 'running' to '\"\n                     + state.name() + \"', interrupting job \" + jobName);\n         }\n"}}, {"oid": "6537f3ea35fad77a8f24afed0ae337e4175bab14", "url": "https://github.com/UNC-Libraries/box-c/commit/6537f3ea35fad77a8f24afed0ae337e4175bab14", "message": "Switch to checking the class type", "committedDate": "2020-08-18T16:07:01Z", "type": "commit"}, {"oid": "530cc8aa6f1334819ccb7e8def089c77342d7ccc", "url": "https://github.com/UNC-Libraries/box-c/commit/530cc8aa6f1334819ccb7e8def089c77342d7ccc", "message": "Remove check for deposit cleanup", "committedDate": "2020-08-18T17:45:36Z", "type": "commit"}, {"oid": "530cc8aa6f1334819ccb7e8def089c77342d7ccc", "url": "https://github.com/UNC-Libraries/box-c/commit/530cc8aa6f1334819ccb7e8def089c77342d7ccc", "message": "Remove check for deposit cleanup", "committedDate": "2020-08-18T17:45:36Z", "type": "forcePushed"}]}