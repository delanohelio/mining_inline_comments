{"pr_number": 1122, "pr_title": "BXC-2854 - Deposit datastream resources", "pr_createdAt": "2020-11-09T16:56:24Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1122", "timeline": [{"oid": "dc946e081ba764546195873d7f2581397c1b59a0", "url": "https://github.com/UNC-Libraries/box-c/commit/dc946e081ba764546195873d7f2581397c1b59a0", "message": "First batch of updates to change binaries to being resource in deposit model, so that properties can be stored for each of them", "committedDate": "2020-11-08T00:54:11Z", "type": "commit"}, {"oid": "ffd70d564070b2c6060f12695495731bd00fcfa2", "url": "https://github.com/UNC-Libraries/box-c/commit/ffd70d564070b2c6060f12695495731bd00fcfa2", "message": "Update transfer job to new binary model. Include sha1 in binary details", "committedDate": "2020-11-08T00:54:11Z", "type": "commit"}, {"oid": "2a868e8b89a5b4d4355a64b5b1e0c869bd13f40d", "url": "https://github.com/UNC-Libraries/box-c/commit/2a868e8b89a5b4d4355a64b5b1e0c869bd13f40d", "message": "Update additional deposit jobs", "committedDate": "2020-11-09T13:50:52Z", "type": "commit"}, {"oid": "0daf5ecc33413ca3e14a9e2b7e2447ef1457622d", "url": "https://github.com/UNC-Libraries/box-c/commit/0daf5ecc33413ca3e14a9e2b7e2447ef1457622d", "message": "Add helper methods for working with datastreams", "committedDate": "2020-11-09T16:43:34Z", "type": "commit"}, {"oid": "c0696bd7a8272ba572301beeab7ed3fb77062d20", "url": "https://github.com/UNC-Libraries/box-c/commit/c0696bd7a8272ba572301beeab7ed3fb77062d20", "message": "Fix PID of mods history datastream", "committedDate": "2020-11-09T22:01:20Z", "type": "commit"}, {"oid": "7b11ca0df2651a3bcc5dbf72724333478d5a9f1b", "url": "https://github.com/UNC-Libraries/box-c/commit/7b11ca0df2651a3bcc5dbf72724333478d5a9f1b", "message": "Add migration and deposit of fits history files", "committedDate": "2020-11-10T15:26:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4OTA3OA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1122#discussion_r520789078", "bodyText": "is this unnecessary", "author": "bbpennel", "createdAt": "2020-11-10T18:45:29Z", "path": "deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java", "diffHunk": "@@ -196,27 +238,28 @@ private void transferDepositManifests(PID objPid, Resource resc, BinaryTransferS\n             }\n \n             PID manifestPid = getDepositManifestPid(objPid, manifestFile.getName());\n-            transferFile(manifestPid, manifestUri, transferSession, resc, CdrDeposit.storageUri);\n+            transferFile(manifestPid, manifestUri, transferSession, resc, CdrDeposit.hasDatastreamManifest);\n         }\n     }\n \n     private void transferFile(PID binPid, URI stagingUri, BinaryTransferSession transferSession,\n-            Resource resc, Property storageProperty) {\n-\n-        log.debug(\"Transferring {} file from {} for {}\", storageProperty.getLocalName(),\n-                stagingUri, binPid.getQualifiedId());\n+            Resource parentResc, Property datastreamProperty) {\n         URI storageUri = null;\n+        String digest = null;\n+        Resource binResc = model.getResource(binPid.getRepositoryPath());\n+\n+        // Already has storageUri, skip transfer\n+        if (binResc.hasProperty(CdrDeposit.storageUri)) {\n+            return;\n+        }\n+\n+        log.debug(\"Transferring file from {} for {}\", stagingUri, binPid.getQualifiedId());\n+\n+        Statement digestStmt = binResc.getProperty(DEFAULT_ALGORITHM.getDepositProperty());\n         try {\n             BinaryTransferOutcome outcome = transferSession.transfer(binPid, stagingUri);\n-            Statement digestStmt = resc.getProperty(DigestAlgorithm.DEFAULT_ALGORITHM.getDepositProperty());\n-            if (digestStmt != null) {\n-                String digest = digestStmt.getString();\n-                if (!digest.equals(outcome.getSha1())) {\n-                    throw new InvalidChecksumException(\"Checksum of copied file for \" + binPid\n-                            + \" from \" + stagingUri + \" did not match expected SHA1: expected \"\n-                            + digest + \", calculated \" + outcome.getSha1());\n-                }\n-            }\n+            digest = outcome.getSha1();\n+            assertProvidedDigestMatches(digestStmt, digest, binPid, stagingUri);", "originalCommit": "7b11ca0df2651a3bcc5dbf72724333478d5a9f1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c19df25384852271f0e56df2b21ed1867a22659", "chunk": "diff --git a/deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java b/deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java\nindex 7b01c5712..ae6a3de0d 100644\n--- a/deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java\n+++ b/deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java\n\n@@ -259,7 +259,6 @@ public class TransferBinariesToStorageJob extends AbstractDepositJob {\n         try {\n             BinaryTransferOutcome outcome = transferSession.transfer(binPid, stagingUri);\n             digest = outcome.getSha1();\n-            assertProvidedDigestMatches(digestStmt, digest, binPid, stagingUri);\n             storageUri = outcome.getDestinationUri();\n         } catch (BinaryAlreadyExistsException e) {\n             // Make sure a PID collision with an existing repository object isn't happening\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTQxOA==", "url": "https://github.com/UNC-Libraries/box-c/pull/1122#discussion_r520809418", "bodyText": "Are we verifying that fits history is being transferred?", "author": "bbpennel", "createdAt": "2020-11-10T19:09:30Z", "path": "deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java", "diffHunk": "@@ -181,6 +192,47 @@ public void depositWithWorkContainingFileAndFits() throws Exception {\n         verify(jobStatusFactory, times(3)).incrCompletion(eq(jobUUID), eq(1));\n     }\n \n+    @Test\n+    public void depositWithWorkContainingFileAndFitsHistory() throws Exception {\n+        Bag workBag = addContainerObject(depBag, Cdr.Work);\n+        Resource fileResc = addFileObject(workBag, FILE_CONTENT1, true);\n+        workBag.addProperty(Cdr.primaryObject, fileResc);\n+\n+        String historyContent = \"History of fitness\";\n+        PID pid = PIDs.get(workBag.getURI());\n+        Path preHistoryPath = depositDirManager.writeHistoryFile(pid, TECHNICAL_METADATA_HISTORY,\n+                IOUtils.toInputStream(historyContent, UTF_8));\n+        Resource preHistoryResc = DepositModelHelpers.addDatastream(workBag, TECHNICAL_METADATA_HISTORY);\n+        preHistoryResc.addLiteral(CdrDeposit.stagingLocation, preHistoryPath.toUri().toString());\n+\n+        job.closeModel();\n+\n+        job.run();\n+\n+        Model model = job.getReadOnlyModel();\n+        Resource postFileResc = model.getResource(fileResc.getURI());\n+\n+        assertOriginalFileTransferred(postFileResc, FILE_CONTENT1);\n+        assertFitsFileTransferred(postFileResc);", "originalCommit": "7b11ca0df2651a3bcc5dbf72724333478d5a9f1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c19df25384852271f0e56df2b21ed1867a22659", "chunk": "diff --git a/deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java b/deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java\nindex 40ce4b4fa..c780d815b 100644\n--- a/deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java\n+++ b/deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java\n\n@@ -196,13 +196,13 @@ public class TransferBinariesToStorageJobTest extends AbstractNormalizationJobTe\n     public void depositWithWorkContainingFileAndFitsHistory() throws Exception {\n         Bag workBag = addContainerObject(depBag, Cdr.Work);\n         Resource fileResc = addFileObject(workBag, FILE_CONTENT1, true);\n+        PID filePid = PIDs.get(fileResc.getURI());\n         workBag.addProperty(Cdr.primaryObject, fileResc);\n \n         String historyContent = \"History of fitness\";\n-        PID pid = PIDs.get(workBag.getURI());\n-        Path preHistoryPath = depositDirManager.writeHistoryFile(pid, TECHNICAL_METADATA_HISTORY,\n+        Path preHistoryPath = depositDirManager.writeHistoryFile(filePid, TECHNICAL_METADATA_HISTORY,\n                 IOUtils.toInputStream(historyContent, UTF_8));\n-        Resource preHistoryResc = DepositModelHelpers.addDatastream(workBag, TECHNICAL_METADATA_HISTORY);\n+        Resource preHistoryResc = DepositModelHelpers.addDatastream(fileResc, TECHNICAL_METADATA_HISTORY);\n         preHistoryResc.addLiteral(CdrDeposit.stagingLocation, preHistoryPath.toUri().toString());\n \n         job.closeModel();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMzMzNg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1122#discussion_r520813336", "bodyText": "delete me", "author": "bbpennel", "createdAt": "2020-11-10T19:16:20Z", "path": "metadata/src/main/java/edu/unc/lib/dl/util/DepositStatusFactory.java", "diffHunk": "@@ -65,13 +65,6 @@ public DepositStatusFactory() {\n         return result;\n     }\n \n-    public void addManifest(String depositUUID, String value) {\n-        try (Jedis jedis = getJedisPool().getResource()) {\n-            jedis.rpush(DEPOSIT_MANIFEST_PREFIX + depositUUID, value);\n-        }\n-\n-    }\n-\n     public List<String> getManifestURIs(String depositUUID) {", "originalCommit": "7b11ca0df2651a3bcc5dbf72724333478d5a9f1b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c19df25384852271f0e56df2b21ed1867a22659", "chunk": "diff --git a/metadata/src/main/java/edu/unc/lib/dl/util/DepositStatusFactory.java b/metadata/src/main/java/edu/unc/lib/dl/util/DepositStatusFactory.java\nindex 2e6965e33..f318c7f1c 100644\n--- a/metadata/src/main/java/edu/unc/lib/dl/util/DepositStatusFactory.java\n+++ b/metadata/src/main/java/edu/unc/lib/dl/util/DepositStatusFactory.java\n\n@@ -65,12 +64,6 @@ public class DepositStatusFactory {\n         return result;\n     }\n \n-    public List<String> getManifestURIs(String depositUUID) {\n-        try (Jedis jedis = getJedisPool().getResource()) {\n-            return jedis.lrange(DEPOSIT_MANIFEST_PREFIX + depositUUID, 0, -1);\n-        }\n-    }\n-\n     /**\n      * Save deposit status, with the exception of incremented fields (jobs,\n      * octets, objects)\n"}}, {"oid": "4c19df25384852271f0e56df2b21ed1867a22659", "url": "https://github.com/UNC-Libraries/box-c/commit/4c19df25384852271f0e56df2b21ed1867a22659", "message": "Remove unused methods, fix fits history transfer test", "committedDate": "2020-11-10T19:42:16Z", "type": "commit"}]}