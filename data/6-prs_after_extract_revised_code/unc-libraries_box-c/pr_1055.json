{"pr_number": 1055, "pr_title": "BXC-2753 - Prevent storage of FITS error mimetypes in transformations", "pr_createdAt": "2020-07-23T19:56:36Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1055", "timeline": [{"oid": "3de3460ab1cc3b2470898c9b385679b55df45333", "url": "https://github.com/UNC-Libraries/box-c/commit/3de3460ab1cc3b2470898c9b385679b55df45333", "message": "Prevent storage of FITS error mimetypes in transformations", "committedDate": "2020-07-23T19:33:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NjEwNQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1055#discussion_r463246105", "bodyText": "Is this checking that mimetype property is empty?", "author": "lfarrell", "createdAt": "2020-07-30T20:15:56Z", "path": "migration-util/src/test/java/edu/unc/lib/dcr/migration/content/ContentObjectTransformerTest.java", "diffHunk": "@@ -840,6 +846,60 @@ public void transformFolderWithMissingChild() throws Exception {\n         assertTrue(child2Resc.hasProperty(RDF.type, Cdr.Folder));\n     }\n \n+    // BXC-2753\n+    @Test\n+    public void transformFileWithErrorMimetype() throws Exception {\n+        PID child1Pid = makePid();\n+        Path dataFilePath = mockDatastreamFile(child1Pid, ORIGINAL_DS, 0);\n+        String mimetype = \"/data/path/to/file/uuid_0d554164-87c8-4a4f-b8aa-f78ce77d00a6+DATA_FILE+DATA_FILE.0: data\\n\"\n+                + \"-b:                                                                                               \"\n+                + \"                                     cannot open `-b' (No such file or directory)\\n\"\n+                + \"--mime:                                                                                            \"\n+                + \"                                    cannot open `--mime' (No such file or directory)\";\n+        Model child1Model = createFileModel(child1Pid);\n+        // Set a source mimetype, which overrides the mimetype on the file\n+        Resource child1Bxc3Resc = child1Model.getResource(toBxc3Uri(child1Pid));\n+        child1Bxc3Resc.addLiteral(CDRProperty.hasSourceMimeType.getProperty(), mimetype);\n+        Document foxml1 = new FoxmlDocumentBuilder(child1Pid, \"file1\")\n+                .relsExtModel(child1Model)\n+                .withDatastreamVersion(createDataFileVersion())\n+                .build();\n+        serializeFoxml(objectsPath, child1Pid, foxml1);\n+\n+        Model model = createContainerModel(startingPid, AGGREGATE_WORK);\n+        addContains(model, startingPid, child1Pid);\n+        addRelationship(model, startingPid, defaultWebObject.getProperty(), child1Pid);\n+\n+        Document foxml = new FoxmlDocumentBuilder(startingPid, \"work\")\n+                .relsExtModel(model)\n+                .build();\n+        serializeFoxml(objectsPath, startingPid, foxml);\n+\n+        int result = service.perform();\n+        assertEquals(0, result);\n+\n+        Model depModel = modelManager.getReadModel();\n+        Bag workBag = depModel.getBag(startingPid.getRepositoryPath());\n+        Resource child1Resc = depModel.getResource(child1Pid.getRepositoryPath());\n+\n+        // Verify work properties\n+        assertTrue(workBag.hasProperty(RDF.type, Cdr.Work));\n+        assertTrue(workBag.hasProperty(Cdr.primaryObject, child1Resc));\n+\n+        // Verify file properties\n+        List<RDFNode> bagChildren = workBag.iterator().toList();\n+        assertEquals(1, bagChildren.size());\n+        assertTrue(bagChildren.contains(child1Resc));\n+        assertTrue(child1Resc.hasProperty(RDF.type, Cdr.FileObject));\n+        assertTrue(child1Resc.hasLiteral(CdrDeposit.md5sum, DATA_FILE_MD5));\n+        assertTrue(child1Resc.hasLiteral(CdrDeposit.createTime, DEFAULT_CREATED_DATE));\n+        assertTrue(child1Resc.hasLiteral(CdrDeposit.lastModifiedTime, DEFAULT_CREATED_DATE));\n+        assertFalse(child1Resc.hasProperty(CdrDeposit.mimetype));", "originalCommit": "3de3460ab1cc3b2470898c9b385679b55df45333", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5MDY4Mg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1055#discussion_r463290682", "bodyText": "Its checking that it doesn't exist with any value", "author": "bbpennel", "createdAt": "2020-07-30T21:48:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NjEwNQ=="}], "type": "inlineReview", "revised_code": null}]}