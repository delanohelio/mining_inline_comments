{"pr_number": 1039, "pr_title": "BXC-2426 - Deregister destroyed files from longleaf", "pr_createdAt": "2020-07-07T18:41:11Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/1039", "timeline": [{"oid": "b26fb32b3ccbcd73c765fb78e077335ef565e053", "url": "https://github.com/UNC-Libraries/box-c/commit/b26fb32b3ccbcd73c765fb78e077335ef565e053", "message": "Adds deregistration from longleaf of destroyed binaries.\n\nImplements bulk deregistration of binaries in longleaf\nDestroy job triggers deregistration from longleaf. Add more debug statements during destroy\nAllow longleaf message aggregator to get uri from body or header", "committedDate": "2020-07-07T18:35:21Z", "type": "commit"}, {"oid": "a599bff4aaa195dbb714e1cd14152010d0e718a0", "url": "https://github.com/UNC-Libraries/box-c/commit/a599bff4aaa195dbb714e1cd14152010d0e718a0", "message": "Add missing mock", "committedDate": "2020-07-07T19:30:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NTgyMQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451545821", "bodyText": "Why the 1 + 3?", "author": "lfarrell", "createdAt": "2020-07-08T13:31:05Z", "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.services.camel.longleaf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.URI;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.builder.NotifyBuilder;\n+import org.jgroups.util.UUID;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.ContextHierarchy;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import edu.unc.lib.dl.services.MessageSender;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextHierarchy({\n+    @ContextConfiguration(\"/spring-test/jms-context.xml\"),\n+    @ContextConfiguration(\"/deregister-longleaf-router-context.xml\")\n+})\n+public class DeregisterLongleafRouteTest {\n+\n+    @Autowired\n+    private MessageSender messageSender;\n+\n+    @Autowired\n+    private DeregisterLongleafProcessor processor;\n+\n+    @Autowired\n+    private CamelContext cdrLongleaf;\n+\n+    @Rule\n+    public final TemporaryFolder tmpFolder = new TemporaryFolder();\n+\n+    private String longleafScript;\n+    private String outputPath;\n+    private List<String> output;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        tmpFolder.create();\n+        outputPath = tmpFolder.newFile().getPath();\n+        longleafScript = LongleafTestHelpers.getLongleafScript(outputPath);\n+        processor.setLongleafBaseCommand(longleafScript);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBinary() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2)\n+                .create();\n+\n+        String contentUri = generateContentUri();\n+        sendMessages(contentUri);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUri);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBatch() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(1 + 3)", "originalCommit": "a599bff4aaa195dbb714e1cd14152010d0e718a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2Mjk1Mg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451562952", "bodyText": "I wrote it that was since there are two types of messages being completed, 1 batch message and 3 individual messages, since the notifyBuilder tracks the whole camel context rather than a specific route within it. Perhaps a comment would be better though", "author": "bbpennel", "createdAt": "2020-07-08T13:55:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NTgyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "aec2df9568292b4cdf252297c8ef30141d9e03ba", "chunk": "diff --git a/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java b/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java\nindex 38b5f8210..8c6ac7039 100644\n--- a/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java\n+++ b/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java\n\n@@ -74,8 +74,9 @@ public class DeregisterLongleafRouteTest {\n \n     @Test\n     public void deregisterSingleBinary() throws Exception {\n+        // Expecting 1 batch message and 1 individual file message, on different routes\n         NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n-                .whenCompleted(2)\n+                .whenCompleted(1 + 1)\n                 .create();\n \n         String contentUri = generateContentUri();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NjAyNg==", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451546026", "bodyText": "Same here with the 2 + 10?", "author": "lfarrell", "createdAt": "2020-07-08T13:31:23Z", "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.services.camel.longleaf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.URI;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.builder.NotifyBuilder;\n+import org.jgroups.util.UUID;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.ContextHierarchy;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import edu.unc.lib.dl.services.MessageSender;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextHierarchy({\n+    @ContextConfiguration(\"/spring-test/jms-context.xml\"),\n+    @ContextConfiguration(\"/deregister-longleaf-router-context.xml\")\n+})\n+public class DeregisterLongleafRouteTest {\n+\n+    @Autowired\n+    private MessageSender messageSender;\n+\n+    @Autowired\n+    private DeregisterLongleafProcessor processor;\n+\n+    @Autowired\n+    private CamelContext cdrLongleaf;\n+\n+    @Rule\n+    public final TemporaryFolder tmpFolder = new TemporaryFolder();\n+\n+    private String longleafScript;\n+    private String outputPath;\n+    private List<String> output;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        tmpFolder.create();\n+        outputPath = tmpFolder.newFile().getPath();\n+        longleafScript = LongleafTestHelpers.getLongleafScript(outputPath);\n+        processor.setLongleafBaseCommand(longleafScript);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBinary() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2)\n+                .create();\n+\n+        String contentUri = generateContentUri();\n+        sendMessages(contentUri);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUri);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBatch() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(1 + 3)\n+                .create();\n+\n+        String[] contentUris = generateContentUris(3);\n+        sendMessages(contentUris);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUris);\n+    }\n+\n+    @Test\n+    public void deregisterMultipleBatches() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2 + 10)", "originalCommit": "a599bff4aaa195dbb714e1cd14152010d0e718a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczMjk0Ng==", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451732946", "bodyText": "I've added a comment to clarify", "author": "bbpennel", "createdAt": "2020-07-08T18:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NjAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "aec2df9568292b4cdf252297c8ef30141d9e03ba", "chunk": "diff --git a/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java b/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java\nindex 38b5f8210..8c6ac7039 100644\n--- a/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java\n+++ b/services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java\n\n@@ -74,8 +74,9 @@ public class DeregisterLongleafRouteTest {\n \n     @Test\n     public void deregisterSingleBinary() throws Exception {\n+        // Expecting 1 batch message and 1 individual file message, on different routes\n         NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n-                .whenCompleted(2)\n+                .whenCompleted(1 + 1)\n                 .create();\n \n         String contentUri = generateContentUri();\n"}}, {"oid": "aec2df9568292b4cdf252297c8ef30141d9e03ba", "url": "https://github.com/UNC-Libraries/box-c/commit/aec2df9568292b4cdf252297c8ef30141d9e03ba", "message": "Update DeregisterLongleafRouteTest.java", "committedDate": "2020-07-08T18:06:38Z", "type": "commit"}]}