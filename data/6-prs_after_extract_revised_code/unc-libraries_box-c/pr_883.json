{"pr_number": 883, "pr_title": "Allow staff only access when creating new collections or folders", "pr_createdAt": "2020-01-17T13:22:02Z", "pr_url": "https://github.com/UNC-Libraries/box-c/pull/883", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0MzQzMw==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367943433", "bodyText": "Can you switch \"staffOnly\" over to a boolean? You can do @RequestParam(value=\"staffOnly\", defaultValue = \"false\") boolean staffOnly and spring will translate it appropriately. The service should take a boolean instead of a string as well.\nIn which case you'll want the admin unit case to pass in false", "author": "bbpennel", "createdAt": "2020-01-17T13:49:34Z", "path": "services/src/main/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerController.java", "diffHunk": "@@ -55,36 +55,41 @@\n     @RequestMapping(value = \"edit/create/adminUnit/{id}\", method = RequestMethod.POST)\n     @ResponseBody\n     public ResponseEntity<Object> createAdminUnit(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label) {\n-        return createContainer(id, label, Cdr.AdminUnit);\n+        return createContainer(id, label, null, Cdr.AdminUnit);\n     }\n \n     @RequestMapping(value = \"edit/create/collection/{id}\", method = RequestMethod.POST)\n     @ResponseBody\n-    public ResponseEntity<Object> createCollection(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label) {\n-        return createContainer(id, label, Cdr.Collection);\n+    public ResponseEntity<Object> createCollection(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label,\n+                                                   @RequestParam(\"staffOnly\") String staffOnly) {", "originalCommit": "b4c2cfad2e71bebc4bb2e4c6e8ad4f9700e4cefd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e932742df1b0361d0529705e446085cb3159d5cf", "chunk": "diff --git a/services/src/main/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerController.java b/services/src/main/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerController.java\nindex 4be114d4d..814347c8f 100644\n--- a/services/src/main/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerController.java\n+++ b/services/src/main/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerController.java\n\n@@ -55,30 +55,30 @@ public class AddContainerController {\n     @RequestMapping(value = \"edit/create/adminUnit/{id}\", method = RequestMethod.POST)\n     @ResponseBody\n     public ResponseEntity<Object> createAdminUnit(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label) {\n-        return createContainer(id, label, null, Cdr.AdminUnit);\n+        return createContainer(id, label, false, Cdr.AdminUnit);\n     }\n \n     @RequestMapping(value = \"edit/create/collection/{id}\", method = RequestMethod.POST)\n     @ResponseBody\n     public ResponseEntity<Object> createCollection(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label,\n-                                                   @RequestParam(\"staffOnly\") String staffOnly) {\n+                                                   @RequestParam(value=\"staffOnly\", defaultValue = \"false\") boolean staffOnly) {\n         return createContainer(id, label, staffOnly, Cdr.Collection);\n     }\n \n     @RequestMapping(value = \"edit/create/folder/{id}\", method = RequestMethod.POST)\n     @ResponseBody\n     public ResponseEntity<Object> createFolder(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label,\n-                                                   @RequestParam(\"staffOnly\") String staffOnly) {\n+                                               @RequestParam(value=\"staffOnly\", defaultValue = \"false\") boolean staffOnly) {\n         return createContainer(id, label, staffOnly, Cdr.Folder);\n     }\n \n     @RequestMapping(value = \"edit/create/work/{id}\", method = RequestMethod.POST)\n     @ResponseBody\n     public ResponseEntity<Object> createWork(@PathVariable(\"id\") String id, @RequestParam(\"label\") String label) {\n-        return createContainer(id, label, null, Cdr.Work);\n+        return createContainer(id, label, false, Cdr.Work);\n     }\n \n-    private ResponseEntity<Object> createContainer(String id, String label, String staff_only,\n+    private ResponseEntity<Object> createContainer(String id, String label, boolean staff_only,\n                                                    Resource containerType) {\n         Map<String, Object> result = new HashMap<>();\n         result.put(\"action\", \"create\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0NTY3OQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367945679", "bodyText": "Should make it so that the patron access stuff only happens for object types other than AdminUnit", "author": "bbpennel", "createdAt": "2020-01-17T13:54:39Z", "path": "services/src/main/java/edu/unc/lib/dl/cdr/services/processing/AddContainerService.java", "diffHunk": "@@ -109,6 +119,13 @@ public void addContainer(AgentPrincipals agent, PID parentPid, String label, Res\n             ContentContainerObject parent = (ContentContainerObject) repoObjLoader.getRepositoryObject(parentPid);\n             parent.addMember(child);\n \n+            if (Boolean.parseBoolean(staffOnly)) {", "originalCommit": "b4c2cfad2e71bebc4bb2e4c6e8ad4f9700e4cefd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e932742df1b0361d0529705e446085cb3159d5cf", "chunk": "diff --git a/services/src/main/java/edu/unc/lib/dl/cdr/services/processing/AddContainerService.java b/services/src/main/java/edu/unc/lib/dl/cdr/services/processing/AddContainerService.java\nindex 0ac795649..f6fd43f83 100644\n--- a/services/src/main/java/edu/unc/lib/dl/cdr/services/processing/AddContainerService.java\n+++ b/services/src/main/java/edu/unc/lib/dl/cdr/services/processing/AddContainerService.java\n\n@@ -119,7 +119,7 @@ public class AddContainerService {\n             ContentContainerObject parent = (ContentContainerObject) repoObjLoader.getRepositoryObject(parentPid);\n             parent.addMember(child);\n \n-            if (Boolean.parseBoolean(staffOnly)) {\n+            if (staffOnly && !Cdr.AdminUnit.equals(containerType)) {\n                 PatronAccessDetails accessDetails = new PatronAccessDetails();\n                 accessDetails.setRoles(asList(new RoleAssignment(PUBLIC_PRINC, none),\n                         new RoleAssignment(AUTHENTICATED_PRINC, none)));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0NjM4MQ==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367946381", "bodyText": "isn't the parameter staffOnly rather than patronOnly? That probably needs to be changed in all these tests", "author": "bbpennel", "createdAt": "2020-01-17T13:56:12Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java", "diffHunk": "@@ -72,8 +75,10 @@ public void testAddCollectionToAdminUnit() throws UnsupportedOperationException,\n         treeIndexer.indexAll(baseAddress);\n \n         String label = \"collection_label\";\n+        String patronOnly = \"false\";\n         MvcResult result = mvc.perform(post(\"/edit/create/collection/\" + parentPid.getId())\n-                .param(\"label\", label))\n+                .param(\"label\", label)\n+                .param(\"patronOnly\", patronOnly))", "originalCommit": "b4c2cfad2e71bebc4bb2e4c6e8ad4f9700e4cefd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0NzU1Nw==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367947557", "bodyText": "Can you also verify that the access restriction isn't applied to the object in this case? It'd be best to make a reusable helper method to check that an object doesn't have patron restrictions, and add that to all the tests that aren't trying to add restrictions. Should just be one extra line", "author": "bbpennel", "createdAt": "2020-01-17T13:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0NjM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e296c9c016bceedc70218c51279e1e8eb3d1949b", "chunk": "diff --git a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\nindex f4a911c9b..c897b5978 100644\n--- a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n+++ b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n\n@@ -77,8 +78,7 @@ public class AddContainerIT extends AbstractAPIIT {\n         String label = \"collection_label\";\n         String patronOnly = \"false\";\n         MvcResult result = mvc.perform(post(\"/edit/create/collection/\" + parentPid.getId())\n-                .param(\"label\", label)\n-                .param(\"patronOnly\", patronOnly))\n+                .param(\"label\", label))\n             .andExpect(status().is2xxSuccessful())\n             .andReturn();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0NjU3NA==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367946574", "bodyText": "you can leave the parameter off for this case", "author": "bbpennel", "createdAt": "2020-01-17T13:56:38Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java", "diffHunk": "@@ -91,7 +96,8 @@ public void testAddCollectionToAdminUnit() throws UnsupportedOperationException,\n     public void testAddAdminUnit() throws Exception {\n         String label = \"admin_label\";\n         MvcResult result = mvc.perform(post(\"/edit/create/adminUnit/\" + CONTENT_ROOT_ID)\n-                .param(\"label\", label))\n+                .param(\"label\", label)\n+                .param(\"patronOnly\", (String) null))", "originalCommit": "b4c2cfad2e71bebc4bb2e4c6e8ad4f9700e4cefd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e932742df1b0361d0529705e446085cb3159d5cf", "chunk": "diff --git a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\nindex f4a911c9b..eb707bec1 100644\n--- a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n+++ b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n\n@@ -90,14 +91,14 @@ public class AddContainerIT extends AbstractAPIIT {\n         Map<String, Object> respMap = getMapFromResponse(result);\n         assertEquals(parentPid.getUUID(), respMap.get(\"pid\"));\n         assertEquals(\"create\", respMap.get(\"action\"));\n+        assertPatronDoesNotHaveNonePermission();\n     }\n \n     @Test\n     public void testAddAdminUnit() throws Exception {\n         String label = \"admin_label\";\n         MvcResult result = mvc.perform(post(\"/edit/create/adminUnit/\" + CONTENT_ROOT_ID)\n-                .param(\"label\", label)\n-                .param(\"patronOnly\", (String) null))\n+                .param(\"label\", label))\n             .andExpect(status().is2xxSuccessful())\n             .andReturn();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0ODA3Nw==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367948077", "bodyText": "The parameter doesn't need to be required, so probably better to leave it off or provide the default value. It would be reasonable to have a separate test to verify the default behavior though.", "author": "bbpennel", "createdAt": "2020-01-17T13:59:42Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java", "diffHunk": "@@ -141,7 +153,8 @@ public void testAddWork() throws Exception {\n \n         String label = \"work_label\";\n         MvcResult result = mvc.perform(post(\"/edit/create/work/\" + collObj.getPid().getId())\n-                .param(\"label\", label))\n+                .param(\"label\", label)\n+                .param(\"patronOnly\", (String) null))", "originalCommit": "b4c2cfad2e71bebc4bb2e4c6e8ad4f9700e4cefd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e932742df1b0361d0529705e446085cb3159d5cf", "chunk": "diff --git a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\nindex f4a911c9b..eb707bec1 100644\n--- a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n+++ b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n\n@@ -153,8 +155,7 @@ public class AddContainerIT extends AbstractAPIIT {\n \n         String label = \"work_label\";\n         MvcResult result = mvc.perform(post(\"/edit/create/work/\" + collObj.getPid().getId())\n-                .param(\"label\", label)\n-                .param(\"patronOnly\", (String) null))\n+                .param(\"label\", label))\n             .andExpect(status().is2xxSuccessful())\n             .andReturn();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk0OTQ2Nw==", "url": "https://github.com/UNC-Libraries/box-c/pull/883#discussion_r367949467", "bodyText": "Would be good to update the test method name to something like testAddFolderStaffOnly", "author": "bbpennel", "createdAt": "2020-01-17T14:02:45Z", "path": "services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java", "diffHunk": "@@ -128,6 +136,10 @@ public void testAddFolder() throws Exception {\n         Map<String, Object> respMap = getMapFromResponse(result);\n         assertEquals(collObj.getPid().getId(), respMap.get(\"pid\"));\n         assertEquals(\"create\", respMap.get(\"action\"));\n+\n+        PatronAccessDetails accessDetails = new PatronAccessDetails();", "originalCommit": "b4c2cfad2e71bebc4bb2e4c6e8ad4f9700e4cefd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd2f4d212984a0415aac96f98a5c22c7db27b292", "chunk": "diff --git a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\nindex f4a911c9b..e32a65cff 100644\n--- a/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n+++ b/services/src/test/java/edu/unc/lib/dl/cdr/services/rest/modify/AddContainerIT.java\n\n@@ -137,9 +138,12 @@ public class AddContainerIT extends AbstractAPIIT {\n         assertEquals(collObj.getPid().getId(), respMap.get(\"pid\"));\n         assertEquals(\"create\", respMap.get(\"action\"));\n \n-        PatronAccessDetails accessDetails = new PatronAccessDetails();\n-        List<RoleAssignment> roles = accessDetails.getRoles();\n-        assertEquals(roles.get(0).getRole(), none);\n+        List<ContentObject> members = collObj.getMembers();\n+        ContentObject member = members.stream()\n+                .filter(m -> m.getResource().hasProperty(DcElements.title, label))\n+                .findFirst().get();\n+        assertHasAssignment(PUBLIC_PRINC, none, member);\n+        assertHasAssignment(AUTHENTICATED_PRINC, none, member);\n     }\n \n     @Test\n"}}, {"oid": "719cb96d494ecf1fa618a0bf41ddee5382f8055c", "url": "https://github.com/UNC-Libraries/box-c/commit/719cb96d494ecf1fa618a0bf41ddee5382f8055c", "message": "Allow staff only access to contents when creating new collections or folders", "committedDate": "2020-01-17T14:56:37Z", "type": "commit"}, {"oid": "1664561a5f96353dd358b10aa7edb0c7d8577524", "url": "https://github.com/UNC-Libraries/box-c/commit/1664561a5f96353dd358b10aa7edb0c7d8577524", "message": "* Make parameter a boolean\n* Add test assertions", "committedDate": "2020-01-17T17:54:08Z", "type": "forcePushed"}, {"oid": "e932742df1b0361d0529705e446085cb3159d5cf", "url": "https://github.com/UNC-Libraries/box-c/commit/e932742df1b0361d0529705e446085cb3159d5cf", "message": "* Make parameter a boolean\n* Add test assertions", "committedDate": "2020-01-17T17:56:51Z", "type": "commit"}, {"oid": "e932742df1b0361d0529705e446085cb3159d5cf", "url": "https://github.com/UNC-Libraries/box-c/commit/e932742df1b0361d0529705e446085cb3159d5cf", "message": "* Make parameter a boolean\n* Add test assertions", "committedDate": "2020-01-17T17:56:51Z", "type": "forcePushed"}, {"oid": "e296c9c016bceedc70218c51279e1e8eb3d1949b", "url": "https://github.com/UNC-Libraries/box-c/commit/e296c9c016bceedc70218c51279e1e8eb3d1949b", "message": "Fix line length issues", "committedDate": "2020-01-17T19:52:33Z", "type": "forcePushed"}, {"oid": "b97d05f047c581c9478e526b34ba67fb9347f3df", "url": "https://github.com/UNC-Libraries/box-c/commit/b97d05f047c581c9478e526b34ba67fb9347f3df", "message": "Fix line length issues", "committedDate": "2020-01-17T20:21:32Z", "type": "commit"}, {"oid": "b97d05f047c581c9478e526b34ba67fb9347f3df", "url": "https://github.com/UNC-Libraries/box-c/commit/b97d05f047c581c9478e526b34ba67fb9347f3df", "message": "Fix line length issues", "committedDate": "2020-01-17T20:21:32Z", "type": "forcePushed"}, {"oid": "bd2f4d212984a0415aac96f98a5c22c7db27b292", "url": "https://github.com/UNC-Libraries/box-c/commit/bd2f4d212984a0415aac96f98a5c22c7db27b292", "message": "Update tests", "committedDate": "2020-01-22T14:58:00Z", "type": "commit"}, {"oid": "bd2f4d212984a0415aac96f98a5c22c7db27b292", "url": "https://github.com/UNC-Libraries/box-c/commit/bd2f4d212984a0415aac96f98a5c22c7db27b292", "message": "Update tests", "committedDate": "2020-01-22T14:58:00Z", "type": "forcePushed"}, {"oid": "71c73083d00f249b9c0e0a865fb4cd7216a157b4", "url": "https://github.com/UNC-Libraries/box-c/commit/71c73083d00f249b9c0e0a865fb4cd7216a157b4", "message": "Dry up finding member in test", "committedDate": "2020-01-22T20:43:23Z", "type": "commit"}]}