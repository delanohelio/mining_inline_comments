{"pr_number": 477, "pr_title": "Default to saving checkbox values as a group of obs ", "pr_createdAt": "2020-04-07T08:33:28Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/477", "timeline": [{"oid": "ed1f080ab099bc25e31ae207f7c63e1ddc8dba36", "url": "https://github.com/opensrp/opensrp-client-core/commit/ed1f080ab099bc25e31ae207f7c63e1ddc8dba36", "message": "Default to saving checkbox values as a group of obs if checkbox does not have concepts", "committedDate": "2020-04-07T08:31:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNDEwNw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/477#discussion_r408014107", "bodyText": "This should be checked at options level and not at the checkbox level. Usually the options are mapped to concepts", "author": "githengi", "createdAt": "2020-04-14T09:57:46Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -408,39 +404,40 @@ private static JSONObject getCheckBoxJsonObjects(Event event, JSONObject parentO\n \n     public static void addObservation(Event e, JSONObject jsonObject) {\n         String value = getString(jsonObject, VALUE);\n+        if (StringUtils.isBlank(value)) { return; }\n+\n         String type = getString(jsonObject, AllConstants.TYPE);\n-        String entity = CONCEPT;\n-        boolean combineCheckboxOptionValues = jsonObject.optBoolean(COMBINE_CHECKBOX_OPTION_VALUES);\n-        if (StringUtils.isNotBlank(value)) {\n-            if (AllConstants.CHECK_BOX.equals(type)) {\n-                try {\n-                    List<Object> vall = new ArrayList<>();\n-                    if (jsonObject.has(AllConstants.OPTIONS)) {\n-                        JSONArray conceptsOptions = jsonObject.getJSONArray(AllConstants.OPTIONS);\n-                        for (int i = 0; i < conceptsOptions.length(); i++) {\n-                            JSONObject option = conceptsOptions.getJSONObject(i);\n-                            boolean optionValue = option.optBoolean(VALUE);\n-                            if (optionValue) {\n-                                option.put(AllConstants.TYPE, type);\n-                                option.put(AllConstants.PARENT_ENTITY_ID, jsonObject.getString(OPENMRS_ENTITY_ID));\n-                                option.put(KEY, jsonObject.getString(KEY));\n-                                if (combineCheckboxOptionValues) {\n-                                    vall.add(option.optString(AllConstants.TEXT));\n-                                } else { // For options with concepts create an observation for each\n-                                    createObservation(e, option, String.valueOf(option.getBoolean(VALUE)), entity);\n-                                }\n+        String entity =  getString(jsonObject, OPENMRS_ENTITY);;", "originalCommit": "ed1f080ab099bc25e31ae207f7c63e1ddc8dba36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI0NTg1NA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/477#discussion_r411245854", "bodyText": "Done.", "author": "vincent-karuri", "createdAt": "2020-04-20T09:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNDEwNw=="}], "type": "inlineReview", "revised_code": {"commit": "7537470e8e52399eafcecf0cc60aa8a36923ad05", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java b/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java\nindex 3ac1e114..aa8c1ad2 100644\n--- a/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java\n+++ b/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java\n\n@@ -407,7 +407,6 @@ public class JsonFormUtils {\n         if (StringUtils.isBlank(value)) { return; }\n \n         String type = getString(jsonObject, AllConstants.TYPE);\n-        String entity =  getString(jsonObject, OPENMRS_ENTITY);;\n         if (AllConstants.CHECK_BOX.equals(type)) {\n             try {\n                 List<Object> optionValues = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0OA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/477#discussion_r408015548", "bodyText": "I think that this should be mutually exclusive. Either save the list of checked options in one obs, or an obs for each selection, however not both", "author": "githengi", "createdAt": "2020-04-14T10:00:00Z", "path": "opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java", "diffHunk": "@@ -408,39 +404,40 @@ private static JSONObject getCheckBoxJsonObjects(Event event, JSONObject parentO\n \n     public static void addObservation(Event e, JSONObject jsonObject) {\n         String value = getString(jsonObject, VALUE);\n+        if (StringUtils.isBlank(value)) { return; }\n+\n         String type = getString(jsonObject, AllConstants.TYPE);\n-        String entity = CONCEPT;\n-        boolean combineCheckboxOptionValues = jsonObject.optBoolean(COMBINE_CHECKBOX_OPTION_VALUES);\n-        if (StringUtils.isNotBlank(value)) {\n-            if (AllConstants.CHECK_BOX.equals(type)) {\n-                try {\n-                    List<Object> vall = new ArrayList<>();\n-                    if (jsonObject.has(AllConstants.OPTIONS)) {\n-                        JSONArray conceptsOptions = jsonObject.getJSONArray(AllConstants.OPTIONS);\n-                        for (int i = 0; i < conceptsOptions.length(); i++) {\n-                            JSONObject option = conceptsOptions.getJSONObject(i);\n-                            boolean optionValue = option.optBoolean(VALUE);\n-                            if (optionValue) {\n-                                option.put(AllConstants.TYPE, type);\n-                                option.put(AllConstants.PARENT_ENTITY_ID, jsonObject.getString(OPENMRS_ENTITY_ID));\n-                                option.put(KEY, jsonObject.getString(KEY));\n-                                if (combineCheckboxOptionValues) {\n-                                    vall.add(option.optString(AllConstants.TEXT));\n-                                } else { // For options with concepts create an observation for each\n-                                    createObservation(e, option, String.valueOf(option.getBoolean(VALUE)), entity);\n-                                }\n+        String entity =  getString(jsonObject, OPENMRS_ENTITY);;\n+        if (AllConstants.CHECK_BOX.equals(type)) {\n+            try {\n+                List<Object> optionValues = new ArrayList<>();\n+                if (jsonObject.has(AllConstants.OPTIONS)) {\n+                    JSONArray options = jsonObject.getJSONArray(AllConstants.OPTIONS);\n+                    for (int i = 0; i < options.length(); i++) {\n+                        JSONObject option = options.getJSONObject(i);\n+                        boolean optionValue = option.optBoolean(VALUE);\n+                        if (optionValue) {\n+                            option.put(AllConstants.TYPE, type);\n+                            option.put(AllConstants.PARENT_ENTITY_ID, jsonObject.getString(OPENMRS_ENTITY_ID));\n+                            option.put(KEY, jsonObject.getString(KEY));\n+                            if (CONCEPT.equals(entity)) {\n+                                // For options with concepts create an observation for each\n+                                createObservation(e, option, String.valueOf(option.getBoolean(VALUE)), entity);\n+                            } else {\n+                                optionValues.add(option.optString(AllConstants.TEXT));\n                             }\n                         }\n-                        if (combineCheckboxOptionValues) { // For options without concepts combine the values into one observation\n-                            createObservation(e, jsonObject, vall);\n-                        }\n                     }\n-                } catch (JSONException e1) {\n-                    Timber.e(e1);\n+                    if (!optionValues.isEmpty()) {", "originalCommit": "ed1f080ab099bc25e31ae207f7c63e1ddc8dba36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI0Mjg5Mg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/477#discussion_r411242892", "bodyText": "That is what is happening currently (it's mutually exclusive).\nHowever, for assured backward compatibility, it may actually make sense to have both.", "author": "vincent-karuri", "createdAt": "2020-04-20T09:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0OA=="}], "type": "inlineReview", "revised_code": {"commit": "7537470e8e52399eafcecf0cc60aa8a36923ad05", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java b/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java\nindex 3ac1e114..aa8c1ad2 100644\n--- a/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java\n+++ b/opensrp-app/src/main/java/org/smartregister/util/JsonFormUtils.java\n\n@@ -407,7 +407,6 @@ public class JsonFormUtils {\n         if (StringUtils.isBlank(value)) { return; }\n \n         String type = getString(jsonObject, AllConstants.TYPE);\n-        String entity =  getString(jsonObject, OPENMRS_ENTITY);;\n         if (AllConstants.CHECK_BOX.equals(type)) {\n             try {\n                 List<Object> optionValues = new ArrayList<>();\n"}}, {"oid": "7537470e8e52399eafcecf0cc60aa8a36923ad05", "url": "https://github.com/opensrp/opensrp-client-core/commit/7537470e8e52399eafcecf0cc60aa8a36923ad05", "message": "Extract openmrs entity from options", "committedDate": "2020-04-20T09:52:05Z", "type": "commit"}, {"oid": "09fa0e86bf4a8688687141994ade48e9cd19e016", "url": "https://github.com/opensrp/opensrp-client-core/commit/09fa0e86bf4a8688687141994ade48e9cd19e016", "message": "Pull openmrs entity from both the parent widget and each checkbox option", "committedDate": "2020-05-05T07:22:31Z", "type": "commit"}, {"oid": "52da078547ec83693fba170a256802823f6e0aad", "url": "https://github.com/opensrp/opensrp-client-core/commit/52da078547ec83693fba170a256802823f6e0aad", "message": "Merge remote-tracking branch 'origin/master' into 476-revert-saving-of-checkbox-values-as-a-group-by-default", "committedDate": "2020-05-05T07:23:14Z", "type": "commit"}, {"oid": "ef09e16d5b325121d3339859a3f214a905dce172", "url": "https://github.com/opensrp/opensrp-client-core/commit/ef09e16d5b325121d3339859a3f214a905dce172", "message": "Ignore failing test - it calls an external service that is currently down", "committedDate": "2020-05-05T09:54:46Z", "type": "commit"}]}