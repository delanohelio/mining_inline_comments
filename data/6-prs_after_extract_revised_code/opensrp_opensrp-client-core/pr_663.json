{"pr_number": 663, "pr_title": "Add overload method to fetch LocationServiceHelper", "pr_createdAt": "2020-10-07T17:38:06Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/663", "timeline": [{"oid": "45f61f43fe35dac23d28a1add2990525f63e498b", "url": "https://github.com/opensrp/opensrp-client-core/commit/45f61f43fe35dac23d28a1add2990525f63e498b", "message": "Bug fixes :\ud83d\udc1b", "committedDate": "2020-10-05T14:16:08Z", "type": "commit"}, {"oid": "0467740da308531ccedbb9996f1950932ba24283", "url": "https://github.com/opensrp/opensrp-client-core/commit/0467740da308531ccedbb9996f1950932ba24283", "message": "Add account type check onAccountUpdated callback", "committedDate": "2020-10-05T15:30:39Z", "type": "commit"}, {"oid": "44ebe6451e0a1288d433b0436e806f1c5a53f104", "url": "https://github.com/opensrp/opensrp-client-core/commit/44ebe6451e0a1288d433b0436e806f1c5a53f104", "message": "Add try catch for SyncUtils.isAppVersionAllowed", "committedDate": "2020-10-05T15:33:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4MzY2Nw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r501483667", "bodyText": "Could we use StringUtils.isNotBlank(parentId) instead?", "author": "vincent-karuri", "createdAt": "2020-10-08T06:46:34Z", "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "diffHunk": "@@ -405,6 +411,9 @@ public void fetchAllLocations() {\n             JSONObject request = new JSONObject();\n             request.put(IS_JURISDICTION, true);\n             request.put(AllConstants.SERVER_VERSION, 0);\n+            if (parentId != null) {", "originalCommit": "b12ee3634e43a849c8a1bc972f30d39e852441d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5NzQwOA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r501497408", "bodyText": "fixed.", "author": "owais-vd", "createdAt": "2020-10-08T07:16:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4MzY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9e78110999b974019fee3dd3e88085542f02fd7b", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java b/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java\nindex 15998bba..bdc05ab3 100644\n--- a/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java\n+++ b/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java\n\n@@ -411,9 +405,6 @@ public class LocationServiceHelper extends BaseHelper {\n             JSONObject request = new JSONObject();\n             request.put(IS_JURISDICTION, true);\n             request.put(AllConstants.SERVER_VERSION, 0);\n-            if (parentId != null) {\n-                request.put(PARENT_ID, parentId);\n-            }\n \n             Response<String> resp = httpAgent.post(\n                     MessageFormat.format(\"{0}{1}\", baseUrl, LOCATION_STRUCTURE_URL),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4Mzg5NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r501483895", "bodyText": "Please fix the typo here fetchAllLocation to fetchAllLocations.", "author": "vincent-karuri", "createdAt": "2020-10-08T06:47:06Z", "path": "opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java", "diffHunk": "@@ -394,6 +395,11 @@ public String getFormattedBaseUrl() {\n     }\n \n     public void fetchAllLocations() {\n+        fetchAllLocation(null);\n+    }\n+\n+    public void fetchAllLocation(@Nullable String parentId) {", "originalCommit": "b12ee3634e43a849c8a1bc972f30d39e852441d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9e78110999b974019fee3dd3e88085542f02fd7b", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java b/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java\nindex 15998bba..bdc05ab3 100644\n--- a/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java\n+++ b/opensrp-app/src/main/java/org/smartregister/sync/helper/LocationServiceHelper.java\n\n@@ -395,11 +394,6 @@ public class LocationServiceHelper extends BaseHelper {\n     }\n \n     public void fetchAllLocations() {\n-        fetchAllLocation(null);\n-    }\n-\n-    public void fetchAllLocation(@Nullable String parentId) {\n-\n         try {\n             HTTPAgent httpAgent = getHttpAgent();\n             if (httpAgent == null) {\n"}}, {"oid": "9e78110999b974019fee3dd3e88085542f02fd7b", "url": "https://github.com/opensrp/opensrp-client-core/commit/9e78110999b974019fee3dd3e88085542f02fd7b", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-core", "committedDate": "2020-10-13T19:31:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODA4Mw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r504528083", "bodyText": "You can use stringArgumentCaptor.getValue() here and in the other places.", "author": "vincent-karuri", "createdAt": "2020-10-14T09:18:18Z", "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "diffHunk": "@@ -274,4 +290,70 @@ public void testFetchAllLocations() {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n+\n+    @Test\n+    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n+        String url = \"https://base.url/\";\n+\n+        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n+        Mockito.doReturn(context).when(coreLibrary).context();\n+        Mockito.doReturn(configuration).when(context).configuration();\n+        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n+\n+        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n+        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n+        assertNotNull(baseUrl);\n+        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNull(tree);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.success, \"{}\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNotNull(tree);\n+        assertEquals(0, tree.getLocationsHierarchy().size());\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsTreeForValidParentLocationId() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+        String hierarchy = \"{\\\"locationsHierarchy\\\":{\\\"map\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Division 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Division 1\\\",\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"children\\\":{\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 1\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 2\\\",\\\"node\\\":{\\\"locationId\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 2\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 3\\\",\\\"node\\\":{\\\"locationId\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 3\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"}}}},\\\"parentChildren\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":[\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"]}}}\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.success, hierarchy))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));", "originalCommit": "53469448b1469aa4fe716d01ebfa4ad81062f9be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1d79b54979394d0479d83a7617157bef1bc324c8", "chunk": "diff --git a/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java b/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java\nindex 406bb9ee..73d5b93b 100644\n--- a/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java\n+++ b/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java\n\n@@ -290,70 +274,4 @@ public class LocationServiceHelperTest extends BaseRobolectricUnitTest {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n-\n-    @Test\n-    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n-        String url = \"https://base.url/\";\n-\n-        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n-        Mockito.doReturn(context).when(coreLibrary).context();\n-        Mockito.doReturn(configuration).when(context).configuration();\n-        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n-\n-        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n-        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n-        assertNotNull(baseUrl);\n-        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n-    }\n-\n-    @Test\n-    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n-        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n-\n-        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n-                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n-\n-        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n-\n-        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n-        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n-        assertNull(tree);\n-    }\n-\n-    @Test\n-    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {\n-        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n-\n-        Mockito.doReturn(new Response<>(ResponseStatus.success, \"{}\"))\n-                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n-\n-        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n-\n-        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n-        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n-        assertNotNull(tree);\n-        assertEquals(0, tree.getLocationsHierarchy().size());\n-    }\n-\n-    @Test\n-    public void testGetLocationHierarchyReturnsTreeForValidParentLocationId() {\n-        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n-        String hierarchy = \"{\\\"locationsHierarchy\\\":{\\\"map\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Division 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Division 1\\\",\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"children\\\":{\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 1\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 2\\\",\\\"node\\\":{\\\"locationId\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 2\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 3\\\",\\\"node\\\":{\\\"locationId\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 3\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"}}}},\\\"parentChildren\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":[\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"]}}}\";\n-\n-        Mockito.doReturn(new Response<>(ResponseStatus.success, hierarchy))\n-                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n-\n-        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n-\n-        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n-        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n-        assertNotNull(tree);\n-        assertTrue(tree.hasLocation(parentLocation));\n-        assertEquals(3, tree.getLocationsHierarchy().get(parentLocation).getChildren().size());\n-    }\n-\n-    @After\n-    public void tearDown() {\n-        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", null);\n-    }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODk1OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r504528959", "bodyText": "Doesn't seem like the method returns null for invalid parent location id? https://github.com/OpenSRP/opensrp-client-core/pull/663/files#diff-7d2c1e8994b4bf118233996655641ad90f6f71d2f8145fcea0e1bf67136a37e7R334", "author": "vincent-karuri", "createdAt": "2020-10-14T09:19:37Z", "path": "opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java", "diffHunk": "@@ -274,4 +290,70 @@ public void testFetchAllLocations() {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n+\n+    @Test\n+    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n+        String url = \"https://base.url/\";\n+\n+        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n+        Mockito.doReturn(context).when(coreLibrary).context();\n+        Mockito.doReturn(configuration).when(context).configuration();\n+        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n+\n+        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n+        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n+        assertNotNull(baseUrl);\n+        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n+        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n+\n+        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n+                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n+\n+        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n+\n+        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n+        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n+        assertNull(tree);\n+    }\n+\n+    @Test\n+    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {", "originalCommit": "53469448b1469aa4fe716d01ebfa4ad81062f9be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMTk2Ng==", "url": "https://github.com/opensrp/opensrp-client-core/pull/663#discussion_r504531966", "bodyText": "Updated test method name to reflect the actual test", "author": "qiarie", "createdAt": "2020-10-14T09:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODk1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d79b54979394d0479d83a7617157bef1bc324c8", "chunk": "diff --git a/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java b/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java\nindex 406bb9ee..73d5b93b 100644\n--- a/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java\n+++ b/opensrp-app/src/test/java/org/smartregister/sync/helper/LocationServiceHelperTest.java\n\n@@ -290,70 +274,4 @@ public class LocationServiceHelperTest extends BaseRobolectricUnitTest {\n         String requestString = stringArgumentCaptor.getAllValues().get(1);\n         assertEquals(\"{\\\"is_jurisdiction\\\":true,\\\"serverVersion\\\":0}\", requestString);\n     }\n-\n-    @Test\n-    public void testGetFormattedBaseUrlStripsEndingSlashDelimiter() {\n-        String url = \"https://base.url/\";\n-\n-        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", coreLibrary);\n-        Mockito.doReturn(context).when(coreLibrary).context();\n-        Mockito.doReturn(configuration).when(context).configuration();\n-        Mockito.doReturn(url).when(configuration).dristhiBaseURL();\n-\n-        LocationServiceHelper spyLocationServiceHelper = Mockito.spy(locationServiceHelper);\n-        String baseUrl = spyLocationServiceHelper.getFormattedBaseUrl();\n-        assertNotNull(baseUrl);\n-        assertEquals(url.substring(0, url.length() - 1), baseUrl);\n-    }\n-\n-    @Test\n-    public void testGetLocationHierarchyReturnsNullWhenRequestFails() {\n-        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n-\n-        Mockito.doReturn(new Response<>(ResponseStatus.failure, \"\"))\n-                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n-\n-        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n-\n-        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n-        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n-        assertNull(tree);\n-    }\n-\n-    @Test\n-    public void testGetLocationHierarchyReturnsNullForInvalidParentLocationId() {\n-        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n-\n-        Mockito.doReturn(new Response<>(ResponseStatus.success, \"{}\"))\n-                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n-\n-        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n-\n-        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n-        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n-        assertNotNull(tree);\n-        assertEquals(0, tree.getLocationsHierarchy().size());\n-    }\n-\n-    @Test\n-    public void testGetLocationHierarchyReturnsTreeForValidParentLocationId() {\n-        String parentLocation = \"1c7ba751-35e8-4b46-9e53-3cb8fd193697\";\n-        String hierarchy = \"{\\\"locationsHierarchy\\\":{\\\"map\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Division 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Division 1\\\",\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"children\\\":{\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 1\\\",\\\"node\\\":{\\\"locationId\\\":\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 1\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 2\\\",\\\"node\\\":{\\\"locationId\\\":\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 2\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"},\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":{\\\"id\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"label\\\":\\\"Indonesia Location 3\\\",\\\"node\\\":{\\\"locationId\\\":\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"name\\\":\\\"Indonesia Location 3\\\",\\\"parentLocation\\\":{\\\"locationId\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"voided\\\":false},\\\"attributes\\\":{\\\"geographicLevel\\\":0},\\\"voided\\\":false},\\\"parent\\\":\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"}}}},\\\"parentChildren\\\":{\\\"1c7ba751-35e8-4b46-9e53-3cb8fd193697\\\":[\\\"2c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"3c7ba751-35e8-4b46-9e53-3cb8fd193697\\\",\\\"4c7ba751-35e8-4b46-9e53-3cb8fd193697\\\"]}}}\";\n-\n-        Mockito.doReturn(new Response<>(ResponseStatus.success, hierarchy))\n-                .when(httpAgent).fetch(stringArgumentCaptor.capture());\n-\n-        LocationTree tree = locationServiceHelper.getLocationHierarchy(parentLocation);\n-\n-        String expectedUrl = MessageFormat.format(\"{0}{1}{2}\", locationServiceHelper.getFormattedBaseUrl(), LocationServiceHelper.LOCATION_HIERARCHY_URL, parentLocation);\n-        assertEquals(expectedUrl, stringArgumentCaptor.getAllValues().get(0));\n-        assertNotNull(tree);\n-        assertTrue(tree.hasLocation(parentLocation));\n-        assertEquals(3, tree.getLocationsHierarchy().get(parentLocation).getChildren().size());\n-    }\n-\n-    @After\n-    public void tearDown() {\n-        ReflectionHelpers.setStaticField(CoreLibrary.class, \"instance\", null);\n-    }\n }\n\\ No newline at end of file\n"}}, {"oid": "1d79b54979394d0479d83a7617157bef1bc324c8", "url": "https://github.com/opensrp/opensrp-client-core/commit/1d79b54979394d0479d83a7617157bef1bc324c8", "message": ":hammer: add overload method to fetch LocationServiceHelper", "committedDate": "2020-10-14T09:25:28Z", "type": "commit"}, {"oid": "8cecb1f207c894a4ae64cdfacbd08b513fadbaf5", "url": "https://github.com/opensrp/opensrp-client-core/commit/8cecb1f207c894a4ae64cdfacbd08b513fadbaf5", "message": "feedback implemented", "committedDate": "2020-10-14T09:25:28Z", "type": "commit"}, {"oid": "c2f4e3ec8802658ff4c5b1cd21e313e9a244c85f", "url": "https://github.com/opensrp/opensrp-client-core/commit/c2f4e3ec8802658ff4c5b1cd21e313e9a244c85f", "message": ":hammer: WIP", "committedDate": "2020-10-14T09:25:28Z", "type": "commit"}, {"oid": "62f7f5dabdaaaf1cc546c7bbbe91fffb78142bbe", "url": "https://github.com/opensrp/opensrp-client-core/commit/62f7f5dabdaaaf1cc546c7bbbe91fffb78142bbe", "message": "Add method to sync location hierarchy by specifying parent id", "committedDate": "2020-10-14T09:25:28Z", "type": "commit"}, {"oid": "adf4bc802ec7c22d78921eac0a1ed7821c0c5929", "url": "https://github.com/opensrp/opensrp-client-core/commit/adf4bc802ec7c22d78921eac0a1ed7821c0c5929", "message": "Add unit tests for getLocationHierarchy", "committedDate": "2020-10-14T09:25:29Z", "type": "commit"}, {"oid": "bb95a4f57c0a8423f841cdb3268f61a0768322b4", "url": "https://github.com/opensrp/opensrp-client-core/commit/bb95a4f57c0a8423f841cdb3268f61a0768322b4", "message": "Update unit tests", "committedDate": "2020-10-14T09:25:29Z", "type": "commit"}, {"oid": "bb95a4f57c0a8423f841cdb3268f61a0768322b4", "url": "https://github.com/opensrp/opensrp-client-core/commit/bb95a4f57c0a8423f841cdb3268f61a0768322b4", "message": "Update unit tests", "committedDate": "2020-10-14T09:25:29Z", "type": "forcePushed"}, {"oid": "b0af7d9468a02c3d2b84a6a8842c5c2805864d67", "url": "https://github.com/opensrp/opensrp-client-core/commit/b0af7d9468a02c3d2b84a6a8842c5c2805864d67", "message": "Bump up version", "committedDate": "2020-10-14T09:56:59Z", "type": "commit"}]}