{"pr_number": 533, "pr_title": "Handle crashes from form invalid forms, sub-forms, rules & properties files", "pr_createdAt": "2020-05-20T13:12:48Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/533", "timeline": [{"oid": "fa37e5491231d81e6c71654a6c47164e59ae276d", "url": "https://github.com/opensrp/opensrp-client-core/commit/fa37e5491231d81e6c71654a6c47164e59ae276d", "message": "Add form rollback dialog\n\n- Add org.smartregister.util.ViewUtil#showAvailableRollbackFormsDialog method to show dialog rollback to user\n- Prevent rollback-reversal during sync by using latest form instead of active form since the active form might be unstable\n- Fix exception when checking if form is new when openning JSON Form", "committedDate": "2020-05-22T09:21:48Z", "type": "forcePushed"}, {"oid": "a20f52484b284945e7be1e778085faed5189314b", "url": "https://github.com/opensrp/opensrp-client-core/commit/a20f52484b284945e7be1e778085faed5189314b", "message": "Update native-form version to 1.9.2-SNAPSHOT", "committedDate": "2020-05-27T13:36:57Z", "type": "forcePushed"}, {"oid": "d6d10e72aa3b531dacdef13f8495b0ce57ff6c36", "url": "https://github.com/opensrp/opensrp-client-core/commit/d6d10e72aa3b531dacdef13f8495b0ce57ff6c36", "message": "Update native-form version to 1.9.2-SNAPSHOT", "committedDate": "2020-05-27T14:10:20Z", "type": "forcePushed"}, {"oid": "807b86aad683bccdf75f8dee9ead8cf837654bb3", "url": "https://github.com/opensrp/opensrp-client-core/commit/807b86aad683bccdf75f8dee9ead8cf837654bb3", "message": "Update native-form version to 1.9.2-SNAPSHOT", "committedDate": "2020-05-27T15:24:27Z", "type": "forcePushed"}, {"oid": "cdb31f114e6f1705a55bada1af82f8d1413a0754", "url": "https://github.com/opensrp/opensrp-client-core/commit/cdb31f114e6f1705a55bada1af82f8d1413a0754", "message": "Update native-form version to 1.9.2-SNAPSHOT", "committedDate": "2020-05-28T07:35:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwNjE2Mg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432306162", "bodyText": "Does this account for MLS v2.0 where even if the locale changes we still the same form?", "author": "dubdabasoduba", "createdAt": "2020-05-29T07:33:44Z", "path": "opensrp-app/src/main/java/org/smartregister/util/FormUtils.java", "diffHunk": "@@ -1130,11 +1135,64 @@ private void createNewClientDocument(org.smartregister.cloudant.models.Client cl\n         mCloudantDataHandler.createClientDocument(client);\n     }\n \n-    public JSONObject getFormJsonFromRepositoryOrAssets(String formIdentity) {\n-        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n-        String locale = mContext.getResources().getConfiguration().locale.getLanguage();\n+    @Nullable\n+    public JSONObject getFormJsonFromRepositoryOrAssets(@NonNull String formIdentity) {\n+        return getFormJsonFromRepositoryOrAssetsWithOptionalCallback(formIdentity, null);\n+    }\n+\n+    public void getFormJsonFromRepositoryOrAssets(@NonNull String formIdentity, @Nullable OnFormFetchedCallback<JSONObject> onFormFetchedCallback) {\n+        getFormJsonFromRepositoryOrAssetsWithOptionalCallback(formIdentity, onFormFetchedCallback);\n+    }\n+\n+    private JSONObject getFormJsonFromRepositoryOrAssetsWithOptionalCallback(String formIdentity, @Nullable OnFormFetchedCallback<JSONObject> onFormFetchedCallback) {\n+        ClientForm clientForm = getClientFormFromRepository(formIdentity);\n+\n+        try {\n+            if (clientForm != null) {\n+                Timber.d(\"============%s form loaded from db============\", formIdentity);\n+\n+                JSONObject formJson = new JSONObject(clientForm.getJson());\n+                injectFormStatus(formJson, clientForm);\n+\n+                if (onFormFetchedCallback != null) {\n+                    onFormFetchedCallback.onFormFetched(formJson);\n+                    return null;\n+                }  else {\n+                    return formJson;\n+                }\n+            }\n+        } catch (JSONException e) {\n+            Timber.e(e);\n+\n+            if (onFormFetchedCallback != null) {\n+                handleJsonFormOrRulesError(false, formIdentity, form -> {\n+                    try {\n+                        JSONObject jsonObject = form == null ? null : new JSONObject(form);\n+                        onFormFetchedCallback.onFormFetched(jsonObject);\n+                    } catch (JSONException ex) {\n+                        Timber.e(ex);\n+                    }\n+                });\n+            } else {\n+                return null;\n+            }\n+        }\n+\n+        Timber.d(\"============%s form loaded from Assets=============\", formIdentity);\n+        JSONObject jsonObject = getFormJson(formIdentity);\n \n+        if (onFormFetchedCallback != null) {\n+            onFormFetchedCallback.onFormFetched(jsonObject);\n+            return null;\n+        }  else {\n+            return jsonObject;\n+        }\n+    }\n+\n+    private ClientForm getClientFormFromRepository(String formIdentity) {", "originalCommit": "fd2282f3c258a12a93fe3e1097dfa34649dbe9b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyMDI3MQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432320271", "bodyText": "Nope, I probably didn't get this question. Can you table this for the meeting?\nI have not put a lot of effort on MLS v2 support due to the inability to clearly test but as long as the property files are considered as forms, the idea is that it would only require enabling the DB as a source of property files also(instead of just the assets)", "author": "ekigamba", "createdAt": "2020-05-29T08:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwNjE2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyNTkzNw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432325937", "bodyText": "Added, thanks.", "author": "dubdabasoduba", "createdAt": "2020-05-29T08:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwNjE2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "dd062786f9c96f053ef84bcf8231328f6a9f3c0c", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java b/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\nindex 71e6e95b..4d46faf7 100644\n--- a/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\n+++ b/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\n\n@@ -1135,64 +1130,11 @@ public class FormUtils {\n         mCloudantDataHandler.createClientDocument(client);\n     }\n \n-    @Nullable\n-    public JSONObject getFormJsonFromRepositoryOrAssets(@NonNull String formIdentity) {\n-        return getFormJsonFromRepositoryOrAssetsWithOptionalCallback(formIdentity, null);\n-    }\n-\n-    public void getFormJsonFromRepositoryOrAssets(@NonNull String formIdentity, @Nullable OnFormFetchedCallback<JSONObject> onFormFetchedCallback) {\n-        getFormJsonFromRepositoryOrAssetsWithOptionalCallback(formIdentity, onFormFetchedCallback);\n-    }\n-\n-    private JSONObject getFormJsonFromRepositoryOrAssetsWithOptionalCallback(String formIdentity, @Nullable OnFormFetchedCallback<JSONObject> onFormFetchedCallback) {\n-        ClientForm clientForm = getClientFormFromRepository(formIdentity);\n-\n-        try {\n-            if (clientForm != null) {\n-                Timber.d(\"============%s form loaded from db============\", formIdentity);\n-\n-                JSONObject formJson = new JSONObject(clientForm.getJson());\n-                injectFormStatus(formJson, clientForm);\n-\n-                if (onFormFetchedCallback != null) {\n-                    onFormFetchedCallback.onFormFetched(formJson);\n-                    return null;\n-                }  else {\n-                    return formJson;\n-                }\n-            }\n-        } catch (JSONException e) {\n-            Timber.e(e);\n-\n-            if (onFormFetchedCallback != null) {\n-                handleJsonFormOrRulesError(false, formIdentity, form -> {\n-                    try {\n-                        JSONObject jsonObject = form == null ? null : new JSONObject(form);\n-                        onFormFetchedCallback.onFormFetched(jsonObject);\n-                    } catch (JSONException ex) {\n-                        Timber.e(ex);\n-                    }\n-                });\n-            } else {\n-                return null;\n-            }\n-        }\n-\n-        Timber.d(\"============%s form loaded from Assets=============\", formIdentity);\n-        JSONObject jsonObject = getFormJson(formIdentity);\n-\n-        if (onFormFetchedCallback != null) {\n-            onFormFetchedCallback.onFormFetched(jsonObject);\n-            return null;\n-        }  else {\n-            return jsonObject;\n-        }\n-    }\n+    public JSONObject getFormJsonFromRepositoryOrAssets(String formIdentity) {\n+        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n+        String locale = mContext.getResources().getConfiguration().locale.getLanguage();\n \n-    private ClientForm getClientFormFromRepository(String formIdentity) {\n         //Check the current locale of the app to load the correct version of the form in the desired language\n-        String locale = mContext.getResources().getConfiguration().locale.getLanguage();\n-        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n         String localeFormIdentity = formIdentity;\n         if (!Locale.ENGLISH.getLanguage().equals(locale)) {\n             localeFormIdentity = localeFormIdentity + \"-\" + locale;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODQ3MA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432308470", "bodyText": "Are we checking for the APK compatibility when suggesting the form rollback version.", "author": "dubdabasoduba", "createdAt": "2020-05-29T07:38:45Z", "path": "opensrp-app/src/main/java/org/smartregister/util/FormUtils.java", "diffHunk": "@@ -1146,25 +1204,60 @@ public JSONObject getFormJsonFromRepositoryOrAssets(String formIdentity) {\n             String revisedFormName = extractFormNameWithoutExtension(localeFormIdentity);\n             clientForm = clientFormRepository.getActiveClientFormByIdentifier(revisedFormName);\n         }\n+        return clientForm;\n+    }\n \n-        try {\n-            if (clientForm != null) {\n-                Timber.d(\"============%s form loaded from db============\", formIdentity);\n+    public void handleJsonFormOrRulesError(@NonNull String formIdentity, @NonNull OnFormFetchedCallback<String> onFormFetchedCallback) {\n+        handleJsonFormOrRulesError(false, formIdentity, onFormFetchedCallback);\n+    }\n \n-                JSONObject formJson = new JSONObject(clientForm.getJson());\n-                injectFormStatus(formJson, clientForm);\n+    public void handleJsonFormOrRulesError(boolean isRulesFile, @NonNull String formIdentity, @NonNull OnFormFetchedCallback<String> onFormFetchedCallback) {\n+        ClientForm clientForm = getClientFormFromRepository(formIdentity);\n+        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n+        List<ClientForm> clientForms = clientFormRepository.getClientFormByIdentifier(clientForm.getIdentifier());\n+\n+        if (clientForms.size() > 0) {\n+            // Show dialog asking user if they want to rollback to the previous available version X\n+            // if YES, then provide that form instead", "originalCommit": "fd2282f3c258a12a93fe3e1097dfa34649dbe9b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyMTczMg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432321732", "bodyText": "Nope, we are not. As discussed, we provide the user with all the available forms.\n\nThe logic for providing the option ended up being too complicated & would take a lot of effort\nOur assumption that app version means a change in app-model is not accurate. The idea is that the model might remain the same across multiple app versions and thus we cannot accurately determine or suggest to the user the model-compatible forms", "author": "ekigamba", "createdAt": "2020-05-29T08:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyODA4Ng==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432328086", "bodyText": "What happens if I update the registration form & update the registration form logic and add/remove new questions or hidden fields e.g contact_no which are key to the rest of the app logic? If we roll back to a version that doesn't have this field then use the new APK then the logic will be messed up.", "author": "dubdabasoduba", "createdAt": "2020-05-29T08:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMDk4NQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432330985", "bodyText": "We do not automatically rollback, we give the user the option, We cannot also tell critical and non-critical changes. That would require extra work to determine. What do you think?Do you have a suggestion that accurately determines compatible rollback form(s)?", "author": "Kigamba", "createdAt": "2020-05-29T08:23:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODQ3MA=="}], "type": "inlineReview", "revised_code": {"commit": "dd062786f9c96f053ef84bcf8231328f6a9f3c0c", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java b/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\nindex 71e6e95b..4d46faf7 100644\n--- a/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\n+++ b/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\n\n@@ -1204,60 +1146,34 @@ public class FormUtils {\n             String revisedFormName = extractFormNameWithoutExtension(localeFormIdentity);\n             clientForm = clientFormRepository.getActiveClientFormByIdentifier(revisedFormName);\n         }\n-        return clientForm;\n-    }\n \n-    public void handleJsonFormOrRulesError(@NonNull String formIdentity, @NonNull OnFormFetchedCallback<String> onFormFetchedCallback) {\n-        handleJsonFormOrRulesError(false, formIdentity, onFormFetchedCallback);\n-    }\n+        try {\n+            if (clientForm != null) {\n+                Timber.d(\"============%s form loaded from db============\", formIdentity);\n \n-    public void handleJsonFormOrRulesError(boolean isRulesFile, @NonNull String formIdentity, @NonNull OnFormFetchedCallback<String> onFormFetchedCallback) {\n-        ClientForm clientForm = getClientFormFromRepository(formIdentity);\n-        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n-        List<ClientForm> clientForms = clientFormRepository.getClientFormByIdentifier(clientForm.getIdentifier());\n-\n-        if (clientForms.size() > 0) {\n-            // Show dialog asking user if they want to rollback to the previous available version X\n-            // if YES, then provide that form instead\n-            // if NO, then continue down\n-\n-            boolean dialogIsShowing = (mContext instanceof JsonSubFormAndRulesLoader) && ((JsonSubFormAndRulesLoader) mContext).isVisibleFormErrorAndRollbackDialog();\n-\n-            if (!dialogIsShowing) {\n-                FormRollbackDialog.showAvailableRollbackFormsDialog(mContext, clientForms, clientForm, new RollbackDialogCallback() {\n-                    @Override\n-                    public void onFormSelected(@NonNull ClientForm selectedForm) {\n-                        if (selectedForm.getJson() == null && selectedForm.getVersion().equals(AllConstants.CLIENT_FORM_ASSET_VERSION)) {\n-\n-                            if (isRulesFile) {\n-                                try {\n-                                    clientForm.setJson(Utils.convertStreamToString(mContext.getAssets().open(formIdentity)));\n-                                } catch (IOException e) {\n-                                    Timber.e(e);\n-                                }\n-                            } else {\n-                                JSONObject jsonObject = getFormJson(formIdentity);\n+                JSONObject formJson = new JSONObject(clientForm.getJson());\n+                injectFormStatus(formJson, clientForm);\n \n-                                if (jsonObject != null) {\n-                                    clientForm.setJson(jsonObject.toString());\n-                                }\n-                            }\n-                        }\n+                return formJson;\n+            }\n+        } catch (JSONException e) {\n+            Timber.e(e);\n \n-                        onFormFetchedCallback.onFormFetched(clientForm.getJson());\n-                    }\n+            // Check if there is a backup\n+            ClientForm rollbackForm = getAppropriateRollbackForm(clientForm);\n \n-                    @Override\n-                    public void onCancelClicked() {\n-                        onFormFetchedCallback.onFormFetched(null);\n-                    }\n-                });\n+            if (rollbackForm != null) {\n+                // Show dialog asking user if they want to rollback to the previous available version X\n+                // if YES, then provide that form instead\n+                // if NO, then continue down\n             }\n         }\n+        Timber.d(\"============%s form loaded from Assets=============\", formIdentity);\n+        return getFormJson(formIdentity);\n     }\n \n     @Nullable\n-    public JSONObject getSubFormJsonFromRepository(String formIdentity, String subFormsLocation, Context context, boolean translateSubForm) throws JSONException {\n+    public JSONObject getSubFormJsonFromRepository(String formIdentity, String subFormsLocation, Context context, boolean translateSubForm) {\n         ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n         String locale = mContext.getResources().getConfiguration().locale.getLanguage();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMTA5MA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432311090", "bodyText": "Hope you are checking for nulls in the places where these methods are used", "author": "dubdabasoduba", "createdAt": "2020-05-29T07:43:48Z", "path": "opensrp-app/src/main/java/org/smartregister/view/activity/FormConfigurationJsonFormActivity.java", "diffHunk": "@@ -70,7 +74,7 @@ public void run() {\n                 });\n     }\n \n-    @NonNull\n+    @Nullable", "originalCommit": "fd2282f3c258a12a93fe3e1097dfa34649dbe9b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyMTgxMA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r432321810", "bodyText": "Yea", "author": "ekigamba", "createdAt": "2020-05-29T08:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMTA5MA=="}], "type": "inlineReview", "revised_code": {"commit": "dd062786f9c96f053ef84bcf8231328f6a9f3c0c", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/view/activity/FormConfigurationJsonFormActivity.java b/opensrp-app/src/main/java/org/smartregister/view/activity/DynamicJsonFormActivity.java\nsimilarity index 67%\nrename from opensrp-app/src/main/java/org/smartregister/view/activity/FormConfigurationJsonFormActivity.java\nrename to opensrp-app/src/main/java/org/smartregister/view/activity/DynamicJsonFormActivity.java\nindex f2505c1c..2bab2988 100644\n--- a/opensrp-app/src/main/java/org/smartregister/view/activity/FormConfigurationJsonFormActivity.java\n+++ b/opensrp-app/src/main/java/org/smartregister/view/activity/DynamicJsonFormActivity.java\n\n@@ -74,7 +70,7 @@ public class FormConfigurationJsonFormActivity extends JsonFormActivity {\n                 });\n     }\n \n-    @Nullable\n+    @NonNull\n     @Override\n     public BufferedReader getRules(@NonNull Context context, @NonNull String fileName) throws IOException {\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0MjI0Mg==", "url": "https://github.com/opensrp/opensrp-client-core/pull/533#discussion_r434542242", "bodyText": "Delete this block if its not being used", "author": "dubdabasoduba", "createdAt": "2020-06-03T12:51:34Z", "path": "opensrp-app/src/main/java/org/smartregister/util/FormUtils.java", "diffHunk": "@@ -1258,5 +1348,24 @@ public static int getClientFormId(@NonNull JSONObject jsonObject) {\n     public static boolean isFormNew(@NonNull JSONObject jsonObject) {\n         return jsonObject.optBoolean(AllConstants.JSON.Property.IS_NEW, false);\n     }\n+/*\n+    @Nullable\n+    public List<ClientForm> getAvailableRollbackForms(@NonNull ClientForm corruptedForm) {\n+        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n+        ManifestRepository manifestRepository = CoreLibrary.getInstance().context().getManifestRepository();\n+        List<ClientForm> clientForms = clientFormRepository.getClientFormByIdentifier(corruptedForm.getIdentifier());\n+        List<Manifest> manifests = manifestRepository.getAllManifests();\n+\n+        Collections.sort(manifests, new Comparator<Manifest>() {\n+            @Override\n+            public int compare(Manifest o1, Manifest o2) {\n+                DefaultArtifactVersion v2 = new DefaultArtifactVersion(o1.getFormVersion());\n+\n+                return 0;\n+            }\n+        });\n+\n+        // Remove the current form from the available options\n+    }*/", "originalCommit": "32a974f4dc5b3f4899c567b2703ceeea641aa49b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd062786f9c96f053ef84bcf8231328f6a9f3c0c", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java b/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\nindex b66b44f7..4d46faf7 100644\n--- a/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\n+++ b/opensrp-app/src/main/java/org/smartregister/util/FormUtils.java\n\n@@ -1348,24 +1267,10 @@ public class FormUtils {\n     public static boolean isFormNew(@NonNull JSONObject jsonObject) {\n         return jsonObject.optBoolean(AllConstants.JSON.Property.IS_NEW, false);\n     }\n-/*\n-    @Nullable\n-    public List<ClientForm> getAvailableRollbackForms(@NonNull ClientForm corruptedForm) {\n-        ClientFormRepository clientFormRepository = CoreLibrary.getInstance().context().getClientFormRepository();\n-        ManifestRepository manifestRepository = CoreLibrary.getInstance().context().getManifestRepository();\n-        List<ClientForm> clientForms = clientFormRepository.getClientFormByIdentifier(corruptedForm.getIdentifier());\n-        List<Manifest> manifests = manifestRepository.getAllManifests();\n-\n-        Collections.sort(manifests, new Comparator<Manifest>() {\n-            @Override\n-            public int compare(Manifest o1, Manifest o2) {\n-                DefaultArtifactVersion v2 = new DefaultArtifactVersion(o1.getFormVersion());\n \n-                return 0;\n-            }\n-        });\n-\n-        // Remove the current form from the available options\n-    }*/\n+    @Nullable\n+    public ClientForm getAppropriateRollbackForm(@NonNull ClientForm corruptedForm) {\n+        //List<ClientForm> clientForms = clientFormRepository.getClientFormByIdentifier(clientForm.getIdentifier());\n+    }\n \n }\n\\ No newline at end of file\n"}}, {"oid": "dd062786f9c96f053ef84bcf8231328f6a9f3c0c", "url": "https://github.com/opensrp/opensrp-client-core/commit/dd062786f9c96f053ef84bcf8231328f6a9f3c0c", "message": "Add stub methods to handle rollback when openning corrupted forms", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "1df85e5c1fcbfc50fb7ebd04f6126523a4327d11", "url": "https://github.com/opensrp/opensrp-client-core/commit/1df85e5c1fcbfc50fb7ebd04f6126523a4327d11", "message": "Add form rollback dialog\n\n- Add org.smartregister.util.ViewUtil#showAvailableRollbackFormsDialog method to show dialog rollback to user\n- Prevent rollback-reversal during sync by using latest form instead of active form since the active form might be unstable\n- Fix exception when checking if form is new when openning JSON Form", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "c0fe7cca7bb303e7a028607cc26e9dbc1b9f4d7b", "url": "https://github.com/opensrp/opensrp-client-core/commit/c0fe7cca7bb303e7a028607cc26e9dbc1b9f4d7b", "message": "Code cleanup", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "a140bb565f6e93c47051fb92d48d75d94e310576", "url": "https://github.com/opensrp/opensrp-client-core/commit/a140bb565f6e93c47051fb92d48d75d94e310576", "message": "Add tests for ClientFormRepositoryTest & FormRollbackDialogTest", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "9bc93e43f1458c47df35b6bfbf578f75cc5b4b6c", "url": "https://github.com/opensrp/opensrp-client-core/commit/9bc93e43f1458c47df35b6bfbf578f75cc5b4b6c", "message": "Add error handling & rollback for sub-forms & rules files", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "9f940f13aed40d96043147048c14314b8b5e075c", "url": "https://github.com/opensrp/opensrp-client-core/commit/9f940f13aed40d96043147048c14314b8b5e075c", "message": "Handle form config sub-form JSONException error\n\n- Prevent multiple form error dialogs for rules file errors & sub-form file errors\n- Prevent showing toast message when no rollback form is chosen", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "5fdcc8278308718c02de902503dbe8ef0f419a28", "url": "https://github.com/opensrp/opensrp-client-core/commit/5fdcc8278308718c02de902503dbe8ef0f419a28", "message": "Update native-form version to 1.9.2-SNAPSHOT", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "ae83562df6087fcee546b9569a2d3d465e0850ed", "url": "https://github.com/opensrp/opensrp-client-core/commit/ae83562df6087fcee546b9569a2d3d465e0850ed", "message": "Add tests for FormUtils\n\n- Add tests for org.smartregister.util.FormUtils#injectFormStatus\n- Add tests for org.smartregister.util.FormUtils#getClientFormId\n- Add test for org.smartregister.util.FormUtils#isFormNew", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "dda9e5cdfd5b6ec412c04158fef87ffd6837d2aa", "url": "https://github.com/opensrp/opensrp-client-core/commit/dda9e5cdfd5b6ec412c04158fef87ffd6837d2aa", "message": "Rename DynamicJsonFormActivity to FormCOnfigurationJsonFormActivity\n\n- Add test for org.smartregister.repository.ClientFormRepository#setIsNew\n- Add test for org.smartregister.repository.ClientFormRepository#readCursor\n- Add test for org.smartregister.view.activity.FormConfigurationJsonFormActivity#getSubForm\n- Add test for org.smartregister.view.activity.FormConfigurationJsonFormActivity#handleFormError\n- Add tests for org.smartregister.view.activity.FormConfigurationJsonFormActivity#showFormVersionUpdateDialog\n- Add test for org.smartregister.view.activity.FormConfigurationJsonFormActivity#onCreate", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "7b17826bcd93e5f8149a976ab7866672e9a8dbd6", "url": "https://github.com/opensrp/opensrp-client-core/commit/7b17826bcd93e5f8149a976ab7866672e9a8dbd6", "message": ":arrow-up: Increment version to 1.11.7-SNAPSHOT", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "7df21bdebc29d653b9821ec8b404705790b538db", "url": "https://github.com/opensrp/opensrp-client-core/commit/7df21bdebc29d653b9821ec8b404705790b538db", "message": "Code cleanup", "committedDate": "2020-06-04T08:55:25Z", "type": "commit"}, {"oid": "7df21bdebc29d653b9821ec8b404705790b538db", "url": "https://github.com/opensrp/opensrp-client-core/commit/7df21bdebc29d653b9821ec8b404705790b538db", "message": "Code cleanup", "committedDate": "2020-06-04T08:55:25Z", "type": "forcePushed"}]}