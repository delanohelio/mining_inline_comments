{"pr_number": 515, "pr_title": "Issue283", "pr_createdAt": "2020-05-11T06:11:20Z", "pr_url": "https://github.com/opensrp/opensrp-client-core/pull/515", "timeline": [{"oid": "f8872665d7b47ce0cdff3e29d13e0ea6ab421953", "url": "https://github.com/opensrp/opensrp-client-core/commit/f8872665d7b47ce0cdff3e29d13e0ea6ab421953", "message": "Merge branch 'master' into issue283", "committedDate": "2020-08-25T07:49:06Z", "type": "commit"}, {"oid": "fd2e9847fb55f23b0d5c59058d3b79b9616d8b92", "url": "https://github.com/opensrp/opensrp-client-core/commit/fd2e9847fb55f23b0d5c59058d3b79b9616d8b92", "message": "Fix failing unit tests :check_mark:\nCode clean up", "committedDate": "2020-08-25T14:40:42Z", "type": "forcePushed"}, {"oid": "791f186beb222e9eba52e564103dfc016460b5d4", "url": "https://github.com/opensrp/opensrp-client-core/commit/791f186beb222e9eba52e564103dfc016460b5d4", "message": "Fix failing unit tests :check_mark:\nCode clean up", "committedDate": "2020-08-25T14:45:45Z", "type": "forcePushed"}, {"oid": "69a534f7f62d218878b95624e5dd1e259db3fd72", "url": "https://github.com/opensrp/opensrp-client-core/commit/69a534f7f62d218878b95624e5dd1e259db3fd72", "message": "Fix failing unit tests :white_check_mark:\nCode clean up", "committedDate": "2020-08-25T14:46:44Z", "type": "forcePushed"}, {"oid": "b306ed9ee8ab385f37298f1afb8b0b69ea6a3217", "url": "https://github.com/opensrp/opensrp-client-core/commit/b306ed9ee8ab385f37298f1afb8b0b69ea6a3217", "message": "Fix failing unit tests :white_check_mark:\nCode clean up", "committedDate": "2020-08-25T15:42:31Z", "type": "forcePushed"}, {"oid": "695e2ee0d1f930c895b64b55f30ac40341141440", "url": "https://github.com/opensrp/opensrp-client-core/commit/695e2ee0d1f930c895b64b55f30ac40341141440", "message": "Fix failing unit tests :white_check_mark:\nCode clean up", "committedDate": "2020-08-25T16:16:27Z", "type": "commit"}, {"oid": "695e2ee0d1f930c895b64b55f30ac40341141440", "url": "https://github.com/opensrp/opensrp-client-core/commit/695e2ee0d1f930c895b64b55f30ac40341141440", "message": "Fix failing unit tests :white_check_mark:\nCode clean up", "committedDate": "2020-08-25T16:16:27Z", "type": "forcePushed"}, {"oid": "064a5f52c9bf9614a330c163ebecaeda75412128", "url": "https://github.com/opensrp/opensrp-client-core/commit/064a5f52c9bf9614a330c163ebecaeda75412128", "message": "Fix bug :bug:\n- Error After Cancelling Log in by user from a Different Team", "committedDate": "2020-08-26T15:52:29Z", "type": "commit"}, {"oid": "1933811f87f3c793eefc75f6e2d89628c1b2f1c7", "url": "https://github.com/opensrp/opensrp-client-core/commit/1933811f87f3c793eefc75f6e2d89628c1b2f1c7", "message": "Fix bug :bug:\n- Login fails for different team provider login on the first time\n- Incorrect provider info shown on different team p authentication dialog\n- Fix failing tests :white_check_mark:", "committedDate": "2020-08-27T09:45:35Z", "type": "commit"}, {"oid": "35be648327500eab45bf68d7f3a39e56235aac82", "url": "https://github.com/opensrp/opensrp-client-core/commit/35be648327500eab45bf68d7f3a39e56235aac82", "message": "Fix tests + build :white_check_mark: :green_heart:", "committedDate": "2020-08-27T15:05:16Z", "type": "commit"}, {"oid": "35be648327500eab45bf68d7f3a39e56235aac82", "url": "https://github.com/opensrp/opensrp-client-core/commit/35be648327500eab45bf68d7f3a39e56235aac82", "message": "Fix tests + build :white_check_mark: :green_heart:", "committedDate": "2020-08-27T15:05:16Z", "type": "forcePushed"}, {"oid": "c15dedf9f3d4c97d287c2b8b32bcae10a5125c23", "url": "https://github.com/opensrp/opensrp-client-core/commit/c15dedf9f3d4c97d287c2b8b32bcae10a5125c23", "message": "Merge branch 'master' into issue283", "committedDate": "2020-08-31T13:41:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4MDA1Nw==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r480880057", "bodyText": "Add the params documentation that were provided before", "author": "githengi", "createdAt": "2020-09-01T06:40:13Z", "path": "opensrp-app/src/main/java/org/smartregister/service/HTTPAgent.java", "diffHunk": "@@ -78,107 +98,154 @@\n \n     private int connectTimeout = 60000;\n     private int readTimeout = 60000;\n+    private Gson gson;\n \n-    public HTTPAgent(Context context, AllSettings settings, AllSharedPreferences\n+    private static final String DETAILS_URL = \"/user-details?anm-id=\";\n+\n+\n+    public HTTPAgent(Context context, AllSharedPreferences\n             allSharedPreferences, DristhiConfiguration configuration) {\n         this.context = context;\n-        this.settings = settings;\n         this.allSharedPreferences = allSharedPreferences;\n         this.configuration = configuration;\n-        gzipCompression= new GZIPCompression();\n+        gson = new Gson();\n+        gzipCompression = new GZIPCompression();\n     }\n \n     /**\n-     * @author  Rodgers Andati\n-     * @since   2019-04-25\n      * This method initializes httpurlconnection\n-     * @param requestURLPath This is the url to be open http connection to.\n-     * @param useBasicAuth This is whether to set up basic authentication or not.\n-     * @return HttpURLConnection This returns the http connection to opensrp server.\n      */", "originalCommit": "c15dedf9f3d4c97d287c2b8b32bcae10a5125c23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5df6c4cdc0088428f37fb18ac68db3554d479f7", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/service/HTTPAgent.java b/opensrp-app/src/main/java/org/smartregister/service/HTTPAgent.java\nindex c992396c..7a5107a5 100644\n--- a/opensrp-app/src/main/java/org/smartregister/service/HTTPAgent.java\n+++ b/opensrp-app/src/main/java/org/smartregister/service/HTTPAgent.java\n\n@@ -114,6 +114,10 @@ public class HTTPAgent {\n \n     /**\n      * This method initializes httpurlconnection\n+     *\n+     * @param requestURLPath This is the url to open http connection to.\n+     * @param setOauthToken  A boolean to flag whether to set the OAuth2 bearer access token in the Authorization header of request.\n+     * @return HttpURLConnection Http connection to the OpenSRP server.\n      */\n     private HttpURLConnection initializeHttp(String requestURLPath, boolean setOauthToken) throws IOException {\n \n"}}, {"oid": "f5df6c4cdc0088428f37fb18ac68db3554d479f7", "url": "https://github.com/opensrp/opensrp-client-core/commit/f5df6c4cdc0088428f37fb18ac68db3554d479f7", "message": "Update java docs :pencil:\n- Update java docs for HTTPAgent.initializeHttp", "committedDate": "2020-09-01T08:33:02Z", "type": "commit"}, {"oid": "f5df6c4cdc0088428f37fb18ac68db3554d479f7", "url": "https://github.com/opensrp/opensrp-client-core/commit/f5df6c4cdc0088428f37fb18ac68db3554d479f7", "message": "Update java docs :pencil:\n- Update java docs for HTTPAgent.initializeHttp", "committedDate": "2020-09-01T08:33:02Z", "type": "forcePushed"}, {"oid": "fb93c3550569c08d6ef2759984a57eedbbee80fb", "url": "https://github.com/opensrp/opensrp-client-core/commit/fb93c3550569c08d6ef2759984a57eedbbee80fb", "message": "autoload for xml config", "committedDate": "2020-05-11T06:12:31Z", "type": "forcePushed"}, {"oid": "0336e7054a3d73059a25233988b38f4993f3397f", "url": "https://github.com/opensrp/opensrp-client-core/commit/0336e7054a3d73059a25233988b38f4993f3397f", "message": "Refactor HTTPAgent\nFix failing unit tests", "committedDate": "2020-05-11T08:56:19Z", "type": "forcePushed"}, {"oid": "d695a9a18ff96ea50d33190af138c7f8f5361ea5", "url": "https://github.com/opensrp/opensrp-client-core/commit/d695a9a18ff96ea50d33190af138c7f8f5361ea5", "message": "Refactor retry mechanism", "committedDate": "2020-05-26T06:49:16Z", "type": "forcePushed"}, {"oid": "b813ab6b4ea83937fbc78a341f8aae46fea77475", "url": "https://github.com/opensrp/opensrp-client-core/commit/b813ab6b4ea83937fbc78a341f8aae46fea77475", "message": "Fix profile image loading\nAdd add http request header param enums", "committedDate": "2020-05-29T06:54:03Z", "type": "forcePushed"}, {"oid": "d4f2b6112cf46d433d52cc2957c3a1e3a470e6e3", "url": "https://github.com/opensrp/opensrp-client-core/commit/d4f2b6112cf46d433d52cc2957c3a1e3a470e6e3", "message": "Optimization, Refactor and unit testing\n- Optimize upstream data processing for file uploads\n- Refactor for maintainability\n- Unit testing", "committedDate": "2020-06-02T06:36:44Z", "type": "forcePushed"}, {"oid": "9ce6e735099f2b80bee533419c84bafa93f74a74", "url": "https://github.com/opensrp/opensrp-client-core/commit/9ce6e735099f2b80bee533419c84bafa93f74a74", "message": "Account Helper Unit test", "committedDate": "2020-06-02T11:11:08Z", "type": "forcePushed"}, {"oid": "b3466e5d42e4358b74fc3b236ab2d0fe877d79fc", "url": "https://github.com/opensrp/opensrp-client-core/commit/b3466e5d42e4358b74fc3b236ab2d0fe877d79fc", "message": "Refactor to remove duplicate code : DRY", "committedDate": "2020-06-03T12:41:52Z", "type": "forcePushed"}, {"oid": "399f53a22347ccd0c1ab8d6cc4b4d84eb4504122", "url": "https://github.com/opensrp/opensrp-client-core/commit/399f53a22347ccd0c1ab8d6cc4b4d84eb4504122", "message": "Refactor client core : Remove password type String\n- Remove type String for password processing to mitigates against the heap dump attack vector exposed by Java String type\n- Fix unit tests\n\nSigned-off-by: Martin Ndegwa <ndegwamartin@gmail.com>", "committedDate": "2020-06-08T19:37:29Z", "type": "forcePushed"}, {"oid": "ce6f91b632b126cecc98a777e2d5312245abec87", "url": "https://github.com/opensrp/opensrp-client-core/commit/ce6f91b632b126cecc98a777e2d5312245abec87", "message": "Update Arabic and French translations", "committedDate": "2020-06-12T06:09:29Z", "type": "forcePushed"}, {"oid": "00a38a30dde28ee9ab6f6aec5900fba8c9b53c09", "url": "https://github.com/opensrp/opensrp-client-core/commit/00a38a30dde28ee9ab6f6aec5900fba8c9b53c09", "message": "Support for local Multi-tenancy\n- Refactor offline multi tenancy implementation for same Team Members\n- Adds support for No need to remotely authenticate if all team members had logged in device previously", "committedDate": "2020-06-15T12:26:10Z", "type": "forcePushed"}, {"oid": "afa552cabf40cccca0808cc2b5f2013c6050a97f", "url": "https://github.com/opensrp/opensrp-client-core/commit/afa552cabf40cccca0808cc2b5f2013c6050a97f", "message": "Add unit tests for\n- getAllowedLevels\n- getDefaultLocationLevel\n- getOpenMrsLocationHierarchy", "committedDate": "2020-07-03T10:58:16Z", "type": "forcePushed"}, {"oid": "c03a62dd8328766d106b7c966112f93bfc8a7e4f", "url": "https://github.com/opensrp/opensrp-client-core/commit/c03a62dd8328766d106b7c966112f93bfc8a7e4f", "message": "Clean up", "committedDate": "2020-07-07T07:52:37Z", "type": "forcePushed"}, {"oid": "6ba95b32067d677b3a997857a2096bebd96c4105", "url": "https://github.com/opensrp/opensrp-client-core/commit/6ba95b32067d677b3a997857a2096bebd96c4105", "message": "Clean up", "committedDate": "2020-07-07T09:10:58Z", "type": "forcePushed"}, {"oid": "a6c4c6839f0e090d72021d74b7b271d17fb1a5ef", "url": "https://github.com/opensrp/opensrp-client-core/commit/a6c4c6839f0e090d72021d74b7b271d17fb1a5ef", "message": "Fix failing build\n- Fix failing tests", "committedDate": "2020-07-07T09:27:28Z", "type": "forcePushed"}, {"oid": "e9d776810a1d11c4f36272089cdb854110488ad6", "url": "https://github.com/opensrp/opensrp-client-core/commit/e9d776810a1d11c4f36272089cdb854110488ad6", "message": "Fix failing build\n- Fix unit tests\n- Downgrade travis config to Android API 27", "committedDate": "2020-07-07T14:24:23Z", "type": "forcePushed"}, {"oid": "844065f13cb9b62ab3c145662ca7ee9f7d045af1", "url": "https://github.com/opensrp/opensrp-client-core/commit/844065f13cb9b62ab3c145662ca7ee9f7d045af1", "message": "Fix failing build\n- Fix unit tests\n- Downgrade travis config to Android API 27", "committedDate": "2020-07-07T14:30:38Z", "type": "forcePushed"}, {"oid": "0a9617512e14de9013978d4819e802860fda12fd", "url": "https://github.com/opensrp/opensrp-client-core/commit/0a9617512e14de9013978d4819e802860fda12fd", "message": "Fix failing build\n- Fix unit tests\n- Downgrade travis config to Android API 27", "committedDate": "2020-07-07T14:31:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyNjU3OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r455126579", "bodyText": "Is this a refresh token, can the the variable name be changed if so", "author": "githengi", "createdAt": "2020-07-15T15:08:10Z", "path": "opensrp-app/src/main/java/org/smartregister/account/AccountAuthenticator.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.smartregister.account;\n+\n+import android.accounts.AbstractAccountAuthenticator;\n+import android.accounts.Account;\n+import android.accounts.AccountAuthenticatorResponse;\n+import android.accounts.AccountManager;\n+import android.accounts.NetworkErrorException;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.text.TextUtils;\n+\n+import org.apache.http.HttpStatus;\n+import org.smartregister.CoreLibrary;\n+\n+import timber.log.Timber;\n+\n+/**\n+ * Created by ndegwamartin on 2020-04-27.\n+ */\n+public class AccountAuthenticator extends AbstractAccountAuthenticator {\n+\n+    private final Context mContext;\n+\n+    public AccountAuthenticator(Context context) {\n+        super(context);\n+\n+        this.mContext = context;\n+    }\n+\n+    @Override\n+    public Bundle addAccount(AccountAuthenticatorResponse response, String accountType, String authTokenType, String[] requiredFeatures, Bundle options) throws NetworkErrorException {\n+\n+        final Intent intent = new Intent(mContext, CoreLibrary.getInstance().getSyncConfiguration().getAuthenticationActivity());\n+        intent.putExtra(AccountHelper.INTENT_KEY.ACCOUNT_TYPE, accountType);\n+        intent.putExtra(AccountHelper.INTENT_KEY.AUTH_TYPE, authTokenType);\n+        intent.putExtra(AccountHelper.INTENT_KEY.IS_NEW_ACCOUNT, true);\n+        intent.putExtra(AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE, response);\n+\n+        final Bundle bundle = new Bundle();\n+        bundle.putParcelable(AccountManager.KEY_INTENT, intent);\n+        return bundle;\n+    }\n+\n+    @Override\n+    public Bundle getAuthToken(AccountAuthenticatorResponse response, Account account, String authTokenType, Bundle options) throws NetworkErrorException {\n+\n+        Timber.d(\"getAuthToken\");\n+\n+        AccountManager accountManager = CoreLibrary.getInstance().getAccountManager();\n+\n+        String authToken = accountManager.peekAuthToken(account, authTokenType);\n+        String refreshToken = \"\";\n+        Timber.d(\"peekAuthToken \" + authToken);\n+\n+        if (TextUtils.isEmpty(authToken)) {\n+            final String password = accountManager.getPassword(account);", "originalCommit": "0a9617512e14de9013978d4819e802860fda12fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8872665d7b47ce0cdff3e29d13e0ea6ab421953", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/account/AccountAuthenticator.java b/opensrp-app/src/main/java/org/smartregister/account/AccountAuthenticator.java\nindex 92d3a938..0a3dcbb9 100644\n--- a/opensrp-app/src/main/java/org/smartregister/account/AccountAuthenticator.java\n+++ b/opensrp-app/src/main/java/org/smartregister/account/AccountAuthenticator.java\n\n@@ -7,6 +7,7 @@ import android.accounts.AccountManager;\n import android.accounts.NetworkErrorException;\n import android.content.Context;\n import android.content.Intent;\n+import android.os.Build;\n import android.os.Bundle;\n import android.text.TextUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzMTg1MA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r455131850", "bodyText": "Can we change and pass a static error, e.g Error failed during server login instead of the actual message", "author": "githengi", "createdAt": "2020-07-15T15:16:04Z", "path": "opensrp-app/src/main/java/org/smartregister/login/task/RemoteLoginTask.java", "diffHunk": "@@ -43,37 +59,98 @@ protected void onPreExecute() {\n \n     @Override\n     protected LoginResponse doInBackground(Void... params) {\n-        LoginResponse loginResponse = getOpenSRPContext().userService().isValidRemoteLogin(mUsername, mPassword);\n-        if (loginResponse != null && loginResponse.equals(LoginResponse.SUCCESS) && getOpenSRPContext().userService().getGroupId(mUsername) != null && CoreLibrary.getInstance().getSyncConfiguration().isSyncSettings()) {\n \n+        LoginResponse loginResponse;\n+        try {\n+\n+            AccountConfiguration accountConfiguration = CoreLibrary.getInstance().context().getHttpAgent().fetchOAuthConfiguration();\n+\n+            boolean isKeycloakConfigured = accountConfiguration != null;\n+\n+            if (!isKeycloakConfigured) {\n+                accountConfiguration = new AccountConfiguration();\n+                accountConfiguration.setGrantTypesSupported(Arrays.asList(AccountHelper.OAUTH.GRANT_TYPE.PASSWORD));\n+                accountConfiguration.setTokenEndpoint(CoreLibrary.getInstance().context().configuration().dristhiBaseURL() + AccountHelper.OAUTH.TOKEN_ENDPOINT);\n+                accountConfiguration.setAuthorizationEndpoint(\"\");\n+                accountConfiguration.setIssuerEndpoint(\"\");\n+            }\n+\n+            if (accountConfiguration != null) {\n+\n+                if (!accountConfiguration.getGrantTypesSupported().contains(AccountHelper.OAUTH.GRANT_TYPE.PASSWORD))\n+                    throw new AccountsException(\"OAuth configuration DOES NOT support the Password Grant Type\");\n+\n+                //Persist config resources\n+                SharedPreferences.Editor sharedPrefEditor = CoreLibrary.getInstance().context().allSharedPreferences().getPreferences().edit();\n+\n+                sharedPrefEditor.putString(AccountHelper.CONFIGURATION_CONSTANTS.TOKEN_ENDPOINT_URL, accountConfiguration.getTokenEndpoint());\n+                sharedPrefEditor.putString(AccountHelper.CONFIGURATION_CONSTANTS.AUTHORIZATION_ENDPOINT_URL, accountConfiguration.getAuthorizationEndpoint());\n+                sharedPrefEditor.putString(AccountHelper.CONFIGURATION_CONSTANTS.ISSUER_ENDPOINT_URL, accountConfiguration.getIssuerEndpoint());\n+                sharedPrefEditor.putString(AccountHelper.CONFIGURATION_CONSTANTS.USERINFO_ENDPOINT_URL, accountConfiguration.getUserinfoEndpoint());\n+                sharedPrefEditor.apply();\n+\n+                AccountResponse response = CoreLibrary.getInstance().context().getHttpAgent().oauth2authenticate(mUsername, mPassword, AccountHelper.OAUTH.GRANT_TYPE.PASSWORD, accountConfiguration.getTokenEndpoint());\n+\n+                AccountManager mAccountManager = CoreLibrary.getInstance().getAccountManager();\n+\n+                final Account account = new Account(mUsername, mAccountAuthenticatorXml.getAccountType());\n \n-            publishProgress(R.string.loading_client_settings);\n+                loginResponse = getOpenSRPContext().userService().fetchUserDetails(response.getAccessToken());\n \n-            SyncSettingsServiceHelper syncSettingsServiceHelper = new SyncSettingsServiceHelper(getOpenSRPContext().configuration().dristhiBaseURL(), getOpenSRPContext().getHttpAgent());\n-            syncSettingsServiceHelper.setUsername(mUsername);\n-            syncSettingsServiceHelper.setPassword(mPassword);\n+                if (loginResponse != null && loginResponse.equals(LoginResponse.SUCCESS)) {\n \n-            try {\n-                JSONArray settings = syncSettingsServiceHelper.pullSettingsFromServer(Utils.getFilterValue(loginResponse, CoreLibrary.getInstance().getSyncConfiguration().getSyncFilterParam()));\n+                    Bundle userData = getOpenSRPContext().userService().saveUserGroup(mUsername, mPassword, loginResponse.payload());\n \n-                JSONObject data = new JSONObject();\n-                data.put(AllConstants.PREF_KEY.SETTINGS, settings);\n-                loginResponse.setRawData(data);\n+                    mAccountManager.addAccountExplicitly(account, response.getRefreshToken(), userData);\n+                    mAccountManager.setAuthToken(account, mLoginView.getAuthTokenType(), response.getAccessToken());\n+                    mAccountManager.setPassword(account, response.getRefreshToken());\n+                    mAccountManager.setUserData(account, AccountHelper.INTENT_KEY.ACCOUNT_GROUP_ID, userData.getString(AccountHelper.INTENT_KEY.ACCOUNT_GROUP_ID));\n+                    mAccountManager.setUserData(account, AccountHelper.INTENT_KEY.ACCOUNT_NAME, userData.getString(AccountHelper.INTENT_KEY.ACCOUNT_NAME));\n+                    mAccountManager.setUserData(account, AccountHelper.INTENT_KEY.ACCOUNT_PASSWORD, userData.getString(AccountHelper.INTENT_KEY.ACCOUNT_PASSWORD));\n+                    mAccountManager.setUserData(account, AccountHelper.INTENT_KEY.ACCOUNT_PASSWORD_SALT, userData.getString(AccountHelper.INTENT_KEY.ACCOUNT_PASSWORD_SALT));\n \n-            } catch (JSONException e) {\n-                Timber.e(e);\n+                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                        mAccountManager.notifyAccountAuthenticated(account);\n+                    }\n+\n+                    if (getOpenSRPContext().userService().getGroupId(mUsername) != null && CoreLibrary.getInstance().getSyncConfiguration().isSyncSettings()) {\n+\n+\n+                        publishProgress(R.string.loading_client_settings);\n+\n+                        SyncSettingsServiceHelper syncSettingsServiceHelper = new SyncSettingsServiceHelper(getOpenSRPContext().configuration().dristhiBaseURL(), getOpenSRPContext().getHttpAgent());\n+\n+                        try {\n+                            JSONArray settings = syncSettingsServiceHelper.pullSettingsFromServer(Utils.getFilterValue(loginResponse, CoreLibrary.getInstance().getSyncConfiguration().getSyncFilterParam()), response.getAccessToken());\n+\n+                            JSONObject prefSettingsData = new JSONObject();\n+                            prefSettingsData.put(AllConstants.PREF_KEY.SETTINGS, settings);\n+                            loginResponse.setRawData(prefSettingsData);\n+\n+                        } catch (JSONException e) {\n+                            Timber.e(e);\n+                        }\n+\n+                    }\n+                }\n+\n+            } else {\n+                throw new AccountsException(\"Could not fetch OAuth Configuration\");\n             }\n \n+        } catch (Exception e) {\n+\n+            loginResponse = CUSTOM_SERVER_RESPONSE.withMessage(e.getMessage());", "originalCommit": "0a9617512e14de9013978d4819e802860fda12fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8872665d7b47ce0cdff3e29d13e0ea6ab421953", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/login/task/RemoteLoginTask.java b/opensrp-app/src/main/java/org/smartregister/login/task/RemoteLoginTask.java\nindex 1abe4210..c1ac8883 100644\n--- a/opensrp-app/src/main/java/org/smartregister/login/task/RemoteLoginTask.java\n+++ b/opensrp-app/src/main/java/org/smartregister/login/task/RemoteLoginTask.java\n\n@@ -63,14 +63,20 @@ public class RemoteLoginTask extends AsyncTask<Void, Integer, LoginResponse> {\n         LoginResponse loginResponse;\n         try {\n \n-            AccountConfiguration accountConfiguration = CoreLibrary.getInstance().context().getHttpAgent().fetchOAuthConfiguration();\n+            AccountConfiguration accountConfiguration = getOpenSRPContext().getHttpAgent().fetchOAuthConfiguration();\n \n             boolean isKeycloakConfigured = accountConfiguration != null;\n \n+            //Persist config resources\n+            SharedPreferences.Editor sharedPrefEditor = getOpenSRPContext().allSharedPreferences().getPreferences().edit();\n+            sharedPrefEditor.putBoolean(AccountHelper.CONFIGURATION_CONSTANTS.IS_KEYCLOAK_CONFIGURED, isKeycloakConfigured);\n+            sharedPrefEditor.apply();\n+\n+\n             if (!isKeycloakConfigured) {\n                 accountConfiguration = new AccountConfiguration();\n                 accountConfiguration.setGrantTypesSupported(Arrays.asList(AccountHelper.OAUTH.GRANT_TYPE.PASSWORD));\n-                accountConfiguration.setTokenEndpoint(CoreLibrary.getInstance().context().configuration().dristhiBaseURL() + AccountHelper.OAUTH.TOKEN_ENDPOINT);\n+                accountConfiguration.setTokenEndpoint(getOpenSRPContext().configuration().dristhiBaseURL() + AccountHelper.OAUTH.TOKEN_ENDPOINT);\n                 accountConfiguration.setAuthorizationEndpoint(\"\");\n                 accountConfiguration.setIssuerEndpoint(\"\");\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzMzU3MA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r455133570", "bodyText": "We shouldn't be storing password now not sure where this is used", "author": "githengi", "createdAt": "2020-07-15T15:18:24Z", "path": "opensrp-app/src/main/java/org/smartregister/security/PasswordHash.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.smartregister.security;\n+\n+/**\n+ * Created by ndegwamartin on 13/06/2020.\n+ */\n+public class PasswordHash {", "originalCommit": "0a9617512e14de9013978d4819e802860fda12fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "246694544c105d0388afb9894203a90e6faeb6d2", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/security/PasswordHash.java b/opensrp-app/src/main/java/org/smartregister/security/PasswordHash.java\ndeleted file mode 100644\nindex 5aa68412..00000000\n--- a/opensrp-app/src/main/java/org/smartregister/security/PasswordHash.java\n+++ /dev/null\n\n@@ -1,23 +0,0 @@\n-package org.smartregister.security;\n-\n-/**\n- * Created by ndegwamartin on 13/06/2020.\n- */\n-public class PasswordHash {\n-\n-    private byte[] salt;\n-    private byte[] password;\n-\n-    PasswordHash(byte[] salt, byte[] password) {\n-        this.salt = salt;\n-        this.password = password;\n-    }\n-\n-    public byte[] getSalt() {\n-        return salt;\n-    }\n-\n-    public byte[] getPassword() {\n-        return password;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNDEyOQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r455134129", "bodyText": "We shouldn't be saving the passwords now, so not sure we need these methods", "author": "githengi", "createdAt": "2020-07-15T15:19:08Z", "path": "opensrp-app/src/main/java/org/smartregister/security/SecurityHelper.java", "diffHunk": "@@ -0,0 +1,173 @@\n+package org.smartregister.security;\n+\n+import android.os.Build;\n+import android.text.Editable;\n+import android.util.Base64;\n+\n+import org.apache.commons.codec.CharEncoding;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.CharacterCodingException;\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetEncoder;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n+import java.security.spec.InvalidKeySpecException;\n+import java.security.spec.KeySpec;\n+import java.util.Arrays;\n+\n+import javax.crypto.SecretKeyFactory;\n+import javax.crypto.spec.PBEKeySpec;\n+\n+/**\n+ * Created by ndegwamartin on 04/06/2020.\n+ */\n+public class SecurityHelper {\n+\n+    private static final Charset CHARSET = Charset.forName(CharEncoding.UTF_8);\n+    public static final int ITERATION_COUNT = 200048;\n+\n+    /**\n+     * This method ensures that sensitive info can be collected for the edit text in a safer way\n+     */\n+    public static char[] readValue(Editable editable) {\n+\n+        char[] chars = new char[editable.length()];\n+        editable.getChars(0, editable.length(), chars, 0);\n+\n+        editable.clear();\n+\n+        return chars;\n+    }\n+\n+    /**\n+     * This method allows us to overwrite byte array data\n+     *\n+     * @param array character array\n+     */\n+    public static void clearArray(byte[] array) {\n+        if (array != null) {\n+            Arrays.fill(array, (byte) 0);\n+        }\n+    }\n+\n+    /**\n+     * This method allows us to overwrite byte array data thus removing original values from memory\n+     *\n+     * @param array character array\n+     */\n+    public static void clearArray(char[] array) {\n+        if (array != null) {\n+            Arrays.fill(array, '*');\n+        }\n+    }\n+\n+    /**\n+     * This method converts characters in the string buffer to byte array without creating a String object\n+     *\n+     * @param stringBuffer\n+     * @return an array of bytes , a conversion from the string buffer\n+     */\n+\n+    public static byte[] toBytes(StringBuffer stringBuffer) throws CharacterCodingException {\n+\n+        CharsetEncoder encoder = CHARSET.newEncoder();\n+\n+        CharBuffer buffer = CharBuffer.wrap(stringBuffer);\n+\n+        ByteBuffer bytesBuffer = encoder.encode(buffer);\n+\n+        byte[] bytes = bytesBuffer.array();\n+\n+        clearArray(bytesBuffer.array());\n+\n+        clearStringBuffer(stringBuffer);\n+\n+        return bytes;\n+    }\n+\n+    private static void clearStringBuffer(StringBuffer stringBuffer) {\n+        stringBuffer.setLength(0);\n+        stringBuffer.append(\"*\");\n+    }\n+\n+    /**\n+     * This method converts characters in the char array buffer to a byte array\n+     *\n+     * @param chars array\n+     * @return an array of bytes, a conversion from the chars array\n+     */\n+    public static byte[] toBytes(char[] chars) {\n+        CharBuffer charBuffer = CharBuffer.wrap(chars);\n+\n+        ByteBuffer byteBuffer = CHARSET.encode(charBuffer);\n+\n+        byte[] bytes = Arrays.copyOfRange(byteBuffer.array(), byteBuffer.position(), byteBuffer.limit());\n+\n+        clearArray(byteBuffer.array());\n+\n+        return bytes;\n+\n+    }\n+\n+    /**\n+     * This method converts characters in the byte array buffer to a char array\n+     *\n+     * @param bytes array\n+     * @return an array of chars, a conversion from the bytes array\n+     */\n+    public static char[] toChars(byte[] bytes) {\n+\n+        char[] convertedChar = new char[bytes.length];\n+        for (int i = 0; i < bytes.length; i++) {\n+            convertedChar[i] = (char) bytes[i];\n+        }\n+\n+        return convertedChar;\n+    }\n+\n+    /**\n+     * @param password password to hash\n+     * @return Password Hash object containing the bytes of the salt and the hashed password\n+     * @throws NoSuchAlgorithmException when the Android API level doesn't support the specified Algorithm\n+     * @throws InvalidKeySpecException  when the Key used for generation has an invalid configuration\n+     */\n+    public static PasswordHash getPasswordHash(char[] password) throws NoSuchAlgorithmException, InvalidKeySpecException {\n+\n+        byte[] salt = new byte[128];\n+\n+        SecureRandom secureRandom = new SecureRandom();\n+        secureRandom.nextBytes(salt);\n+\n+        return new PasswordHash(salt, hashPassword(password, salt));\n+    }\n+\n+    /**\n+     * @param password password to hash\n+     * @return byte array of the bytes of the salt and the hashed password\n+     */\n+    public static byte[] hashPassword(char[] password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {\n+\n+        int keyLength = Build.VERSION.SDK_INT >= Build.VERSION_CODES.O ? 256 : 160;\n+\n+        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O ? \"PBKDF2withHmacSHA256\" : \"PBKDF2WithHmacSHA1\");\n+\n+        KeySpec pbKeySpec = new PBEKeySpec(password, salt, ITERATION_COUNT, keyLength);\n+\n+        return secretKeyFactory.generateSecret(pbKeySpec).getEncoded();\n+    }", "originalCommit": "0a9617512e14de9013978d4819e802860fda12fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f8872665d7b47ce0cdff3e29d13e0ea6ab421953", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/security/SecurityHelper.java b/opensrp-app/src/main/java/org/smartregister/security/SecurityHelper.java\nindex 8ba95e78..d4adbe87 100644\n--- a/opensrp-app/src/main/java/org/smartregister/security/SecurityHelper.java\n+++ b/opensrp-app/src/main/java/org/smartregister/security/SecurityHelper.java\n\n@@ -4,7 +4,10 @@ import android.os.Build;\n import android.text.Editable;\n import android.util.Base64;\n \n+import net.sqlcipher.database.SQLiteDatabase;\n+\n import org.apache.commons.codec.CharEncoding;\n+import org.apache.commons.lang3.RandomStringUtils;\n import org.apache.commons.lang3.StringUtils;\n \n import java.nio.ByteBuffer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0MDM3OQ==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r455140379", "bodyText": "You could use Timber string formatting e.g Timber.e(\"Image %s\",path)\"", "author": "githengi", "createdAt": "2020-07-15T15:27:07Z", "path": "opensrp-app/src/main/java/org/smartregister/service/ImageUploadSyncService.java", "diffHunk": "@@ -40,6 +42,8 @@ protected void onHandleIntent(Intent intent) {\n                                 + AllConstants.PROFILE_IMAGES_UPLOAD_PATH, profileImages.get(i));\n                 if (response.contains(\"success\")) {\n                     imageRepo.close(profileImages.get(i).getImageid());\n+                } else {\n+                    Timber.e(new StringBuilder(\"Image Upload: could NOT upload image ID: \").append(profileImages.get(i).getImageid()).append(\" PATH: \").append(profileImages.get(i).getFilepath()).toString());", "originalCommit": "0a9617512e14de9013978d4819e802860fda12fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNTMzNA==", "url": "https://github.com/opensrp/opensrp-client-core/pull/515#discussion_r456325334", "bodyText": "Fixed", "author": "ndegwamartin", "createdAt": "2020-07-17T09:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0MDM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f8872665d7b47ce0cdff3e29d13e0ea6ab421953", "chunk": "diff --git a/opensrp-app/src/main/java/org/smartregister/service/ImageUploadSyncService.java b/opensrp-app/src/main/java/org/smartregister/service/ImageUploadSyncService.java\nindex 69114684..95b7b8a1 100644\n--- a/opensrp-app/src/main/java/org/smartregister/service/ImageUploadSyncService.java\n+++ b/opensrp-app/src/main/java/org/smartregister/service/ImageUploadSyncService.java\n\n@@ -43,7 +43,8 @@ public class ImageUploadSyncService extends IntentService {\n                 if (response.contains(\"success\")) {\n                     imageRepo.close(profileImages.get(i).getImageid());\n                 } else {\n-                    Timber.e(new StringBuilder(\"Image Upload: could NOT upload image ID: \").append(profileImages.get(i).getImageid()).append(\" PATH: \").append(profileImages.get(i).getFilepath()).toString());\n+                    Timber.e(\"Image Upload: could NOT upload image ID: %s %s %s \", profileImages.get(i).getImageid(), \" PATH: \", profileImages.get(i).getFilepath());\n+\n                 }\n             }\n         } catch (Exception e) {\n"}}, {"oid": "87f9bcb85c2ba18faac3bca188c7c4855fbdf6af", "url": "https://github.com/opensrp/opensrp-client-core/commit/87f9bcb85c2ba18faac3bca188c7c4855fbdf6af", "message": "Fix bug :bug:\n- Fix bug with verify authorization causing premature return when\nprocessing", "committedDate": "2020-07-15T18:50:16Z", "type": "forcePushed"}, {"oid": "399439ce7071cf3ff5e684f963c0da7dd00fcf06", "url": "https://github.com/opensrp/opensrp-client-core/commit/399439ce7071cf3ff5e684f963c0da7dd00fcf06", "message": "Code clean up\n- Clean up Authentication logic classes\n- Fix failing tests", "committedDate": "2020-07-17T09:35:26Z", "type": "forcePushed"}, {"oid": "2b8d0f31294f398a818a85bb762a2025bb9a6142", "url": "https://github.com/opensrp/opensrp-client-core/commit/2b8d0f31294f398a818a85bb762a2025bb9a6142", "message": "Refactor authentication logic\n- Separate local device authentication from database encryption/authentication\n- Refactor all password refs to byte array\n- Fix tests\n\nSigned-off-by: Martin Ndegwa <ndegwamartin@gmail.com>", "committedDate": "2020-07-20T15:45:53Z", "type": "forcePushed"}, {"oid": "40c9be6fb5ea224cc6993d76b677943037ebdb69", "url": "https://github.com/opensrp/opensrp-client-core/commit/40c9be6fb5ea224cc6993d76b677943037ebdb69", "message": ":sparkles: Add database encryption migration\n- Add support for migrating database encryption keys\n- Add support to handle account removal gracefully by logging out user\n- Clean up code", "committedDate": "2020-07-21T13:57:50Z", "type": "forcePushed"}, {"oid": "974a4d7ce878492fe1c53e7d3da7fc625dd7a259", "url": "https://github.com/opensrp/opensrp-client-core/commit/974a4d7ce878492fe1c53e7d3da7fc625dd7a259", "message": "Fix failing build white_check_mark\n- Fix tests", "committedDate": "2020-07-23T06:19:18Z", "type": "forcePushed"}, {"oid": "64c4a151cfa2256fc30b43ca8677172ecb444ce9", "url": "https://github.com/opensrp/opensrp-client-core/commit/64c4a151cfa2256fc30b43ca8677172ecb444ce9", "message": "Fix failing build :white_check_mark:\n- Fix tests", "committedDate": "2020-07-23T06:21:13Z", "type": "forcePushed"}, {"oid": "246694544c105d0388afb9894203a90e6faeb6d2", "url": "https://github.com/opensrp/opensrp-client-core/commit/246694544c105d0388afb9894203a90e6faeb6d2", "message": "Clean up unused file", "committedDate": "2020-08-05T07:06:18Z", "type": "commit"}, {"oid": "abd54bd799f0f0876f03a251c07bd84ff808ed0d", "url": "https://github.com/opensrp/opensrp-client-core/commit/abd54bd799f0f0876f03a251c07bd84ff808ed0d", "message": "Implement account authenticator", "committedDate": "2020-08-05T07:06:18Z", "type": "commit"}, {"oid": "75e54a7981fafd8adc12268dd452d9fef40b2740", "url": "https://github.com/opensrp/opensrp-client-core/commit/75e54a7981fafd8adc12268dd452d9fef40b2740", "message": "Implement account service and helpers", "committedDate": "2020-08-05T07:06:18Z", "type": "commit"}, {"oid": "dd3d2da96e01cd97760f3a441e415e7ce6c7175c", "url": "https://github.com/opensrp/opensrp-client-core/commit/dd3d2da96e01cd97760f3a441e415e7ce6c7175c", "message": "Migrate login\nMigrate login to oauth2\nImplement configuration helpers\nUpdate Manifest and properties configs", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "c0b858934a0bc165fec2575bf7d67c4755a11104", "url": "https://github.com/opensrp/opensrp-client-core/commit/c0b858934a0bc165fec2575bf7d67c4755a11104", "message": "Migrate user service\nClean up update utils", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "3d9c7755afe16bdbc90523489e990ea30d275276", "url": "https://github.com/opensrp/opensrp-client-core/commit/3d9c7755afe16bdbc90523489e990ea30d275276", "message": "Implement login demo via sample app for oauth", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "e8382b2ab111640dddb25b969fc2e50ce9e08e2c", "url": "https://github.com/opensrp/opensrp-client-core/commit/e8382b2ab111640dddb25b969fc2e50ce9e08e2c", "message": "Refactor HTTPAgent\nFix failing unit tests", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "721420632c4e2d097074b390ea117706214f8f98", "url": "https://github.com/opensrp/opensrp-client-core/commit/721420632c4e2d097074b390ea117706214f8f98", "message": "Code clean up", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "75290cf10f76b59957c48a8ae4f4486ddcbb90fd", "url": "https://github.com/opensrp/opensrp-client-core/commit/75290cf10f76b59957c48a8ae4f4486ddcbb90fd", "message": "Refactor authentication mechanism to work for Keycloak", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "b1eeee1d6ac9d9f7644fe3766cb6f87351d6d138", "url": "https://github.com/opensrp/opensrp-client-core/commit/b1eeee1d6ac9d9f7644fe3766cb6f87351d6d138", "message": "Remove all stored password references", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "60a1c78fccc227261316e351057b94c8c4c5e9c2", "url": "https://github.com/opensrp/opensrp-client-core/commit/60a1c78fccc227261316e351057b94c8c4c5e9c2", "message": "Fix error dialog rendering multiple times at a go", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "4e2823378363582c6595ac425e43625297a61cd7", "url": "https://github.com/opensrp/opensrp-client-core/commit/4e2823378363582c6595ac425e43625297a61cd7", "message": "Fix bug missing tag level on location hierarchy", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "47ffabfeeeb9df0d17b2d3c5650f3cba776eaafe", "url": "https://github.com/opensrp/opensrp-client-core/commit/47ffabfeeeb9df0d17b2d3c5650f3cba776eaafe", "message": "Update OAuth implementation\n- Refactor refresh token and verify login logic\n- Add support for Spring OAuth Fallback if keycloak not supported", "committedDate": "2020-08-05T07:06:53Z", "type": "commit"}, {"oid": "428792a34c0d13d3d7b8c0867956edae0703298e", "url": "https://github.com/opensrp/opensrp-client-core/commit/428792a34c0d13d3d7b8c0867956edae0703298e", "message": "Fix profile image loading\nAdd add http request header param enums", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "ba23de2dd455fa9716bb1fa6445558f94f09c0f6", "url": "https://github.com/opensrp/opensrp-client-core/commit/ba23de2dd455fa9716bb1fa6445558f94f09c0f6", "message": "Optimization, Refactor and unit testing\n- Optimize upstream data processing for file uploads\n- Refactor for maintainability\n- Unit testing", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "a7477ef0323ef65934cd9df5a54254b7ec1657c0", "url": "https://github.com/opensrp/opensrp-client-core/commit/a7477ef0323ef65934cd9df5a54254b7ec1657c0", "message": "Account Helper Unit test", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "9de9d9410c57ae743de96e3809ac93d603c45cfc", "url": "https://github.com/opensrp/opensrp-client-core/commit/9de9d9410c57ae743de96e3809ac93d603c45cfc", "message": "HTTPAgent Unit tests\n- Add more unit test cases", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "f91d166537991efd386cc9d5a64272f181f2e25f", "url": "https://github.com/opensrp/opensrp-client-core/commit/f91d166537991efd386cc9d5a64272f181f2e25f", "message": "CI Configuration updates\n- Add codacy configuration file\n- Rename test case", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "63a7ca66f80253b5fd8157489b551f45f466f1d9", "url": "https://github.com/opensrp/opensrp-client-core/commit/63a7ca66f80253b5fd8157489b551f45f466f1d9", "message": "Fixed/Implment code review change requests on HTTP Agent test\n- Renamed test case\n- Refactored test case logic", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "fa29df3ea93cae8f064df26d146cf3c13e6a8dc0", "url": "https://github.com/opensrp/opensrp-client-core/commit/fa29df3ea93cae8f064df26d146cf3c13e6a8dc0", "message": "Remove unused imports", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "a9e592cc63b1aa1489dd445e11e9b8d457849ccb", "url": "https://github.com/opensrp/opensrp-client-core/commit/a9e592cc63b1aa1489dd445e11e9b8d457849ccb", "message": "Refactor to remove duplicate code : DRY", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "599b4c297881030dad9f38a6f29c13bcc95f8bc9", "url": "https://github.com/opensrp/opensrp-client-core/commit/599b4c297881030dad9f38a6f29c13bcc95f8bc9", "message": "Add unit tests\n- Add unit tests for HTTPAgent.downloadFormUrl", "committedDate": "2020-08-05T07:07:31Z", "type": "commit"}, {"oid": "c9c4a0df78c261f17a269aa253bb48cb43e18d95", "url": "https://github.com/opensrp/opensrp-client-core/commit/c9c4a0df78c261f17a269aa253bb48cb43e18d95", "message": "Refactor client core : Remove password type String\n- Remove type String for password processing to mitigates against the heap dump attack vector exposed by Java String type\n- Fix unit tests\n\nSigned-off-by: Martin Ndegwa <ndegwamartin@gmail.com>", "committedDate": "2020-08-05T07:08:46Z", "type": "commit"}, {"oid": "b09d8613fc02fec023ee63634ac5b78e43501e71", "url": "https://github.com/opensrp/opensrp-client-core/commit/b09d8613fc02fec023ee63634ac5b78e43501e71", "message": "Fix unit test", "committedDate": "2020-08-05T07:08:46Z", "type": "commit"}, {"oid": "658aef8e2b4a61f2563a329e6252347327abc472", "url": "https://github.com/opensrp/opensrp-client-core/commit/658aef8e2b4a61f2563a329e6252347327abc472", "message": "HTTP Agent unit tests - Testing Tuesday\n- Add unit test for http image post/ upload", "committedDate": "2020-08-05T07:08:46Z", "type": "commit"}, {"oid": "c8d011445cb24bc0418f70c18335824392a7c112", "url": "https://github.com/opensrp/opensrp-client-core/commit/c8d011445cb24bc0418f70c18335824392a7c112", "message": "Refactor Verify Authorization\n- Add support for verifying if account disabled by Admin\n- Update logout", "committedDate": "2020-08-05T07:12:04Z", "type": "commit"}, {"oid": "c2bbcc546fd46ef0326f4143f8f977e81911f696", "url": "https://github.com/opensrp/opensrp-client-core/commit/c2bbcc546fd46ef0326f4143f8f977e81911f696", "message": "Update Verify Authorization\n- Add backward compatibility for legacy implementation\n- Add unit tests\n- Fix codacy issues", "committedDate": "2020-08-05T07:12:04Z", "type": "commit"}, {"oid": "34c14a876e4d3a786fff18e134c0068bded65a9a", "url": "https://github.com/opensrp/opensrp-client-core/commit/34c14a876e4d3a786fff18e134c0068bded65a9a", "message": "Update artifact to correct version", "committedDate": "2020-08-05T07:12:25Z", "type": "commit"}, {"oid": "0de5f3580c9a2747e90c97317e1e59d82fc4c50e", "url": "https://github.com/opensrp/opensrp-client-core/commit/0de5f3580c9a2747e90c97317e1e59d82fc4c50e", "message": "Update Arabic and French translations", "committedDate": "2020-08-05T07:12:25Z", "type": "commit"}, {"oid": "090bb32c53e407d6a68c72536bc19a1ee6dc690c", "url": "https://github.com/opensrp/opensrp-client-core/commit/090bb32c53e407d6a68c72536bc19a1ee6dc690c", "message": "Location picker show location tag\n- Add support for configurability of showing location tags alongside\nlocations on picker tree\n- Documentation and tests", "committedDate": "2020-08-05T07:12:25Z", "type": "commit"}, {"oid": "b6b98cbb85699f2f65619a207b9c612230115714", "url": "https://github.com/opensrp/opensrp-client-core/commit/b6b98cbb85699f2f65619a207b9c612230115714", "message": "reset android manifest config", "committedDate": "2020-08-05T07:12:25Z", "type": "commit"}, {"oid": "8bbf545e7a0ec711a3206006ae4b9146a42da51b", "url": "https://github.com/opensrp/opensrp-client-core/commit/8bbf545e7a0ec711a3206006ae4b9146a42da51b", "message": "Fix clear app settings bug\n- Fix app crashes on login after app manually reset", "committedDate": "2020-08-05T07:12:26Z", "type": "commit"}, {"oid": "56b13f8fa40a83973093d99d2cbdf725ac111370", "url": "https://github.com/opensrp/opensrp-client-core/commit/56b13f8fa40a83973093d99d2cbdf725ac111370", "message": "Update Manifest configuration\n- Add explicit permissions for declared components", "committedDate": "2020-08-05T07:12:26Z", "type": "commit"}, {"oid": "1d4e6e43c0c024878288ff66240a3c3ce0d4e173", "url": "https://github.com/opensrp/opensrp-client-core/commit/1d4e6e43c0c024878288ff66240a3c3ce0d4e173", "message": "Fix build error\n- Remove multidex declaration", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "cd93e8acff40c94c78b6e72c41eda5566b4f0879", "url": "https://github.com/opensrp/opensrp-client-core/commit/cd93e8acff40c94c78b6e72c41eda5566b4f0879", "message": "Support for local Multi-tenancy\n- Refactor offline multi tenancy implementation for same Team Members\n- Adds support for No need to remotely authenticate if all team members had logged in device previously", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "75cded41ec3d2589fe0be69ed1caf434526ebcf4", "url": "https://github.com/opensrp/opensrp-client-core/commit/75cded41ec3d2589fe0be69ed1caf434526ebcf4", "message": "Refactor forced logout re-authentication\n- Refactor Re-Authentication to use Account manager\n- For clean up/Maintainalibility", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "dd367d9594ae4a46530bcabb642786e97b7ce5e1", "url": "https://github.com/opensrp/opensrp-client-core/commit/dd367d9594ae4a46530bcabb642786e97b7ce5e1", "message": "Implement password hashing\n- Implement password salting and hashing for offline authentication", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "e3ca2b498b15a2d37fee12e0a3d49c96874589a8", "url": "https://github.com/opensrp/opensrp-client-core/commit/e3ca2b498b15a2d37fee12e0a3d49c96874589a8", "message": "Migrate Sample app to new core library", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "d03f352b3cf4c8a35ebeb85a972426b1eba46fe8", "url": "https://github.com/opensrp/opensrp-client-core/commit/d03f352b3cf4c8a35ebeb85a972426b1eba46fe8", "message": "Refactor local login\n- Refactor local login to run in backgroud\n- Fixes UI freeze during offline Authentication", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "d5aee185c2b11a5d63b608b3617d40d2c2f16e61", "url": "https://github.com/opensrp/opensrp-client-core/commit/d5aee185c2b11a5d63b608b3617d40d2c2f16e61", "message": "Support for local Multi-tenancy\n- Refactor offline multi tenancy implementation for same Team Members\n- Adds support for No need to remotely authenticate if all team members had logged in device previously", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "2172f350c579c3d4ab033e215f295b90ab41fcf5", "url": "https://github.com/opensrp/opensrp-client-core/commit/2172f350c579c3d4ab033e215f295b90ab41fcf5", "message": "Support for specifying key-value metadata map when launching form\n- Add support for key-value pairs for start JSON form - overload startFormActivity\n- Refactor LocationHelper to use List interface instead of ArrayList\n- Expose AllowedLevels and DefaultLocationId fields on LocationHelper\n\nCo-authored-by: Martin Ndegwa <ndegwamartin@gmail.com>", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "8db5c2d92cc1beff5c1bff8f2e7fd50caff02d7e", "url": "https://github.com/opensrp/opensrp-client-core/commit/8db5c2d92cc1beff5c1bff8f2e7fd50caff02d7e", "message": "Add unit tests\n- Add unit tests for startFormActivity with map metadata params\n- Refactor tests to use List interface instead of ArrayList class\n\nCo-authored-by: Martin Ndegwa <ndegwamartin@gmail.com>", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "4b18d628a2b29f8599dbfd8ed08782b6cfa313ce", "url": "https://github.com/opensrp/opensrp-client-core/commit/4b18d628a2b29f8599dbfd8ed08782b6cfa313ce", "message": "Fix Codacy issues", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "f3538c87f9fd708e700048c609ea63fd3350e82e", "url": "https://github.com/opensrp/opensrp-client-core/commit/f3538c87f9fd708e700048c609ea63fd3350e82e", "message": "Add unit tests for\n- getAllowedLevels\n- getDefaultLocationLevel\n- getOpenMrsLocationHierarchy", "committedDate": "2020-08-05T07:13:04Z", "type": "commit"}, {"oid": "4e64270da54c0d6d492654f2390f2fcbaf7a176e", "url": "https://github.com/opensrp/opensrp-client-core/commit/4e64270da54c0d6d492654f2390f2fcbaf7a176e", "message": "Fix failing build\n- Fix failing tests", "committedDate": "2020-08-05T07:13:29Z", "type": "commit"}, {"oid": "4ecdc70c5e12a39bd933e083c1563c4721c7f6be", "url": "https://github.com/opensrp/opensrp-client-core/commit/4ecdc70c5e12a39bd933e083c1563c4721c7f6be", "message": "Codacy clean up", "committedDate": "2020-08-05T07:13:29Z", "type": "commit"}, {"oid": "e7c511bce976962b8e0d01c601a12e87ed8cb0c2", "url": "https://github.com/opensrp/opensrp-client-core/commit/e7c511bce976962b8e0d01c601a12e87ed8cb0c2", "message": "Fix failing build\n- Fix unit tests\n- Downgrade travis config to Android API 27", "committedDate": "2020-08-05T07:13:29Z", "type": "commit"}, {"oid": "f2632c19442feb4f203859bd97fa52da4a3e2a0b", "url": "https://github.com/opensrp/opensrp-client-core/commit/f2632c19442feb4f203859bd97fa52da4a3e2a0b", "message": "Fix bug :bug:\n- Fix bug with verify authorization causing premature return when\nprocessing", "committedDate": "2020-08-05T07:13:29Z", "type": "commit"}, {"oid": "e2ae820c03a52d4b063b0d001a70853a7da0ab95", "url": "https://github.com/opensrp/opensrp-client-core/commit/e2ae820c03a52d4b063b0d001a70853a7da0ab95", "message": "Authentication with oauth2 credentials\n- Add conditional for sending client id and secret depending on whether\nkeycloak is configured or not\n- Fix HTTPAgent unit tests", "committedDate": "2020-08-05T07:14:53Z", "type": "commit"}, {"oid": "366ecc9ecba2376fa3510604733d7e9ed54cbd10", "url": "https://github.com/opensrp/opensrp-client-core/commit/366ecc9ecba2376fa3510604733d7e9ed54cbd10", "message": "Login Activity clean up\n- Remove deprecated LoginActivity class and dependencies", "committedDate": "2020-08-05T07:14:53Z", "type": "commit"}, {"oid": "adf7b83575b714003bebdeb176285230d4bfb1fe", "url": "https://github.com/opensrp/opensrp-client-core/commit/adf7b83575b714003bebdeb176285230d4bfb1fe", "message": "Code clean up\n- Clean up Authentication logic classes\n- Fix failing tests", "committedDate": "2020-08-05T07:14:53Z", "type": "commit"}, {"oid": "ef043839aa298e481a3430cd6b31ece8ff81edab", "url": "https://github.com/opensrp/opensrp-client-core/commit/ef043839aa298e481a3430cd6b31ece8ff81edab", "message": "Fix local authentication bug\n- Fix issue local login not working for team and location auth config types\n- Refactor to use bytes for all password refs", "committedDate": "2020-08-05T07:15:49Z", "type": "commit"}, {"oid": "326e5e3d460842c675ce0a76b0dfbc50ecc21526", "url": "https://github.com/opensrp/opensrp-client-core/commit/326e5e3d460842c675ce0a76b0dfbc50ecc21526", "message": "Refactor authentication logic\n- Separate local device authentication from database encryption/authentication\n- Refactor all password refs to byte array\n- Fix tests\n\nSigned-off-by: Martin Ndegwa <ndegwamartin@gmail.com>", "committedDate": "2020-08-05T08:09:44Z", "type": "commit"}, {"oid": "95cf026eff890437a2845935d96151f47c3aca6e", "url": "https://github.com/opensrp/opensrp-client-core/commit/95cf026eff890437a2845935d96151f47c3aca6e", "message": "Fix failing test", "committedDate": "2020-08-05T08:09:44Z", "type": "commit"}, {"oid": "624da51115736d0596f212341e7477ed1ffa85e3", "url": "https://github.com/opensrp/opensrp-client-core/commit/624da51115736d0596f212341e7477ed1ffa85e3", "message": ":bug: Fix verify authorization bug\n- Legacy Verify authorization shows disable user message prematurely\n- Refactor getEncryptedValue method name\n- Clean up unused method/tests", "committedDate": "2020-08-05T08:11:58Z", "type": "commit"}, {"oid": "e8fbe3485aff72ae6f129577e51759af2ab3361d", "url": "https://github.com/opensrp/opensrp-client-core/commit/e8fbe3485aff72ae6f129577e51759af2ab3361d", "message": ":sparkles: Add database encryption migration\n- Add support for migrating database encryption keys\n- Add support to handle account removal gracefully by logging out user\n- Clean up code", "committedDate": "2020-08-05T08:12:28Z", "type": "commit"}, {"oid": "ee673a71de8ae75a60aa388b4a48ffda08986c68", "url": "https://github.com/opensrp/opensrp-client-core/commit/ee673a71de8ae75a60aa388b4a48ffda08986c68", "message": "Fix failing build\n- Migrate to newer version of plan evaluator library", "committedDate": "2020-08-05T08:12:28Z", "type": "commit"}, {"oid": "962abac5324c961c84fe551ca268a9c640c680a0", "url": "https://github.com/opensrp/opensrp-client-core/commit/962abac5324c961c84fe551ca268a9c640c680a0", "message": ":bug: Fix crash on fresh install\n- Fix app crashing for fresh installs\n`", "committedDate": "2020-08-05T08:12:28Z", "type": "commit"}, {"oid": "23832d0ca755d2479325cbcd572a97e37a84a0f3", "url": "https://github.com/opensrp/opensrp-client-core/commit/23832d0ca755d2479325cbcd572a97e37a84a0f3", "message": "Refactor authentication logic\n- Move credentials helper methods to helper class\n- Fix automatic logout an Account Manager account removal", "committedDate": "2020-08-05T08:12:50Z", "type": "commit"}, {"oid": "abeacd7dc1148b96bd576e07f6453e5f187c8763", "url": "https://github.com/opensrp/opensrp-client-core/commit/abeacd7dc1148b96bd576e07f6453e5f187c8763", "message": "DB Encryption migration feature :sparkles:\n- Add feature to support migration of DB encryption for devices in use\n- Unit tests\n- Fix bug: auto-logout inconsistent on account removal from account manager\n- Update autolog out alert message rendering", "committedDate": "2020-08-05T08:13:09Z", "type": "commit"}, {"oid": "1f58d9f74f653432d4b29b4adea6deaa5545b871", "url": "https://github.com/opensrp/opensrp-client-core/commit/1f58d9f74f653432d4b29b4adea6deaa5545b871", "message": "Codacy clean up :recycle:", "committedDate": "2020-08-05T08:13:16Z", "type": "commit"}, {"oid": "f9506d78530ed04aa47fe2a33f5a31d69278c099", "url": "https://github.com/opensrp/opensrp-client-core/commit/f9506d78530ed04aa47fe2a33f5a31d69278c099", "message": "Fix failing build :white_check_mark:\n- Fix tests", "committedDate": "2020-08-05T10:29:02Z", "type": "forcePushed"}, {"oid": "7032990e01ec8d40ab9e4d181a5641de8fe2e16e", "url": "https://github.com/opensrp/opensrp-client-core/commit/7032990e01ec8d40ab9e4d181a5641de8fe2e16e", "message": "Fix failing build :white_check_mark:\n- Fix tests", "committedDate": "2020-08-05T10:45:28Z", "type": "forcePushed"}, {"oid": "065a4731d04bea1aedd5896c0df04e421ccaf897", "url": "https://github.com/opensrp/opensrp-client-core/commit/065a4731d04bea1aedd5896c0df04e421ccaf897", "message": "Fix failing build :white_check_mark:\n- Fix tests", "committedDate": "2020-08-05T11:42:38Z", "type": "commit"}, {"oid": "065a4731d04bea1aedd5896c0df04e421ccaf897", "url": "https://github.com/opensrp/opensrp-client-core/commit/065a4731d04bea1aedd5896c0df04e421ccaf897", "message": "Fix failing build :white_check_mark:\n- Fix tests", "committedDate": "2020-08-05T11:42:38Z", "type": "forcePushed"}, {"oid": "d2159548420f3f49b48071ebd76e7532c239a111", "url": "https://github.com/opensrp/opensrp-client-core/commit/d2159548420f3f49b48071ebd76e7532c239a111", "message": "Add support for downloading all locations", "committedDate": "2020-08-14T18:06:49Z", "type": "commit"}, {"oid": "92b6ad6c15bccc1786f91d0f80361963ee32a05d", "url": "https://github.com/opensrp/opensrp-client-core/commit/92b6ad6c15bccc1786f91d0f80361963ee32a05d", "message": "Bump version up", "committedDate": "2020-08-14T18:07:11Z", "type": "commit"}, {"oid": "530d7abc901dd2e1a466b4eab7b5bc3ee7a2cf4e", "url": "https://github.com/opensrp/opensrp-client-core/commit/530d7abc901dd2e1a466b4eab7b5bc3ee7a2cf4e", "message": "Merge pull request #627 from OpenSRP/issue625-fetch-all-locations\n\nAdd Sync for All Locations to Device", "committedDate": "2020-08-18T14:12:20Z", "type": "commit"}, {"oid": "e5bd9d59428fa92f1f794cd5d2a9b08520ba9c27", "url": "https://github.com/opensrp/opensrp-client-core/commit/e5bd9d59428fa92f1f794cd5d2a9b08520ba9c27", "message": "Merge branch 'master' into issue283", "committedDate": "2020-08-19T08:05:34Z", "type": "commit"}, {"oid": "38beb07cef3ed740d1b7b51d61cfd03ae15bad87", "url": "https://github.com/opensrp/opensrp-client-core/commit/38beb07cef3ed740d1b7b51d61cfd03ae15bad87", "message": "Fix build :green_heart:", "committedDate": "2020-08-19T08:52:48Z", "type": "commit"}]}