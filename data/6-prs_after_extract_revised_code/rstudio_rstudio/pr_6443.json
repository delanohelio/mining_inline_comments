{"pr_number": 6443, "pr_title": "tutorial pane bugfixes", "pr_createdAt": "2020-03-10T23:28:22Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6443", "timeline": [{"oid": "42a5326ec8998580523002b56bedd91eb1e1f174", "url": "https://github.com/rstudio/rstudio/commit/42a5326ec8998580523002b56bedd91eb1e1f174", "message": "improve handling of tutorial URLs", "committedDate": "2020-03-10T22:06:30Z", "type": "commit"}, {"oid": "b7302d52236e3aa226e565f7c930f65a8d25656b", "url": "https://github.com/rstudio/rstudio/commit/b7302d52236e3aa226e565f7c930f65a8d25656b", "message": "monitor popped out tutorial windows", "committedDate": "2020-03-10T22:43:58Z", "type": "commit"}, {"oid": "ef059e0e6688a8274830816e004d952922db23f0", "url": "https://github.com/rstudio/rstudio/commit/ef059e0e6688a8274830816e004d952922db23f0", "message": "improve handling of popped-out tutorial windows", "committedDate": "2020-03-10T23:23:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY2OTYwOQ==", "url": "https://github.com/rstudio/rstudio/pull/6443#discussion_r390669609", "bodyText": "This feels pretty ugly, but I couldn't find a better way to get notified of a closed child window that worked both in server and desktop sessions.", "author": "kevinushey", "createdAt": "2020-03-10T23:30:52Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java", "diffHunk": "@@ -409,6 +447,74 @@ private final native void initTutorialJsCallbacks()\n       \n    }-*/;\n    \n+   private final native void initExternalWindowJsCallbacks(WindowEx window,\n+                                                           String tutorialUrl,\n+                                                           String tutorialName,\n+                                                           String tutorialPackage)\n+   /*-{\n+      \n+      // register this window\n+      $wnd.tutorialWindows = $wnd.tutorialWindows || {};\n+      $wnd.tutorialWindows[tutorialUrl] = {\n+         \"package\": tutorialPackage,\n+         \"name\": tutorialName,\n+         \"window\": window\n+      };\n+      \n+      // start polling for window closure", "originalCommit": "ef059e0e6688a8274830816e004d952922db23f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAyNDI5MA==", "url": "https://github.com/rstudio/rstudio/pull/6443#discussion_r391024290", "bodyText": "If you can get it working in server mode, there's a cheat for the desktop: have Qt tell you when a window is closed. This is how we handle closure of source windows.\n\n  \n    \n      rstudio/src/cpp/desktop/DesktopSatelliteWindow.cpp\n    \n    \n         Line 81\n      in\n      9679854\n    \n    \n    \n    \n\n        \n          \n           void SatelliteWindow::closeEvent(QCloseEvent *event)", "author": "jmcphers", "createdAt": "2020-03-11T14:45:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY2OTYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3733de8cf49a628c6d3d3de8d0ba049b0af003b5", "chunk": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\nindex 79dd97e409..756b93ddeb 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\n\n@@ -450,7 +458,8 @@ public class TutorialPane\n    private final native void initExternalWindowJsCallbacks(WindowEx window,\n                                                            String tutorialUrl,\n                                                            String tutorialName,\n-                                                           String tutorialPackage)\n+                                                           String tutorialPackage,\n+                                                           String windowName)\n    /*-{\n       \n       // register this window\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3MzM4Mw==", "url": "https://github.com/rstudio/rstudio/pull/6443#discussion_r390673383", "bodyText": "This is fine, but could be made more responsive (and avoid polling) by having the tutorial window notify us when it's closed. Is that feasible here? (IIRC we usually do this with something like ShinyDisconnectNotifier, but not sure if that's practical here since we don't wrap the tutorial in a frame we control)", "author": "jmcphers", "createdAt": "2020-03-10T23:43:52Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java", "diffHunk": "@@ -409,6 +447,74 @@ private final native void initTutorialJsCallbacks()\n       \n    }-*/;\n    \n+   private final native void initExternalWindowJsCallbacks(WindowEx window,\n+                                                           String tutorialUrl,\n+                                                           String tutorialName,\n+                                                           String tutorialPackage)\n+   /*-{\n+      \n+      // register this window\n+      $wnd.tutorialWindows = $wnd.tutorialWindows || {};\n+      $wnd.tutorialWindows[tutorialUrl] = {\n+         \"package\": tutorialPackage,\n+         \"name\": tutorialName,\n+         \"window\": window\n+      };\n+      \n+      // start polling for window closure\n+      var self = this;\n+      $wnd.tutorialWindowsCallback = $wnd.tutorialWindowsCallback || setInterval(function() {\n+         \n+         // stop any tutorials whose associated window was closed\n+         for (var url in $wnd.tutorialWindows)\n+         {\n+            var entry = $wnd.tutorialWindows[url];\n+            \n+            var window = entry[\"window\"];\n+            if (window.closed)\n+            {\n+               self.@org.rstudio.studio.client.workbench.views.tutorial.TutorialPane::stopTutorial(*)(url);\n+               delete $wnd.tutorialWindows[url];\n+            }\n+         }\n+         \n+         // stop polling if we have no more child windows\n+         var keys = Object.keys($wnd.tutorialWindows);\n+         if (keys.length === 0)\n+         {\n+            clearInterval($wnd.tutorialWindowsCallback);\n+            $wnd.tutorialWindowsCallback = null;\n+         }\n+         \n+      }, 500);", "originalCommit": "ef059e0e6688a8274830816e004d952922db23f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE4OTc4Mw==", "url": "https://github.com/rstudio/rstudio/pull/6443#discussion_r391189783", "bodyText": "Right -- we could just serve a separate page that wraps the tutorial in an <iframe> rather than navigating to the application directly, but that feels more expensive than I'd want to do for this PR.", "author": "kevinushey", "createdAt": "2020-03-11T18:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3MzM4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3733de8cf49a628c6d3d3de8d0ba049b0af003b5", "chunk": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\nindex 79dd97e409..756b93ddeb 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\n\n@@ -450,7 +458,8 @@ public class TutorialPane\n    private final native void initExternalWindowJsCallbacks(WindowEx window,\n                                                            String tutorialUrl,\n                                                            String tutorialName,\n-                                                           String tutorialPackage)\n+                                                           String tutorialPackage,\n+                                                           String windowName)\n    /*-{\n       \n       // register this window\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3MzQ3Ng==", "url": "https://github.com/rstudio/rstudio/pull/6443#discussion_r390673476", "bodyText": "Meant to be ===?", "author": "jmcphers", "createdAt": "2020-03-10T23:44:10Z", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java", "diffHunk": "@@ -409,6 +447,74 @@ private final native void initTutorialJsCallbacks()\n       \n    }-*/;\n    \n+   private final native void initExternalWindowJsCallbacks(WindowEx window,\n+                                                           String tutorialUrl,\n+                                                           String tutorialName,\n+                                                           String tutorialPackage)\n+   /*-{\n+      \n+      // register this window\n+      $wnd.tutorialWindows = $wnd.tutorialWindows || {};\n+      $wnd.tutorialWindows[tutorialUrl] = {\n+         \"package\": tutorialPackage,\n+         \"name\": tutorialName,\n+         \"window\": window\n+      };\n+      \n+      // start polling for window closure\n+      var self = this;\n+      $wnd.tutorialWindowsCallback = $wnd.tutorialWindowsCallback || setInterval(function() {\n+         \n+         // stop any tutorials whose associated window was closed\n+         for (var url in $wnd.tutorialWindows)\n+         {\n+            var entry = $wnd.tutorialWindows[url];\n+            \n+            var window = entry[\"window\"];\n+            if (window.closed)\n+            {\n+               self.@org.rstudio.studio.client.workbench.views.tutorial.TutorialPane::stopTutorial(*)(url);\n+               delete $wnd.tutorialWindows[url];\n+            }\n+         }\n+         \n+         // stop polling if we have no more child windows\n+         var keys = Object.keys($wnd.tutorialWindows);\n+         if (keys.length === 0)\n+         {\n+            clearInterval($wnd.tutorialWindowsCallback);\n+            $wnd.tutorialWindowsCallback = null;\n+         }\n+         \n+      }, 500);\n+      \n+   }-*/;\n+   \n+   private final native boolean focusExistingTutorialWindow(String tutorialName,\n+                                                            String tutorialPackage)\n+   /*-{\n+   \n+      var windows = $wnd.tutorialWindows || {};\n+      for (var url in windows)\n+      {\n+         var entry = $wnd.tutorialWindows[url];\n+         \n+         var match =\n+            entry[\"name\"] === tutorialName &&\n+            entry[\"package\"] == tutorialPackage;", "originalCommit": "ef059e0e6688a8274830816e004d952922db23f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3733de8cf49a628c6d3d3de8d0ba049b0af003b5", "chunk": "diff --git a/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java b/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\nindex 79dd97e409..756b93ddeb 100644\n--- a/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\n+++ b/src/gwt/src/org/rstudio/studio/client/workbench/views/tutorial/TutorialPane.java\n\n@@ -450,7 +458,8 @@ public class TutorialPane\n    private final native void initExternalWindowJsCallbacks(WindowEx window,\n                                                            String tutorialUrl,\n                                                            String tutorialName,\n-                                                           String tutorialPackage)\n+                                                           String tutorialPackage,\n+                                                           String windowName)\n    /*-{\n       \n       // register this window\n"}}, {"oid": "3733de8cf49a628c6d3d3de8d0ba049b0af003b5", "url": "https://github.com/rstudio/rstudio/commit/3733de8cf49a628c6d3d3de8d0ba049b0af003b5", "message": "use desktop APIs for activating window on desktop", "committedDate": "2020-03-11T18:35:29Z", "type": "commit"}, {"oid": "1a4f4aacc7bcfac5f924a90918be230700398591", "url": "https://github.com/rstudio/rstudio/commit/1a4f4aacc7bcfac5f924a90918be230700398591", "message": "fix '==='", "committedDate": "2020-03-11T18:43:06Z", "type": "commit"}]}