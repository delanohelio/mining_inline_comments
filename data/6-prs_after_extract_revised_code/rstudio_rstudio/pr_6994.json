{"pr_number": 6994, "pr_title": "don't use key property for older Qt", "pr_createdAt": "2020-05-28T21:19:27Z", "pr_url": "https://github.com/rstudio/rstudio/pull/6994", "timeline": [{"oid": "4172e603c87367233956a92564f997eb34d420b0", "url": "https://github.com/rstudio/rstudio/commit/4172e603c87367233956a92564f997eb34d420b0", "message": "don't use key property for older Qt", "committedDate": "2020-05-28T21:18:27Z", "type": "commit"}, {"oid": "50919cb1a154ddffc2168290fd85be975a41ee53", "url": "https://github.com/rstudio/rstudio/commit/50919cb1a154ddffc2168290fd85be975a41ee53", "message": "use static var (no need to recompute)", "committedDate": "2020-05-28T21:22:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMjE1MA==", "url": "https://github.com/rstudio/rstudio/pull/6994#discussion_r432132150", "bodyText": "I think the idiomatic way of doing this in Java is to override compareTo for your class.", "author": "jmcphers", "createdAt": "2020-05-28T21:24:09Z", "path": "src/gwt/src/org/rstudio/core/client/Version.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Version.java\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+package org.rstudio.core.client;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+// A helper class for parsing numeric versions.\n+public class Version\n+{\n+   public static final int compare(String lhs, String rhs)", "originalCommit": "4172e603c87367233956a92564f997eb34d420b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "630f8de9e2333985904cd73602cee78450dc4d48", "chunk": "diff --git a/src/gwt/src/org/rstudio/core/client/Version.java b/src/gwt/src/org/rstudio/core/client/Version.java\nindex 86551f5559..0c3e5f3c79 100644\n--- a/src/gwt/src/org/rstudio/core/client/Version.java\n+++ b/src/gwt/src/org/rstudio/core/client/Version.java\n\n@@ -18,28 +18,15 @@ import java.util.ArrayList;\n import java.util.List;\n \n // A helper class for parsing numeric versions.\n-public class Version\n+public class Version implements Comparable<Version>\n {\n    public static final int compare(String lhs, String rhs)\n    {\n       Version lhsVersion = new Version(lhs);\n       Version rhsVersion = new Version(rhs);\n-      \n-      int n = Math.max(lhsVersion.size(), rhsVersion.size());\n-      for (int i = 0; i < n; i++)\n-      {\n-         int lhsComponent = lhsVersion.component(i);\n-         int rhsComponent = rhsVersion.component(i);\n-         \n-         if (lhsComponent < rhsComponent)\n-            return -1;\n-         else if (lhsComponent > rhsComponent)\n-            return 1;\n-      }\n-      \n-      return 0;\n+      return lhsVersion.compareTo(rhsVersion);\n    }\n-   \n+      \n    private Version(String version)\n    {\n       components_ = new ArrayList<>();\n"}}, {"oid": "630f8de9e2333985904cd73602cee78450dc4d48", "url": "https://github.com/rstudio/rstudio/commit/630f8de9e2333985904cd73602cee78450dc4d48", "message": "implement Comparable interface", "committedDate": "2020-05-28T21:38:39Z", "type": "commit"}, {"oid": "bdff6ffffa97f1b792bef3a099c1661ad6daebab", "url": "https://github.com/rstudio/rstudio/commit/bdff6ffffa97f1b792bef3a099c1661ad6daebab", "message": "remove old unused class", "committedDate": "2020-05-28T21:40:35Z", "type": "commit"}]}