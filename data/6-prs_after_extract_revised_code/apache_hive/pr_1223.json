{"pr_number": 1223, "pr_title": "HIVE-23813 : Fix flaky tests due to JDO Exception", "pr_createdAt": "2020-07-08T08:43:38Z", "pr_url": "https://github.com/apache/hive/pull/1223", "timeline": [{"oid": "ba3dbec00f8f28439360c428961bebc8d23ce8b5", "url": "https://github.com/apache/hive/commit/ba3dbec00f8f28439360c428961bebc8d23ce8b5", "message": "HIVE-23813 : Fix flaky tests due to JDO Exception", "committedDate": "2020-07-08T08:41:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4NTg2MA==", "url": "https://github.com/apache/hive/pull/1223#discussion_r451485860", "bodyText": "I think this class should depend on a different config knob", "author": "kgyrtkirk", "createdAt": "2020-07-08T11:57:06Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java", "diffHunk": "@@ -63,13 +63,12 @@ public void run() {\n       if (!MetastoreConf.getBoolVar(conf, ConfVars.SCHEDULED_QUERIES_ENABLED)) {", "originalCommit": "ba3dbec00f8f28439360c428961bebc8d23ce8b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4NjIzMw==", "url": "https://github.com/apache/hive/pull/1223#discussion_r451486233", "bodyText": "please correct the comment in initialDelay method as well", "author": "kgyrtkirk", "createdAt": "2020-07-08T11:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4NTg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NTA5NA==", "url": "https://github.com/apache/hive/pull/1223#discussion_r451545094", "bodyText": "Metrics are always enabled by default. So didn't want to introduce a new config.\nThe metric collection depends if the scheduled queries are enabled. If not, there is no metric collection for replication as the primary key for the table is schedule id.", "author": "aasha", "createdAt": "2020-07-08T13:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4NTg2MA=="}], "type": "inlineReview", "revised_code": {"commit": "a621a5f9a30210ec206388cabb2cc1d880bce724", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java\nindex ba83aa4a9b..184d4e37c8 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java\n\n@@ -67,7 +66,7 @@ public void run() {\n       int maxRetainSecs = (int) MetastoreConf.getTimeVar(conf, ConfVars.REPL_METRICS_MAX_AGE, TimeUnit.SECONDS);\n       LOG.info(\"Cleaning up Metrics older than {} \", maxRetainSecs);\n       int deleteCnt = ms.deleteReplicationMetrics(maxRetainSecs);\n-      if (deleteCnt > 0L){\n+      if (deleteCnt > 0L) {\n         LOG.info(\"Number of deleted entries: {} \" + deleteCnt);\n       }\n     } catch (Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ4NjQ2Nw==", "url": "https://github.com/apache/hive/pull/1223#discussion_r451486467", "bodyText": "nit: space before {", "author": "kgyrtkirk", "createdAt": "2020-07-08T11:58:15Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java", "diffHunk": "@@ -63,13 +63,12 @@ public void run() {\n       if (!MetastoreConf.getBoolVar(conf, ConfVars.SCHEDULED_QUERIES_ENABLED)) {\n         return;\n       }\n-      LOG.debug(\"Cleaning up older Metrics\");\n       RawStore ms = HiveMetaStore.HMSHandler.getMSForConf(conf);\n-      int maxRetainSecs = (int) TimeUnit.DAYS.toSeconds(MetastoreConf.getTimeVar(conf,\n-        ConfVars.REPL_METRICS_MAX_AGE, TimeUnit.DAYS));\n+      int maxRetainSecs = (int) MetastoreConf.getTimeVar(conf, ConfVars.REPL_METRICS_MAX_AGE, TimeUnit.SECONDS);\n+      LOG.info(\"Cleaning up Metrics older than {} \", maxRetainSecs);\n       int deleteCnt = ms.deleteReplicationMetrics(maxRetainSecs);\n       if (deleteCnt > 0L){", "originalCommit": "ba3dbec00f8f28439360c428961bebc8d23ce8b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a621a5f9a30210ec206388cabb2cc1d880bce724", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java\nindex ba83aa4a9b..184d4e37c8 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ReplicationMetricsMaintTask.java\n\n@@ -67,7 +66,7 @@ public void run() {\n       int maxRetainSecs = (int) MetastoreConf.getTimeVar(conf, ConfVars.REPL_METRICS_MAX_AGE, TimeUnit.SECONDS);\n       LOG.info(\"Cleaning up Metrics older than {} \", maxRetainSecs);\n       int deleteCnt = ms.deleteReplicationMetrics(maxRetainSecs);\n-      if (deleteCnt > 0L){\n+      if (deleteCnt > 0L) {\n         LOG.info(\"Number of deleted entries: {} \" + deleteCnt);\n       }\n     } catch (Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ5MDg3Ng==", "url": "https://github.com/apache/hive/pull/1223#discussion_r451490876", "bodyText": "is this method supposed to be fast? (because ArrayList was created for a specified size)\n...anyway try not to throw away ObjectMapper instances right after use - ObjectMapper's first time use cost could be high", "author": "kgyrtkirk", "createdAt": "2020-07-08T12:06:57Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/repl/metric/MetricSink.java", "diffHunk": "@@ -121,6 +121,7 @@ public void run() {\n             ObjectMapper mapper = new ObjectMapper();", "originalCommit": "ba3dbec00f8f28439360c428961bebc8d23ce8b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a621a5f9a30210ec206388cabb2cc1d880bce724", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/repl/metric/MetricSink.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/repl/metric/MetricSink.java\nindex ca4758dc90..1eedf19469 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/repl/metric/MetricSink.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/repl/metric/MetricSink.java\n\n@@ -112,13 +112,13 @@ public void run() {\n           LOG.debug(\"Converting metrics to thrift metrics {} \", metrics.size());\n           int totalMetricsSize = metrics.size();\n           List<ReplicationMetrics> replicationMetricsList = new ArrayList<>(totalMetricsSize);\n+          ObjectMapper mapper = new ObjectMapper();\n           for (int index = 0; index < totalMetricsSize; index++) {\n             ReplicationMetric metric = metrics.removeFirst();\n             ReplicationMetrics persistentMetric = new ReplicationMetrics();\n             persistentMetric.setDumpExecutionId(metric.getDumpExecutionId());\n             persistentMetric.setScheduledExecutionId(metric.getScheduledExecutionId());\n             persistentMetric.setPolicy(metric.getPolicy());\n-            ObjectMapper mapper = new ObjectMapper();\n             persistentMetric.setProgress(mapper.writeValueAsString(metric.getProgress()));\n             persistentMetric.setMetadata(mapper.writeValueAsString(metric.getMetadata()));\n             LOG.debug(\"Metric to be persisted {} \", persistentMetric);\n"}}, {"oid": "a621a5f9a30210ec206388cabb2cc1d880bce724", "url": "https://github.com/apache/hive/commit/a621a5f9a30210ec206388cabb2cc1d880bce724", "message": "Resolved review comments", "committedDate": "2020-07-09T01:42:17Z", "type": "commit"}, {"oid": "a621a5f9a30210ec206388cabb2cc1d880bce724", "url": "https://github.com/apache/hive/commit/a621a5f9a30210ec206388cabb2cc1d880bce724", "message": "Resolved review comments", "committedDate": "2020-07-09T01:42:17Z", "type": "forcePushed"}]}