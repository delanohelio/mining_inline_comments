{"pr_number": 1431, "pr_title": "HIVE-24061: Improve llap task scheduling for better cache hit rate", "pr_createdAt": "2020-08-25T10:50:36Z", "pr_url": "https://github.com/apache/hive/pull/1431", "timeline": [{"oid": "22bb06b5acb24d48c00f719a5506a4880b320e1a", "url": "https://github.com/apache/hive/commit/22bb06b5acb24d48c00f719a5506a4880b320e1a", "message": "HIVE-24061: Improve llap task scheduling for better cache hit rate", "committedDate": "2020-08-25T10:45:30Z", "type": "commit"}, {"oid": "3afd9c81db76c140a635a950b8e3e39c01f4a7b5", "url": "https://github.com/apache/hive/commit/3afd9c81db76c140a635a950b8e3e39c01f4a7b5", "message": "HIVE-24061: Improve llap task scheduling for better cache hit rate", "committedDate": "2020-08-25T15:01:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYyNDk3Mg==", "url": "https://github.com/apache/hive/pull/1431#discussion_r476624972", "bodyText": "nit: to differentiate node vs cluster, rename this to isClusterCapacityFull?", "author": "prasanthj", "createdAt": "2020-08-25T17:38:16Z", "path": "llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java", "diffHunk": "@@ -251,6 +251,7 @@ public void setError(Void v, Throwable t) {\n \n   private final Lock scheduleLock = new ReentrantLock();\n   private final Condition scheduleCondition = scheduleLock.newCondition();\n+  private final AtomicBoolean isCapacityFull = new AtomicBoolean(false);", "originalCommit": "3afd9c81db76c140a635a950b8e3e39c01f4a7b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f1e0cf4d2d5a3ac8a33a5247c6285137c54f31c", "chunk": "diff --git a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\nindex 2cbe81a533..f5fd2cc0e2 100644\n--- a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n+++ b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n\n@@ -251,7 +251,7 @@ public void setError(Void v, Throwable t) {\n \n   private final Lock scheduleLock = new ReentrantLock();\n   private final Condition scheduleCondition = scheduleLock.newCondition();\n-  private final AtomicBoolean isCapacityFull = new AtomicBoolean(false);\n+  private final AtomicBoolean isClusterCapacityFull = new AtomicBoolean(false);\n   private final AtomicBoolean pendingScheduleInvocations = new AtomicBoolean(false);\n   private final ListeningExecutorService schedulerExecutor;\n   private final SchedulerCallable schedulerCallable = new SchedulerCallable();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYyNjExMA==", "url": "https://github.com/apache/hive/pull/1431#discussion_r476626110", "bodyText": "the condition seems to have flipped here. is this expected?", "author": "prasanthj", "createdAt": "2020-08-25T17:40:15Z", "path": "llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java", "diffHunk": "@@ -1390,7 +1395,7 @@ private SelectHostResult selectHost(TaskInfo request) {\n       boolean shouldDelayForLocality = request.shouldDelayForLocality(schedulerAttemptTime);\n       LOG.debug(\"ShouldDelayForLocality={} for task={} on hosts={}\", shouldDelayForLocality,\n           request.task, requestedHostsDebugStr);\n-      if (requestedHosts != null && requestedHosts.length > 0) {\n+      if (!isRequestedHostPresent(request)) {", "originalCommit": "3afd9c81db76c140a635a950b8e3e39c01f4a7b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f1e0cf4d2d5a3ac8a33a5247c6285137c54f31c", "chunk": "diff --git a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\nindex 2cbe81a533..f5fd2cc0e2 100644\n--- a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n+++ b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n\n@@ -1395,7 +1395,7 @@ private SelectHostResult selectHost(TaskInfo request) {\n       boolean shouldDelayForLocality = request.shouldDelayForLocality(schedulerAttemptTime);\n       LOG.debug(\"ShouldDelayForLocality={} for task={} on hosts={}\", shouldDelayForLocality,\n           request.task, requestedHostsDebugStr);\n-      if (!isRequestedHostPresent(request)) {\n+      if (isRequestedHostPresent(request)) {\n         int prefHostCount = -1;\n         boolean requestedHostsWillBecomeAvailable = false;\n         for (String host : requestedHosts) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYyNjgwMg==", "url": "https://github.com/apache/hive/pull/1431#discussion_r476626802", "bodyText": "isCapacityFull can be set to false in else condition here? instead of trySchedulingPendingTasks.. just a minor readability improvement..", "author": "prasanthj", "createdAt": "2020-08-25T17:41:30Z", "path": "llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java", "diffHunk": "@@ -1487,6 +1492,14 @@ private SelectHostResult selectHost(TaskInfo request) {\n         return SELECT_HOST_RESULT_DELAYED_RESOURCES;\n       }\n \n+      // When all nodes are busy, reset locality delay\n+      if (activeNodesWithFreeSlots.isEmpty()) {\n+        isCapacityFull.set(true);\n+        if (request.localityDelayTimeout > 0 && isRequestedHostPresent(request)) {\n+          request.resetLocalityDelayInfo();\n+        }\n+      }", "originalCommit": "3afd9c81db76c140a635a950b8e3e39c01f4a7b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f1e0cf4d2d5a3ac8a33a5247c6285137c54f31c", "chunk": "diff --git a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\nindex 2cbe81a533..f5fd2cc0e2 100644\n--- a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n+++ b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n\n@@ -1494,10 +1494,12 @@ private SelectHostResult selectHost(TaskInfo request) {\n \n       // When all nodes are busy, reset locality delay\n       if (activeNodesWithFreeSlots.isEmpty()) {\n-        isCapacityFull.set(true);\n+        isClusterCapacityFull.set(true);\n         if (request.localityDelayTimeout > 0 && isRequestedHostPresent(request)) {\n           request.resetLocalityDelayInfo();\n         }\n+      } else {\n+        isClusterCapacityFull.set(false);\n       }\n \n       // no locality-requested, randomly pick a node containing free slots\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYyODE3NQ==", "url": "https://github.com/apache/hive/pull/1431#discussion_r476628175", "bodyText": "This can be outer if condition? only if cluster capacity is available run the task iterator.", "author": "prasanthj", "createdAt": "2020-08-25T17:43:56Z", "path": "llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java", "diffHunk": "@@ -1817,8 +1830,10 @@ protected void schedulePendingTasks() throws InterruptedException {\n         Iterator<TaskInfo> taskIter = taskListAtPriority.iterator();\n         boolean scheduledAllAtPriority = true;\n         while (taskIter.hasNext()) {\n-          // TODO Optimization: Add a check to see if there's any capacity available. No point in\n-          // walking through all active nodes, if they don't have potential capacity.\n+          // Early exit where there are no slots available\n+          if (isCapacityFull.get()) {", "originalCommit": "3afd9c81db76c140a635a950b8e3e39c01f4a7b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f1e0cf4d2d5a3ac8a33a5247c6285137c54f31c", "chunk": "diff --git a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\nindex 2cbe81a533..f5fd2cc0e2 100644\n--- a/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n+++ b/llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java\n\n@@ -1830,10 +1836,6 @@ protected void schedulePendingTasks() throws InterruptedException {\n         Iterator<TaskInfo> taskIter = taskListAtPriority.iterator();\n         boolean scheduledAllAtPriority = true;\n         while (taskIter.hasNext()) {\n-          // Early exit where there are no slots available\n-          if (isCapacityFull.get()) {\n-            break;\n-          }\n           TaskInfo taskInfo = taskIter.next();\n           if (taskInfo.getNumPreviousAssignAttempts() == 1) {\n             dagStats.registerDelayedAllocation();\n"}}, {"oid": "2f1e0cf4d2d5a3ac8a33a5247c6285137c54f31c", "url": "https://github.com/apache/hive/commit/2f1e0cf4d2d5a3ac8a33a5247c6285137c54f31c", "message": "HIVE-24061: Improve llap task scheduling for better cache hit rate", "committedDate": "2020-08-25T22:18:57Z", "type": "commit"}, {"oid": "d258f57fec42731b62e6c999f008975ee8b50ebb", "url": "https://github.com/apache/hive/commit/d258f57fec42731b62e6c999f008975ee8b50ebb", "message": "HIVE-24061: Improve llap task scheduling for better cache hit rate", "committedDate": "2020-08-26T00:44:02Z", "type": "commit"}]}