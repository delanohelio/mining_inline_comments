{"pr_number": 1501, "pr_title": "HIVE-24168: Disable hdfsEncryptionShims cache during query-based comp\u2026", "pr_createdAt": "2020-09-15T15:15:22Z", "pr_url": "https://github.com/apache/hive/pull/1501", "timeline": [{"oid": "a0c4e250bba6b91327eab018bac334e0acfe2c12", "url": "https://github.com/apache/hive/commit/a0c4e250bba6b91327eab018bac334e0acfe2c12", "message": "HIVE-24168: Disable hdfsEncryptionShims cache during query-based compaction", "committedDate": "2020-09-15T15:11:13Z", "type": "commit"}, {"oid": "ca3825137e1a07da202dc8bae9e2a3c1d0b0d533", "url": "https://github.com/apache/hive/commit/ca3825137e1a07da202dc8bae9e2a3c1d0b0d533", "message": "Added javadoc", "committedDate": "2020-09-15T15:16:32Z", "type": "commit"}, {"oid": "69f93f66b66b11f3cbd77fa97e5884fc93a0014f", "url": "https://github.com/apache/hive/commit/69f93f66b66b11f3cbd77fa97e5884fc93a0014f", "message": "Uncommented temporarily commented-out code", "committedDate": "2020-09-15T15:18:31Z", "type": "commit"}, {"oid": "f11408494eaa6da0e83be54a52712abb76e3a949", "url": "https://github.com/apache/hive/commit/f11408494eaa6da0e83be54a52712abb76e3a949", "message": "Formatting and comment", "committedDate": "2020-09-15T15:22:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxNDkxMw==", "url": "https://github.com/apache/hive/pull/1501#discussion_r489214913", "bodyText": "Shouldn't isCompactionTable return true in both cases? Isn't it a problem the other places we use this util, that the mmCompactionTable are missed?", "author": "pvargacl", "createdAt": "2020-09-16T07:15:58Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java", "diffHunk": "@@ -445,14 +446,23 @@ public static boolean isCompactionTable(Properties tblProperties) {\n   }\n \n   /**\n-   * Determine if a table is used during query based compaction.\n+   * Determine if a table is used during query based compaction for CRUD tables.\n    * @param parameters table properties map\n    * @return true, if the parameters contains {@link AcidUtils#COMPACTOR_TABLE_PROPERTY}\n    */\n   public static boolean isCompactionTable(Map<String, String> parameters) {\n     return Boolean.valueOf(parameters.getOrDefault(COMPACTOR_TABLE_PROPERTY, \"false\"));\n   }\n \n+  /**\n+   * Determine if a table is used during query based compaction for MM insert-only tables.\n+   * @param parameters table properties map\n+   * @return true, if the parameters contains {@link AcidUtils#MM_COMPACTOR_TABLE_PROPERTY}\n+   */\n+  public static boolean isMmCompactionTable(Map<String, String> parameters) {", "originalCommit": "f11408494eaa6da0e83be54a52712abb76e3a949", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MDExOA==", "url": "https://github.com/apache/hive/pull/1501#discussion_r489250118", "bodyText": "isCompactionTable logically would be true for both full acid and mm tables, but until now we've only used it to mark tables used for compacting full acid tables. AFAIK we don't want to apply the operations we do on full acid compaction tables to mm compaction tables.\nI could rename isCompactionTable() to isFullAcidCompactionTable() for easier reading, would that do?", "author": "klcopp", "createdAt": "2020-09-16T08:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxNDkxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4MDY4Mg==", "url": "https://github.com/apache/hive/pull/1501#discussion_r490080682", "bodyText": "Done.", "author": "klcopp", "createdAt": "2020-09-17T08:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxNDkxMw=="}], "type": "inlineReview", "revised_code": {"commit": "dc4e63d9734312a7258c10c5871fdbc48f68c87d", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java b/ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java\nindex c2cfd7af8a..1c63917ca6 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java\n\n@@ -450,7 +450,7 @@ public static boolean isCompactionTable(Properties tblProperties) {\n    * @param parameters table properties map\n    * @return true, if the parameters contains {@link AcidUtils#COMPACTOR_TABLE_PROPERTY}\n    */\n-  public static boolean isCompactionTable(Map<String, String> parameters) {\n+  public static boolean isFullAcidCompactionTable(Map<String, String> parameters) {\n     return Boolean.valueOf(parameters.getOrDefault(COMPACTOR_TABLE_PROPERTY, \"false\"));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ3MTI5OQ==", "url": "https://github.com/apache/hive/pull/1501#discussion_r489471299", "bodyText": "Would it make sense to include the hashes for the fs instances in the debug logs?", "author": "zchovan", "createdAt": "2020-09-16T14:14:33Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java", "diffHunk": "@@ -4475,7 +4481,8 @@ public static boolean moveFile(final HiveConf conf, Path srcf, final Path destf,\n         destFs.copyFromLocalFile(srcf, destf);\n         return true;\n       } else {\n-        if (needToCopy(conf, srcf, destf, srcFs, destFs, configuredOwner, isManaged)) {\n+        if (needToCopy(conf, srcf, destf, srcFs, destFs, configuredOwner, isManaged, isCompactionTable,\n+            isMmCompactionTable)) {\n           //copy if across file system or encryption zones.\n           LOG.debug(\"Copying source \" + srcf + \" to \" + destf + \" because HDFS encryption zones are different.\");", "originalCommit": "f11408494eaa6da0e83be54a52712abb76e3a949", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0NzA1Mg==", "url": "https://github.com/apache/hive/pull/1501#discussion_r490047052", "bodyText": "I think only in hdfs-common (FS.close() et al) \u2013 I opened HADOOP-17267 to track it.", "author": "klcopp", "createdAt": "2020-09-17T07:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ3MTI5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "fd6f0eadf27094621d7f43e9ef4ae825c621a4d9", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java b/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java\nindex f807eabb72..fa0edaf26c 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java\n\n@@ -4481,7 +4481,7 @@ public static boolean moveFile(final HiveConf conf, Path srcf, final Path destf,\n         destFs.copyFromLocalFile(srcf, destf);\n         return true;\n       } else {\n-        if (needToCopy(conf, srcf, destf, srcFs, destFs, configuredOwner, isManaged, isCompactionTable,\n+        if (needToCopy(conf, srcf, destf, srcFs, destFs, configuredOwner, isManaged, isFullAcidCompactionTable,\n             isMmCompactionTable)) {\n           //copy if across file system or encryption zones.\n           LOG.debug(\"Copying source \" + srcf + \" to \" + destf + \" because HDFS encryption zones are different.\");\n"}}, {"oid": "dc4e63d9734312a7258c10c5871fdbc48f68c87d", "url": "https://github.com/apache/hive/commit/dc4e63d9734312a7258c10c5871fdbc48f68c87d", "message": "Rename isCompactionTable() methods to isFullAcidCompactionTable()", "committedDate": "2020-09-17T08:40:33Z", "type": "commit"}, {"oid": "fd6f0eadf27094621d7f43e9ef4ae825c621a4d9", "url": "https://github.com/apache/hive/commit/fd6f0eadf27094621d7f43e9ef4ae825c621a4d9", "message": "Rename isCompactionTable variables to isFullAcidCompactionTable", "committedDate": "2020-09-17T08:44:43Z", "type": "commit"}, {"oid": "7f23793710904720343bf153f1fac64238fb2892", "url": "https://github.com/apache/hive/commit/7f23793710904720343bf153f1fac64238fb2892", "message": "Revert all changes", "committedDate": "2020-09-18T09:40:08Z", "type": "commit"}, {"oid": "ee71ca4cc5d222a577d764121768a3f72a42092c", "url": "https://github.com/apache/hive/commit/ee71ca4cc5d222a577d764121768a3f72a42092c", "message": "Redid, addressed review comments", "committedDate": "2020-09-18T13:49:37Z", "type": "commit"}, {"oid": "a56576a800dddd27aae41bb15772e7f66279b5cb", "url": "https://github.com/apache/hive/commit/a56576a800dddd27aae41bb15772e7f66279b5cb", "message": "Return null (previous behavior) if FS URI schema is not hdfs", "committedDate": "2020-09-22T09:53:15Z", "type": "commit"}]}