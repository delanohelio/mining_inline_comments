{"pr_number": 1050, "pr_title": "HIVE-23358: MSCK Repair should remove insignificant 0's from numeric partition values", "pr_createdAt": "2020-06-02T10:34:22Z", "pr_url": "https://github.com/apache/hive/pull/1050", "timeline": [{"oid": "a971ab5be9d08993dfdf9f768e72dd6e6fd629b0", "url": "https://github.com/apache/hive/commit/a971ab5be9d08993dfdf9f768e72dd6e6fd629b0", "message": "Fix config", "committedDate": "2020-08-03T05:36:21Z", "type": "forcePushed"}, {"oid": "02c540d8c81478d21cc97e2a51bfd832892ccccf", "url": "https://github.com/apache/hive/commit/02c540d8c81478d21cc97e2a51bfd832892ccccf", "message": "HIVE-23358: MSCK Repair should remove insignificant 0's from partition values", "committedDate": "2020-08-04T05:05:23Z", "type": "commit"}, {"oid": "ac3b157aa043260bdac56efb628997fb29b8c14c", "url": "https://github.com/apache/hive/commit/ac3b157aa043260bdac56efb628997fb29b8c14c", "message": "Add new test file in testconfiguration.properties", "committedDate": "2020-08-04T05:05:23Z", "type": "commit"}, {"oid": "d8693f1cb90fae44329dc38395088f48730ff116", "url": "https://github.com/apache/hive/commit/d8693f1cb90fae44329dc38395088f48730ff116", "message": "Fix config", "committedDate": "2020-08-04T05:05:23Z", "type": "commit"}, {"oid": "290aed928b019406c16c166e383662f04f5b20ba", "url": "https://github.com/apache/hive/commit/290aed928b019406c16c166e383662f04f5b20ba", "message": "Add import", "committedDate": "2020-08-04T05:05:23Z", "type": "commit"}, {"oid": "ffd7c888ff828f840f90829d769dfd1f345d452e", "url": "https://github.com/apache/hive/commit/ffd7c888ff828f840f90829d769dfd1f345d452e", "message": "fix test", "committedDate": "2020-08-04T06:10:06Z", "type": "commit"}, {"oid": "ffd7c888ff828f840f90829d769dfd1f345d452e", "url": "https://github.com/apache/hive/commit/ffd7c888ff828f840f90829d769dfd1f345d452e", "message": "fix test", "committedDate": "2020-08-04T06:10:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyNTA5MA==", "url": "https://github.com/apache/hive/pull/1050#discussion_r465625090", "bodyText": "Avoid outer negation and use if ((partitionCols != null) && !partitionCols.isEmpty()). Even isEmpty need not be checked here as below loop won't execute if it is empty.", "author": "sankarh", "createdAt": "2020-08-05T10:22:09Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java", "diffHunk": "@@ -1493,6 +1497,39 @@ public static String getPartitionName(Path tablePath, Path partitionPath, Set<St\n     return result;\n   }\n \n+  public static String getNormalisedPartitionValue(String partitionValue, String type) {\n+\n+    LOG.debug(\"Converting '\" + partitionValue + \"' to type: '\" + type + \"'.\");\n+\n+    if (type.equalsIgnoreCase(\"tinyint\")\n+    || type.equalsIgnoreCase(\"smallint\")\n+    || type.equalsIgnoreCase(\"int\")){\n+      return Integer.toString(Integer.parseInt(partitionValue));\n+    } else if (type.equalsIgnoreCase(\"bigint\")){\n+      return Long.toString(Long.parseLong(partitionValue));\n+    } else if (type.equalsIgnoreCase(\"float\")){\n+      return Float.toString(Float.parseFloat(partitionValue));\n+    } else if (type.equalsIgnoreCase(\"double\")){\n+      return Double.toString(Double.parseDouble(partitionValue));\n+    } else if (type.startsWith(\"decimal\")){\n+      // Decimal datatypes are stored like decimal(10,10)\n+      return new BigDecimal(partitionValue).stripTrailingZeros().toPlainString();\n+    }\n+    return partitionValue;\n+  }\n+\n+  public static Map<String, String> getPartitionColtoTypeMap(List<FieldSchema> partitionCols) {\n+    Map<String, String> typeMap = new HashMap<>();\n+\n+    if (!(partitionCols == null || partitionCols.isEmpty())) {", "originalCommit": "ffd7c888ff828f840f90829d769dfd1f345d452e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bb6663b7166ec74c860f0e0a871357e344e47181", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\nindex 1f5f68762f..6dad7f4c3b 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n\n@@ -1521,7 +1521,7 @@ public static String getNormalisedPartitionValue(String partitionValue, String t\n   public static Map<String, String> getPartitionColtoTypeMap(List<FieldSchema> partitionCols) {\n     Map<String, String> typeMap = new HashMap<>();\n \n-    if (!(partitionCols == null || partitionCols.isEmpty())) {\n+    if (partitionCols != null) {\n       for (FieldSchema fSchema : partitionCols) {\n         typeMap.put(fSchema.getName(), fSchema.getType());\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyNjgxOQ==", "url": "https://github.com/apache/hive/pull/1050#discussion_r465626819", "bodyText": "As a follow-up, do we need to validate date, timestamp values before add partitions? Are we checking it during inserts or add partition command?", "author": "sankarh", "createdAt": "2020-08-05T10:25:43Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java", "diffHunk": "@@ -1493,6 +1497,39 @@ public static String getPartitionName(Path tablePath, Path partitionPath, Set<St\n     return result;\n   }\n \n+  public static String getNormalisedPartitionValue(String partitionValue, String type) {\n+\n+    LOG.debug(\"Converting '\" + partitionValue + \"' to type: '\" + type + \"'.\");\n+\n+    if (type.equalsIgnoreCase(\"tinyint\")\n+    || type.equalsIgnoreCase(\"smallint\")\n+    || type.equalsIgnoreCase(\"int\")){\n+      return Integer.toString(Integer.parseInt(partitionValue));\n+    } else if (type.equalsIgnoreCase(\"bigint\")){\n+      return Long.toString(Long.parseLong(partitionValue));\n+    } else if (type.equalsIgnoreCase(\"float\")){\n+      return Float.toString(Float.parseFloat(partitionValue));\n+    } else if (type.equalsIgnoreCase(\"double\")){\n+      return Double.toString(Double.parseDouble(partitionValue));\n+    } else if (type.startsWith(\"decimal\")){\n+      // Decimal datatypes are stored like decimal(10,10)\n+      return new BigDecimal(partitionValue).stripTrailingZeros().toPlainString();\n+    }\n+    return partitionValue;", "originalCommit": "ffd7c888ff828f840f90829d769dfd1f345d452e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bb6663b7166ec74c860f0e0a871357e344e47181", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\nindex 1f5f68762f..6dad7f4c3b 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n\n@@ -1521,7 +1521,7 @@ public static String getNormalisedPartitionValue(String partitionValue, String t\n   public static Map<String, String> getPartitionColtoTypeMap(List<FieldSchema> partitionCols) {\n     Map<String, String> typeMap = new HashMap<>();\n \n-    if (!(partitionCols == null || partitionCols.isEmpty())) {\n+    if (partitionCols != null) {\n       for (FieldSchema fSchema : partitionCols) {\n         typeMap.put(fSchema.getName(), fSchema.getType());\n       }\n"}}, {"oid": "bb6663b7166ec74c860f0e0a871357e344e47181", "url": "https://github.com/apache/hive/commit/bb6663b7166ec74c860f0e0a871357e344e47181", "message": "Address review comments", "committedDate": "2020-08-07T04:55:04Z", "type": "commit"}]}