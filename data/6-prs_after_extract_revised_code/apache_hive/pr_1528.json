{"pr_number": 1528, "pr_title": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed\u2026", "pr_createdAt": "2020-09-27T17:12:27Z", "pr_url": "https://github.com/apache/hive/pull/1528", "timeline": [{"oid": "cb0a212deeaaa00ed5bac50225e4bfc0dba9852e", "url": "https://github.com/apache/hive/commit/cb0a212deeaaa00ed5bac50225e4bfc0dba9852e", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-09-27T18:58:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MjA5MA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r497652090", "bodyText": "required?", "author": "adesh-rao", "createdAt": "2020-09-30T16:40:54Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java", "diffHunk": "@@ -33,6 +35,7 @@\n import org.apache.hadoop.hive.ql.metadata.Partition;\n import org.apache.hadoop.hive.ql.metadata.Table;\n import org.apache.hadoop.hive.serde2.avro.AvroSerdeUtils;\n+import org.apache.spark.util.CollectionsUtils;", "originalCommit": "0124e648b59dd9c66d7657e87205e562209d8b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ0MDA1OQ==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498440059", "bodyText": "Removed", "author": "ashish-kumar-sharma", "createdAt": "2020-10-01T18:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MjA5MA=="}], "type": "inlineReview", "revised_code": {"commit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java b/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\nindex ba09eee9a0..baf306f493 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\n\n@@ -35,7 +35,6 @@\n import org.apache.hadoop.hive.ql.metadata.Partition;\n import org.apache.hadoop.hive.ql.metadata.Table;\n import org.apache.hadoop.hive.serde2.avro.AvroSerdeUtils;\n-import org.apache.spark.util.CollectionsUtils;\n \n /**\n  * Operation process changing a column.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2MjA4NQ==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498162085", "bodyText": "add a null check for columnNames? getColumnNames returns null too.", "author": "adesh-rao", "createdAt": "2020-10-01T11:07:07Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java", "diffHunk": "@@ -1554,4 +1555,30 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n     }\n     return tpart;\n   }\n+\n+  /**\n+   * Validate bucket columns should belong to table columns.\n+   * @param sd StorageDescriptor of given table\n+   * @return true if bucket columns are empty or belong to table columns else false\n+   */\n+  public static boolean validateBucketColumns(StorageDescriptor sd) {\n+    if (CollectionUtils.isNotEmpty(sd.getBucketCols())) {\n+      List<String> columnNames =\n+          getColumnNames(sd.getCols()).stream().map(String::toLowerCase).collect(Collectors.toList());\n+      return columnNames.containsAll(sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList()));", "originalCommit": "0124e648b59dd9c66d7657e87205e562209d8b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzNjUxNw==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498436517", "bodyText": "Done", "author": "ashish-kumar-sharma", "createdAt": "2020-10-01T18:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2MjA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\nindex 91e94a8136..16953530f4 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n\n@@ -1562,12 +1562,14 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n    * @return true if bucket columns are empty or belong to table columns else false\n    */\n   public static boolean validateBucketColumns(StorageDescriptor sd) {\n-    if (CollectionUtils.isNotEmpty(sd.getBucketCols())) {\n-      List<String> columnNames =\n-          getColumnNames(sd.getCols()).stream().map(String::toLowerCase).collect(Collectors.toList());\n+    List<String> columnNames = getColumnNames(sd.getCols());\n+    if(CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isNotEmpty(columnNames)){\n       return columnNames.containsAll(sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList()));\n+    } else if (CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isEmpty(columnNames)) {\n+      return false;\n+    } else {\n+      return true;\n     }\n-    return true;\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2MjM2Mw==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498162363", "bodyText": "required?", "author": "adesh-rao", "createdAt": "2020-10-01T11:07:40Z", "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java", "diffHunk": "@@ -63,6 +64,8 @@\n import org.datanucleus.api.jdo.JDOPersistenceManagerFactory;\n import org.junit.Assert;\n import org.junit.Before;\n+import org.junit.experimental.categories.Category;", "originalCommit": "0124e648b59dd9c66d7657e87205e562209d8b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzNjU4Mg==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498436582", "bodyText": "removed", "author": "ashish-kumar-sharma", "createdAt": "2020-10-01T18:25:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2MjM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "chunk": "diff --git a/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java b/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\nindex 3b37db7fc9..7018c89f6f 100644\n--- a/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\n+++ b/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\n\n@@ -64,8 +63,6 @@\n import org.datanucleus.api.jdo.JDOPersistenceManagerFactory;\n import org.junit.Assert;\n import org.junit.Before;\n-import org.junit.experimental.categories.Category;\n-import org.junit.rules.ExpectedException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.apache.hadoop.conf.Configuration;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2NDMwNg==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498164306", "bodyText": "Won't adding a qtest be better?\nYou are explicitly doing tblUpdated.getSd().getBucketCols() and updating them in the test. qtest will check end to end flow and you don't need to bother about getting Sd and updating the cols explicitly (Just a single alter table will do the trick).", "author": "adesh-rao", "createdAt": "2020-10-01T11:11:37Z", "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java", "diffHunk": "@@ -3428,4 +3432,44 @@ public void testUpdatePartitionStat_doesNotUpdateStats() throws Exception {\n     m.invoke(hms, tbl, part, false, null);\n     verify(wh, never()).getFileStatusesForLocation(part.getSd().getLocation());\n   }\n+\n+  @Test(expected = InvalidOperationException.class)", "originalCommit": "0124e648b59dd9c66d7657e87205e562209d8b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzOTY3MA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498439670", "bodyText": "Method is added in standalone metastore. So we need to add some unit test case in some form to validate the code the while building the standalone.", "author": "ashish-kumar-sharma", "createdAt": "2020-10-01T18:31:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2NDMwNg=="}], "type": "inlineReview", "revised_code": {"commit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "chunk": "diff --git a/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java b/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\nindex 3b37db7fc9..7018c89f6f 100644\n--- a/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\n+++ b/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\n\n@@ -3433,8 +3429,8 @@ public void testUpdatePartitionStat_doesNotUpdateStats() throws Exception {\n     verify(wh, never()).getFileStatusesForLocation(part.getSd().getLocation());\n   }\n \n-  @Test(expected = InvalidOperationException.class)\n-  public void testAlterTableRenameBucketedColumn() throws Exception {\n+\n+  public void testAlterTableRenameBucketedColumnPositive() throws Exception {\n     String dbName = \"alterTblDb\";\n     String tblName = \"altertbl\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2NDkyMQ==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498164921", "bodyText": "Also, Is it a positive test case or negative? I see that there is an expected error but we are doing the positive validations too. We should break this into two, right?", "author": "adesh-rao", "createdAt": "2020-10-01T11:12:54Z", "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java", "diffHunk": "@@ -3428,4 +3432,44 @@ public void testUpdatePartitionStat_doesNotUpdateStats() throws Exception {\n     m.invoke(hms, tbl, part, false, null);\n     verify(wh, never()).getFileStatusesForLocation(part.getSd().getLocation());\n   }\n+\n+  @Test(expected = InvalidOperationException.class)", "originalCommit": "0124e648b59dd9c66d7657e87205e562209d8b18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQzOTk0Mw==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498439943", "bodyText": "Divided the test in negative and positive", "author": "ashish-kumar-sharma", "createdAt": "2020-10-01T18:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE2NDkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "chunk": "diff --git a/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java b/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\nindex 3b37db7fc9..7018c89f6f 100644\n--- a/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\n+++ b/standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java\n\n@@ -3433,8 +3429,8 @@ public void testUpdatePartitionStat_doesNotUpdateStats() throws Exception {\n     verify(wh, never()).getFileStatusesForLocation(part.getSd().getLocation());\n   }\n \n-  @Test(expected = InvalidOperationException.class)\n-  public void testAlterTableRenameBucketedColumn() throws Exception {\n+\n+  public void testAlterTableRenameBucketedColumnPositive() throws Exception {\n     String dbName = \"alterTblDb\";\n     String tblName = \"altertbl\";\n \n"}}, {"oid": "524d4d2819dd47a185479e5349cbfa3ce1f41b7d", "url": "https://github.com/apache/hive/commit/524d4d2819dd47a185479e5349cbfa3ce1f41b7d", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-01T17:37:02Z", "type": "forcePushed"}, {"oid": "ca8ef861c96028c04119f22334c834e4fc91de0f", "url": "https://github.com/apache/hive/commit/ca8ef861c96028c04119f22334c834e4fc91de0f", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-01T17:41:53Z", "type": "forcePushed"}, {"oid": "bbe784cacf5c90eed347428699eab0c5a3420d47", "url": "https://github.com/apache/hive/commit/bbe784cacf5c90eed347428699eab0c5a3420d47", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-02T10:36:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY1MTQ3OA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498651478", "bodyText": "Should we store it in lower-case?", "author": "sankarh", "createdAt": "2020-10-02T07:15:30Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java", "diffHunk": "@@ -72,6 +74,10 @@ protected void doAlteration(Table table, Partition partition) throws HiveExcepti\n         if (desc.getNewColumnComment() != null) {\n           oldColumn.setComment(desc.getNewColumnComment());\n         }\n+        if (CollectionUtils.isNotEmpty(sd.getBucketCols()) && sd.getBucketCols().contains(oldColumnName)) {\n+          sd.getBucketCols().remove(oldColumnName);\n+          sd.getBucketCols().add(desc.getNewColumnName());", "originalCommit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwNTAyOA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498905028", "bodyText": "newColumnName is converted toLowerCase in query planning while populating \"desc\" but to be fail safe i have added toLowerCase() here also.", "author": "ashish-kumar-sharma", "createdAt": "2020-10-02T15:49:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY1MTQ3OA=="}], "type": "inlineReview", "revised_code": {"commit": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java b/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\nindex baf306f493..e65e256510 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\n\n@@ -63,11 +62,11 @@ protected void doAlteration(Table table, Partition partition) throws HiveExcepti\n     int i = 1;\n \n     List<FieldSchema> oldColumns = (partition == null ? table.getColsForMetastore() : partition.getColsForMetastore());\n-    List<FieldSchema> newColumns = new ArrayList<FieldSchema>();\n+    List<FieldSchema> newColumns = new ArrayList<>();\n     for (FieldSchema oldColumn : oldColumns) {\n       String oldColumnName = oldColumn.getName();\n       if (oldColumnName.equalsIgnoreCase(desc.getOldColumnName())) {\n-        oldColumn.setName(desc.getNewColumnName());\n+        oldColumn.setName(desc.getNewColumnName().toLowerCase());\n         if (StringUtils.isNotBlank(desc.getNewColumnType())) {\n           oldColumn.setType(desc.getNewColumnType());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY1MTYzOA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498651638", "bodyText": "Is oldColumnName case in-sensitive?", "author": "sankarh", "createdAt": "2020-10-02T07:15:58Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java", "diffHunk": "@@ -72,6 +74,10 @@ protected void doAlteration(Table table, Partition partition) throws HiveExcepti\n         if (desc.getNewColumnComment() != null) {\n           oldColumn.setComment(desc.getNewColumnComment());\n         }\n+        if (CollectionUtils.isNotEmpty(sd.getBucketCols()) && sd.getBucketCols().contains(oldColumnName)) {", "originalCommit": "ca8ef861c96028c04119f22334c834e4fc91de0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwNDIzMg==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498904232", "bodyText": "As per HIVE column contract it should be case in-sensitive. But it is not handled properly in  query planning of \"alter table {tablename} change\". So I have added toLowerCase() in query planning also.", "author": "ashish-kumar-sharma", "createdAt": "2020-10-02T15:48:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY1MTYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java b/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\nindex baf306f493..e65e256510 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/ddl/table/column/change/AlterTableChangeColumnOperation.java\n\n@@ -63,11 +62,11 @@ protected void doAlteration(Table table, Partition partition) throws HiveExcepti\n     int i = 1;\n \n     List<FieldSchema> oldColumns = (partition == null ? table.getColsForMetastore() : partition.getColsForMetastore());\n-    List<FieldSchema> newColumns = new ArrayList<FieldSchema>();\n+    List<FieldSchema> newColumns = new ArrayList<>();\n     for (FieldSchema oldColumn : oldColumns) {\n       String oldColumnName = oldColumn.getName();\n       if (oldColumnName.equalsIgnoreCase(desc.getOldColumnName())) {\n-        oldColumn.setName(desc.getNewColumnName());\n+        oldColumn.setName(desc.getNewColumnName().toLowerCase());\n         if (StringUtils.isNotBlank(desc.getNewColumnType())) {\n           oldColumn.setType(desc.getNewColumnType());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NjMxNw==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498756317", "bodyText": "Useful to add an error log with the column name which is missing from table columns list.", "author": "sankarh", "createdAt": "2020-10-02T11:04:28Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java", "diffHunk": "@@ -130,6 +130,11 @@ public void alterTable(RawStore msdb, Warehouse wh, String catName, String dbnam\n       throw new InvalidOperationException(\"Invalid column \" + validate);\n     }\n \n+    // Validate bucketedColumns in new table\n+    if (!MetaStoreServerUtils.validateBucketColumns(newt.getSd())) {\n+      throw new InvalidOperationException(\"Bucket column doesn't match with any table columns\");", "originalCommit": "bbe784cacf5c90eed347428699eab0c5a3420d47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwMTk5MA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498901990", "bodyText": "Converted return type to List.\nAdded Log.error() along with column name.\nAdded column to exception also.", "author": "ashish-kumar-sharma", "createdAt": "2020-10-02T15:44:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NjMxNw=="}], "type": "inlineReview", "revised_code": {"commit": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java\nindex 28d80ff96a..cf4b85ded4 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveAlterHandler.java\n\n@@ -131,8 +132,11 @@ public void alterTable(RawStore msdb, Warehouse wh, String catName, String dbnam\n     }\n \n     // Validate bucketedColumns in new table\n-    if (!MetaStoreServerUtils.validateBucketColumns(newt.getSd())) {\n-      throw new InvalidOperationException(\"Bucket column doesn't match with any table columns\");\n+    List<String> bucketColumns = MetaStoreServerUtils.validateBucketColumns(newt.getSd());\n+    if (CollectionUtils.isNotEmpty(bucketColumns)) {\n+      String errMsg = \"Bucket columns - \" + bucketColumns.toString() + \" doesn't match with any table columns\";\n+      LOG.error(errMsg);\n+      throw new InvalidOperationException(errMsg);\n     }\n \n     Path srcPath = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzI4MA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498757280", "bodyText": "Check if CollectionUtils.isEmpty(sd.getBucketCols()) case even before getting table columns list and return true. It will avoid repeated checks below and also avoids unnecessary computes for non-bucketed tables.", "author": "sankarh", "createdAt": "2020-10-02T11:07:04Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java", "diffHunk": "@@ -1554,4 +1555,32 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n     }\n     return tpart;\n   }\n+\n+  /**\n+   * Validate bucket columns should belong to table columns.\n+   * @param sd StorageDescriptor of given table\n+   * @return true if bucket columns are empty or belong to table columns else false\n+   */\n+  public static boolean validateBucketColumns(StorageDescriptor sd) {\n+    List<String> columnNames = getColumnNames(sd.getCols());", "originalCommit": "bbe784cacf5c90eed347428699eab0c5a3420d47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwMDc4Ng==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498900786", "bodyText": "Done", "author": "ashish-kumar-sharma", "createdAt": "2020-10-02T15:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\nindex 16953530f4..5202534eb0 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n\n@@ -1561,25 +1561,26 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n    * @param sd StorageDescriptor of given table\n    * @return true if bucket columns are empty or belong to table columns else false\n    */\n-  public static boolean validateBucketColumns(StorageDescriptor sd) {\n-    List<String> columnNames = getColumnNames(sd.getCols());\n-    if(CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isNotEmpty(columnNames)){\n-      return columnNames.containsAll(sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList()));\n-    } else if (CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isEmpty(columnNames)) {\n-      return false;\n-    } else {\n-      return true;\n+  public static List<String> validateBucketColumns(StorageDescriptor sd) {\n+    List<String> bucketColumnNames = null;\n+\n+    if (CollectionUtils.isNotEmpty(sd.getBucketCols())) {\n+      bucketColumnNames = sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList());\n+      List<String> columnNames = getColumnNames(sd.getCols());\n+      if (CollectionUtils.isNotEmpty(columnNames))\n+        bucketColumnNames.removeAll(columnNames);\n     }\n+    return bucketColumnNames;\n   }\n \n   /**\n-   * Generate column name list  from the fieldSchema list\n+   * Generate list of lower case column names from the fieldSchema list\n    * @param cols fieldSchema list\n    * @return column name list\n    */\n   public static List<String> getColumnNames(List<FieldSchema> cols) {\n     if (CollectionUtils.isNotEmpty(cols)) {\n-      return cols.stream().map(FieldSchema::getName).collect(Collectors.toList());\n+      return cols.stream().map(FieldSchema::getName).map(String::toLowerCase).collect(Collectors.toList());\n     }\n     return null;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzM4MA==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498757380", "bodyText": "nit: Add space before \"(\"", "author": "sankarh", "createdAt": "2020-10-02T11:07:23Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java", "diffHunk": "@@ -1554,4 +1555,32 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n     }\n     return tpart;\n   }\n+\n+  /**\n+   * Validate bucket columns should belong to table columns.\n+   * @param sd StorageDescriptor of given table\n+   * @return true if bucket columns are empty or belong to table columns else false\n+   */\n+  public static boolean validateBucketColumns(StorageDescriptor sd) {\n+    List<String> columnNames = getColumnNames(sd.getCols());\n+    if(CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isNotEmpty(columnNames)){", "originalCommit": "bbe784cacf5c90eed347428699eab0c5a3420d47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwMDY1NQ==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498900655", "bodyText": "Done", "author": "ashish-kumar-sharma", "createdAt": "2020-10-02T15:41:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\nindex 16953530f4..5202534eb0 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n\n@@ -1561,25 +1561,26 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n    * @param sd StorageDescriptor of given table\n    * @return true if bucket columns are empty or belong to table columns else false\n    */\n-  public static boolean validateBucketColumns(StorageDescriptor sd) {\n-    List<String> columnNames = getColumnNames(sd.getCols());\n-    if(CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isNotEmpty(columnNames)){\n-      return columnNames.containsAll(sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList()));\n-    } else if (CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isEmpty(columnNames)) {\n-      return false;\n-    } else {\n-      return true;\n+  public static List<String> validateBucketColumns(StorageDescriptor sd) {\n+    List<String> bucketColumnNames = null;\n+\n+    if (CollectionUtils.isNotEmpty(sd.getBucketCols())) {\n+      bucketColumnNames = sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList());\n+      List<String> columnNames = getColumnNames(sd.getCols());\n+      if (CollectionUtils.isNotEmpty(columnNames))\n+        bucketColumnNames.removeAll(columnNames);\n     }\n+    return bucketColumnNames;\n   }\n \n   /**\n-   * Generate column name list  from the fieldSchema list\n+   * Generate list of lower case column names from the fieldSchema list\n    * @param cols fieldSchema list\n    * @return column name list\n    */\n   public static List<String> getColumnNames(List<FieldSchema> cols) {\n     if (CollectionUtils.isNotEmpty(cols)) {\n-      return cols.stream().map(FieldSchema::getName).collect(Collectors.toList());\n+      return cols.stream().map(FieldSchema::getName).map(String::toLowerCase).collect(Collectors.toList());\n     }\n     return null;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1Nzk4MQ==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498757981", "bodyText": "Will cols always have names in lower case?", "author": "sankarh", "createdAt": "2020-10-02T11:09:03Z", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java", "diffHunk": "@@ -1554,4 +1555,32 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n     }\n     return tpart;\n   }\n+\n+  /**\n+   * Validate bucket columns should belong to table columns.\n+   * @param sd StorageDescriptor of given table\n+   * @return true if bucket columns are empty or belong to table columns else false\n+   */\n+  public static boolean validateBucketColumns(StorageDescriptor sd) {\n+    List<String> columnNames = getColumnNames(sd.getCols());\n+    if(CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isNotEmpty(columnNames)){\n+      return columnNames.containsAll(sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList()));\n+    } else if (CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isEmpty(columnNames)) {\n+      return false;\n+    } else {\n+      return true;\n+    }\n+  }\n+\n+  /**\n+   * Generate column name list  from the fieldSchema list\n+   * @param cols fieldSchema list\n+   * @return column name list\n+   */\n+  public static List<String> getColumnNames(List<FieldSchema> cols) {\n+    if (CollectionUtils.isNotEmpty(cols)) {\n+      return cols.stream().map(FieldSchema::getName).collect(Collectors.toList());", "originalCommit": "bbe784cacf5c90eed347428699eab0c5a3420d47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkwMDUzNQ==", "url": "https://github.com/apache/hive/pull/1528#discussion_r498900535", "bodyText": "Expected column name in lower case. But in order to be fail safe added toLowerCase() here also.", "author": "ashish-kumar-sharma", "createdAt": "2020-10-02T15:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1Nzk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "chunk": "diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\nindex 16953530f4..5202534eb0 100644\n--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/utils/MetaStoreServerUtils.java\n\n@@ -1561,25 +1561,26 @@ public static Partition createMetaPartitionObject(Table tbl, Map<String, String>\n    * @param sd StorageDescriptor of given table\n    * @return true if bucket columns are empty or belong to table columns else false\n    */\n-  public static boolean validateBucketColumns(StorageDescriptor sd) {\n-    List<String> columnNames = getColumnNames(sd.getCols());\n-    if(CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isNotEmpty(columnNames)){\n-      return columnNames.containsAll(sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList()));\n-    } else if (CollectionUtils.isNotEmpty(sd.getBucketCols()) &&  CollectionUtils.isEmpty(columnNames)) {\n-      return false;\n-    } else {\n-      return true;\n+  public static List<String> validateBucketColumns(StorageDescriptor sd) {\n+    List<String> bucketColumnNames = null;\n+\n+    if (CollectionUtils.isNotEmpty(sd.getBucketCols())) {\n+      bucketColumnNames = sd.getBucketCols().stream().map(String::toLowerCase).collect(Collectors.toList());\n+      List<String> columnNames = getColumnNames(sd.getCols());\n+      if (CollectionUtils.isNotEmpty(columnNames))\n+        bucketColumnNames.removeAll(columnNames);\n     }\n+    return bucketColumnNames;\n   }\n \n   /**\n-   * Generate column name list  from the fieldSchema list\n+   * Generate list of lower case column names from the fieldSchema list\n    * @param cols fieldSchema list\n    * @return column name list\n    */\n   public static List<String> getColumnNames(List<FieldSchema> cols) {\n     if (CollectionUtils.isNotEmpty(cols)) {\n-      return cols.stream().map(FieldSchema::getName).collect(Collectors.toList());\n+      return cols.stream().map(FieldSchema::getName).map(String::toLowerCase).collect(Collectors.toList());\n     }\n     return null;\n   }\n"}}, {"oid": "dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "url": "https://github.com/apache/hive/commit/dc556ac1f421aa9906c5642ab0ee69c4bd36d285", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-02T15:39:35Z", "type": "forcePushed"}, {"oid": "85dd61d4f4e6d88a3f5f480cf8a54bb5c1ed3ed3", "url": "https://github.com/apache/hive/commit/85dd61d4f4e6d88a3f5f480cf8a54bb5c1ed3ed3", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-02T18:41:28Z", "type": "forcePushed"}, {"oid": "66f918638eb19b4a3ef5ac0c27a4c31d8191eea4", "url": "https://github.com/apache/hive/commit/66f918638eb19b4a3ef5ac0c27a4c31d8191eea4", "message": "next run", "committedDate": "2020-10-02T23:32:00Z", "type": "forcePushed"}, {"oid": "744a55ea69295a26c3b356a25858a4f7f7756b6c", "url": "https://github.com/apache/hive/commit/744a55ea69295a26c3b356a25858a4f7f7756b6c", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-05T06:02:26Z", "type": "commit"}, {"oid": "744a55ea69295a26c3b356a25858a4f7f7756b6c", "url": "https://github.com/apache/hive/commit/744a55ea69295a26c3b356a25858a4f7f7756b6c", "message": "HIVE-22826: ALTER TABLE RENAME COLUMN doesn't update list of bucketed column names", "committedDate": "2020-10-05T06:02:26Z", "type": "forcePushed"}]}