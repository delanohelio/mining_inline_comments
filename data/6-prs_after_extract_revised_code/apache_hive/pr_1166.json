{"pr_number": 1166, "pr_title": "HIVE-20890: ACID: Allow whole table ReadLocks to skip all partition l\u2026", "pr_createdAt": "2020-06-23T07:41:04Z", "pr_url": "https://github.com/apache/hive/pull/1166", "timeline": [{"oid": "f47efb25d7a915254a01b150a836f72a7f5583d6", "url": "https://github.com/apache/hive/commit/f47efb25d7a915254a01b150a836f72a7f5583d6", "message": "HIVE-20890: ACID: Allow whole table ReadLocks to skip all partition locks", "committedDate": "2020-06-23T07:39:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MDQwMA==", "url": "https://github.com/apache/hive/pull/1166#discussion_r444740400", "bodyText": "Is the table.equals will work correctly here, as expected? I have seen another PR where we started to create special equals method for table comparison: #1095 - might be conflicting later", "author": "pvary", "createdAt": "2020-06-24T08:45:55Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java", "diffHunk": "@@ -2863,6 +2868,9 @@ private static boolean isLockableTable(Table t) {\n \n         case TABLE:\n           t = input.getTable();\n+          if (!fullTableLock.contains(t)) {", "originalCommit": "f47efb25d7a915254a01b150a836f72a7f5583d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgwMjEyNA==", "url": "https://github.com/apache/hive/pull/1166#discussion_r444802124", "bodyText": "table equals compares table names, so should be Ok", "author": "deniskuzZ", "createdAt": "2020-06-24T10:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MDQwMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MTE1OQ==", "url": "https://github.com/apache/hive/pull/1166#discussion_r444741159", "bodyText": "With using 'continue' we do not execute the code after the case statement. Is this intentional?", "author": "pvary", "createdAt": "2020-06-24T08:47:08Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/io/AcidUtils.java", "diffHunk": "@@ -2994,12 +3005,13 @@ Seems much cleaner if each stmt is identified as a particular HiveOperation (whi\n         break;\n       case DDL_SHARED:\n         compBuilder.setSharedRead();\n-        if (!output.isTxnAnalyze()) {\n+        if (output.isTxnAnalyze()) {\n           // Analyze needs txn components to be present, otherwise an aborted analyze write ID\n           // might be rolled under the watermark by compactor while stats written by it are\n           // still present.\n-          compBuilder.setOperationType(DataOperationType.NO_TXN);\n+          continue;", "originalCommit": "f47efb25d7a915254a01b150a836f72a7f5583d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgwNjc4MA==", "url": "https://github.com/apache/hive/pull/1166#discussion_r444806780", "bodyText": "analyze wasn't adding new locks even before, it tried to add duplicate on table level and failed as there was already one. when i removed table level lock addition, analyze started to fail as it doesn't even populate operation type.", "author": "deniskuzZ", "createdAt": "2020-06-24T10:45:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MTE1OQ=="}], "type": "inlineReview", "revised_code": null}]}