{"pr_number": 1437, "pr_title": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries", "pr_createdAt": "2020-08-27T10:06:30Z", "pr_url": "https://github.com/apache/hive/pull/1437", "timeline": [{"oid": "55a60cc9e1ba98cf038d471d5edcfd3ed0dedcb4", "url": "https://github.com/apache/hive/commit/55a60cc9e1ba98cf038d471d5edcfd3ed0dedcb4", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries", "committedDate": "2020-08-27T15:18:00Z", "type": "forcePushed"}, {"oid": "e2174573c38121047c90fe414faebe88e22cbf8c", "url": "https://github.com/apache/hive/commit/e2174573c38121047c90fe414faebe88e22cbf8c", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries", "committedDate": "2020-08-28T07:01:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODI5Ng==", "url": "https://github.com/apache/hive/pull/1437#discussion_r479498296", "bodyText": "Should we set the default to 2 now that it is only triggered in very specific cases?", "author": "jcamachor", "createdAt": "2020-08-28T19:35:28Z", "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "diffHunk": "@@ -2591,6 +2591,10 @@ private static void populateLlapDaemonVarsSet(Set<String> llapDaemonVarsSetLocal\n     HIVE_CTE_MATERIALIZE_THRESHOLD(\"hive.optimize.cte.materialize.threshold\", -1,", "originalCommit": "e2174573c38121047c90fe414faebe88e22cbf8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk5MjA5NA==", "url": "https://github.com/apache/hive/pull/1437#discussion_r479992094", "bodyText": "done", "author": "kasakrisz", "createdAt": "2020-08-31T08:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODI5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "341fe738ea68334908155d3c39c6f3ed0c8b883e", "chunk": "diff --git a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java\nindex 8c234de698..d9e7448e4f 100644\n--- a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java\n+++ b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java\n\n@@ -2588,7 +2594,7 @@ private static void populateLlapDaemonVarsSet(Set<String> llapDaemonVarsSetLocal\n             + \"to be used when reading the large table data. This will result less CPU cycles spent for decoding unused data.\"),\n \n     // CTE\n-    HIVE_CTE_MATERIALIZE_THRESHOLD(\"hive.optimize.cte.materialize.threshold\", -1,\n+    HIVE_CTE_MATERIALIZE_THRESHOLD(\"hive.optimize.cte.materialize.threshold\", 2,\n         \"If the number of references to a CTE clause exceeds this threshold, Hive will materialize it\\n\" +\n         \"before executing the main query block. -1 will disable this feature.\"),\n     HIVE_CTE_MATERIALIZE_FULL_AGGREGATE_ONLY(\"hive.optimize.cte.materialize.full.aggregate.only\", true,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMDkxMg==", "url": "https://github.com/apache/hive/pull/1437#discussion_r479500912", "bodyText": "Trying to understand this step. Does this lead to parsing the same subquery multiple times?", "author": "jcamachor", "createdAt": "2020-08-28T19:41:52Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/QB.java", "diffHunk": "@@ -457,4 +469,17 @@ public boolean hasTableDefined() {\n     return !(aliases.size() == 1 && aliases.get(0).equals(SemanticAnalyzer.DUMMY_TABLE));\n   }\n \n+  public void addSubqExprAlias(ASTNode expressionTree, SemanticAnalyzer semanticAnalyzer) throws SemanticException {\n+    String alias = \"__subexpr\" + subQueryExpressionAliasCounter++;\n+\n+    // Recursively do the first phase of semantic analysis for the subquery\n+    QBExpr qbexpr = new QBExpr(alias);\n+\n+    ASTNode subqref = (ASTNode) expressionTree.getChild(1);\n+    semanticAnalyzer.doPhase1QBExpr(subqref, qbexpr, getId(), alias, isInsideView());", "originalCommit": "e2174573c38121047c90fe414faebe88e22cbf8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk5MjgwMg==", "url": "https://github.com/apache/hive/pull/1437#discussion_r479992802", "bodyText": "This step parses the subquery only. It is necessary to collect references to the CTEs in subquery expressions.", "author": "kasakrisz", "createdAt": "2020-08-31T08:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMDkxMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTQ0MQ==", "url": "https://github.com/apache/hive/pull/1437#discussion_r479501441", "bodyText": "Although the method is evident, could we add a comment?\nShould this be static since it is a utility method that can be used beyond this scope?", "author": "jcamachor", "createdAt": "2020-08-28T19:43:12Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java", "diffHunk": "@@ -677,6 +685,33 @@ public void setNoScanAnalyzeCommand(boolean isNoScanAnalyzeCommand) {\n   public boolean hasInsertTables() {\n     return this.insertIntoTables.size() > 0 || this.insertOverwriteTables.size() > 0;\n   }\n+\n+  public boolean isFullyAggregate() throws SemanticException {", "originalCommit": "e2174573c38121047c90fe414faebe88e22cbf8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk5NDI4MA==", "url": "https://github.com/apache/hive/pull/1437#discussion_r479994280", "bodyText": "Added javadocs. I think it can be non-static until it is used from another location. It uses the destToSelExpr field located in QBParseInfo.", "author": "kasakrisz", "createdAt": "2020-08-31T09:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTQ0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "341fe738ea68334908155d3c39c6f3ed0c8b883e", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java\nindex 087a3079da..dd8a65407c 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java\n\n@@ -686,6 +686,20 @@ public boolean hasInsertTables() {\n     return this.insertIntoTables.size() > 0 || this.insertOverwriteTables.size() > 0;\n   }\n \n+  /**\n+   * Check whether all the expressions in the select clause are aggregate function calls.\n+   * This method starts iterating through the AST nodes representing the expressions in the select clause stored in\n+   * this object. An expression is considered to be an aggregate function call if:\n+   * <ul>\n+   *   <li>the AST node type is either TOK_FUNCTION, TOK_FUNCTIONDI or TOK_FUNCTIONSTAR</li>\n+   *   <li>the first child of the node is the name of the function</li>\n+   *   <li>function is registered in Hive</li>\n+   *   <li>the registered function with the specified name is a Generic User Defined Aggregate</li>\n+   * </ul>\n+   * If any of the mentioned criteria fails to match to the current expression this function returns false.\n+   * @return true if all the expressions in the select clause are aggregate function calls.\n+   * @throws SemanticException - thrown when {@link FunctionRegistry#getFunctionInfo} fails.\n+   */\n   public boolean isFullyAggregate() throws SemanticException {\n     for (ASTNode selectClause : destToSelExpr.values()) {\n       for (Node node : selectClause.getChildren()) {\n"}}, {"oid": "341fe738ea68334908155d3c39c6f3ed0c8b883e", "url": "https://github.com/apache/hive/commit/341fe738ea68334908155d3c39c6f3ed0c8b883e", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries - address review comments", "committedDate": "2020-08-31T08:47:49Z", "type": "forcePushed"}, {"oid": "f8b10c84fb8d1caff99e13d4d4d1bf02b8b4eab7", "url": "https://github.com/apache/hive/commit/f8b10c84fb8d1caff99e13d4d4d1bf02b8b4eab7", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries - address review comments", "committedDate": "2020-08-31T09:15:10Z", "type": "forcePushed"}, {"oid": "37e5229f20981237e89b4637e6b4540aa936f271", "url": "https://github.com/apache/hive/commit/37e5229f20981237e89b4637e6b4540aa936f271", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries", "committedDate": "2020-09-02T04:11:25Z", "type": "commit"}, {"oid": "6cf7c06b9043171af40629e16a573b784ccb013e", "url": "https://github.com/apache/hive/commit/6cf7c06b9043171af40629e16a573b784ccb013e", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries - address review comments", "committedDate": "2020-09-02T04:11:25Z", "type": "commit"}, {"oid": "143eb43d659e83ef673a850e513b9ef464580831", "url": "https://github.com/apache/hive/commit/143eb43d659e83ef673a850e513b9ef464580831", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries - update q outs", "committedDate": "2020-09-02T04:11:25Z", "type": "commit"}, {"oid": "25dd3fcf98254f4b57bde9ed59283db536a3b48e", "url": "https://github.com/apache/hive/commit/25dd3fcf98254f4b57bde9ed59283db536a3b48e", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries - set threshold to 3", "committedDate": "2020-09-02T04:34:52Z", "type": "commit"}, {"oid": "25dd3fcf98254f4b57bde9ed59283db536a3b48e", "url": "https://github.com/apache/hive/commit/25dd3fcf98254f4b57bde9ed59283db536a3b48e", "message": "HIVE-24081: Enable pre-materializing CTEs referenced in scalar subqueries - set threshold to 3", "committedDate": "2020-09-02T04:34:52Z", "type": "forcePushed"}]}