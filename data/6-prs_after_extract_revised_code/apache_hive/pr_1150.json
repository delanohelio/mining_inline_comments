{"pr_number": 1150, "pr_title": "HIVE-23729", "pr_createdAt": "2020-06-19T12:28:22Z", "pr_url": "https://github.com/apache/hive/pull/1150", "timeline": [{"oid": "de409555022d28fe1b9203905742b5a55a85339e", "url": "https://github.com/apache/hive/commit/de409555022d28fe1b9203905742b5a55a85339e", "message": "HIVE-23729\n\nChange-Id: Ia26af6a11336b60d074e8f7094ed23bcc9421d99", "committedDate": "2020-06-19T12:22:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4NTI5OA==", "url": "https://github.com/apache/hive/pull/1150#discussion_r443185298", "bodyText": "This comment could be optimized. The logic isn't really explained well and that parameter description doesn't help much either.", "author": "draese", "createdAt": "2020-06-21T06:03:51Z", "path": "ql/src/java/org/apache/hadoop/hive/llap/LlapHiveUtils.java", "diffHunk": "@@ -48,18 +50,27 @@ private LlapHiveUtils() {\n     // Not to be used;\n   }\n \n-  public static CacheTag getDbAndTableNameForMetrics(Path path, boolean includeParts,\n-        Map<Path, PartitionDesc> parts) {\n-\n-    assert(parts != null);\n+  /**\n+   * Takes path and a map of partition descs, returns the entry associated with the given path.", "originalCommit": "de409555022d28fe1b9203905742b5a55a85339e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "887fe7482b0237c60d712f67d4c2acbd46537459", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/llap/LlapHiveUtils.java b/ql/src/java/org/apache/hadoop/hive/llap/LlapHiveUtils.java\nindex 11a6684d68..27799693b8 100644\n--- a/ql/src/java/org/apache/hadoop/hive/llap/LlapHiveUtils.java\n+++ b/ql/src/java/org/apache/hadoop/hive/llap/LlapHiveUtils.java\n\n@@ -51,10 +51,12 @@ private LlapHiveUtils() {\n   }\n \n   /**\n-   * Takes path and a map of partition descs, returns the entry associated with the given path.\n-   * @param path the path to look for\n+   * Takes a Path and looks up the PartitionDesc instance associated with it in a map of Path->PartitionDesc entries.\n+   * If it is not found (e.g. Path denotes a partition path, but map contains table level instances only) we will try\n+   * to do the same with the parent of this path, traversing up until there's a match, if any.\n+   * @param path the absolute path used for the look up\n    * @param partitionDescMap the map\n-   * @return PartitionDesc instance if found, null if not found\n+   * @return the PartitionDesc instance if found, null if not found\n    */\n   public static PartitionDesc partitionDescForPath(Path path, Map<Path, PartitionDesc> partitionDescMap) {\n     assert(partitionDescMap != null);\n"}}, {"oid": "887fe7482b0237c60d712f67d4c2acbd46537459", "url": "https://github.com/apache/hive/commit/887fe7482b0237c60d712f67d4c2acbd46537459", "message": "Adjusting javadoc for partitionDescForPath method\n\nChange-Id: I2205fb6ffdc4021e8277d5173239fcfb396e591e", "committedDate": "2020-06-22T13:08:32Z", "type": "commit"}]}