{"pr_number": 1817, "pr_title": "HIVE-24278: Implement an UDF for throwing exception in arbitrary vertex", "pr_createdAt": "2020-12-27T16:48:24Z", "pr_url": "https://github.com/apache/hive/pull/1817", "timeline": [{"oid": "5a665397e10935640a97eea5516c663c1744390b", "url": "https://github.com/apache/hive/commit/5a665397e10935640a97eea5516c663c1744390b", "message": "HIVE-24278: Implement an UDF for throwing exception in arbitrary vertex", "committedDate": "2020-12-28T12:12:01Z", "type": "forcePushed"}, {"oid": "d9b3a5233be803481288c9b29d1da8e1f77163ad", "url": "https://github.com/apache/hive/commit/d9b3a5233be803481288c9b29d1da8e1f77163ad", "message": "HIVE-24278: Implement an UDF for throwing exception in arbitrary vertex", "committedDate": "2020-12-28T23:31:21Z", "type": "forcePushed"}, {"oid": "7dd331879e49994ffac4e73e5ff519f6ddeaff7d", "url": "https://github.com/apache/hive/commit/7dd331879e49994ffac4e73e5ff519f6ddeaff7d", "message": "HIVE-24278: Implement an UDF for throwing exception in arbitrary vertex", "committedDate": "2020-12-29T01:35:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjMyNjY5NQ==", "url": "https://github.com/apache/hive/pull/1817#discussion_r556326695", "bodyText": "I know it will be mostly just us using this - but it would be helpfull to document the accepted format (and probably throw an exception if something else is passed)", "author": "kgyrtkirk", "createdAt": "2021-01-13T08:00:59Z", "path": "ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFExceptionInVertex.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hive.ql.udf.generic;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.hadoop.hive.ql.exec.Description;\n+import org.apache.hadoop.hive.ql.exec.MapredContext;\n+import org.apache.hadoop.hive.ql.exec.UDFArgumentException;\n+import org.apache.hadoop.hive.ql.exec.UDFArgumentTypeException;\n+import org.apache.hadoop.hive.ql.exec.tez.TezProcessor;\n+import org.apache.hadoop.hive.ql.metadata.HiveException;\n+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.WritableConstantIntObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.WritableConstantStringObjectInspector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This class implements the UDF which can throw an exception in arbitrary vertex (typically mapper)\n+ * / task / task attempt. For throwing exception in reducer side, where most probably\n+ * GroupByOperator codepath applies, GenericUDAFExceptionInVertex is used.\n+ */\n+@Description(name = \"exception_in_vertex_udf\", value = \"_FUNC_(vertexName, taskNumberExpression, taskAttemptNumberExpression)\")\n+public class GenericUDFExceptionInVertex extends GenericUDF {\n+  private static final Logger LOG = LoggerFactory.getLogger(GenericUDFExceptionInVertex.class);\n+\n+  private String vertexName;\n+  private String taskNumberExpr;\n+  private String taskAttemptNumberExpr;\n+  private String currentVertexName;\n+  private int currentTaskNumber;\n+  private int currentTaskAttemptNumber;\n+  private boolean alreadyCheckedAndPassed;\n+\n+  @Override\n+  public ObjectInspector initialize(ObjectInspector[] parameters) throws UDFArgumentException {\n+    if (parameters.length < 2) {\n+      throw new UDFArgumentTypeException(-1,\n+          \"At least two argument is expected (fake column ref, vertex name)\");\n+    }\n+\n+    this.vertexName = getVertexName(parameters, 1);\n+    this.taskNumberExpr = getTaskNumber(parameters, 2);\n+    this.taskAttemptNumberExpr = getTaskAttemptNumber(parameters, 3);", "originalCommit": "7dd331879e49994ffac4e73e5ff519f6ddeaff7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1NjUzNw==", "url": "https://github.com/apache/hive/pull/1817#discussion_r557456537", "bodyText": "thanks for taking a look @kgyrtkirk! there are examples in exception_in_vertex_udf.q, do you think it's enough to mention it here?", "author": "abstractdog", "createdAt": "2021-01-14T14:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjMyNjY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1OTg4Mw==", "url": "https://github.com/apache/hive/pull/1817#discussion_r557459883", "bodyText": "I was thinking to add some notes about it to the @Description - I would look there first in an UDF", "author": "kgyrtkirk", "createdAt": "2021-01-14T15:02:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjMyNjY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODMwNDcxMQ==", "url": "https://github.com/apache/hive/pull/1817#discussion_r558304711", "bodyText": "sure, fixed in new commit", "author": "abstractdog", "createdAt": "2021-01-15T13:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjMyNjY5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5c35f11ee8cf7b78cc296a7ab56ff12b711a51ef", "chunk": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFExceptionInVertex.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFExceptionInVertex.java\nindex e1abe1b744..55ed806081 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFExceptionInVertex.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFExceptionInVertex.java\n\n@@ -39,7 +39,18 @@\n  * / task / task attempt. For throwing exception in reducer side, where most probably\n  * GroupByOperator codepath applies, GenericUDAFExceptionInVertex is used.\n  */\n-@Description(name = \"exception_in_vertex_udf\", value = \"_FUNC_(vertexName, taskNumberExpression, taskAttemptNumberExpression)\")\n+@Description(name = \"exception_in_vertex_udf\",\n+    value = \"_FUNC_(hintColumn, vertexName, taskNumberExpression, taskAttemptNumberExpression\"\n+        + \"Throws exception in Map tasks, where UDF running is possible\",\n+    extended = \"hintColumn is needed for easy-locating mapper stage\" +\n+        \" please refer to full examples and explanation in exception_in_vertex_udf.q: \"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1', 0, 0)          -> Map1, first task, first attempt\"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1', '0,1,2', '*')  -> Map1, tasks: 0,1,2, all attempts\"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1', '*', 0)        -> Map1, all tasks, first attempt\"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1', '0-2', '*')    -> Map1, tasks: 0,1,2, all attempts\"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1', '*', '*')      -> Map1, all tasks, all attempts\"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1', '*')           -> Map1, all tasks, all attempts\"\n+        + \"exception_in_vertex_udf (src1.value, 'Map 1')                -> Map1, all tasks, all attempts\")\n public class GenericUDFExceptionInVertex extends GenericUDF {\n   private static final Logger LOG = LoggerFactory.getLogger(GenericUDFExceptionInVertex.class);\n \n"}}, {"oid": "5c35f11ee8cf7b78cc296a7ab56ff12b711a51ef", "url": "https://github.com/apache/hive/commit/5c35f11ee8cf7b78cc296a7ab56ff12b711a51ef", "message": "HIVE-24278: Implement an UDF for throwing exception in arbitrary vertex", "committedDate": "2021-01-15T13:24:36Z", "type": "commit"}, {"oid": "5c35f11ee8cf7b78cc296a7ab56ff12b711a51ef", "url": "https://github.com/apache/hive/commit/5c35f11ee8cf7b78cc296a7ab56ff12b711a51ef", "message": "HIVE-24278: Implement an UDF for throwing exception in arbitrary vertex", "committedDate": "2021-01-15T13:24:36Z", "type": "forcePushed"}]}