{"pr_number": 4667, "pr_title": "Issue #4662 Ensure contextDestroyed called after filters and servlets destroyed", "pr_createdAt": "2020-03-12T15:30:34Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4667", "timeline": [{"oid": "8da9ee7e76e8b480f1ee3fe87a22ad5cd58b4085", "url": "https://github.com/eclipse/jetty.project/commit/8da9ee7e76e8b480f1ee3fe87a22ad5cd58b4085", "message": "Issue #4662 Ensure contextDestroyed called after filters and servlets destroyed\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-03-12T15:25:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzIxMw==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r393917213", "bodyText": "What is this comment all about?\nDoes using ServletHolder via ServletContextHandler change the behavior in some way?", "author": "joakime", "createdAt": "2020-03-17T19:25:44Z", "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/ServletLifeCycleTest.java", "diffHunk": "@@ -60,8 +60,8 @@ public void testLifeCycle() throws Exception\n         context.getObjectFactory().addDecorator(new TestDecorator());\n \n         ServletHandler sh = context.getServletHandler();\n-        sh.addListener(new ListenerHolder(TestListener.class));\n-        context.addEventListener(context.getServletContext().createListener(TestListener2.class));\n+        sh.addListener(new ListenerHolder(TestListener.class)); //added directly to ServletHandler\n+        context.addEventListener(context.getServletContext().createListener(TestListener2.class));//create,decorate and add listener to context - no holder!", "originalCommit": "8da9ee7e76e8b480f1ee3fe87a22ad5cd58b4085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEwNDM5MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r395104391", "bodyText": "The decoration of the listener happens when the listener instance is created. If you call ServletContext.createListener(Class), then the instance is created at that point and the decoration happens at that point.  If you call ServletHandler.addListener(ListenerHolder), the ListenerHolder delays the creation of the instance until the holder is started, thus the decoration and adding of the listener instance to the ServletHandler happens at a different point.", "author": "janbartel", "createdAt": "2020-03-19T15:15:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzIxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExNTYwMg==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r395115602", "bodyText": "ah.", "author": "joakime", "createdAt": "2020-03-19T15:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzIxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzc0Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r393917742", "bodyText": "Does a servlet added via the dynamic ServletContext.addServlet() methods during servlet init trip this up in any way?", "author": "joakime", "createdAt": "2020-03-17T19:26:43Z", "path": "jetty-servlet/src/test/java/org/eclipse/jetty/servlet/ServletContextHandlerTest.java", "diffHunk": "@@ -405,6 +475,37 @@ public void destroyServer() throws Exception\n         _server.join();\n     }\n \n+    @Test\n+    public void testDestroyOrder() throws Exception", "originalCommit": "8da9ee7e76e8b480f1ee3fe87a22ad5cd58b4085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExMTMxMA==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r395111310", "bodyText": "No,  ServletContext.addServlet() impl always creates a ServletHolder and adds it to the ServletHandler list of ServletHolders. The ServletHandler.initialize() method isn't called during the start sequence until AFTER the ServletContainerInitializers have already been called (and thus any ServletHolders created by the SCI will already have been added to the ServletHandler).", "author": "janbartel", "createdAt": "2020-03-19T15:25:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzc0Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNTc5Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r394215796", "bodyText": "We need a way to ensure that contextDestroyed is called by the ContextHandler if there is no ServletHandler present.", "author": "gregw", "createdAt": "2020-03-18T09:40:48Z", "path": "jetty-servlet/src/main/java/org/eclipse/jetty/servlet/ServletHandler.java", "diffHunk": "@@ -307,6 +308,9 @@ protected synchronized void doStop()\n         _servlets = shs;\n         ServletMapping[] sms = (ServletMapping[])LazyList.toArray(servletMappings, ServletMapping.class);\n         _servletMappings = sms;\n+        \n+        if (_contextHandler != null)\n+            _contextHandler.contextDestroyed();", "originalCommit": "8da9ee7e76e8b480f1ee3fe87a22ad5cd58b4085", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExMTc5Nw==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r395111797", "bodyText": "In this PR or can this be done in a further PR?", "author": "janbartel", "createdAt": "2020-03-19T15:25:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNTc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwNzk1NA==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r396307954", "bodyText": "Let's get it done in this PR as it might need a little adjusting.\nThe issue being that it is asymmetric.... if there is a ServletHandler, then ContextHandler need not call contextDestroyed, but ContextHandler doesn't know about ServletHandlers.\nSo perhaps ContextHandler should have a marker interface called something like ContextDestroyer, that ServletHandler can implement.   It will have no methods, but ContextHandler can check if any of it's contained handlers implements ContextDestroyer, and if so then it doesn't call contextDestoyed.", "author": "gregw", "createdAt": "2020-03-23T09:20:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNTc5Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "cd85d116026ef1f2047458f7ac203f88ac1288af", "url": "https://github.com/eclipse/jetty.project/commit/cd85d116026ef1f2047458f7ac203f88ac1288af", "message": "Issue # 4662 Call contextInitialized/Destroyed without ServletHandler\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-03-31T14:26:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MDQzMg==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r402180432", "bodyText": "Not a big fan of the name UNSET.\nAn alternative would be to have\n    Boolean initialized; // null==not initialized; TRUE==initialized;  FALSE==destroyed \nHmmm can't use a switch then... but maybe that's not necessary in most cases?\nPerhaps just rename UNSET to STOPPED or IDLE  or  'NOT_INITIALIZED`", "author": "gregw", "createdAt": "2020-04-02T09:35:45Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -177,6 +177,14 @@ public static void setServerInfo(String serverInfo)\n         __serverInfo = serverInfo;\n     }\n \n+    public enum ContextStatus", "originalCommit": "cd85d116026ef1f2047458f7ac203f88ac1288af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9d57bf3782ef94e1d0a9c4c375ce30c0633aa5e6", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\nindex 2efee5116e..79021a150a 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\n\n@@ -179,12 +179,12 @@ public class ContextHandler extends ScopedHandler implements Attributes, Gracefu\n \n     public enum ContextStatus\n     {\n-        UNSET, \n+        NOTSET, \n         INITIALIZED,\n         DESTROYED\n     }\n     \n-    protected ContextStatus _contextStatus = ContextStatus.UNSET;\n+    protected ContextStatus _contextStatus = ContextStatus.NOTSET;\n     protected Context _scontext;\n     private final AttributesMap _attributes;\n     private final Map<String, String> _initParams;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MDk0MA==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r402180940", "bodyText": "Perhaps a comment here that this can be called earlier in the sequence by ServletHandler.", "author": "gregw", "createdAt": "2020-04-02T09:36:38Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -823,6 +831,8 @@ protected void doStart() throws Exception\n \n             // defers the calling of super.doStart()\n             startContext();\n+            \n+            contextInitialized();", "originalCommit": "cd85d116026ef1f2047458f7ac203f88ac1288af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MTI2OQ==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r402181269", "bodyText": "perhaps a comment explaining where this can be called from", "author": "gregw", "createdAt": "2020-04-02T09:37:11Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -885,35 +895,68 @@ protected void startContext() throws Exception\n \n     public void contextDestroyed() throws Exception\n     {\n-        MultiException ex = new MultiException();\n-        ServletContextEvent event = new ServletContextEvent(_scontext);\n-        Collections.reverse(_destroyServletContextListeners);\n-        for (ServletContextListener listener : _destroyServletContextListeners)\n+        switch (_contextStatus)\n         {\n-            try\n+            case INITIALIZED:\n             {\n-                callContextDestroyed(listener, event);\n-            }\n-            catch (Exception x)\n-            {\n-                ex.add(x);\n+                try\n+                {\n+                    //Call context listeners\n+                    MultiException ex = new MultiException();\n+                    ServletContextEvent event = new ServletContextEvent(_scontext);\n+                    Collections.reverse(_destroyServletContextListeners);\n+                    for (ServletContextListener listener : _destroyServletContextListeners)\n+                    {\n+                        try\n+                        {\n+                            callContextDestroyed(listener, event);\n+                        }\n+                        catch (Exception x)\n+                        {\n+                            ex.add(x);\n+                        }\n+                    }\n+                    ex.ifExceptionThrow();\n+                }\n+                finally\n+                {\n+                    _contextStatus = ContextStatus.DESTROYED;\n+                }\n+                break;\n             }\n+            default:\n+                break;\n         }\n-        ex.ifExceptionThrow();\n     }\n-    \n+\n     public void contextInitialized() throws Exception\n     {\n         // Call context listeners", "originalCommit": "cd85d116026ef1f2047458f7ac203f88ac1288af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9d57bf3782ef94e1d0a9c4c375ce30c0633aa5e6", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\nindex 2efee5116e..79021a150a 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\n\n@@ -893,34 +893,38 @@ public class ContextHandler extends ScopedHandler implements Attributes, Gracefu\n         super.doStart();\n     }\n \n-    public void contextDestroyed() throws Exception\n+    /**\n+     * Call the ServletContextListeners contextInitialized methods.\n+     * This can be called from a ServletHandler during the proper sequence\n+     * of initializing filters, servlets and listeners. However, if there is\n+     * no ServletHandler, the ContextHandler will call this method during\n+     * doStart().\n+     * \n+     * @throws Exception\n+     */\n+    public void contextInitialized() throws Exception\n     {\n+        // Call context listeners\n         switch (_contextStatus)\n         {\n-            case INITIALIZED:\n+            case NOTSET:\n             {\n                 try\n                 {\n-                    //Call context listeners\n-                    MultiException ex = new MultiException();\n-                    ServletContextEvent event = new ServletContextEvent(_scontext);\n-                    Collections.reverse(_destroyServletContextListeners);\n-                    for (ServletContextListener listener : _destroyServletContextListeners)\n+                    _destroyServletContextListeners.clear();\n+                    if (!_servletContextListeners.isEmpty())\n                     {\n-                        try\n-                        {\n-                            callContextDestroyed(listener, event);\n-                        }\n-                        catch (Exception x)\n+                        ServletContextEvent event = new ServletContextEvent(_scontext);\n+                        for (ServletContextListener listener : _servletContextListeners)\n                         {\n-                            ex.add(x);\n+                            callContextInitialized(listener, event);\n+                            _destroyServletContextListeners.add(listener);\n                         }\n                     }\n-                    ex.ifExceptionThrow();\n                 }\n                 finally\n                 {\n-                    _contextStatus = ContextStatus.DESTROYED;\n+                    _contextStatus = ContextStatus.INITIALIZED;\n                 }\n                 break;\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MTkzNA==", "url": "https://github.com/eclipse/jetty.project/pull/4667#discussion_r402181934", "bodyText": "perhaps a comment saying where this can be called from.\nAlso can we move the method to be after contextInitialized... I like order to match natural sequence.", "author": "gregw", "createdAt": "2020-04-02T09:38:17Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java", "diffHunk": "@@ -885,35 +895,68 @@ protected void startContext() throws Exception\n \n     public void contextDestroyed() throws Exception\n     {\n-        MultiException ex = new MultiException();\n-        ServletContextEvent event = new ServletContextEvent(_scontext);\n-        Collections.reverse(_destroyServletContextListeners);\n-        for (ServletContextListener listener : _destroyServletContextListeners)\n+        switch (_contextStatus)", "originalCommit": "cd85d116026ef1f2047458f7ac203f88ac1288af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9d57bf3782ef94e1d0a9c4c375ce30c0633aa5e6", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\nindex 2efee5116e..79021a150a 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandler.java\n\n@@ -893,34 +893,38 @@ public class ContextHandler extends ScopedHandler implements Attributes, Gracefu\n         super.doStart();\n     }\n \n-    public void contextDestroyed() throws Exception\n+    /**\n+     * Call the ServletContextListeners contextInitialized methods.\n+     * This can be called from a ServletHandler during the proper sequence\n+     * of initializing filters, servlets and listeners. However, if there is\n+     * no ServletHandler, the ContextHandler will call this method during\n+     * doStart().\n+     * \n+     * @throws Exception\n+     */\n+    public void contextInitialized() throws Exception\n     {\n+        // Call context listeners\n         switch (_contextStatus)\n         {\n-            case INITIALIZED:\n+            case NOTSET:\n             {\n                 try\n                 {\n-                    //Call context listeners\n-                    MultiException ex = new MultiException();\n-                    ServletContextEvent event = new ServletContextEvent(_scontext);\n-                    Collections.reverse(_destroyServletContextListeners);\n-                    for (ServletContextListener listener : _destroyServletContextListeners)\n+                    _destroyServletContextListeners.clear();\n+                    if (!_servletContextListeners.isEmpty())\n                     {\n-                        try\n-                        {\n-                            callContextDestroyed(listener, event);\n-                        }\n-                        catch (Exception x)\n+                        ServletContextEvent event = new ServletContextEvent(_scontext);\n+                        for (ServletContextListener listener : _servletContextListeners)\n                         {\n-                            ex.add(x);\n+                            callContextInitialized(listener, event);\n+                            _destroyServletContextListeners.add(listener);\n                         }\n                     }\n-                    ex.ifExceptionThrow();\n                 }\n                 finally\n                 {\n-                    _contextStatus = ContextStatus.DESTROYED;\n+                    _contextStatus = ContextStatus.INITIALIZED;\n                 }\n                 break;\n             }\n"}}, {"oid": "9d57bf3782ef94e1d0a9c4c375ce30c0633aa5e6", "url": "https://github.com/eclipse/jetty.project/commit/9d57bf3782ef94e1d0a9c4c375ce30c0633aa5e6", "message": "Issue #4662 after review\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-04-02T10:20:54Z", "type": "commit"}]}