{"pr_number": 4839, "pr_title": "Issue #4830 - Enabling JMX on jetty-slf4j-impl", "pr_createdAt": "2020-05-03T08:07:38Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4839", "timeline": [{"oid": "67bd321bfcf62a32deb658fd7619245e774606fa", "url": "https://github.com/eclipse/jetty.project/commit/67bd321bfcf62a32deb658fd7619245e774606fa", "message": "Issue #4830 - Enabling JMX on jetty-slf4j-impl\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-04-30T19:51:42Z", "type": "commit"}, {"oid": "c144358f421a774ab1f34fbae1a173ea453baa60", "url": "https://github.com/eclipse/jetty.project/commit/c144358f421a774ab1f34fbae1a173ea453baa60", "message": "Issue #4830 - Adding jmx entries for logging-jetty module\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-05-01T13:34:13Z", "type": "commit"}, {"oid": "95d981b699c2d25304e98f779ff75a3b70b107c3", "url": "https://github.com/eclipse/jetty.project/commit/95d981b699c2d25304e98f779ff75a3b70b107c3", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-4830-jetty-slf4j-impl-with-jmx", "committedDate": "2020-05-01T13:34:29Z", "type": "commit"}, {"oid": "d2399205ff7d7820c6757d0f9f4acec9bea79412", "url": "https://github.com/eclipse/jetty.project/commit/d2399205ff7d7820c6757d0f9f4acec9bea79412", "message": "Issue #4830 - Add JMX to new Jetty 10 jetty-slf4j-impl.\n\nAlternative implementation that adds JMX support for jetty-slf4j-impl.\n\nThis version modifies MBeanContainer to be aware of @MXBean annotations and *MBean and *MXBean interfaces, so it does not require a dependency on jetty-jmx nor on java.management.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-03T08:06:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDA0Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419140046", "bodyText": "What?\nOFF != ERROR", "author": "joakime", "createdAt": "2020-05-03T18:19:40Z", "path": "jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JettyLoggerTest.java", "diffHunk": "@@ -526,7 +526,7 @@ public void testToString()\n         assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=ERROR\"));\n \n         log.setLevel(JettyLogger.OFF);\n-        assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=OFF\"));\n+        assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=ERROR\"));", "originalCommit": "d2399205ff7d7820c6757d0f9f4acec9bea79412", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NDQ1MA==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419144450", "bodyText": "In #4831, \"OFF\" is converted to 999 and 999 is converted to Level.ERROR. So, uhm, why don't we get rid of OFF and just call it ERROR so it conforms to SLF4J?", "author": "sbordet", "createdAt": "2020-05-03T18:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1c4f05d2d8a6f6b02c7033576569525e88463759", "chunk": "diff --git a/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JettyLoggerTest.java b/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JettyLoggerTest.java\nindex 857afc1978..02a0167f45 100644\n--- a/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JettyLoggerTest.java\n+++ b/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JettyLoggerTest.java\n\n@@ -510,23 +510,23 @@ public class JettyLoggerTest\n \n         JettyLogger log = factory.getJettyLogger(\"xxx\");\n \n-        log.setLevel(Level.TRACE);\n+        log.setLevel(JettyLevel.TRACE);\n         assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=TRACE\"));\n \n-        log.setLevel(Level.DEBUG);\n+        log.setLevel(JettyLevel.DEBUG);\n         assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=DEBUG\"));\n \n-        log.setLevel(Level.INFO);\n+        log.setLevel(JettyLevel.INFO);\n         assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=INFO\"));\n \n-        log.setLevel(Level.WARN);\n+        log.setLevel(JettyLevel.WARN);\n         assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=WARN\"));\n \n-        log.setLevel(Level.ERROR);\n+        log.setLevel(JettyLevel.ERROR);\n         assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=ERROR\"));\n \n-        log.setLevel(JettyLogger.OFF);\n-        assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=ERROR\"));\n+        log.setLevel(JettyLevel.OFF);\n+        assertThat(\"Logger.toString\", log.toString(), is(\"JettyLogger:xxx:LEVEL=OFF\"));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDMwNg==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419140306", "bodyText": "This needs testing.\nAlso, if someone provides an invalid levelStr, either from JMX or from the properties file, it should output a System.err indicating the bad usage and what are valid values, if used from a properties file, the name/key of the property should be indicated as well.", "author": "joakime", "createdAt": "2020-05-03T18:21:44Z", "path": "jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/LevelUtils.java", "diffHunk": "@@ -0,0 +1,57 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.logging;\n+\n+import java.util.Locale;\n+\n+import org.slf4j.event.Level;\n+\n+public class LevelUtils\n+{\n+    public static Integer getLevelInt(String levelStr)", "originalCommit": "d2399205ff7d7820c6757d0f9f4acec9bea79412", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NTQzMw==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419145433", "bodyText": "I disagree on System.err because it often gets replaced to a logger and it would cause a stack overflow.\nDo we have a way to be completely sure that System.err is not replaced with one of our loggers?\nWhat more testing do you need?", "author": "sbordet", "createdAt": "2020-05-03T19:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDMwNg=="}], "type": "inlineReview", "revised_code": {"commit": "1c4f05d2d8a6f6b02c7033576569525e88463759", "chunk": "diff --git a/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/LevelUtils.java b/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/LevelUtils.java\ndeleted file mode 100644\nindex 9f4cbfbac2..0000000000\n--- a/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/LevelUtils.java\n+++ /dev/null\n\n@@ -1,57 +0,0 @@\n-//\n-// ========================================================================\n-// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n-//\n-// This program and the accompanying materials are made available under\n-// the terms of the Eclipse Public License 2.0 which is available at\n-// https://www.eclipse.org/legal/epl-2.0\n-//\n-// This Source Code may also be made available under the following\n-// Secondary Licenses when the conditions for such availability set\n-// forth in the Eclipse Public License, v. 2.0 are satisfied:\n-// the Apache License v2.0 which is available at\n-// https://www.apache.org/licenses/LICENSE-2.0\n-//\n-// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-// ========================================================================\n-//\n-\n-package org.eclipse.jetty.logging;\n-\n-import java.util.Locale;\n-\n-import org.slf4j.event.Level;\n-\n-public class LevelUtils\n-{\n-    public static Integer getLevelInt(String levelStr)\n-    {\n-        try\n-        {\n-            if (levelStr == null)\n-                return null;\n-            String levelName = levelStr.trim().toUpperCase(Locale.ENGLISH);\n-            if (\"ALL\".equals(levelName))\n-                return Level.TRACE.toInt();\n-            return Level.valueOf(levelName).toInt();\n-        }\n-        catch (Throwable x)\n-        {\n-            return null;\n-        }\n-    }\n-\n-    public static Level intToLevel(int level)\n-    {\n-        try\n-        {\n-            if (level < JettyLogger.ALL)\n-                return Level.TRACE;\n-            return Level.intToLevel(level);\n-        }\n-        catch (Throwable x)\n-        {\n-            return Level.ERROR;\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDQyNw==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419140427", "bodyText": "How about using the JMX version here?\nsetLoggerLevel(String loggerName, String levelName)", "author": "joakime", "createdAt": "2020-05-03T18:23:00Z", "path": "jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JMXTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.logging;\n+\n+import java.lang.management.ManagementFactory;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Properties;\n+import javax.management.JMX;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n+\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.event.Level;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class JMXTest\n+{\n+    @Test\n+    public void testJMX() throws Exception\n+    {\n+        MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();\n+\n+        Properties props = new Properties();\n+        JettyLoggerConfiguration config = new JettyLoggerConfiguration(props);\n+        JettyLoggerFactory loggerFactory = new JettyLoggerFactory(config);\n+\n+        ObjectName objectName = ObjectName.getInstance(\"org.eclipse.jetty.logging\", \"type\", JettyLoggerFactory.class.getSimpleName().toLowerCase(Locale.ENGLISH));\n+        mbeanServer.registerMBean(loggerFactory, objectName);\n+\n+        JettyLoggerFactoryMBean mbean = JMX.newMBeanProxy(mbeanServer, objectName, JettyLoggerFactoryMBean.class);\n+\n+        // Only the root logger.\n+        assertEquals(1, mbean.getLoggerCount());\n+\n+        JettyLogger child = loggerFactory.getJettyLogger(\"org.eclipse.jetty.logging\");\n+        JettyLogger parent = loggerFactory.getJettyLogger(\"org.eclipse.jetty\");\n+        assertEquals(3, mbean.getLoggerCount());\n+\n+        // Names are sorted.\n+        List<String> expected = new ArrayList<>(Arrays.asList(JettyLogger.ROOT_LOGGER_NAME, parent.getName(), child.getName()));\n+        expected.sort(String::compareTo);\n+        String[] loggerNames = mbean.getLoggerNames();\n+        assertEquals(expected, Arrays.asList(loggerNames));\n+\n+        // Setting the parent level should propagate to the children.\n+        parent.setLevel(Level.DEBUG);", "originalCommit": "d2399205ff7d7820c6757d0f9f4acec9bea79412", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NDU4MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419144581", "bodyText": "It's done 2 lines below.", "author": "sbordet", "createdAt": "2020-05-03T18:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDQyNw=="}], "type": "inlineReview", "revised_code": {"commit": "1c4f05d2d8a6f6b02c7033576569525e88463759", "chunk": "diff --git a/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JMXTest.java b/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JMXTest.java\nindex 70d6dbda11..6719982f81 100644\n--- a/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JMXTest.java\n+++ b/jetty-slf4j-impl/src/test/java/org/eclipse/jetty/logging/JMXTest.java\n\n@@ -29,7 +29,6 @@ import javax.management.MBeanServer;\n import javax.management.ObjectName;\n \n import org.junit.jupiter.api.Test;\n-import org.slf4j.event.Level;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDUyOQ==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419140529", "bodyText": "last Segment should be ROOT_LOGGER_NAME, not an empty string.", "author": "joakime", "createdAt": "2020-05-03T18:23:58Z", "path": "jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/JettyLoggerFactory.java", "diffHunk": "@@ -74,109 +79,93 @@ public Logger getLogger(String name)\n         return getJettyLogger(name);\n     }\n \n-    protected void walkChildLoggers(String parentName, Consumer<JettyLogger> childConsumer)\n+    void walkChildrenLoggers(String parentName, Consumer<JettyLogger> childConsumer)\n     {\n         String prefix = parentName;\n         if (parentName.length() > 0 && !prefix.endsWith(\".\"))\n-        {\n             prefix += \".\";\n-        }\n \n         for (JettyLogger logger : loggerMap.values())\n         {\n+            // Skip self.\n             if (logger.getName().equals(parentName))\n-            {\n-                // skip self\n                 continue;\n-            }\n \n-            // is child, and is not itself\n+            // It is a child, and is not itself.\n             if (logger.getName().startsWith(prefix))\n-            {\n                 childConsumer.accept(logger);\n-            }\n         }\n     }\n \n-    public JettyLogger getRootLogger()\n+    JettyLogger getRootLogger()\n     {\n         return rootLogger;\n     }\n \n     private JettyLogger createLogger(String name)\n     {\n-        // or is that handled by slf4j itself?\n         JettyAppender appender = rootLogger.getAppender();\n         int level = this.configuration.getLevel(name);\n         boolean hideStacks = this.configuration.getHideStacks(name);\n         return new JettyLogger(this, name, appender, level, hideStacks);\n     }\n \n-    /**\n-     * Condenses a classname by stripping down the package name to just the first character of each package name\n-     * segment.Configured\n-     *\n-     * <pre>\n-     * Examples:\n-     * \"org.eclipse.jetty.test.FooTest\"           = \"oejt.FooTest\"\n-     * \"org.eclipse.jetty.server.logging.LogTest\" = \"orjsl.LogTest\"\n-     * </pre>\n-     *\n-     * @param classname the fully qualified class name\n-     * @return the condensed name\n-     */\n-    protected static String condensePackageString(String classname)\n+    static <T> T walkParentLoggerNames(String startName, Function<String, T> nameFunction)\n     {\n-        if (classname == null || classname.isEmpty())\n-        {\n-            return \"\";\n-        }\n+        if (startName == null)\n+            return null;\n \n-        int rawLen = classname.length();\n-        StringBuilder dense = new StringBuilder(rawLen);\n-        boolean foundStart = false;\n-        boolean hasPackage = false;\n-        int startIdx = -1;\n-        int endIdx = -1;\n-        for (int i = 0; i < rawLen; i++)\n+        // Checking with FQCN first, then each package segment from longest to shortest.\n+        String nameSegment = startName;\n+        while (nameSegment.length() > 0)\n         {\n-            char c = classname.charAt(i);\n-            if (!foundStart)\n-            {\n-                foundStart = Character.isJavaIdentifierStart(c);\n-                if (foundStart)\n-                {\n-                    if (startIdx >= 0)\n-                    {\n-                        dense.append(classname.charAt(startIdx));\n-                        hasPackage = true;\n-                    }\n-                    startIdx = i;\n-                }\n-            }\n-\n-            if (foundStart)\n-            {\n-                if (!Character.isJavaIdentifierPart(c))\n-                {\n-                    foundStart = false;\n-                }\n-                else\n-                {\n-                    endIdx = i;\n-                }\n-            }\n+            T ret = nameFunction.apply(nameSegment);\n+            if (ret != null)\n+                return ret;\n+\n+            // Trim and try again.\n+            int idx = nameSegment.lastIndexOf('.');\n+            if (idx >= 0)\n+                nameSegment = nameSegment.substring(0, idx);\n+            else\n+                break;", "originalCommit": "d2399205ff7d7820c6757d0f9f4acec9bea79412", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NTA1Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r419145056", "bodyText": "I agree, so it was wrong in #4831 too, right?", "author": "sbordet", "createdAt": "2020-05-03T19:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDUyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwMDU2Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4839#discussion_r421600566", "bodyText": "Yeah, I think it has been wrong since before this PR.", "author": "joakime", "createdAt": "2020-05-07T15:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MDUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f98e2f8e140a86aa469830bb2c8327ca7bcc6c82", "chunk": "diff --git a/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/JettyLoggerFactory.java b/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/JettyLoggerFactory.java\nindex e313cbe83b..849d2812e9 100644\n--- a/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/JettyLoggerFactory.java\n+++ b/jetty-slf4j-impl/src/main/java/org/eclipse/jetty/logging/JettyLoggerFactory.java\n\n@@ -130,7 +130,8 @@ public class JettyLoggerFactory implements ILoggerFactory, JettyLoggerFactoryMBe\n             else\n                 break;\n         }\n-        return null;\n+\n+        return nameFunction.apply(Logger.ROOT_LOGGER_NAME);\n     }\n \n     @Override\n"}}, {"oid": "f98e2f8e140a86aa469830bb2c8327ca7bcc6c82", "url": "https://github.com/eclipse/jetty.project/commit/f98e2f8e140a86aa469830bb2c8327ca7bcc6c82", "message": "Issue #4830 - Add JMX to new Jetty 10 jetty-slf4j-impl.\n\nUpdates after review.\nFixed test failures.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-03T19:40:27Z", "type": "commit"}, {"oid": "1c4f05d2d8a6f6b02c7033576569525e88463759", "url": "https://github.com/eclipse/jetty.project/commit/1c4f05d2d8a6f6b02c7033576569525e88463759", "message": "Issue #4830 - Cleaning up Level handling with JettyLevel enum\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-05-08T17:34:12Z", "type": "commit"}, {"oid": "1c2c3892f17c12db2a59411b467d803303a7e9f7", "url": "https://github.com/eclipse/jetty.project/commit/1c2c3892f17c12db2a59411b467d803303a7e9f7", "message": "Issue #4830 - Ensuring we have Logger ROOT configuration ability\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-05-08T17:42:57Z", "type": "commit"}, {"oid": "69e1d119fe3b26e8371d98b1419a987d802c96db", "url": "https://github.com/eclipse/jetty.project/commit/69e1d119fe3b26e8371d98b1419a987d802c96db", "message": "Issue #4830 - Improved notification of configuration mistakes on level names\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-05-08T17:48:46Z", "type": "commit"}, {"oid": "d6d994db5c7a82c03b47270d62681d25dd841ede", "url": "https://github.com/eclipse/jetty.project/commit/d6d994db5c7a82c03b47270d62681d25dd841ede", "message": "Issue #4830 - Add JMX to new Jetty 10 jetty-slf4j-impl.\n\nUpdates after review.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-08T20:03:03Z", "type": "commit"}, {"oid": "41f6e3df5127c3ac01efa8202b3465b2cfa0be88", "url": "https://github.com/eclipse/jetty.project/commit/41f6e3df5127c3ac01efa8202b3465b2cfa0be88", "message": "Issue #4830 - Add JMX to new Jetty 10 jetty-slf4j-impl.\n\nUpdates after review, take 2.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-08T20:16:24Z", "type": "commit"}]}