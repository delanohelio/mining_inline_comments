{"pr_number": 5641, "pr_title": "Issue #5272 Clean up LoginServices and LoginModules", "pr_createdAt": "2020-11-11T19:32:28Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5641", "timeline": [{"oid": "30dc17c414c5dcf7f39015a9149af4e3ec2b878e", "url": "https://github.com/eclipse/jetty.project/commit/30dc17c414c5dcf7f39015a9149af4e3ec2b878e", "message": "Issue #5272 Clean up LoginServices and LoginModules\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-11-11T19:30:01Z", "type": "commit"}, {"oid": "49b7e3513e9c525afd14f3d6406242cea0ba60bb", "url": "https://github.com/eclipse/jetty.project/commit/49b7e3513e9c525afd14f3d6406242cea0ba60bb", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-5272-loginservice-cleanup", "committedDate": "2020-11-12T16:10:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1MzkwMw==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r522253903", "bodyText": "javadoc please", "author": "gregw", "createdAt": "2020-11-12T16:46:30Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/User.java", "diffHunk": "@@ -0,0 +1,52 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.security;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jetty.util.security.Credential;\n+\n+class User", "originalCommit": "49b7e3513e9c525afd14f3d6406242cea0ba60bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ab893d369dc4a2144390fc47ca1c46bf6bfa28f", "chunk": "diff --git a/jetty-security/src/main/java/org/eclipse/jetty/security/User.java b/jetty-security/src/main/java/org/eclipse/jetty/security/User.java\ndeleted file mode 100644\nindex 2079d7ef39..0000000000\n--- a/jetty-security/src/main/java/org/eclipse/jetty/security/User.java\n+++ /dev/null\n\n@@ -1,52 +0,0 @@\n-//\n-// ========================================================================\n-// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n-//\n-// This program and the accompanying materials are made available under\n-// the terms of the Eclipse Public License 2.0 which is available at\n-// https://www.eclipse.org/legal/epl-2.0\n-//\n-// This Source Code may also be made available under the following\n-// Secondary Licenses when the conditions for such availability set\n-// forth in the Eclipse Public License, v. 2.0 are satisfied:\n-// the Apache License v2.0 which is available at\n-// https://www.apache.org/licenses/LICENSE-2.0\n-//\n-// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-// ========================================================================\n-//\n-\n-package org.eclipse.jetty.security;\n-\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-import org.eclipse.jetty.util.security.Credential;\n-\n-class User\n-{\n-    protected UserPrincipal _userPrincipal;\n-    protected List<RolePrincipal> _rolePrincipals = Collections.emptyList();\n-    \n-    protected User(String username, Credential credential, String[] roles)\n-    {\n-        _userPrincipal = new UserPrincipal(username, credential);\n-\n-        _rolePrincipals = Collections.emptyList();\n-        \n-        if (roles != null)\n-            _rolePrincipals = Arrays.stream(roles).map(RolePrincipal::new).collect(Collectors.toList());\n-    }\n-    \n-    protected UserPrincipal getUserPrincipal()\n-    {\n-        return _userPrincipal;\n-    }\n-    \n-    protected List<RolePrincipal> getRolePrincipals()\n-    {\n-        return _rolePrincipals;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1NTYxNA==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r522255614", "bodyText": "more javadoc please", "author": "gregw", "createdAt": "2020-11-12T16:48:53Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java", "diffHunk": "@@ -0,0 +1,48 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.security;\n+\n+import java.io.Serializable;\n+import java.security.Principal;\n+import javax.security.auth.Subject;\n+\n+/**\n+ * RolePrincipal\n+ */\n+public class RolePrincipal implements Principal, Serializable", "originalCommit": "49b7e3513e9c525afd14f3d6406242cea0ba60bb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ab893d369dc4a2144390fc47ca1c46bf6bfa28f", "chunk": "diff --git a/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java b/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java\nindex a32d6e365c..46bcba5b0a 100644\n--- a/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java\n+++ b/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java\n\n@@ -24,6 +24,10 @@ import javax.security.auth.Subject;\n \n /**\n  * RolePrincipal\n+ * \n+ * Represents a role. This class can be added to a Subject to represent a role that the\n+ * Subject has.\n+ * \n  */\n public class RolePrincipal implements Principal, Serializable\n {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1NjM2MA==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r522256360", "bodyText": "If this is just a String, then why not just have String role and List<String> roles etc?", "author": "gregw", "createdAt": "2020-11-12T16:49:52Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java", "diffHunk": "@@ -0,0 +1,48 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.security;\n+\n+import java.io.Serializable;\n+import java.security.Principal;\n+import javax.security.auth.Subject;\n+\n+/**\n+ * RolePrincipal\n+ */\n+public class RolePrincipal implements Principal, Serializable\n+{\n+    private static final long serialVersionUID = 2998397924051854402L;\n+    private final String _roleName;", "originalCommit": "49b7e3513e9c525afd14f3d6406242cea0ba60bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2MDk4Ng==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r522260986", "bodyText": "ah because it was there before as an inner class!", "author": "gregw", "createdAt": "2020-11-12T16:56:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1NjM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "1ab893d369dc4a2144390fc47ca1c46bf6bfa28f", "chunk": "diff --git a/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java b/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java\nindex a32d6e365c..46bcba5b0a 100644\n--- a/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java\n+++ b/jetty-security/src/main/java/org/eclipse/jetty/security/RolePrincipal.java\n\n@@ -24,6 +24,10 @@ import javax.security.auth.Subject;\n \n /**\n  * RolePrincipal\n+ * \n+ * Represents a role. This class can be added to a Subject to represent a role that the\n+ * Subject has.\n+ * \n  */\n public class RolePrincipal implements Principal, Serializable\n {\n"}}, {"oid": "7c0358feee6ac7fb31e7cd16d3285055c2091707", "url": "https://github.com/eclipse/jetty.project/commit/7c0358feee6ac7fb31e7cd16d3285055c2091707", "message": "Issue #5272 Remove unneeded o.e.j.jaas.spi.User class\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-11-12T17:01:17Z", "type": "commit"}, {"oid": "1ab893d369dc4a2144390fc47ca1c46bf6bfa28f", "url": "https://github.com/eclipse/jetty.project/commit/1ab893d369dc4a2144390fc47ca1c46bf6bfa28f", "message": "Issue #5272 Make o.e.j.security.User class inner to UserStore\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-11-12T17:31:26Z", "type": "commit"}, {"oid": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "url": "https://github.com/eclipse/jetty.project/commit/17371fa3ff3ae180d68aa65bc19e5af1de358111", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-5272-loginservice-cleanup", "committedDate": "2020-11-13T11:23:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwNjkxNg==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524906916", "bodyText": "This class could be static.", "author": "lachlan-roberts", "createdAt": "2020-11-17T06:16:02Z", "path": "jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java", "diffHunk": "@@ -50,84 +51,65 @@\n \n     private boolean authState = false;\n     private boolean commitState = false;\n-    private JAASUserInfo currentUser;\n+    private JAASUser currentUser;\n     private Subject subject;\n \n-    /**\n-     * JAASUserInfo\n-     *\n-     * This class unites the UserInfo data with jaas concepts\n-     * such as Subject and Principals\n-     */\n-    public class JAASUserInfo\n+    public abstract class JAASUser", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "608a0c73d07f82bcd214bf95b4967ba77e1d933a", "chunk": "diff --git a/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java b/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java\nindex 0685818d17..eb3f18f3d3 100644\n--- a/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java\n+++ b/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java\n\n@@ -54,9 +54,9 @@ public abstract class AbstractLoginModule implements LoginModule\n     private JAASUser currentUser;\n     private Subject subject;\n \n-    public abstract class JAASUser\n+    public abstract static class JAASUser\n     {\n-        private UserPrincipal _user;\n+        private final UserPrincipal _user;\n         private List<JAASRole> _roles;\n         \n         public JAASUser(UserPrincipal u)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkwNzEwMg==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524907102", "bodyText": "You could make this field final.", "author": "lachlan-roberts", "createdAt": "2020-11-17T06:16:38Z", "path": "jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java", "diffHunk": "@@ -50,84 +51,65 @@\n \n     private boolean authState = false;\n     private boolean commitState = false;\n-    private JAASUserInfo currentUser;\n+    private JAASUser currentUser;\n     private Subject subject;\n \n-    /**\n-     * JAASUserInfo\n-     *\n-     * This class unites the UserInfo data with jaas concepts\n-     * such as Subject and Principals\n-     */\n-    public class JAASUserInfo\n+    public abstract class JAASUser\n     {\n-        private UserInfo user;\n-        private Principal principal;\n-        private List<JAASRole> roles;\n-\n-        public JAASUserInfo(UserInfo u)\n+        private UserPrincipal _user;", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "608a0c73d07f82bcd214bf95b4967ba77e1d933a", "chunk": "diff --git a/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java b/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java\nindex 0685818d17..eb3f18f3d3 100644\n--- a/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java\n+++ b/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/AbstractLoginModule.java\n\n@@ -54,9 +54,9 @@ public abstract class AbstractLoginModule implements LoginModule\n     private JAASUser currentUser;\n     private Subject subject;\n \n-    public abstract class JAASUser\n+    public abstract static class JAASUser\n     {\n-        private UserPrincipal _user;\n+        private final UserPrincipal _user;\n         private List<JAASRole> _roles;\n         \n         public JAASUser(UserPrincipal u)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxODQ1NA==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524918454", "bodyText": "This should probably have a LOG.isDebugEnabled() check.", "author": "lachlan-roberts", "createdAt": "2020-11-17T06:49:58Z", "path": "jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/PropertyFileLoginModule.java", "diffHunk": "@@ -122,22 +124,22 @@ private void setupPropertyUserStore(Map<String, ?> options)\n      * @throws Exception if unable to get the user information\n      */\n     @Override\n-    public UserInfo getUserInfo(String userName) throws Exception\n+    public JAASUser getUser(String userName) throws Exception\n     {\n         LOG.debug(\"Checking PropertyUserStore {} for {}\", _store.getConfig(), userName);", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "608a0c73d07f82bcd214bf95b4967ba77e1d933a", "chunk": "diff --git a/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/PropertyFileLoginModule.java b/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/PropertyFileLoginModule.java\nindex 136644f2f1..0025cce5e3 100644\n--- a/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/PropertyFileLoginModule.java\n+++ b/jetty-jaas/src/main/java/org/eclipse/jetty/jaas/spi/PropertyFileLoginModule.java\n\n@@ -126,7 +126,8 @@ public class PropertyFileLoginModule extends AbstractLoginModule\n     @Override\n     public JAASUser getUser(String userName) throws Exception\n     {\n-        LOG.debug(\"Checking PropertyUserStore {} for {}\", _store.getConfig(), userName);\n+        if (LOG.isDebugEnabled())\n+            LOG.debug(\"Checking PropertyUserStore {} for {}\", _store.getConfig(), userName);\n         UserPrincipal up = _store.getUserPrincipal(userName);\n         if (up == null)\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzNjUwMg==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524936502", "bodyText": "You could use roles.forEach instead of getting a stream.", "author": "lachlan-roberts", "createdAt": "2020-11-17T07:35:57Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/AbstractLoginService.java", "diffHunk": "@@ -155,18 +100,22 @@ public UserIdentity login(String username, Object credentials, ServletRequest re\n         if (userPrincipal != null && userPrincipal.authenticate(credentials))\n         {\n             //safe to load the roles\n-            String[] roles = loadRoleInfo(userPrincipal);\n+            List<RolePrincipal> roles = loadRoleInfo(userPrincipal);\n \n+            List<String> roleNames = new ArrayList<>();\n             Subject subject = new Subject();\n-            subject.getPrincipals().add(userPrincipal);\n-            subject.getPrivateCredentials().add(userPrincipal._credential);\n+            userPrincipal.configureSubject(subject);\n             if (roles != null)\n-                for (String role : roles)\n+            {\n+                roles.stream().forEach(p -> ", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "608a0c73d07f82bcd214bf95b4967ba77e1d933a", "chunk": "diff --git a/jetty-security/src/main/java/org/eclipse/jetty/security/AbstractLoginService.java b/jetty-security/src/main/java/org/eclipse/jetty/security/AbstractLoginService.java\nindex 5575b8a04e..53abd354c8 100644\n--- a/jetty-security/src/main/java/org/eclipse/jetty/security/AbstractLoginService.java\n+++ b/jetty-security/src/main/java/org/eclipse/jetty/security/AbstractLoginService.java\n\n@@ -107,7 +106,7 @@ public abstract class AbstractLoginService extends ContainerLifeCycle implements\n             userPrincipal.configureSubject(subject);\n             if (roles != null)\n             {\n-                roles.stream().forEach(p -> \n+                roles.forEach(p -> \n                 {\n                     p.configureForSubject(subject);\n                     roleNames.add(p.getName());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0MDA5NQ==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524940095", "bodyText": "The JDBCUserPrincipal class below could be static.\nAlso the JDBCLoginService constructors all say they throw IOException but none of them actually do, so maybe that declaration could be removed as well.", "author": "lachlan-roberts", "createdAt": "2020-11-17T07:43:58Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/JDBCLoginService.java", "diffHunk": "@@ -61,9 +52,9 @@\n     protected String _userTableKey;\n     protected String _userTablePasswordField;\n     protected String _roleTableRoleField;\n-    protected Connection _con;\n     protected String _userSql;\n     protected String _roleSql;\n+    protected Connection _con;\n \n     /**\n      * JDBCKnownUser", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "608a0c73d07f82bcd214bf95b4967ba77e1d933a", "chunk": "diff --git a/jetty-security/src/main/java/org/eclipse/jetty/security/JDBCLoginService.java b/jetty-security/src/main/java/org/eclipse/jetty/security/JDBCLoginService.java\nindex 82f0c440d9..d2bd0ed897 100644\n--- a/jetty-security/src/main/java/org/eclipse/jetty/security/JDBCLoginService.java\n+++ b/jetty-security/src/main/java/org/eclipse/jetty/security/JDBCLoginService.java\n\n@@ -57,11 +56,13 @@ public class JDBCLoginService extends AbstractLoginService\n     protected Connection _con;\n \n     /**\n-     * JDBCKnownUser\n+     * JDBCUserPrincipal\n+     * \n+     * A UserPrincipal with extra jdbc key info.\n      */\n     public class JDBCUserPrincipal extends UserPrincipal\n     {\n-        int _userKey;\n+        final int _userKey;\n \n         public JDBCUserPrincipal(String name, Credential credential, int key)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0MzY0OA==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524943648", "bodyText": "The c != null is unnecessary.", "author": "lachlan-roberts", "createdAt": "2020-11-17T07:51:22Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/UserPrincipal.java", "diffHunk": "@@ -0,0 +1,92 @@\n+//\n+// ========================================================================\n+// Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//\n+// This program and the accompanying materials are made available under\n+// the terms of the Eclipse Public License 2.0 which is available at\n+// https://www.eclipse.org/legal/epl-2.0\n+//\n+// This Source Code may also be made available under the following\n+// Secondary Licenses when the conditions for such availability set\n+// forth in the Eclipse Public License, v. 2.0 are satisfied:\n+// the Apache License v2.0 which is available at\n+// https://www.apache.org/licenses/LICENSE-2.0\n+//\n+// SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n+// ========================================================================\n+//\n+\n+package org.eclipse.jetty.security;\n+\n+import java.io.Serializable;\n+import java.security.Principal;\n+import javax.security.auth.Subject;\n+\n+import org.eclipse.jetty.util.security.Credential;\n+\n+/**\n+ * UserPrincipal\n+ * \n+ * Represents a user with a credential.\n+ * Instances of this class can be added to a Subject to\n+ * present the user, while the credentials can be added \n+ * directly to the Subject.\n+ */\n+public class UserPrincipal implements Principal, Serializable\n+{\n+    private static final long serialVersionUID = -6226920753748399662L;\n+    private final String _name;\n+    protected final Credential _credential;\n+\n+    public UserPrincipal(String name, Credential credential)\n+    {\n+        _name = name;\n+        _credential = credential;\n+    }\n+\n+    public boolean authenticate(Object credentials)\n+    {\n+        return _credential != null && _credential.check(credentials);\n+    }\n+\n+    public boolean authenticate(Credential c)\n+    {\n+        return (_credential != null && c != null && _credential.equals(c));", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NDQ3NA==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524944474", "bodyText": "This class can be static.", "author": "lachlan-roberts", "createdAt": "2020-11-17T07:53:14Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/UserStore.java", "diffHunk": "@@ -18,59 +18,75 @@\n \n package org.eclipse.jetty.security;\n \n-import java.security.Principal;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n-import javax.security.auth.Subject;\n+import java.util.stream.Collectors;\n \n-import org.eclipse.jetty.server.UserIdentity;\n import org.eclipse.jetty.util.component.AbstractLifeCycle;\n import org.eclipse.jetty.util.security.Credential;\n \n /**\n- * Base class to store User\n+ * Store of user authentication and authorization information.\n+ * \n  */\n public class UserStore extends AbstractLifeCycle\n {\n-    private IdentityService _identityService = new DefaultIdentityService();\n-    private final Map<String, UserIdentity> _knownUserIdentities = new ConcurrentHashMap<>();\n-\n-    public void addUser(String username, Credential credential, String[] roles)\n+    protected final Map<String, User> _users = new ConcurrentHashMap<>();\n+    \n+    protected class User", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NDY1OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5641#discussion_r524944659", "bodyText": "This is done in the constructor as well.", "author": "lachlan-roberts", "createdAt": "2020-11-17T07:53:39Z", "path": "jetty-security/src/main/java/org/eclipse/jetty/security/UserStore.java", "diffHunk": "@@ -18,59 +18,75 @@\n \n package org.eclipse.jetty.security;\n \n-import java.security.Principal;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n-import javax.security.auth.Subject;\n+import java.util.stream.Collectors;\n \n-import org.eclipse.jetty.server.UserIdentity;\n import org.eclipse.jetty.util.component.AbstractLifeCycle;\n import org.eclipse.jetty.util.security.Credential;\n \n /**\n- * Base class to store User\n+ * Store of user authentication and authorization information.\n+ * \n  */\n public class UserStore extends AbstractLifeCycle\n {\n-    private IdentityService _identityService = new DefaultIdentityService();\n-    private final Map<String, UserIdentity> _knownUserIdentities = new ConcurrentHashMap<>();\n-\n-    public void addUser(String username, Credential credential, String[] roles)\n+    protected final Map<String, User> _users = new ConcurrentHashMap<>();\n+    \n+    protected class User\n     {\n-        Principal userPrincipal = new AbstractLoginService.UserPrincipal(username, credential);\n-        Subject subject = new Subject();\n-        subject.getPrincipals().add(userPrincipal);\n-        subject.getPrivateCredentials().add(credential);\n+        protected UserPrincipal _userPrincipal;\n+        protected List<RolePrincipal> _rolePrincipals = Collections.emptyList();", "originalCommit": "17371fa3ff3ae180d68aa65bc19e5af1de358111", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "608a0c73d07f82bcd214bf95b4967ba77e1d933a", "url": "https://github.com/eclipse/jetty.project/commit/608a0c73d07f82bcd214bf95b4967ba77e1d933a", "message": "Issue #5272 More cleanup; fixed demo-jaas.mod\n\nSigned-off-by: Jan Bartel <janb@webtide.com>", "committedDate": "2020-11-17T14:37:15Z", "type": "commit"}]}