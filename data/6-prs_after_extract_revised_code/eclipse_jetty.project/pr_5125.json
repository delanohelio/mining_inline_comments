{"pr_number": 5125, "pr_title": "Issue #5122 - Improve connection statistics for WebSocket", "pr_createdAt": "2020-08-06T11:19:41Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5125", "timeline": [{"oid": "be429f0910385b1c3b753549027d101377fa1afd", "url": "https://github.com/eclipse/jetty.project/commit/be429f0910385b1c3b753549027d101377fa1afd", "message": "Issue #5122 - add specialized Connection.Listener for WebSocket ConnectionStatistics\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-06T10:38:02Z", "type": "commit"}, {"oid": "8a3ff775d5bc285e066e5638623970496f32022d", "url": "https://github.com/eclipse/jetty.project/commit/8a3ff775d5bc285e066e5638623970496f32022d", "message": "Issue #5122 - make number of active WS Sessions a managed attribute on SessionTracker\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-06T10:45:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1OTU1Ng==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r468459556", "bodyText": "I think this could be generalised as we now probably need the same thing for HTTP stats maybe HTTP2 stats etc.\nSo perhaps put a protected method into ConnectionStatistics that asks if a connection should be included.... perhaps with the default implementation checking in IncludeExcludeSet of classes?", "author": "gregw", "createdAt": "2020-08-11T09:48:06Z", "path": "jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/util/WebSocketConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,40 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.websocket.common.util;\n+\n+import org.eclipse.jetty.io.Connection;\n+import org.eclipse.jetty.io.ConnectionStatistics;\n+import org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection;\n+\n+public class WebSocketConnectionStatistics extends ConnectionStatistics", "originalCommit": "8a3ff775d5bc285e066e5638623970496f32022d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2MDc0OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r468460749", "bodyText": "Hmm perhaps keep the base class the same for efficiency, but have an IncludeExclude version derived", "author": "gregw", "createdAt": "2020-08-11T09:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1OTU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "chunk": "diff --git a/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/util/WebSocketConnectionStatistics.java b/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/util/WebSocketConnectionStatistics.java\ndeleted file mode 100644\nindex c42edba546..0000000000\n--- a/jetty-websocket/websocket-common/src/main/java/org/eclipse/jetty/websocket/common/util/WebSocketConnectionStatistics.java\n+++ /dev/null\n\n@@ -1,40 +0,0 @@\n-//\n-//  ========================================================================\n-//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n-//  ------------------------------------------------------------------------\n-//  All rights reserved. This program and the accompanying materials\n-//  are made available under the terms of the Eclipse Public License v1.0\n-//  and Apache License v2.0 which accompanies this distribution.\n-//\n-//      The Eclipse Public License is available at\n-//      http://www.eclipse.org/legal/epl-v10.html\n-//\n-//      The Apache License v2.0 is available at\n-//      http://www.opensource.org/licenses/apache2.0.php\n-//\n-//  You may elect to redistribute this code under either of these licenses.\n-//  ========================================================================\n-//\n-\n-package org.eclipse.jetty.websocket.common.util;\n-\n-import org.eclipse.jetty.io.Connection;\n-import org.eclipse.jetty.io.ConnectionStatistics;\n-import org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection;\n-\n-public class WebSocketConnectionStatistics extends ConnectionStatistics\n-{\n-    @Override\n-    public void onOpened(Connection connection)\n-    {\n-        if (connection instanceof AbstractWebSocketConnection)\n-            super.onOpened(connection);\n-    }\n-\n-    @Override\n-    public void onClosed(Connection connection)\n-    {\n-        if (connection instanceof AbstractWebSocketConnection)\n-            super.onClosed(connection);\n-    }\n-}\n"}}, {"oid": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "url": "https://github.com/eclipse/jetty.project/commit/1663a6d7af9d85390fef6deb6d15cd7bce30263e", "message": "Issue #5125 - Generalise WebSocketConnectionStatistics into IncludeExcludeConnectionStatistics\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-14T05:19:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMzQzOQ==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471333439", "bodyText": "You don't need tristate logic here, just use:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n          \n          \n            \n                    if (_set.test(connection))", "author": "gregw", "createdAt": "2020-08-17T08:48:44Z", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,114 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.io;\n+\n+import java.util.AbstractSet;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.jetty.util.IncludeExcludeSet;\n+\n+public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n+{\n+    private final IncludeExcludeSet<Class<? extends Connection>, Connection> _set = new IncludeExcludeSet<>(ConnectionSet.class);\n+\n+    public void include(String className) throws ClassNotFoundException\n+    {\n+        _set.include(connectionForName(className));\n+    }\n+\n+    public void include(Class<? extends Connection> clazz)\n+    {\n+        _set.include(clazz);\n+    }\n+\n+    public void exclude(String className) throws ClassNotFoundException\n+    {\n+        _set.exclude(connectionForName(className));\n+    }\n+\n+    public void exclude(Class<? extends Connection> clazz)\n+    {\n+        _set.exclude(clazz);\n+    }\n+\n+    private Class<? extends Connection> connectionForName(String className) throws ClassNotFoundException\n+    {\n+        Class<?> aClass = Class.forName(className);\n+        if (!Connection.class.isAssignableFrom(aClass))\n+            throw new IllegalArgumentException(\"Class is not a Connection\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Connection> connectionClass = (Class<? extends Connection>)aClass;\n+        return connectionClass;\n+    }\n+\n+    @Override\n+    public void onOpened(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))", "originalCommit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c37d902ef7fe9b0095ff775b1885abec3e4a4999", "chunk": "diff --git a/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java b/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\nindex 69c51178cb..364a48726c 100644\n--- a/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\n+++ b/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\n\n@@ -64,14 +64,14 @@ public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n     @Override\n     public void onOpened(Connection connection)\n     {\n-        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+        if (_set.test(connection))\n             super.onOpened(connection);\n     }\n \n     @Override\n     public void onClosed(Connection connection)\n     {\n-        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+        if (_set.test(connection))\n             super.onClosed(connection);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMzYyMw==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471333623", "bodyText": "ditto", "author": "gregw", "createdAt": "2020-08-17T08:49:04Z", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,114 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.io;\n+\n+import java.util.AbstractSet;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.jetty.util.IncludeExcludeSet;\n+\n+public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n+{\n+    private final IncludeExcludeSet<Class<? extends Connection>, Connection> _set = new IncludeExcludeSet<>(ConnectionSet.class);\n+\n+    public void include(String className) throws ClassNotFoundException\n+    {\n+        _set.include(connectionForName(className));\n+    }\n+\n+    public void include(Class<? extends Connection> clazz)\n+    {\n+        _set.include(clazz);\n+    }\n+\n+    public void exclude(String className) throws ClassNotFoundException\n+    {\n+        _set.exclude(connectionForName(className));\n+    }\n+\n+    public void exclude(Class<? extends Connection> clazz)\n+    {\n+        _set.exclude(clazz);\n+    }\n+\n+    private Class<? extends Connection> connectionForName(String className) throws ClassNotFoundException\n+    {\n+        Class<?> aClass = Class.forName(className);\n+        if (!Connection.class.isAssignableFrom(aClass))\n+            throw new IllegalArgumentException(\"Class is not a Connection\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Connection> connectionClass = (Class<? extends Connection>)aClass;\n+        return connectionClass;\n+    }\n+\n+    @Override\n+    public void onOpened(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+            super.onOpened(connection);\n+    }\n+\n+    @Override\n+    public void onClosed(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))", "originalCommit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c37d902ef7fe9b0095ff775b1885abec3e4a4999", "chunk": "diff --git a/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java b/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\nindex 69c51178cb..364a48726c 100644\n--- a/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\n+++ b/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\n\n@@ -64,14 +64,14 @@ public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n     @Override\n     public void onOpened(Connection connection)\n     {\n-        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+        if (_set.test(connection))\n             super.onOpened(connection);\n     }\n \n     @Override\n     public void onClosed(Connection connection)\n     {\n-        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+        if (_set.test(connection))\n             super.onClosed(connection);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzODg2NQ==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471338865", "bodyText": "rather than create your own set type just to provide a predicate is is probably simpler to use:\nnew IncludeExcludeSet<>(new HashSet<>(), Connection.class::isAssignableFrom, new HashSet<>(), Connection.class::isAssignableFrom);", "author": "gregw", "createdAt": "2020-08-17T08:58:11Z", "path": "jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java", "diffHunk": "@@ -0,0 +1,114 @@\n+//\n+//  ========================================================================\n+//  Copyright (c) 1995-2020 Mort Bay Consulting Pty Ltd and others.\n+//  ------------------------------------------------------------------------\n+//  All rights reserved. This program and the accompanying materials\n+//  are made available under the terms of the Eclipse Public License v1.0\n+//  and Apache License v2.0 which accompanies this distribution.\n+//\n+//      The Eclipse Public License is available at\n+//      http://www.eclipse.org/legal/epl-v10.html\n+//\n+//      The Apache License v2.0 is available at\n+//      http://www.opensource.org/licenses/apache2.0.php\n+//\n+//  You may elect to redistribute this code under either of these licenses.\n+//  ========================================================================\n+//\n+\n+package org.eclipse.jetty.io;\n+\n+import java.util.AbstractSet;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import org.eclipse.jetty.util.IncludeExcludeSet;\n+\n+public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n+{\n+    private final IncludeExcludeSet<Class<? extends Connection>, Connection> _set = new IncludeExcludeSet<>(ConnectionSet.class);\n+\n+    public void include(String className) throws ClassNotFoundException\n+    {\n+        _set.include(connectionForName(className));\n+    }\n+\n+    public void include(Class<? extends Connection> clazz)\n+    {\n+        _set.include(clazz);\n+    }\n+\n+    public void exclude(String className) throws ClassNotFoundException\n+    {\n+        _set.exclude(connectionForName(className));\n+    }\n+\n+    public void exclude(Class<? extends Connection> clazz)\n+    {\n+        _set.exclude(clazz);\n+    }\n+\n+    private Class<? extends Connection> connectionForName(String className) throws ClassNotFoundException\n+    {\n+        Class<?> aClass = Class.forName(className);\n+        if (!Connection.class.isAssignableFrom(aClass))\n+            throw new IllegalArgumentException(\"Class is not a Connection\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Connection> connectionClass = (Class<? extends Connection>)aClass;\n+        return connectionClass;\n+    }\n+\n+    @Override\n+    public void onOpened(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+            super.onOpened(connection);\n+    }\n+\n+    @Override\n+    public void onClosed(Connection connection)\n+    {\n+        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+            super.onClosed(connection);\n+    }\n+\n+    public static class ConnectionSet extends AbstractSet<Class<? extends Connection>> implements Predicate<Connection>", "originalCommit": "1663a6d7af9d85390fef6deb6d15cd7bce30263e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0Mjc4Mw==", "url": "https://github.com/eclipse/jetty.project/pull/5125#discussion_r471842783", "bodyText": "This doesn't work, we wan't to know if assignable from one of the values present in the set, it will always be assignable from Connection.\nTo get the same logic I would need something like this\nHashSet<Class<? extends Connection>> includes = new HashSet<>();\nHashSet<Class<? extends Connection>> excludes = new HashSet<>();\n\n_set = new IncludeExcludeSet<>(includes, connection ->\n{\n    if (connection == null)\n        return false;\n    return includes.stream().anyMatch(c -> c.isAssignableFrom(connection.getClass()));\n},\nexcludes, connection ->\n{\n    if (connection == null)\n        return false;\n    return excludes.stream().anyMatch(c -> c.isAssignableFrom(connection.getClass()));\n});\nso seems easier to just define the set type.", "author": "lachlan-roberts", "createdAt": "2020-08-18T00:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzODg2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c37d902ef7fe9b0095ff775b1885abec3e4a4999", "chunk": "diff --git a/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java b/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\nindex 69c51178cb..364a48726c 100644\n--- a/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\n+++ b/jetty-io/src/main/java/org/eclipse/jetty/io/IncludeExcludeConnectionStatistics.java\n\n@@ -64,14 +64,14 @@ public class IncludeExcludeConnectionStatistics extends ConnectionStatistics\n     @Override\n     public void onOpened(Connection connection)\n     {\n-        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+        if (_set.test(connection))\n             super.onOpened(connection);\n     }\n \n     @Override\n     public void onClosed(Connection connection)\n     {\n-        if (Boolean.TRUE.equals(_set.isIncludedAndNotExcluded(connection)))\n+        if (_set.test(connection))\n             super.onClosed(connection);\n     }\n \n"}}, {"oid": "c37d902ef7fe9b0095ff775b1885abec3e4a4999", "url": "https://github.com/eclipse/jetty.project/commit/c37d902ef7fe9b0095ff775b1885abec3e4a4999", "message": "remove tri-state logic from IncludeExcludeConnectionStatistics\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-08-18T00:18:44Z", "type": "commit"}]}