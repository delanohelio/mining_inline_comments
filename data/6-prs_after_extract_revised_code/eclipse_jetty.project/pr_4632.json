{"pr_number": 4632, "pr_title": "Issue #4631 - Warning about skipping of <Arg> nodes is in wrong place for <Configure>", "pr_createdAt": "2020-03-02T22:29:12Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4632", "timeline": [{"oid": "b839ce6366da347596dae4bccc1f49592d2d7195", "url": "https://github.com/eclipse/jetty.project/commit/b839ce6366da347596dae4bccc1f49592d2d7195", "message": "Issue #4631 - Fixing XML comment that was accidentally reformatted\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-02T22:06:52Z", "type": "commit"}, {"oid": "cfdffd17d9765071e91eaf9c7d81f14c71bb0494", "url": "https://github.com/eclipse/jetty.project/commit/cfdffd17d9765071e91eaf9c7d81f14c71bb0494", "message": "Issue #4631 - Warning about skipping of <Arg> nodes is in wrong place for <Configure>\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-02T22:26:40Z", "type": "commit"}, {"oid": "89f2cad2c064655012481421910387f65c2f2430", "url": "https://github.com/eclipse/jetty.project/commit/89f2cad2c064655012481421910387f65c2f2430", "message": "Issue #4631 - Improving testcase\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-02T22:33:57Z", "type": "commit"}, {"oid": "3ee3246674f4f163736d4f63b066e54dd1348a73", "url": "https://github.com/eclipse/jetty.project/commit/3ee3246674f4f163736d4f63b066e54dd1348a73", "message": "Issue #4631 - Removing test classes\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-03T15:57:43Z", "type": "commit"}, {"oid": "da7e8ed1b7097afd96e8761bd1f02e2193c4bcd2", "url": "https://github.com/eclipse/jetty.project/commit/da7e8ed1b7097afd96e8761bd1f02e2193c4bcd2", "message": "Issue #4631 - Cleaning up configure with index per PR review\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-03T16:00:11Z", "type": "commit"}, {"oid": "69fa180e8890615809aea4e91db97edc06a85e96", "url": "https://github.com/eclipse/jetty.project/commit/69fa180e8890615809aea4e91db97edc06a85e96", "message": "Issue #4631 - More named arg test cases\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-03T16:27:18Z", "type": "commit"}, {"oid": "cc80ebed6c2d0cefadc8e307fded491841e63308", "url": "https://github.com/eclipse/jetty.project/commit/cc80ebed6c2d0cefadc8e307fded491841e63308", "message": "Issue #4631 - Add testConfiguredWithNamedArgNotFirst\n\n+ new testcase where <Arg> is needed, but is not the first node\n\nSigned-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>", "committedDate": "2020-03-03T17:52:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1OTI5Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r389859292", "bodyText": "Something weird has gone on in the history!  I thought the idea of passing in the index was so that leading ignored Args could be skipped!", "author": "gregw", "createdAt": "2020-03-09T17:50:51Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -493,21 +501,6 @@ public Object configure() throws Exception\n          */\n         public void configure(Object obj, XmlParser.Node cfg, int i) throws Exception", "originalCommit": "cc80ebed6c2d0cefadc8e307fded491841e63308", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1OTgwMA==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r389859800", "bodyText": "I think we should somehow increment the index variable so that the Arg is ignored", "author": "gregw", "createdAt": "2020-03-09T17:51:37Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -466,6 +468,12 @@ public Object configure() throws Exception\n                     throw new IllegalStateException(String.format(\"No matching constructor %s in %s\", oClass, _configuration));\n                 }\n             }\n+            else\n+            {\n+                // The Object already existed, if it has <Arg> nodes, warn about them not being used.\n+                XmlConfiguration.getNodes(_root, \"Arg\")\n+                    .forEach((node) -> LOG.warn(\"Ignored arg {} in {}\", node, this._configuration._location));", "originalCommit": "cc80ebed6c2d0cefadc8e307fded491841e63308", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad3149c07a1530c5c560bdad4e4dc4efb015349d", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex 18842bec7f..b70b8c3152 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -456,12 +461,14 @@ public class XmlConfiguration\n             String id = _root.getAttribute(\"id\");\n             Object obj = id == null ? null : _configuration.getIdMap().get(id);\n \n-            int index = 0;\n+            AttrOrElementNode aoeNode;\n+\n             if (obj == null && oClass != null)\n             {\n+                aoeNode = new AttrOrElementNode(_root, \"Arg\");\n                 try\n                 {\n-                    obj = construct(oClass, new Args(null, oClass, XmlConfiguration.getNodes(_root, \"Arg\")));\n+                    obj = construct(oClass, new Args(null, oClass, aoeNode.getNodes(\"Arg\")));\n                 }\n                 catch (NoSuchMethodException x)\n                 {\n"}}, {"oid": "ad3149c07a1530c5c560bdad4e4dc4efb015349d", "url": "https://github.com/eclipse/jetty.project/commit/ad3149c07a1530c5c560bdad4e4dc4efb015349d", "message": "Cleanup configuration index usage\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-03-10T13:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390342054", "bodyText": "I would like to see a test where there is a Arg misplaced, as below, so that we define in a test how we should behave.\n<Configure ...>\n  <Arg>...</Arg>\n  <New ...>...</New>\n  <Arg>...</Arg>\n</Configure>", "author": "sbordet", "createdAt": "2020-03-10T14:12:38Z", "path": "jetty-xml/src/test/java/org/eclipse/jetty/xml/XmlConfigurationTest.java", "diffHunk": "@@ -1309,6 +1318,185 @@ public void testJettyStandardIdsAndPropertiesAndJettyHomeUriAndJettyBaseUri() th\n         }\n     }\n \n+    public static class BarNamed\n+    {\n+        private String foo;\n+        private List<String> zeds;\n+\n+        public BarNamed(@Name(\"foo\") String foo)\n+        {\n+            this.foo = foo;\n+        }\n+\n+        public void addZed(String zed)\n+        {\n+            if (zeds == null)\n+                zeds = new ArrayList<>();\n+            zeds.add(zed);\n+        }\n+\n+        public List<String> getZeds()\n+        {\n+            return zeds;\n+        }\n+\n+        public String getFoo()\n+        {\n+            return foo;\n+        }\n+    }\n+\n+    @Test\n+    public void testConfiguredWithNamedArg() throws Exception\n+    {\n+        XmlConfiguration xmlFoo = asXmlConfiguration(\"foo.xml\",\n+            \"<Configure>\\n\" +\n+                \"  <New id=\\\"foo\\\" class=\\\"java.lang.String\\\">\\n\" +\n+                \"    <Arg>foozball</Arg>\\n\" +\n+                \"  </New>\\n\" +\n+                \"</Configure>\");\n+        XmlConfiguration xmlBar = asXmlConfiguration(\"bar.xml\",\n+            \"<Configure id=\\\"bar\\\" class=\\\"\" + BarNamed.class.getName() + \"\\\">\\n\" +\n+                \"  <Arg name=\\\"foo\\\"><Ref refid=\\\"foo\\\"/></Arg>\\n\" +\n+                \"</Configure>\");\n+\n+        try (StdErrCapture logCapture = new StdErrCapture(XmlConfiguration.class))\n+        {\n+            Map<String, Object> idMap = mimicXmlConfigurationMain(xmlFoo, xmlBar);\n+            Object obj = idMap.get(\"bar\");\n+            assertThat(\"BarNamed instance created\", obj, instanceOf(BarNamed.class));\n+            BarNamed bar = (BarNamed)obj;\n+            assertThat(\"BarNamed has foo\", bar.getFoo(), is(\"foozball\"));\n+\n+            List<String> warnLogs = logCapture.getLines()\n+                .stream().filter(line -> line.contains(\":WARN:\"))\n+                .collect(Collectors.toList());\n+\n+            assertThat(\"WARN logs size\", warnLogs.size(), is(0));\n+        }\n+    }\n+\n+    @Test\n+    public void testConfiguredWithArgNotUsingName() throws Exception\n+    {\n+        XmlConfiguration xmlFoo = asXmlConfiguration(\"foo.xml\",\n+            \"<Configure>\\n\" +\n+                \"  <New id=\\\"foo\\\" class=\\\"java.lang.String\\\">\\n\" +\n+                \"    <Arg>foozball</Arg>\\n\" +\n+                \"  </New>\\n\" +\n+                \"</Configure>\");\n+        XmlConfiguration xmlBar = asXmlConfiguration(\"bar.xml\",\n+            \"<Configure id=\\\"bar\\\" class=\\\"\" + BarNamed.class.getName() + \"\\\">\\n\" +\n+                \"  <Arg><Ref refid=\\\"foo\\\"/></Arg>\\n\" + // no name specified\n+                \"</Configure>\");\n+\n+        try (StdErrCapture logCapture = new StdErrCapture(XmlConfiguration.class))\n+        {\n+            Map<String, Object> idMap = mimicXmlConfigurationMain(xmlFoo, xmlBar);\n+            Object obj = idMap.get(\"bar\");\n+            assertThat(\"BarNamed instance created\", obj, instanceOf(BarNamed.class));\n+            BarNamed bar = (BarNamed)obj;\n+            assertThat(\"BarNamed has foo\", bar.getFoo(), is(\"foozball\"));\n+\n+            List<String> warnLogs = logCapture.getLines()\n+                .stream().filter(line -> line.contains(\":WARN:\"))\n+                .collect(Collectors.toList());\n+\n+            assertThat(\"WARN logs size\", warnLogs.size(), is(0));\n+        }\n+    }\n+\n+    @Test\n+    public void testConfiguredWithBadNamedArg() throws Exception\n+    {\n+        XmlConfiguration xmlBar = asXmlConfiguration(\"bar.xml\",\n+            \"<Configure id=\\\"bar\\\" class=\\\"\" + BarNamed.class.getName() + \"\\\">\\n\" +\n+                \"  <Arg name=\\\"foozball\\\">foozball</Arg>\\n\" + // wrong name specified\n+                \"</Configure>\");\n+\n+        IllegalStateException cause = assertThrows(IllegalStateException.class, () ->\n+            mimicXmlConfigurationMain(xmlBar));\n+\n+        assertThat(\"Cause message\", cause.getMessage(), containsString(\"No matching constructor\"));\n+    }\n+\n+    @Test\n+    public void testConfiguredWithTooManyNamedArgs() throws Exception\n+    {\n+        XmlConfiguration xmlBar = asXmlConfiguration(\"bar.xml\",\n+            \"<Configure id=\\\"bar\\\" class=\\\"\" + BarNamed.class.getName() + \"\\\">\\n\" +\n+                \"  <Arg name=\\\"foo\\\">foozball</Arg>\\n\" +\n+                \"  <Arg name=\\\"foo\\\">soccer</Arg>\\n\" + // neither should win\n+                \"</Configure>\");\n+\n+        IllegalStateException cause = assertThrows(IllegalStateException.class, () ->\n+            mimicXmlConfigurationMain(xmlBar));\n+\n+        assertThat(\"Cause message\", cause.getMessage(), containsString(\"No matching constructor\"));\n+    }\n+\n+    @Test\n+    public void testConfiguredSameWithNamedArgTwice() throws Exception\n+    {\n+        XmlConfiguration xmlFoo = asXmlConfiguration(\"foo.xml\",\n+            \"<Configure>\\n\" +\n+                \"  <New id=\\\"foo\\\" class=\\\"java.lang.String\\\">\\n\" +\n+                \"    <Arg>foozball</Arg>\\n\" +\n+                \"  </New>\\n\" +\n+                \"</Configure>\");\n+        XmlConfiguration xmlBar = asXmlConfiguration(\"bar.xml\",\n+            \"<Configure id=\\\"bar\\\" class=\\\"\" + BarNamed.class.getName() + \"\\\">\\n\" +\n+                \"  <Arg name=\\\"foo\\\"><Ref refid=\\\"foo\\\"/></Arg>\\n\" +\n+                \"</Configure>\");\n+        XmlConfiguration xmlAddZed = asXmlConfiguration(\"zed.xml\",\n+            \"<Configure id=\\\"bar\\\" class=\\\"\" + BarNamed.class.getName() + \"\\\">\\n\" +\n+                \"  <Arg name=\\\"foo\\\">baz</Arg>\\n\" + // the invalid line\n+                \"  <Call name=\\\"addZed\\\">\\n\" +\n+                \"    <Arg>plain-zero</Arg>\\n\" +\n+                \"  </Call>\\n\" +\n+                \"</Configure>\");\n+\n+        try (StdErrCapture logCapture = new StdErrCapture(XmlConfiguration.class))\n+        {\n+            Map<String, Object> idMap = mimicXmlConfigurationMain(xmlFoo, xmlBar, xmlAddZed);\n+            Object obj = idMap.get(\"bar\");\n+            assertThat(\"BarNamed instance created\", obj, instanceOf(BarNamed.class));\n+            BarNamed bar = (BarNamed)obj;\n+            assertThat(\"BarNamed has foo\", bar.getFoo(), is(\"foozball\"));\n+            List<String> zeds = bar.getZeds();\n+            assertThat(\"BarNamed has zeds\", zeds, not(empty()));\n+            assertThat(\"Zeds[0]\", zeds.get(0), is(\"plain-zero\"));\n+\n+            List<String> warnLogs = logCapture.getLines()\n+                .stream().filter(line -> line.contains(\":WARN:\"))\n+                .collect(Collectors.toList());\n+\n+            assertThat(\"WARN logs count\", warnLogs.size(), is(1));\n+\n+            String actualWarn = warnLogs.get(0);\n+            assertThat(\"WARN logs\", actualWarn,\n+                allOf(containsString(\"Ignored arg <Arg name=\"),\n+                    containsString(\"zed.xml\")\n+                ));\n+        }\n+    }\n+\n+    /**\n+     * This mimics the XML load behavior in XmlConfiguration.main(String ... args)\n+     */\n+    private Map<String, Object> mimicXmlConfigurationMain(XmlConfiguration... configurations) throws Exception\n+    {\n+        XmlConfiguration last = null;\n+        for (XmlConfiguration configuration : configurations)\n+        {\n+            if (last != null)\n+                configuration.getIdMap().putAll(last.getIdMap());\n+            configuration.configure();\n+            last = configuration;\n+        }\n+        return last.getIdMap();\n+    }", "originalCommit": "ad3149c07a1530c5c560bdad4e4dc4efb015349d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MzUxMQ==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390343511", "bodyText": "@gregw pointed out that the Configure_9_3.dtd (and Configure_10_0.dtd) does not allow a <Arg> anywhere but the start of the element list.\n\n  \n    \n      jetty.project/jetty-xml/src/main/resources/org/eclipse/jetty/xml/configure_10_0.dtd\n    \n    \n        Lines 45 to 46\n      in\n      678385b\n    \n    \n    \n    \n\n        \n          \n           <!ELEMENT Configure (Arg*,(%CONFIG;)*) > \n        \n\n        \n          \n           <!ATTLIST Configure %IMPLIEDCLASSATTR; %IDATTR; >", "author": "joakime", "createdAt": "2020-03-10T14:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0NDE3NA==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390344174", "bodyText": "A test that is expected to fail in this scenario is dependent on the dtd used (or not used) I would think.", "author": "joakime", "createdAt": "2020-03-10T14:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0NTQ2NQ==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390345465", "bodyText": "Then shouldn't we do the same for Call and New? I don't think the DTD has the same enforcement for those.", "author": "sbordet", "createdAt": "2020-03-10T14:17:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0NzMzMA==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390347330", "bodyText": "Opened #4658 for these new test cases.\nAlso <Call>\n\n  \n    \n      jetty.project/jetty-xml/src/main/resources/org/eclipse/jetty/xml/configure_10_0.dtd\n    \n    \n        Lines 168 to 169\n      in\n      678385b\n    \n    \n    \n    \n\n        \n          \n           <!ELEMENT Call (Id?,Name?,Class?,Arg*,(%CONFIG;)*) > \n        \n\n        \n          \n           <!ATTLIST Call %ARGATTR; %IMPLIEDNAMEATTR; %IMPLIEDCLASSATTR; %IDATTR; > \n        \n    \n  \n\n\nAnd <New>\n\n  \n    \n      jetty.project/jetty-xml/src/main/resources/org/eclipse/jetty/xml/configure_10_0.dtd\n    \n    \n        Lines 209 to 210\n      in\n      678385b\n    \n    \n    \n    \n\n        \n          \n           <!ELEMENT New (Id?,Name?,Class?,Arg*,(%CONFIG;)*) > \n        \n\n        \n          \n           <!ATTLIST New %IDATTR; %IMPLIEDCLASSATTR; %ARGATTR; >", "author": "joakime", "createdAt": "2020-03-10T14:19:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1MDI3Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390350276", "bodyText": "Also opened #4659 for the missing Id?,Name?,Class?,Arg* in the <Configure> section on Configure_10_0.dtd", "author": "joakime", "createdAt": "2020-03-10T14:23:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NDI0Mw==", "url": "https://github.com/eclipse/jetty.project/pull/4632#discussion_r390354243", "bodyText": "@sbordet we had such a test, but that is invalid XML against the DTD.  I don't think we should be required to process non-valid XML\nNote that I'm doing a cleanup in 10 - see #4656", "author": "gregw", "createdAt": "2020-03-10T14:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MjA1NA=="}], "type": "inlineReview", "revised_code": null}]}