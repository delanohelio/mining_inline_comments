{"pr_number": 5736, "pr_title": "Tries improvements", "pr_createdAt": "2020-11-27T09:18:42Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5736", "timeline": [{"oid": "8111f99520483c1133dcd3be0eec7a90f987f990", "url": "https://github.com/eclipse/jetty.project/commit/8111f99520483c1133dcd3be0eec7a90f987f990", "message": "Tries improvements\n\nWIP on better selection of trie based on alphabet\nAlso some ideas on how to improve impls in TODOs\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-11-27T09:17:26Z", "type": "commit"}, {"oid": "4ca6e5aae5ad73bbf0015b68008c0171fd09e6eb", "url": "https://github.com/eclipse/jetty.project/commit/4ca6e5aae5ad73bbf0015b68008c0171fd09e6eb", "message": "WIP\n\n+ CaseSensitive ArrayTrie\n+ Better space efficiency in big lookups\n+ Better test cases", "committedDate": "2020-11-28T21:28:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjU4Nw==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r532442587", "bodyText": "It's certainly worth measuring the space & time difference between row sizes of 32 and 48.", "author": "lorban", "createdAt": "2020-11-30T09:10:39Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTrie.java", "diffHunk": "@@ -56,7 +56,8 @@\n      * 32 to cover case insensitive alphabet and a few other common\n      * characters.\n      */\n-    private static final int ROW_SIZE = 32;\n+    private static final int ROW_SIZE = 48;", "originalCommit": "4ca6e5aae5ad73bbf0015b68008c0171fd09e6eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1NjgxMA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539256810", "bodyText": "My gut feeling is that the extra space for digits means that we can now more often just allocate the normal table and avoid the secondary larger table more often.", "author": "gregw", "createdAt": "2020-12-09T12:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjU4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4ceda7e4a61ade1eca8ea08a60fb44a3326e8ca2", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTrie.java b/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTrie.java\nindex 59e7ed5adf..46ab7d347e 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTrie.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTrie.java\n\n@@ -50,6 +50,7 @@ import java.util.Set;\n  */\n class ArrayTrie<V> extends AbstractTrie<V>\n {\n+    public static int MAX_CAPACITY = Character.MAX_VALUE;\n     /**\n      * The Size of a Trie row is how many characters can be looked\n      * up directly without going to a big index.  This is set at\n"}}, {"oid": "6a329677890a35cc589e39522581ecd5a50597ba", "url": "https://github.com/eclipse/jetty.project/commit/6a329677890a35cc589e39522581ecd5a50597ba", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-trie-selection", "committedDate": "2020-12-07T11:21:46Z", "type": "commit"}, {"oid": "44120d6186e535dca71b58e0648d4ebf2b61a9ec", "url": "https://github.com/eclipse/jetty.project/commit/44120d6186e535dca71b58e0648d4ebf2b61a9ec", "message": "WIP\n\nAdded test for empty key", "committedDate": "2020-12-07T11:44:01Z", "type": "commit"}, {"oid": "397ea6c2bb33f2512bcd573a07c74d0ba9ab4f15", "url": "https://github.com/eclipse/jetty.project/commit/397ea6c2bb33f2512bcd573a07c74d0ba9ab4f15", "message": "WIP\n\nAdded more tests for exceptional values", "committedDate": "2020-12-07T11:53:19Z", "type": "commit"}, {"oid": "4ceda7e4a61ade1eca8ea08a60fb44a3326e8ca2", "url": "https://github.com/eclipse/jetty.project/commit/4ceda7e4a61ade1eca8ea08a60fb44a3326e8ca2", "message": "Issue #5304 HTTP2 Host Header\n\nrefactored common code\nfast alphabet lookup", "committedDate": "2020-12-07T13:40:17Z", "type": "commit"}, {"oid": "408a4d7adf53b1098dc95be471b17ce30c420a93", "url": "https://github.com/eclipse/jetty.project/commit/408a4d7adf53b1098dc95be471b17ce30c420a93", "message": "WIP\n\nbig cleanup of code to reduce parallel array lookups", "committedDate": "2020-12-07T14:21:38Z", "type": "commit"}, {"oid": "f61c8a6d9ee6d14c3a6174fbe22f8ec48632838f", "url": "https://github.com/eclipse/jetty.project/commit/f61c8a6d9ee6d14c3a6174fbe22f8ec48632838f", "message": "WIP\n\ntail recursion fix for required node calculation", "committedDate": "2020-12-07T15:41:00Z", "type": "commit"}, {"oid": "f0712c3acbb7ae0fbec76a5457e1c04b55dc0f5b", "url": "https://github.com/eclipse/jetty.project/commit/f0712c3acbb7ae0fbec76a5457e1c04b55dc0f5b", "message": "WIP\n\nmore tests\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-12-07T16:55:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyOTcxMQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r538129711", "bodyText": "Why did you get rid of this check? IMHO building an index both pre-loaded with some contents and a max capacity of zero looks like a programming mistake we want to catch.", "author": "lorban", "createdAt": "2020-12-08T08:23:06Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Index.java", "diffHunk": "@@ -193,42 +226,55 @@\n                 return this;\n             }\n \n+            public Builder<V> alphabet(String alphabetString)\n+            {\n+                alphabet = new HashSet<>();\n+                alphabetString.chars().forEach(c -> alphabet.add((char)c));\n+                return this;\n+            }\n+\n+            public Builder<V> alphabet(Set<Character> alphabet)\n+            {\n+                this.alphabet = alphabet;\n+                return this;\n+            }\n+\n             /**\n              * Build a {@link Mutable} instance.\n              * @return a {@link Mutable} instance.\n              */\n             public Mutable<V> build()\n             {\n-                if (contents != null && maxCapacity == 0)", "originalCommit": "f61c8a6d9ee6d14c3a6174fbe22f8ec48632838f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc4ODgwNg==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r538788806", "bodyText": "Then we need another check as returning an empty Trie wont catch programming errors", "author": "gregw", "createdAt": "2020-12-08T20:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyOTcxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "fe885db869653860b548ff28f22c2761682a753a", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\nindex aeb546754f..ea497ff1b8 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n\n@@ -249,11 +252,7 @@ public interface Index<V>\n                     return EmptyTrie.instance(caseSensitive);\n \n                 if (alphabet == null)\n-                {\n-                    if (contents != null)\n-                        throw new IllegalStateException(\"Cannot create a mutable index without alphabet or some contents\");\n-                    alphabet = new HashSet<>();\n-                }\n+                    alphabet = (contents == null) ? ISO_8859_ALPHABET : new HashSet<>();\n \n                 // Work out needed capacity and alphabet\n                 int capacity = (contents == null) ? 0 : AbstractTrie.requiredCapacity(contents.keySet(), caseSensitive, alphabet);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEzMDIwMQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r538130201", "bodyText": "Should we define a default alphabet instead of throwing here?", "author": "lorban", "createdAt": "2020-12-08T08:23:51Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Index.java", "diffHunk": "@@ -193,42 +226,55 @@\n                 return this;\n             }\n \n+            public Builder<V> alphabet(String alphabetString)\n+            {\n+                alphabet = new HashSet<>();\n+                alphabetString.chars().forEach(c -> alphabet.add((char)c));\n+                return this;\n+            }\n+\n+            public Builder<V> alphabet(Set<Character> alphabet)\n+            {\n+                this.alphabet = alphabet;\n+                return this;\n+            }\n+\n             /**\n              * Build a {@link Mutable} instance.\n              * @return a {@link Mutable} instance.\n              */\n             public Mutable<V> build()\n             {\n-                if (contents != null && maxCapacity == 0)\n-                    throw new IllegalStateException(\"Cannot create a mutable index with maxCapacity=0 and some contents\");\n+                if (maxCapacity == 0)\n+                    return EmptyTrie.instance(caseSensitive);\n \n-                // TODO we need to consider large size and alphabet when picking a trie impl\n-                Mutable<V> result;\n-                if (maxCapacity > 0)\n+                if (alphabet == null)\n                 {\n-                    result = new ArrayTernaryTrie<>(!caseSensitive, maxCapacity);\n-                }\n-                else if (maxCapacity < 0)\n-                {\n-                    if (caseSensitive)\n-                        result = new ArrayTernaryTrie.Growing<>(false, 512, 512);\n-                    else\n-                        result = new TreeTrie<>();\n-                }\n-                else\n-                {\n-                    result = EmptyTrie.instance(caseSensitive);\n+                    if (contents != null)\n+                        throw new IllegalStateException(\"Cannot create a mutable index without alphabet or some contents\");", "originalCommit": "f61c8a6d9ee6d14c3a6174fbe22f8ec48632838f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe885db869653860b548ff28f22c2761682a753a", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\nindex aeb546754f..ea497ff1b8 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n\n@@ -249,11 +252,7 @@ public interface Index<V>\n                     return EmptyTrie.instance(caseSensitive);\n \n                 if (alphabet == null)\n-                {\n-                    if (contents != null)\n-                        throw new IllegalStateException(\"Cannot create a mutable index without alphabet or some contents\");\n-                    alphabet = new HashSet<>();\n-                }\n+                    alphabet = (contents == null) ? ISO_8859_ALPHABET : new HashSet<>();\n \n                 // Work out needed capacity and alphabet\n                 int capacity = (contents == null) ? 0 : AbstractTrie.requiredCapacity(contents.keySet(), caseSensitive, alphabet);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEzMzk5MQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r538133991", "bodyText": "I do not like this constant very much, I would prefer an extra helper method on the builder:\n public Builder<V> withVisibleAsciiAlphabet()\n {\n  alphabet = Collections.unmodifiableSet(...);\n  return this;\n }", "author": "lorban", "createdAt": "2020-12-08T08:28:40Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Index.java", "diffHunk": "@@ -19,18 +19,26 @@\n package org.eclipse.jetty.util;\n \n import java.nio.ByteBuffer;\n+import java.util.Collections;\n+import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Set;\n import java.util.function.Function;\n import java.util.function.Supplier;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n \n /**\n  * An immutable String lookup data structure.\n  * @param <V> the entry type\n  */\n public interface Index<V>\n {\n+    Set<Character> VISIBLE_ASCII_ALPHABET = Collections.unmodifiableSet(IntStream.range(0x20, 0x7f)", "originalCommit": "f61c8a6d9ee6d14c3a6174fbe22f8ec48632838f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7b0847eb230f8a81b53612bfc4b88ffb28dadf8e", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\nindex aeb546754f..5a218c55d2 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n\n@@ -35,10 +35,6 @@ import java.util.stream.IntStream;\n  */\n public interface Index<V>\n {\n-    Set<Character> VISIBLE_ASCII_ALPHABET = Collections.unmodifiableSet(IntStream.range(0x20, 0x7f)\n-        .mapToObj(i -> (char)i)\n-        .collect(Collectors.toSet()));\n-\n     /**\n      * Get an exact match from a String key\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEzNjg3OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r538136879", "bodyText": "You should throw IllegalStateException here, like the mutable builder does.", "author": "lorban", "createdAt": "2020-12-08T08:33:07Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Index.java", "diffHunk": "@@ -354,11 +401,26 @@ public Builder()\n             if (contents == null)\n                 return EmptyTrie.instance(caseSensitive);\n \n-            // TODO we need to consider large size and alphabet when picking a trie impl\n-            if (caseSensitive)\n-                return new ArrayTernaryTrie<>(false, contents);\n-            else\n-                return new ArrayTrie<>(contents);\n+            Set<Character> alphabet = new HashSet<>();\n+            int capacity = AbstractTrie.requiredCapacity(contents.keySet(), caseSensitive, alphabet);\n+\n+            AbstractTrie<V> trie = ArrayTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n+            if (trie != null)\n+                return trie;\n+            trie = ArrayTernaryTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n+            if (trie != null)\n+                return trie;\n+            trie = TreeTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n+            if (trie != null)\n+                return trie;\n+\n+            throw new UnsupportedOperationException(\"No suitable Trie implementation : \" + this);", "originalCommit": "f61c8a6d9ee6d14c3a6174fbe22f8ec48632838f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe885db869653860b548ff28f22c2761682a753a", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\nindex aeb546754f..ea497ff1b8 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n\n@@ -407,10 +403,7 @@ public interface Index<V>\n             AbstractTrie<V> trie = ArrayTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n             if (trie != null)\n                 return trie;\n-            trie = ArrayTernaryTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n-            if (trie != null)\n-                return trie;\n-            trie = TreeTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n+            trie = TernaryTrie.from(capacity, capacity, caseSensitive, alphabet, contents);\n             if (trie != null)\n                 return trie;\n \n"}}, {"oid": "79ac278b8d5a880bcd1396d550656ee196854485", "url": "https://github.com/eclipse/jetty.project/commit/79ac278b8d5a880bcd1396d550656ee196854485", "message": "WIP transfer machines\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-12-08T12:50:09Z", "type": "commit"}, {"oid": "7b0847eb230f8a81b53612bfc4b88ffb28dadf8e", "url": "https://github.com/eclipse/jetty.project/commit/7b0847eb230f8a81b53612bfc4b88ffb28dadf8e", "message": "WIP\n\nTernaryTrie mostly working", "committedDate": "2020-12-08T19:03:44Z", "type": "commit"}, {"oid": "fe885db869653860b548ff28f22c2761682a753a", "url": "https://github.com/eclipse/jetty.project/commit/fe885db869653860b548ff28f22c2761682a753a", "message": "WIP\n\ngrowby of TernaryTrie\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-12-08T20:22:16Z", "type": "commit"}, {"oid": "c0f3118d472daa6e92eda90002d743b6570769e3", "url": "https://github.com/eclipse/jetty.project/commit/c0f3118d472daa6e92eda90002d743b6570769e3", "message": "WIP\n\nupdate from review\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-12-08T20:29:54Z", "type": "commit"}, {"oid": "37f81beb4f6c8e0bd5ef67c6b191af09cb664d1a", "url": "https://github.com/eclipse/jetty.project/commit/37f81beb4f6c8e0bd5ef67c6b191af09cb664d1a", "message": "WIP\n\nupdate javadoc\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-12-08T20:59:02Z", "type": "commit"}, {"oid": "aa2226b63d369429c88f121b179c530991d8e628", "url": "https://github.com/eclipse/jetty.project/commit/aa2226b63d369429c88f121b179c530991d8e628", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-trie-selection", "committedDate": "2020-12-09T08:34:33Z", "type": "commit"}, {"oid": "dbe0788c5908b747dad8935d809939e9bfbc2481", "url": "https://github.com/eclipse/jetty.project/commit/dbe0788c5908b747dad8935d809939e9bfbc2481", "message": "WIP\n\nFixed some issues with alphabets", "committedDate": "2020-12-09T09:05:36Z", "type": "commit"}, {"oid": "7ac421b91c9b94de6b5abe7ae887568aa5dde79c", "url": "https://github.com/eclipse/jetty.project/commit/7ac421b91c9b94de6b5abe7ae887568aa5dde79c", "message": "WIP\n\nFixed null value tests", "committedDate": "2020-12-09T09:11:38Z", "type": "commit"}, {"oid": "b149d640eca7600ca7e878cbd5171ca6f7cb54db", "url": "https://github.com/eclipse/jetty.project/commit/b149d640eca7600ca7e878cbd5171ca6f7cb54db", "message": "WIP\n\nDon't use an Index for HTTP2Cipher", "committedDate": "2020-12-09T11:33:03Z", "type": "commit"}, {"oid": "2694806ff35b2d257397e7dc50029ee056f1802d", "url": "https://github.com/eclipse/jetty.project/commit/2694806ff35b2d257397e7dc50029ee056f1802d", "message": "WIP\n\nObeying the orders of my IDE", "committedDate": "2020-12-09T11:41:31Z", "type": "commit"}, {"oid": "901a415a99399542919d38c36d3a599215c42c8d", "url": "https://github.com/eclipse/jetty.project/commit/901a415a99399542919d38c36d3a599215c42c8d", "message": "WIP\n\nremoved test main", "committedDate": "2020-12-09T11:43:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzOTQ0OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539239449", "bodyText": "This String::toUpperCase uses system default locale.\nThis will produce undesired side effects on on some, non-US, systems.", "author": "joakime", "createdAt": "2020-12-09T11:46:46Z", "path": "jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java", "diffHunk": "@@ -19,311 +19,310 @@\n package org.eclipse.jetty.http2;\n \n import java.util.Comparator;\n-\n-import org.eclipse.jetty.util.Index;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n \n-    private static final Index<Boolean> __blackProtocols = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLSv1.2\", Boolean.TRUE)\n-        .with(\"TLSv1.1\", Boolean.TRUE)\n-        .with(\"TLSv1\", Boolean.TRUE)\n-        .with(\"SSL\", Boolean.TRUE)\n-        .with(\"SSLv2\", Boolean.TRUE)\n-        .with(\"SSLv3\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackProtocols = Stream.of(\n+        \"TLSv1.2\",\n+        \"TLSv1.1\",\n+        \"TLSv1\",\n+        \"SSL\",\n+        \"SSLv2\",\n+        \"SSLv3\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());", "originalCommit": "b149d640eca7600ca7e878cbd5171ca6f7cb54db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "chunk": "diff --git a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\nindex 74b81242b9..a48d9b85b5 100644\n--- a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n+++ b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n\n@@ -23,6 +23,8 @@ import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n+import org.eclipse.jetty.util.StringUtil;\n+\n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzOTU1OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539239559", "bodyText": "This String::toUpperCase uses system default locale.\nThis will produce undesired side effects on on some, non-US, systems.", "author": "joakime", "createdAt": "2020-12-09T11:46:56Z", "path": "jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java", "diffHunk": "@@ -19,311 +19,310 @@\n package org.eclipse.jetty.http2;\n \n import java.util.Comparator;\n-\n-import org.eclipse.jetty.util.Index;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n \n-    private static final Index<Boolean> __blackProtocols = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLSv1.2\", Boolean.TRUE)\n-        .with(\"TLSv1.1\", Boolean.TRUE)\n-        .with(\"TLSv1\", Boolean.TRUE)\n-        .with(\"SSL\", Boolean.TRUE)\n-        .with(\"SSLv2\", Boolean.TRUE)\n-        .with(\"SSLv3\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackProtocols = Stream.of(\n+        \"TLSv1.2\",\n+        \"TLSv1.1\",\n+        \"TLSv1\",\n+        \"SSL\",\n+        \"SSLv2\",\n+        \"SSLv3\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());\n \n-    private static final Index<Boolean> __blackCiphers = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLS_NULL_WITH_NULL_NULL\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_IDEA_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_IDEA_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_DES_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_IDEA_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CCM\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CCM\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CCM\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CCM\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CCM_8\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackCiphers = Stream.of(\n+        \"TLS_NULL_WITH_NULL_NULL\",\n+        \"TLS_RSA_WITH_NULL_MD5\",\n+        \"TLS_RSA_WITH_NULL_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_RSA_WITH_RC4_128_MD5\",\n+        \"TLS_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\n+        \"TLS_RSA_WITH_IDEA_CBC_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_DH_anon_WITH_RC4_128_MD5\",\n+        \"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_KRB5_WITH_DES_CBC_SHA\",\n+        \"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_KRB5_WITH_RC4_128_SHA\",\n+        \"TLS_KRB5_WITH_IDEA_CBC_SHA\",\n+        \"TLS_KRB5_WITH_DES_CBC_MD5\",\n+        \"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\n+        \"TLS_KRB5_WITH_RC4_128_MD5\",\n+        \"TLS_KRB5_WITH_IDEA_CBC_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_PSK_WITH_NULL_SHA\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA\",\n+        \"TLS_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\n+        \"TLS_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_WITH_NULL_SHA256\",\n+        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_SEED_CBC_SHA\",\n+        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_PSK_WITH_NULL_SHA256\",\n+        \"TLS_PSK_WITH_NULL_SHA384\",\n+        \"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA256\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA256\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\n+        \"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_NULL_SHA\",\n+        \"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_NULL_SHA\",\n+        \"TLS_ECDH_anon_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_AES_128_CCM\",\n+        \"TLS_RSA_WITH_AES_256_CCM\",\n+        \"TLS_RSA_WITH_AES_128_CCM_8\",\n+        \"TLS_RSA_WITH_AES_256_CCM_8\",\n+        \"TLS_PSK_WITH_AES_128_CCM\",\n+        \"TLS_PSK_WITH_AES_256_CCM\",\n+        \"TLS_PSK_WITH_AES_128_CCM_8\",\n+        \"TLS_PSK_WITH_AES_256_CCM_8\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());", "originalCommit": "b149d640eca7600ca7e878cbd5171ca6f7cb54db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "chunk": "diff --git a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\nindex 74b81242b9..a48d9b85b5 100644\n--- a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n+++ b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n\n@@ -23,6 +23,8 @@ import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n+import org.eclipse.jetty.util.StringUtil;\n+\n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MDIxMg==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539240212", "bodyText": "This uses system default locale.\nChange to tlsProtocol.toUpperCase(Locale.US).\nThis will produce undesired side effects on on some, non-US, systems.", "author": "joakime", "createdAt": "2020-12-09T11:47:58Z", "path": "jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java", "diffHunk": "@@ -19,311 +19,310 @@\n package org.eclipse.jetty.http2;\n \n import java.util.Comparator;\n-\n-import org.eclipse.jetty.util.Index;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n \n-    private static final Index<Boolean> __blackProtocols = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLSv1.2\", Boolean.TRUE)\n-        .with(\"TLSv1.1\", Boolean.TRUE)\n-        .with(\"TLSv1\", Boolean.TRUE)\n-        .with(\"SSL\", Boolean.TRUE)\n-        .with(\"SSLv2\", Boolean.TRUE)\n-        .with(\"SSLv3\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackProtocols = Stream.of(\n+        \"TLSv1.2\",\n+        \"TLSv1.1\",\n+        \"TLSv1\",\n+        \"SSL\",\n+        \"SSLv2\",\n+        \"SSLv3\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());\n \n-    private static final Index<Boolean> __blackCiphers = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLS_NULL_WITH_NULL_NULL\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_IDEA_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_IDEA_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_DES_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_IDEA_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CCM\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CCM\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CCM\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CCM\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CCM_8\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackCiphers = Stream.of(\n+        \"TLS_NULL_WITH_NULL_NULL\",\n+        \"TLS_RSA_WITH_NULL_MD5\",\n+        \"TLS_RSA_WITH_NULL_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_RSA_WITH_RC4_128_MD5\",\n+        \"TLS_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\n+        \"TLS_RSA_WITH_IDEA_CBC_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_DH_anon_WITH_RC4_128_MD5\",\n+        \"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_KRB5_WITH_DES_CBC_SHA\",\n+        \"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_KRB5_WITH_RC4_128_SHA\",\n+        \"TLS_KRB5_WITH_IDEA_CBC_SHA\",\n+        \"TLS_KRB5_WITH_DES_CBC_MD5\",\n+        \"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\n+        \"TLS_KRB5_WITH_RC4_128_MD5\",\n+        \"TLS_KRB5_WITH_IDEA_CBC_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_PSK_WITH_NULL_SHA\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA\",\n+        \"TLS_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\n+        \"TLS_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_WITH_NULL_SHA256\",\n+        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_SEED_CBC_SHA\",\n+        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_PSK_WITH_NULL_SHA256\",\n+        \"TLS_PSK_WITH_NULL_SHA384\",\n+        \"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA256\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA256\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\n+        \"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_NULL_SHA\",\n+        \"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_NULL_SHA\",\n+        \"TLS_ECDH_anon_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_AES_128_CCM\",\n+        \"TLS_RSA_WITH_AES_256_CCM\",\n+        \"TLS_RSA_WITH_AES_128_CCM_8\",\n+        \"TLS_RSA_WITH_AES_256_CCM_8\",\n+        \"TLS_PSK_WITH_AES_128_CCM\",\n+        \"TLS_PSK_WITH_AES_256_CCM\",\n+        \"TLS_PSK_WITH_AES_128_CCM_8\",\n+        \"TLS_PSK_WITH_AES_256_CCM_8\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());\n \n     public static boolean isBlackListProtocol(String tlsProtocol)\n     {\n-        return __blackProtocols.get(tlsProtocol) != null;\n+        return __blackProtocols.contains(tlsProtocol.toUpperCase());", "originalCommit": "b149d640eca7600ca7e878cbd5171ca6f7cb54db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "chunk": "diff --git a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\nindex 74b81242b9..a48d9b85b5 100644\n--- a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n+++ b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n\n@@ -23,6 +23,8 @@ import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n+import org.eclipse.jetty.util.StringUtil;\n+\n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MDI4MA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539240280", "bodyText": "This uses system default locale.\nChange to tlsProtocol.toUpperCase(Locale.US).\nThis will produce undesired side effects on on some, non-US, systems.", "author": "joakime", "createdAt": "2020-12-09T11:48:03Z", "path": "jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java", "diffHunk": "@@ -19,311 +19,310 @@\n package org.eclipse.jetty.http2;\n \n import java.util.Comparator;\n-\n-import org.eclipse.jetty.util.Index;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n \n-    private static final Index<Boolean> __blackProtocols = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLSv1.2\", Boolean.TRUE)\n-        .with(\"TLSv1.1\", Boolean.TRUE)\n-        .with(\"TLSv1\", Boolean.TRUE)\n-        .with(\"SSL\", Boolean.TRUE)\n-        .with(\"SSLv2\", Boolean.TRUE)\n-        .with(\"SSLv3\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackProtocols = Stream.of(\n+        \"TLSv1.2\",\n+        \"TLSv1.1\",\n+        \"TLSv1\",\n+        \"SSL\",\n+        \"SSLv2\",\n+        \"SSLv3\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());\n \n-    private static final Index<Boolean> __blackCiphers = new Index.Builder<Boolean>()\n-        .caseSensitive(false)\n-        .with(\"TLS_NULL_WITH_NULL_NULL\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_IDEA_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_DES_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_IDEA_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_DES_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_RC4_128_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_WITH_IDEA_CBC_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_SEED_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_RC4_128_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_NULL_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\", Boolean.TRUE)\n-        .with(\"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CCM\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CCM\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_128_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_RSA_WITH_AES_256_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CCM\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CCM\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_128_CCM_8\", Boolean.TRUE)\n-        .with(\"TLS_PSK_WITH_AES_256_CCM_8\", Boolean.TRUE)\n-        .build();\n+    private static final Set<String> __blackCiphers = Stream.of(\n+        \"TLS_NULL_WITH_NULL_NULL\",\n+        \"TLS_RSA_WITH_NULL_MD5\",\n+        \"TLS_RSA_WITH_NULL_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_RSA_WITH_RC4_128_MD5\",\n+        \"TLS_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5\",\n+        \"TLS_RSA_WITH_IDEA_CBC_SHA\",\n+        \"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_DES_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_DES_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_DH_anon_WITH_RC4_128_MD5\",\n+        \"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_DES_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_KRB5_WITH_DES_CBC_SHA\",\n+        \"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_KRB5_WITH_RC4_128_SHA\",\n+        \"TLS_KRB5_WITH_IDEA_CBC_SHA\",\n+        \"TLS_KRB5_WITH_DES_CBC_MD5\",\n+        \"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",\n+        \"TLS_KRB5_WITH_RC4_128_MD5\",\n+        \"TLS_KRB5_WITH_IDEA_CBC_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",\n+        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5\",\n+        \"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\",\n+        \"TLS_PSK_WITH_NULL_SHA\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA\",\n+        \"TLS_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_AES_128_CBC_SHA\",\n+        \"TLS_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_WITH_NULL_SHA256\",\n+        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA\",\n+        \"TLS_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_DHE_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_RSA_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_DSS_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DHE_DSS_WITH_SEED_CBC_SHA\",\n+        \"TLS_DHE_RSA_WITH_SEED_CBC_SHA\",\n+        \"TLS_DH_anon_WITH_SEED_CBC_SHA\",\n+        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_PSK_WITH_NULL_SHA256\",\n+        \"TLS_PSK_WITH_NULL_SHA384\",\n+        \"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA256\",\n+        \"TLS_DHE_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA256\",\n+        \"TLS_RSA_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256\",\n+        \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",\n+        \"TLS_ECDH_ECDSA_WITH_NULL_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_NULL_SHA\",\n+        \"TLS_ECDH_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_NULL_SHA\",\n+        \"TLS_ECDH_anon_WITH_RC4_128_SHA\",\n+        \"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA\",\n+        \"TLS_SRP_SHA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_RC4_128_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_NULL_SHA384\",\n+        \"TLS_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_PSK_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384\",\n+        \"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256\",\n+        \"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384\",\n+        \"TLS_RSA_WITH_AES_128_CCM\",\n+        \"TLS_RSA_WITH_AES_256_CCM\",\n+        \"TLS_RSA_WITH_AES_128_CCM_8\",\n+        \"TLS_RSA_WITH_AES_256_CCM_8\",\n+        \"TLS_PSK_WITH_AES_128_CCM\",\n+        \"TLS_PSK_WITH_AES_256_CCM\",\n+        \"TLS_PSK_WITH_AES_128_CCM_8\",\n+        \"TLS_PSK_WITH_AES_256_CCM_8\"\n+    ).map(String::toUpperCase).collect(Collectors.toSet());\n \n     public static boolean isBlackListProtocol(String tlsProtocol)\n     {\n-        return __blackProtocols.get(tlsProtocol) != null;\n+        return __blackProtocols.contains(tlsProtocol.toUpperCase());\n     }\n \n     public static boolean isBlackListCipher(String tlsCipher)\n     {\n-        return __blackCiphers.get(tlsCipher) != null;\n+        return __blackCiphers.contains(tlsCipher.toUpperCase());", "originalCommit": "b149d640eca7600ca7e878cbd5171ca6f7cb54db", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "chunk": "diff --git a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\nindex 74b81242b9..a48d9b85b5 100644\n--- a/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n+++ b/jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java\n\n@@ -23,6 +23,8 @@ import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n+import org.eclipse.jetty.util.StringUtil;\n+\n public class HTTP2Cipher\n {\n     public static final Comparator<String> COMPARATOR = new CipherComparator();\n"}}, {"oid": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "url": "https://github.com/eclipse/jetty.project/commit/9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "message": "WIP\n\nremoved locale issue with case conversion.", "committedDate": "2020-12-09T12:05:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0OTQxNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539349415", "bodyText": "This call isn't needed anymore.", "author": "lorban", "createdAt": "2020-12-09T14:26:05Z", "path": "jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java", "diffHunk": "@@ -1064,18 +1063,20 @@ else if (_endOfContent == EndOfContent.CHUNKED_CONTENT)\n                 {\n                     if (_fieldCache == null)\n                     {\n+                        // TODO should we bypass the builder in this case?\n                         _fieldCache = (getHeaderCacheSize() > 0 && (_version != null && _version == HttpVersion.HTTP_1_1))\n-                            ? new Index.Builder<HttpField>()\n+                            ? new Index.Mutable.Builder<HttpField>()\n                             .caseSensitive(false)\n                             .mutable()", "originalCommit": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwNTEyNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539405125", "bodyText": "Unfortunately it is because caseInsensitvie(false) returns the wrong type of Builder.  I guess I could reorder to make that last.... or just not do the alternative constructor....", "author": "gregw", "createdAt": "2020-12-09T15:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0OTQxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2NTc2NA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539965764", "bodyText": "Right... by exposing this builder's constructor you've opened a whole new range of potential maintenance problems. We have to seriously ponder if it's worth it.", "author": "lorban", "createdAt": "2020-12-10T08:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0OTQxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDExODQxNw==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r540118417", "bodyText": "yep - I don't like it... it is a halfway house.  If the builder is not efficient enough, we should go directly to the impl, or have a very special purpose static method builder.... let me try those approaches....", "author": "gregw", "createdAt": "2020-12-10T12:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0OTQxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "d87be4357ade1290c363986adbe6afc6ef70feec", "chunk": "diff --git a/jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java b/jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java\nindex a0e3bcc38d..eb16099225 100644\n--- a/jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java\n+++ b/jetty-http/src/main/java/org/eclipse/jetty/http/HttpParser.java\n\n@@ -1062,17 +1062,7 @@ public class HttpParser\n                 if (addToFieldCache && _header != null && _valueString != null)\n                 {\n                     if (_fieldCache == null)\n-                    {\n-                        // TODO should we bypass the builder in this case?\n-                        _fieldCache = (getHeaderCacheSize() > 0 && (_version != null && _version == HttpVersion.HTTP_1_1))\n-                            ? new Index.Mutable.Builder<HttpField>()\n-                            .caseSensitive(false)\n-                            .mutable()\n-                            .useVisibleAsciiAlphabet()\n-                            .maxCapacity(getHeaderCacheSize())\n-                            .build()\n-                            : NO_CACHE;\n-                    }\n+                        _fieldCache = Index.Builder.buildCaseSensitiveMutableVisibleAsciiAlphabet(getHeaderCacheSize());\n \n                     if (_field == null)\n                         _field = new HttpField(_header, caseInsensitiveHeader(_headerString, _header.asString()), _valueString);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2Nzk5OA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r539967998", "bodyText": "Looking at the changes made to this class, two things pop into my mind:\n\nDo those maps need to be case-insensitive?\nAren't there other classes that make use of Index that should instead use a Map?", "author": "lorban", "createdAt": "2020-12-10T08:27:03Z", "path": "jetty-http2/http2-common/src/main/java/org/eclipse/jetty/http2/HTTP2Cipher.java", "diffHunk": "@@ -19,311 +19,312 @@\n package org.eclipse.jetty.http2;\n \n import java.util.Comparator;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n-import org.eclipse.jetty.util.Index;\n+import org.eclipse.jetty.util.StringUtil;\n \n public class HTTP2Cipher", "originalCommit": "9efafddb4a8c1ad1f14814e116584ca99b33ec4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDExOTQyNA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r540119424", "bodyText": "I think yes, unless we can find something that specifies that protocol and ciphernames are specific cases.\nThere are probably other uses of Index that could be a map... I will look...", "author": "gregw", "createdAt": "2020-12-10T12:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2Nzk5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIxNDgyMg==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r542214822", "bodyText": "There are a couple of maybe could be changed... but nothing that shouts YES CHANGE ME NOW!.  So I'm happy as is.", "author": "gregw", "createdAt": "2020-12-14T09:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk2Nzk5OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2451697185342be56fd8372f215137b0b290873a", "url": "https://github.com/eclipse/jetty.project/commit/2451697185342be56fd8372f215137b0b290873a", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-trie-selection", "committedDate": "2020-12-10T11:58:56Z", "type": "commit"}, {"oid": "d87be4357ade1290c363986adbe6afc6ef70feec", "url": "https://github.com/eclipse/jetty.project/commit/d87be4357ade1290c363986adbe6afc6ef70feec", "message": "Updates from Review\n\n + Remove public mutable builder constructor\n + align caseInsensitive vs caseSensitive", "committedDate": "2020-12-10T12:35:20Z", "type": "commit"}, {"oid": "3ef17d477e1ceac79f1cc2bdd56466438165b74b", "url": "https://github.com/eclipse/jetty.project/commit/3ef17d477e1ceac79f1cc2bdd56466438165b74b", "message": "fix javadoc", "committedDate": "2020-12-10T12:46:58Z", "type": "commit"}, {"oid": "9bd309622d63958be0980c1da31f0ca4dd77a0f3", "url": "https://github.com/eclipse/jetty.project/commit/9bd309622d63958be0980c1da31f0ca4dd77a0f3", "message": "wip\n\nAdded a list parser to Index so that getBest can be used rather than clumsy calls to best", "committedDate": "2020-12-10T14:26:05Z", "type": "commit"}, {"oid": "a8f482bd524265c59bd54d6d377b57147dc6aedd", "url": "https://github.com/eclipse/jetty.project/commit/a8f482bd524265c59bd54d6d377b57147dc6aedd", "message": "Merge remote-tracking branch 'origin/jetty-10.0.x' into jetty-10.0.x-trie-selection", "committedDate": "2020-12-13T20:05:16Z", "type": "commit"}, {"oid": "aa7b9897fc83578be5490683a4972f8299940fc2", "url": "https://github.com/eclipse/jetty.project/commit/aa7b9897fc83578be5490683a4972f8299940fc2", "message": "Fix header\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-12-13T20:09:12Z", "type": "commit"}, {"oid": "e241fae5b71b29d8f3a975275abeab37be65699b", "url": "https://github.com/eclipse/jetty.project/commit/e241fae5b71b29d8f3a975275abeab37be65699b", "message": "WIP\n\nAdded benchmark along with simple HashTrie for comparison.", "committedDate": "2020-12-15T16:33:25Z", "type": "commit"}, {"oid": "b69e7d42eeb67c9b5f17f33e89481819cd0dd672", "url": "https://github.com/eclipse/jetty.project/commit/b69e7d42eeb67c9b5f17f33e89481819cd0dd672", "message": "WIP\n\nreinstated TreeTrie and ArrayTernaryTrie", "committedDate": "2020-12-15T17:35:40Z", "type": "commit"}, {"oid": "151c615e20fb1939b43e0135849a769b659a5780", "url": "https://github.com/eclipse/jetty.project/commit/151c615e20fb1939b43e0135849a769b659a5780", "message": "WIP\n\nArrayTrie with unlimited alphabet", "committedDate": "2020-12-16T22:34:45Z", "type": "commit"}, {"oid": "eacc849d24e4011edf9a8941a6318145bda617fd", "url": "https://github.com/eclipse/jetty.project/commit/eacc849d24e4011edf9a8941a6318145bda617fd", "message": "WIP", "committedDate": "2020-12-17T17:10:57Z", "type": "commit"}, {"oid": "8d48ff75efc4fdb15522bc4f2a12cf5309d3339e", "url": "https://github.com/eclipse/jetty.project/commit/8d48ff75efc4fdb15522bc4f2a12cf5309d3339e", "message": "WIP\n\nFixed otherChars", "committedDate": "2020-12-18T08:22:30Z", "type": "commit"}, {"oid": "92007ee8330cd43bd9110e1e3cef7960cb730f72", "url": "https://github.com/eclipse/jetty.project/commit/92007ee8330cd43bd9110e1e3cef7960cb730f72", "message": "WIP\n\nRemoved TErnaryTrie\nInclude null key in capacity calculations", "committedDate": "2020-12-19T07:36:41Z", "type": "commit"}, {"oid": "99a3b094237bf7c7dc9603fd051264f168676446", "url": "https://github.com/eclipse/jetty.project/commit/99a3b094237bf7c7dc9603fd051264f168676446", "message": "WIP\n\nmisc cleanups", "committedDate": "2020-12-19T15:32:48Z", "type": "commit"}, {"oid": "c03f1841d30419aca1e66d00f38490743c2d5789", "url": "https://github.com/eclipse/jetty.project/commit/c03f1841d30419aca1e66d00f38490743c2d5789", "message": "Misc cleanups\n\nfound by IDE code analysis", "committedDate": "2020-12-21T07:36:18Z", "type": "commit"}, {"oid": "0803e81b6cce3971d7dcc7e7942895b0620a8cbc", "url": "https://github.com/eclipse/jetty.project/commit/0803e81b6cce3971d7dcc7e7942895b0620a8cbc", "message": "Merge branch 'jetty-10.0.x' into jetty-10.0.x-trie-selection", "committedDate": "2020-12-22T19:45:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxODAxNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551218015", "bodyText": "That increment should be documented.", "author": "lorban", "createdAt": "2021-01-04T10:01:07Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTernaryTrie.java", "diffHunk": "@@ -96,10 +97,28 @@\n      */\n     private char _rows;\n \n+    public static <V> AbstractTrie<V> from(int capacity, int maxCapacity, boolean caseSensitive, Set<Character> alphabet, Map<String, V> contents)\n+    {\n+        // Can't grow\n+        if (maxCapacity < 0)\n+            return null;\n+        if (capacity < maxCapacity)\n+            capacity = maxCapacity;\n+        capacity++;", "originalCommit": "0803e81b6cce3971d7dcc7e7942895b0620a8cbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMwMjg2Mw==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551302863", "bodyText": "It's no longer needed.  Removing", "author": "gregw", "createdAt": "2021-01-04T12:59:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxODAxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMxNzcyNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551317725", "bodyText": "It looks like some tests checking the exact capacity calculation might be needed...", "author": "lorban", "createdAt": "2021-01-04T13:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxODAxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "1ee7577cc4f3f6d02d8169b12dccbfbfd7b2dc75", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTernaryTrie.java b/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTernaryTrie.java\nindex 0d9cdf2dc3..b8d26f9a6d 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTernaryTrie.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTernaryTrie.java\n\n@@ -97,24 +97,6 @@ class ArrayTernaryTrie<V> extends AbstractTrie<V>\n      */\n     private char _rows;\n \n-    public static <V> AbstractTrie<V> from(int capacity, int maxCapacity, boolean caseSensitive, Set<Character> alphabet, Map<String, V> contents)\n-    {\n-        // Can't grow\n-        if (maxCapacity < 0)\n-            return null;\n-        if (capacity < maxCapacity)\n-            capacity = maxCapacity;\n-        capacity++;\n-        if (capacity > MAX_CAPACITY)\n-            return null;\n-\n-        AbstractTrie<V> trie = new ArrayTernaryTrie<V>(caseSensitive, capacity);\n-\n-        if (contents != null && !trie.putAll(contents))\n-            return null;\n-        return trie;\n-    }\n-\n     /**\n      * Create a Trie\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMTk4MA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551221980", "bodyText": "Is AbstractTrie.requiredCapacity reporting the exact amount of required bytes for each and every trie implementation? Otherwise we have a problem.", "author": "lorban", "createdAt": "2021-01-04T10:09:01Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Index.java", "diffHunk": "@@ -188,42 +269,42 @@\n                 return this;\n             }\n \n+            /**\n+             * Configure the index to be mutable.\n+             *\n+             * @return a {@link Mutable.Builder} configured like this builder.\n+             */\n+            public Mutable.Builder<V> mutable()\n+            {\n+                return this;\n+            }\n+\n             /**\n              * Build a {@link Mutable} instance.\n              * @return a {@link Mutable} instance.\n              */\n             public Mutable<V> build()\n             {\n-                if (contents != null && maxCapacity == 0)\n-                    throw new IllegalStateException(\"Cannot create a mutable index with maxCapacity=0 and some contents\");\n-\n-                // TODO we need to consider large size and alphabet when picking a trie impl\n-                Mutable<V> result;\n-                if (maxCapacity > 0)\n-                {\n-                    result = new ArrayTernaryTrie<>(!caseSensitive, maxCapacity);\n-                }\n-                else if (maxCapacity < 0)\n-                {\n-                    if (caseSensitive)\n-                        result = new ArrayTernaryTrie.Growing<>(false, 512, 512);\n-                    else\n-                        result = new TreeTrie<>();\n-                }\n-                else\n-                {\n-                    result = EmptyTrie.instance(caseSensitive);\n-                }\n-\n-                if (contents != null)\n-                {\n-                    for (Map.Entry<String, V> entry : contents.entrySet())\n-                    {\n-                        if (!result.put(entry.getKey(), entry.getValue()))\n-                            throw new AssertionError(\"Index capacity exceeded at \" + entry.getKey());\n-                    }\n-                }\n-                return result;\n+                if (maxCapacity == 0)\n+                    return EmptyTrie.instance(caseSensitive);\n+\n+                // Work out needed capacity\n+                int capacity = (contents == null) ? 0 : AbstractTrie.requiredCapacity(contents.keySet(), caseSensitive);\n+\n+                // check capacities\n+                if (maxCapacity >= 0 && capacity > maxCapacity)\n+                    throw new IllegalStateException(\"Insufficient maxCapacity for contents\");", "originalCommit": "0803e81b6cce3971d7dcc7e7942895b0620a8cbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5MjQ4NA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551292484", "bodyText": "It is if we assume all our Trie implementations can handle a key of \"\".\nThe other thing to do is to just not handle a \"\" and get rid of the whole +1 logic.... but then the nature of these beasts is that they have a root and the root can store a value, so hmmmm  keeping the +1 is probably simpler.    I'll document.", "author": "gregw", "createdAt": "2021-01-04T12:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMTk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMxNjk2OQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551316969", "bodyText": "ArrayTernaryTrie needs more than just +1, see \n  \n    \n      jetty.project/jetty-util/src/main/java/org/eclipse/jetty/util/ArrayTernaryTrie.java\n    \n    \n        Lines 125 to 128\n      in\n      2662be0\n    \n    \n    \n    \n\n        \n          \n           // The calculated requiredCapacity does not take into account the \n        \n\n        \n          \n           // extra reserved slot for the empty string key, nor the slots \n        \n\n        \n          \n           // required for 'terminating' the entry (1 slot per key) so we \n        \n\n        \n          \n           // have to add those.", "author": "lorban", "createdAt": "2021-01-04T13:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMTk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0NzA5Mg==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551347092", "bodyText": "That comment is wrong, the +1 is enough.  Anyway, that class is deprecated and never directly called from the Index factory now.  I'll fix the comment.", "author": "gregw", "createdAt": "2021-01-04T14:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMTk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1MjA2OA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551352068", "bodyText": "more javadoc improvements", "author": "gregw", "createdAt": "2021-01-04T14:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMTk4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM5NDk1OA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551394958", "bodyText": "The ArrayTernaryTrie capacity calculation is really a pain, but since that implementation isn't used by the Index builders anymore, this looks good enough.", "author": "lorban", "createdAt": "2021-01-04T15:44:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMTk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "0eed2cc58148cf13389b76c06b7f46078e411e0e", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\nindex 7e3f2f672e..5a12e7777b 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n\n@@ -309,6 +252,21 @@ public interface Index<V>\n         }\n     }\n \n+    /**\n+     * A special purpose static builder for fast creation of specific Index type\n+     * @param maxCapacity The max capacity of the index\n+     * @param <V> The type of the index\n+     * @return A case sensitive mutable Index tacking visible ASCII alphabet to a max capacity.\n+     */\n+    static <V> Mutable<V> buildCaseSensitiveMutableVisibleAsciiAlphabet(int maxCapacity)\n+    {\n+        if (maxCapacity < 0 || maxCapacity > ArrayTrie.MAX_CAPACITY)\n+            return new TreeTrie<>(true);\n+        if (maxCapacity == 0)\n+            return EmptyTrie.instance(true);\n+        return new ArrayTrie<>(true, maxCapacity);\n+    }\n+\n     /**\n      * Builder of {@link Index} instances.\n      * @param <V> the entry type\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMzAzMQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551223031", "bodyText": "If maxCapacity is greater than ArrayTrie.MAX_CAPACITY you're going to return an empty trie. This breaks the principle of least surprise IMHO.", "author": "lorban", "createdAt": "2021-01-04T10:11:04Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Index.java", "diffHunk": "@@ -251,6 +333,21 @@ public Builder()\n             this.contents = contents;\n         }\n \n+        /**\n+         * A special purpose static builder for fast creation of specific Index type\n+         * @param maxCapacity The max capacity of the index\n+         * @param <V> The type of the index\n+         * @return A case sensitive mutable Index tacking visible ASCII alphabet to a max capacity.\n+         */\n+        public static <V> Mutable<V> buildCaseSensitiveMutableVisibleAsciiAlphabet(int maxCapacity)\n+        {\n+            if (maxCapacity <= 0)\n+                return EmptyTrie.instance(true);\n+            if (maxCapacity <= ArrayTrie.MAX_CAPACITY)", "originalCommit": "0803e81b6cce3971d7dcc7e7942895b0620a8cbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5MzI0MA==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551293240", "bodyText": "ah yes... a TreeTrie it is then", "author": "gregw", "createdAt": "2021-01-04T12:38:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMzAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMxNDczNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551314735", "bodyText": "Oh, and I just remembered that a negative maxCapacity means unlimited. I think the whole method might need to be revisited.", "author": "lorban", "createdAt": "2021-01-04T13:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMzAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0NTc5MQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551345791", "bodyText": "revisited", "author": "gregw", "createdAt": "2021-01-04T14:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMzAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM4ODkxNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551388915", "bodyText": "Looks good now.", "author": "lorban", "createdAt": "2021-01-04T15:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyMzAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1ee7577cc4f3f6d02d8169b12dccbfbfd7b2dc75", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\nindex 7e3f2f672e..c1b9f6d592 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Index.java\n\n@@ -345,7 +288,7 @@ public interface Index<V>\n                 return EmptyTrie.instance(true);\n             if (maxCapacity <= ArrayTrie.MAX_CAPACITY)\n                 return new ArrayTrie<>(true, maxCapacity);\n-            return EmptyTrie.instance(true);\n+            return new TreeTrie<>(true);\n         }\n \n         private Map<String, V> contents()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyNDYwNg==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551224606", "bodyText": "The parseCsvIndex method looks very specific to the HttpChannelOverHttp. It feels like it should be moved into this class.", "author": "lorban", "createdAt": "2021-01-04T10:14:06Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/HttpChannelOverHttp.java", "diffHunk": "@@ -500,31 +501,24 @@ public void parsedHeader(HttpField field)\n \n                 case EXPECT:\n                 {\n-                    if (HttpVersion.HTTP_1_1.equals(_requestBuilder.version()))\n+                    if (!Index.parseCsvIndex(HttpHeaderValue.CACHE, value, t ->", "originalCommit": "0803e81b6cce3971d7dcc7e7942895b0620a8cbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0NjE1Mg==", "url": "https://github.com/eclipse/jetty.project/pull/5736#discussion_r551346152", "bodyText": "Moved and fixed multiple bugs.\nThere are some other possible usages of the method, but will do those in another PR", "author": "gregw", "createdAt": "2021-01-04T14:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyNDYwNg=="}], "type": "inlineReview", "revised_code": {"commit": "1ee7577cc4f3f6d02d8169b12dccbfbfd7b2dc75", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/HttpChannelOverHttp.java b/jetty-server/src/main/java/org/eclipse/jetty/server/HttpChannelOverHttp.java\nindex 73e70cc21c..687995cc90 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/HttpChannelOverHttp.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/HttpChannelOverHttp.java\n\n@@ -501,7 +500,7 @@ public class HttpChannelOverHttp extends HttpChannel implements HttpParser.Reque\n \n                 case EXPECT:\n                 {\n-                    if (!Index.parseCsvIndex(HttpHeaderValue.CACHE, value, t ->\n+                    if (!HttpHeaderValue.parseCsvIndex(value, t ->\n                     {\n                         switch (t)\n                         {\n"}}, {"oid": "ab915c5f48a7dc23f5b031626bc7bfd38ab0c8ae", "url": "https://github.com/eclipse/jetty.project/commit/ab915c5f48a7dc23f5b031626bc7bfd38ab0c8ae", "message": "Merge branch 'jetty-10.0.x' into jetty-10.0.x-trie-selection", "committedDate": "2021-01-04T12:53:15Z", "type": "commit"}, {"oid": "1ee7577cc4f3f6d02d8169b12dccbfbfd7b2dc75", "url": "https://github.com/eclipse/jetty.project/commit/1ee7577cc4f3f6d02d8169b12dccbfbfd7b2dc75", "message": "Updates from review", "committedDate": "2021-01-04T14:19:58Z", "type": "commit"}, {"oid": "0eed2cc58148cf13389b76c06b7f46078e411e0e", "url": "https://github.com/eclipse/jetty.project/commit/0eed2cc58148cf13389b76c06b7f46078e411e0e", "message": "Updates from review", "committedDate": "2021-01-04T14:23:29Z", "type": "commit"}, {"oid": "5a7de8807d9145032c942092536948adddad6444", "url": "https://github.com/eclipse/jetty.project/commit/5a7de8807d9145032c942092536948adddad6444", "message": "Updates from review", "committedDate": "2021-01-04T14:33:36Z", "type": "commit"}]}