{"pr_number": 4845, "pr_title": "Fixes #4808 - Review HttpClient Request header APIs.", "pr_createdAt": "2020-05-04T21:17:43Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4845", "timeline": [{"oid": "cf9df70935c128ddc394da0d797611c2d0a5adc6", "url": "https://github.com/eclipse/jetty.project/commit/cf9df70935c128ddc394da0d797611c2d0a5adc6", "message": "Fixes #4808 - Review HttpClient Request header APIs.\n\nIntroduced:\n* Request Request.headers(Consumer<HttpFields.Mutable>).\nThis allows applications to modify the headers, and chain calls.\nIt also delegates the precise semantic of put/add/remove/clear to HttpFields, so there is no API duplication.\n* HttpRequest.header(HttpField) to efficiently add fields while normalizing the request (only used in implementation).\n\n* HttpResponse.header(HttpField) to efficiently add fields while parsing the response (only used in implementation).\nThis pairs with HttpResponse.trailer(HttpField).\n* HttpResponse.headers(Consumer<HttpFields.Mutable>) to modify the fields after they have been populated (only used in tests).\n\nRemoved:\n* Request.[set,add,put,remove], replaced by headers(Consumer<HttpFields.Mutable>).\n\nDeprecated:\n* Request.header(String, String)\n* Request.header(HttpHeader, String)\nBoth replaced by headers(Consumer<HttpFields.Mutable>) with clearer semantic for add/put/remove.\n\nAll the rest is code cleanup to remove the usage of the deprecated header() methods.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-04T21:16:59Z", "type": "commit"}, {"oid": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "url": "https://github.com/eclipse/jetty.project/commit/a93b2c608470ecb2853fdc8417ae54b5424268f6", "message": "Fixes #4808 - Review HttpClient Request header APIs.\n\nFixed test failures.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-05T12:48:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjAyNA==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602024", "bodyText": "My senses tell me that adding a new HttpFields.Mutable.addIfAbsent() API and calling it with newRequest.headers(header -> header.addIfAbsent(field)) would be preferable to the old style if (!contains) add().", "author": "lorban", "createdAt": "2020-05-06T07:45:08Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpClient.java", "diffHunk": "@@ -471,10 +471,8 @@ protected Request copyRequest(HttpRequest oldRequest, URI newURI)\n                 HttpHeader.PROXY_AUTHORIZATION == header)\n                 continue;\n \n-            String name = field.getName();\n-            String value = field.getValue();\n-            if (!newRequest.getHeaders().contains(name, value))\n-                newRequest.header(name, value);\n+            if (!newRequest.getHeaders().contains(field))", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIxMjk2MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r422212961", "bodyText": "See #4859.", "author": "sbordet", "createdAt": "2020-05-08T15:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpClient.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpClient.java\nindex a662c16bbb..51939e5016 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpClient.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpClient.java\n\n@@ -472,7 +472,7 @@ public class HttpClient extends ContainerLifeCycle\n                 continue;\n \n             if (!newRequest.getHeaders().contains(field))\n-                newRequest.header(field);\n+                newRequest.addHeader(field);\n         }\n         return newRequest;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjQ1Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602452", "bodyText": "Aren't you calling a method that is supposed to be deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:46:03Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java", "diffHunk": "@@ -153,7 +153,7 @@ protected void normalizeRequest(Request request)\n         if (version.getVersion() <= 11)\n         {\n             if (!headers.contains(HttpHeader.HOST))\n-                request.put(getHttpDestination().getHostField());\n+            request.header(getHttpDestination().getHostField());", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNTc2NA==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420615764", "bodyText": "No, as this one is only in HttpRequest and takes a field, as described in the initial PR comment, to save the lambda allocation.", "author": "sbordet", "createdAt": "2020-05-06T08:12:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjQ1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\nindex 3546ce7192..f603d9978f 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\n\n@@ -153,7 +153,7 @@ public abstract class HttpConnection implements IConnection\n         if (version.getVersion() <= 11)\n         {\n             if (!headers.contains(HttpHeader.HOST))\n-            request.header(getHttpDestination().getHostField());\n+                request.addHeader(getHttpDestination().getHostField());\n         }\n \n         // Add content headers\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjUxNQ==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602515", "bodyText": "Aren't you calling a method that is supposed to be deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:46:11Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java", "diffHunk": "@@ -167,22 +167,19 @@ protected void normalizeRequest(Request request)\n             if (!headers.contains(HttpHeader.CONTENT_TYPE))\n             {\n                 String contentType = content.getContentType();\n+                if (contentType == null)\n+                    contentType = getHttpClient().getDefaultRequestContentType();\n                 if (contentType != null)\n                 {\n-                    request.put(new HttpField(HttpHeader.CONTENT_TYPE, contentType));\n-                }\n-                else\n-                {\n-                    contentType = getHttpClient().getDefaultRequestContentType();\n-                    if (contentType != null)\n-                        request.put(new HttpField(HttpHeader.CONTENT_TYPE, contentType));\n+                    HttpField field = new HttpField(HttpHeader.CONTENT_TYPE, contentType);\n+                    request.header(field);\n                 }\n             }\n             long contentLength = content.getLength();\n             if (contentLength >= 0)\n             {\n                 if (!headers.contains(HttpHeader.CONTENT_LENGTH))\n-                    request.put(new HttpField.LongValueHttpField(HttpHeader.CONTENT_LENGTH, contentLength));\n+                    request.header(new HttpField.LongValueHttpField(HttpHeader.CONTENT_LENGTH, contentLength));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\nindex 3546ce7192..f603d9978f 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\n\n@@ -172,14 +172,14 @@ public abstract class HttpConnection implements IConnection\n                 if (contentType != null)\n                 {\n                     HttpField field = new HttpField(HttpHeader.CONTENT_TYPE, contentType);\n-                    request.header(field);\n+                    request.addHeader(field);\n                 }\n             }\n             long contentLength = content.getLength();\n             if (contentLength >= 0)\n             {\n                 if (!headers.contains(HttpHeader.CONTENT_LENGTH))\n-                    request.header(new HttpField.LongValueHttpField(HttpHeader.CONTENT_LENGTH, contentLength));\n+                    request.addHeader(new HttpField.LongValueHttpField(HttpHeader.CONTENT_LENGTH, contentLength));\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjU3Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602576", "bodyText": "Aren't you calling a method that is supposed to be deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:46:18Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java", "diffHunk": "@@ -195,7 +192,10 @@ protected void normalizeRequest(Request request)\n                 cookies = convertCookies(HttpCookieStore.matchPath(uri, cookieStore.get(uri)), null);\n             cookies = convertCookies(request.getCookies(), cookies);\n             if (cookies != null)\n-                request.header(HttpHeader.COOKIE, cookies.toString());\n+            {\n+                HttpField cookieField = new HttpField(HttpHeader.COOKIE, cookies.toString());\n+                request.header(cookieField);", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\nindex 3546ce7192..f603d9978f 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpConnection.java\n\n@@ -194,7 +194,7 @@ public abstract class HttpConnection implements IConnection\n             if (cookies != null)\n             {\n                 HttpField cookieField = new HttpField(HttpHeader.COOKIE, cookies.toString());\n-                request.header(cookieField);\n+                request.addHeader(cookieField);\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjY0OQ==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602649", "bodyText": "Aren't you calling a method that is supposed to be deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:46:27Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpReceiver.java", "diffHunk": "@@ -242,7 +242,7 @@ protected boolean responseHeader(HttpExchange exchange, HttpField field)\n         boolean process = notifier.notifyHeader(exchange.getConversation().getResponseListeners(), response, field);\n         if (process)\n         {\n-            response.getHeaderFieldsMutable().add(field);\n+            response.header(field);", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpReceiver.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpReceiver.java\nindex 937e4e3679..85fe08b44d 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpReceiver.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpReceiver.java\n\n@@ -242,7 +242,7 @@ public abstract class HttpReceiver\n         boolean process = notifier.notifyHeader(exchange.getConversation().getResponseListeners(), response, field);\n         if (process)\n         {\n-            response.header(field);\n+            response.addHeader(field);\n             HttpHeader fieldHeader = field.getHeader();\n             if (fieldHeader != null)\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjg3Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602876", "bodyText": "Shouldn't this method be marked as @Deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:46:58Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java", "diffHunk": "@@ -305,34 +306,6 @@ public Request accept(String... accepts)\n         return this;\n     }\n \n-    @Override\n-    public Request set(HttpFields fields)\n-    {\n-        headers.clear().add(fields);\n-        return this;\n-    }\n-\n-    @Override\n-    public Request remove(HttpHeader header)\n-    {\n-        headers.remove(header);\n-        return this;\n-    }\n-\n-    @Override\n-    public Request put(HttpField field)\n-    {\n-        headers.put(field);\n-        return this;\n-    }\n-\n-    @Override\n-    public Request add(HttpField field)\n-    {\n-        headers.add(field);\n-        return this;\n-    }\n-\n     @Override\n     public Request header(String name, String value)", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjI4Mw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420616283", "bodyText": "No, the interface one is deprecated. I don't think you should deprecate the whole hierarchy.", "author": "sbordet", "createdAt": "2020-05-06T08:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java\nindex 30c9eb9b11..c6c329d250 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java\n\n@@ -307,6 +307,7 @@ public class HttpRequest implements Request\n     }\n \n     @Override\n+    @Deprecated\n     public Request header(String name, String value)\n     {\n         if (value == null)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMjk3Mw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420602973", "bodyText": "Shouldn't this method be marked as @Deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:47:12Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java", "diffHunk": "@@ -402,6 +375,19 @@ public Request attribute(String name, Object value)\n         return headers;\n     }\n \n+    @Override\n+    public Request headers(Consumer<HttpFields.Mutable> consumer)\n+    {\n+        consumer.accept(headers);\n+        return this;\n+    }\n+\n+    public HttpRequest header(HttpField header)", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java\nindex 30c9eb9b11..c6c329d250 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpRequest.java\n\n@@ -382,7 +384,7 @@ public class HttpRequest implements Request\n         return this;\n     }\n \n-    public HttpRequest header(HttpField header)\n+    public HttpRequest addHeader(HttpField header)\n     {\n         headers.add(header);\n         return this;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwMzE0Mw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420603143", "bodyText": "Shouldn't this method be marked as @Deprecated?", "author": "lorban", "createdAt": "2020-05-06T07:47:35Z", "path": "jetty-client/src/main/java/org/eclipse/jetty/client/HttpResponse.java", "diffHunk": "@@ -91,9 +92,16 @@ public HttpFields getHeaders()\n         return headers.asImmutable();\n     }\n \n-    public HttpFields.Mutable getHeaderFieldsMutable()\n+    public HttpResponse header(HttpField header)", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "chunk": "diff --git a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpResponse.java b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpResponse.java\nindex 012cd425b5..0eca051d6a 100644\n--- a/jetty-client/src/main/java/org/eclipse/jetty/client/HttpResponse.java\n+++ b/jetty-client/src/main/java/org/eclipse/jetty/client/HttpResponse.java\n\n@@ -92,7 +92,7 @@ public class HttpResponse implements Response\n         return headers.asImmutable();\n     }\n \n-    public HttpResponse header(HttpField header)\n+    public HttpResponse addHeader(HttpField header)\n     {\n         headers.add(header);\n         return this;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwNzg3NA==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420607874", "bodyText": "I wonder if adding a HttpFields.Mutable.addIfNotNull() helper method wouldn't be worth it as there would only be a single call to proxyRequest.headers() with all the mutations chained in a single shot.", "author": "lorban", "createdAt": "2020-05-06T07:56:44Z", "path": "jetty-proxy/src/main/java/org/eclipse/jetty/proxy/AbstractProxyServlet.java", "diffHunk": "@@ -531,15 +531,19 @@ protected void addProxyHeaders(HttpServletRequest clientRequest, Request proxyRe\n \n     protected void addViaHeader(Request proxyRequest)\n     {\n-        proxyRequest.header(HttpHeader.VIA, \"http/1.1 \" + getViaHost());\n+        proxyRequest.headers(headers -> headers.add(HttpHeader.VIA, \"http/1.1 \" + getViaHost()));\n     }\n \n     protected void addXForwardedHeaders(HttpServletRequest clientRequest, Request proxyRequest)\n     {\n-        proxyRequest.header(HttpHeader.X_FORWARDED_FOR, clientRequest.getRemoteAddr());\n-        proxyRequest.header(HttpHeader.X_FORWARDED_PROTO, clientRequest.getScheme());\n-        proxyRequest.header(HttpHeader.X_FORWARDED_HOST, clientRequest.getHeader(HttpHeader.HOST.asString()));\n-        proxyRequest.header(HttpHeader.X_FORWARDED_SERVER, clientRequest.getLocalName());\n+        proxyRequest.headers(headers -> headers.add(HttpHeader.X_FORWARDED_FOR, clientRequest.getRemoteAddr()));\n+        proxyRequest.headers(headers -> headers.add(HttpHeader.X_FORWARDED_PROTO, clientRequest.getScheme()));\n+        String hostHeader = clientRequest.getHeader(HttpHeader.HOST.asString());\n+        if (hostHeader != null)\n+            proxyRequest.headers(headers -> headers.add(HttpHeader.X_FORWARDED_HOST, hostHeader));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIxOTQxNw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r422219417", "bodyText": "See #4859.", "author": "sbordet", "createdAt": "2020-05-08T15:47:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwNzg3NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODUyMw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608523", "bodyText": "Shouldn't you combine the above two calls to headers() into a single one?\n.headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, \"application/json\")\n    .put(\"X-Some-Custom-Header\", \"some-value\"));", "author": "lorban", "createdAt": "2020-05-06T07:58:06Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1647,8 +1646,8 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(321, TimeUnit.SECONDS)\n             .idleTimeout(2221, TimeUnit.SECONDS)\n             .followRedirects(true)\n-            .header(HttpHeader.CONTENT_TYPE, \"application/json\")\n-            .header(\"X-Some-Custom-Header\", \"some-value\"));\n+            .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Custom-Header\", \"some-value\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNzMzOA==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420617338", "bodyText": "I could, but I also want to chain the calls to headers(Consumer) to show that it is possible.\nI chain the calls to HttpFields elsewhere, so it's not a big deal -- these are only tests.", "author": "sbordet", "createdAt": "2020-05-06T08:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODUyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODcwMA==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608700", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:58:25Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1657,30 +1656,30 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(123231, TimeUnit.SECONDS)\n             .idleTimeout(232342, TimeUnit.SECONDS)\n             .followRedirects(false)\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(\"X-Some-Other-Custom-Header\", \"some-other-value\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Other-Custom-Header\", \"some-other-value\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODczMg==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608732", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:58:30Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1657,30 +1656,30 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(123231, TimeUnit.SECONDS)\n             .idleTimeout(232342, TimeUnit.SECONDS)\n             .followRedirects(false)\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(\"X-Some-Other-Custom-Header\", \"some-other-value\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Other-Custom-Header\", \"some-other-value\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.ACCEPT, \"application/xml\")\n-            .header(\"x-same-name\", \"value1\")\n-            .header(\"x-same-name\", \"value2\"));\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/xml\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value1\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value2\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODc3MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608771", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:58:36Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1657,30 +1656,30 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(123231, TimeUnit.SECONDS)\n             .idleTimeout(232342, TimeUnit.SECONDS)\n             .followRedirects(false)\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(\"X-Some-Other-Custom-Header\", \"some-other-value\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Other-Custom-Header\", \"some-other-value\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.ACCEPT, \"application/xml\")\n-            .header(\"x-same-name\", \"value1\")\n-            .header(\"x-same-name\", \"value2\"));\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/xml\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value1\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value2\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.CONTENT_TYPE, \"application/json\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, \"application/json\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODgxMg==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608812", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:58:41Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1657,30 +1656,30 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(123231, TimeUnit.SECONDS)\n             .idleTimeout(232342, TimeUnit.SECONDS)\n             .followRedirects(false)\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(\"X-Some-Other-Custom-Header\", \"some-other-value\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Other-Custom-Header\", \"some-other-value\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.ACCEPT, \"application/xml\")\n-            .header(\"x-same-name\", \"value1\")\n-            .header(\"x-same-name\", \"value2\"));\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/xml\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value1\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value2\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.CONTENT_TYPE, \"application/json\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, \"application/json\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(\"Accept\", \"application/json\")\n-            .header(\"Content-Type\", \"application/json\"));\n+            .headers(headers -> headers.put(\"Accept\", \"application/json\"))\n+            .headers(headers -> headers.put(\"Content-Type\", \"application/json\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(\"X-Custom-Header-1\", \"value1\")\n-            .header(\"X-Custom-Header-2\", \"value2\"));\n+            .headers(headers -> headers.put(\"X-Custom-Header-1\", \"value1\"))\n+            .headers(headers -> headers.put(\"X-Custom-Header-2\", \"value2\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODg0Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608842", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:58:45Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1657,30 +1656,30 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(123231, TimeUnit.SECONDS)\n             .idleTimeout(232342, TimeUnit.SECONDS)\n             .followRedirects(false)\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(\"X-Some-Other-Custom-Header\", \"some-other-value\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Other-Custom-Header\", \"some-other-value\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.ACCEPT, \"application/xml\")\n-            .header(\"x-same-name\", \"value1\")\n-            .header(\"x-same-name\", \"value2\"));\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/xml\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value1\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value2\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.CONTENT_TYPE, \"application/json\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, \"application/json\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(\"Accept\", \"application/json\")\n-            .header(\"Content-Type\", \"application/json\"));\n+            .headers(headers -> headers.put(\"Accept\", \"application/json\"))\n+            .headers(headers -> headers.put(\"Content-Type\", \"application/json\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwODkyMw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420608923", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:58:56Z", "path": "jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientTest.java", "diffHunk": "@@ -1657,30 +1656,30 @@ public void testCopyRequest(Scenario scenario) throws Exception\n             .timeout(123231, TimeUnit.SECONDS)\n             .idleTimeout(232342, TimeUnit.SECONDS)\n             .followRedirects(false)\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(\"X-Some-Other-Custom-Header\", \"some-other-value\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(\"X-Some-Other-Custom-Header\", \"some-other-value\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.ACCEPT, \"application/xml\")\n-            .header(\"x-same-name\", \"value1\")\n-            .header(\"x-same-name\", \"value2\"));\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.add(HttpHeader.ACCEPT, \"application/xml\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value1\"))\n+            .headers(headers -> headers.add(\"x-same-name\", \"value2\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(HttpHeader.ACCEPT, \"application/json\")\n-            .header(HttpHeader.CONTENT_TYPE, \"application/json\"));\n+            .headers(headers -> headers.put(HttpHeader.ACCEPT, \"application/json\"))\n+            .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, \"application/json\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(\"Accept\", \"application/json\")\n-            .header(\"Content-Type\", \"application/json\"));\n+            .headers(headers -> headers.put(\"Accept\", \"application/json\"))\n+            .headers(headers -> headers.put(\"Content-Type\", \"application/json\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(\"X-Custom-Header-1\", \"value1\")\n-            .header(\"X-Custom-Header-2\", \"value2\"));\n+            .headers(headers -> headers.put(\"X-Custom-Header-1\", \"value1\"))\n+            .headers(headers -> headers.put(\"X-Custom-Header-2\", \"value2\")));\n \n         assertCopyRequest(client.newRequest(\"https://example.com\")\n-            .header(\"X-Custom-Header-1\", \"value\")\n-            .header(\"X-Custom-Header-2\", \"value\"));\n+            .headers(headers -> headers.put(\"X-Custom-Header-1\", \"value\"))\n+            .headers(headers -> headers.put(\"X-Custom-Header-2\", \"value\")));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwOTI1Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420609256", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:59:31Z", "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/ForwardProxyTLSServerTest.java", "diffHunk": "@@ -251,12 +251,13 @@ public void testTwoExchanges(SslContextFactory.Server proxyTLS) throws Exception\n             assertEquals(body, content);\n \n             content = \"body=\" + body;\n+            int contentLength = content.length();\n             ContentResponse response2 = httpClient.newRequest(\"localhost\", serverConnector.getLocalPort())\n                 .scheme(HttpScheme.HTTPS.asString())\n                 .method(HttpMethod.POST)\n                 .path(\"/echo\")\n-                .header(HttpHeader.CONTENT_TYPE, MimeTypes.Type.FORM_ENCODED.asString())\n-                .header(HttpHeader.CONTENT_LENGTH, String.valueOf(content.length()))\n+                .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, MimeTypes.Type.FORM_ENCODED.asString()))\n+                .headers(headers -> headers.put(HttpHeader.CONTENT_LENGTH, String.valueOf(contentLength)))", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYwOTMyOA==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420609328", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T07:59:38Z", "path": "jetty-proxy/src/test/java/org/eclipse/jetty/proxy/ForwardProxyTLSServerTest.java", "diffHunk": "@@ -318,8 +319,8 @@ public void succeeded(Connection result)\n                 .scheme(HttpScheme.HTTPS.asString())\n                 .method(HttpMethod.POST)\n                 .path(\"/echo\")\n-                .header(HttpHeader.CONTENT_TYPE, MimeTypes.Type.FORM_ENCODED.asString())\n-                .header(HttpHeader.CONTENT_LENGTH, String.valueOf(body2.length()))\n+                .headers(headers -> headers.put(HttpHeader.CONTENT_TYPE, MimeTypes.Type.FORM_ENCODED.asString()))\n+                .headers(headers -> headers.put(HttpHeader.CONTENT_LENGTH, String.valueOf(body2.length())))", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMDY5Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420610696", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T08:02:34Z", "path": "tests/test-sessions/test-sessions-common/src/test/java/org/eclipse/jetty/server/session/DuplicateCookieTest.java", "diffHunk": "@@ -73,8 +73,8 @@ public void testMultipleSessionCookiesOnlyOneExists() throws Exception\n \n             //make a request with another session cookie in there that does not exist\n             Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=check\");\n-            request.header(\"Cookie\", \"JSESSIONID=123\"); //doesn't exist\n-            request.header(\"Cookie\", \"JSESSIONID=4422\"); //does exist\n+            request.headers(headers -> headers.add(\"Cookie\", \"JSESSIONID=123\")); //doesn't exist\n+            request.headers(headers -> headers.add(\"Cookie\", \"JSESSIONID=4422\")); //does exist", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMDc0NQ==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420610745", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T08:02:40Z", "path": "tests/test-sessions/test-sessions-common/src/test/java/org/eclipse/jetty/server/session/DuplicateCookieTest.java", "diffHunk": "@@ -120,8 +120,8 @@ public void testMultipleSessionCookiesOnlyOneValid() throws Exception\n \n             //make a request with another session cookie in there that is not valid\n             Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=check\");\n-            request.header(\"Cookie\", \"JSESSIONID=1122\"); //is valid\n-            request.header(\"Cookie\", \"JSESSIONID=2233\"); //is invalid\n+            request.headers(headers -> headers.add(\"Cookie\", \"JSESSIONID=1122\")); //is valid\n+            request.headers(headers -> headers.add(\"Cookie\", \"JSESSIONID=2233\")); //is invalid", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMDgwNw==", "url": "https://github.com/eclipse/jetty.project/pull/4845#discussion_r420610807", "bodyText": "Shouldn't you combine the above calls to headers() into a single one?", "author": "lorban", "createdAt": "2020-05-06T08:02:47Z", "path": "tests/test-sessions/test-sessions-common/src/test/java/org/eclipse/jetty/server/session/DuplicateCookieTest.java", "diffHunk": "@@ -169,8 +169,8 @@ public void testMultipleSessionCookiesMultipleExists() throws Exception\n \n             //make a request with multiple valid session ids\n             Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=check\");\n-            request.header(\"Cookie\", \"JSESSIONID=1234\");\n-            request.header(\"Cookie\", \"JSESSIONID=5678\");\n+            request.headers(headers -> headers.add(\"Cookie\", \"JSESSIONID=1234\"));\n+            request.headers(headers -> headers.add(\"Cookie\", \"JSESSIONID=5678\"));", "originalCommit": "a93b2c608470ecb2853fdc8417ae54b5424268f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b6c6684c70cee4cb45361fa3d61852370ae4a743", "url": "https://github.com/eclipse/jetty.project/commit/b6c6684c70cee4cb45361fa3d61852370ae4a743", "message": "Fixes #4808 - Review HttpClient Request header APIs.\n\nUpdates after review.\n\nSigned-off-by: Simone Bordet <simone.bordet@gmail.com>", "committedDate": "2020-05-08T15:52:27Z", "type": "commit"}]}