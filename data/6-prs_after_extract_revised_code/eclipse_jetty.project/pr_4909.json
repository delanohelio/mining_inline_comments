{"pr_number": 4909, "pr_title": "Jetty 9.4.x single context optimisation ", "pr_createdAt": "2020-05-26T09:24:17Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4909", "timeline": [{"oid": "ad74bcd3820c5ab4bd65b23a2bd2ca456b2470a1", "url": "https://github.com/eclipse/jetty.project/commit/ad74bcd3820c5ab4bd65b23a2bd2ca456b2470a1", "message": "Optimisation for single context\n\nIt is a frequent deployment mode to have only a single context.\nIn that case, the ContextHandlerCollection can bypass a bit of\nlooping/matching/selecting and just call the single context,\nwhich it works out itself anyway if the request applies to it.\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-05-26T09:20:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI4OTg4Ng==", "url": "https://github.com/eclipse/jetty.project/pull/4909#discussion_r430289886", "bodyText": "This will throw NPE if mapping is null. I suppose you meant:\nif (mapping == null || mapping.getHandlers().length == 0)\n    return;", "author": "lorban", "createdAt": "2020-05-26T09:47:24Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java", "diffHunk": "@@ -170,17 +172,30 @@ protected Handlers newHandlers(Handler[] handlers)\n             }\n         }\n \n+        // setup bypass for a single handler.\n+        if (mapping != null && mapping.getHandlers().length == 1)\n+            _singleContext = mapping.getHandlers()[0];\n+\n         return mapping;\n     }\n \n     @Override\n     public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n     {\n-        Handlers handlers = _handlers.get();\n-        if (handlers == null)\n+        // Only one context, so just call it and let it work out if it applies.\n+        Handler singleContext = _singleContext;\n+        if (singleContext != null)\n+        {\n+            singleContext.handle(target, baseRequest, request, response);\n+            return;\n+        }\n+\n+        // Handle no contexts\n+        Mapping mapping = (Mapping)_handlers.get();\n+        if (mapping == null && mapping.getHandlers().length == 0)", "originalCommit": "ad74bcd3820c5ab4bd65b23a2bd2ca456b2470a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ef52882b15d5ed4bf0d15029667d072bd78c01f", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\nindex 86f06c2276..e2e57efc8c 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\n\n@@ -172,30 +170,29 @@ public class ContextHandlerCollection extends HandlerCollection\n             }\n         }\n \n-        // setup bypass for a single handler.\n-        if (mapping != null && mapping.getHandlers().length == 1)\n-            _singleContext = mapping.getHandlers()[0];\n-\n         return mapping;\n     }\n \n     @Override\n     public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n     {\n-        // Only one context, so just call it and let it work out if it applies.\n-        Handler singleContext = _singleContext;\n-        if (singleContext != null)\n-        {\n-            singleContext.handle(target, baseRequest, request, response);\n-            return;\n-        }\n+        Mapping mapping = (Mapping)_handlers.get();\n \n         // Handle no contexts\n-        Mapping mapping = (Mapping)_handlers.get();\n-        if (mapping == null && mapping.getHandlers().length == 0)\n+        if (mapping == null)\n+            return;\n+        Handler[] handlers = mapping.getHandlers();\n+        if (handlers == null || handlers.length == 0)\n             return;\n \n-        // handle many contexts\n+        // handle only a single context.\n+        if (handlers.length == 1)\n+        {\n+            handlers[0].handle(target, baseRequest, request, response);\n+            return;\n+        }\n+\n+        // handle async dispatch to specific context\n         HttpChannelState async = baseRequest.getHttpChannelState();\n         if (async.isAsync())\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NDA0Nw==", "url": "https://github.com/eclipse/jetty.project/pull/4909#discussion_r430294047", "bodyText": "mapping cannot be null here.", "author": "lorban", "createdAt": "2020-05-26T09:54:41Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java", "diffHunk": "@@ -170,17 +172,30 @@ protected Handlers newHandlers(Handler[] handlers)\n             }\n         }\n \n+        // setup bypass for a single handler.\n+        if (mapping != null && mapping.getHandlers().length == 1)", "originalCommit": "ad74bcd3820c5ab4bd65b23a2bd2ca456b2470a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ef52882b15d5ed4bf0d15029667d072bd78c01f", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\nindex 86f06c2276..e2e57efc8c 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\n\n@@ -172,30 +170,29 @@ public class ContextHandlerCollection extends HandlerCollection\n             }\n         }\n \n-        // setup bypass for a single handler.\n-        if (mapping != null && mapping.getHandlers().length == 1)\n-            _singleContext = mapping.getHandlers()[0];\n-\n         return mapping;\n     }\n \n     @Override\n     public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n     {\n-        // Only one context, so just call it and let it work out if it applies.\n-        Handler singleContext = _singleContext;\n-        if (singleContext != null)\n-        {\n-            singleContext.handle(target, baseRequest, request, response);\n-            return;\n-        }\n+        Mapping mapping = (Mapping)_handlers.get();\n \n         // Handle no contexts\n-        Mapping mapping = (Mapping)_handlers.get();\n-        if (mapping == null && mapping.getHandlers().length == 0)\n+        if (mapping == null)\n+            return;\n+        Handler[] handlers = mapping.getHandlers();\n+        if (handlers == null || handlers.length == 0)\n             return;\n \n-        // handle many contexts\n+        // handle only a single context.\n+        if (handlers.length == 1)\n+        {\n+            handlers[0].handle(target, baseRequest, request, response);\n+            return;\n+        }\n+\n+        // handle async dispatch to specific context\n         HttpChannelState async = baseRequest.getHttpChannelState();\n         if (async.isAsync())\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTk3MA==", "url": "https://github.com/eclipse/jetty.project/pull/4909#discussion_r430295970", "bodyText": "Instead of maintaining an extra variable, you could instead test on mapping.getHandlers().length == 1 and shortcut to mapping.getHandlers()[0].", "author": "lorban", "createdAt": "2020-05-26T09:57:59Z", "path": "jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java", "diffHunk": "@@ -58,6 +58,7 @@\n \n     @Deprecated\n     private Class<? extends ContextHandler> _contextClass = ContextHandler.class;\n+    private volatile Handler _singleContext;", "originalCommit": "ad74bcd3820c5ab4bd65b23a2bd2ca456b2470a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0NzcxNQ==", "url": "https://github.com/eclipse/jetty.project/pull/4909#discussion_r430547715", "bodyText": "That's what I did first up, then thought this was simpler.... but your way is probably less cost for those that do have multiple contexts, so I will revert", "author": "gregw", "createdAt": "2020-05-26T16:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU2MDE1NA==", "url": "https://github.com/eclipse/jetty.project/pull/4909#discussion_r430560154", "bodyText": "@lorban done", "author": "gregw", "createdAt": "2020-05-26T16:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NzQ5Nw==", "url": "https://github.com/eclipse/jetty.project/pull/4909#discussion_r430647497", "bodyText": "For the record I suggested getting rid of the extra field not for efficiency, but for simplicity. :-)", "author": "lorban", "createdAt": "2020-05-26T19:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5NTk3MA=="}], "type": "inlineReview", "revised_code": {"commit": "9ef52882b15d5ed4bf0d15029667d072bd78c01f", "chunk": "diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\nindex 86f06c2276..e2e57efc8c 100644\n--- a/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\n+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/handler/ContextHandlerCollection.java\n\n@@ -58,7 +58,6 @@ public class ContextHandlerCollection extends HandlerCollection\n \n     @Deprecated\n     private Class<? extends ContextHandler> _contextClass = ContextHandler.class;\n-    private volatile Handler _singleContext;\n \n     public ContextHandlerCollection()\n     {\n"}}, {"oid": "9ef52882b15d5ed4bf0d15029667d072bd78c01f", "url": "https://github.com/eclipse/jetty.project/commit/9ef52882b15d5ed4bf0d15029667d072bd78c01f", "message": "Optimisation for single context\n\nupdates from review\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-05-26T16:46:27Z", "type": "commit"}]}