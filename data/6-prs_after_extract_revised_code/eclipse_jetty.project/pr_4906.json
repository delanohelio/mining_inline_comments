{"pr_number": 4906, "pr_title": "Issue #4903 - give better errors for non public javax.websocket endpoints ", "pr_createdAt": "2020-05-25T04:09:53Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4906", "timeline": [{"oid": "28a588b8bd7c08499c9a695e822b961919ab443a", "url": "https://github.com/eclipse/jetty.project/commit/28a588b8bd7c08499c9a695e822b961919ab443a", "message": "Issue #4903 - Better errors for non public endpoints\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-25T02:36:09Z", "type": "commit"}, {"oid": "add00c9dd8750c4e97508ac0ab6fbe84f9d0b82a", "url": "https://github.com/eclipse/jetty.project/commit/add00c9dd8750c4e97508ac0ab6fbe84f9d0b82a", "message": "Issue #4903 - check endpoint class is default constructable\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-25T03:57:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0MTY0Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r429941642", "bodyText": "Please use the long form exception message from before here. (see lines 214 to 219 on old code)", "author": "joakime", "createdAt": "2020-05-25T13:42:07Z", "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -191,35 +195,36 @@ protected void doStart() throws Exception\n \n     public ServerEndpointMetadata getServerEndpointMetadata(final Class<?> endpoint, final ServerEndpointConfig config) throws DeploymentException\n     {\n-        ServerEndpointMetadata metadata = null;\n-\n-        ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n-        if (anno != null)\n-        {\n-            // Annotated takes precedence here\n-            AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n-            AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n-            metadata = ametadata;\n-            scanner.scan();\n-        }\n-        else if (Endpoint.class.isAssignableFrom(endpoint))\n+        try\n         {\n-            // extends Endpoint\n-            @SuppressWarnings(\"unchecked\")\n-            Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n-            metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            ServerEndpointMetadata metadata;\n+            ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n+            if (anno != null)\n+            {\n+                // Annotated takes precedence here\n+                AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n+                AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n+                metadata = ametadata;\n+                scanner.scan();\n+            }\n+            else if (Endpoint.class.isAssignableFrom(endpoint))\n+            {\n+                // extends Endpoint\n+                @SuppressWarnings(\"unchecked\")\n+                Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n+                metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            }\n+            else\n+            {\n+                throw new DeploymentException(\"Unable to identify as valid Endpoint: \" + endpoint);", "originalCommit": "add00c9dd8750c4e97508ac0ab6fbe84f9d0b82a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "470d948504daef688da39a8038a5ee8da6ff43e4", "chunk": "diff --git a/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java b/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\nindex f0cca5e66a..167c4e2bef 100644\n--- a/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\n+++ b/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\n\n@@ -216,7 +216,10 @@ public class ServerContainer extends ClientContainer implements javax.websocket.\n             }\n             else\n             {\n-                throw new DeploymentException(\"Unable to identify as valid Endpoint: \" + endpoint);\n+                String err = \"Not a recognized websocket [\" + endpoint.getName() +\n+                    \"] does not extend @\" + ServerEndpoint.class.getName() +\n+                    \" or extend from \" + Endpoint.class.getName();\n+                throw new DeploymentException(err);\n             }\n \n             return metadata;\n"}}, {"oid": "470d948504daef688da39a8038a5ee8da6ff43e4", "url": "https://github.com/eclipse/jetty.project/commit/470d948504daef688da39a8038a5ee8da6ff43e4", "message": "Issue #4903 - changes from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-25T23:35:17Z", "type": "commit"}, {"oid": "c41560c7cd30f9ce5e79fd307763b1e6f9072817", "url": "https://github.com/eclipse/jetty.project/commit/c41560c7cd30f9ce5e79fd307763b1e6f9072817", "message": "Issue #4903 - add cause to Exception when creating endpoint instance\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-26T05:35:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwOTc1OA==", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r430209758", "bodyText": "Should not you catch Throwable here, to cover cases such as NoClassDefFoundError, etc.?", "author": "sbordet", "createdAt": "2020-05-26T07:30:31Z", "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -191,35 +195,39 @@ protected void doStart() throws Exception\n \n     public ServerEndpointMetadata getServerEndpointMetadata(final Class<?> endpoint, final ServerEndpointConfig config) throws DeploymentException\n     {\n-        ServerEndpointMetadata metadata = null;\n-\n-        ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n-        if (anno != null)\n-        {\n-            // Annotated takes precedence here\n-            AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n-            AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n-            metadata = ametadata;\n-            scanner.scan();\n-        }\n-        else if (Endpoint.class.isAssignableFrom(endpoint))\n+        try\n         {\n-            // extends Endpoint\n-            @SuppressWarnings(\"unchecked\")\n-            Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n-            metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            ServerEndpointMetadata metadata;\n+            ServerEndpoint anno = endpoint.getAnnotation(ServerEndpoint.class);\n+            if (anno != null)\n+            {\n+                // Annotated takes precedence here\n+                AnnotatedServerEndpointMetadata ametadata = new AnnotatedServerEndpointMetadata(this, endpoint, config);\n+                AnnotatedEndpointScanner<ServerEndpoint, ServerEndpointConfig> scanner = new AnnotatedEndpointScanner<>(ametadata);\n+                metadata = ametadata;\n+                scanner.scan();\n+            }\n+            else if (Endpoint.class.isAssignableFrom(endpoint))\n+            {\n+                // extends Endpoint\n+                @SuppressWarnings(\"unchecked\")\n+                Class<? extends Endpoint> eendpoint = (Class<? extends Endpoint>)endpoint;\n+                metadata = new SimpleServerEndpointMetadata(eendpoint, config);\n+            }\n+            else\n+            {\n+                String err = \"Not a recognized websocket [\" + endpoint.getName() +\n+                    \"] does not extend @\" + ServerEndpoint.class.getName() +\n+                    \" or extend from \" + Endpoint.class.getName();\n+                throw new DeploymentException(err);\n+            }\n+\n+            return metadata;\n         }\n-        else\n+        catch (RuntimeException e)", "originalCommit": "c41560c7cd30f9ce5e79fd307763b1e6f9072817", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNDE4NQ==", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r430214185", "bodyText": "I just didn't want to catch the DeploymentExceptions which may be thrown from within this block. But I can just re-throw them here if they are instance of DeploymentException.", "author": "lachlan-roberts", "createdAt": "2020-05-26T07:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwOTc1OA=="}], "type": "inlineReview", "revised_code": {"commit": "5c63b0ef7810634378a977fb9d198558da07d657", "chunk": "diff --git a/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java b/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\nindex 167c4e2bef..3e2f349287 100644\n--- a/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\n+++ b/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\n\n@@ -224,9 +224,11 @@ public class ServerContainer extends ClientContainer implements javax.websocket.\n \n             return metadata;\n         }\n-        catch (RuntimeException e)\n+        catch (Throwable t)\n         {\n-            throw new DeploymentException(e.getMessage(), e);\n+            if (t instanceof DeploymentException)\n+                throw t;\n+            throw new DeploymentException(t.getMessage(), t);\n         }\n     }\n \n"}}, {"oid": "5c63b0ef7810634378a977fb9d198558da07d657", "url": "https://github.com/eclipse/jetty.project/commit/5c63b0ef7810634378a977fb9d198558da07d657", "message": "Issue #4903 - catch Throwable instead of RuntimeException\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-26T07:37:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQyMTM3MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4906#discussion_r430421371", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    catch (Throwable t)\n          \n          \n            \n                    catch (DeploymentException e)\n          \n          \n            \n                    {\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }\n          \n          \n            \n                    catch (Throwable t)\n          \n          \n            \n                    {\n          \n          \n            \n                        throw new DeploymentException(t.getMessage(), t);\n          \n          \n            \n                    }", "author": "joakime", "createdAt": "2020-05-26T13:42:30Z", "path": "jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java", "diffHunk": "@@ -224,9 +224,11 @@ else if (Endpoint.class.isAssignableFrom(endpoint))\n \n             return metadata;\n         }\n-        catch (RuntimeException e)\n+        catch (Throwable t)", "originalCommit": "5c63b0ef7810634378a977fb9d198558da07d657", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a11c7f554c50dc26d29b4b1d69ee5aabded80960", "chunk": "diff --git a/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java b/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\nindex 3e2f349287..4e79073c34 100644\n--- a/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\n+++ b/jetty-websocket/javax-websocket-server-impl/src/main/java/org/eclipse/jetty/websocket/jsr356/server/ServerContainer.java\n\n@@ -224,10 +224,12 @@ public class ServerContainer extends ClientContainer implements javax.websocket.\n \n             return metadata;\n         }\n+        catch (DeploymentException e)\n+        {\n+            throw e;\n+        }\n         catch (Throwable t)\n         {\n-            if (t instanceof DeploymentException)\n-                throw t;\n             throw new DeploymentException(t.getMessage(), t);\n         }\n     }\n"}}, {"oid": "a11c7f554c50dc26d29b4b1d69ee5aabded80960", "url": "https://github.com/eclipse/jetty.project/commit/a11c7f554c50dc26d29b4b1d69ee5aabded80960", "message": "Issue #4903 - cleanup catch statement from review\n\nSigned-off-by: Lachlan Roberts <lachlan@webtide.com>", "committedDate": "2020-05-26T23:42:44Z", "type": "commit"}]}