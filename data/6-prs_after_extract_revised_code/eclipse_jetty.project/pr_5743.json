{"pr_number": 5743, "pr_title": "max usage count fixes", "pr_createdAt": "2020-12-01T09:26:30Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5743", "timeline": [{"oid": "0ff1bfdd5e4d6db6b6dd78279b6317fe3bbf9c57", "url": "https://github.com/eclipse/jetty.project/commit/0ff1bfdd5e4d6db6b6dd78279b6317fe3bbf9c57", "message": "fix bug that messes up the max usage count when the entries' max usage counter overflows\n\nSigned-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-12-01T09:02:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIyMzIwNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5743#discussion_r533223205", "bodyText": "Would it not be better to do all the removals whilst the lock is held and only do the closing after releasing the lock:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<Entry> copy;\n          \n          \n            \n                    try (Locker.Lock l = locker.lock())\n          \n          \n            \n                    {\n          \n          \n            \n                        copy = new ArrayList<>(entries);\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    // Iterate the copy and close overused entries.\n          \n          \n            \n                    for (Entry entry : copy)\n          \n          \n            \n                    {\n          \n          \n            \n                        if (entry.isIdleAndOverUsed() && remove(entry) && entry.pooled instanceof Closeable)\n          \n          \n            \n                            IO.close((Closeable)entry.pooled);\n          \n          \n            \n                    }\n          \n          \n            \n                    List<Entry> overused = new ArrayList();\n          \n          \n            \n                    try (Locker.Lock l = locker.lock())\n          \n          \n            \n                    {\n          \n          \n            \n                        // look for overused here and if found remove from entries and add to overused\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    // Iterate the copy and close overused entries.\n          \n          \n            \n                    for (Entry entry : overused)\n          \n          \n            \n                    {\n          \n          \n            \n                        if (entry.pooled instanceof Closeable)\n          \n          \n            \n                            IO.close((Closeable)entry.pooled);\n          \n          \n            \n                    }", "author": "gregw", "createdAt": "2020-12-01T09:32:56Z", "path": "jetty-util/src/main/java/org/eclipse/jetty/util/Pool.java", "diffHunk": "@@ -166,16 +166,42 @@ public final void setMaxMultiplex(int maxMultiplex)\n         this.maxMultiplex = maxMultiplex;\n     }\n \n+    /**\n+     * Get the maximum number of times the entries of the pool\n+     * can be acquired.\n+     * @return the max usage count.\n+     */\n     public int getMaxUsageCount()\n     {\n         return maxUsageCount;\n     }\n \n+    /**\n+     * Change the max usage count of the pool's entries. All existing\n+     * idle entries over this new max usage are removed and closed.\n+     * @param maxUsageCount the max usage count.\n+     */\n     public final void setMaxUsageCount(int maxUsageCount)\n     {\n         if (maxUsageCount == 0)\n             throw new IllegalArgumentException(\"Max usage count must be != 0\");\n         this.maxUsageCount = maxUsageCount;\n+\n+        if (closed)\n+            return;\n+\n+        List<Entry> copy;\n+        try (Locker.Lock l = locker.lock())\n+        {\n+            copy = new ArrayList<>(entries);\n+        }\n+\n+        // Iterate the copy and close overused entries.\n+        for (Entry entry : copy)\n+        {\n+            if (entry.isIdleAndOverUsed() && remove(entry) && entry.pooled instanceof Closeable)\n+                IO.close((Closeable)entry.pooled);\n+        }", "originalCommit": "e2c480124fa71cd1abc019e390fdde7cc547186f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI3NTcxMA==", "url": "https://github.com/eclipse/jetty.project/pull/5743#discussion_r533275710", "bodyText": "Good idea, that can even be improved a bit further. Let me get back to this.", "author": "lorban", "createdAt": "2020-12-01T10:15:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIyMzIwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "44e6f4aeb8bdbcb140ba99ba6480c9127844758b", "chunk": "diff --git a/jetty-util/src/main/java/org/eclipse/jetty/util/Pool.java b/jetty-util/src/main/java/org/eclipse/jetty/util/Pool.java\nindex 86e0d5c1c4..7fa2c441c9 100644\n--- a/jetty-util/src/main/java/org/eclipse/jetty/util/Pool.java\n+++ b/jetty-util/src/main/java/org/eclipse/jetty/util/Pool.java\n\n@@ -187,21 +188,21 @@ public class Pool<T> implements AutoCloseable, Dumpable\n             throw new IllegalArgumentException(\"Max usage count must be != 0\");\n         this.maxUsageCount = maxUsageCount;\n \n-        if (closed)\n-            return;\n-\n-        List<Entry> copy;\n+        // Iterate the entries, remove overused ones and collect a list of the closeable removed ones.\n+        List<Closeable> copy;\n         try (Locker.Lock l = locker.lock())\n         {\n-            copy = new ArrayList<>(entries);\n-        }\n+            if (closed)\n+                return;\n \n-        // Iterate the copy and close overused entries.\n-        for (Entry entry : copy)\n-        {\n-            if (entry.isIdleAndOverUsed() && remove(entry) && entry.pooled instanceof Closeable)\n-                IO.close((Closeable)entry.pooled);\n+            copy = entries.stream()\n+                .filter(entry -> entry.isIdleAndOverUsed() && remove(entry) && entry.pooled instanceof Closeable)\n+                .map(entry -> (Closeable)entry.pooled)\n+                .collect(Collectors.toList());\n         }\n+\n+        // Iterate the copy and close the collected entries.\n+        copy.forEach(IO::close);\n     }\n \n     /**\n"}}, {"oid": "44e6f4aeb8bdbcb140ba99ba6480c9127844758b", "url": "https://github.com/eclipse/jetty.project/commit/44e6f4aeb8bdbcb140ba99ba6480c9127844758b", "message": "sweep the entries list when the max usage count is changed\n\nSigned-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-12-01T14:18:06Z", "type": "commit"}, {"oid": "44e6f4aeb8bdbcb140ba99ba6480c9127844758b", "url": "https://github.com/eclipse/jetty.project/commit/44e6f4aeb8bdbcb140ba99ba6480c9127844758b", "message": "sweep the entries list when the max usage count is changed\n\nSigned-off-by: Ludovic Orban <lorban@bitronix.be>", "committedDate": "2020-12-01T14:18:06Z", "type": "forcePushed"}]}