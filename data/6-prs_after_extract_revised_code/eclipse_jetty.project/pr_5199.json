{"pr_number": 5199, "pr_title": "Support Apache Commons Daemon methods in XmlConfiguration", "pr_createdAt": "2020-08-25T12:37:13Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/5199", "timeline": [{"oid": "61a9eba10f463e316d095b44cf6689071bfa6b13", "url": "https://github.com/eclipse/jetty.project/commit/61a9eba10f463e316d095b44cf6689071bfa6b13", "message": "Support Apache Commons Daemon methods in XmlConfiguration so it can substitute for start.Main after a --dry-run", "committedDate": "2020-08-25T12:35:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0NDMzOA==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476444338", "bodyText": "Add a reason to the ISE", "author": "janbartel", "createdAt": "2020-08-25T13:23:27Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -361,6 +377,8 @@ else if (__factoryLoader != null)\n      */\n     public Object configure(Object obj) throws Exception\n     {\n+        if (_objects != null)\n+            throw new IllegalStateException();", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -378,7 +378,7 @@ public class XmlConfiguration\n     public Object configure(Object obj) throws Exception\n     {\n         if (_objects != null)\n-            throw new IllegalStateException();\n+            throw new IllegalStateException(\"XmlConfiguration constructed for start lifecycle\");\n         return _processor.configure(obj);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0NDQ4NA==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476444484", "bodyText": "Add a reason to the ISE", "author": "janbartel", "createdAt": "2020-08-25T13:23:38Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -375,6 +393,8 @@ public Object configure(Object obj) throws Exception\n      */\n     public Object configure() throws Exception\n     {\n+        if (_objects != null)\n+            throw new IllegalStateException();", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -394,7 +394,7 @@ public class XmlConfiguration\n     public Object configure() throws Exception\n     {\n         if (_objects != null)\n-            throw new IllegalStateException();\n+            throw new IllegalStateException(\"XmlConfiguration constructed for start lifecycle\");\n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Configure {}\", _location);\n         return _processor.configure();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0NzAwNQ==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476447005", "bodyText": "Add if (objects == null) throw ISE?", "author": "janbartel", "createdAt": "2020-08-25T13:27:14Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -1833,24 +1853,8 @@ Args asEmptyVarArgs(Class<?> varArgType)\n         return values;\n     }\n \n-    /**\n-     * Runs the XML configurations as a main application.\n-     * The command line is used to obtain properties files (must be named '*.properties') and XmlConfiguration files.\n-     * <p>\n-     * Any property file on the command line is added to a combined Property instance that is passed to each configuration file via\n-     * {@link XmlConfiguration#getProperties()}.\n-     * <p>\n-     * Each configuration file on the command line is used to create a new XmlConfiguration instance and the\n-     * {@link XmlConfiguration#configure()} method is used to create the configured object.\n-     * If the resulting object is an instance of {@link LifeCycle}, then it is started.\n-     * <p>\n-     * Any IDs created in a configuration are passed to the next configuration file on the command line using {@link #getIdMap()}.\n-     * This allows objects with IDs created in one config file to be referenced in subsequent config files on the command line.\n-     *\n-     * @param args array of property and xml configuration filenames or {@link Resource}s.\n-     * @throws Exception if the XML configurations cannot be run\n-     */\n-    public static void main(final String... args) throws Exception\n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void init(String[] args) throws Exception", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -1856,6 +1856,9 @@ public class XmlConfiguration\n     // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n     public void init(String[] args) throws Exception\n     {\n+        if (_objects == null)\n+            throw new IllegalStateException(\"XmlConfiguration not constructed for start lifecycle\");\n+\n         try\n         {\n             AccessController.doPrivileged((PrivilegedExceptionAction<Void>)() ->\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0NzM0Mw==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476447343", "bodyText": "Add reason to ISE.", "author": "janbartel", "createdAt": "2020-08-25T13:27:42Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -1919,6 +1911,82 @@ else if (arg.toLowerCase(Locale.ENGLISH).endsWith(\".properties\"))\n         }\n     }\n \n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void start() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -1915,7 +1918,7 @@ public class XmlConfiguration\n     public void start() throws Exception\n     {\n         if (_objects == null)\n-            throw new IllegalStateException();\n+            throw new IllegalStateException(\"XmlConfiguration not constructed for start lifecycle\");\n \n         // For all objects created by XmlConfigurations, start them if they are lifecycles.\n         for (Object obj : _objects)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0ODA1NA==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476448054", "bodyText": "Add a reason", "author": "janbartel", "createdAt": "2020-08-25T13:28:46Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -1919,6 +1911,82 @@ else if (arg.toLowerCase(Locale.ENGLISH).endsWith(\".properties\"))\n         }\n     }\n \n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void start() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();\n+\n+        // For all objects created by XmlConfigurations, start them if they are lifecycles.\n+        for (Object obj : _objects)\n+        {\n+            if (obj instanceof LifeCycle)\n+            {\n+                LifeCycle lc = (LifeCycle)obj;\n+                if (!lc.isRunning())\n+                    lc.start();\n+            }\n+        }\n+\n+    }\n+\n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void stop() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -1915,7 +1918,7 @@ public class XmlConfiguration\n     public void start() throws Exception\n     {\n         if (_objects == null)\n-            throw new IllegalStateException();\n+            throw new IllegalStateException(\"XmlConfiguration not constructed for start lifecycle\");\n \n         // For all objects created by XmlConfigurations, start them if they are lifecycles.\n         for (Object obj : _objects)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0ODI1OA==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476448258", "bodyText": "s/start/stop", "author": "janbartel", "createdAt": "2020-08-25T13:29:03Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -1919,6 +1911,82 @@ else if (arg.toLowerCase(Locale.ENGLISH).endsWith(\".properties\"))\n         }\n     }\n \n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void start() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();\n+\n+        // For all objects created by XmlConfigurations, start them if they are lifecycles.\n+        for (Object obj : _objects)\n+        {\n+            if (obj instanceof LifeCycle)\n+            {\n+                LifeCycle lc = (LifeCycle)obj;\n+                if (!lc.isRunning())\n+                    lc.start();\n+            }\n+        }\n+\n+    }\n+\n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void stop() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();\n+\n+        // For all objects created by XmlConfigurations, start them if they are lifecycles.", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -1915,7 +1918,7 @@ public class XmlConfiguration\n     public void start() throws Exception\n     {\n         if (_objects == null)\n-            throw new IllegalStateException();\n+            throw new IllegalStateException(\"XmlConfiguration not constructed for start lifecycle\");\n \n         // For all objects created by XmlConfigurations, start them if they are lifecycles.\n         for (Object obj : _objects)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0ODQ5NA==", "url": "https://github.com/eclipse/jetty.project/pull/5199#discussion_r476448494", "bodyText": "Add reason", "author": "janbartel", "createdAt": "2020-08-25T13:29:25Z", "path": "jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java", "diffHunk": "@@ -1919,6 +1911,82 @@ else if (arg.toLowerCase(Locale.ENGLISH).endsWith(\".properties\"))\n         }\n     }\n \n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void start() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();\n+\n+        // For all objects created by XmlConfigurations, start them if they are lifecycles.\n+        for (Object obj : _objects)\n+        {\n+            if (obj instanceof LifeCycle)\n+            {\n+                LifeCycle lc = (LifeCycle)obj;\n+                if (!lc.isRunning())\n+                    lc.start();\n+            }\n+        }\n+\n+    }\n+\n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void stop() throws Exception\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();\n+\n+        // For all objects created by XmlConfigurations, start them if they are lifecycles.\n+        for (Object obj : _objects)\n+        {\n+            if (obj instanceof LifeCycle)\n+            {\n+                LifeCycle lc = (LifeCycle)obj;\n+                if (lc.isRunning())\n+                    lc.stop();\n+            }\n+        }\n+    }\n+\n+    // implement Apache commons daemon (jsvc) lifecycle methods (init, start, stop, destroy)\n+    public void destroy()\n+    {\n+        if (_objects == null)\n+            throw new IllegalStateException();", "originalCommit": "61a9eba10f463e316d095b44cf6689071bfa6b13", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "chunk": "diff --git a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\nindex b0dbb8dfe8..a6a859a709 100644\n--- a/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n+++ b/jetty-xml/src/main/java/org/eclipse/jetty/xml/XmlConfiguration.java\n\n@@ -1915,7 +1918,7 @@ public class XmlConfiguration\n     public void start() throws Exception\n     {\n         if (_objects == null)\n-            throw new IllegalStateException();\n+            throw new IllegalStateException(\"XmlConfiguration not constructed for start lifecycle\");\n \n         // For all objects created by XmlConfigurations, start them if they are lifecycles.\n         for (Object obj : _objects)\n"}}, {"oid": "cd8e6d2f65041d9d2737947261545862a40b2ab3", "url": "https://github.com/eclipse/jetty.project/commit/cd8e6d2f65041d9d2737947261545862a40b2ab3", "message": "+ added --dry-run=parts to printout partial dry run\n+ added --no-exec\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-08-26T16:03:55Z", "type": "commit"}, {"oid": "b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "url": "https://github.com/eclipse/jetty.project/commit/b888a8f9b8d0275ac82ed2f74e580aec49a13ee3", "message": "+ updated for review feedback\n\nSigned-off-by: Greg Wilkins <gregw@webtide.com>", "committedDate": "2020-08-31T10:53:24Z", "type": "commit"}, {"oid": "7e422b347b98e21d19fbdcbc80ea8f7d1becd208", "url": "https://github.com/eclipse/jetty.project/commit/7e422b347b98e21d19fbdcbc80ea8f7d1becd208", "message": "Merge branch 'jetty-9.4.x' into jetty-9.4.x-ApacheCommonsDaemon-XmlConfiguration", "committedDate": "2020-09-02T07:33:37Z", "type": "commit"}, {"oid": "7e4d00c2035c6edcde22f720cbf253d2b55f2873", "url": "https://github.com/eclipse/jetty.project/commit/7e4d00c2035c6edcde22f720cbf253d2b55f2873", "message": "Feedback from review:\n\n + removed features other than --dry-run parts\n + added documentation", "committedDate": "2020-09-02T08:09:44Z", "type": "commit"}]}