{"pr_number": 4862, "pr_title": "Use docker to run remote infinispan tests", "pr_createdAt": "2020-05-11T04:38:20Z", "pr_url": "https://github.com/eclipse/jetty.project/pull/4862", "timeline": [{"oid": "01c8a4b6667fa3a7c0228835f991e2026c347853", "url": "https://github.com/eclipse/jetty.project/commit/01c8a4b6667fa3a7c0228835f991e2026c347853", "message": "use docker image to test infinispan remote access\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T04:38:06Z", "type": "commit"}, {"oid": "0a534af0f3f25f0b54acfa9e3cfd27588d2416ef", "url": "https://github.com/eclipse/jetty.project/commit/0a534af0f3f25f0b54acfa9e3cfd27588d2416ef", "message": "Activate infinispan remote testing using docker image\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T04:38:06Z", "type": "commit"}, {"oid": "119d5b0bb6bf56bd390cf21dd85ccfea6dd111a2", "url": "https://github.com/eclipse/jetty.project/commit/119d5b0bb6bf56bd390cf21dd85ccfea6dd111a2", "message": "more testing with Jan configuration file\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T04:38:06Z", "type": "commit"}, {"oid": "d831577b5046fb61db05b89814ce99e7ecc3a12d", "url": "https://github.com/eclipse/jetty.project/commit/d831577b5046fb61db05b89814ce99e7ecc3a12d", "message": "finally use the file from Jan :)\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T04:38:06Z", "type": "commit"}, {"oid": "d831577b5046fb61db05b89814ce99e7ecc3a12d", "url": "https://github.com/eclipse/jetty.project/commit/d831577b5046fb61db05b89814ce99e7ecc3a12d", "message": "finally use the file from Jan :)\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T04:38:06Z", "type": "forcePushed"}, {"oid": "68f94a43c29ac310c7bc9336afb640df33e0ea3d", "url": "https://github.com/eclipse/jetty.project/commit/68f94a43c29ac310c7bc9336afb640df33e0ea3d", "message": "no need to ignore those tests\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T10:00:44Z", "type": "commit"}, {"oid": "c73ece4f8360238951d658dafa069ea753148025", "url": "https://github.com/eclipse/jetty.project/commit/c73ece4f8360238951d658dafa069ea753148025", "message": "use new junit api to test exception\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-13T10:15:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0NDE1OQ==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424344159", "bodyText": "@janbartel 11222 is the default hotrod port and this is the one defined in the xml file. so yes we use hotrod :)", "author": "olamy", "createdAt": "2020-05-13T10:45:59Z", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);", "originalCommit": "c73ece4f8360238951d658dafa069ea753148025", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "chunk": "diff --git a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\nindex 05849c0831..c94cb71ca7 100644\n--- a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n+++ b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n\n@@ -39,7 +39,6 @@ import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.testcontainers.Testcontainers;\n import org.testcontainers.containers.GenericContainer;\n import org.testcontainers.containers.output.Slf4jLogConsumer;\n import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424459984", "bodyText": "What's infinispan version 1? Support for infinispan started at version 7.", "author": "janbartel", "createdAt": "2020-05-13T13:58:58Z", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");\n+            infinispan.start();\n+            String host = infinispan.getContainerIpAddress();\n+            System.setProperty(\"hotrod.host\", host);\n+            int port = infinispan.getMappedPort(11222);\n+\n+            LOG.info(\"Infinispan container started for {}:{} - {}ms\", host, port,\n+                     System.currentTimeMillis() - start);\n             SearchMapping mapping = new SearchMapping();\n             mapping.entity(SessionData.class).indexed().providedId()\n                 .property(\"expiry\", ElementType.METHOD).field();\n \n             Properties properties = new Properties();\n             properties.put(Environment.MODEL_MAPPING, mapping);\n \n-            ConfigurationBuilder clientBuilder = new ConfigurationBuilder();\n-            clientBuilder.withProperties(properties).addServer().host(host).marshaller(new ProtoStreamMarshaller());\n+            ConfigurationBuilder configurationBuilder = new ConfigurationBuilder().withProperties(properties)\n+                .addServer().host(host).port(port)\n+                // we just want to limit connectivity to list of host:port we knows at start\n+                // as infinispan create new host:port dynamically but due to how docker expose host/port we cannot do that\n+                .clientIntelligence(ClientIntelligence.BASIC)\n+                .marshaller(new ProtoStreamMarshaller());\n+\n+            if (infinispanVersion.startsWith(\"1\"))", "originalCommit": "c73ece4f8360238951d658dafa069ea753148025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODM4MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424718381", "bodyText": "from infinispan 10 onward some setup has changed but I agree it's a bit complicated. Do we really want something such dynamic? or testing with a fixed version is fine?", "author": "olamy", "createdAt": "2020-05-13T20:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyODMzMw==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424728333", "bodyText": "Well we should at least test against the version we compile against (currently 9.4.8.Final). Anything else is a nice-to-have.", "author": "janbartel", "createdAt": "2020-05-13T21:00:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ1OTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "chunk": "diff --git a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\nindex 05849c0831..c94cb71ca7 100644\n--- a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n+++ b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n\n@@ -39,7 +39,6 @@ import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.testcontainers.Testcontainers;\n import org.testcontainers.containers.GenericContainer;\n import org.testcontainers.containers.output.Slf4jLogConsumer;\n import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MDY4MQ==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424460681", "bodyText": "So if by default infinispan starts with standalone.xml file as the config, we don't need to use my remote-session-test.xml, correct?", "author": "janbartel", "createdAt": "2020-05-13T13:59:52Z", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")", "originalCommit": "c73ece4f8360238951d658dafa069ea753148025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODUxMw==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424718513", "bodyText": "yes correct. I'm happy to remove this :)", "author": "olamy", "createdAt": "2020-05-13T20:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MDY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "chunk": "diff --git a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\nindex 05849c0831..c94cb71ca7 100644\n--- a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n+++ b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n\n@@ -39,7 +39,6 @@ import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.testcontainers.Testcontainers;\n import org.testcontainers.containers.GenericContainer;\n import org.testcontainers.containers.output.Slf4jLogConsumer;\n import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTExMA==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424461110", "bodyText": "See previous, if the default startup of infinispan uses  hotrod, we can use that?", "author": "janbartel", "createdAt": "2020-05-13T14:00:23Z", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -31,42 +31,93 @@\n import org.hibernate.search.cfg.SearchMapping;\n import org.infinispan.client.hotrod.RemoteCache;\n import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.configuration.ClientIntelligence;\n+import org.infinispan.client.hotrod.configuration.Configuration;\n import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n import org.infinispan.client.hotrod.marshall.ProtoStreamMarshaller;\n import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.MountableFile;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n \n /**\n  * RemoteInfinispanTestSupport\n  */\n public class RemoteInfinispanTestSupport\n {\n+    private static final Logger LOG = LoggerFactory.getLogger(RemoteInfinispanTestSupport.class);\n     public static final String DEFAULT_CACHE_NAME = \"session_test_cache\";\n     public RemoteCache<String, SessionData> _cache;\n     private String _name;\n     public static RemoteCacheManager _manager;\n+    private static final Logger INFINISPAN_LOG =\n+        LoggerFactory.getLogger(\"org.eclipse.jetty.server.session.remote.infinispanLogs\");\n+\n+    static GenericContainer infinispan;\n \n     static\n     {\n         try\n         {\n-            String host = System.getProperty(\"hotrod.host\", \"127.0.0.1\");\n-\n+            Testcontainers.exposeHostPorts(11222);\n+            long start = System.currentTimeMillis();\n+            String infinispanVersion = System.getProperty(\"infinispan.docker.image.version\", \"9.4.8.Final\");\n+            infinispan =\n+                new GenericContainer(System.getProperty(\"infinispan.docker.image.name\", \"jboss/infinispan-server\") +\n+                                         \":\" + infinispanVersion)\n+                    .withEnv(\"APP_USER\",\"theuser\")\n+                    .withEnv(\"APP_PASS\",\"foobar\")\n+                    .withEnv(\"MGMT_USER\", \"admin\")\n+                    .withEnv(\"MGMT_PASS\", \"admin\")\n+                    .waitingFor(new LogMessageWaitStrategy()\n+                                    .withRegEx(\".*Infinispan Server.*started in.*\\\\s\"))\n+                    .withExposedPorts(4712,4713,8088,8089,8443,9990,9993,11211,11222,11223,11224)\n+                    .withCopyFileToContainer(MountableFile.forClasspathResource(\"remote-session-test.xml\"),\n+                                              \"/opt/jboss/infinispan-server/standalone/configuration/remote-session-test.xml\")\n+                    .withLogConsumer(new Slf4jLogConsumer(INFINISPAN_LOG));\n+            // we could simply use `standalone` as well but... :)\n+            infinispan =  infinispan.withCommand(\"-c remote-session-test.xml\");", "originalCommit": "c73ece4f8360238951d658dafa069ea753148025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODYzMw==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424718633", "bodyText": "yes", "author": "olamy", "createdAt": "2020-05-13T20:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTExMA=="}], "type": "inlineReview", "revised_code": {"commit": "d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "chunk": "diff --git a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\nindex 05849c0831..c94cb71ca7 100644\n--- a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n+++ b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n\n@@ -39,7 +39,6 @@ import org.infinispan.protostream.FileDescriptorSource;\n import org.infinispan.protostream.SerializationContext;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.testcontainers.Testcontainers;\n import org.testcontainers.containers.GenericContainer;\n import org.testcontainers.containers.output.Slf4jLogConsumer;\n import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424462116", "bodyText": "Is this creating a cache named \"remote-session-test\" on the infinispan server? If so, we don't need to do that because at line 170 we will create it there?", "author": "janbartel", "createdAt": "2020-05-13T14:01:43Z", "path": "tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java", "diffHunk": "@@ -86,11 +137,13 @@\n             }\n \n             String content = baos.toString(\"UTF-8\");\n-            _manager.getCache(\"___protobuf_metadata\").put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"___protobuf_metadata\", (String)null).put(\"session.proto\", content);\n+            _manager.administration().getOrCreateCache(\"remote-session-test\", (String)null);", "originalCommit": "c73ece4f8360238951d658dafa069ea753148025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxOTYzOQ==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424719639", "bodyText": "yes but in line 170 it use the field _name which can have a different value. This line of code is just here to start with standalone configuration and create the cache remote-session-test at start as if we were using the file remote-session-test.xml", "author": "olamy", "createdAt": "2020-05-13T20:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyODc1Mg==", "url": "https://github.com/eclipse/jetty.project/pull/4862#discussion_r424728752", "bodyText": "Right, but all the remote tests pass in the name \"remote-session-test\" don't they?", "author": "janbartel", "createdAt": "2020-05-13T21:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MjExNg=="}], "type": "inlineReview", "revised_code": {"commit": "19820e5464a8041ab61370245bbd17edbbb6a366", "chunk": "diff --git a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\nindex 05849c0831..3955fe518f 100644\n--- a/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n+++ b/tests/test-sessions/test-infinispan-sessions/src/test/java/org/eclipse/jetty/server/session/remote/RemoteInfinispanTestSupport.java\n\n@@ -138,7 +133,6 @@ public class RemoteInfinispanTestSupport\n \n             String content = baos.toString(\"UTF-8\");\n             _manager.administration().getOrCreateCache(\"___protobuf_metadata\", (String)null).put(\"session.proto\", content);\n-            _manager.administration().getOrCreateCache(\"remote-session-test\", (String)null);\n         }\n         catch (Exception e)\n         {\n"}}, {"oid": "d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "url": "https://github.com/eclipse/jetty.project/commit/d7539e9ca5b1ca3047b5d25048d2df5f59ebf15a", "message": "add RemoteQueryManagerTest to use infinispan via testcontainer, simplify how we start infinispan\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-14T04:54:23Z", "type": "commit"}, {"oid": "19820e5464a8041ab61370245bbd17edbbb6a366", "url": "https://github.com/eclipse/jetty.project/commit/19820e5464a8041ab61370245bbd17edbbb6a366", "message": "do not create on start\n\nSigned-off-by: olivier lamy <oliver.lamy@gmail.com>", "committedDate": "2020-05-14T05:00:30Z", "type": "commit"}]}