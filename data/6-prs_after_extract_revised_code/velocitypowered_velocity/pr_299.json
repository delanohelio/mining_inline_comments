{"pr_number": 299, "pr_title": "Add event for commands", "pr_createdAt": "2020-04-26T21:05:42Z", "pr_url": "https://github.com/VelocityPowered/Velocity/pull/299", "timeline": [{"oid": "6555e0e337add5c2fc66ad8367a95a1c0c48ecfc", "url": "https://github.com/VelocityPowered/Velocity/commit/6555e0e337add5c2fc66ad8367a95a1c0c48ecfc", "message": "Add CommandExecuteEvent", "committedDate": "2020-04-26T21:04:12Z", "type": "commit"}, {"oid": "1fb382e0f6b4fcb7c2100cabe0a284ce01862e89", "url": "https://github.com/VelocityPowered/Velocity/commit/1fb382e0f6b4fcb7c2100cabe0a284ce01862e89", "message": "fix logic", "committedDate": "2020-04-26T21:09:25Z", "type": "commit"}, {"oid": "fb64333813699b4f1ade5c9a0646f8d4f7460713", "url": "https://github.com/VelocityPowered/Velocity/commit/fb64333813699b4f1ade5c9a0646f8d4f7460713", "message": "pass eventLoop to thenApplyAsync", "committedDate": "2020-04-26T21:11:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQwMTgzNw==", "url": "https://github.com/VelocityPowered/Velocity/pull/299#discussion_r415401837", "bodyText": "This is the biggest problem I have with this. I am not a big fan of exposing a method like this. Could we do a bit better?\nOn an additional note, I think we should probably deprecate execute and friends and just outright replace them with *async variants. We'll clean up the API mess later on.", "author": "astei", "createdAt": "2020-04-26T21:10:39Z", "path": "api/src/main/java/com/velocitypowered/api/command/CommandManager.java", "diffHunk": "@@ -35,10 +35,21 @@\n \n   /**\n    * Attempts to execute a command from the specified {@code cmdLine}.\n+   * CommandExecuteEvent will not called\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n    */\n   boolean execute(CommandSource source, String cmdLine);\n+\n+  /**\n+   * Attempts to execute a command from the specified {@code cmdLine}.\n+   *\n+   * @param source the command's source\n+   * @param cmdLine the command to run\n+   * @param callEvent will CommandExecuteEvent called or not\n+   * @return true if the command was found and executed, false if it was not\n+   */\n+  boolean execute(CommandSource source, String cmdLine, boolean callEvent);", "originalCommit": "1fb382e0f6b4fcb7c2100cabe0a284ce01862e89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQwMzI4MQ==", "url": "https://github.com/VelocityPowered/Velocity/pull/299#discussion_r415403281", "bodyText": "I think its not problem, because execute will be called from event/scheduler thread pool in 99% cases. I think we should not messy this with async stuff.", "author": "Leymooo", "createdAt": "2020-04-26T21:18:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQwMTgzNw=="}], "type": "inlineReview", "revised_code": {"commit": "c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "chunk": "diff --git a/api/src/main/java/com/velocitypowered/api/command/CommandManager.java b/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\nindex ce3452e4..af200cb7 100644\n--- a/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\n+++ b/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\n\n@@ -34,8 +36,8 @@ public interface CommandManager {\n   void unregister(String alias);\n \n   /**\n-   * Attempts to execute a command from the specified {@code cmdLine}.\n-   * CommandExecuteEvent will not called\n+   * Calls CommandExecuteEvent and attempts to execute a command from the specified {@code cmdLine}\n+   * sync.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n"}}, {"oid": "c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "url": "https://github.com/VelocityPowered/Velocity/commit/c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "message": "add async methods, also add separate methods which will call event and which will not call event", "committedDate": "2020-04-26T22:05:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQxNzU0Nw==", "url": "https://github.com/VelocityPowered/Velocity/pull/299#discussion_r415417547", "bodyText": "CommandExecuteEvent", "author": "astei", "createdAt": "2020-04-26T22:38:31Z", "path": "api/src/main/java/com/velocitypowered/api/event/command/CommandExecuteEvent.java", "diffHunk": "@@ -0,0 +1,143 @@\n+package com.velocitypowered.api.event.command;\n+\n+import com.google.common.base.Preconditions;\n+import com.velocitypowered.api.command.CommandSource;\n+import com.velocitypowered.api.event.ResultedEvent;\n+import com.velocitypowered.api.event.command.CommandExecuteEvent.CommandResult;\n+import java.util.Optional;\n+import org.checkerframework.checker.nullness.qual.NonNull;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+/**\n+ * This event is fired when a player types in a chat message.\n+ */\n+public final class CommandExecuteEvent implements ResultedEvent<CommandResult> {\n+\n+  private final CommandSource commandSource;\n+  private final String command;\n+  private CommandResult result;\n+\n+  /**\n+   * Constructs a PlayerChatEvent.", "originalCommit": "c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26bf94f08f3c4c25304ad023392f348c1bf85170", "chunk": "diff --git a/api/src/main/java/com/velocitypowered/api/event/command/CommandExecuteEvent.java b/api/src/main/java/com/velocitypowered/api/event/command/CommandExecuteEvent.java\nindex f92ed689..05469956 100644\n--- a/api/src/main/java/com/velocitypowered/api/event/command/CommandExecuteEvent.java\n+++ b/api/src/main/java/com/velocitypowered/api/event/command/CommandExecuteEvent.java\n\n@@ -18,7 +18,7 @@ public final class CommandExecuteEvent implements ResultedEvent<CommandResult> {\n   private CommandResult result;\n \n   /**\n-   * Constructs a PlayerChatEvent.\n+   * Constructs a CommandExecuteEvent.\n    * @param commandSource the source executing the command\n    * @param command the command being executed without first slash\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQxNzg2MA==", "url": "https://github.com/VelocityPowered/Velocity/pull/299#discussion_r415417860", "bodyText": "source, not invoker\n(This is a typo in the original code. Whoops!)", "author": "astei", "createdAt": "2020-04-26T22:40:18Z", "path": "proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java", "diffHunk": "@@ -47,11 +57,38 @@ public void unregister(final String alias) {\n     this.commands.remove(alias.toLowerCase(Locale.ENGLISH));\n   }\n \n+  /**\n+   * Calls CommandExecuteEvent.\n+   * @param source the command's source\n+   * @param cmd the command\n+   * @return CompletableFuture of event\n+   */\n+  public CompletableFuture<CommandExecuteEvent> callCommandEvent(CommandSource source, String cmd) {\n+    Preconditions.checkNotNull(source, \"invoker\");", "originalCommit": "c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26bf94f08f3c4c25304ad023392f348c1bf85170", "chunk": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java\nindex 3a8a5320..2b3975f1 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/command/VelocityCommandManager.java\n\n@@ -64,14 +64,14 @@ public class VelocityCommandManager implements CommandManager {\n    * @return CompletableFuture of event\n    */\n   public CompletableFuture<CommandExecuteEvent> callCommandEvent(CommandSource source, String cmd) {\n-    Preconditions.checkNotNull(source, \"invoker\");\n+    Preconditions.checkNotNull(source, \"source\");\n     Preconditions.checkNotNull(cmd, \"cmd\");\n     return eventManager.fire(new CommandExecuteEvent(source, cmd));\n   }\n \n   @Override\n   public boolean execute(CommandSource source, String cmdLine) {\n-    Preconditions.checkNotNull(source, \"invoker\");\n+    Preconditions.checkNotNull(source, \"source\");\n     Preconditions.checkNotNull(cmdLine, \"cmdLine\");\n \n     CommandExecuteEvent event = callCommandEvent(source, cmdLine).join();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQxNzk5Mw==", "url": "https://github.com/VelocityPowered/Velocity/pull/299#discussion_r415417993", "bodyText": "I'd like to add @Deprecated here", "author": "astei", "createdAt": "2020-04-26T22:41:01Z", "path": "api/src/main/java/com/velocitypowered/api/command/CommandManager.java", "diffHunk": "@@ -34,11 +36,42 @@\n   void unregister(String alias);\n \n   /**\n-   * Attempts to execute a command from the specified {@code cmdLine}.\n+   * Calls CommandExecuteEvent and attempts to execute a command from the specified {@code cmdLine}\n+   * sync.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n    */\n   boolean execute(CommandSource source, String cmdLine);", "originalCommit": "c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26bf94f08f3c4c25304ad023392f348c1bf85170", "chunk": "diff --git a/api/src/main/java/com/velocitypowered/api/command/CommandManager.java b/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\nindex af200cb7..f29777d6 100644\n--- a/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\n+++ b/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\n\n@@ -36,22 +36,29 @@ public interface CommandManager {\n   void unregister(String alias);\n \n   /**\n-   * Calls CommandExecuteEvent and attempts to execute a command from the specified {@code cmdLine}\n-   * sync.\n+   * Calls CommandExecuteEvent and attempts to execute a command using the specified {@code cmdLine}\n+   * in a blocking fashion.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n+   * \n+   * @deprecated This method will block current thread during event call and command execution.\n+   *             Prefer {@link #executeAsync(CommandSource, String)} instead.\n    */\n+  @Deprecated\n   boolean execute(CommandSource source, String cmdLine);\n \n   /**\n-   * Attempts to execute a command from the specified {@code cmdLine} sync\n-   * without calling CommandExecuteEvent.\n+   * Attempts to execute a command using the specified {@code cmdLine} in a blocking fashion without\n+   * calling CommandExecuteEvent.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n+   * \n+   * @deprecated This method will block current thread during event and command execution.\n+   *             Prefer {@link #executeImmediatelyAsync(CommandSource, String)} instead.\n    */\n   boolean executeImmediately(CommandSource source, String cmdLine);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQxODE2Nw==", "url": "https://github.com/VelocityPowered/Velocity/pull/299#discussion_r415418167", "bodyText": "Velocity has no concept of sync. More accurately this could say Attempts to execute a command using the specified {@code cmdLine} in a blocking fashion.", "author": "astei", "createdAt": "2020-04-26T22:41:47Z", "path": "api/src/main/java/com/velocitypowered/api/command/CommandManager.java", "diffHunk": "@@ -34,11 +36,42 @@\n   void unregister(String alias);\n \n   /**\n-   * Attempts to execute a command from the specified {@code cmdLine}.\n+   * Calls CommandExecuteEvent and attempts to execute a command from the specified {@code cmdLine}\n+   * sync.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n    */\n   boolean execute(CommandSource source, String cmdLine);\n+\n+  /**\n+   * Attempts to execute a command from the specified {@code cmdLine} sync", "originalCommit": "c0b8e9d646cf94877c89f0b6d631ebb484f58ca2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26bf94f08f3c4c25304ad023392f348c1bf85170", "chunk": "diff --git a/api/src/main/java/com/velocitypowered/api/command/CommandManager.java b/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\nindex af200cb7..f29777d6 100644\n--- a/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\n+++ b/api/src/main/java/com/velocitypowered/api/command/CommandManager.java\n\n@@ -36,22 +36,29 @@ public interface CommandManager {\n   void unregister(String alias);\n \n   /**\n-   * Calls CommandExecuteEvent and attempts to execute a command from the specified {@code cmdLine}\n-   * sync.\n+   * Calls CommandExecuteEvent and attempts to execute a command using the specified {@code cmdLine}\n+   * in a blocking fashion.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n+   * \n+   * @deprecated This method will block current thread during event call and command execution.\n+   *             Prefer {@link #executeAsync(CommandSource, String)} instead.\n    */\n+  @Deprecated\n   boolean execute(CommandSource source, String cmdLine);\n \n   /**\n-   * Attempts to execute a command from the specified {@code cmdLine} sync\n-   * without calling CommandExecuteEvent.\n+   * Attempts to execute a command using the specified {@code cmdLine} in a blocking fashion without\n+   * calling CommandExecuteEvent.\n    *\n    * @param source the command's source\n    * @param cmdLine the command to run\n    * @return true if the command was found and executed, false if it was not\n+   * \n+   * @deprecated This method will block current thread during event and command execution.\n+   *             Prefer {@link #executeImmediatelyAsync(CommandSource, String)} instead.\n    */\n   boolean executeImmediately(CommandSource source, String cmdLine);\n \n"}}, {"oid": "26bf94f08f3c4c25304ad023392f348c1bf85170", "url": "https://github.com/VelocityPowered/Velocity/commit/26bf94f08f3c4c25304ad023392f348c1bf85170", "message": "fix typos, update javadocs", "committedDate": "2020-04-27T10:09:04Z", "type": "commit"}, {"oid": "9d6689f64aefafdcbc0c96c30ec3cc93d1a77283", "url": "https://github.com/VelocityPowered/Velocity/commit/9d6689f64aefafdcbc0c96c30ec3cc93d1a77283", "message": "forgot annotation", "committedDate": "2020-04-27T10:12:03Z", "type": "commit"}]}