{"pr_number": 356, "pr_title": "Make hardcoded messages configurable", "pr_createdAt": "2020-08-18T21:53:04Z", "pr_url": "https://github.com/VelocityPowered/Velocity/pull/356", "timeline": [{"oid": "9e27dac5577b4ae5420734948740c67980e46701", "url": "https://github.com/VelocityPowered/Velocity/commit/9e27dac5577b4ae5420734948740c67980e46701", "message": "Add configurable messages for disconnect and kick prefix", "committedDate": "2020-08-18T21:52:13Z", "type": "commit"}, {"oid": "3711d56e8cf0903256571c50b11159882ebe1d13", "url": "https://github.com/VelocityPowered/Velocity/commit/3711d56e8cf0903256571c50b11159882ebe1d13", "message": "Move VelocityMessages into config.toml", "committedDate": "2020-08-19T18:42:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4NjA0OQ==", "url": "https://github.com/VelocityPowered/Velocity/pull/356#discussion_r473286049", "bodyText": "I'm not sure I like the idea of defaulting by hardcoding it in the source. It feels like a maintenance burden having to edit both this and the config and may cause them getting out of sync in future updates.", "author": "Mystiflow", "createdAt": "2020-08-19T20:02:10Z", "path": "proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java", "diffHunk": "@@ -781,4 +791,62 @@ public boolean isFromConfig() {\n       return fromConfig;\n     }\n   }\n+\n+  public static class Messages {\n+    private String kickPrefix = \"&cKicked from %s: \";\n+    private String disconnectPrefix = \"&cCan't connect to %s: \";\n+    private String onlineModeOnly = \"&cThis server only accepts connections from online-mode clients.\"\n+            + \"\\n\\n&7Did you change your username? Sign out of Minecraft, sign back in, and try again.\";\n+    private String noAvailableServers = \"&cThere are no available servers.\";\n+    private String alreadyConnected = \"&cYou are already connected to this proxy!\";\n+    private String movedToNewServerPrefix = \"&cThe server you were on kicked you: \";\n+    private String genericConnectionError = \"&cAn internal error occurred in your connection.\";\n+\n+    private Messages(CommentedConfig toml) {\n+      if (toml != null) {\n+        this.kickPrefix = toml.getOrElse(\"kick-prefix\", kickPrefix);", "originalCommit": "3711d56e8cf0903256571c50b11159882ebe1d13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4OTQzMQ==", "url": "https://github.com/VelocityPowered/Velocity/pull/356#discussion_r473289431", "bodyText": "The configuration-loading code is quite a mess, it's in dire need of a refactor - at least to use an object-mapping solution with defaults. I'll have to investigate if Night-Config will allow this, or explore writing my own TOML parser/serializer and slipping that into Configurate 4 (since zml told me he's not interested).", "author": "astei", "createdAt": "2020-08-19T20:09:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4NjA0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM0MjYwNg==", "url": "https://github.com/VelocityPowered/Velocity/pull/356#discussion_r473342606", "bodyText": "I right now changed this behaviour by creating a temporary default config copied from the jar file, which is used to retrieve the default values from.", "author": "FrankHeijden", "createdAt": "2020-08-19T21:31:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4NjA0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e3fe5384910123cb0123c8582d878d175f2c4e6b", "chunk": "diff --git a/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java b/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java\nindex c04b19cf..ec15d8b2 100644\n--- a/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java\n+++ b/proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java\n\n@@ -793,25 +812,32 @@ public class VelocityConfiguration implements ProxyConfig {\n   }\n \n   public static class Messages {\n-    private String kickPrefix = \"&cKicked from %s: \";\n-    private String disconnectPrefix = \"&cCan't connect to %s: \";\n-    private String onlineModeOnly = \"&cThis server only accepts connections from online-mode clients.\"\n-            + \"\\n\\n&7Did you change your username? Sign out of Minecraft, sign back in, and try again.\";\n-    private String noAvailableServers = \"&cThere are no available servers.\";\n-    private String alreadyConnected = \"&cYou are already connected to this proxy!\";\n-    private String movedToNewServerPrefix = \"&cThe server you were on kicked you: \";\n-    private String genericConnectionError = \"&cAn internal error occurred in your connection.\";\n-\n-    private Messages(CommentedConfig toml) {\n-      if (toml != null) {\n-        this.kickPrefix = toml.getOrElse(\"kick-prefix\", kickPrefix);\n-        this.disconnectPrefix = toml.getOrElse(\"disconnect-prefix\", disconnectPrefix);\n-        this.onlineModeOnly = toml.getOrElse(\"online-mode-only\", onlineModeOnly);\n-        this.noAvailableServers = toml.getOrElse(\"no-available-servers\", noAvailableServers);\n-        this.alreadyConnected = toml.getOrElse(\"already-connected\", alreadyConnected);\n-        this.movedToNewServerPrefix = toml.getOrElse(\"moved-to-new-server-prefix\", movedToNewServerPrefix);\n-        this.genericConnectionError = toml.getOrElse(\"generic-connection-error\", genericConnectionError);\n-      }\n+\n+    private final CommentedConfig toml;\n+    private final CommentedConfig defaultToml;\n+\n+    private final String kickPrefix;\n+    private final String disconnectPrefix;\n+    private final String onlineModeOnly;\n+    private final String noAvailableServers;\n+    private final String alreadyConnected;\n+    private final String movedToNewServerPrefix;\n+    private final String genericConnectionError;\n+\n+    private Messages(CommentedConfig toml, CommentedConfig defaultToml) {\n+      this.toml = toml;\n+      this.defaultToml = defaultToml;\n+      this.kickPrefix = getString(\"kick-prefix\");\n+      this.disconnectPrefix = getString(\"disconnect-prefix\");\n+      this.onlineModeOnly = getString(\"online-mode-only\");\n+      this.noAvailableServers = getString(\"no-available-servers\");\n+      this.alreadyConnected = getString(\"already-connected\");\n+      this.movedToNewServerPrefix = getString(\"moved-to-new-server-prefix\");\n+      this.genericConnectionError = getString(\"generic-connection-error\");\n+    }\n+\n+    private String getString(String path) {\n+      return toml.getOrElse(path, defaultToml.getOrElse(path, \"\"));\n     }\n \n     public Component getKickPrefix(String server) {\n"}}, {"oid": "62fac7db322a2cc332601bacdb26bfd64429388b", "url": "https://github.com/VelocityPowered/Velocity/commit/62fac7db322a2cc332601bacdb26bfd64429388b", "message": "Merge branch 'dev/1.1.0' into feature/messages", "committedDate": "2020-08-19T20:17:15Z", "type": "commit"}, {"oid": "e3fe5384910123cb0123c8582d878d175f2c4e6b", "url": "https://github.com/VelocityPowered/Velocity/commit/e3fe5384910123cb0123c8582d878d175f2c4e6b", "message": "Create temp default config for getting defaults", "committedDate": "2020-08-19T21:30:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTM0Mw==", "url": "https://github.com/VelocityPowered/Velocity/pull/356#discussion_r474385343", "bodyText": "Yikes, this is what I feared. Maybe I need to work on a proper TOML serializer for Configurate!", "author": "astei", "createdAt": "2020-08-21T03:15:56Z", "path": "proxy/src/main/java/com/velocitypowered/proxy/config/VelocityConfiguration.java", "diffHunk": "@@ -384,15 +398,28 @@ public String toString() {\n    * @throws IOException if we could not read from the {@code path}.\n    */\n   public static VelocityConfiguration read(Path path) throws IOException {\n+    String defaultResource = \"default-velocity.toml\";\n     boolean mustResave = false;\n     CommentedFileConfig config = CommentedFileConfig.builder(path)\n-        .defaultResource(\"/default-velocity.toml\")\n+        .defaultResource(defaultResource)\n         .autosave()\n         .preserveInsertionOrder()\n         .sync()\n         .build();\n     config.load();\n \n+    // Create temporary default configuration\n+    File tmpFile = File.createTempFile(defaultResource, null);", "originalCommit": "e3fe5384910123cb0123c8582d878d175f2c4e6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}