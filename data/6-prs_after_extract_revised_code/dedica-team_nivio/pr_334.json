{"pr_number": 334, "pr_title": "332 fixes", "pr_createdAt": "2020-11-29T07:34:21Z", "pr_url": "https://github.com/dedica-team/nivio/pull/334", "timeline": [{"oid": "0f13265f4745715f343d3c1cecc974e2a7fe5b43", "url": "https://github.com/dedica-team/nivio/commit/0f13265f4745715f343d3c1cecc974e2a7fe5b43", "message": "[#332] avoid duplicate SVG loading", "committedDate": "2020-11-29T07:09:40Z", "type": "commit"}, {"oid": "692253114a38423a966dcb08faafb27bb327450f", "url": "https://github.com/dedica-team/nivio/commit/692253114a38423a966dcb08faafb27bb327450f", "message": "[#332] removed deprecated icon, added link", "committedDate": "2020-11-29T07:15:40Z", "type": "commit"}, {"oid": "4412469244c9cf8a59b34c927ce2bcaadc6bbfad", "url": "https://github.com/dedica-team/nivio/commit/4412469244c9cf8a59b34c927ce2bcaadc6bbfad", "message": "[#304] map items clickable instead of labels only", "committedDate": "2020-11-29T07:31:45Z", "type": "commit"}, {"oid": "f836227f7b42e1a443e4394d6c9399cdb66a3b27", "url": "https://github.com/dedica-team/nivio/commit/f836227f7b42e1a443e4394d6c9399cdb66a3b27", "message": "[#304] fix", "committedDate": "2020-11-29T07:55:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMjkxNA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532212914", "bodyText": "Was this what made the hexagons before? Are we not having the hexagons anymore?", "author": "mfbieber", "createdAt": "2020-11-29T13:54:04Z", "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java", "diffHunk": "@@ -81,11 +81,11 @@ public DomContent render() {\n             circle.attr(\"stroke-dasharray\", 5);\n             circle.attr(\"opacity\", 0.7);\n         }\n-        ContainerTag inner = SvgTagCreator.g(circle, content, children)\n-                .attr(\"class\", \"hexagon\");\n+        ContainerTag inner = SvgTagCreator.g(circle, content, children);\n \n         return SvgTagCreator.g(inner, icon)\n-                .attr(\"class\", \"hexagon-group\")", "originalCommit": "f836227f7b42e1a443e4394d6c9399cdb66a3b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzA2OA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532213068", "bodyText": "Starting in line 92 in this class there is a TODO and a commented private method. Is this dead code? Do we need it, or can we remove it?", "author": "mfbieber", "createdAt": "2020-11-29T13:55:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMjkxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyNTA4Mg==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532225082", "bodyText": "The item is neither a \"hexagon\" anymore nor do we need the class here anymore.\nThe dead code has been copied to #303", "author": "bonndan", "createdAt": "2020-11-29T15:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMjkxNA=="}], "type": "inlineReview", "revised_code": {"commit": "2a5841a8c7f7bae9dcfc9b2f8638d59ffe48d987", "chunk": "diff --git a/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java b/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java\nindex 0148ad54..51ee6532 100644\n--- a/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java\n+++ b/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java\n\n@@ -89,30 +89,4 @@ class SVGItem extends Component {\n                 .attr(\"transform\", \"translate(\" + pixel.x + \",\" + pixel.y + \")\");\n     }\n \n-    /* TODO make scale reappear, but without evaluation (this is part of assessment)\n-    private ContainerTag getScale() {\n-\n-        if (StringUtils.isEmpty(item.getLabel(Label.SCALE))) {\n-            return null;\n-        }\n-\n-        int scaleVal = 0;\n-        try {\n-            scaleVal = Integer.parseInt(item.getLabel(Label.SCALE));\n-        } catch (NumberFormatException ignored) {\n-        }\n-\n-        return SvgTagCreator.g(\n-                        SvgTagCreator.circle()\n-                                .attr(\"cx\", 0)\n-                                .attr(\"cy\", 0)\n-                                .attr(\"r\", 12)\n-                                .attr(\"fill\", scaleVal > 0 ? \"green\" : \"red\")\n-                        ,\n-                        SvgTagCreator.text(String.valueOf(scaleVal))\n-                                .attr(\"transform\", \"translate(-\" + 4 + \",\" + 5 + \")\")\n-                ).attr(\"transform\", \"translate(\" + 30 + \",\" + 30 + \")\");\n-    }\n-\n-     */\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzMzMA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532213330", "bodyText": "What does removing the \"data-identifier\" attribute do?", "author": "mfbieber", "createdAt": "2020-11-29T13:56:50Z", "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGItemLabel.java", "diffHunk": "@@ -27,11 +27,10 @@ public DomContent render() {\n \n         ContainerTag labelText = new SVGLabelText(name, \"0\", 2 * DEFAULT_ICON_SIZE + 30 + \"\", \"itemLabel\").render();\n \n-        ContainerTag g = SvgTagCreator.g(null, labelText).attr(\"class\", \"label\");\n-        g.attr(\"id\", id);\n-        g.attr(\"data-identifier\", identifier);\n-        g.attr(\"text-anchor\", \"middle\");\n-        return g;\n+        return SvgTagCreator.g(null, labelText)\n+                .attr(\"class\", \"label\")\n+                .attr(\"id\", id)\n+                .attr(\"text-anchor\", \"middle\");", "originalCommit": "f836227f7b42e1a443e4394d6c9399cdb66a3b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyMzc0MA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532223740", "bodyText": "\"data-identifier\" is used in javascript to obtain the item identifier. This has been moved to a parent element (see below).", "author": "bonndan", "createdAt": "2020-11-29T15:17:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzMzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzQyMQ==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532213421", "bodyText": "What does the data-identifier and the class attribute change here?", "author": "mfbieber", "createdAt": "2020-11-29T13:57:34Z", "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java", "diffHunk": "@@ -81,11 +81,11 @@ public DomContent render() {\n             circle.attr(\"stroke-dasharray\", 5);\n             circle.attr(\"opacity\", 0.7);\n         }\n-        ContainerTag inner = SvgTagCreator.g(circle, content, children)\n-                .attr(\"class\", \"hexagon\");\n+        ContainerTag inner = SvgTagCreator.g(circle, content, children);\n \n         return SvgTagCreator.g(inner, icon)\n-                .attr(\"class\", \"hexagon-group\")\n+                .attr(\"data-identifier\", this.id)\n+                .attr(\"class\", \"item\")", "originalCommit": "f836227f7b42e1a443e4394d6c9399cdb66a3b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyMzg3MA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532223870", "bodyText": "The element gets on onClick event (all \".item\" elements) and the identifier is used to show correct item data in a dialogue.", "author": "bonndan", "createdAt": "2020-11-29T15:18:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1ODA0NA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r535558044", "bodyText": "Okay, I haven't looked into the frontend logic querying for these yet.", "author": "mfbieber", "createdAt": "2020-12-03T20:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "2a5841a8c7f7bae9dcfc9b2f8638d59ffe48d987", "chunk": "diff --git a/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java b/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java\nindex 0148ad54..51ee6532 100644\n--- a/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java\n+++ b/src/main/java/de/bonndan/nivio/output/map/svg/SVGItem.java\n\n@@ -89,30 +89,4 @@ class SVGItem extends Component {\n                 .attr(\"transform\", \"translate(\" + pixel.x + \",\" + pixel.y + \")\");\n     }\n \n-    /* TODO make scale reappear, but without evaluation (this is part of assessment)\n-    private ContainerTag getScale() {\n-\n-        if (StringUtils.isEmpty(item.getLabel(Label.SCALE))) {\n-            return null;\n-        }\n-\n-        int scaleVal = 0;\n-        try {\n-            scaleVal = Integer.parseInt(item.getLabel(Label.SCALE));\n-        } catch (NumberFormatException ignored) {\n-        }\n-\n-        return SvgTagCreator.g(\n-                        SvgTagCreator.circle()\n-                                .attr(\"cx\", 0)\n-                                .attr(\"cy\", 0)\n-                                .attr(\"r\", 12)\n-                                .attr(\"fill\", scaleVal > 0 ? \"green\" : \"red\")\n-                        ,\n-                        SvgTagCreator.text(String.valueOf(scaleVal))\n-                                .attr(\"transform\", \"translate(-\" + 4 + \",\" + 5 + \")\")\n-                ).attr(\"transform\", \"translate(\" + 30 + \",\" + 30 + \")\");\n-    }\n-\n-     */\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMzgwNQ==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r532213805", "bodyText": "How are we still testing the SVGItemLabel now?", "author": "mfbieber", "createdAt": "2020-11-29T14:00:17Z", "path": "src/test/java/de/bonndan/nivio/output/map/svg/SVGItemLabelTest.java", "diffHunk": "@@ -21,8 +24,8 @@ public void regression184() {\n         foo.setLandscape(landscape);\n \n \n-        SVGItemLabel svgItemLabel = new SVGItemLabel(foo);\n-        String render = svgItemLabel.render().render();\n+        SVGItem svgItem = new SVGItem(null, new LayoutedComponent(foo), new Point2D.Double(0,0));\n+        String render = svgItem.render().render();", "originalCommit": "f836227f7b42e1a443e4394d6c9399cdb66a3b27", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9a6741df15fa6c58b30a40ea784ae4f614e2bda", "chunk": "diff --git a/src/test/java/de/bonndan/nivio/output/map/svg/SVGItemLabelTest.java b/src/test/java/de/bonndan/nivio/output/map/svg/SVGItemLabelTest.java\ndeleted file mode 100644\nindex f040c0ed..00000000\n--- a/src/test/java/de/bonndan/nivio/output/map/svg/SVGItemLabelTest.java\n+++ /dev/null\n\n@@ -1,32 +0,0 @@\n-package de.bonndan.nivio.output.map.svg;\n-\n-import de.bonndan.nivio.model.Item;\n-import de.bonndan.nivio.model.LandscapeFactory;\n-import de.bonndan.nivio.model.Landscape;\n-import de.bonndan.nivio.output.layout.LayoutedComponent;\n-import org.junit.jupiter.api.DisplayName;\n-import org.junit.jupiter.api.Test;\n-\n-import java.awt.geom.Point2D;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-class SVGItemLabelTest {\n-\n-    @Test\n-    @DisplayName(\"ensure label uses proper fqi\")\n-    public void regression184() {\n-\n-        Landscape landscape = LandscapeFactory.create(\"l1\");\n-\n-        // item has no group\n-        Item foo = new Item(null, \"foo\");\n-        foo.setLandscape(landscape);\n-\n-\n-        SVGItem svgItem = new SVGItem(null, new LayoutedComponent(foo), new Point2D.Double(0,0));\n-        String render = svgItem.render().render();\n-        assertTrue(render.contains(\"l1/common/foo\"));\n-        assertFalse(render.contains(\"l1//foo\"));\n-    }\n-}\n\\ No newline at end of file\n"}}, {"oid": "e9a6741df15fa6c58b30a40ea784ae4f614e2bda", "url": "https://github.com/dedica-team/nivio/commit/e9a6741df15fa6c58b30a40ea784ae4f614e2bda", "message": "[#304] removed duplicate test (functionaly has been deleted fromm label)", "committedDate": "2020-11-29T15:15:14Z", "type": "commit"}, {"oid": "43a679a75223e812261e0d12fbf5a6875a2dbfb9", "url": "https://github.com/dedica-team/nivio/commit/43a679a75223e812261e0d12fbf5a6875a2dbfb9", "message": "[#332] message fix", "committedDate": "2020-11-29T15:22:03Z", "type": "commit"}, {"oid": "2a5841a8c7f7bae9dcfc9b2f8638d59ffe48d987", "url": "https://github.com/dedica-team/nivio/commit/2a5841a8c7f7bae9dcfc9b2f8638d59ffe48d987", "message": "[#332] removed dead code", "committedDate": "2020-11-29T15:26:33Z", "type": "commit"}, {"oid": "6382733f69cbaacb0334eda71651a81974e52c32", "url": "https://github.com/dedica-team/nivio/commit/6382733f69cbaacb0334eda71651a81974e52c32", "message": "presence of icons dependency checked at application start", "committedDate": "2020-11-30T19:47:26Z", "type": "commit"}, {"oid": "d6bc8775ae7dc494e613c3db7e9e1d97264c8b1e", "url": "https://github.com/dedica-team/nivio/commit/d6bc8775ae7dc494e613c3db7e9e1d97264c8b1e", "message": "cleanup", "committedDate": "2020-11-30T19:48:57Z", "type": "commit"}, {"oid": "aca793e61c913a3476738b312863522589bddf8f", "url": "https://github.com/dedica-team/nivio/commit/aca793e61c913a3476738b312863522589bddf8f", "message": "ensure overriding icon folder has trailing slash", "committedDate": "2020-11-30T19:55:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1MjI1MQ==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r535552251", "bodyText": "Okay, the problem I had was indeed resolved by obtaining the npm dependency. \ud83d\udc4d", "author": "mfbieber", "createdAt": "2020-12-03T20:10:13Z", "path": "src/main/java/de/bonndan/nivio/output/icons/LocalIcons.java", "diffHunk": "@@ -3,33 +3,53 @@\n import de.bonndan.nivio.util.URLHelper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n import org.springframework.util.StringUtils;\n \n+import java.io.File;\n import java.net.URL;\n import java.util.Map;\n import java.util.Optional;\n import java.util.concurrent.ConcurrentHashMap;\n \n import static de.bonndan.nivio.output.icons.IconMapping.DEFAULT_ICON;\n \n+/**\n+ * This component is responsible to resolve icons into urls / data urls.\n+ */\n @Component\n public class LocalIcons {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(LocalIcons.class);\n+    private static final String initErrorMsg = \"Default icon could not be loaded from icon set folder %s.\" +\n+            \" Make sure all npm dependencies are installed (or run mvn package).\";\n+    private static final String DEFAULT_ICONS_FOLDER = \"/static/icons/svg/\";\n \n     /**\n      * default icon data url\n      */\n-    private String defaultIcon = null;\n+    private final String defaultIcon;\n+\n+    private final String iconFolder;\n \n     /**\n      * data url cache\n      */\n     private final Map<String, String> iconDataUrls = new ConcurrentHashMap<>();\n \n-    public LocalIcons() {\n-        getIconUrl(DEFAULT_ICON.getIcon()).ifPresent(s -> defaultIcon = s);\n+    /**\n+     * @param iconFolder optional dir containing a different icon set\n+     */\n+    public LocalIcons(@Value(\"${nivio.iconFolder:#{null}}\") String iconFolder) {\n+        if (iconFolder != null) {\n+            this.iconFolder = iconFolder.endsWith(File.separator) ? iconFolder : iconFolder + File.separator;\n+        } else {\n+            this.iconFolder = DEFAULT_ICONS_FOLDER;\n+        }\n+        defaultIcon = getIconUrl(DEFAULT_ICON.getIcon()).orElseThrow(() -> {\n+            throw new RuntimeException(String.format(initErrorMsg, this.iconFolder));\n+        });", "originalCommit": "aca793e61c913a3476738b312863522589bddf8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1NTU4MA==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r535555580", "bodyText": "Why not making the parameter @Nonnull and using the DEFAULT_ICONS_FOLDER as the fallback value?", "author": "mfbieber", "createdAt": "2020-12-03T20:13:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1MjI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MzU2Mg==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r535873562", "bodyText": "I've had to look up how that is done using injected values, but it works. Change is pushed.", "author": "bonndan", "createdAt": "2020-12-04T06:48:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1MjI1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "459e67d987512c9d3f70341a6a47e376ef5be1b0", "chunk": "diff --git a/src/main/java/de/bonndan/nivio/output/icons/LocalIcons.java b/src/main/java/de/bonndan/nivio/output/icons/LocalIcons.java\nindex 898db917..5b8d5b14 100644\n--- a/src/main/java/de/bonndan/nivio/output/icons/LocalIcons.java\n+++ b/src/main/java/de/bonndan/nivio/output/icons/LocalIcons.java\n\n@@ -3,13 +3,13 @@ package de.bonndan.nivio.output.icons;\n import de.bonndan.nivio.util.URLHelper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.stereotype.Component;\n+import org.springframework.lang.NonNull;\n import org.springframework.util.StringUtils;\n \n import java.io.File;\n import java.net.URL;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Optional;\n import java.util.concurrent.ConcurrentHashMap;\n \n"}}, {"oid": "459e67d987512c9d3f70341a6a47e376ef5be1b0", "url": "https://github.com/dedica-team/nivio/commit/459e67d987512c9d3f70341a6a47e376ef5be1b0", "message": "[#332] LocalIcons component configured explicitly, with non-null arg", "committedDate": "2020-12-04T06:46:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMTcyOQ==", "url": "https://github.com/dedica-team/nivio/pull/334#discussion_r536001729", "bodyText": "This looks pretty now \ud83e\udd8b", "author": "mfbieber", "createdAt": "2020-12-04T10:36:49Z", "path": "src/test/java/de/bonndan/nivio/output/layout/OrganicLayouterTest.java", "diffHunk": "@@ -168,7 +168,7 @@ public void renderLandscapeItemModelWithMagicLabels() throws IOException {\n     public void renderCSV() throws IOException {\n \n         HttpService httpService = new HttpService();\n-        IconService iconService = new IconService(new LocalIcons(null), new VendorIcons(httpService));", "originalCommit": "459e67d987512c9d3f70341a6a47e376ef5be1b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}