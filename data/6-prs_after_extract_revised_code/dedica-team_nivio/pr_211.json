{"pr_number": 211, "pr_title": "fix URLHelper.splitQuery & add test", "pr_createdAt": "2020-07-29T18:28:20Z", "pr_url": "https://github.com/dedica-team/nivio/pull/211", "timeline": [{"oid": "1b80ed10989e7102dc0cb8f86db09ce2b10d38a4", "url": "https://github.com/dedica-team/nivio/commit/1b80ed10989e7102dc0cb8f86db09ce2b10d38a4", "message": "fix URLHelper.splitQuery & add test", "committedDate": "2020-07-29T18:27:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMzM3NA==", "url": "https://github.com/dedica-team/nivio/pull/211#discussion_r462523374", "bodyText": "What type of Map is used in Map.of()? Is the sequence guaranteed? Or does it not matter in assertEquals?", "author": "bonndan", "createdAt": "2020-07-29T19:06:11Z", "path": "src/test/java/de/bonndan/nivio/util/URLHelperTest.java", "diffHunk": "@@ -37,4 +38,28 @@ public void test_getURL_relativePath() {\n         assert url != null;\n         assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n     }\n+\n+    @Test\n+    void test_splitQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n+        Map<String, String> expected = Map.of(\"namespace\", \"default\", \"groupLabel\", \"release\");", "originalCommit": "1b80ed10989e7102dc0cb8f86db09ce2b10d38a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "58111a0b3b7eb69bd7e3ca9a3768c0da87e7477a", "chunk": "diff --git a/src/test/java/de/bonndan/nivio/util/URLHelperTest.java b/src/test/java/de/bonndan/nivio/util/URLHelperTest.java\nindex c9c6c936..a592a527 100644\n--- a/src/test/java/de/bonndan/nivio/util/URLHelperTest.java\n+++ b/src/test/java/de/bonndan/nivio/util/URLHelperTest.java\n\n@@ -8,58 +8,62 @@ import java.net.MalformedURLException;\n import java.net.URL;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.HashMap;\n import java.util.Map;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n \n-public class URLHelperTest {\n+class URLHelperTest {\n \n-    @Test\n-    public void test_getURL() {\n-        Path currentRelativePath = Paths.get(\"\");\n-        String root = currentRelativePath.toAbsolutePath().toString();\n-        URL url = URLHelper.getURL(root + \"/src/test/resources/example/example_templates.yml\");\n-        if (SystemUtils.IS_OS_WINDOWS) {\n-            root = \"/\" + root.replace(File.separator, \"/\");\n-        }\n-        assert url != null;\n-        assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n-    }\n+\t@Test\n+\tvoid test_getURL() {\n+\t\tPath currentRelativePath = Paths.get(\"\");\n+\t\tString root = currentRelativePath.toAbsolutePath().toString();\n+\t\tURL url = URLHelper.getURL(root + \"/src/test/resources/example/example_templates.yml\");\n+\t\tif (SystemUtils.IS_OS_WINDOWS) {\n+\t\t\troot = \"/\" + root.replace(File.separator, \"/\");\n+\t\t}\n+\t\tassert url != null;\n+\t\tassertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n+\t}\n \n-    @Test\n-    public void test_getURL_relativePath() {\n-        Path currentRelativePath = Paths.get(\"\");\n-        String root = currentRelativePath.toAbsolutePath().toString();\n-        if (SystemUtils.IS_OS_WINDOWS) {\n-            root = \"/\" + root.replace(File.separator, \"/\");\n-        }\n-        URL url = URLHelper.getURL(\"src/test/resources/example/example_templates.yml\");\n-        assert url != null;\n-        assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n-    }\n+\t@Test\n+\tvoid test_getURL_relativePath() {\n+\t\tPath currentRelativePath = Paths.get(\"\");\n+\t\tString root = currentRelativePath.toAbsolutePath().toString();\n+\t\tif (SystemUtils.IS_OS_WINDOWS) {\n+\t\t\troot = \"/\" + root.replace(File.separator, \"/\");\n+\t\t}\n+\t\tURL url = URLHelper.getURL(\"src/test/resources/example/example_templates.yml\");\n+\t\tassert url != null;\n+\t\tassertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n+\t}\n \n-    @Test\n-    void test_splitQuery() throws MalformedURLException {\n-        URL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n-        Map<String, String> expected = Map.of(\"namespace\", \"default\", \"groupLabel\", \"release\");\n-        Map<String, String> actual = URLHelper.splitQuery(url);\n-        assertEquals(expected, actual);\n-    }\n+\t@Test\n+\tvoid test_splitQuery() throws MalformedURLException {\n+\t\tURL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n+\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n \n-    @Test\n-    void test_splitQuery_withoutQuery() throws MalformedURLException {\n-        URL url = new URL(\"http://192.168.99.100:8080\");\n-        Map<String, String> expected = new HashMap<>();\n-        Map<String, String> actual = URLHelper.splitQuery(url);\n-        assertEquals(expected, actual);\n-    }\n+\t\tassertEquals(2, actual.size());\n \n-    @Test\n-    void test_splitQuery_badQuery() throws MalformedURLException {\n-        URL url = new URL(\"http://192.168.99.100:8080?foo=\");\n-        Map<String, String> expected = new HashMap<>();\n-        Map<String, String> actual = URLHelper.splitQuery(url);\n-        assertEquals(expected, actual);\n-    }\n+\t\tassertTrue(actual.containsKey(\"namespace\"));\n+\t\tassertTrue(actual.containsKey(\"groupLabel\"));\n+\n+\t\tassertEquals(\"default\", actual.get(\"namespace\"));\n+\t\tassertEquals(\"release\", actual.get(\"groupLabel\"));\n+\t}\n+\n+\t@Test\n+\tvoid test_splitQuery_withoutQuery() throws MalformedURLException {\n+\t\tURL url = new URL(\"http://192.168.99.100:8080\");\n+\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n+\t\tassertEquals(0, actual.size());\n+\t}\n+\n+\t@Test\n+\tvoid test_splitQuery_badQuery() throws MalformedURLException {\n+\t\tURL url = new URL(\"http://192.168.99.100:8080?foo=\");\n+\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n+\t\tassertEquals(0, actual.size());\n+\t}\n }\n\\ No newline at end of file\n"}}, {"oid": "58111a0b3b7eb69bd7e3ca9a3768c0da87e7477a", "url": "https://github.com/dedica-team/nivio/commit/58111a0b3b7eb69bd7e3ca9a3768c0da87e7477a", "message": "Update URLHelperTest.java", "committedDate": "2020-07-30T09:26:30Z", "type": "commit"}]}