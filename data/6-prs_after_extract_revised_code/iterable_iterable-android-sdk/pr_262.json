{"pr_number": 262, "pr_title": "[MOB-1876] - Consume a message after click/back", "pr_createdAt": "2020-08-24T17:02:31Z", "pr_url": "https://github.com/Iterable/iterable-android-sdk/pull/262", "timeline": [{"oid": "54ba34e0038c16becd11956c32447b0f8dcd2395", "url": "https://github.com/Iterable/iterable-android-sdk/commit/54ba34e0038c16becd11956c32447b0f8dcd2395", "message": "[MOB-1876] - Consume a message after click/back\n\nIf a message is consume type, remove the message only after click events on in-app OR if pressed BACK_BUTTON.", "committedDate": "2020-08-24T18:06:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzODA5Ng==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/262#discussion_r478638096", "bodyText": "Hmm at this point I think we should have a common method for handling both normal clicks and back click, since the handling for both is the same.", "author": "vbabenkoru", "createdAt": "2020-08-27T19:13:00Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -252,6 +252,11 @@ public void onUrlClicked(String url) {\n     public void onBackPressed() {\n         IterableApi.sharedInstance.trackInAppClick(messageId, BACK_BUTTON);\n         IterableApi.sharedInstance.trackInAppClose(messageId, BACK_BUTTON, IterableInAppCloseAction.BACK, location);\n+        IterableInAppMessage message = IterableApi.sharedInstance.getInAppManager().getMessageById(messageId);", "originalCommit": "54ba34e0038c16becd11956c32447b0f8dcd2395", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "chunk": "diff --git a/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java b/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java\nindex 26ac562..e5135fe 100644\n--- a/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java\n+++ b/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java\n\n@@ -252,9 +253,12 @@ public class IterableInAppFragmentHTMLNotification extends DialogFragment implem\n     public void onBackPressed() {\n         IterableApi.sharedInstance.trackInAppClick(messageId, BACK_BUTTON);\n         IterableApi.sharedInstance.trackInAppClose(messageId, BACK_BUTTON, IterableInAppCloseAction.BACK, location);\n+        processMessageRemoval();\n+    }\n+\n+    private void processMessageRemoval() {\n         IterableInAppMessage message = IterableApi.sharedInstance.getInAppManager().getMessageById(messageId);\n-        if (message.isConsumed()) {\n-            IterableApi.sharedInstance.inAppConsume(message, IterableInAppDeleteActionType.OTHER, location);\n+        if (message.isMarkedForDeletion() && !message.isConsumed()) {\n             IterableApi.sharedInstance.getInAppManager().removeMessage(message, IterableInAppDeleteActionType.OTHER, location);\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzODU1Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/262#discussion_r478638557", "bodyText": "I think doing setConsumed changes the semantics of what 'consumed' means. Previously it was an indicator that we've sent a consume API call to the server. Now it's not very clear what it means.", "author": "vbabenkoru", "createdAt": "2020-08-27T19:13:52Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java", "diffHunk": "@@ -235,8 +238,7 @@ public void execute(Uri url) {\n         })) {\n             setRead(message, true);\n             if (consume) {\n-                // Remove the message without tracking\n-                removeMessage(message);\n+                message.setConsumed(true);", "originalCommit": "54ba34e0038c16becd11956c32447b0f8dcd2395", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzOTU1MA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/262#discussion_r478639550", "bodyText": "Should I introduce new variable - markForRemoval? in inAppMessage?", "author": "Ayyanchira", "createdAt": "2020-08-27T19:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzODU1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "chunk": "diff --git a/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java b/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java\nindex 8acc4a5..9b9b0c2 100644\n--- a/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java\n+++ b/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java\n\n@@ -238,7 +235,7 @@ public class IterableInAppManager implements IterableActivityMonitor.AppStateCal\n         })) {\n             setRead(message, true);\n             if (consume) {\n-                message.setConsumed(true);\n+                message.markForDeletion(true);\n             }\n         }\n     }\n"}}, {"oid": "9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "message": "[MOB-1876] - Consume a message after click/back\n\nIf a message is consume type, remove the message only after click events on in-app OR if pressed BACK_BUTTON.", "committedDate": "2020-08-27T23:42:35Z", "type": "commit"}, {"oid": "9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "message": "[MOB-1876] - Consume a message after click/back\n\nIf a message is consume type, remove the message only after click events on in-app OR if pressed BACK_BUTTON.", "committedDate": "2020-08-27T23:42:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk0MDc0OQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/262#discussion_r489940749", "bodyText": "I think this will track a delete event, unlike the previous code that was calling removeMessage with just one parameter. Is there a reason to use another version of removeMessage here?", "author": "vbabenkoru", "createdAt": "2020-09-17T03:46:22Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -252,6 +253,14 @@ public void onUrlClicked(String url) {\n     public void onBackPressed() {\n         IterableApi.sharedInstance.trackInAppClick(messageId, BACK_BUTTON);\n         IterableApi.sharedInstance.trackInAppClose(messageId, BACK_BUTTON, IterableInAppCloseAction.BACK, location);\n+        processMessageRemoval();\n+    }\n+\n+    private void processMessageRemoval() {\n+        IterableInAppMessage message = IterableApi.sharedInstance.getInAppManager().getMessageById(messageId);\n+        if (message.isMarkedForDeletion() && !message.isConsumed()) {\n+            IterableApi.sharedInstance.getInAppManager().removeMessage(message, IterableInAppDeleteActionType.OTHER, location);", "originalCommit": "9efeae88082a0ea155d6be80c1f47ff4aa8d19a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1ODIyOA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/262#discussion_r491058228", "bodyText": "I think we introduced DeleteActionType.Other for this purposes. Also thought it would be better to pass location if we know the context of where the inapp was being displayed.\nMay be we can discuss this in future. Reverting back to using removeMessage with single parameter", "author": "Ayyanchira", "createdAt": "2020-09-18T16:22:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk0MDc0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a18c5d8bd790f1e7dbc7fc96e7e03862b9e0747e", "chunk": "diff --git a/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java b/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java\nindex e5135fe..a606cc4 100644\n--- a/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java\n+++ b/iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java\n\n@@ -259,7 +259,7 @@ public class IterableInAppFragmentHTMLNotification extends DialogFragment implem\n     private void processMessageRemoval() {\n         IterableInAppMessage message = IterableApi.sharedInstance.getInAppManager().getMessageById(messageId);\n         if (message.isMarkedForDeletion() && !message.isConsumed()) {\n-            IterableApi.sharedInstance.getInAppManager().removeMessage(message, IterableInAppDeleteActionType.OTHER, location);\n+            IterableApi.sharedInstance.getInAppManager().removeMessage(message);\n         }\n     }\n \n"}}, {"oid": "a18c5d8bd790f1e7dbc7fc96e7e03862b9e0747e", "url": "https://github.com/Iterable/iterable-android-sdk/commit/a18c5d8bd790f1e7dbc7fc96e7e03862b9e0747e", "message": "Using remove message with single parameter", "committedDate": "2020-09-18T16:56:45Z", "type": "commit"}]}