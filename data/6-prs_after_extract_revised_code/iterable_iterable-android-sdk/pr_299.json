{"pr_number": 299, "pr_title": "[MOB-2446] - Online vs Offline handling", "pr_createdAt": "2020-12-16T19:51:22Z", "pr_url": "https://github.com/Iterable/iterable-android-sdk/pull/299", "timeline": [{"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "url": "https://github.com/Iterable/iterable-android-sdk/commit/f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly", "committedDate": "2020-12-16T20:20:22Z", "type": "commit"}, {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "url": "https://github.com/Iterable/iterable-android-sdk/commit/f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly", "committedDate": "2020-12-16T20:20:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1NjY5Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544656697", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n          \n          \n            \n                private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(", "author": "vbabenkoru", "createdAt": "2020-12-16T22:05:56Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -5,22 +5,42 @@\n import androidx.annotation.MainThread;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n+    Set<String> offlineApiSet = new HashSet<>(Arrays.asList(", "originalCommit": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c5edd95583b8e82456f6a692ff11983a015fded8", "chunk": "diff --git a/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java b/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\nindex db1bac8..5ff2c21 100644\n--- a/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n+++ b/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n\n@@ -18,7 +18,7 @@ import java.util.Set;\n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n-    Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n+    private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n             IterableConstants.ENDPOINT_TRACK,\n             IterableConstants.ENDPOINT_TRACK_PUSH_OPEN,\n             IterableConstants.ENDPOINT_TRACK_PURCHASE,\n"}}, {"oid": "c5edd95583b8e82456f6a692ff11983a015fded8", "url": "https://github.com/Iterable/iterable-android-sdk/commit/c5edd95583b8e82456f6a692ff11983a015fded8", "message": "Update iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n\nCo-authored-by: Victor Babenko <victor@iterable.com>", "committedDate": "2020-12-16T22:36:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3ODI5MA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544678290", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testAllOfflineApisUseTaskSchedular() {\n          \n          \n            \n                public void testAllOfflineApisUseTaskScheduler() {", "author": "vbabenkoru", "createdAt": "2020-12-16T22:46:29Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.iterable.iterableapi;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private IterableTaskStorage mockTaskStorage;\n+\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskStorage = mock(IterableTaskStorage.class);\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(getContext(), mockTaskStorage, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskStorage, times(1)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+    }\n+\n+    @Test\n+    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskStorage, times(0)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+    }\n+\n+    @Test\n+    public void testAllOfflineApisUseTaskSchedular() {", "originalCommit": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "chunk": "diff --git a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\nindex d892315..39aaaac 100644\n--- a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n+++ b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\n@@ -2,47 +2,47 @@ package com.iterable.iterableapi;\n \n import com.iterable.iterableapi.unit.TestRunner;\n \n-import org.json.JSONException;\n import org.json.JSONObject;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.isNull;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n \n @RunWith(TestRunner.class)\n public class OfflineRequestProcessorTest extends BaseTest {\n     private OfflineRequestProcessor offlineRequestProcessor;\n     private IterableTaskRunner mockTaskRunner;\n-    private IterableTaskStorage mockTaskStorage;\n-\n+    private TaskScheduler mockTaskScheduler;\n \n     @Before\n     public void setUp() {\n-        mockTaskStorage = mock(IterableTaskStorage.class);\n         mockTaskRunner = mock(IterableTaskRunner.class);\n-        offlineRequestProcessor = new OfflineRequestProcessor(getContext(), mockTaskStorage, mockTaskRunner);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n     }\n \n     @Test\n-    public void testOfflineRequestIsStored() throws JSONException {\n+    public void testOfflineRequestIsStored() {\n         IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n         offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n-        verify(mockTaskStorage, times(1)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());\n     }\n \n     @Test\n-    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+    public void testNonOfflineRequestIsNotStored() {\n         IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);\n         offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n-        verify(mockTaskStorage, times(0)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+        verifyNoInteractions(mockTaskScheduler);\n     }\n \n     @Test\n-    public void testAllOfflineApisUseTaskSchedular() {\n+    public void testAllOfflineApisUseTaskScheduler() {\n         String[] offlineApis = new String[]{\n                 IterableConstants.ENDPOINT_TRACK,\n                 IterableConstants.ENDPOINT_TRACK_PUSH_OPEN,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMjA5OA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544722098", "bodyText": "You can inject just taskRunner and taskScheduler as dependencies, skipping storage.", "author": "vbabenkoru", "createdAt": "2020-12-17T00:31:28Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -5,22 +5,42 @@\n import androidx.annotation.MainThread;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n+    private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n+            IterableConstants.ENDPOINT_TRACK,\n+            IterableConstants.ENDPOINT_TRACK_PUSH_OPEN,\n+            IterableConstants.ENDPOINT_TRACK_PURCHASE,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_OPEN,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_CLICK,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_CLOSE,\n+            IterableConstants.ENDPOINT_TRACK_INBOX_SESSION,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_DELIVERY,\n+            IterableConstants.ENDPOINT_INAPP_CONSUME));\n \n     OfflineRequestProcessor(Context context) {\n         IterableTaskStorage taskStorage = IterableTaskStorage.sharedInstance(context);\n         taskRunner = new IterableTaskRunner(taskStorage, IterableActivityMonitor.getInstance());\n         taskScheduler = new TaskScheduler(taskStorage, taskRunner);\n     }\n \n+    @VisibleForTesting\n+    OfflineRequestProcessor(Context context, IterableTaskStorage storage, IterableTaskRunner iterableTaskRunner) {\n+        taskRunner = iterableTaskRunner;\n+        taskScheduler = new TaskScheduler(storage, taskRunner);", "originalCommit": "c5edd95583b8e82456f6a692ff11983a015fded8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "chunk": "diff --git a/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java b/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\nindex 5ff2c21..f162951 100644\n--- a/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n+++ b/iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n\n@@ -36,14 +36,13 @@ class OfflineRequestProcessor implements RequestProcessor {\n     }\n \n     @VisibleForTesting\n-    OfflineRequestProcessor(Context context, IterableTaskStorage storage, IterableTaskRunner iterableTaskRunner) {\n+    OfflineRequestProcessor(TaskScheduler scheduler, IterableTaskRunner iterableTaskRunner) {\n         taskRunner = iterableTaskRunner;\n-        taskScheduler = new TaskScheduler(storage, taskRunner);\n+        taskScheduler = scheduler;\n     }\n \n     @Override\n     public void processGetRequest(@Nullable String apiKey, @NonNull String resourcePath, @NonNull JSONObject json, String authToken, @Nullable IterableHelper.IterableActionHandler onCallback) {\n-        // Call GET requests directly, without using the queue\n         IterableApiRequest request = new IterableApiRequest(apiKey, resourcePath, json, IterableApiRequest.GET, authToken, onCallback);\n         new IterableRequestTask().execute(request);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1Mzc1OQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545553759", "bodyText": "What are these logging lines for? It seems like they are not part of the test logic.", "author": "vbabenkoru", "createdAt": "2020-12-18T03:42:13Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.iterable.iterableapi;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, new IterableHelper.SuccessHandler() {\n+            @Override\n+            public void onSuccess(@NonNull JSONObject data) {\n+                IterableLogger.v(\"OfflineRequestProcessorTest\", \"OnSuccess callback executed\");", "originalCommit": "984190b63fa5eff5960af379cead01e038198f03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "chunk": "diff --git a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\nindex 6b0094c..39aaaac 100644\n--- a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n+++ b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\n@@ -1,11 +1,7 @@\n package com.iterable.iterableapi;\n \n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-\n import com.iterable.iterableapi.unit.TestRunner;\n \n-import org.json.JSONException;\n import org.json.JSONObject;\n import org.junit.Before;\n import org.junit.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDI0Mw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545554243", "bodyText": "Why PUSH_DISABLE_AFTER_REGISTRATION? Non-offline endpoint constant would fit better here I think..", "author": "vbabenkoru", "createdAt": "2020-12-18T03:44:03Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.iterable.iterableapi;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, new IterableHelper.SuccessHandler() {\n+            @Override\n+            public void onSuccess(@NonNull JSONObject data) {\n+                IterableLogger.v(\"OfflineRequestProcessorTest\", \"OnSuccess callback executed\");\n+            }\n+        }, new IterableHelper.FailureHandler() {\n+            @Override\n+            public void onFailure(@NonNull String reason, @Nullable JSONObject data) {\n+                IterableLogger.e(\"OfflineRequestProcessorTest\", \"OnFailure callback executed\");\n+            }\n+        });\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), any(IterableHelper.SuccessHandler.class), any(IterableHelper.FailureHandler.class));\n+    }\n+\n+    @Test\n+    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);", "originalCommit": "984190b63fa5eff5960af379cead01e038198f03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY3ODY0Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545678647", "bodyText": "Oh.. I thought its disableDevice... My bad\ud83d\ude05", "author": "Ayyanchira", "createdAt": "2020-12-18T08:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDI0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "chunk": "diff --git a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\nindex 6b0094c..39aaaac 100644\n--- a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n+++ b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\n@@ -1,11 +1,7 @@\n package com.iterable.iterableapi;\n \n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-\n import com.iterable.iterableapi.unit.TestRunner;\n \n-import org.json.JSONException;\n import org.json.JSONObject;\n import org.junit.Before;\n import org.junit.Test;\n"}}, {"oid": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "url": "https://github.com/Iterable/iterable-android-sdk/commit/3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers", "committedDate": "2020-12-18T08:54:50Z", "type": "forcePushed"}, {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "url": "https://github.com/Iterable/iterable-android-sdk/commit/a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers", "committedDate": "2020-12-18T08:58:43Z", "type": "commit"}, {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "url": "https://github.com/Iterable/iterable-android-sdk/commit/a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers", "committedDate": "2020-12-18T08:58:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0OTQ2Mg==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r546149462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());\n          \n          \n            \n                    verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), isNull(IterableHelper.SuccessHandler.class), isNull(IterableHelper.FailureHandler.class));", "author": "vbabenkoru", "createdAt": "2020-12-18T23:46:20Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.iterable.iterableapi;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.isNull;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());", "originalCommit": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ef2b682b1efde952ad97f728336043423bdb7ab", "chunk": "diff --git a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\nindex da14b3e..3968cb5 100644\n--- a/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n+++ b/iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\n@@ -31,7 +31,7 @@ public class OfflineRequestProcessorTest extends BaseTest {\n     public void testOfflineRequestIsStored() {\n         IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n         offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n-        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), isNull(IterableHelper.SuccessHandler.class), isNull(IterableHelper.FailureHandler.class));\n     }\n \n     @Test\n"}}, {"oid": "9ef2b682b1efde952ad97f728336043423bdb7ab", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ef2b682b1efde952ad97f728336043423bdb7ab", "message": "Update iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\nCo-authored-by: Victor Babenko <victor@iterable.com>", "committedDate": "2020-12-18T23:51:38Z", "type": "commit"}]}