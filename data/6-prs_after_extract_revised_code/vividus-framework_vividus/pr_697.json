{"pr_number": 697, "pr_title": "[bdd-engine] Allow resolution of context variables in eval expression", "pr_createdAt": "2020-06-24T13:07:00Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/697", "timeline": [{"oid": "970fd0929b19679fa9c59228fce375a937bfba47", "url": "https://github.com/vividus-framework/vividus/commit/970fd0929b19679fa9c59228fce375a937bfba47", "message": "[bdd-engine] Allow resolution of context variables in eval expression", "committedDate": "2020-06-24T13:12:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NDA3NQ==", "url": "https://github.com/vividus-framework/vividus/pull/697#discussion_r444984075", "bodyText": "what about extending org.apache.commons.jexl3.MapContext ?", "author": "valfirst", "createdAt": "2020-06-24T15:32:30Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "diffHunk": "@@ -46,8 +57,38 @@\n         {\n             String expressionToEvaluate = expressionMatcher.group(EVAL_GROUP);\n             JexlScript jexlScript = jexlEngine.get().createScript(expressionToEvaluate);\n-            return Optional.of(jexlScript.execute(JexlEngine.EMPTY_CONTEXT).toString());\n+            return Optional.of(jexlScript.execute(new JexlBddVariableContext(bddVariableContext)).toString());\n         }\n         return Optional.empty();\n     }\n+\n+    private static final class JexlBddVariableContext implements JexlContext", "originalCommit": "970fd0929b19679fa9c59228fce375a937bfba47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "40e98f4b2ba68346d18191c281c0f2769edb8031", "chunk": "diff --git a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java\nindex 48bcfcb7..9ef2d0e3 100644\n--- a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java\n+++ b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java\n\n@@ -57,7 +57,7 @@ public class EvalExpressionProcessor implements IExpressionProcessor\n         {\n             String expressionToEvaluate = expressionMatcher.group(EVAL_GROUP);\n             JexlScript jexlScript = jexlEngine.get().createScript(expressionToEvaluate);\n-            return Optional.of(jexlScript.execute(new JexlBddVariableContext(bddVariableContext)).toString());\n+            return Optional.of(String.valueOf(jexlScript.execute(new JexlBddVariableContext(bddVariableContext))));\n         }\n         return Optional.empty();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjUwOA==", "url": "https://github.com/vividus-framework/vividus/pull/697#discussion_r444986508", "bodyText": "@Mock private IBddVariableContext bddVariableContext;\n@InjectMocks private EvalExpressionProcessor processor;\n?", "author": "valfirst", "createdAt": "2020-06-24T15:36:08Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java", "diffHunk": "@@ -17,19 +17,30 @@\n package org.vividus.bdd.expression;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Optional;\n import java.util.stream.Stream;\n \n+import org.apache.commons.jexl3.JexlException;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.vividus.bdd.context.IBddVariableContext;\n \n+@ExtendWith(MockitoExtension.class)\n class EvalExpressionProcessorTests\n {\n+    private static final String TRUE = \"true\";\n+    private static final String VALUE = \"Value\";\n     private static final String FALSE = \"false\";\n-    private final EvalExpressionProcessor processor = new EvalExpressionProcessor();\n+    private final IBddVariableContext bddVariableContext = mock(IBddVariableContext.class);\n+    private final EvalExpressionProcessor processor = new EvalExpressionProcessor(bddVariableContext);", "originalCommit": "970fd0929b19679fa9c59228fce375a937bfba47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "40e98f4b2ba68346d18191c281c0f2769edb8031", "chunk": "diff --git a/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java b/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java\nindex a8a72653..910eee97 100644\n--- a/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java\n+++ b/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java\n\n@@ -46,6 +46,7 @@ class EvalExpressionProcessorTests\n     private static Stream<Arguments> evalArguments()\n     {\n         return Stream.of(\n+                Arguments.of(\"eval(null)\", \"null\"),\n                 Arguments.of(\"eval(16 + 2 * 6)\", \"28\"),\n                 Arguments.of(\"eval((16 + 2) * 6)\", \"108\"),\n                 Arguments.of(\"eval(100 / 5 - 16 * 2 + 6)\", \"-6\"),\n"}}, {"oid": "40e98f4b2ba68346d18191c281c0f2769edb8031", "url": "https://github.com/vividus-framework/vividus/commit/40e98f4b2ba68346d18191c281c0f2769edb8031", "message": "[bdd-engine] Allow resolution of context variables in eval expression", "committedDate": "2020-06-24T15:43:39Z", "type": "forcePushed"}, {"oid": "016af0fce719e457a78d3efa69cfc377b4e0f981", "url": "https://github.com/vividus-framework/vividus/commit/016af0fce719e457a78d3efa69cfc377b4e0f981", "message": "[bdd-engine] Allow resolution of context variables in eval expression", "committedDate": "2020-06-24T20:29:08Z", "type": "commit"}, {"oid": "016af0fce719e457a78d3efa69cfc377b4e0f981", "url": "https://github.com/vividus-framework/vividus/commit/016af0fce719e457a78d3efa69cfc377b4e0f981", "message": "[bdd-engine] Allow resolution of context variables in eval expression", "committedDate": "2020-06-24T20:29:08Z", "type": "forcePushed"}]}