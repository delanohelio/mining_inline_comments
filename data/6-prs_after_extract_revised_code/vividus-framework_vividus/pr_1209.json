{"pr_number": 1209, "pr_title": "[zephyr-exporter] Property for export executions with specific statuses", "pr_createdAt": "2020-12-09T10:13:22Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1209", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3OTY3NA==", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539179674", "bodyText": "statusesForExport sounds like we should export only test cases with such statuses, but if this is empty we export all test cases, maybe set some default value?", "author": "uarlouski", "createdAt": "2020-12-09T10:16:16Z", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);\n         LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n         return testCasesForImporting;\n     }\n \n+    private List<TestCase> filterByStatuses(List<TestCase> testCases)\n+    {\n+        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n+        if (statusesForExport.isEmpty())", "originalCommit": "7a5a197aacd4b6cd0b9fc07a443562fa80108630", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4MTg1MQ==", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539181851", "bodyText": "Anything like zephyr.exporter.statuses-for-export=FAILD,BROKEN,PENDING,UNKNOWN,SKIPPED,PASSED ?", "author": "abudevich", "createdAt": "2020-12-09T10:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3OTY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "2ff78dff2860b117e2e9bd582d04c38790ea9ca7", "chunk": "diff --git a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\nindex ab349c4b..da9f27c8 100644\n--- a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n+++ b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n\n@@ -57,29 +57,21 @@ public class TestCaseParser\n                 .collect(Collectors.groupingBy(TestCase::getKey,\n                         Collectors.mapping(TestCase::getStatus, Collectors.toCollection(TreeSet::new))));\n \n-        List<TestCase> testCasesForImporting = new ArrayList<>();\n+        List<TestCase> testCasesForExporting = new ArrayList<>();\n         for (Map.Entry<String, TreeSet<TestCaseStatus>> entry : testCasesMap.entrySet())\n         {\n-            testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n+            testCasesForExporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n-        testCasesForImporting = filterByStatuses(testCasesForImporting);\n-        LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n-        return testCasesForImporting;\n+        testCasesForExporting = filterByStatuses(testCasesForExporting);\n+        LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForExporting);\n+        return testCasesForExporting;\n     }\n \n     private List<TestCase> filterByStatuses(List<TestCase> testCases)\n     {\n-        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n-        if (statusesForExport.isEmpty())\n-        {\n-            return testCases;\n-        }\n-        else\n-        {\n-            return testCases.stream()\n-                    .filter(t -> statusesForExport.contains(t.getStatus()))\n-                    .collect(Collectors.toList());\n-        }\n+        return testCases.stream()\n+                .filter(t -> zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(t.getStatus()))\n+                .collect(Collectors.toList());\n     }\n \n     private List<File> getJsonResultsFiles() throws IOException\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3OTg5Mw==", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539179893", "bodyText": "redundant else", "author": "uarlouski", "createdAt": "2020-12-09T10:16:34Z", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);\n         LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n         return testCasesForImporting;\n     }\n \n+    private List<TestCase> filterByStatuses(List<TestCase> testCases)\n+    {\n+        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n+        if (statusesForExport.isEmpty())\n+        {\n+            return testCases;\n+        }\n+        else", "originalCommit": "7a5a197aacd4b6cd0b9fc07a443562fa80108630", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ff78dff2860b117e2e9bd582d04c38790ea9ca7", "chunk": "diff --git a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\nindex ab349c4b..da9f27c8 100644\n--- a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n+++ b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n\n@@ -57,29 +57,21 @@ public class TestCaseParser\n                 .collect(Collectors.groupingBy(TestCase::getKey,\n                         Collectors.mapping(TestCase::getStatus, Collectors.toCollection(TreeSet::new))));\n \n-        List<TestCase> testCasesForImporting = new ArrayList<>();\n+        List<TestCase> testCasesForExporting = new ArrayList<>();\n         for (Map.Entry<String, TreeSet<TestCaseStatus>> entry : testCasesMap.entrySet())\n         {\n-            testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n+            testCasesForExporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n-        testCasesForImporting = filterByStatuses(testCasesForImporting);\n-        LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n-        return testCasesForImporting;\n+        testCasesForExporting = filterByStatuses(testCasesForExporting);\n+        LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForExporting);\n+        return testCasesForExporting;\n     }\n \n     private List<TestCase> filterByStatuses(List<TestCase> testCases)\n     {\n-        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n-        if (statusesForExport.isEmpty())\n-        {\n-            return testCases;\n-        }\n-        else\n-        {\n-            return testCases.stream()\n-                    .filter(t -> statusesForExport.contains(t.getStatus()))\n-                    .collect(Collectors.toList());\n-        }\n+        return testCases.stream()\n+                .filter(t -> zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(t.getStatus()))\n+                .collect(Collectors.toList());\n     }\n \n     private List<File> getJsonResultsFiles() throws IOException\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjM2MA==", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539186360", "bodyText": "Importing -> Exporting", "author": "valfirst", "createdAt": "2020-12-09T10:25:53Z", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);", "originalCommit": "7a5a197aacd4b6cd0b9fc07a443562fa80108630", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2ff78dff2860b117e2e9bd582d04c38790ea9ca7", "chunk": "diff --git a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\nindex ab349c4b..da9f27c8 100644\n--- a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n+++ b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n\n@@ -57,29 +57,21 @@ public class TestCaseParser\n                 .collect(Collectors.groupingBy(TestCase::getKey,\n                         Collectors.mapping(TestCase::getStatus, Collectors.toCollection(TreeSet::new))));\n \n-        List<TestCase> testCasesForImporting = new ArrayList<>();\n+        List<TestCase> testCasesForExporting = new ArrayList<>();\n         for (Map.Entry<String, TreeSet<TestCaseStatus>> entry : testCasesMap.entrySet())\n         {\n-            testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n+            testCasesForExporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n-        testCasesForImporting = filterByStatuses(testCasesForImporting);\n-        LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n-        return testCasesForImporting;\n+        testCasesForExporting = filterByStatuses(testCasesForExporting);\n+        LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForExporting);\n+        return testCasesForExporting;\n     }\n \n     private List<TestCase> filterByStatuses(List<TestCase> testCases)\n     {\n-        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n-        if (statusesForExport.isEmpty())\n-        {\n-            return testCases;\n-        }\n-        else\n-        {\n-            return testCases.stream()\n-                    .filter(t -> statusesForExport.contains(t.getStatus()))\n-                    .collect(Collectors.toList());\n-        }\n+        return testCases.stream()\n+                .filter(t -> zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(t.getStatus()))\n+                .collect(Collectors.toList());\n     }\n \n     private List<File> getJsonResultsFiles() throws IOException\n"}}, {"oid": "2ff78dff2860b117e2e9bd582d04c38790ea9ca7", "url": "https://github.com/vividus-framework/vividus/commit/2ff78dff2860b117e2e9bd582d04c38790ea9ca7", "message": "[zephyr-exporter] Add ability to export executions with specific statuses", "committedDate": "2020-12-09T11:47:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2OTk0Ng==", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539269946", "bodyText": "TestCaseStatus testCaseStatus = entry.getValue().first();\nif (zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(testCaseStatus))\n{\n    testCasesForExporting.add(new TestCase(entry.getKey(), testCaseStatus));\n}", "author": "valfirst", "createdAt": "2020-12-09T12:35:17Z", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -57,13 +57,21 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n                 .collect(Collectors.groupingBy(TestCase::getKey,\n                         Collectors.mapping(TestCase::getStatus, Collectors.toCollection(TreeSet::new))));\n \n-        List<TestCase> testCasesForImporting = new ArrayList<>();\n+        List<TestCase> testCasesForExporting = new ArrayList<>();\n         for (Map.Entry<String, TreeSet<TestCaseStatus>> entry : testCasesMap.entrySet())\n         {\n-            testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n+            testCasesForExporting.add(new TestCase(entry.getKey(), entry.getValue().first()));", "originalCommit": "2ff78dff2860b117e2e9bd582d04c38790ea9ca7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "98f914bc7537b4cc1d77538c6e73edb72a18f039", "chunk": "diff --git a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\nindex da9f27c8..d555f2d9 100644\n--- a/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n+++ b/vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java\n\n@@ -60,20 +60,16 @@ public class TestCaseParser\n         List<TestCase> testCasesForExporting = new ArrayList<>();\n         for (Map.Entry<String, TreeSet<TestCaseStatus>> entry : testCasesMap.entrySet())\n         {\n-            testCasesForExporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n+            TestCaseStatus testCaseStatus = entry.getValue().first();\n+            if (zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(testCaseStatus))\n+            {\n+                testCasesForExporting.add(new TestCase(entry.getKey(), testCaseStatus));\n+            }\n         }\n-        testCasesForExporting = filterByStatuses(testCasesForExporting);\n         LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForExporting);\n         return testCasesForExporting;\n     }\n \n-    private List<TestCase> filterByStatuses(List<TestCase> testCases)\n-    {\n-        return testCases.stream()\n-                .filter(t -> zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(t.getStatus()))\n-                .collect(Collectors.toList());\n-    }\n-\n     private List<File> getJsonResultsFiles() throws IOException\n     {\n         ZephyrFileVisitor crawler = new ZephyrFileVisitor();\n"}}, {"oid": "98f914bc7537b4cc1d77538c6e73edb72a18f039", "url": "https://github.com/vividus-framework/vividus/commit/98f914bc7537b4cc1d77538c6e73edb72a18f039", "message": "[zephyr-exporter] Add ability to export executions with specific statuses", "committedDate": "2020-12-09T12:40:24Z", "type": "forcePushed"}, {"oid": "5bd6214f43bb3e6ad95fc29d3ee02a961c6a34b0", "url": "https://github.com/vividus-framework/vividus/commit/5bd6214f43bb3e6ad95fc29d3ee02a961c6a34b0", "message": "[zephyr-exporter] Add ability to export executions with specific statuses", "committedDate": "2020-12-09T13:25:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNTIyNg==", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539305226", "bodyText": "testLogger.getLoggingEvents() cache", "author": "uarlouski", "createdAt": "2020-12-09T13:28:18Z", "path": "vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java", "diffHunk": "@@ -111,19 +115,39 @@ void testResultsProblemWithReading() throws URISyntaxException\n     void testCreateTestCases() throws URISyntaxException, IOException\n     {\n         configureObjectMapper();\n-        Path sourceDirectory = Paths.get(getClass().getResource(\"/test-cases\").toURI());\n+        Path sourceDirectory = Paths.get(getClass().getResource(RESOURCE_PATH).toURI());\n         when(zephyrExporterProperties.getSourceDirectory()).thenReturn(sourceDirectory);\n+        when(zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution())\n+            .thenReturn(List.of(TestCaseStatus.SKIPPED, TestCaseStatus.PASSED));\n         List<TestCase> testCases = testCaseParser.createTestCases(objectMapper);\n         assertEquals(testCases.size(), 2);\n         assertThat(testLogger.getLoggingEvents().get(0).getMessage(), is(JSON_FILES_STRING));\n         assertThat(testLogger.getLoggingEvents().get(0).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().get(1).getMessage(), is(\"Test cases: {}\"));\n+        assertThat(testLogger.getLoggingEvents().get(1).getMessage(), is(TEST_CASES_STRING));\n         assertThat(testLogger.getLoggingEvents().get(1).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().get(2).getMessage(), is(\"Test cases for exporting to JIRA: {}\"));\n+        assertThat(testLogger.getLoggingEvents().get(2).getMessage(), is(FOR_EXPORTING_STRING));\n         assertThat(testLogger.getLoggingEvents().get(2).getLevel(), is(Level.INFO));\n         assertThat(testLogger.getLoggingEvents().size(), equalTo(3));\n     }\n \n+    @Test\n+    void testCreateTestCasesWithStatusFilter() throws URISyntaxException, IOException\n+    {\n+        configureObjectMapper();\n+        Path sourceDirectory = Paths.get(getClass().getResource(RESOURCE_PATH).toURI());\n+        when(zephyrExporterProperties.getSourceDirectory()).thenReturn(sourceDirectory);\n+        when(zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution())\n+            .thenReturn(List.of(TestCaseStatus.PASSED));\n+        List<TestCase> testCases = testCaseParser.createTestCases(objectMapper);\n+        assertEquals(testCases.size(), 1);\n+        assertThat(testLogger.getLoggingEvents().get(0).getMessage(), is(JSON_FILES_STRING));", "originalCommit": "5bd6214f43bb3e6ad95fc29d3ee02a961c6a34b0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5cac3107f77a12942de2dd8c2a7fb2b46874990", "chunk": "diff --git a/vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java b/vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java\nindex 3768e412..2e1002ac 100644\n--- a/vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java\n+++ b/vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java\n\n@@ -121,13 +122,14 @@ public class TestCaseParserTests\n             .thenReturn(List.of(TestCaseStatus.SKIPPED, TestCaseStatus.PASSED));\n         List<TestCase> testCases = testCaseParser.createTestCases(objectMapper);\n         assertEquals(testCases.size(), 2);\n-        assertThat(testLogger.getLoggingEvents().get(0).getMessage(), is(JSON_FILES_STRING));\n-        assertThat(testLogger.getLoggingEvents().get(0).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().get(1).getMessage(), is(TEST_CASES_STRING));\n-        assertThat(testLogger.getLoggingEvents().get(1).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().get(2).getMessage(), is(FOR_EXPORTING_STRING));\n-        assertThat(testLogger.getLoggingEvents().get(2).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().size(), equalTo(3));\n+        List<LoggingEvent> events = testLogger.getLoggingEvents();\n+        assertThat(events.get(0).getMessage(), is(JSON_FILES_STRING));\n+        assertThat(events.get(0).getLevel(), is(Level.INFO));\n+        assertThat(events.get(1).getMessage(), is(TEST_CASES_STRING));\n+        assertThat(events.get(1).getLevel(), is(Level.INFO));\n+        assertThat(events.get(2).getMessage(), is(FOR_EXPORTING_STRING));\n+        assertThat(events.get(2).getLevel(), is(Level.INFO));\n+        assertThat(events.size(), equalTo(3));\n     }\n \n     @Test\n"}}, {"oid": "b5cac3107f77a12942de2dd8c2a7fb2b46874990", "url": "https://github.com/vividus-framework/vividus/commit/b5cac3107f77a12942de2dd8c2a7fb2b46874990", "message": "[zephyr-exporter] Add ability to export executions with specific statuses", "committedDate": "2020-12-09T13:31:54Z", "type": "forcePushed"}, {"oid": "0957f68e436b0f6842cbdad8bc808853a385d126", "url": "https://github.com/vividus-framework/vividus/commit/0957f68e436b0f6842cbdad8bc808853a385d126", "message": "[zephyr-exporter] Add ability to export executions with specific statuses", "committedDate": "2020-12-09T14:37:56Z", "type": "commit"}, {"oid": "0957f68e436b0f6842cbdad8bc808853a385d126", "url": "https://github.com/vividus-framework/vividus/commit/0957f68e436b0f6842cbdad8bc808853a385d126", "message": "[zephyr-exporter] Add ability to export executions with specific statuses", "committedDate": "2020-12-09T14:37:56Z", "type": "forcePushed"}]}