{"pr_number": 977, "pr_title": "[plugin-mobile-app] Add swipe to element", "pr_createdAt": "2020-10-02T09:32:26Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNzM4NQ==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498727385", "bodyText": "why is screenSwipe? but not just swipe?", "author": "valfirst", "createdAt": "2020-10-02T09:56:19Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.configuration;\n+\n+import java.time.Duration;\n+\n+public class MobileAppTestConfiguration\n+{\n+    private final Duration screenSwipeStabilizationDuration;\n+    private final int screenSwipeLimit;", "originalCommit": "4352dfe5953d3ad746aeab85209c68e054d99849", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java\nindex 27cd4496..fa681c2d 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java\n\n@@ -21,12 +21,12 @@ import java.time.Duration;\n public class MobileAppTestConfiguration\n {\n     private final Duration screenSwipeStabilizationDuration;\n-    private final int screenSwipeLimit;\n+    private final int swipeLimit;\n \n-    public MobileAppTestConfiguration(Duration screenSwipeStabilizationDuration, int screenSwipeLimit)\n+    public MobileAppTestConfiguration(Duration screenSwipeStabilizationDuration, int swipeLimit)\n     {\n         this.screenSwipeStabilizationDuration = screenSwipeStabilizationDuration;\n-        this.screenSwipeLimit = screenSwipeLimit;\n+        this.swipeLimit = swipeLimit;\n     }\n \n     public Duration getScreenSwipeStabilizationDuration()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNzY0Mw==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498727643", "bodyText": "the fields doesn't correspond to the name of the class", "author": "valfirst", "createdAt": "2020-10-02T09:56:47Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/Location.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.model;\n+\n+public class Location", "originalCommit": "4352dfe5953d3ad746aeab85209c68e054d99849", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/Location.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/Location.java\ndeleted file mode 100644\nindex a56d0714..00000000\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/Location.java\n+++ /dev/null\n\n@@ -1,44 +0,0 @@\n-/*\n- * Copyright 2019-2020 the original author or authors.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     https://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.vividus.bdd.mobileapp.model;\n-\n-public class Location\n-{\n-    private final int width;\n-    private final int height;\n-\n-    public Location(int width, int height)\n-    {\n-        this.width = width;\n-        this.height = height;\n-    }\n-\n-    public int getWidth()\n-    {\n-        return width;\n-    }\n-\n-    public int getHeight()\n-    {\n-        return height;\n-    }\n-\n-    public int getMiddleX()\n-    {\n-        return getWidth() / 2;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODYzNA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498728634", "bodyText": "I propose to have a single class for all mobile actions", "author": "valfirst", "createdAt": "2020-10-02T09:58:59Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/SwipeActions.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.PointOption.point;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.Duration;\n+import java.util.function.BooleanSupplier;\n+\n+import org.openqa.selenium.Dimension;\n+import org.vividus.bdd.mobileapp.configuration.MobileAppTestConfiguration;\n+import org.vividus.bdd.mobileapp.model.Location;\n+import org.vividus.bdd.mobileapp.model.SwipeCoordinates;\n+import org.vividus.bdd.mobileapp.model.SwipeDirection;\n+import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.manager.GenericWebDriverManager;\n+import org.vividus.selenium.mobileapp.MobileAppScreenshotTaker;\n+import org.vividus.util.Sleeper;\n+\n+import ru.yandex.qatools.ashot.util.ImageTool;\n+\n+public class SwipeActions extends AbstractActions", "originalCommit": "4352dfe5953d3ad746aeab85209c68e054d99849", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/SwipeActions.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/GestureActions.java\nsimilarity index 58%\nrename from vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/SwipeActions.java\nrename to vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/GestureActions.java\nindex 9069921b..b763f845 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/SwipeActions.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/GestureActions.java\n\n@@ -17,6 +17,7 @@\n package org.vividus.mobileapp.action;\n \n import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.ElementOption.element;\n import static io.appium.java_client.touch.offset.PointOption.point;\n \n import java.awt.image.BufferedImage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODkzOA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498728938", "bodyText": "it doesn't look like mobile specific", "author": "valfirst", "createdAt": "2020-10-02T09:59:38Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/selenium/mobileapp/MobileAppScreenshotTaker.java", "diffHunk": "@@ -41,7 +47,19 @@ public MobileAppScreenshotTaker(IWebDriverProvider webDriverProvider,\n     public Optional<Screenshot> takeScreenshot(String screenshotName)\n     {\n         String fileName = screenshotFileNameGenerator.generateScreenshotFileName(screenshotName);\n-        byte[] data = webDriverProvider.getUnwrapped(TakesScreenshot.class).getScreenshotAs(OutputType.BYTES);\n-        return Optional.of(new Screenshot(fileName, data));\n+        return Optional.of(new Screenshot(fileName, getScreenshotBytes()));\n+    }\n+\n+    public BufferedImage takeViewportScreenshot() throws IOException", "originalCommit": "4352dfe5953d3ad746aeab85209c68e054d99849", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/selenium/mobileapp/MobileAppScreenshotTaker.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/selenium/mobileapp/MobileAppScreenshotTaker.java\nindex 163638fb..b041c149 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/selenium/mobileapp/MobileAppScreenshotTaker.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/selenium/mobileapp/MobileAppScreenshotTaker.java\n\n@@ -16,30 +16,21 @@\n \n package org.vividus.selenium.mobileapp;\n \n-import java.awt.image.BufferedImage;\n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n import java.util.Optional;\n \n-import javax.imageio.ImageIO;\n-\n-import org.openqa.selenium.OutputType;\n-import org.openqa.selenium.TakesScreenshot;\n import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.screenshot.AbstractScreenshotTaker;\n import org.vividus.selenium.screenshot.IScreenshotFileNameGenerator;\n import org.vividus.selenium.screenshot.Screenshot;\n-import org.vividus.selenium.screenshot.ScreenshotTaker;\n \n-public class MobileAppScreenshotTaker implements ScreenshotTaker\n+public class MobileAppScreenshotTaker extends AbstractScreenshotTaker\n {\n-    private final IWebDriverProvider webDriverProvider;\n     private final IScreenshotFileNameGenerator screenshotFileNameGenerator;\n \n     public MobileAppScreenshotTaker(IWebDriverProvider webDriverProvider,\n             IScreenshotFileNameGenerator screenshotFileNameGenerator)\n     {\n-        this.webDriverProvider = webDriverProvider;\n+        super(webDriverProvider);\n         this.screenshotFileNameGenerator = screenshotFileNameGenerator;\n     }\n \n"}}, {"oid": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "url": "https://github.com/vividus-framework/vividus/commit/5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T14:09:37Z", "type": "forcePushed"}, {"oid": "5f23ab99a921fd925845581a0668ee1640f238d9", "url": "https://github.com/vividus-framework/vividus/commit/5f23ab99a921fd925845581a0668ee1640f238d9", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T14:17:22Z", "type": "forcePushed"}, {"oid": "191a52d26c1ab88661b14c70ce8e70297cb45177", "url": "https://github.com/vividus-framework/vividus/commit/191a52d26c1ab88661b14c70ce8e70297cb45177", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T14:26:15Z", "type": "forcePushed"}, {"oid": "ef7f5eb7210631d612fec6899c1d40069a95c69a", "url": "https://github.com/vividus-framework/vividus/commit/ef7f5eb7210631d612fec6899c1d40069a95c69a", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T15:15:30Z", "type": "forcePushed"}, {"oid": "67b560bdd312f86b426280925eed90ba66f98fc6", "url": "https://github.com/vividus-framework/vividus/commit/67b560bdd312f86b426280925eed90ba66f98fc6", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T15:20:09Z", "type": "forcePushed"}, {"oid": "08c996d6cf95f39519d6193f7519cfd111c87fa5", "url": "https://github.com/vividus-framework/vividus/commit/08c996d6cf95f39519d6193f7519cfd111c87fa5", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T15:30:40Z", "type": "forcePushed"}, {"oid": "da19c725501f777ea90d5015d01d4164af54312a", "url": "https://github.com/vividus-framework/vividus/commit/da19c725501f777ea90d5015d01d4164af54312a", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T15:51:49Z", "type": "forcePushed"}, {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "url": "https://github.com/vividus-framework/vividus/commit/bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T15:57:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NDQ4Ng==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498984486", "bodyText": "midX -> centerX", "author": "valfirst", "createdAt": "2020-10-02T18:28:36Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.model;\n+\n+import org.openqa.selenium.Dimension;\n+\n+public enum SwipeDirection\n+{\n+    UP\n+    {\n+        @Override\n+        public SwipeCoordinates calculateCoordinates(Dimension dimension)\n+        {\n+            int midX = dimension.getWidth() / 2;", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java\nindex ee4946fb..f831a22f 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java\n\n@@ -25,9 +25,9 @@ public enum SwipeDirection\n         @Override\n         public SwipeCoordinates calculateCoordinates(Dimension dimension)\n         {\n-            int midX = dimension.getWidth() / 2;\n+            int centerX = dimension.getWidth() / 2;\n             int indent = dimension.getHeight() / VERTICAL_INDENT_COEFFICIENT;\n-            return new SwipeCoordinates(midX, dimension.getHeight() - indent, midX, indent);\n+            return new SwipeCoordinates(centerX, dimension.getHeight() - indent, centerX, indent);\n         }\n     },\n     DOWN\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NDY0OQ==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498984649", "bodyText": "midX -> centerX", "author": "valfirst", "createdAt": "2020-10-02T18:29:00Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.model;\n+\n+import org.openqa.selenium.Dimension;\n+\n+public enum SwipeDirection\n+{\n+    UP\n+    {\n+        @Override\n+        public SwipeCoordinates calculateCoordinates(Dimension dimension)\n+        {\n+            int midX = dimension.getWidth() / 2;\n+            int indent = dimension.getHeight() / VERTICAL_INDENT_COEFFICIENT;\n+            return new SwipeCoordinates(midX, dimension.getHeight() - indent, midX, indent);\n+        }\n+    },\n+    DOWN\n+    {\n+        @Override\n+        public SwipeCoordinates calculateCoordinates(Dimension dimension)\n+        {\n+            int midX = dimension.getWidth() / 2;", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java\nindex ee4946fb..f831a22f 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java\n\n@@ -25,9 +25,9 @@ public enum SwipeDirection\n         @Override\n         public SwipeCoordinates calculateCoordinates(Dimension dimension)\n         {\n-            int midX = dimension.getWidth() / 2;\n+            int centerX = dimension.getWidth() / 2;\n             int indent = dimension.getHeight() / VERTICAL_INDENT_COEFFICIENT;\n-            return new SwipeCoordinates(midX, dimension.getHeight() - indent, midX, indent);\n+            return new SwipeCoordinates(centerX, dimension.getHeight() - indent, centerX, indent);\n         }\n     },\n     DOWN\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTA0NQ==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498985045", "bodyText": "not clear", "author": "valfirst", "createdAt": "2020-10-02T18:29:41Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java", "diffHunk": "@@ -92,6 +100,33 @@ public void typeTextInField(String text, Locator locator)\n                 .ifPresent(e -> keyboardActions.typeText(e, text));\n     }\n \n+    /**\n+     * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param locator locator to find an element\n+     * @param duration between a pointer moves from the start to the end of the swipe coordinates", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\nindex a8956926..40b66634 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\n\n@@ -104,7 +104,7 @@ public class TouchSteps\n      * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n      * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n      * @param locator locator to find an element\n-     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param duration swipe duration in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format\n      */\n     @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n     public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTQyMw==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498985423", "bodyText": "it's so by default", "author": "valfirst", "createdAt": "2020-10-02T18:30:28Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java", "diffHunk": "@@ -92,6 +100,33 @@ public void typeTextInField(String text, Locator locator)\n                 .ifPresent(e -> keyboardActions.typeText(e, text));\n     }\n \n+    /**\n+     * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param locator locator to find an element\n+     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     */\n+    @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n+    public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n+    {\n+        locator.getSearchParameters()\n+               .setVisibility(Visibility.VISIBLE)", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMDQ0MQ==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499010441", "bodyText": "yes, but we can also set visibility by using locators, shouldn't we prevent user from like accident usage of visibility modifiers and ensure that the state of element should be visible?", "author": "uarlouski", "createdAt": "2020-10-02T19:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTQyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxODkwMg==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499018902", "bodyText": "nope, if you want to prevent it, then validate and throw an error, but you shouldn't change input parameters silently", "author": "valfirst", "createdAt": "2020-10-02T19:47:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\nindex a8956926..40b66634 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\n\n@@ -104,7 +104,7 @@ public class TouchSteps\n      * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n      * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n      * @param locator locator to find an element\n-     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param duration swipe duration in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format\n      */\n     @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n     public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTk1MA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498985950", "bodyText": "swipeWhile -> swipeUntil ?", "author": "valfirst", "createdAt": "2020-10-02T18:31:34Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java", "diffHunk": "@@ -92,6 +100,33 @@ public void typeTextInField(String text, Locator locator)\n                 .ifPresent(e -> keyboardActions.typeText(e, text));\n     }\n \n+    /**\n+     * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param locator locator to find an element\n+     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     */\n+    @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n+    public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n+    {\n+        locator.getSearchParameters()\n+               .setVisibility(Visibility.VISIBLE)\n+               .setWaitForElement(false);\n+\n+        List<WebElement> elements = searchActions.findElements(locator);\n+        if (elements.isEmpty())\n+        {\n+            touchActions.swipeWhile(direction, duration, () ->", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\nindex a8956926..40b66634 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java\n\n@@ -104,7 +104,7 @@ public class TouchSteps\n      * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n      * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n      * @param locator locator to find an element\n-     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param duration swipe duration in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format\n      */\n     @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n     public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NjU1OA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498986558", "bodyText": "MobileAppTestConfiguration -> MobileApplicationConfiguration", "author": "valfirst", "createdAt": "2020-10-02T18:32:51Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.configuration;\n+\n+import java.time.Duration;\n+\n+public class MobileAppTestConfiguration", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAwNjAwMA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499006000", "bodyText": "but this is not mobile application configuration, it's a bit confusing\nwe used to have MobileApp prefix carol mobile app module", "author": "uarlouski", "createdAt": "2020-10-02T19:16:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NjU1OA=="}], "type": "inlineReview", "revised_code": {"commit": "57cab5615ae37142447bb00d60e859a2fd98338d", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileApplicationConfiguration.java\nsimilarity index 88%\nrename from vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java\nrename to vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileApplicationConfiguration.java\nindex 0c9496d6..2f17a23b 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileApplicationConfiguration.java\n\n@@ -18,12 +18,12 @@ package org.vividus.bdd.mobileapp.configuration;\n \n import java.time.Duration;\n \n-public class MobileAppTestConfiguration\n+public class MobileApplicationConfiguration\n {\n     private final Duration swipeStabilizationDuration;\n     private final int swipeLimit;\n \n-    public MobileAppTestConfiguration(Duration swipeStabilizationDuration, int swipeLimit)\n+    public MobileApplicationConfiguration(Duration swipeStabilizationDuration, int swipeLimit)\n     {\n         this.swipeStabilizationDuration = swipeStabilizationDuration;\n         this.swipeLimit = swipeLimit;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NzEwNA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498987104", "bodyText": "add links to appium documentation", "author": "valfirst", "createdAt": "2020-10-02T18:33:53Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.ElementOption.element;\n+import static io.appium.java_client.touch.offset.PointOption.point;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.Duration;\n+import java.util.function.BooleanSupplier;\n+import java.util.function.UnaryOperator;\n+\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.remote.RemoteWebElement;\n+import org.vividus.bdd.mobileapp.configuration.MobileAppTestConfiguration;\n+import org.vividus.bdd.mobileapp.model.SwipeCoordinates;\n+import org.vividus.bdd.mobileapp.model.SwipeDirection;\n+import org.vividus.bdd.monitor.TakeScreenshotOnFailure;\n+import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.WebDriverUtil;\n+import org.vividus.selenium.manager.GenericWebDriverManager;\n+import org.vividus.selenium.screenshot.ScreenshotTaker;\n+import org.vividus.util.Sleeper;\n+\n+import io.appium.java_client.PerformsTouchActions;\n+import io.appium.java_client.TouchAction;\n+import io.appium.java_client.touch.offset.ElementOption;\n+import ru.yandex.qatools.ashot.util.ImageTool;\n+\n+@TakeScreenshotOnFailure\n+public class TouchActions\n+{\n+    private static final int HEIGHT_DIVIDER = 3;\n+\n+    private final IWebDriverProvider webDriverProvider;\n+    private final GenericWebDriverManager genericWebDriverManager;\n+    private final ScreenshotTaker screenshotTaker;\n+    private final MobileAppTestConfiguration mobileAppTestConfiguration;\n+\n+    public TouchActions(IWebDriverProvider webDriverProvider, GenericWebDriverManager genericWebDriverManager,\n+            ScreenshotTaker screenshotTaker, MobileAppTestConfiguration mobileAppTestConfiguration)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+        this.genericWebDriverManager = genericWebDriverManager;\n+        this.screenshotTaker = screenshotTaker;\n+        this.mobileAppTestConfiguration = mobileAppTestConfiguration;\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     */\n+    public void tap(WebElement element)\n+    {\n+        performAction(b -> b.tap(elementOption(element)));\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b> with specified <b>duration</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>wait for the duration</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     * @param duration between an element is pressed and released in\n+     * <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format, must not be {@code null}\n+     */\n+    public void tap(WebElement element, Duration duration)\n+    {\n+        performAction(b -> b.press(elementOption(element))\n+                            .waitAction(waitOptions(duration))\n+                            .release());\n+    }\n+\n+    /**\n+     * Swipes in <b>swipeDuration</b> direction until one of the following conditions happen:\n+     * <ul>\n+     * <li>the <b>stopCondition</b> return true result</li>\n+     * <li>the end of mobile scroll view is reached</li>\n+     * <li>the swipe limit is exceeded</li>\n+     * </ul>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param swipeDuration duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param stopCondition condition to stop swiping\n+     */\n+    public void swipeWhile(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n+    {\n+        /*\n+         * mobile:scroll\n+         * iOS\n+         * - scroll to an element works only if the element resides in UP scroll direction\n+         * - if the element in DOWN scroll direction, the command still tries to find the element in UP scroll direction\n+         * - payload is {\"element\" : \"hash\", \"toVisible\" : true}\n+         * Android\n+         * - supports only accessibility id, uiautomator strategies\n+         * - payload is {\"strategy\": \"accessibility id\", \"selector\": \"selector\"}", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java\nindex 836b7040..3636c2ef 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java\n\n@@ -109,7 +109,7 @@ public class TouchActions\n      * @param swipeDuration duration between a pointer moves from the start to the end of the swipe coordinates\n      * @param stopCondition condition to stop swiping\n      */\n-    public void swipeWhile(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n+    public void swipeUntil(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n     {\n         /*\n          * mobile:scroll\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4ODE4NQ==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498988185", "bodyText": "I believe there is no much sense to wrap it", "author": "valfirst", "createdAt": "2020-10-02T18:36:06Z", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.ElementOption.element;\n+import static io.appium.java_client.touch.offset.PointOption.point;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.Duration;\n+import java.util.function.BooleanSupplier;\n+import java.util.function.UnaryOperator;\n+\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.remote.RemoteWebElement;\n+import org.vividus.bdd.mobileapp.configuration.MobileAppTestConfiguration;\n+import org.vividus.bdd.mobileapp.model.SwipeCoordinates;\n+import org.vividus.bdd.mobileapp.model.SwipeDirection;\n+import org.vividus.bdd.monitor.TakeScreenshotOnFailure;\n+import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.WebDriverUtil;\n+import org.vividus.selenium.manager.GenericWebDriverManager;\n+import org.vividus.selenium.screenshot.ScreenshotTaker;\n+import org.vividus.util.Sleeper;\n+\n+import io.appium.java_client.PerformsTouchActions;\n+import io.appium.java_client.TouchAction;\n+import io.appium.java_client.touch.offset.ElementOption;\n+import ru.yandex.qatools.ashot.util.ImageTool;\n+\n+@TakeScreenshotOnFailure\n+public class TouchActions\n+{\n+    private static final int HEIGHT_DIVIDER = 3;\n+\n+    private final IWebDriverProvider webDriverProvider;\n+    private final GenericWebDriverManager genericWebDriverManager;\n+    private final ScreenshotTaker screenshotTaker;\n+    private final MobileAppTestConfiguration mobileAppTestConfiguration;\n+\n+    public TouchActions(IWebDriverProvider webDriverProvider, GenericWebDriverManager genericWebDriverManager,\n+            ScreenshotTaker screenshotTaker, MobileAppTestConfiguration mobileAppTestConfiguration)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+        this.genericWebDriverManager = genericWebDriverManager;\n+        this.screenshotTaker = screenshotTaker;\n+        this.mobileAppTestConfiguration = mobileAppTestConfiguration;\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     */\n+    public void tap(WebElement element)\n+    {\n+        performAction(b -> b.tap(elementOption(element)));\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b> with specified <b>duration</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>wait for the duration</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     * @param duration between an element is pressed and released in\n+     * <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format, must not be {@code null}\n+     */\n+    public void tap(WebElement element, Duration duration)\n+    {\n+        performAction(b -> b.press(elementOption(element))\n+                            .waitAction(waitOptions(duration))\n+                            .release());\n+    }\n+\n+    /**\n+     * Swipes in <b>swipeDuration</b> direction until one of the following conditions happen:\n+     * <ul>\n+     * <li>the <b>stopCondition</b> return true result</li>\n+     * <li>the end of mobile scroll view is reached</li>\n+     * <li>the swipe limit is exceeded</li>\n+     * </ul>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param swipeDuration duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param stopCondition condition to stop swiping\n+     */\n+    public void swipeWhile(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n+    {\n+        /*\n+         * mobile:scroll\n+         * iOS\n+         * - scroll to an element works only if the element resides in UP scroll direction\n+         * - if the element in DOWN scroll direction, the command still tries to find the element in UP scroll direction\n+         * - payload is {\"element\" : \"hash\", \"toVisible\" : true}\n+         * Android\n+         * - supports only accessibility id, uiautomator strategies\n+         * - payload is {\"strategy\": \"accessibility id\", \"selector\": \"selector\"}\n+         * */\n+\n+        int screenshotHeightToCompare = genericWebDriverManager.getSize().getHeight() / HEIGHT_DIVIDER;\n+        int heightOffset = screenshotHeightToCompare * 2;\n+\n+        Duration stabilizationDuration = mobileAppTestConfiguration.getSwipeStabilizationDuration();\n+        int swipeLimit = mobileAppTestConfiguration.getSwipeLimit();\n+        BufferedImage previousFrame = null;\n+        for (int count = 0; count <= swipeLimit; count++)\n+        {\n+            swipe(direction, swipeDuration);\n+            Sleeper.sleep(stabilizationDuration);\n+            if (stopCondition.getAsBoolean())\n+            {\n+                break;\n+            }\n+            BufferedImage area = takeScreenshot();\n+            BufferedImage currentFrame = area.getSubimage(0, area.getHeight() - heightOffset, area.getWidth(),\n+                    screenshotHeightToCompare);\n+            if (previousFrame != null && ImageTool.equalImage(currentFrame).matches(previousFrame))\n+            {\n+                break;\n+            }\n+            previousFrame = currentFrame;\n+            if (count == swipeLimit)\n+            {\n+                throw new IllegalStateException(\n+                        String.format(\"Swiping is stopped due to exceeded swipe limit '%d'\", swipeLimit));\n+            }\n+        }\n+    }\n+\n+    private BufferedImage takeScreenshot()\n+    {\n+        try\n+        {\n+            return screenshotTaker.takeViewportScreenshot();\n+        }\n+        catch (IOException e)\n+        {\n+            throw new UncheckedIOException(e);", "originalCommit": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAwOTYyOA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499009628", "bodyText": "using images is a temporary solution to determine swipes and it would look weird that the swipe gesture throws IOException because it doesn't imply any IO.", "author": "uarlouski", "createdAt": "2020-10-02T19:24:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4ODE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxNDk2Nw==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499014967", "bodyText": "ok, I buy it", "author": "valfirst", "createdAt": "2020-10-02T19:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4ODE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "chunk": "diff --git a/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java b/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java\nindex 836b7040..3636c2ef 100644\n--- a/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java\n+++ b/vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java\n\n@@ -109,7 +109,7 @@ public class TouchActions\n      * @param swipeDuration duration between a pointer moves from the start to the end of the swipe coordinates\n      * @param stopCondition condition to stop swiping\n      */\n-    public void swipeWhile(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n+    public void swipeUntil(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n     {\n         /*\n          * mobile:scroll\n"}}, {"oid": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "url": "https://github.com/vividus-framework/vividus/commit/67f35af6460b12642f0fdd760150a6a39ca0e0ae", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T19:22:06Z", "type": "forcePushed"}, {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d", "url": "https://github.com/vividus-framework/vividus/commit/57cab5615ae37142447bb00d60e859a2fd98338d", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T20:04:28Z", "type": "commit"}, {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d", "url": "https://github.com/vividus-framework/vividus/commit/57cab5615ae37142447bb00d60e859a2fd98338d", "message": "[plugin-mobile-app] Add swipe to element", "committedDate": "2020-10-02T20:04:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499130306", "bodyText": "there is a strategy for this?", "author": "ikalinin1", "createdAt": "2020-10-03T08:58:30Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "diffHunk": "@@ -16,9 +16,13 @@\n \n package org.vividus.selenium.screenshot;\n \n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n import java.util.Optional;\n \n public interface ScreenshotTaker\n {\n     Optional<Screenshot> takeScreenshot(String screenshotName);\n+\n+    BufferedImage takeViewportScreenshot() throws IOException;", "originalCommit": "57cab5615ae37142447bb00d60e859a2fd98338d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDM3Mg==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499130372", "bodyText": "takeScreenshot(ScreenshotShootingStrategy strategy) ?", "author": "ikalinin1", "createdAt": "2020-10-03T08:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzNjcwMw==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499136703", "bodyText": "usage of ScreenshotShootingStrategy is currently redundant for mobile app, also it's in common interface because it perfectly suites for both mobile and web platform", "author": "uarlouski", "createdAt": "2020-10-03T10:35:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxOTg4OA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499419888", "bodyText": "If you use the strategy there is no need to support screenshot taking code", "author": "ikalinin1", "createdAt": "2020-10-05T08:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyNzI2MA==", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499427260", "bodyText": "I don't need strategy in mobile application, I just need to take a screenshot of viewport without any additional handling", "author": "uarlouski", "createdAt": "2020-10-05T08:30:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg=="}], "type": "inlineReview", "revised_code": null}]}