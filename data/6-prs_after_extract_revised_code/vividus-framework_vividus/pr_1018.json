{"pr_number": 1018, "pr_title": "Added support for numbers with mantissa", "pr_createdAt": "2020-10-13T11:17:26Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1018", "timeline": [{"oid": "26d1609675ad441916e384aa0daa954e781d971c", "url": "https://github.com/vividus-framework/vividus/commit/26d1609675ad441916e384aa0daa954e781d971c", "message": "fix for vividus/issues/883", "committedDate": "2020-09-10T11:50:22Z", "type": "commit"}, {"oid": "54297a08ededd04ac69cb7c3b60f4f978236274d", "url": "https://github.com/vividus-framework/vividus/commit/54297a08ededd04ac69cb7c3b60f4f978236274d", "message": "check style fix", "committedDate": "2020-09-10T12:08:04Z", "type": "commit"}, {"oid": "c166e0e293b2bc0299dabc2a3b65830f703cf1d9", "url": "https://github.com/vividus-framework/vividus/commit/c166e0e293b2bc0299dabc2a3b65830f703cf1d9", "message": "Merge remote-tracking branch 'origin/master'", "committedDate": "2020-10-13T09:21:50Z", "type": "commit"}, {"oid": "51b22f5cc8f142b7824abef33cf3c589df278e7c", "url": "https://github.com/vividus-framework/vividus/commit/51b22f5cc8f142b7824abef33cf3c589df278e7c", "message": "adding unit and integration tests for RoundExpression", "committedDate": "2020-10-13T11:08:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDYwNA==", "url": "https://github.com/vividus-framework/vividus/pull/1018#discussion_r503894604", "bodyText": "this regex will also match the following invalid strings:\n\n0.15237E\n0.15237E-+2\n0.15237-2\n0.15237+2", "author": "valfirst", "createdAt": "2020-10-13T12:04:11Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java", "diffHunk": "@@ -38,8 +38,8 @@\n     {\n         String roundingModes = Stream.of(RoundingMode.values()).map(e -> e.name().toLowerCase())\n                 .collect(Collectors.joining(\"|\"));\n-        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?)(?:,\\\\s*(\\\\d+))?(?:,\\\\s*(%s))?\\\\))$\",\n-            roundingModes);\n+        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?[Ee]?-?\\\\+?\\\\d*)\"", "originalCommit": "51b22f5cc8f142b7824abef33cf3c589df278e7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk4OTU3OQ==", "url": "https://github.com/vividus-framework/vividus/pull/1018#discussion_r503989579", "bodyText": "fixed", "author": "BViktoryia", "createdAt": "2020-10-13T14:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxMTMwNQ==", "url": "https://github.com/vividus-framework/vividus/pull/1018#discussion_r504011305", "bodyText": "I believe all items from the comment above should be added to negative unit tests", "author": "valfirst", "createdAt": "2020-10-13T14:44:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYwNzY0NA==", "url": "https://github.com/vividus-framework/vividus/pull/1018#discussion_r504607644", "bodyText": "added", "author": "BViktoryia", "createdAt": "2020-10-14T11:39:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "5bfec607fff8f90ef1f245242991fdfd976c350c", "chunk": "diff --git a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java\nindex 24419b26..d2021072 100644\n--- a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java\n+++ b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java\n\n@@ -38,8 +38,8 @@ public class RoundExpressionProcessor implements IExpressionProcessor\n     {\n         String roundingModes = Stream.of(RoundingMode.values()).map(e -> e.name().toLowerCase())\n                 .collect(Collectors.joining(\"|\"));\n-        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?[Ee]?-?\\\\+?\\\\d*)\"\n-                        + \"(?:,\\\\s*(\\\\d+))?(?:,\\\\s*(%s))?\\\\))$\", roundingModes);\n+        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?(?:[Ee]+-?\\\\d+)?)(?:,\\\\s*(\\\\d+))?\"\n+                + \"(?:,\\\\s*(%s))?\\\\))$\", roundingModes);\n         ROUND_EXPRESSION_PATTERN = Pattern.compile(pattern, Pattern.CASE_INSENSITIVE);\n     }\n \n"}}, {"oid": "5bfec607fff8f90ef1f245242991fdfd976c350c", "url": "https://github.com/vividus-framework/vividus/commit/5bfec607fff8f90ef1f245242991fdfd976c350c", "message": "the regex was fixed", "committedDate": "2020-10-13T14:16:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxNTEyMQ==", "url": "https://github.com/vividus-framework/vividus/pull/1018#discussion_r504015121", "bodyText": "the pattern won't match 0.15237E+2 which is a valid number", "author": "valfirst", "createdAt": "2020-10-13T14:48:29Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java", "diffHunk": "@@ -38,8 +38,8 @@\n     {\n         String roundingModes = Stream.of(RoundingMode.values()).map(e -> e.name().toLowerCase())\n                 .collect(Collectors.joining(\"|\"));\n-        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?)(?:,\\\\s*(\\\\d+))?(?:,\\\\s*(%s))?\\\\))$\",\n-            roundingModes);\n+        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?(?:[Ee]+-?\\\\d+)?)(?:,\\\\s*(\\\\d+))?\"", "originalCommit": "5bfec607fff8f90ef1f245242991fdfd976c350c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYwNzgwMA==", "url": "https://github.com/vividus-framework/vividus/pull/1018#discussion_r504607800", "bodyText": "fixed", "author": "BViktoryia", "createdAt": "2020-10-14T11:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxNTEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ec13a678900d6d48966f4c623a2735a779c4a24a", "chunk": "diff --git a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java\nindex d2021072..e311cc6c 100644\n--- a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java\n+++ b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RoundExpressionProcessor.java\n\n@@ -38,7 +38,7 @@ public class RoundExpressionProcessor implements IExpressionProcessor\n     {\n         String roundingModes = Stream.of(RoundingMode.values()).map(e -> e.name().toLowerCase())\n                 .collect(Collectors.joining(\"|\"));\n-        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?(?:[Ee]+-?\\\\d+)?)(?:,\\\\s*(\\\\d+))?\"\n+        String pattern = String.format(\"^round(?:\\\\((-?\\\\d+(?:\\\\.\\\\d*)?(?:[Ee]+(?:-|\\\\+)?\\\\d+)?)(?:,\\\\s*(\\\\d+))?\"\n                 + \"(?:,\\\\s*(%s))?\\\\))$\", roundingModes);\n         ROUND_EXPRESSION_PATTERN = Pattern.compile(pattern, Pattern.CASE_INSENSITIVE);\n     }\n"}}, {"oid": "ec13a678900d6d48966f4c623a2735a779c4a24a", "url": "https://github.com/vividus-framework/vividus/commit/ec13a678900d6d48966f4c623a2735a779c4a24a", "message": "the regex was fixed and added the negative tests", "committedDate": "2020-10-14T11:34:50Z", "type": "commit"}]}