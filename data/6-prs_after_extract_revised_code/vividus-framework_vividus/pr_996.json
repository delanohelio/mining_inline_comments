{"pr_number": 996, "pr_title": "Add DISTINCTING table transformer", "pr_createdAt": "2020-10-06T21:54:49Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/996", "timeline": [{"oid": "271797c6b51efbe85e82abf195371ee3edf6d481", "url": "https://github.com/vividus-framework/vividus/commit/271797c6b51efbe85e82abf195371ee3edf6d481", "message": "Add DISTINCTING table transformer", "committedDate": "2020-10-07T07:02:59Z", "type": "forcePushed"}, {"oid": "412a204cb68c1959a1449d052148bafc17c8ff43", "url": "https://github.com/vividus-framework/vividus/commit/412a204cb68c1959a1449d052148bafc17c8ff43", "message": "Add DISTINCTING table transformer", "committedDate": "2020-10-07T08:53:36Z", "type": "forcePushed"}, {"oid": "8296a9c3f5cfc1ba62359b722da372fd4aa635d9", "url": "https://github.com/vividus-framework/vividus/commit/8296a9c3f5cfc1ba62359b722da372fd4aa635d9", "message": "Add DISTINCTING table transformer", "committedDate": "2020-10-07T10:01:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwOTA1OA==", "url": "https://github.com/vividus-framework/vividus/pull/996#discussion_r501009058", "bodyText": "z -> use some menaingful name", "author": "ikalinin1", "createdAt": "2020-10-07T13:24:49Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Named;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.jbehave.core.model.ExamplesTable.TableRows;\n+import org.jbehave.core.model.TableParsers;\n+import org.vividus.bdd.util.ExamplesTableProcessor;\n+\n+@Named(\"DISTINCTING\")\n+public class DistinctingTableTransformer extends AbstractFilteringTableTransformer\n+{\n+    @Override\n+    public String transform(String tableAsString, TableParsers tableParsers, TableProperties tableProperties)\n+    {\n+        String byColumnNames = ExtendedTableTransformer.getMandatoryNonBlankProperty(tableProperties,\n+                BY_COLUMNS_NAMES_PROPERTY);\n+        TableRows tableRows = tableParsers.parseRows(tableAsString, tableProperties);\n+        List<String> filteredColumnNames = filterColumnNames(tableRows.getHeaders(), byColumnNames);\n+        List<Map<String, String>> rows = tableRows.getRows();\n+        filterRowsByColumnNames(rows, filteredColumnNames);\n+\n+        Map<Integer, Map<String, String>> z = rows.stream().collect(", "originalCommit": "8296a9c3f5cfc1ba62359b722da372fd4aa635d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35d849cf39119b9affa48db52448f920a25fc0e7", "chunk": "diff --git a/vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java b/vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java\nindex dbaf0687..59063439 100644\n--- a/vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java\n+++ b/vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java\n\n@@ -44,10 +44,9 @@ public class DistinctingTableTransformer extends AbstractFilteringTableTransform\n         List<Map<String, String>> rows = tableRows.getRows();\n         filterRowsByColumnNames(rows, filteredColumnNames);\n \n-        Map<Integer, Map<String, String>> z = rows.stream().collect(\n+        Collection<Map<String, String>> distinctRows = rows.stream().collect(\n                 Collectors.toMap(row -> Objects.hash(row.values().toArray()), Function.identity(), (v1, v2) -> v1,\n-                LinkedHashMap::new));\n-        Collection<Map<String, String>> distinctRows = z.values();\n+                        LinkedHashMap::new)).values();\n \n         return ExamplesTableProcessor.buildExamplesTable(filteredColumnNames, distinctRows, tableProperties);\n     }\n"}}, {"oid": "35d849cf39119b9affa48db52448f920a25fc0e7", "url": "https://github.com/vividus-framework/vividus/commit/35d849cf39119b9affa48db52448f920a25fc0e7", "message": "Add DISTINCTING table transformer", "committedDate": "2020-10-07T14:11:22Z", "type": "commit"}, {"oid": "35d849cf39119b9affa48db52448f920a25fc0e7", "url": "https://github.com/vividus-framework/vividus/commit/35d849cf39119b9affa48db52448f920a25fc0e7", "message": "Add DISTINCTING table transformer", "committedDate": "2020-10-07T14:11:22Z", "type": "forcePushed"}]}