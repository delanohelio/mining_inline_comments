{"pr_number": 1216, "pr_title": "[plugin-browserstack] Add link to public browserstack report", "pr_createdAt": "2020-12-10T16:47:22Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1216", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTcyNQ==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540349725", "bodyText": "why is it needed?", "author": "valfirst", "createdAt": "2020-12-10T17:16:11Z", "path": "vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java", "diffHunk": "@@ -441,6 +442,23 @@ public void onAttachmentPublish(AttachmentPublishEvent event)\n         lifecycle.addAttachment(attachment.getTitle(), attachment.getContentType(), null, attachment.getContent());\n     }\n \n+    @Subscribe\n+    public void onLinkPublish(LinkPublishEvent event)\n+    {\n+        lifecycle.updateTestCase(getRootStepId(), result ->\n+        {\n+            boolean exists = result.getLinks().stream()", "originalCommit": "3ad87e9eb71060c80a84f75d3fdf99d6ef8f5dcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3MTM1MQ==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540371351", "bodyText": "to avoid multiple links received from GivenStories scenarios at Scenario level", "author": "uarlouski", "createdAt": "2020-12-10T17:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "chunk": "diff --git a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\nindex dc3072f8..356f498a 100644\n--- a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n+++ b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n\n@@ -447,13 +447,16 @@ public class AllureStoryReporter extends ChainedStoryReporter implements IAllure\n     {\n         lifecycle.updateTestCase(getRootStepId(), result ->\n         {\n+            String name = event.getName();\n+            String url = event.getUrl();\n+\n             boolean exists = result.getLinks().stream()\n-                                              .anyMatch(l -> l.getUrl().equals(event.getUrl())\n-                                                      && l.getName().equals(event.getName()));\n+                                              .anyMatch(l -> l.getUrl().equals(url) && l.getName().equals(name));\n \n             if (!exists)\n             {\n-                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(), \"tms\");\n+                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(),\n+                        ResultsUtils.CUSTOM_LINK_TYPE);\n                 result.getLinks().add(link);\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTg0Ng==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540349846", "bodyText": "why tms?", "author": "valfirst", "createdAt": "2020-12-10T17:16:21Z", "path": "vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java", "diffHunk": "@@ -441,6 +442,23 @@ public void onAttachmentPublish(AttachmentPublishEvent event)\n         lifecycle.addAttachment(attachment.getTitle(), attachment.getContentType(), null, attachment.getContent());\n     }\n \n+    @Subscribe\n+    public void onLinkPublish(LinkPublishEvent event)\n+    {\n+        lifecycle.updateTestCase(getRootStepId(), result ->\n+        {\n+            boolean exists = result.getLinks().stream()\n+                                              .anyMatch(l -> l.getUrl().equals(event.getUrl())\n+                                                      && l.getName().equals(event.getName()));\n+\n+            if (!exists)\n+            {\n+                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(), \"tms\");", "originalCommit": "3ad87e9eb71060c80a84f75d3fdf99d6ef8f5dcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3MjExMg==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540372112", "bodyText": "there is no much variety, either issue or tms, we can consider introducing new icon for links in the future", "author": "uarlouski", "createdAt": "2020-12-10T17:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwNjQxMA==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540406410", "bodyText": "you can use any link type, the difference is that custom link types won't have icons", "author": "valfirst", "createdAt": "2020-12-10T18:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwNzY1Mg==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540407652", "bodyText": "yes, but this will look like plain txt, that's why I excluded this from the choice", "author": "uarlouski", "createdAt": "2020-12-10T18:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0MzgwNQ==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540443805", "bodyText": "TMS - Test management system, not every link points to TMS, so the event should have ability to provide link type, it won't have any icon, but that's better than misleading icon", "author": "valfirst", "createdAt": "2020-12-10T19:37:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0OTg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "chunk": "diff --git a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\nindex dc3072f8..356f498a 100644\n--- a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n+++ b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n\n@@ -447,13 +447,16 @@ public class AllureStoryReporter extends ChainedStoryReporter implements IAllure\n     {\n         lifecycle.updateTestCase(getRootStepId(), result ->\n         {\n+            String name = event.getName();\n+            String url = event.getUrl();\n+\n             boolean exists = result.getLinks().stream()\n-                                              .anyMatch(l -> l.getUrl().equals(event.getUrl())\n-                                                      && l.getName().equals(event.getName()));\n+                                              .anyMatch(l -> l.getUrl().equals(url) && l.getName().equals(name));\n \n             if (!exists)\n             {\n-                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(), \"tms\");\n+                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(),\n+                        ResultsUtils.CUSTOM_LINK_TYPE);\n                 result.getLinks().add(link);\n             }\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1MTk2OQ==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540351969", "bodyText": "I believe you can have a sinlge class for all BS steps (only 2)", "author": "valfirst", "createdAt": "2020-12-10T17:19:18Z", "path": "vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.browserstack.steps;\n+\n+import com.browserstack.automate.model.Session;\n+import com.browserstack.client.exception.BrowserStackException;\n+import com.google.common.eventbus.EventBus;\n+\n+import org.jbehave.core.annotations.AfterScenario;\n+import org.openqa.selenium.remote.RemoteWebDriver;\n+import org.vividus.browserstack.BrowserStackAutomateClient;\n+import org.vividus.reporter.event.LinkPublishEvent;\n+import org.vividus.selenium.IWebDriverProvider;\n+\n+public class BrowserStackSteps\n+{\n+    private final IWebDriverProvider webDriverProvider;\n+    private final EventBus eventBus;\n+    private final BrowserStackAutomateClient appAutomateClient;\n+\n+    public BrowserStackSteps(IWebDriverProvider webDriverProvider, EventBus eventBus,\n+            BrowserStackAutomateClient appAutomateClient)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus = eventBus;\n+        this.appAutomateClient = appAutomateClient;\n+    }\n+\n+    @AfterScenario\n+    public void publishReport() throws BrowserStackException", "originalCommit": "3ad87e9eb71060c80a84f75d3fdf99d6ef8f5dcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3MzI4OA==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540373288", "bodyText": "it's more clear when we separate steps used by users and not by users\nsome users may dig into implementation, such steps can bring additional noise", "author": "uarlouski", "createdAt": "2020-12-10T17:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwNzY5Mg==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540407692", "bodyText": "if users are skilled enough to read java code, then there should be no problem to have any other methods in the class", "author": "valfirst", "createdAt": "2020-12-10T18:39:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MDUyMg==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540470522", "bodyText": "what is advantage of putting two completely different sets of functionality into one class?", "author": "uarlouski", "createdAt": "2020-12-10T20:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1MTk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "chunk": "diff --git a/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java b/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java\nindex edbc5242..e7ef24d7 100644\n--- a/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java\n+++ b/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java\n\n@@ -19,12 +19,14 @@ package org.vividus.bdd.browserstack.steps;\n import com.browserstack.automate.model.Session;\n import com.browserstack.client.exception.BrowserStackException;\n import com.google.common.eventbus.EventBus;\n+import com.google.common.eventbus.Subscribe;\n \n import org.jbehave.core.annotations.AfterScenario;\n import org.openqa.selenium.remote.RemoteWebDriver;\n import org.vividus.browserstack.BrowserStackAutomateClient;\n import org.vividus.reporter.event.LinkPublishEvent;\n import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.event.WebDriverQuitEvent;\n \n public class BrowserStackSteps\n {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1MjI2OA==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540352268", "bodyText": "publishSessionLink", "author": "valfirst", "createdAt": "2020-12-10T17:19:42Z", "path": "vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.browserstack.steps;\n+\n+import com.browserstack.automate.model.Session;\n+import com.browserstack.client.exception.BrowserStackException;\n+import com.google.common.eventbus.EventBus;\n+\n+import org.jbehave.core.annotations.AfterScenario;\n+import org.openqa.selenium.remote.RemoteWebDriver;\n+import org.vividus.browserstack.BrowserStackAutomateClient;\n+import org.vividus.reporter.event.LinkPublishEvent;\n+import org.vividus.selenium.IWebDriverProvider;\n+\n+public class BrowserStackSteps\n+{\n+    private final IWebDriverProvider webDriverProvider;\n+    private final EventBus eventBus;\n+    private final BrowserStackAutomateClient appAutomateClient;\n+\n+    public BrowserStackSteps(IWebDriverProvider webDriverProvider, EventBus eventBus,\n+            BrowserStackAutomateClient appAutomateClient)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus = eventBus;\n+        this.appAutomateClient = appAutomateClient;\n+    }\n+\n+    @AfterScenario\n+    public void publishReport() throws BrowserStackException", "originalCommit": "3ad87e9eb71060c80a84f75d3fdf99d6ef8f5dcb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "chunk": "diff --git a/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java b/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java\nindex edbc5242..e7ef24d7 100644\n--- a/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java\n+++ b/vividus-plugin-browserstack/src/main/java/org/vividus/bdd/browserstack/steps/BrowserStackSteps.java\n\n@@ -19,12 +19,14 @@ package org.vividus.bdd.browserstack.steps;\n import com.browserstack.automate.model.Session;\n import com.browserstack.client.exception.BrowserStackException;\n import com.google.common.eventbus.EventBus;\n+import com.google.common.eventbus.Subscribe;\n \n import org.jbehave.core.annotations.AfterScenario;\n import org.openqa.selenium.remote.RemoteWebDriver;\n import org.vividus.browserstack.BrowserStackAutomateClient;\n import org.vividus.reporter.event.LinkPublishEvent;\n import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.event.WebDriverQuitEvent;\n \n public class BrowserStackSteps\n {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1ODAzNQ==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540358035", "bodyText": "what about caching event.getUrl/getName?", "author": "ikalinin1", "createdAt": "2020-12-10T17:27:44Z", "path": "vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java", "diffHunk": "@@ -441,6 +442,23 @@ public void onAttachmentPublish(AttachmentPublishEvent event)\n         lifecycle.addAttachment(attachment.getTitle(), attachment.getContentType(), null, attachment.getContent());\n     }\n \n+    @Subscribe\n+    public void onLinkPublish(LinkPublishEvent event)\n+    {\n+        lifecycle.updateTestCase(getRootStepId(), result ->\n+        {\n+            boolean exists = result.getLinks().stream()\n+                                              .anyMatch(l -> l.getUrl().equals(event.getUrl())", "originalCommit": "3ad87e9eb71060c80a84f75d3fdf99d6ef8f5dcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2MDU1MQ==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r540360551", "bodyText": "notExists and noneMatch", "author": "ikalinin1", "createdAt": "2020-12-10T17:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1ODAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "chunk": "diff --git a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\nindex dc3072f8..356f498a 100644\n--- a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n+++ b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n\n@@ -447,13 +447,16 @@ public class AllureStoryReporter extends ChainedStoryReporter implements IAllure\n     {\n         lifecycle.updateTestCase(getRootStepId(), result ->\n         {\n+            String name = event.getName();\n+            String url = event.getUrl();\n+\n             boolean exists = result.getLinks().stream()\n-                                              .anyMatch(l -> l.getUrl().equals(event.getUrl())\n-                                                      && l.getName().equals(event.getName()));\n+                                              .anyMatch(l -> l.getUrl().equals(url) && l.getName().equals(name));\n \n             if (!exists)\n             {\n-                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(), \"tms\");\n+                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(),\n+                        ResultsUtils.CUSTOM_LINK_TYPE);\n                 result.getLinks().add(link);\n             }\n         });\n"}}, {"oid": "7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "url": "https://github.com/vividus-framework/vividus/commit/7a839e5bdc2b39bb011c4f742980fe132de1ab0f", "message": "[plugin-browserstack] Add link to public browserstack report", "committedDate": "2020-12-15T14:51:05Z", "type": "forcePushed"}, {"oid": "872936978e15ad93ee6b5243aaa746139c72e7bd", "url": "https://github.com/vividus-framework/vividus/commit/872936978e15ad93ee6b5243aaa746139c72e7bd", "message": "[plugin-browserstack] Add link to public browserstack report", "committedDate": "2020-12-15T16:00:08Z", "type": "forcePushed"}, {"oid": "d7af4e7bf7ce226c5f3a4a8ebe262d6dadfba9b5", "url": "https://github.com/vividus-framework/vividus/commit/d7af4e7bf7ce226c5f3a4a8ebe262d6dadfba9b5", "message": "[plugin-browserstack] Add link to public browserstack report", "committedDate": "2020-12-15T19:12:27Z", "type": "forcePushed"}, {"oid": "bd082dcfce12e987f040674266b2314532420288", "url": "https://github.com/vividus-framework/vividus/commit/bd082dcfce12e987f040674266b2314532420288", "message": "[plugin-browserstack] Add link to public browserstack report", "committedDate": "2020-12-15T19:50:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3MTgzNw==", "url": "https://github.com/vividus-framework/vividus/pull/1216#discussion_r544071837", "bodyText": "just new Link()... ?", "author": "valfirst", "createdAt": "2020-12-16T07:29:51Z", "path": "vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java", "diffHunk": "@@ -441,6 +442,26 @@ public void onAttachmentPublish(AttachmentPublishEvent event)\n         lifecycle.addAttachment(attachment.getTitle(), attachment.getContentType(), null, attachment.getContent());\n     }\n \n+    @Subscribe\n+    public void onLinkPublish(LinkPublishEvent event)\n+    {\n+        lifecycle.updateTestCase(getRootStepId(), result ->\n+        {\n+            String name = event.getName();\n+            String url = event.getUrl();\n+\n+            boolean notExists = result.getLinks().stream()\n+                                              .noneMatch(l -> l.getUrl().equals(url) && l.getName().equals(name));\n+\n+            if (notExists)\n+            {\n+                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(),", "originalCommit": "bd082dcfce12e987f040674266b2314532420288", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4a2c1932eff35c9bebe6a351ea95325f939fa829", "chunk": "diff --git a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\nindex f74554c0..2839eccc 100644\n--- a/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n+++ b/vividus-allure-adaptor/src/main/java/org/vividus/bdd/report/allure/AllureStoryReporter.java\n\n@@ -455,8 +455,7 @@ public class AllureStoryReporter extends ChainedStoryReporter implements IAllure\n \n             if (notExists)\n             {\n-                Link link = ResultsUtils.createLink(null, event.getName(), event.getUrl(),\n-                        ResultsUtils.CUSTOM_LINK_TYPE);\n+                Link link = new Link().setName(name).setUrl(url);\n                 result.getLinks().add(link);\n             }\n         });\n"}}, {"oid": "4a2c1932eff35c9bebe6a351ea95325f939fa829", "url": "https://github.com/vividus-framework/vividus/commit/4a2c1932eff35c9bebe6a351ea95325f939fa829", "message": "[plugin-browserstack] Add link to public browserstack report", "committedDate": "2020-12-16T07:58:05Z", "type": "commit"}, {"oid": "4a2c1932eff35c9bebe6a351ea95325f939fa829", "url": "https://github.com/vividus-framework/vividus/commit/4a2c1932eff35c9bebe6a351ea95325f939fa829", "message": "[plugin-browserstack] Add link to public browserstack report", "committedDate": "2020-12-16T07:58:05Z", "type": "forcePushed"}]}