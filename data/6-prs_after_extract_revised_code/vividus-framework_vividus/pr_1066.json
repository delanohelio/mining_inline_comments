{"pr_number": 1066, "pr_title": "Add plugin for browserstack", "pr_createdAt": "2020-10-26T11:34:38Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1066", "timeline": [{"oid": "0d67c6131b2d265741979c5c47f213745e94f727", "url": "https://github.com/vividus-framework/vividus/commit/0d67c6131b2d265741979c5c47f213745e94f727", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T12:16:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyMDg2Mw==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511920863", "bodyText": "sauceOptions -> nestedOptions", "author": "valfirst", "createdAt": "2020-10-26T12:26:04Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,\n+            Object capabilityValue)\n+    {\n+        Map<String, Object> sauceOptions = (Map<String, Object>) capabilities.getCapability(mapKey);", "originalCommit": "0d67c6131b2d265741979c5c47f213745e94f727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3df91b432e6e15ef2585181154623cf633c3a108", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\nindex 6fd921355..90d5da695 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n\n@@ -24,15 +24,14 @@ import org.openqa.selenium.remote.DesiredCapabilities;\n public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n {\n     @SuppressWarnings(\"unchecked\")\n-    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,\n-            Object capabilityValue)\n+    protected void putNestedCapability(DesiredCapabilities capabilities, String outerKey, String innerKey, Object value)\n     {\n-        Map<String, Object> sauceOptions = (Map<String, Object>) capabilities.getCapability(mapKey);\n-        if (sauceOptions == null)\n+        Map<String, Object> nestedOptions = (Map<String, Object>) capabilities.getCapability(outerKey);\n+        if (nestedOptions == null)\n         {\n-            sauceOptions = new HashMap<>();\n-            capabilities.setCapability(mapKey, sauceOptions);\n+            nestedOptions = new HashMap<>();\n+            capabilities.setCapability(outerKey, nestedOptions);\n         }\n-        sauceOptions.put(capabilityKey, capabilityValue);\n+        nestedOptions.put(innerKey, value);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyMzUyMg==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511923522", "bodyText": "putNestedCapability", "author": "valfirst", "createdAt": "2020-10-26T12:30:52Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,", "originalCommit": "0d67c6131b2d265741979c5c47f213745e94f727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3df91b432e6e15ef2585181154623cf633c3a108", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\nindex 6fd921355..90d5da695 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n\n@@ -24,15 +24,14 @@ import org.openqa.selenium.remote.DesiredCapabilities;\n public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n {\n     @SuppressWarnings(\"unchecked\")\n-    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,\n-            Object capabilityValue)\n+    protected void putNestedCapability(DesiredCapabilities capabilities, String outerKey, String innerKey, Object value)\n     {\n-        Map<String, Object> sauceOptions = (Map<String, Object>) capabilities.getCapability(mapKey);\n-        if (sauceOptions == null)\n+        Map<String, Object> nestedOptions = (Map<String, Object>) capabilities.getCapability(outerKey);\n+        if (nestedOptions == null)\n         {\n-            sauceOptions = new HashMap<>();\n-            capabilities.setCapability(mapKey, sauceOptions);\n+            nestedOptions = new HashMap<>();\n+            capabilities.setCapability(outerKey, nestedOptions);\n         }\n-        sauceOptions.put(capabilityKey, capabilityValue);\n+        nestedOptions.put(innerKey, value);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyNDAyMw==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511924023", "bodyText": "mapKey -> outerKey", "author": "valfirst", "createdAt": "2020-10-26T12:31:49Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,", "originalCommit": "0d67c6131b2d265741979c5c47f213745e94f727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3df91b432e6e15ef2585181154623cf633c3a108", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\nindex 6fd921355..90d5da695 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n\n@@ -24,15 +24,14 @@ import org.openqa.selenium.remote.DesiredCapabilities;\n public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n {\n     @SuppressWarnings(\"unchecked\")\n-    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,\n-            Object capabilityValue)\n+    protected void putNestedCapability(DesiredCapabilities capabilities, String outerKey, String innerKey, Object value)\n     {\n-        Map<String, Object> sauceOptions = (Map<String, Object>) capabilities.getCapability(mapKey);\n-        if (sauceOptions == null)\n+        Map<String, Object> nestedOptions = (Map<String, Object>) capabilities.getCapability(outerKey);\n+        if (nestedOptions == null)\n         {\n-            sauceOptions = new HashMap<>();\n-            capabilities.setCapability(mapKey, sauceOptions);\n+            nestedOptions = new HashMap<>();\n+            capabilities.setCapability(outerKey, nestedOptions);\n         }\n-        sauceOptions.put(capabilityKey, capabilityValue);\n+        nestedOptions.put(innerKey, value);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyNDE1NA==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511924154", "bodyText": "capabilityKey -> innerKey", "author": "valfirst", "createdAt": "2020-10-26T12:32:02Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,", "originalCommit": "0d67c6131b2d265741979c5c47f213745e94f727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3df91b432e6e15ef2585181154623cf633c3a108", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\nindex 6fd921355..90d5da695 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java\n\n@@ -24,15 +24,14 @@ import org.openqa.selenium.remote.DesiredCapabilities;\n public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n {\n     @SuppressWarnings(\"unchecked\")\n-    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,\n-            Object capabilityValue)\n+    protected void putNestedCapability(DesiredCapabilities capabilities, String outerKey, String innerKey, Object value)\n     {\n-        Map<String, Object> sauceOptions = (Map<String, Object>) capabilities.getCapability(mapKey);\n-        if (sauceOptions == null)\n+        Map<String, Object> nestedOptions = (Map<String, Object>) capabilities.getCapability(outerKey);\n+        if (nestedOptions == null)\n         {\n-            sauceOptions = new HashMap<>();\n-            capabilities.setCapability(mapKey, sauceOptions);\n+            nestedOptions = new HashMap<>();\n+            capabilities.setCapability(outerKey, nestedOptions);\n         }\n-        sauceOptions.put(capabilityKey, capabilityValue);\n+        nestedOptions.put(innerKey, value);\n     }\n }\n"}}, {"oid": "3df91b432e6e15ef2585181154623cf633c3a108", "url": "https://github.com/vividus-framework/vividus/commit/3df91b432e6e15ef2585181154623cf633c3a108", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T13:18:14Z", "type": "forcePushed"}, {"oid": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba", "url": "https://github.com/vividus-framework/vividus/commit/8e0ce53f21bbea2e11beae937a0e2b0daccc70ba", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T13:59:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxODA4NA==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512018084", "bodyText": "n -> name", "author": "valfirst", "createdAt": "2020-10-26T14:48:02Z", "path": "vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import java.util.Optional;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+import org.vividus.selenium.AbstractDesiredCapabilitiesConfigurer;\n+\n+public class BrowserStackCapabilitiesConfigurer extends AbstractDesiredCapabilitiesConfigurer\n+{\n+    private final IBddRunContext bddRunContext;\n+    private boolean browserStackEnabled;\n+\n+    public BrowserStackCapabilitiesConfigurer(IBddRunContext bddRunContext)\n+    {\n+        this.bddRunContext = bddRunContext;\n+    }\n+\n+    @Override\n+    public void configure(DesiredCapabilities desiredCapabilities)\n+    {\n+        if (browserStackEnabled)\n+        {\n+            Optional.ofNullable(bddRunContext.getRunningStory())\n+                    .map(RunningStory::getName)\n+                    .ifPresent(n -> putNestedCapability(desiredCapabilities, \"bstack:options\", \"sessionName\", n));", "originalCommit": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "673efdccfeae5f3bc67bcda5ea60c726b714ee68", "chunk": "diff --git a/vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java b/vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java\nindex a493d2644..b57260abe 100644\n--- a/vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java\n+++ b/vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java\n\n@@ -40,7 +40,7 @@ public class BrowserStackCapabilitiesConfigurer extends AbstractDesiredCapabilit\n         {\n             Optional.ofNullable(bddRunContext.getRunningStory())\n                     .map(RunningStory::getName)\n-                    .ifPresent(n -> putNestedCapability(desiredCapabilities, \"bstack:options\", \"sessionName\", n));\n+                    .ifPresent(name -> putNestedCapability(desiredCapabilities, \"bstack:options\", \"sessionName\", name));\n         }\n     }\n \n"}}, {"oid": "673efdccfeae5f3bc67bcda5ea60c726b714ee68", "url": "https://github.com/vividus-framework/vividus/commit/673efdccfeae5f3bc67bcda5ea60c726b714ee68", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T14:59:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2Nzg2NQ==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512067865", "bodyText": "this test doesn't look correct: it has neither assert not verify\n(I see the logic of afterEach, but that's wrong: single test logic is spread across multiple methods without explicit relation)", "author": "valfirst", "createdAt": "2020-10-26T15:50:21Z", "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BrowserStackCapabilitiesConfigurerTests\n+{\n+    @Mock private IBddRunContext bddRunContext;\n+    @Mock private DesiredCapabilities desiredCapabilities;\n+    @InjectMocks private BrowserStackCapabilitiesConfigurer configurer;\n+\n+    @AfterEach\n+    void afterEach()\n+    {\n+        verifyNoMoreInteractions(bddRunContext, desiredCapabilities);\n+    }\n+\n+    @Test\n+    void shouldNotConfigureCapabilitiesIfBrowserStackInDisabled()\n+    {\n+        configurer.setBrowserStackEnabled(false);\n+        configurer.configure(desiredCapabilities);", "originalCommit": "673efdccfeae5f3bc67bcda5ea60c726b714ee68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1OTk4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512159981", "bodyText": "hmm why single test logic is spread? afterEach() contains test logic that is applicable for all the tests in this class, additionally the verification in afterEach makes all verifications in this test redundant", "author": "uarlouski", "createdAt": "2020-10-26T17:56:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2Nzg2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxOTUxOQ==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512219519", "bodyText": "#1067 adding unit testing agreement to avoid test business logic in before and after each", "author": "uarlouski", "createdAt": "2020-10-26T19:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2Nzg2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae3384cb0cc4f230317cd15f13c36bcc78d571cd", "chunk": "diff --git a/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java b/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java\nindex 84d7ae8a5..c1b5bbc8f 100644\n--- a/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java\n+++ b/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java\n\n@@ -24,7 +24,6 @@ import static org.mockito.Mockito.when;\n import java.util.HashMap;\n import java.util.Map;\n \n-import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.InjectMocks;\n"}}, {"oid": "ae3384cb0cc4f230317cd15f13c36bcc78d571cd", "url": "https://github.com/vividus-framework/vividus/commit/ae3384cb0cc4f230317cd15f13c36bcc78d571cd", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T19:25:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxMzM1OA==", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512213358", "bodyText": "verifyNoMoreInteractions -> verifyNoInteractions", "author": "valfirst", "createdAt": "2020-10-26T19:26:14Z", "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BrowserStackCapabilitiesConfigurerTests\n+{\n+    @Mock private IBddRunContext bddRunContext;\n+    @Mock private DesiredCapabilities desiredCapabilities;\n+    @InjectMocks private BrowserStackCapabilitiesConfigurer configurer;\n+\n+    @Test\n+    void shouldNotConfigureCapabilitiesIfBrowserStackInDisabled()\n+    {\n+        configurer.setBrowserStackEnabled(false);\n+        configurer.configure(desiredCapabilities);\n+        verifyNoMoreInteractions(bddRunContext, desiredCapabilities);", "originalCommit": "ae3384cb0cc4f230317cd15f13c36bcc78d571cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f0fa94b2f160d6378eac1d6a4a78f830602a7613", "chunk": "diff --git a/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java b/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java\nindex c1b5bbc8f..217f79216 100644\n--- a/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java\n+++ b/vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java\n\n@@ -18,6 +18,7 @@ package org.vividus.selenium.browserstack;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoInteractions;\n import static org.mockito.Mockito.verifyNoMoreInteractions;\n import static org.mockito.Mockito.when;\n \n"}}, {"oid": "f0fa94b2f160d6378eac1d6a4a78f830602a7613", "url": "https://github.com/vividus-framework/vividus/commit/f0fa94b2f160d6378eac1d6a4a78f830602a7613", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T19:38:33Z", "type": "commit"}, {"oid": "f0fa94b2f160d6378eac1d6a4a78f830602a7613", "url": "https://github.com/vividus-framework/vividus/commit/f0fa94b2f160d6378eac1d6a4a78f830602a7613", "message": "Add plugin for browserstack", "committedDate": "2020-10-26T19:38:33Z", "type": "forcePushed"}]}