{"pr_number": 1165, "pr_title": "[plugin-kafka] Add ability to consume messages from Kafka", "pr_createdAt": "2020-11-23T17:27:42Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1165", "timeline": [{"oid": "4dd284a1719f91663edcb78d6c86748bcdcc6025", "url": "https://github.com/vividus-framework/vividus/commit/4dd284a1719f91663edcb78d6c86748bcdcc6025", "message": "[plugin-kafka] Add ability to consume messages from Kafka", "committedDate": "2020-11-23T18:06:51Z", "type": "forcePushed"}, {"oid": "08f4df72c12676f939a18df3ef582392ebc19e20", "url": "https://github.com/vividus-framework/vividus/commit/08f4df72c12676f939a18df3ef582392ebc19e20", "message": "[plugin-kafka] Add ability to consume messages from Kafka", "committedDate": "2020-11-24T13:04:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzNzEzMA==", "url": "https://github.com/vividus-framework/vividus/pull/1165#discussion_r529537130", "bodyText": "does it make sense to add topics into the log message?", "author": "ikalinin1", "createdAt": "2020-11-24T13:17:26Z", "path": "vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java", "diffHunk": "@@ -58,4 +101,88 @@ public void sendData(String data, String topic) throws InterruptedException, Exe\n     {\n         kafkaTemplate.send(topic, data).get(WAIT_TIMEOUT_IN_MINUTES, TimeUnit.MINUTES);\n     }\n+\n+    /**\n+     * Starts the Kafka consumer with the provided configuration to listen the specified topics. The consumer must be\n+     * stopped when it's not needed.\n+     *\n+     * @param topics the comma-separated set of topics to listen\n+     */\n+    @When(\"I start consuming messages from Kafka topics `$topics`\")\n+    public void startKafkaListener(Set<String> topics)\n+    {\n+        BlockingQueue<String> messageQueue = new LinkedBlockingDeque<>();\n+        testContext.put(MESSAGES_KEY, messageQueue);\n+        ContainerProperties containerProperties = new ContainerProperties(topics.toArray(new String[0]));\n+        containerProperties.setMessageListener(\n+                (MessageListener<String, String>) data -> messageQueue.add(data.value()));\n+        KafkaMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(consumerFactory,\n+                containerProperties);\n+        container.start();\n+        testContext.put(LISTENER_KEY, container);\n+        LOGGER.info(\"Kafka message listener is started\");", "originalCommit": "08f4df72c12676f939a18df3ef582392ebc19e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzOTg4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/1165#discussion_r529539881", "bodyText": "the data is logged by kafka client:", "author": "valfirst", "createdAt": "2020-11-24T13:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzNzEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "e7778474e991012caef33f8abfa7c8bca2052a66", "chunk": "diff --git a/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java b/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java\nindex ffde9c19..8eeb85c3 100644\n--- a/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java\n+++ b/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java\n\n@@ -116,7 +118,7 @@ public class KafkaSteps\n         ContainerProperties containerProperties = new ContainerProperties(topics.toArray(new String[0]));\n         containerProperties.setMessageListener(\n                 (MessageListener<String, String>) data -> messageQueue.add(data.value()));\n-        KafkaMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(consumerFactory,\n+        GenericMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(consumerFactory,\n                 containerProperties);\n         container.start();\n         testContext.put(LISTENER_KEY, container);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzODczOQ==", "url": "https://github.com/vividus-framework/vividus/pull/1165#discussion_r529538739", "bodyText": "Could you please clarify why the polling duration is a hardcoded value?", "author": "ikalinin1", "createdAt": "2020-11-24T13:20:03Z", "path": "vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java", "diffHunk": "@@ -58,4 +101,88 @@ public void sendData(String data, String topic) throws InterruptedException, Exe\n     {\n         kafkaTemplate.send(topic, data).get(WAIT_TIMEOUT_IN_MINUTES, TimeUnit.MINUTES);\n     }\n+\n+    /**\n+     * Starts the Kafka consumer with the provided configuration to listen the specified topics. The consumer must be\n+     * stopped when it's not needed.\n+     *\n+     * @param topics the comma-separated set of topics to listen\n+     */\n+    @When(\"I start consuming messages from Kafka topics `$topics`\")\n+    public void startKafkaListener(Set<String> topics)\n+    {\n+        BlockingQueue<String> messageQueue = new LinkedBlockingDeque<>();\n+        testContext.put(MESSAGES_KEY, messageQueue);\n+        ContainerProperties containerProperties = new ContainerProperties(topics.toArray(new String[0]));\n+        containerProperties.setMessageListener(\n+                (MessageListener<String, String>) data -> messageQueue.add(data.value()));\n+        KafkaMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(consumerFactory,\n+                containerProperties);\n+        container.start();\n+        testContext.put(LISTENER_KEY, container);\n+        LOGGER.info(\"Kafka message listener is started\");\n+    }\n+\n+    /**\n+     * Waits until the count of the consumed messaged (from the consumer start or after the last draining operation)\n+     * matches to the rule or until the timeout is exceeded.\n+     *\n+     * @param timeout        the maximum time to wait for the messages in ISO-8601 format\n+     * @param comparisonRule The rule to compare values\n+     *                       (<i>Possible values:<b> less than, less than or equal to, greater than, greater than or\n+     *                       equal to,\n+     *                       equal to</b></i>)\n+     * @param expectedCount  the expected count of the messages to be matched by the rule\n+     */\n+    @When(\"I wait with `$timeout` timeout until count of consumed Kafka messages is $comparisonRule `$expectedCount`\")\n+    public void waitForKafkaMessages(Duration timeout, ComparisonRule comparisonRule, int expectedCount)\n+    {\n+        Matcher<Integer> countMatcher = comparisonRule.getComparisonRule(expectedCount);\n+        Integer result = new DurationBasedWaiter(timeout, Duration.ofSeconds(1)).wait(", "originalCommit": "08f4df72c12676f939a18df3ef582392ebc19e20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MjQ4MA==", "url": "https://github.com/vividus-framework/vividus/pull/1165#discussion_r529542480", "bodyText": "we poll the data from memory (testContext), so it's cheap,\nIMHO, 1 second is a period which could save test time and at the same time it's not so much for humans (like, 1s or 0.5s - it doesn't matter for users)", "author": "valfirst", "createdAt": "2020-11-24T13:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzODczOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0NDU5NA==", "url": "https://github.com/vividus-framework/vividus/pull/1165#discussion_r529544594", "bodyText": "", "author": "valfirst", "createdAt": "2020-11-24T13:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzODczOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e7778474e991012caef33f8abfa7c8bca2052a66", "chunk": "diff --git a/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java b/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java\nindex ffde9c19..8eeb85c3 100644\n--- a/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java\n+++ b/vividus-plugin-kafka/src/main/java/org/vividus/bdd/steps/kafka/KafkaSteps.java\n\n@@ -116,7 +118,7 @@ public class KafkaSteps\n         ContainerProperties containerProperties = new ContainerProperties(topics.toArray(new String[0]));\n         containerProperties.setMessageListener(\n                 (MessageListener<String, String>) data -> messageQueue.add(data.value()));\n-        KafkaMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(consumerFactory,\n+        GenericMessageListenerContainer<String, String> container = new KafkaMessageListenerContainer<>(consumerFactory,\n                 containerProperties);\n         container.start();\n         testContext.put(LISTENER_KEY, container);\n"}}, {"oid": "e7778474e991012caef33f8abfa7c8bca2052a66", "url": "https://github.com/vividus-framework/vividus/commit/e7778474e991012caef33f8abfa7c8bca2052a66", "message": "[plugin-kafka] Add ability to consume messages from Kafka", "committedDate": "2020-11-24T13:50:15Z", "type": "commit"}, {"oid": "e7778474e991012caef33f8abfa7c8bca2052a66", "url": "https://github.com/vividus-framework/vividus/commit/e7778474e991012caef33f8abfa7c8bca2052a66", "message": "[plugin-kafka] Add ability to consume messages from Kafka", "committedDate": "2020-11-24T13:50:15Z", "type": "forcePushed"}]}