{"pr_number": 857, "pr_title": "[plugin-web-app] Add keys combination pressing functionality", "pr_createdAt": "2020-08-26T07:49:57Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/857", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDY0OQ==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477190649", "bodyText": "copy-pasted logic", "author": "uarlouski", "createdAt": "2020-08-26T10:12:03Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyDown(Keys.valueOf(kye));\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Type getArgumentType()\n+        {\n+            return argumentType;\n+        }\n+    },\n+    KEY_UP(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyUp(Keys.valueOf(kye));\n+                }\n+            });\n+        }", "originalCommit": "c5981cd3406679a0ddfd59f74106c02eb7e0c666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDU5Nw==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840597", "bodyText": "refactored", "author": "VitaliLebedzeu", "createdAt": "2020-08-28T05:37:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDY0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "31dcce51f74395f554b67326d4610d878ef6fb72", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\nindex 6581475a..4465d049 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n\n@@ -140,14 +140,7 @@ public enum SequenceActionType\n         @Override\n         public void addAction(Actions actions, Object argument)\n         {\n-            perform(argument, (List<String> arg) -> {\n-                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n-                for (String kye : arg)\n-                {\n-                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n-                    actions.keyDown(Keys.valueOf(kye));\n-                }\n-            });\n+            perform(argument, getKeyConsumer(actions));\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MTY4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477191681", "bodyText": "why public?", "author": "uarlouski", "createdAt": "2020-08-26T10:14:02Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -144,6 +194,9 @@ public Type getArgumentType()\n         }\n     };\n \n+    public static final String EMPTY_KEY_LIST_EXCEPTION = \"At least one key should be provided.\";\n+    public static final String WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT = \"The '%s' is not allowed as a key\";", "originalCommit": "c5981cd3406679a0ddfd59f74106c02eb7e0c666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDcwNA==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840704", "bodyText": "excluded by refactoring", "author": "VitaliLebedzeu", "createdAt": "2020-08-28T05:37:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MTY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "31dcce51f74395f554b67326d4610d878ef6fb72", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\nindex 6581475a..4465d049 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n\n@@ -194,9 +180,6 @@ public enum SequenceActionType\n         }\n     };\n \n-    public static final String EMPTY_KEY_LIST_EXCEPTION = \"At least one key should be provided.\";\n-    public static final String WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT = \"The '%s' is not allowed as a key\";\n-\n     private final boolean nullable;\n \n     SequenceActionType(boolean nullable)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193345", "bodyText": "duplicate entry", "author": "valfirst", "createdAt": "2020-08-26T10:17:06Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -173,11 +175,26 @@ public void executeActionsSequence(List<Action> actions)\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n      * </td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n+     * <td>KEY_DOWN</td>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * </td>\n+     * <td>CONTROL,SHIFT</td>\n+     * </tr>\n+     * <tr>\n+     * <td>PRESS_KEYS</td>", "originalCommit": "c5981cd3406679a0ddfd59f74106c02eb7e0c666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTk3Mw==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478151973", "bodyText": "fixed", "author": "VitaliLebedzeu", "createdAt": "2020-08-27T05:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI4MDQxNQ==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478280415", "bodyText": "not fixed", "author": "valfirst", "createdAt": "2020-08-27T09:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5NDk4Mw==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478294983", "bodyText": "Yep, because I haven't pushed it yet.", "author": "VitaliLebedzeu", "createdAt": "2020-08-27T09:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDg0Nw==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840847", "bodyText": "rewrite", "author": "VitaliLebedzeu", "createdAt": "2020-08-28T05:38:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "31dcce51f74395f554b67326d4610d878ef6fb72", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java\nindex 94f9c0f5..5a617a1a 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java\n\n@@ -175,22 +175,22 @@ public class ActionSteps\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td>\n-     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n-     * </td>\n+     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a></td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n      * <td>KEY_DOWN</td>\n      * <td>\n-     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     *     key \u2013 Either <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     *     SHIFT, ALT or CONTROL.\n      * </td>\n      * <td>CONTROL,SHIFT</td>\n      * </tr>\n      * <tr>\n-     * <td>PRESS_KEYS</td>\n+     * <td>KEY_UP</td>\n      * <td>\n-     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     *     key \u2013 Either <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     *     SHIFT, ALT or CONTROL.\n      * </td>\n      * <td>CONTROL,SHIFT</td>\n      * </tr>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzQ5OA==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193498", "bodyText": "kye -> key", "author": "valfirst", "createdAt": "2020-08-26T10:17:26Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)", "originalCommit": "c5981cd3406679a0ddfd59f74106c02eb7e0c666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDg3Mw==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840873", "bodyText": "refactored", "author": "VitaliLebedzeu", "createdAt": "2020-08-28T05:38:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzQ5OA=="}], "type": "inlineReview", "revised_code": {"commit": "31dcce51f74395f554b67326d4610d878ef6fb72", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\nindex 6581475a..4465d049 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n\n@@ -140,14 +140,7 @@ public enum SequenceActionType\n         @Override\n         public void addAction(Actions actions, Object argument)\n         {\n-            perform(argument, (List<String> arg) -> {\n-                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n-                for (String kye : arg)\n-                {\n-                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n-                    actions.keyDown(Keys.valueOf(kye));\n-                }\n-            });\n+            perform(argument, getKeyConsumer(actions));\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5NDIyOA==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477194228", "bodyText": "this code is very similar to KEY_DOWN entry, please consider refactoring to extract the same code to a new method and then reuse it", "author": "valfirst", "createdAt": "2020-08-26T10:18:58Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyDown(Keys.valueOf(kye));\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Type getArgumentType()\n+        {\n+            return argumentType;\n+        }\n+    },\n+    KEY_UP(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyUp(Keys.valueOf(kye));\n+                }\n+            });\n+        }", "originalCommit": "c5981cd3406679a0ddfd59f74106c02eb7e0c666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDkwMg==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840902", "bodyText": "refactored", "author": "VitaliLebedzeu", "createdAt": "2020-08-28T05:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5NDIyOA=="}], "type": "inlineReview", "revised_code": {"commit": "31dcce51f74395f554b67326d4610d878ef6fb72", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\nindex 6581475a..4465d049 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n\n@@ -140,14 +140,7 @@ public enum SequenceActionType\n         @Override\n         public void addAction(Actions actions, Object argument)\n         {\n-            perform(argument, (List<String> arg) -> {\n-                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n-                for (String kye : arg)\n-                {\n-                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n-                    actions.keyDown(Keys.valueOf(kye));\n-                }\n-            });\n+            perform(argument, getKeyConsumer(actions));\n         }\n \n         @Override\n"}}, {"oid": "31dcce51f74395f554b67326d4610d878ef6fb72", "url": "https://github.com/vividus-framework/vividus/commit/31dcce51f74395f554b67326d4610d878ef6fb72", "message": "[plugin-web-app] Add keys combination pressing functionality", "committedDate": "2020-08-28T05:21:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3NDE2Mw==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r479174163", "bodyText": "KEY_DOWN(false)\n    {\n        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n\n        @Override\n        public void addAction(Actions actions, Object argument)\n        {\n            perform(argument, (List<String> args) -> buildKeysActions(args, actions::keyDown));\n        }\n\n        @Override\n        public Type getArgumentType()\n        {\n            return argumentType;\n        }\n    },\n    KEY_UP(false)\n    {\n        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n\n        @Override\n        public void addAction(Actions actions, Object argument)\n        {\n            perform(argument, (List<String> args) -> buildKeysActions(args, actions::keyUp));\n        }\n\n        @Override\n        public Type getArgumentType()\n        {\n            return argumentType;\n        }\n    },\n...\n\n    private static void buildKeysActions(List<String> keys, Consumer<CharSequence> actionBuilder)\n    {\n        notEmpty(keys, \"At least one key should be provided\");\n        keys.stream()\n            .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))\n            .map(Keys::valueOf)\n            .forEach(actionBuilder);\n    }", "author": "valfirst", "createdAt": "2020-08-28T11:38:35Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -179,9 +215,31 @@ public boolean isNullable()\n         }\n         else\n         {\n-            Validate.isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n+            isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n                     \"Argument for %s action must be of type %s\", name(), getArgumentType());\n             argumentConsumer.accept((U) argument);\n         }\n     }\n+\n+    Consumer<List<String>> getKeyConsumer(Actions actions)\n+    {\n+        return (List<String> arg) -> {\n+            notEmpty(arg, \"At least one key should be provided.\");\n+            arg.forEach(key ->\n+            {\n+                isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key);\n+                switch (this.name())\n+                {\n+                    case \"KEY_DOWN\":\n+                        actions.keyDown(Keys.valueOf(key));\n+                        break;\n+                    case \"KEY_UP\":\n+                        actions.keyUp(Keys.valueOf(key));\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            });\n+        };\n+    }", "originalCommit": "31dcce51f74395f554b67326d4610d878ef6fb72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTczNzczNg==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r479737736", "bodyText": "Thanks! refactored", "author": "VitaliLebedzeu", "createdAt": "2020-08-30T08:09:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3NDE2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f4c80a38341384aea3ccdfb89831789b6cbbeb19", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\nindex 4465d049..47291a9a 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n\n@@ -221,25 +221,12 @@ public enum SequenceActionType\n         }\n     }\n \n-    Consumer<List<String>> getKeyConsumer(Actions actions)\n-    {\n-        return (List<String> arg) -> {\n-            notEmpty(arg, \"At least one key should be provided.\");\n-            arg.forEach(key ->\n-            {\n-                isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key);\n-                switch (this.name())\n-                {\n-                    case \"KEY_DOWN\":\n-                        actions.keyDown(Keys.valueOf(key));\n-                        break;\n-                    case \"KEY_UP\":\n-                        actions.keyUp(Keys.valueOf(key));\n-                        break;\n-                    default:\n-                        break;\n-                }\n-            });\n-        };\n+    private static void buildKeysActions(List<String> keys, Consumer<CharSequence> actionBuilder)\n+    {\n+        notEmpty(keys, \"At least one key should be provided\");\n+        keys.stream()\n+                .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))\n+                .map(Keys::valueOf)\n+                .forEach(actionBuilder);\n     }\n }\n"}}, {"oid": "f4c80a38341384aea3ccdfb89831789b6cbbeb19", "url": "https://github.com/vividus-framework/vividus/commit/f4c80a38341384aea3ccdfb89831789b6cbbeb19", "message": "[plugin-web-app] Add keys combination pressing functionality", "committedDate": "2020-08-30T07:54:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4ODUyOA==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r479988528", "bodyText": "please align stream method invocations", "author": "uarlouski", "createdAt": "2020-08-31T08:51:22Z", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -179,9 +215,18 @@ public boolean isNullable()\n         }\n         else\n         {\n-            Validate.isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n+            isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n                     \"Argument for %s action must be of type %s\", name(), getArgumentType());\n             argumentConsumer.accept((U) argument);\n         }\n     }\n+\n+    private static void buildKeysActions(List<String> keys, Consumer<CharSequence> actionBuilder)\n+    {\n+        notEmpty(keys, \"At least one key should be provided\");\n+        keys.stream()\n+                .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))", "originalCommit": "f4c80a38341384aea3ccdfb89831789b6cbbeb19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDc5Mjc2NA==", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r480792764", "bodyText": "fixed", "author": "VitaliLebedzeu", "createdAt": "2020-09-01T04:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4ODUyOA=="}], "type": "inlineReview", "revised_code": {"commit": "f6f30fb7d7f683f8a255c018cb23e53309bce1d0", "chunk": "diff --git a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\nindex 47291a9a..b0a0b881 100644\n--- a/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n+++ b/vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java\n\n@@ -225,8 +225,8 @@ public enum SequenceActionType\n     {\n         notEmpty(keys, \"At least one key should be provided\");\n         keys.stream()\n-                .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))\n-                .map(Keys::valueOf)\n-                .forEach(actionBuilder);\n+            .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))\n+            .map(Keys::valueOf)\n+            .forEach(actionBuilder);\n     }\n }\n"}}, {"oid": "f6f30fb7d7f683f8a255c018cb23e53309bce1d0", "url": "https://github.com/vividus-framework/vividus/commit/f6f30fb7d7f683f8a255c018cb23e53309bce1d0", "message": "[plugin-web-app] Add keys combination pressing functionality", "committedDate": "2020-08-31T10:35:58Z", "type": "commit"}, {"oid": "f6f30fb7d7f683f8a255c018cb23e53309bce1d0", "url": "https://github.com/vividus-framework/vividus/commit/f6f30fb7d7f683f8a255c018cb23e53309bce1d0", "message": "[plugin-web-app] Add keys combination pressing functionality", "committedDate": "2020-08-31T10:35:58Z", "type": "forcePushed"}]}