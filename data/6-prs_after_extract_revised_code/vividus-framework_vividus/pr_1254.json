{"pr_number": 1254, "pr_title": "[bdd-engine] Fix variables resolution for the values with preceding `}`", "pr_createdAt": "2020-12-18T10:28:17Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/1254", "timeline": [{"oid": "d96e1228d8dd0c9c2a2609c50f2f74dc8a137d72", "url": "https://github.com/vividus-framework/vividus/commit/d96e1228d8dd0c9c2a2609c50f2f74dc8a137d72", "message": "[bdd-engine] Fix variables resolution for the values with preceding `}`", "committedDate": "2020-12-18T13:15:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1Mw==", "url": "https://github.com/vividus-framework/vividus/pull/1254#discussion_r545851953", "bodyText": "why is lenient required now?", "author": "valfirst", "createdAt": "2020-12-18T14:06:56Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java", "diffHunk": "@@ -61,11 +61,13 @@ private Object convert(String value)\n             \" ${var:default},                       var:default,     value, value\",\n             \" ${var:},                              var:,            value, value\",\n             \" '{\\\"ids\\\": [\\\"${var}\\\", \\\"12-ce\\\"]}', var,             value, '{\\\"ids\\\": [\\\"value\\\", \\\"12-ce\\\"]}'\",\n-            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\"\n+            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\",\n+            \" '#{exp(\\\\}{BNS_TRX_ID=, A, ${var})}', var,             value, '#{exp(\\\\}{BNS_TRX_ID=, A, value)}'\",\n+            \" [JAVA_HOME=].*[^${PATH}].*,           var,             value, [JAVA_HOME=].*[^${PATH}].*\"\n     })\n     void shouldResolveVariables(String valueToResolve, String variableKey, String variableValue, String expected)\n     {\n-        when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);\n+        lenient().when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);", "originalCommit": "d96e1228d8dd0c9c2a2609c50f2f74dc8a137d72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MTE5Ng==", "url": "https://github.com/vividus-framework/vividus/pull/1254#discussion_r546561196", "bodyText": "Because there is an unnecessary mocking for the last example, but I feel it is better to keep all the cases in one place", "author": "ikalinin1", "createdAt": "2020-12-21T08:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzAzMg==", "url": "https://github.com/vividus-framework/vividus/pull/1254#discussion_r546567032", "bodyText": "in this case the last value can be moved to shouldReturnTheSameValueWhenNothingToResolve", "author": "valfirst", "createdAt": "2020-12-21T08:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ea49af2be50528554e716c7ed29eb1e6371a837f", "chunk": "diff --git a/vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java b/vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java\nindex d6b03c320..f85302214 100644\n--- a/vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java\n+++ b/vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java\n\n@@ -63,11 +63,11 @@ class VariableResolverTests\n             \" '{\\\"ids\\\": [\\\"${var}\\\", \\\"12-ce\\\"]}', var,             value, '{\\\"ids\\\": [\\\"value\\\", \\\"12-ce\\\"]}'\",\n             \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\",\n             \" '#{exp(\\\\}{BNS_TRX_ID=, A, ${var})}', var,             value, '#{exp(\\\\}{BNS_TRX_ID=, A, value)}'\",\n-            \" [JAVA_HOME=].*[^${PATH}].*,           var,             value, [JAVA_HOME=].*[^${PATH}].*\"\n+            \" [JAVA_HOME=${var}].*[^${PATH}].*,     var,             value, [JAVA_HOME=value].*[^${PATH}].*\"\n     })\n     void shouldResolveVariables(String valueToResolve, String variableKey, String variableValue, String expected)\n     {\n-        lenient().when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);\n+        when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);\n         assertEquals(expected, convert(valueToResolve));\n     }\n \n"}}, {"oid": "ea49af2be50528554e716c7ed29eb1e6371a837f", "url": "https://github.com/vividus-framework/vividus/commit/ea49af2be50528554e716c7ed29eb1e6371a837f", "message": "[bdd-engine] Fix variables resolution for the values with preceding `}`", "committedDate": "2020-12-21T09:55:11Z", "type": "commit"}, {"oid": "ea49af2be50528554e716c7ed29eb1e6371a837f", "url": "https://github.com/vividus-framework/vividus/commit/ea49af2be50528554e716c7ed29eb1e6371a837f", "message": "[bdd-engine] Fix variables resolution for the values with preceding `}`", "committedDate": "2020-12-21T09:55:11Z", "type": "forcePushed"}]}