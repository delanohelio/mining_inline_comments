{"pr_number": 466, "pr_title": "[plugin-db] Add step to merge two datasets", "pr_createdAt": "2020-04-02T21:31:24Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/466", "timeline": [{"oid": "e8d2ecc0bc7f9cb1cc30e2b6dbacb08eeaebfb1d", "url": "https://github.com/vividus-framework/vividus/commit/e8d2ecc0bc7f9cb1cc30e2b6dbacb08eeaebfb1d", "message": "[plugin-db] Add step to merge two datasets", "committedDate": "2020-04-02T21:32:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NzUyNw==", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402767527", "bodyText": "Left:   %s - tripled space", "author": "valfirst", "createdAt": "2020-04-03T06:44:50Z", "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "diffHunk": "@@ -136,6 +137,37 @@ public void executeSql(String sqlQuery, String dbKey, Set<VariableScope> scopes,\n         bddVariableContext.putVariable(scopes, variableName, result);\n     }\n \n+    /**\n+     * Joins two data sets from previously executed SQL queries;\n+     * @param left data set to join\n+     * @param right data set to join\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName a name of variable to store a result\n+     */\n+    @When(\"I merge `$left` and `$right` and save result to $scopes variable `$variableName`\")\n+    public void joinDataSets(List<Map<String, Object>> left, List<Map<String, Object>> right,\n+            Set<VariableScope> scopes, String variableName)\n+    {\n+        List<Map<String, Object>> result = new ArrayList<>(left.size() + right.size());\n+        if (!left.isEmpty() && !right.isEmpty())\n+        {\n+            Set<String> leftHeader = left.get(0).keySet();\n+            Set<String> rightHeader = right.get(0).keySet();\n+            Validate.isTrue(leftHeader.equals(rightHeader),\n+                    \"Data sets should have same columns;\\nLeft:   %s\\nRight: %s\", leftHeader, rightHeader);", "originalCommit": "e8d2ecc0bc7f9cb1cc30e2b6dbacb08eeaebfb1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NjE0Mw==", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402896143", "bodyText": "Left:  [1, 2, 3]\nRight: [1, 2, 3]", "author": "ikalinin1", "createdAt": "2020-04-03T10:01:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NzUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NzE5NQ==", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402897195", "bodyText": "Two is enough you're right", "author": "ikalinin1", "createdAt": "2020-04-03T10:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NzUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "e7dc5ae78481a5a4863244e2cf279cf418b5f571", "chunk": "diff --git a/vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java b/vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java\nindex 8d2bf504..20928efb 100644\n--- a/vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java\n+++ b/vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java\n\n@@ -161,7 +161,7 @@ public class DatabaseSteps\n             Set<String> leftHeader = left.get(0).keySet();\n             Set<String> rightHeader = right.get(0).keySet();\n             Validate.isTrue(leftHeader.equals(rightHeader),\n-                    \"Data sets should have same columns;\\nLeft:   %s\\nRight: %s\", leftHeader, rightHeader);\n+                    \"Data sets should have same columns;\\nLeft:  %s\\nRight: %s\", leftHeader, rightHeader);\n         }\n         result.addAll(left);\n         result.addAll(right);\n"}}, {"oid": "e7dc5ae78481a5a4863244e2cf279cf418b5f571", "url": "https://github.com/vividus-framework/vividus/commit/e7dc5ae78481a5a4863244e2cf279cf418b5f571", "message": "[plugin-db] Add step to merge two datasets", "committedDate": "2020-04-03T10:23:22Z", "type": "forcePushed"}, {"oid": "60dd0af1678d739819837014291d9bdc0d7a7279", "url": "https://github.com/vividus-framework/vividus/commit/60dd0af1678d739819837014291d9bdc0d7a7279", "message": "[plugin-db] Add step to merge two datasets", "committedDate": "2020-04-03T10:26:44Z", "type": "commit"}, {"oid": "60dd0af1678d739819837014291d9bdc0d7a7279", "url": "https://github.com/vividus-framework/vividus/commit/60dd0af1678d739819837014291d9bdc0d7a7279", "message": "[plugin-db] Add step to merge two datasets", "committedDate": "2020-04-03T10:26:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk0NjI4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402946281", "bodyText": "please mention this in docs", "author": "uarlouski", "createdAt": "2020-04-03T11:42:02Z", "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "diffHunk": "@@ -136,6 +137,37 @@ public void executeSql(String sqlQuery, String dbKey, Set<VariableScope> scopes,\n         bddVariableContext.putVariable(scopes, variableName, result);\n     }\n \n+    /**\n+     * Joins two data sets from previously executed SQL queries;\n+     * @param left data set to join\n+     * @param right data set to join\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName a name of variable to store a result\n+     */\n+    @When(\"I merge `$left` and `$right` and save result to $scopes variable `$variableName`\")\n+    public void joinDataSets(List<Map<String, Object>> left, List<Map<String, Object>> right,\n+            Set<VariableScope> scopes, String variableName)\n+    {\n+        List<Map<String, Object>> result = new ArrayList<>(left.size() + right.size());\n+        if (!left.isEmpty() && !right.isEmpty())\n+        {\n+            Set<String> leftHeader = left.get(0).keySet();\n+            Set<String> rightHeader = right.get(0).keySet();\n+            Validate.isTrue(leftHeader.equals(rightHeader),\n+                    \"Data sets should have same columns;\\nLeft:  %s\\nRight: %s\", leftHeader, rightHeader);", "originalCommit": "60dd0af1678d739819837014291d9bdc0d7a7279", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}