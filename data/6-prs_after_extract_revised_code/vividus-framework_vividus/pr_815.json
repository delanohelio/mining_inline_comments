{"pr_number": 815, "pr_title": "Introduce set of expressions for URI parts encoding", "pr_createdAt": "2020-08-14T07:59:36Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/815", "timeline": [{"oid": "c4b3fe559b0afbafc847bfc18fd5e4f129046cc4", "url": "https://github.com/vividus-framework/vividus/commit/c4b3fe559b0afbafc847bfc18fd5e4f129046cc4", "message": "Introduce set of expressions for URI parts encoding", "committedDate": "2020-08-14T08:10:19Z", "type": "forcePushed"}, {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "url": "https://github.com/vividus-framework/vividus/commit/ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "message": "Introduce set of expressions for URI parts encoding", "committedDate": "2020-08-14T08:12:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3OTU2OA==", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470479568", "bodyText": "Users will try to use it as is #{encideUriXyz()} :)", "author": "ikalinin1", "createdAt": "2020-08-14T08:18:47Z", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessorTests.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.expression;\n+\n+import static com.github.valfirst.slf4jtest.LoggingEvent.warn;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import com.github.valfirst.slf4jtest.TestLogger;\n+import com.github.valfirst.slf4jtest.TestLoggerFactory;\n+import com.github.valfirst.slf4jtest.TestLoggerFactoryExtension;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n+\n+@ExtendWith(TestLoggerFactoryExtension.class)\n+class EncodeUrlExpressionProcessorTests\n+{\n+    private final IExpressionProcessor processor = new EncodeUrlExpressionProcessor();\n+\n+    private final TestLogger logger = TestLoggerFactory.getTestLogger(EncodeUrlExpressionProcessor.class);\n+\n+    @Test\n+    void testExecuteWithUnsupportedException()\n+    {\n+        assertEquals(Optional.empty(), processor.execute(\"encodeUri(value)\"));\n+    }\n+\n+    @ParameterizedTest(name = \"{index}: for expression \\\"{0}\\\", result is \\\"{1}\\\"\")\n+    @CsvSource({\n+        \"encodeUrl(/wiki/w3schools), %2Fwiki%2Fw3schools\",\n+        \"encodeUrl(/wls/recipes#!/), %2Fwls%2Frecipes%23%21%2F\"\n+    })\n+    void testExecute(String expression, String expected)\n+    {\n+        assertEquals(Optional.of(expected), processor.execute(expression));\n+        assertThat(logger.getLoggingEvents(), equalTo(List.of(warn(\n+                \"#{encodeUrl(..)} expression is deprecated, use set of #{encodeUriXyz(..)} expressions instead\"))));", "originalCommit": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NDU4OQ==", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470494589", "bodyText": "any suggestions how to make it better?\n\nencodeUriXyz\nencodeUriXXX\nencodeUri***\njust message\n...", "author": "valfirst", "createdAt": "2020-08-14T08:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3OTU2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU2MDY2OA==", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470560668", "bodyText": "encodeUri<part> ?", "author": "ikalinin1", "createdAt": "2020-08-14T11:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3OTU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "a5bfdb2e260d77f99bb731fc2c621972b07068f4", "chunk": "diff --git a/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessorTests.java b/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessorTests.java\nindex eacf42bdf..af26609f2 100644\n--- a/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessorTests.java\n+++ b/vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessorTests.java\n\n@@ -55,6 +55,6 @@ class EncodeUrlExpressionProcessorTests\n     {\n         assertEquals(Optional.of(expected), processor.execute(expression));\n         assertThat(logger.getLoggingEvents(), equalTo(List.of(warn(\n-                \"#{encodeUrl(..)} expression is deprecated, use set of #{encodeUriXyz(..)} expressions instead\"))));\n+                \"#{encodeUrl(..)} expression is deprecated, use set of #{encodeUri<Part>(..)} expressions instead\"))));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4MTU0Mg==", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470481542", "bodyText": "Can we just refactor this expression to delegate proper part encoding to a valid method?", "author": "ikalinin1", "createdAt": "2020-08-14T08:22:58Z", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.expression;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+import java.net.URLEncoder;\n+import java.util.Optional;\n+\n+import javax.inject.Named;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @deprecated use set of #{encodeUriXyz(..)} expressions instead\n+ */\n+@Named\n+@Deprecated(forRemoval = true, since = \"0.2.7\")\n+public class EncodeUrlExpressionProcessor extends UnaryExpressionProcessor\n+{\n+    private static final Logger LOGGER = LoggerFactory.getLogger(EncodeUrlExpressionProcessor.class);\n+\n+    public EncodeUrlExpressionProcessor()\n+    {\n+        super(\"encodeUrl\", input -> URLEncoder.encode(input, UTF_8));", "originalCommit": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5MjY3Mg==", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470492672", "bodyText": "there is no such valid method :)", "author": "valfirst", "createdAt": "2020-08-14T08:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4MTU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a5bfdb2e260d77f99bb731fc2c621972b07068f4", "chunk": "diff --git a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessor.java b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessor.java\nindex deb48bb96..0a8a8b5a8 100644\n--- a/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessor.java\n+++ b/vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessor.java\n\n@@ -43,7 +43,7 @@ public class EncodeUrlExpressionProcessor extends UnaryExpressionProcessor\n     @Override\n     public Optional<String> execute(String expression)\n     {\n-        LOGGER.warn(\"#{encodeUrl(..)} expression is deprecated, use set of #{encodeUriXyz(..)} expressions instead\");\n+        LOGGER.warn(\"#{encodeUrl(..)} expression is deprecated, use set of #{encodeUri<Part>(..)} expressions instead\");\n         return super.execute(expression);\n     }\n }\n"}}, {"oid": "df04a7be419ab1efeba61ef999f7339c8dc65c95", "url": "https://github.com/vividus-framework/vividus/commit/df04a7be419ab1efeba61ef999f7339c8dc65c95", "message": "Introduce set of expressions for URI parts encoding", "committedDate": "2020-08-14T08:48:27Z", "type": "forcePushed"}, {"oid": "a5bfdb2e260d77f99bb731fc2c621972b07068f4", "url": "https://github.com/vividus-framework/vividus/commit/a5bfdb2e260d77f99bb731fc2c621972b07068f4", "message": "Introduce set of expressions for URI parts encoding", "committedDate": "2020-08-14T11:52:48Z", "type": "forcePushed"}, {"oid": "ab08fa8216ea257424a50e1d1e3eca5eae541af7", "url": "https://github.com/vividus-framework/vividus/commit/ab08fa8216ea257424a50e1d1e3eca5eae541af7", "message": "Introduce set of expressions for URI parts encoding", "committedDate": "2020-08-14T19:39:32Z", "type": "commit"}, {"oid": "ab08fa8216ea257424a50e1d1e3eca5eae541af7", "url": "https://github.com/vividus-framework/vividus/commit/ab08fa8216ea257424a50e1d1e3eca5eae541af7", "message": "Introduce set of expressions for URI parts encoding", "committedDate": "2020-08-14T19:39:32Z", "type": "forcePushed"}]}