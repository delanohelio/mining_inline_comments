{"pr_number": 979, "pr_title": "Fix915 : Provide possibility to debug API scenarios", "pr_createdAt": "2020-10-02T14:34:51Z", "pr_url": "https://github.com/vividus-framework/vividus/pull/979", "timeline": [{"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "url": "https://github.com/vividus-framework/vividus/commit/2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse failure-screenshot-debug-mode=proxy in properties", "committedDate": "2020-10-07T08:52:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjE4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852181", "bodyText": "private List<String> debugModes;", "author": "valfirst", "createdAt": "2020-10-07T09:01:55Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -41,6 +41,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n+    private static String onlyDebugMode;", "originalCommit": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 20af9e31..3d12cbf6 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -41,7 +42,7 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n-    private static String onlyDebugMode;\n+    private List<String> debugModes;\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = ThreadLocal.withInitial(() -> Boolean.FALSE);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjU4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852581", "bodyText": "let Spring do its work, it should parse everything automatically", "author": "valfirst", "createdAt": "2020-10-07T09:02:34Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,22 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    {\n+        String[] temp = modeProperty.split(\", \");", "originalCommit": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 20af9e31..3d12cbf6 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -145,10 +145,13 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n \n-    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    private boolean isFailureInDebugMode(String modeAnnotation)\n     {\n-        String[] temp = modeProperty.split(\", \");\n-        for (String mode: temp)\n+        if (debugModes == null)\n+        {\n+            return false;\n+        }\n+        for (String mode: debugModes)\n         {\n             if (modeAnnotation.contains(mode))\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Mjc4Nw==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852787", "bodyText": "do not use static setters", "author": "valfirst", "createdAt": "2020-10-07T09:02:55Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,22 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    {\n+        String[] temp = modeProperty.split(\", \");\n+        for (String mode: temp)\n+        {\n+            if (modeAnnotation.contains(mode))\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public static void setOnlyDebugMode(String onlyDebugMode)", "originalCommit": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 20af9e31..3d12cbf6 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -145,10 +145,13 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n \n-    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    private boolean isFailureInDebugMode(String modeAnnotation)\n     {\n-        String[] temp = modeProperty.split(\", \");\n-        for (String mode: temp)\n+        if (debugModes == null)\n+        {\n+            return false;\n+        }\n+        for (String mode: debugModes)\n         {\n             if (modeAnnotation.contains(mode))\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Mjk5NQ==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852995", "bodyText": "also please pay attention it shouldn't be static", "author": "valfirst", "createdAt": "2020-10-07T09:03:15Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -41,6 +41,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n+    private static String onlyDebugMode;", "originalCommit": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 20af9e31..3d12cbf6 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -41,7 +42,7 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n-    private static String onlyDebugMode;\n+    private List<String> debugModes;\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = ThreadLocal.withInitial(() -> Boolean.FALSE);\n \n"}}, {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "url": "https://github.com/vividus-framework/vividus/commit/6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-07T13:53:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTM2Nw==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501061367", "bodyText": "Consider null as the default value and usage of Optional", "author": "ikalinin1", "createdAt": "2020-10-07T14:31:42Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))", "originalCommit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10c0109f14c76271cb334baa998ad4dee7350265", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 3d12cbf6..45de853e 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,21 +103,25 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n         {\n-            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n-                                     .onlyInDebugMode();\n-            if (onlyInDebugMode.isEmpty())\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                         .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n             {\n-                return true;\n-            }\n-            else\n-            {\n-                return isFailureInDebugMode(onlyInDebugMode);\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));\n             }\n         }\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-               || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        return isAnnotationPresent;\n     }\n \n     private void enableScreenshotOnFailure()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NTMzNQ==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501065335", "bodyText": "why is so tricky?", "author": "valfirst", "createdAt": "2020-10-07T14:36:43Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,25 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private boolean isFailureInDebugMode(String modeAnnotation)\n+    {\n+        if (debugModes == null)\n+        {\n+            return false;\n+        }\n+        for (String mode: debugModes)\n+        {\n+            if (modeAnnotation.contains(mode))", "originalCommit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10c0109f14c76271cb334baa998ad4dee7350265", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 3d12cbf6..45de853e 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -145,22 +149,6 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n \n-    private boolean isFailureInDebugMode(String modeAnnotation)\n-    {\n-        if (debugModes == null)\n-        {\n-            return false;\n-        }\n-        for (String mode: debugModes)\n-        {\n-            if (modeAnnotation.contains(mode))\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n     public void setDebugModes(List<String> debugModes)\n     {\n         this.debugModes = debugModes;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NTYyMw==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501065623", "bodyText": "consider refactoring to avoid duplicate checks", "author": "valfirst", "createdAt": "2020-10-07T14:37:06Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+               || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));", "originalCommit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10c0109f14c76271cb334baa998ad4dee7350265", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 3d12cbf6..45de853e 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,21 +103,25 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n         {\n-            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n-                                     .onlyInDebugMode();\n-            if (onlyInDebugMode.isEmpty())\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                         .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n             {\n-                return true;\n-            }\n-            else\n-            {\n-                return isFailureInDebugMode(onlyInDebugMode);\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));\n             }\n         }\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-               || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        return isAnnotationPresent;\n     }\n \n     private void enableScreenshotOnFailure()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNTMwMQ==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501125301", "bodyText": "And what is the strategy when I have debugOnly annotation at the class level and on the other hand I have a method that annotated to take screenshots always?", "author": "ikalinin1", "createdAt": "2020-10-07T15:54:49Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)", "originalCommit": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MTc4MQ==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501561781", "bodyText": "Added the ability to add an annotation with debugMode at method level.\nBehavior is as follows now:  If debugOnly annotation presents at the class level and I have a method that annotated to take screenshots, screenshot will be appear", "author": "TatianaTochko", "createdAt": "2020-10-08T09:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNTMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "10c0109f14c76271cb334baa998ad4dee7350265", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 3d12cbf6..45de853e 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,21 +103,25 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n         {\n-            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n-                                     .onlyInDebugMode();\n-            if (onlyInDebugMode.isEmpty())\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                         .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n             {\n-                return true;\n-            }\n-            else\n-            {\n-                return isFailureInDebugMode(onlyInDebugMode);\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));\n             }\n         }\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-               || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        return isAnnotationPresent;\n     }\n \n     private void enableScreenshotOnFailure()\n"}}, {"oid": "10c0109f14c76271cb334baa998ad4dee7350265", "url": "https://github.com/vividus-framework/vividus/commit/10c0109f14c76271cb334baa998ad4dee7350265", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-08T08:51:53Z", "type": "forcePushed"}, {"oid": "2817a75c549ecd60620b658c69e12265c24ac41f", "url": "https://github.com/vividus-framework/vividus/commit/2817a75c549ecd60620b658c69e12265c24ac41f", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-08T11:18:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501753588", "bodyText": "why contains, but not equals?", "author": "valfirst", "createdAt": "2020-10-08T14:12:15Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));", "originalCommit": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczODY1Nw==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r503738657", "bodyText": "For using in annotation smth like @TakeScreenshotOnFailure(onlyInDebugMode = \"proxy, ui, .., \")", "author": "TatianaTochko", "createdAt": "2020-10-13T07:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxMzg0OA==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r503813848", "bodyText": "onlyInDebugMode should contain a single debug mode, if collection is needed, it will be implemented separately, and collection will be used as an annotation field", "author": "valfirst", "createdAt": "2020-10-13T09:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA=="}], "type": "inlineReview", "revised_code": {"commit": "e5e70a66e1952d5da2046eb921b9f353e833829e", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 1844992a..60cb5059 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,14 +103,22 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;\n         if (isAnnotationPresent)\n         {\n-            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n-                                                 : method.getDeclaringClass()\n-                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n             String debugModeProperty = annotation.onlyInDebugMode();\n             if (!debugModeProperty.isEmpty())\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NDk2NA==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501754964", "bodyText": "please avoid duplicate checks", "author": "valfirst", "createdAt": "2020-10-08T14:14:08Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);", "originalCommit": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e5e70a66e1952d5da2046eb921b9f353e833829e", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 1844992a..60cb5059 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,14 +103,22 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;\n         if (isAnnotationPresent)\n         {\n-            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n-                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n-                                                 : method.getDeclaringClass()\n-                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n             String debugModeProperty = annotation.onlyInDebugMode();\n             if (!debugModeProperty.isEmpty())\n             {\n"}}, {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e", "url": "https://github.com/vividus-framework/vividus/commit/e5e70a66e1952d5da2046eb921b9f353e833829e", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-13T10:56:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNjQ3Mw==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504536473", "bodyText": "use once, so it should be inlined", "author": "valfirst", "createdAt": "2020-10-14T09:31:22Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;", "originalCommit": "e5e70a66e1952d5da2046eb921b9f353e833829e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c987d0856be609965ce587041457b9ec53c349", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 60cb5059..855e5726 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,9 +103,8 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        boolean isMethodPresent = method != null;\n         TakeScreenshotOnFailure annotation = null;\n-        if (isMethodPresent)\n+        if (method != null)\n         {\n             if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNjc3MA==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504536770", "bodyText": "isAnnotationPresent -> annotationPresent", "author": "valfirst", "createdAt": "2020-10-14T09:31:55Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;", "originalCommit": "e5e70a66e1952d5da2046eb921b9f353e833829e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c987d0856be609965ce587041457b9ec53c349", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 60cb5059..855e5726 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,9 +103,8 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        boolean isMethodPresent = method != null;\n         TakeScreenshotOnFailure annotation = null;\n-        if (isMethodPresent)\n+        if (method != null)\n         {\n             if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n             {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjkxMg==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504562912", "bodyText": "return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);", "author": "valfirst", "createdAt": "2020-10-14T10:14:56Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;\n+        if (isAnnotationPresent)\n+        {\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.equals(s));", "originalCommit": "e5e70a66e1952d5da2046eb921b9f353e833829e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c987d0856be609965ce587041457b9ec53c349", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 60cb5059..855e5726 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,9 +103,8 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        boolean isMethodPresent = method != null;\n         TakeScreenshotOnFailure annotation = null;\n-        if (isMethodPresent)\n+        if (method != null)\n         {\n             if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n             {\n"}}, {"oid": "e3c987d0856be609965ce587041457b9ec53c349", "url": "https://github.com/vividus-framework/vividus/commit/e3c987d0856be609965ce587041457b9ec53c349", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-15T08:00:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU3MTcwNw==", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r505571707", "bodyText": "if (method != null)\n{\n    AnnotatedElement annotatedElement = method.isAnnotationPresent(TakeScreenshotOnFailure.class) ? method\n            : method.getDeclaringClass();\n    TakeScreenshotOnFailure annotation = annotatedElement.getAnnotation(TakeScreenshotOnFailure.class);\n    if (annotation != null)\n    {\n        String debugModeProperty = annotation.onlyInDebugMode();\n        return debugModeProperty.isEmpty() || debugModes == null || debugModes.stream().anyMatch(\n                debugModeProperty::equals);\n    }\n}\nreturn false;", "author": "valfirst", "createdAt": "2020-10-15T14:06:43Z", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,30 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        TakeScreenshotOnFailure annotation = null;\n+        if (method != null)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean annotationPresent = annotation != null;\n+        if (annotationPresent)\n+        {\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);\n+            }\n+        }\n+        return annotationPresent;", "originalCommit": "e3c987d0856be609965ce587041457b9ec53c349", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66000103a3e8a6e803ab217495b7b3bae7ec9004", "chunk": "diff --git a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\nindex 855e5726..ef60101c 100644\n--- a/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n+++ b/vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java\n\n@@ -103,28 +104,19 @@ public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n \n     private boolean takeScreenshotOnFailure(Method method)\n     {\n-        TakeScreenshotOnFailure annotation = null;\n         if (method != null)\n         {\n-            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            AnnotatedElement annotatedElement = method.isAnnotationPresent(TakeScreenshotOnFailure.class) ? method\n+                    : method.getDeclaringClass();\n+            TakeScreenshotOnFailure annotation = annotatedElement.getAnnotation(TakeScreenshotOnFailure.class);\n+            if (annotation != null)\n             {\n-                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n-            }\n-            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n-            {\n-                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n-            }\n-        }\n-        boolean annotationPresent = annotation != null;\n-        if (annotationPresent)\n-        {\n-            String debugModeProperty = annotation.onlyInDebugMode();\n-            if (!debugModeProperty.isEmpty())\n-            {\n-                return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);\n+                String debugModeProperty = annotation.onlyInDebugMode();\n+                return debugModeProperty.isEmpty() || (debugModes != null\n+                                                       && debugModes.stream().anyMatch(debugModeProperty::equals));\n             }\n         }\n-        return annotationPresent;\n+        return false;\n     }\n \n     private void enableScreenshotOnFailure()\n"}}, {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004", "url": "https://github.com/vividus-framework/vividus/commit/66000103a3e8a6e803ab217495b7b3bae7ec9004", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-16T10:33:56Z", "type": "commit"}, {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004", "url": "https://github.com/vividus-framework/vividus/commit/66000103a3e8a6e803ab217495b7b3bae7ec9004", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties", "committedDate": "2020-10-16T10:33:56Z", "type": "forcePushed"}]}