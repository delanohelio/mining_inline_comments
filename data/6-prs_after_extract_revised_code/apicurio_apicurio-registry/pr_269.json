{"pr_number": 269, "pr_title": "Added support for Kafka Connect schemas", "pr_createdAt": "2020-02-11T09:56:52Z", "pr_url": "https://github.com/Apicurio/apicurio-registry/pull/269", "timeline": [{"oid": "4a13a48bfc0b688a26eae976bdcbbf296cd8200f", "url": "https://github.com/Apicurio/apicurio-registry/commit/4a13a48bfc0b688a26eae976bdcbbf296cd8200f", "message": "[Apicurio] Add support for Kafka Connect artifact type", "committedDate": "2020-02-11T08:37:52Z", "type": "commit"}, {"oid": "d6664ad8425b4feab70cb16e19e317cbe24195e2", "url": "https://github.com/Apicurio/apicurio-registry/commit/d6664ad8425b4feab70cb16e19e317cbe24195e2", "message": "Merge pull request #4 from EricWittmann/_apicurio-8065\n\n[Apicurio] Please merge generated API project", "committedDate": "2020-02-11T08:38:11Z", "type": "commit"}, {"oid": "ec45d94031ba8b509c01ca9fe76f076c3ce84d02", "url": "https://github.com/Apicurio/apicurio-registry/commit/ec45d94031ba8b509c01ca9fe76f076c3ce84d02", "message": "initial support for Kafka Connect schemas, including basic validation and content canonicalizer", "committedDate": "2020-02-11T09:49:57Z", "type": "commit"}, {"oid": "fb2693f8fbbc91139105428823d728b02d57d3a2", "url": "https://github.com/Apicurio/apicurio-registry/commit/fb2693f8fbbc91139105428823d728b02d57d3a2", "message": "updated ExtJsonConverter to use the new Kafka Connect schema artifact type", "committedDate": "2020-02-11T09:52:51Z", "type": "commit"}, {"oid": "305d8b50e3e7e7700f3adcb89a64499bdda6a547", "url": "https://github.com/Apicurio/apicurio-registry/commit/305d8b50e3e7e7700f3adcb89a64499bdda6a547", "message": "added missing cdi bean annotation", "committedDate": "2020-02-11T10:05:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0NTI2OQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/269#discussion_r377645269", "bodyText": "Hmmm ... does Java really always create static fields before running static init block?\nSo we don't end-up with NPE on jsonConverter at line 45 ... on some random occasion ...", "author": "alesj", "createdAt": "2020-02-11T13:51:08Z", "path": "app/src/main/java/io/apicurio/registry/rules/validity/KafkaConnectContentValidator.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.apicurio.registry.rules.validity;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.apache.kafka.connect.json.JsonConverter;\n+import org.apache.kafka.connect.json.JsonConverterConfig;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.apicurio.registry.content.ContentHandle;\n+\n+/**\n+ * A content validator implementation for the Kafka Connect schema content type.\n+ * @author eric.wittmann@gmail.com\n+ */\n+@ApplicationScoped\n+public class KafkaConnectContentValidator implements ContentValidator {\n+    \n+    private static final ObjectMapper mapper = new ObjectMapper();\n+    private static final JsonConverter jsonConverter = new JsonConverter();\n+    static {\n+        Map<String, Object> configs = new HashMap<>();\n+        configs.put(\"converter.type\", \"key\");\n+        configs.put(JsonConverterConfig.SCHEMAS_CACHE_SIZE_CONFIG, new Integer(0));\n+        jsonConverter.configure(configs);", "originalCommit": "305d8b50e3e7e7700f3adcb89a64499bdda6a547", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0OTU5OQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/269#discussion_r377649599", "bodyText": "They are executed in textual order.", "author": "EricWittmann", "createdAt": "2020-02-11T13:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0NTI2OQ=="}], "type": "inlineReview", "revised_code": null}]}