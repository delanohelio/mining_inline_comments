{"pr_number": 698, "pr_title": "Implement HTTP Response status code metrics reporting for REST API", "pr_createdAt": "2020-07-17T14:56:43Z", "pr_url": "https://github.com/Apicurio/apicurio-registry/pull/698", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5NjE5OA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r456496198", "bodyText": "This is info now but I think we should change it to debug or just removing it. Leaving it here for the moment until more iteration is done to the PR", "author": "miguelsorianod", "createdAt": "2020-07-17T14:57:31Z", "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.io.IOException;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerResponseFilter {\n+\n+\t@Inject\n+\t@RegistryType(type = APPLICATION)\n+\tMetricRegistry metricRegistry;\n+\n+\tprivate static final Logger log = LoggerFactory.getLogger(RestMetricsResponseFilter.class);\n+\n+\tString REST_RESPONSE_STATUS_CODE_COUNT = \"rest_response_status_code\";\n+\tString REST_RESPONSE_STATUS_CODE_COUNT_DESC = \"Total number of REST HTTP Response Codes across all endpoints.\";\n+\n+\t@Override\n+\tpublic void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)\n+\t\t\tthrows IOException {\n+\t\tlog.info(\"'{} {}'\", requestContext.getMethod(), requestContext.getUriInfo().getRequestUri().toString());", "originalCommit": "bf23b7832e57d9c170086b805bba94705856057f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2NjY2NA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464366664", "bodyText": "Agreed - should be either debug or trace level.", "author": "EricWittmann", "createdAt": "2020-08-03T11:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5NjE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4NDAyNg==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464384026", "bodyText": "After thinking about this more, let's delete this. :) I think it is redundant since we have logging enabled (via annotation) for all the REST implementation classes.", "author": "EricWittmann", "createdAt": "2020-08-03T12:34:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5NjE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMjg2Mg==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464912862", "bodyText": "\ud83d\udc4d", "author": "miguelsorianod", "createdAt": "2020-08-04T09:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5NjE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "chunk": "diff --git a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\nindex 38e32b1e..b40f3cf5 100644\n--- a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\n+++ b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\n\n@@ -1,29 +1,37 @@\n package io.apicurio.registry.metrics;\n \n-import static io.apicurio.registry.metrics.MetricIDs.*;\n-\n+import static io.apicurio.registry.metrics.MetricIDs.REST_GROUP_TAG;\n import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+import static org.eclipse.microprofile.metrics.MetricType.TIMER;\n \n import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n \n import javax.inject.Inject;\n+import javax.ws.rs.Path;\n import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n import javax.ws.rs.container.ContainerResponseContext;\n import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n import javax.ws.rs.ext.Provider;\n \n import org.eclipse.microprofile.metrics.Counter;\n import org.eclipse.microprofile.metrics.Metadata;\n import org.eclipse.microprofile.metrics.MetricRegistry;\n import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n import org.eclipse.microprofile.metrics.annotation.RegistryType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import io.smallrye.metrics.app.Clock;\n+\n @Provider\n @RestMetricsResponseFilteredNameBinding\n-public class RestMetricsResponseFilter implements ContainerResponseFilter {\n+public class RestMetricsResponseFilter implements ContainerRequestFilter, ContainerResponseFilter {\n \n \t@Inject\n \t@RegistryType(type = APPLICATION)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNDUxMA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r456504510", "bodyText": "I would replace the class name by something more meaningful, maybe RegisterStatusCodeResponseFilter.", "author": "carlesarnal", "createdAt": "2020-07-17T15:11:11Z", "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.*;\n+\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+\n+import java.io.IOException;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerResponseFilter {", "originalCommit": "bf23b7832e57d9c170086b805bba94705856057f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2NzU5OA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464367598", "bodyText": "Unless we think the filter is going to track additional metrics.  But if we're renaming I'd suggest RestStatusCodeMetricsResponseFilter.", "author": "EricWittmann", "createdAt": "2020-08-03T11:58:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNDUxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxMzQxNg==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464913416", "bodyText": "I think we should keep the current name as there is other information other than status code being gathered", "author": "miguelsorianod", "createdAt": "2020-08-04T09:13:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNDUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "chunk": "diff --git a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\nindex 38e32b1e..b40f3cf5 100644\n--- a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\n+++ b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\n\n@@ -1,29 +1,37 @@\n package io.apicurio.registry.metrics;\n \n-import static io.apicurio.registry.metrics.MetricIDs.*;\n-\n+import static io.apicurio.registry.metrics.MetricIDs.REST_GROUP_TAG;\n import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+import static org.eclipse.microprofile.metrics.MetricType.TIMER;\n \n import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n \n import javax.inject.Inject;\n+import javax.ws.rs.Path;\n import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n import javax.ws.rs.container.ContainerResponseContext;\n import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n import javax.ws.rs.ext.Provider;\n \n import org.eclipse.microprofile.metrics.Counter;\n import org.eclipse.microprofile.metrics.Metadata;\n import org.eclipse.microprofile.metrics.MetricRegistry;\n import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n import org.eclipse.microprofile.metrics.annotation.RegistryType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import io.smallrye.metrics.app.Clock;\n+\n @Provider\n @RestMetricsResponseFilteredNameBinding\n-public class RestMetricsResponseFilter implements ContainerResponseFilter {\n+public class RestMetricsResponseFilter implements ContainerRequestFilter, ContainerResponseFilter {\n \n \t@Inject\n \t@RegistryType(type = APPLICATION)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNTQ3Nw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r456505477", "bodyText": "Same here, I would replace this name by something more related to its behaviour.", "author": "carlesarnal", "createdAt": "2020-07-17T15:12:55Z", "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilteredNameBinding.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.apicurio.registry.metrics;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.ws.rs.NameBinding;", "originalCommit": "bf23b7832e57d9c170086b805bba94705856057f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe464acf1b60e06487aa5b6bd569d6ee259fa633", "chunk": "diff --git a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilteredNameBinding.java b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilteredNameBinding.java\nindex 8097f09a..9013c8fc 100644\n--- a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilteredNameBinding.java\n+++ b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilteredNameBinding.java\n\n@@ -1,3 +1,18 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package io.apicurio.registry.metrics;\n \n import java.lang.annotation.ElementType;\n"}}, {"oid": "6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "url": "https://github.com/Apicurio/apicurio-registry/commit/6f92ad5d83b75afd6c8a4114db07b768414bd5e5", "message": "Add rest_http_request_duration Timer metric", "committedDate": "2020-07-24T16:42:13Z", "type": "forcePushed"}, {"oid": "ced20d68f075223e8c7719c19063e40b407022af", "url": "https://github.com/Apicurio/apicurio-registry/commit/ced20d68f075223e8c7719c19063e40b407022af", "message": "Add rest_http_request_duration Timer metric", "committedDate": "2020-07-28T15:48:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MzU3Mw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464383573", "bodyText": "Can you please add a javadoc comment at the top to explain what this filter is doing?", "author": "EricWittmann", "createdAt": "2020-08-03T12:33:29Z", "path": "app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Copyright 2020 Red Hat\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.apicurio.registry.metrics;\n+\n+import static io.apicurio.registry.metrics.MetricIDs.REST_GROUP_TAG;\n+import static org.eclipse.microprofile.metrics.MetricRegistry.Type.APPLICATION;\n+import static org.eclipse.microprofile.metrics.MetricType.COUNTER;\n+import static org.eclipse.microprofile.metrics.MetricType.TIMER;\n+\n+import java.io.IOException;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.container.ResourceInfo;\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.ext.Provider;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.smallrye.metrics.app.Clock;\n+\n+@Provider\n+@RestMetricsResponseFilteredNameBinding\n+public class RestMetricsResponseFilter implements ContainerRequestFilter, ContainerResponseFilter {", "originalCommit": "1a6b75bf4120ab8d369eac9e184247fa79498384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxNDExMw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464914113", "bodyText": "Ok, going to do it now \ud83d\udc4d", "author": "miguelsorianod", "createdAt": "2020-08-04T09:14:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MzU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk0MDY0OA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r464940648", "bodyText": "Documentation added. @EricWittmann is there something pending?", "author": "miguelsorianod", "createdAt": "2020-08-04T10:01:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MzU3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwMTU1MQ==", "url": "https://github.com/Apicurio/apicurio-registry/pull/698#discussion_r467901551", "bodyText": "Hey @miguelsorianod we've been working on getting the build to work properly in CI and I've been trying to recover from hurricane outages.  I haven't forgotten about this!", "author": "EricWittmann", "createdAt": "2020-08-10T13:26:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MzU3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fe464acf1b60e06487aa5b6bd569d6ee259fa633", "chunk": "diff --git a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\nindex c0510dd0..a1615817 100644\n--- a/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\n+++ b/app/src/main/java/io/apicurio/registry/metrics/RestMetricsResponseFilter.java\n\n@@ -39,11 +39,16 @@ import org.eclipse.microprofile.metrics.MetricRegistry;\n import org.eclipse.microprofile.metrics.Tag;\n import org.eclipse.microprofile.metrics.Timer;\n import org.eclipse.microprofile.metrics.annotation.RegistryType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n import io.smallrye.metrics.app.Clock;\n \n+/**\n+ * Filter class that filters REST API requests and responses to report metrics\n+ * about them. Binding of the methods being filtered is performed through the\n+ * {@link io.apicurio.registry.metrics.RestMetricsResponseFilteredNameBinding}\n+ * annotation added in the {@link io.apicurio.registry.rest.RegistryApplication}\n+ * JAX-RS Application class\n+ */\n @Provider\n @RestMetricsResponseFilteredNameBinding\n public class RestMetricsResponseFilter implements ContainerRequestFilter, ContainerResponseFilter {\n"}}, {"oid": "fe464acf1b60e06487aa5b6bd569d6ee259fa633", "url": "https://github.com/Apicurio/apicurio-registry/commit/fe464acf1b60e06487aa5b6bd569d6ee259fa633", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes", "committedDate": "2020-08-04T10:00:23Z", "type": "forcePushed"}, {"oid": "ebefd6f108631ddf673430b9a6520bfabcb7beaa", "url": "https://github.com/Apicurio/apicurio-registry/commit/ebefd6f108631ddf673430b9a6520bfabcb7beaa", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes", "committedDate": "2020-08-04T10:22:32Z", "type": "forcePushed"}, {"oid": "568d7fe47c8658f53fb55e4f32d0acbb900805bb", "url": "https://github.com/Apicurio/apicurio-registry/commit/568d7fe47c8658f53fb55e4f32d0acbb900805bb", "message": "Implement HTTP Response status code metrics reporting\n\nIt is done through a JAX-RS ContainerResponseFilter", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "884f0bebe617933e86c60f8cc1500c98c55030d6", "url": "https://github.com/Apicurio/apicurio-registry/commit/884f0bebe617933e86c60f8cc1500c98c55030d6", "message": "Rename rest_response_status_code metric to rest_http_requests_total", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "0c701539e9d9bd9d0ae3b44652e282df0aeca97d", "url": "https://github.com/Apicurio/apicurio-registry/commit/0c701539e9d9bd9d0ae3b44652e282df0aeca97d", "message": "Add method and endpoint information to rest_http_requests_total metric\n\nAlso rename some fields", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "68bafebf86905b6d881f2fe007940e36d9a9eb03", "url": "https://github.com/Apicurio/apicurio-registry/commit/68bafebf86905b6d881f2fe007940e36d9a9eb03", "message": "Add rest_http_request_duration Timer metric", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "fbeb737d4a624b3052dc66cf6c18d8240e4b54f9", "url": "https://github.com/Apicurio/apicurio-registry/commit/fbeb737d4a624b3052dc66cf6c18d8240e4b54f9", "message": "Update RestMetricsResponseFilter.java", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "b2d0e0cbba7ca8810b5cb02b73f3ae06012ad356", "url": "https://github.com/Apicurio/apicurio-registry/commit/b2d0e0cbba7ca8810b5cb02b73f3ae06012ad356", "message": "Update RestMetricsResponseFilteredNameBinding.java", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "486a231f5a287c081fd3886250dd6e34b6ccbefd", "url": "https://github.com/Apicurio/apicurio-registry/commit/486a231f5a287c081fd3886250dd6e34b6ccbefd", "message": "Remove logging", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "98f35122eef4bacf0ab2b65064a8aa2307e34e4a", "url": "https://github.com/Apicurio/apicurio-registry/commit/98f35122eef4bacf0ab2b65064a8aa2307e34e4a", "message": "Update RestMetricsResponseFilter.java", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "3b698fabd2f13f58f0256ba15ad0edd7df74e1a3", "url": "https://github.com/Apicurio/apicurio-registry/commit/3b698fabd2f13f58f0256ba15ad0edd7df74e1a3", "message": "Removed the logger entirely", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "9cae9df4fa5f4e1ff1674239f6338dd5d4f76cae", "url": "https://github.com/Apicurio/apicurio-registry/commit/9cae9df4fa5f4e1ff1674239f6338dd5d4f76cae", "message": "Apply auto-format on RestMetricsResponseFilter class", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "26ef2a9a84702758d369ae85fb35e1adfdb979d9", "url": "https://github.com/Apicurio/apicurio-registry/commit/26ef2a9a84702758d369ae85fb35e1adfdb979d9", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes", "committedDate": "2020-08-07T10:17:48Z", "type": "commit"}, {"oid": "26ef2a9a84702758d369ae85fb35e1adfdb979d9", "url": "https://github.com/Apicurio/apicurio-registry/commit/26ef2a9a84702758d369ae85fb35e1adfdb979d9", "message": "Document RestMetricsResponseFilter and RestMetricsResponseFilteredNameBinding classes", "committedDate": "2020-08-07T10:17:48Z", "type": "forcePushed"}]}