{"pr_number": 942, "pr_title": "Log deprecated artifacts usage", "pr_createdAt": "2020-10-22T09:22:44Z", "pr_url": "https://github.com/Apicurio/apicurio-registry/pull/942", "timeline": [{"oid": "0d439e7f41d57ad5cf1c908c67ca278fcdd28e57", "url": "https://github.com/Apicurio/apicurio-registry/commit/0d439e7f41d57ad5cf1c908c67ca278fcdd28e57", "message": "Log deprecated artifacts usage", "committedDate": "2020-10-22T09:18:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA5MzE4MA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/942#discussion_r510093180", "bodyText": "It's probably good enough to check for the presence of the header, but just to be sure you check to make sure the value is \"true\"?  The HeadersHack class sets the header value to true.", "author": "EricWittmann", "createdAt": "2020-10-22T11:42:48Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java", "diffHunk": "@@ -59,5 +64,21 @@ private void handleError(Throwable e) {\n             }\n             logger.log(Level.SEVERE, \"Error getting call result\", e);\n         }\n+\n+\n+        private static void checkIfDeprecated(okhttp3.Headers headers) {\n+            String isDeprecated = headers.get(Headers.DEPRECATED);\n+            if (isDeprecated != null) {", "originalCommit": "0d439e7f41d57ad5cf1c908c67ca278fcdd28e57", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "52aec273112ef88b1520b9348617387eb712cce2", "chunk": "diff --git a/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java b/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java\nindex 80816b93..48189a12 100644\n--- a/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java\n+++ b/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java\n\n@@ -68,16 +66,10 @@ public class RequestHandler {\n \n         private static void checkIfDeprecated(okhttp3.Headers headers) {\n             String isDeprecated = headers.get(Headers.DEPRECATED);\n-            if (isDeprecated != null) {\n+            if (isDeprecated != null && Boolean.getBoolean(isDeprecated)) {\n                 String id = headers.get(Headers.ARTIFACT_ID);\n                 String version = headers.get(Headers.VERSION);\n-                logIfDeprecated(() -> ArtifactState.DEPRECATED, id, version);\n-            }\n-        }\n-\n-        private static void logIfDeprecated(Supplier<ArtifactState> stateSupplier, String artifactId, Object version) {\n-            if (stateSupplier.get() == ArtifactState.DEPRECATED) {\n-                logger.warning(String.format(\"Artifact %s [%s] is deprecated\", artifactId, version));\n+                logger.warning(String.format(\"Artifact %s [%s] is deprecated\", id, version));\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA5NDI4Nw==", "url": "https://github.com/Apicurio/apicurio-registry/pull/942#discussion_r510094287", "bodyText": "The stateSupplier stuff is not really needed here, right?  This can just be a logDeprecated method like this:\nprivate static void logDeprecated(String artifactId, Object version) {\n    logger.warning(String.format(\"Artifact %s [%s] is deprecated\", artifactId, version));\n}", "author": "EricWittmann", "createdAt": "2020-10-22T11:44:43Z", "path": "rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java", "diffHunk": "@@ -59,5 +64,21 @@ private void handleError(Throwable e) {\n             }\n             logger.log(Level.SEVERE, \"Error getting call result\", e);\n         }\n+\n+\n+        private static void checkIfDeprecated(okhttp3.Headers headers) {\n+            String isDeprecated = headers.get(Headers.DEPRECATED);\n+            if (isDeprecated != null) {\n+                String id = headers.get(Headers.ARTIFACT_ID);\n+                String version = headers.get(Headers.VERSION);\n+                logIfDeprecated(() -> ArtifactState.DEPRECATED, id, version);\n+            }\n+        }\n+\n+        private static void logIfDeprecated(Supplier<ArtifactState> stateSupplier, String artifactId, Object version) {\n+            if (stateSupplier.get() == ArtifactState.DEPRECATED) {\n+                logger.warning(String.format(\"Artifact %s [%s] is deprecated\", artifactId, version));\n+            }\n+        }", "originalCommit": "0d439e7f41d57ad5cf1c908c67ca278fcdd28e57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA5NDU3NA==", "url": "https://github.com/Apicurio/apicurio-registry/pull/942#discussion_r510094574", "bodyText": "Unless this method is intended to be used in other ways.", "author": "EricWittmann", "createdAt": "2020-10-22T11:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA5NDI4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "52aec273112ef88b1520b9348617387eb712cce2", "chunk": "diff --git a/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java b/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java\nindex 80816b93..48189a12 100644\n--- a/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java\n+++ b/rest-client/src/main/java/io/apicurio/registry/client/request/RequestHandler.java\n\n@@ -68,16 +66,10 @@ public class RequestHandler {\n \n         private static void checkIfDeprecated(okhttp3.Headers headers) {\n             String isDeprecated = headers.get(Headers.DEPRECATED);\n-            if (isDeprecated != null) {\n+            if (isDeprecated != null && Boolean.getBoolean(isDeprecated)) {\n                 String id = headers.get(Headers.ARTIFACT_ID);\n                 String version = headers.get(Headers.VERSION);\n-                logIfDeprecated(() -> ArtifactState.DEPRECATED, id, version);\n-            }\n-        }\n-\n-        private static void logIfDeprecated(Supplier<ArtifactState> stateSupplier, String artifactId, Object version) {\n-            if (stateSupplier.get() == ArtifactState.DEPRECATED) {\n-                logger.warning(String.format(\"Artifact %s [%s] is deprecated\", artifactId, version));\n+                logger.warning(String.format(\"Artifact %s [%s] is deprecated\", id, version));\n             }\n         }\n     }\n"}}, {"oid": "52aec273112ef88b1520b9348617387eb712cce2", "url": "https://github.com/Apicurio/apicurio-registry/commit/52aec273112ef88b1520b9348617387eb712cce2", "message": "Simplify deprecated check", "committedDate": "2020-10-22T12:39:04Z", "type": "commit"}]}