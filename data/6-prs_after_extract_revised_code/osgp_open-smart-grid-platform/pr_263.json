{"pr_number": 263, "pr_title": "OC-537 MQTT webservices", "pr_createdAt": "2020-04-01T10:20:51Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/263", "timeline": [{"oid": "5681167a3a16411707b561c82f32939902add8c0", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5681167a3a16411707b561c82f32939902add8c0", "message": "OC-537 AddRtuDevice endpoint", "committedDate": "2020-03-31T16:40:59Z", "type": "commit"}, {"oid": "201a40eadf446ef6878969375cae2daae79f2889", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/201a40eadf446ef6878969375cae2daae79f2889", "message": "OC-537 Clean up", "committedDate": "2020-04-01T10:18:13Z", "type": "commit"}, {"oid": "e92c53456e415b294bef8424d9e735f0801d4b7a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e92c53456e415b294bef8424d9e735f0801d4b7a", "message": "OC-537 Remove unused variable", "committedDate": "2020-04-03T10:22:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1NDc1OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/263#discussion_r405654759", "bodyText": "Rename this function to addRtu and update the logging message.", "author": "kevinsmeets", "createdAt": "2020-04-08T16:28:36Z", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/DeviceManagementService.java", "diffHunk": "@@ -86,10 +89,25 @@ public void handleHealthStatusResponse(final GetHealthStatusResponseDto getHealt\n             exception = this.ensureOsgpException(e, \"Exception occurred while getting Health Status Response Data\");\n         }\n \n-        ResponseMessage responseMessage = ResponseMessage.newResponseMessageBuilder()\n-                .withCorrelationUid(correlationUid).withOrganisationIdentification(organisationIdentification)\n-                .withDeviceIdentification(deviceIdentification).withResult(result).withOsgpException(exception)\n-                .withDataObject(getHealthStatusResponse).build();\n+        final ResponseMessage responseMessage = ResponseMessage.newResponseMessageBuilder()\n+                .withCorrelationUid(correlationUid)\n+                .withOrganisationIdentification(organisationIdentification)\n+                .withDeviceIdentification(deviceIdentification)\n+                .withResult(result)\n+                .withOsgpException(exception)\n+                .withDataObject(getHealthStatusResponse)\n+                .build();\n         this.webServiceResponseMessageSender.send(responseMessage, messageType);\n     }\n+\n+    public void addMeter(final DeviceMessageMetadata deviceMessageMetadata,", "originalCommit": "e92c53456e415b294bef8424d9e735f0801d4b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "477327c07eca6c5f4658f85f867e5220fa586a98", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/DeviceManagementService.java b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/DeviceManagementService.java\nindex 5621f6b4b6..bbc4804913 100644\n--- a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/DeviceManagementService.java\n+++ b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/DeviceManagementService.java\n\n@@ -100,13 +100,12 @@ public class DeviceManagementService extends BaseService {\n         this.webServiceResponseMessageSender.send(responseMessage, messageType);\n     }\n \n-    public void addMeter(final DeviceMessageMetadata deviceMessageMetadata,\n+    public void addDevice(final DeviceMessageMetadata deviceMessageMetadata,\n             final AddRtuDeviceRequest addRtuDeviceRequest) throws FunctionalException {\n         final String organisationIdentification = deviceMessageMetadata.getOrganisationIdentification();\n         final String deviceIdentification = deviceMessageMetadata.getDeviceIdentification();\n-        LOGGER.debug(\"addMeter for organisationIdentification: {} for deviceIdentification: {}\",\n-                organisationIdentification,\n-                deviceIdentification);\n+        LOGGER.debug(\"addDevice for organisationIdentification: {} for deviceIdentification: {}\",\n+                organisationIdentification, deviceIdentification);\n         this.rtuDeviceService.storeRtuDevice(organisationIdentification, addRtuDeviceRequest);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MjIwNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/263#discussion_r406142204", "bodyText": "Ssld.SSLD_TYPE?", "author": "smvdheijden", "createdAt": "2020-04-09T11:35:57Z", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/RtuDeviceService.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.application.services;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+\n+import org.opensmartgridplatform.domain.core.entities.DeviceAuthorization;\n+import org.opensmartgridplatform.domain.core.entities.DeviceModel;\n+import org.opensmartgridplatform.domain.core.entities.Manufacturer;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.entities.ProtocolInfo;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceAuthorizationRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceModelRepository;\n+import org.opensmartgridplatform.domain.core.repositories.ManufacturerRepository;\n+import org.opensmartgridplatform.domain.core.repositories.OrganisationRepository;\n+import org.opensmartgridplatform.domain.core.repositories.ProtocolInfoRepository;\n+import org.opensmartgridplatform.domain.core.repositories.RtuDeviceRepository;\n+import org.opensmartgridplatform.domain.core.valueobjects.AddRtuDeviceRequest;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunctionGroup;\n+import org.opensmartgridplatform.domain.core.valueobjects.RtuDevice;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Service(value = \"domainDistributionAutomationRtuDeviceService\")\n+@Transactional(value = \"transactionManager\")\n+public class RtuDeviceService {\n+\n+    private static final String LOCAL_HOST = \"127.0.0.1\";\n+\n+    @Autowired\n+    private RtuDeviceRepository rtuDeviceRepository;\n+\n+    @Autowired\n+    private ManufacturerRepository manufacturerRepository;\n+\n+    @Autowired\n+    private DeviceModelRepository deviceModelRepository;\n+\n+    @Autowired\n+    private ProtocolInfoRepository protocolInfoRepository;\n+\n+    @Autowired\n+    private OrganisationRepository organisationRepository;\n+\n+    @Autowired\n+    private DeviceAuthorizationRepository deviceAuthorizationRepository;\n+\n+    public void storeRtuDevice(final String organisationIdentification, final AddRtuDeviceRequest addRtuDeviceRequest)\n+            throws FunctionalException {\n+        this.throwExceptionOnExistingDevice(addRtuDeviceRequest);\n+        final RtuDevice rtuDevice = addRtuDeviceRequest.getRtuDevice();\n+        org.opensmartgridplatform.domain.core.entities.RtuDevice rtuDeviceEntity =\n+                new org.opensmartgridplatform.domain.core.entities.RtuDevice(\n+                rtuDevice.getDeviceIdentification());\n+        this.addProtocolInfo(rtuDevice, rtuDeviceEntity);\n+        this.addRegistrationData(rtuDevice, rtuDeviceEntity);\n+        this.addDeviceModel(addRtuDeviceRequest.getDeviceModel(), rtuDeviceEntity);\n+        rtuDeviceEntity = this.rtuDeviceRepository.save(rtuDeviceEntity);\n+        this.storeAuthorization(organisationIdentification, rtuDeviceEntity);\n+    }\n+\n+    private void throwExceptionOnExistingDevice(final AddRtuDeviceRequest addRtuDeviceRequest)\n+            throws FunctionalException {\n+        if (this.rtuDeviceRepository.findByDeviceIdentification(\n+                addRtuDeviceRequest.getRtuDevice().getDeviceIdentification()) != null) {\n+            throw new FunctionalException(FunctionalExceptionType.EXISTING_DEVICE,\n+                    ComponentType.DOMAIN_DISTRIBUTION_AUTOMATION);\n+        }\n+    }\n+\n+    private void addRegistrationData(final RtuDevice rtuDevice,\n+            final org.opensmartgridplatform.domain.core.entities.RtuDevice rtuDeviceEntity) throws FunctionalException {\n+        final String networkAddress = rtuDevice.getNetworkAddress();\n+        final InetAddress inetAddress;\n+        try {\n+            inetAddress = LOCAL_HOST.equals(networkAddress) ? InetAddress.getLoopbackAddress() : InetAddress.getByName(\n+                    networkAddress);\n+        } catch (final UnknownHostException e) {\n+            throw new FunctionalException(FunctionalExceptionType.INVALID_IP_ADDRESS,\n+                    ComponentType.DOMAIN_DISTRIBUTION_AUTOMATION, e);\n+        }\n+        rtuDeviceEntity.updateRegistrationData(inetAddress, Ssld.SSLD_TYPE);", "originalCommit": "e92c53456e415b294bef8424d9e735f0801d4b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "477327c07eca6c5f4658f85f867e5220fa586a98", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/RtuDeviceService.java b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/RtuDeviceService.java\nindex e922226258..9743775a3f 100644\n--- a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/RtuDeviceService.java\n+++ b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/RtuDeviceService.java\n\n@@ -16,7 +16,6 @@ import org.opensmartgridplatform.domain.core.entities.DeviceModel;\n import org.opensmartgridplatform.domain.core.entities.Manufacturer;\n import org.opensmartgridplatform.domain.core.entities.Organisation;\n import org.opensmartgridplatform.domain.core.entities.ProtocolInfo;\n-import org.opensmartgridplatform.domain.core.entities.Ssld;\n import org.opensmartgridplatform.domain.core.repositories.DeviceAuthorizationRepository;\n import org.opensmartgridplatform.domain.core.repositories.DeviceModelRepository;\n import org.opensmartgridplatform.domain.core.repositories.ManufacturerRepository;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzM1MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/263#discussion_r406143350", "bodyText": "MessageType.ADD_METER?", "author": "smvdheijden", "createdAt": "2020-04-09T11:38:25Z", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.ws.messageprocessors;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.DeviceManagementService;\n+import org.opensmartgridplatform.domain.core.valueobjects.AddRtuDeviceRequest;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.DeviceMessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationAddDeviceRequestMessageProcessor\")\n+public class AddDeviceRequestMessageProcessor extends BaseNotificationMessageProcessor {\n+\n+    @Autowired\n+    @Qualifier(\"domainDistributionAutomationDeviceManagementService\")\n+    private DeviceManagementService deviceManagementService;\n+\n+    @Autowired\n+    public AddDeviceRequestMessageProcessor(final NotificationResponseMessageSender responseMessageSender,\n+            @Qualifier(\"domainDistributionAutomationInboundWebServiceRequestsMessageProcessorMap\") final MessageProcessorMap messageProcessorMap) {\n+        super(responseMessageSender, messageProcessorMap, MessageType.ADD_METER);", "originalCommit": "e92c53456e415b294bef8424d9e735f0801d4b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "477327c07eca6c5f4658f85f867e5220fa586a98", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java\nindex 49bd5b45b8..d9ac6555f3 100644\n--- a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java\n+++ b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java\n\n@@ -34,7 +34,7 @@ public class AddDeviceRequestMessageProcessor extends BaseNotificationMessagePro\n     @Autowired\n     public AddDeviceRequestMessageProcessor(final NotificationResponseMessageSender responseMessageSender,\n             @Qualifier(\"domainDistributionAutomationInboundWebServiceRequestsMessageProcessorMap\") final MessageProcessorMap messageProcessorMap) {\n-        super(responseMessageSender, messageProcessorMap, MessageType.ADD_METER);\n+        super(responseMessageSender, messageProcessorMap, MessageType.ADD_DEVICE);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MzY0OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/263#discussion_r406143649", "bodyText": "addMeter?", "author": "smvdheijden", "createdAt": "2020-04-09T11:39:01Z", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.ws.messageprocessors;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.DeviceManagementService;\n+import org.opensmartgridplatform.domain.core.valueobjects.AddRtuDeviceRequest;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.DeviceMessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationAddDeviceRequestMessageProcessor\")\n+public class AddDeviceRequestMessageProcessor extends BaseNotificationMessageProcessor {\n+\n+    @Autowired\n+    @Qualifier(\"domainDistributionAutomationDeviceManagementService\")\n+    private DeviceManagementService deviceManagementService;\n+\n+    @Autowired\n+    public AddDeviceRequestMessageProcessor(final NotificationResponseMessageSender responseMessageSender,\n+            @Qualifier(\"domainDistributionAutomationInboundWebServiceRequestsMessageProcessorMap\") final MessageProcessorMap messageProcessorMap) {\n+        super(responseMessageSender, messageProcessorMap, MessageType.ADD_METER);\n+    }\n+\n+    @Override\n+    public void processMessage(final ObjectMessage message) throws JMSException {\n+\n+        final DeviceMessageMetadata deviceMessageMetadata = new DeviceMessageMetadata(message);\n+\n+        final AddRtuDeviceRequest addRtuDeviceRequest = (AddRtuDeviceRequest) message.getObject();\n+\n+        try {\n+            this.deviceManagementService.addMeter(deviceMessageMetadata, addRtuDeviceRequest);", "originalCommit": "e92c53456e415b294bef8424d9e735f0801d4b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "477327c07eca6c5f4658f85f867e5220fa586a98", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java\nindex 49bd5b45b8..d9ac6555f3 100644\n--- a/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java\n+++ b/osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/ws/messageprocessors/AddDeviceRequestMessageProcessor.java\n\n@@ -34,7 +34,7 @@ public class AddDeviceRequestMessageProcessor extends BaseNotificationMessagePro\n     @Autowired\n     public AddDeviceRequestMessageProcessor(final NotificationResponseMessageSender responseMessageSender,\n             @Qualifier(\"domainDistributionAutomationInboundWebServiceRequestsMessageProcessorMap\") final MessageProcessorMap messageProcessorMap) {\n-        super(responseMessageSender, messageProcessorMap, MessageType.ADD_METER);\n+        super(responseMessageSender, messageProcessorMap, MessageType.ADD_DEVICE);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0NDMzOQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/263#discussion_r406144339", "bodyText": "ADD_METER?", "author": "smvdheijden", "createdAt": "2020-04-09T11:40:31Z", "path": "osgp/platform/osgp-adapter-ws-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/ws/da/application/services/DistributionAutomationService.java", "diffHunk": "@@ -137,6 +139,34 @@ public MeasurementReport dequeueMeasurementReport(final String correlationUid) t\n         return (MeasurementReport) this.processResponse(correlationUid);\n     }\n \n+    public ResponseData dequeueResponseData(final String correlationUid) throws OsgpException {\n+        LOGGER.debug(\"dequeueResponseData called with correlation uid {}\", correlationUid);\n+        return (ResponseData) this.processResponse(correlationUid);\n+    }\n+\n+    public String enqueueAddRtuDeviceRequest(@Identification final String organisationIdentification,\n+            @Identification final String deviceIdentification, final AddRtuDeviceRequest addRtuDeviceRequest)\n+            throws OsgpException {\n+\n+        LOGGER.debug(\"enqueueAddRtuDeviceRequest called with organisation {} and device {}\", organisationIdentification,\n+                deviceIdentification);\n+\n+        final String correlationUid = this.correlationIdProviderService.getCorrelationId(organisationIdentification,\n+                deviceIdentification);\n+\n+        final DistributionAutomationRequestMessage message = new DistributionAutomationRequestMessage(\n+                MessageType.ADD_METER, correlationUid, organisationIdentification, deviceIdentification,", "originalCommit": "e92c53456e415b294bef8424d9e735f0801d4b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "477327c07eca6c5f4658f85f867e5220fa586a98", "chunk": "diff --git a/osgp/platform/osgp-adapter-ws-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/ws/da/application/services/DistributionAutomationService.java b/osgp/platform/osgp-adapter-ws-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/ws/da/application/services/DistributionAutomationService.java\nindex 3f1fc047a9..6c093c7b47 100644\n--- a/osgp/platform/osgp-adapter-ws-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/ws/da/application/services/DistributionAutomationService.java\n+++ b/osgp/platform/osgp-adapter-ws-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/ws/da/application/services/DistributionAutomationService.java\n\n@@ -155,7 +155,7 @@ public class DistributionAutomationService {\n                 deviceIdentification);\n \n         final DistributionAutomationRequestMessage message = new DistributionAutomationRequestMessage(\n-                MessageType.ADD_METER, correlationUid, organisationIdentification, deviceIdentification,\n+                MessageType.ADD_DEVICE, correlationUid, organisationIdentification, deviceIdentification,\n                 addRtuDeviceRequest);\n \n         try {\n"}}, {"oid": "477327c07eca6c5f4658f85f867e5220fa586a98", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/477327c07eca6c5f4658f85f867e5220fa586a98", "message": "OC-537 ~ Processes review comments.", "committedDate": "2020-05-05T20:32:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxNjMzNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/263#discussion_r420616337", "bodyText": "For now this will probably sufficient, but I think we should have a look at how to handle all different kind of RTU device types in the future.", "author": "smvdheijden", "createdAt": "2020-05-06T08:13:51Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/RtuDevice.java", "diffHunk": "@@ -14,6 +14,11 @@\n \n     private static final long serialVersionUID = -6133164707489276802L;\n \n+    /**\n+     * Device type indicator for Peak Shaving Device\n+     */\n+    public static final String PSD_TYPE = \"PSD\";", "originalCommit": "477327c07eca6c5f4658f85f867e5220fa586a98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b894560229fca703a1e108456ffe5b124867e6be", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b894560229fca703a1e108456ffe5b124867e6be", "message": "OC-537 ~ Processes review comments.", "committedDate": "2020-05-06T11:54:51Z", "type": "commit"}]}