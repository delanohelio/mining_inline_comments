{"pr_number": 156, "pr_title": "FLEX-4683 ~ Resolves deprecation for SSLContext and SSLSocketFactory.", "pr_createdAt": "2020-02-06T15:22:16Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/156", "timeline": [{"oid": "cbfbc738ae5d75ecd083cf9335c672ffb5081ed6", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/cbfbc738ae5d75ecd083cf9335c672ffb5081ed6", "message": "FLEX-4683 ~ Resolves deprecation for SSLContext and SSLSocketFactory.", "committedDate": "2020-02-06T15:21:51Z", "type": "commit"}, {"oid": "4d7ffccdb67ca98ab95bb8fd168c413d7946a6eb", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4d7ffccdb67ca98ab95bb8fd168c413d7946a6eb", "message": "FLEX-4683 ~ Makes hostname verification strategy configurable.\n\nDefault is ALLOW_ALL_HOSTNAMES.", "committedDate": "2020-02-06T17:51:40Z", "type": "commit"}, {"oid": "d295bb1a6269758e859b74cf211d0694da681b3d", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d295bb1a6269758e859b74cf211d0694da681b3d", "message": "FLEX-4683 ~ Adds hostname verification to web-demo-app.", "committedDate": "2020-02-10T14:00:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1MjEzMQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377152131", "bodyText": "This import resolves deprecation. The class org.apache.http.conn.ssl.SSLContexts is deprecated.", "author": "kevinsmeets", "createdAt": "2020-02-10T15:57:32Z", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -15,14 +15,17 @@\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n+import javax.net.ssl.HostnameVerifier;\n import javax.net.ssl.SSLContext;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.conn.ssl.DefaultHostnameVerifier;\n+import org.apache.http.conn.ssl.NoopHostnameVerifier;\n import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n-import org.apache.http.conn.ssl.SSLContexts;\n import org.apache.http.conn.ssl.TrustSelfSignedStrategy;\n import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.ssl.SSLContexts;", "originalCommit": "d295bb1a6269758e859b74cf211d0694da681b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1Mjk4Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377152987", "bodyText": "The NoopHostnameVerifier class is equivalent to SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER", "author": "kevinsmeets", "createdAt": "2020-02-10T15:58:48Z", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -285,12 +297,25 @@ private SSLConnectionSocketFactory getSSLConnectionSocketFactory(final String ke\n             throw new KeyStoreException(\"Key store is empty\");\n         }\n \n-        // Setup SSL context, load trust and keystore and build the message\n+        // Setup SSL context, load trust and key store and build the message\n         // sender\n         final SSLContext sslContext = SSLContexts.custom()\n                 .loadKeyMaterial(keyStore, this.keyStorePassword.toCharArray())\n                 .loadTrustMaterial(this.trustStoreFactory.getObject(), new TrustSelfSignedStrategy()).build();\n \n-        return new SSLConnectionSocketFactory(sslContext, SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n+        final HostnameVerifier hostnameVerifier = this.getHostnameVerifier();\n+\n+        return new SSLConnectionSocketFactory(sslContext, hostnameVerifier);\n+    }\n+\n+    private HostnameVerifier getHostnameVerifier() throws GeneralSecurityException {\n+        switch (this.webServiceTemplateHostnameVerificationStrategy) {\n+        case ALLOW_ALL_HOSTNAMES:\n+            return new NoopHostnameVerifier();", "originalCommit": "d295bb1a6269758e859b74cf211d0694da681b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1MzQ4MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377153481", "bodyText": "The DefaultHostnameVerifier class is a more strict implementation of hostname verification. This improves the security of SOAP clients.", "author": "kevinsmeets", "createdAt": "2020-02-10T15:59:36Z", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -285,12 +297,25 @@ private SSLConnectionSocketFactory getSSLConnectionSocketFactory(final String ke\n             throw new KeyStoreException(\"Key store is empty\");\n         }\n \n-        // Setup SSL context, load trust and keystore and build the message\n+        // Setup SSL context, load trust and key store and build the message\n         // sender\n         final SSLContext sslContext = SSLContexts.custom()\n                 .loadKeyMaterial(keyStore, this.keyStorePassword.toCharArray())\n                 .loadTrustMaterial(this.trustStoreFactory.getObject(), new TrustSelfSignedStrategy()).build();\n \n-        return new SSLConnectionSocketFactory(sslContext, SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n+        final HostnameVerifier hostnameVerifier = this.getHostnameVerifier();\n+\n+        return new SSLConnectionSocketFactory(sslContext, hostnameVerifier);\n+    }\n+\n+    private HostnameVerifier getHostnameVerifier() throws GeneralSecurityException {\n+        switch (this.webServiceTemplateHostnameVerificationStrategy) {\n+        case ALLOW_ALL_HOSTNAMES:\n+            return new NoopHostnameVerifier();\n+        case BROWSER_COMPATIBLE_HOSTNAMES:\n+            return new DefaultHostnameVerifier();", "originalCommit": "d295bb1a6269758e859b74cf211d0694da681b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1NDEyOQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377154129", "bodyText": "All exceptions classes KeyManagementException | UnrecoverableKeyException | NoSuchAlgorithmException | KeyStoreException inherit from GeneralSecurityException.", "author": "kevinsmeets", "createdAt": "2020-02-10T16:00:37Z", "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "diffHunk": "@@ -143,19 +150,33 @@ private HttpComponentsMessageSender createHttpMessageSender() {\n         final HttpClientBuilder builder = HttpClients.custom();\n         builder.addInterceptorFirst(new ContentLengthHeaderRemoveInterceptor());\n         try {\n-            final SSLContext sslContext = new SSLContextBuilder()\n+            final SSLContext sslContext = SSLContexts.custom()\n                     .loadKeyMaterial(this.keyStoreHelper.getKeyStore(), this.keyStoreHelper.getKeyStorePwAsChar())\n-                    .loadTrustMaterial(this.keyStoreHelper.getTrustStore()).build();\n-            final SSLConnectionSocketFactory sslConnectionFactory = new SSLConnectionSocketFactory(sslContext);\n+                    .loadTrustMaterial(this.keyStoreHelper.getTrustStore(), new TrustSelfSignedStrategy()).build();\n+\n+            final HostnameVerifier hostnameVerifier = this.getHostnameVerifier();\n+\n+            final SSLConnectionSocketFactory sslConnectionFactory = new SSLConnectionSocketFactory(sslContext,\n+                    hostnameVerifier);\n             builder.setSSLSocketFactory(sslConnectionFactory);\n             sender.setHttpClient(builder.build());\n-        } catch (KeyManagementException | UnrecoverableKeyException | NoSuchAlgorithmException | KeyStoreException e) {\n+        } catch (final GeneralSecurityException e) {", "originalCommit": "d295bb1a6269758e859b74cf211d0694da681b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f905881abee84d964e98041b29f5b621d0245cb7", "chunk": "diff --git a/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java b/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java\nindex 122c84d115..5003947f45 100644\n--- a/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java\n+++ b/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java\n\n@@ -173,7 +173,7 @@ public class SoapRequestHelper {\n         } else if (BROWSER_COMPATIBLE_HOSTNAMES.equals(this.webServiceHostnameVerificationStrategy)) {\n             return new DefaultHostnameVerifier();\n         } else {\n-            throw new GeneralSecurityException(\"No hostname verification stragegy set!\");\n+            throw new GeneralSecurityException(\"No hostname verification strategy set!\");\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1NDgzOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377154838", "bodyText": "Make sure that components not yet implementing the BROWSER_COMPATIBLE_HOSTNAMES hostname verification are constructed with ALLOW_ALL_HOSTNAMES.", "author": "kevinsmeets", "createdAt": "2020-02-10T16:01:43Z", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -87,6 +91,7 @@ public WebServiceTemplate getTemplate(final String organisationIdentification, f\n         private int maxConnectionsTotal = 20;\n         private int connectionTimeout = 120000;\n         private CircuitBreaker circuitBreaker;\n+        private WebServiceTemplateHostnameVerificationStrategy webServiceTemplateHostnameVerificationStrategy = WebServiceTemplateHostnameVerificationStrategy.ALLOW_ALL_HOSTNAMES;", "originalCommit": "d295bb1a6269758e859b74cf211d0694da681b3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "5fae0ac607e6348b19fc2393127d6f4e10f2f836", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5fae0ac607e6348b19fc2393127d6f4e10f2f836", "message": "FLEX-4683 ~ Moves header to top of file.", "committedDate": "2020-02-10T16:03:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1ODEwNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377158104", "bodyText": "The web-demo-all has no dependency on shared. Therefore using a couple of string constants instead of the WebServiceTemplateHostnameVerificationStrategy enumeration.", "author": "kevinsmeets", "createdAt": "2020-02-10T16:06:49Z", "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "diffHunk": "@@ -35,6 +36,9 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(SoapRequestHelper.class);\n \n+    private static final String ALLOW_ALL_HOSTNAMES = \"ALLOW_ALL_HOSTNAMES\";\n+    private static final String BROWSER_COMPATIBLE_HOSTNAMES = \"BROWSER_COMPATIBLE_HOSTNAMES\";", "originalCommit": "5fae0ac607e6348b19fc2393127d6f4e10f2f836", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1ODg2OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377158869", "bodyText": "Instead of the SSLContextBuilder use the same implementation as the DefaultWebServiceTemplateFactory.", "author": "kevinsmeets", "createdAt": "2020-02-10T16:08:02Z", "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "diffHunk": "@@ -143,19 +150,33 @@ private HttpComponentsMessageSender createHttpMessageSender() {\n         final HttpClientBuilder builder = HttpClients.custom();\n         builder.addInterceptorFirst(new ContentLengthHeaderRemoveInterceptor());\n         try {\n-            final SSLContext sslContext = new SSLContextBuilder()\n+            final SSLContext sslContext = SSLContexts.custom()", "originalCommit": "5fae0ac607e6348b19fc2393127d6f4e10f2f836", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f905881abee84d964e98041b29f5b621d0245cb7", "chunk": "diff --git a/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java b/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java\nindex 122c84d115..5003947f45 100644\n--- a/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java\n+++ b/public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java\n\n@@ -173,7 +173,7 @@ public class SoapRequestHelper {\n         } else if (BROWSER_COMPATIBLE_HOSTNAMES.equals(this.webServiceHostnameVerificationStrategy)) {\n             return new DefaultHostnameVerifier();\n         } else {\n-            throw new GeneralSecurityException(\"No hostname verification stragegy set!\");\n+            throw new GeneralSecurityException(\"No hostname verification strategy set!\");\n         }\n     }\n \n"}}, {"oid": "f905881abee84d964e98041b29f5b621d0245cb7", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/f905881abee84d964e98041b29f5b621d0245cb7", "message": "FLEX-4683 ~ Fixes typo.", "committedDate": "2020-02-10T16:10:00Z", "type": "commit"}]}