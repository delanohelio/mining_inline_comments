{"pr_number": 515, "pr_title": "Feature/slim 2323 get outages", "pr_createdAt": "2020-11-17T12:16:19Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/515", "timeline": [{"oid": "c3cec4f7c79b30ad555d2928b3c93b61841b93bb", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c3cec4f7c79b30ad555d2928b3c93b61841b93bb", "message": "Added GetOutages", "committedDate": "2020-11-12T13:03:44Z", "type": "commit"}, {"oid": "675f939f4e6bd37e71ab69280a5b7b4dbc1a7979", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/675f939f4e6bd37e71ab69280a5b7b4dbc1a7979", "message": "First implementation of GetOutages in DLMS adapter protocol", "committedDate": "2020-11-12T18:01:37Z", "type": "commit"}, {"oid": "40f859dfeed4271e81853c7a31982c02fb091d34", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/40f859dfeed4271e81853c7a31982c02fb091d34", "message": "added bundle request", "committedDate": "2020-11-12T21:59:04Z", "type": "commit"}, {"oid": "ba62679b481ed1b102275b1162b9bc4cabdf9e91", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ba62679b481ed1b102275b1162b9bc4cabdf9e91", "message": "Changed to Get Outages", "committedDate": "2020-11-13T14:12:35Z", "type": "commit"}, {"oid": "43cf13050a409b23c17f38ab25f91d1b0e5624ad", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/43cf13050a409b23c17f38ab25f91d1b0e5624ad", "message": "request mapping and authorization", "committedDate": "2020-11-13T19:09:26Z", "type": "commit"}, {"oid": "bed213cfd83fa2958443bb16d975d12d2855b0af", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/bed213cfd83fa2958443bb16d975d12d2855b0af", "message": "mapping and converting", "committedDate": "2020-11-17T12:13:44Z", "type": "commit"}, {"oid": "08e4ce28cb5c6687add02f8d1879497b4c521f90", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/08e4ce28cb5c6687add02f8d1879497b4c521f90", "message": "added GetOutagesResponse to possible result objects", "committedDate": "2020-11-17T15:31:23Z", "type": "commit"}, {"oid": "3e199c78f633cc37bd741834b2b9812c05440ebc", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/3e199c78f633cc37bd741834b2b9812c05440ebc", "message": "removed power failure feature from FindEvents; added cucumber tests for GetOutages through bundle process", "committedDate": "2020-11-17T20:41:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0OTc5MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525849791", "bodyText": "back to \"normal\" +1", "author": "coendamen", "createdAt": "2020-11-18T06:50:06Z", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/application/mapping/EventConverter.java", "diffHunk": "@@ -47,8 +47,6 @@\n             event.setTimestamp(timestamp);\n             event.setEventCounter(source.getEventCounter());\n             event.setEventLogCategory(EventLogCategory.fromValue(source.getEventLogCategory().name()));\n-            event.setDuration(source.getDuration());", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MjgyNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526172827", "bodyText": "I agree this makes the event converter a little less overloaded and simpler.\nHowever, it comes at the expense of breaking the larger context, in which events have different properties, by setting the power outages apart from other events as some more special case. I think they are just one other example of an event and a cleaner solution would leave the overall idea of the event intact.\nFor instance, the communication session events have a counter, that none of the other events from the other event logs have.\nThe power failure events have a duration, and do not share an event code that events from the other logs have.\nThe only property all events have is some event timestamp (though the meaning of this timestamp is derived from the context of the event log).", "author": "bvdzwet", "createdAt": "2020-11-18T15:23:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg0OTc5MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDI1Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525850257", "bodyText": "there is no validation code here? not needed ?", "author": "coendamen", "createdAt": "2020-11-18T06:51:17Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n+\n+import java.io.Serializable;\n+\n+import org.joda.time.DateTime;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+\n+public class GetOutagesRequestData implements Serializable, ActionRequest {\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see\n+     * org.opensmartgridplatform.domain.core.valueobjects.smartmetering.ActionValueObject\n+     * #validate()\n+     */\n+    @Override\n+    public void validate() throws FunctionalException {\n+", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2NTEwNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526265104", "bodyText": "Sometimes (depending on the type a request) validation is not necessary.\nIn such cases a comment is needed to explain it is not simply forgotten (and to keep SonarQube quiet).\nSee for instance some other classes like GetConfigurationObjectRequestData.", "author": "bvdzwet", "createdAt": "2020-11-18T17:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxMDE5NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526910195", "bodyText": "There are no input parameters to validate", "author": "jboon", "createdAt": "2020-11-19T14:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDI1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxMTQwOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526911408", "bodyText": "I added a comment that there no need for validation and corrected the copyright.", "author": "jboon", "createdAt": "2020-11-19T14:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDI1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\nindex 116c870585..bf2a553bd0 100644\n--- a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\n+++ b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\n\n@@ -1,32 +1,23 @@\n /**\n- * Copyright 2015 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  */\n package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n \n import java.io.Serializable;\n \n-import org.joda.time.DateTime;\n import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n-import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n-import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n \n public class GetOutagesRequestData implements Serializable, ActionRequest {\n \n-    /*\n-     * (non-Javadoc)\n-     * \n-     * @see\n-     * org.opensmartgridplatform.domain.core.valueobjects.smartmetering.ActionValueObject\n-     * #validate()\n-     */\n     @Override\n     public void validate() throws FunctionalException {\n-\n+        // No validation needed\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDU4Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525850586", "bodyText": "this was bad !", "author": "coendamen", "createdAt": "2020-11-18T06:52:16Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToEventListConverter.java", "diffHunk": "@@ -63,64 +64,30 @@ private EventDto getDefaultEvent(final DataObject eventDataObject, final EventLo\n                     \"eventData size should be \" + eventLogCategory.getNumberOfEventElements());\n         }\n \n-        EventDto event = null;\n-\n-        if (eventLogCategory == EventLogCategoryDto.POWER_FAILURE_EVENT_LOG) {", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI3OTk2OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526279968", "bodyText": "It wasn't the prettiest code, but I think it only highlighted already existing issues with handling the events that have subtle variations in the data they contain.\nI wouldn't be to cheerful resolving it by only dealing with the power failure event log as outage, ignoring the conceptual overlap and differences between all event logs.", "author": "bvdzwet", "createdAt": "2020-11-18T17:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxNTE5NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526915194", "bodyText": "There is another story on the backlog that will make conditional logic inevitable. About the power failure log, this seemed to be a feature that was a whole different beast. We were mislead by the term event log, but ran into problems throughout the whole stack reminding us about this poor fit. Current implementation seems much better, simplifying things on all levels. But I'm sure we can still have a debate on the choices when picking different perspectives.", "author": "jboon", "createdAt": "2020-11-19T14:10:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MDU4Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MTUyMA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525851520", "bodyText": "possible NPE here? can eventData.get(0) value be null itself ?", "author": "coendamen", "createdAt": "2020-11-18T06:54:49Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToOutageListConverter.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.application.mapping;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.joda.time.DateTime;\n+import org.openmuc.jdlms.datatypes.DataObject;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.exceptions.ProtocolAdapterException;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetOutagesRequestDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.OutageDto;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Slf4j\n+@Component(value = \"dataObjectToOutageListConverter\")\n+public class DataObjectToOutageListConverter {\n+\n+    private static final String EVENT_DATA_VALUE_IS_NOT_A_NUMBER = \"eventData value is not a number\";\n+    private static final int NUMBER_OF_ELEMENTS = 2;\n+    private final DlmsHelper dlmsHelper;\n+\n+    @Autowired\n+    public DataObjectToOutageListConverter(final DlmsHelper dlmsHelper) {\n+        this.dlmsHelper = dlmsHelper;\n+    }\n+\n+    public List<OutageDto> convert(final DataObject source, final GetOutagesRequestDto getOutagesRequestDto)\n+            throws ProtocolAdapterException {\n+        final List<OutageDto> eventList = new ArrayList<OutageDto>();\n+        if (source == null) {\n+            throw new ProtocolAdapterException(\"DataObject should not be null\");\n+        }\n+\n+        final List<DataObject> dataObjects = source.getValue();\n+        for (final DataObject dataObject : dataObjects) {\n+            eventList.add(this.getOutageDto(dataObject));\n+        }\n+\n+        return eventList;\n+\n+    }\n+\n+    private OutageDto getOutageDto(final DataObject outageDataObject) throws ProtocolAdapterException {\n+\n+        final List<DataObject> outageData = outageDataObject.getValue();\n+\n+        if (outageData == null) {\n+            throw new ProtocolAdapterException(\"outageData DataObject should not be null\");\n+        }\n+\n+        if (outageData.size() != NUMBER_OF_ELEMENTS) {\n+            throw new ProtocolAdapterException(\"outageData size should be \" + NUMBER_OF_ELEMENTS);\n+        }\n+\n+        final DateTime endTime = this.extractDateTime(outageData);\n+        final Long duration = this.extractEventDuration(outageData);\n+\n+        OutageDto outage = new OutageDto(endTime, duration);\n+\n+        log.info(\"Converted dataObject to outage: {}\", outage);\n+        return outage;\n+    }\n+\n+    private DateTime extractDateTime(final List<DataObject> eventData) throws ProtocolAdapterException {\n+        final DateTime dateTime = this.dlmsHelper.convertDataObjectToDateTime(eventData.get(0)).asDateTime();", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxNzM4Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526917387", "bodyText": "For each item we get two values. They are essential to the data and are not expected to be a possible null-reference", "author": "jboon", "createdAt": "2020-11-19T14:13:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MTUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToOutageListConverter.java b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToOutageListConverter.java\nindex 5e9814b2d8..0fee75cea4 100644\n--- a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToOutageListConverter.java\n+++ b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/mapping/DataObjectToOutageListConverter.java\n\n@@ -16,7 +16,6 @@ import org.joda.time.DateTime;\n import org.openmuc.jdlms.datatypes.DataObject;\n import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n import org.opensmartgridplatform.adapter.protocol.dlms.exceptions.ProtocolAdapterException;\n-import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetOutagesRequestDto;\n import org.opensmartgridplatform.dto.valueobjects.smartmetering.OutageDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MTg5OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525851898", "bodyText": "could be removed or changed to debug ?", "author": "coendamen", "createdAt": "2020-11-18T06:55:46Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java", "diffHunk": "@@ -66,6 +72,21 @@ public EventMessageDataResponseDto findEvents(final DlmsConnectionManager conn,\n         return new EventMessageDataResponseDto(events);\n     }\n \n+    // === GET OUTAGES ===\n+    public GetOutagesResponseDto getOutages(DlmsConnectionManager conn, DlmsDevice device,\n+            GetOutagesRequestList getOutagesRequestList) throws ProtocolAdapterException {\n+\n+        final List<OutageDto> outages = new ArrayList<>();\n+\n+        log.info(\"getOutages setting up connection with meter {}\", device.getDeviceIdentification());", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkxODIzMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526918232", "bodyText": "set to debug", "author": "jboon", "createdAt": "2020-11-19T14:14:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MTg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\nindex cb52c6512e..62aca746b6 100644\n--- a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\n+++ b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\n\n@@ -72,21 +64,6 @@ public class ManagementService {\n         return new EventMessageDataResponseDto(events);\n     }\n \n-    // === GET OUTAGES ===\n-    public GetOutagesResponseDto getOutages(DlmsConnectionManager conn, DlmsDevice device,\n-            GetOutagesRequestList getOutagesRequestList) throws ProtocolAdapterException {\n-\n-        final List<OutageDto> outages = new ArrayList<>();\n-\n-        log.info(\"getOutages setting up connection with meter {}\", device.getDeviceIdentification());\n-\n-        for (final GetOutagesRequestDto getOutagesRequestDto : getOutagesRequestList.getGetOutagesRequestList()) {\n-            outages.addAll(this.getOutagesCommandExecutor.execute(conn, device, getOutagesRequestDto));\n-        }\n-\n-        return new GetOutagesResponseDto(outages);\n-    }\n-\n     public void changeInDebugMode(final DlmsDevice device, final boolean debugMode) {\n         device.setInDebugMode(debugMode);\n         this.dlmsDeviceRepository.save(device);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MjM0NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525852345", "bodyText": "there can be more getOutageRequest at the same time? this seems strange, normally there is one request executed in the command executor", "author": "coendamen", "createdAt": "2020-11-18T06:56:57Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java", "diffHunk": "@@ -66,6 +72,21 @@ public EventMessageDataResponseDto findEvents(final DlmsConnectionManager conn,\n         return new EventMessageDataResponseDto(events);\n     }\n \n+    // === GET OUTAGES ===\n+    public GetOutagesResponseDto getOutages(DlmsConnectionManager conn, DlmsDevice device,\n+            GetOutagesRequestList getOutagesRequestList) throws ProtocolAdapterException {\n+\n+        final List<OutageDto> outages = new ArrayList<>();\n+\n+        log.info(\"getOutages setting up connection with meter {}\", device.getDeviceIdentification());\n+\n+        for (final GetOutagesRequestDto getOutagesRequestDto : getOutagesRequestList.getGetOutagesRequestList()) {", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkyMDI3OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526920278", "bodyText": "good one, I'll have a look at this", "author": "jboon", "createdAt": "2020-11-19T14:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MjM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAzMTU2MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r527031560", "bodyText": "Probably an enthousiastic copy cat, it wasn't needed. Same List object detected in the FinfEvents flow, guess that inspired.", "author": "jboon", "createdAt": "2020-11-19T16:39:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1MjM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\nindex cb52c6512e..62aca746b6 100644\n--- a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\n+++ b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\n\n@@ -72,21 +64,6 @@ public class ManagementService {\n         return new EventMessageDataResponseDto(events);\n     }\n \n-    // === GET OUTAGES ===\n-    public GetOutagesResponseDto getOutages(DlmsConnectionManager conn, DlmsDevice device,\n-            GetOutagesRequestList getOutagesRequestList) throws ProtocolAdapterException {\n-\n-        final List<OutageDto> outages = new ArrayList<>();\n-\n-        log.info(\"getOutages setting up connection with meter {}\", device.getDeviceIdentification());\n-\n-        for (final GetOutagesRequestDto getOutagesRequestDto : getOutagesRequestList.getGetOutagesRequestList()) {\n-            outages.addAll(this.getOutagesCommandExecutor.execute(conn, device, getOutagesRequestDto));\n-        }\n-\n-        return new GetOutagesResponseDto(outages);\n-    }\n-\n     public void changeInDebugMode(final DlmsDevice device, final boolean debugMode) {\n         device.setInDebugMode(debugMode);\n         this.dlmsDeviceRepository.save(device);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1NDE3Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525854172", "bodyText": "for my understanding, why is there a request list? and not a single request to get the outages from a meter?", "author": "coendamen", "createdAt": "2020-11-18T07:01:57Z", "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.dto.valueobjects.smartmetering;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+public class GetOutagesRequestList implements Serializable {", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAzMTg0NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r527031844", "bodyText": "see comment above", "author": "jboon", "createdAt": "2020-11-19T16:39:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg1NDE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java b/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java\ndeleted file mode 100644\nindex a0681a5a4a..0000000000\n--- a/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java\n+++ /dev/null\n\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright 2020 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.dto.valueobjects.smartmetering;\n-\n-import java.io.Serializable;\n-import java.util.List;\n-\n-public class GetOutagesRequestList implements Serializable {\n-\n-    private static final long serialVersionUID = -9041475699103580130L;\n-\n-    private List<GetOutagesRequestDto> requestDtoList;\n-\n-    public GetOutagesRequestList(final List<GetOutagesRequestDto> requestDtoList) {\n-        this.requestDtoList = requestDtoList;\n-    }\n-\n-    public List<GetOutagesRequestDto> getGetOutagesRequestList() {\n-        return this.requestDtoList;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg2NDY0Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525864646", "bodyText": "Shouldn't it be possible to get this type of events with the FindEvents request?", "author": "harrymiddelburgetall", "createdAt": "2020-11-18T07:29:09Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/misc/FindEventsCommandExecutor.java", "diffHunk": "@@ -65,7 +65,6 @@\n         EVENT_LOG_CATEGORY_OBISCODE_MAP.put(EventLogCategoryDto.COMMUNICATION_SESSION_LOG, new ObisCode(\"0.0.99.98.4.255\"));\n         EVENT_LOG_CATEGORY_OBISCODE_MAP.put(EventLogCategoryDto.M_BUS_EVENT_LOG,           new ObisCode(\"0.0.99.98.3.255\"));\n         EVENT_LOG_CATEGORY_OBISCODE_MAP.put(EventLogCategoryDto.POWER_QUALITY_EVENT_LOG,   new ObisCode(\"0.0.99.98.5.255\"));\n-        EVENT_LOG_CATEGORY_OBISCODE_MAP.put(EventLogCategoryDto.POWER_FAILURE_EVENT_LOG,   new ObisCode(\"1.0.99.97.0.255\"));", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg2NTYzNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r525865634", "bodyText": "Shouldn't it be possible to get this type of events with the FindEvents request?", "author": "harrymiddelburgetall", "createdAt": "2020-11-18T07:31:14Z", "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/EventLogCategoryDto.java", "diffHunk": "@@ -12,8 +12,7 @@\n     FRAUD_DETECTION_LOG(2),\n     COMMUNICATION_SESSION_LOG(3),\n     M_BUS_EVENT_LOG(2),\n-    POWER_QUALITY_EVENT_LOG(2),\n-    POWER_FAILURE_EVENT_LOG(2);", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5ODA0Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526198046", "bodyText": "Formatting is messed up, and if this is the only change, I wonder why this file is included in this pull request at all.", "author": "bvdzwet", "createdAt": "2020-11-18T15:53:41Z", "path": "osgp/platform/osgp-adapter-ws-shared/src/main/java/org/opensmartgridplatform/adapter/ws/shared/services/ResponseDataService.java", "diffHunk": "@@ -1,4 +1,4 @@\n-/**\n+    /**", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/platform/osgp-adapter-ws-shared/src/main/java/org/opensmartgridplatform/adapter/ws/shared/services/ResponseDataService.java b/osgp/platform/osgp-adapter-ws-shared/src/main/java/org/opensmartgridplatform/adapter/ws/shared/services/ResponseDataService.java\nindex 33a64cd103..c4ac6fbfe2 100644\n--- a/osgp/platform/osgp-adapter-ws-shared/src/main/java/org/opensmartgridplatform/adapter/ws/shared/services/ResponseDataService.java\n+++ b/osgp/platform/osgp-adapter-ws-shared/src/main/java/org/opensmartgridplatform/adapter/ws/shared/services/ResponseDataService.java\n\n@@ -1,9 +1,10 @@\n-    /**\n+/**\n  * Copyright 2017 Smart Society Services B.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  */\n package org.opensmartgridplatform.adapter.ws.shared.services;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI1ODkyNA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526258924", "bodyText": "Besides this change, that is tied to the decision between outages and power failure event logs, I noticed someone messed up the line endings of this file a year and four months ago.\nLine endings should only be newlines, not Windows style carriage return plus newline.", "author": "bvdzwet", "createdAt": "2020-11-18T17:10:11Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/EventLogCategory.java", "diffHunk": "@@ -15,8 +15,7 @@\n     FRAUD_DETECTION_LOG,\r\n     COMMUNICATION_SESSION_LOG,\r\n     M_BUS_EVENT_LOG,\r\n-    POWER_QUALITY_EVENT_LOG,\r\n-    POWER_FAILURE_EVENT_LOG;\r\n+    POWER_QUALITY_EVENT_LOG;\r", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/EventLogCategory.java b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/EventLogCategory.java\nindex c16c940558..5f3500f285 100644\n--- a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/EventLogCategory.java\n+++ b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/EventLogCategory.java\n\n@@ -1,25 +1,24 @@\n-/**\n- * Copyright 2015 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n-\n-import java.io.Serializable;\n-\n-public enum EventLogCategory implements Serializable {\n-    STANDARD_EVENT_LOG,\n-    FRAUD_DETECTION_LOG,\n-    COMMUNICATION_SESSION_LOG,\n-    M_BUS_EVENT_LOG,\n-    POWER_QUALITY_EVENT_LOG;\n-\n-    public static EventLogCategory fromValue(final String v) {\n-        return valueOf(v);\n-    }\n-\n-}\n-\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n+\n+import java.io.Serializable;\n+\n+public enum EventLogCategory implements Serializable {\n+    STANDARD_EVENT_LOG,\n+    FRAUD_DETECTION_LOG,\n+    COMMUNICATION_SESSION_LOG,\n+    M_BUS_EVENT_LOG;\n+\n+    public static EventLogCategory fromValue(final String v) {\n+        return valueOf(v);\n+    }\n+\n+}\n+\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2MDUxOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526260518", "bodyText": "This file looks like it is new. In that case the copyright has the wrong name and year.", "author": "bvdzwet", "createdAt": "2020-11-18T17:12:19Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\nindex 116c870585..bf2a553bd0 100644\n--- a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\n+++ b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\n\n@@ -1,32 +1,23 @@\n /**\n- * Copyright 2015 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  */\n package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n \n import java.io.Serializable;\n \n-import org.joda.time.DateTime;\n import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n-import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n-import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n \n public class GetOutagesRequestData implements Serializable, ActionRequest {\n \n-    /*\n-     * (non-Javadoc)\n-     * \n-     * @see\n-     * org.opensmartgridplatform.domain.core.valueobjects.smartmetering.ActionValueObject\n-     * #validate()\n-     */\n     @Override\n     public void validate() throws FunctionalException {\n-\n+        // No validation needed\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2ODI5NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526268294", "bodyText": "For me, comments like this look like they haven't got something useful to offer over not adding anything.\nYou could consider leaving it out.", "author": "bvdzwet", "createdAt": "2020-11-18T17:23:07Z", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n+\n+import java.io.Serializable;\n+\n+import org.joda.time.DateTime;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+\n+public class GetOutagesRequestData implements Serializable, ActionRequest {\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see\n+     * org.opensmartgridplatform.domain.core.valueobjects.smartmetering.ActionValueObject\n+     * #validate()\n+     */", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\nindex 116c870585..bf2a553bd0 100644\n--- a/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\n+++ b/osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/GetOutagesRequestData.java\n\n@@ -1,32 +1,23 @@\n /**\n- * Copyright 2015 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  */\n package org.opensmartgridplatform.domain.core.valueobjects.smartmetering;\n \n import java.io.Serializable;\n \n-import org.joda.time.DateTime;\n import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n-import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n-import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n \n public class GetOutagesRequestData implements Serializable, ActionRequest {\n \n-    /*\n-     * (non-Javadoc)\n-     * \n-     * @see\n-     * org.opensmartgridplatform.domain.core.valueobjects.smartmetering.ActionValueObject\n-     * #validate()\n-     */\n     @Override\n     public void validate() throws FunctionalException {\n-\n+        // No validation needed\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5NDIyOQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526294229", "bodyText": "Code is not formatted according the conventions, missing final modifiers here.", "author": "bvdzwet", "createdAt": "2020-11-18T17:42:23Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java", "diffHunk": "@@ -66,6 +72,21 @@ public EventMessageDataResponseDto findEvents(final DlmsConnectionManager conn,\n         return new EventMessageDataResponseDto(events);\n     }\n \n+    // === GET OUTAGES ===\n+    public GetOutagesResponseDto getOutages(DlmsConnectionManager conn, DlmsDevice device,", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\nindex cb52c6512e..62aca746b6 100644\n--- a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\n+++ b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/application/services/ManagementService.java\n\n@@ -72,21 +64,6 @@ public class ManagementService {\n         return new EventMessageDataResponseDto(events);\n     }\n \n-    // === GET OUTAGES ===\n-    public GetOutagesResponseDto getOutages(DlmsConnectionManager conn, DlmsDevice device,\n-            GetOutagesRequestList getOutagesRequestList) throws ProtocolAdapterException {\n-\n-        final List<OutageDto> outages = new ArrayList<>();\n-\n-        log.info(\"getOutages setting up connection with meter {}\", device.getDeviceIdentification());\n-\n-        for (final GetOutagesRequestDto getOutagesRequestDto : getOutagesRequestList.getGetOutagesRequestList()) {\n-            outages.addAll(this.getOutagesCommandExecutor.execute(conn, device, getOutagesRequestDto));\n-        }\n-\n-        return new GetOutagesResponseDto(outages);\n-    }\n-\n     public void changeInDebugMode(final DlmsDevice device, final boolean debugMode) {\n         device.setInDebugMode(debugMode);\n         this.dlmsDeviceRepository.save(device);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5ODI0OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526298249", "bodyText": "This license header is sometimes added with, sometimes without this \"empty line\" (just the asterisk). It looks a bit sloppy, and I think leaving the empty line out best fits the guidelines.", "author": "bvdzwet", "createdAt": "2020-11-18T17:48:35Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/misc/GetOutagesCommandExecutor.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/misc/GetOutagesCommandExecutor.java b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/misc/GetOutagesCommandExecutor.java\nindex 442f205b85..48978f4b7a 100644\n--- a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/misc/GetOutagesCommandExecutor.java\n+++ b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/misc/GetOutagesCommandExecutor.java\n\n@@ -4,8 +4,7 @@\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n  * except in compliance with the License. You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  */\n package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.misc;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwMjQwNQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526302405", "bodyText": "This file looks new, copyright should be for Alliander N.V. instead of Smart Society Services B.V.", "author": "bvdzwet", "createdAt": "2020-11-18T17:54:09Z", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/processors/GetOutagesRequestMessageProcessor.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/processors/GetOutagesRequestMessageProcessor.java b/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/processors/GetOutagesRequestMessageProcessor.java\ndeleted file mode 100644\nindex a997eb6418..0000000000\n--- a/osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/processors/GetOutagesRequestMessageProcessor.java\n+++ /dev/null\n\n@@ -1,43 +0,0 @@\n-/**\n- * Copyright 2020 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.adapter.protocol.dlms.infra.messaging.processors;\n-\n-import java.io.Serializable;\n-\n-import org.opensmartgridplatform.adapter.protocol.dlms.application.services.ManagementService;\n-import org.opensmartgridplatform.adapter.protocol.dlms.domain.entities.DlmsDevice;\n-import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.DlmsConnectionManager;\n-import org.opensmartgridplatform.adapter.protocol.dlms.infra.messaging.DeviceRequestMessageProcessor;\n-import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetOutagesRequestList;\n-import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n-import org.opensmartgridplatform.shared.infra.jms.MessageType;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-/**\n- * Class for processing get outages request messages\n- */\n-@Component\n-public class GetOutagesRequestMessageProcessor extends DeviceRequestMessageProcessor {\n-\n-    @Autowired\n-    private ManagementService managementService;\n-\n-    public GetOutagesRequestMessageProcessor() {\n-        super(MessageType.GET_OUTAGES);\n-    }\n-\n-    @Override\n-    protected Serializable handleMessage(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final Serializable requestObject) throws OsgpException {\n-\n-        this.assertRequestObjectType(GetOutagesRequestList.class, requestObject);\n-\n-        return this.managementService.getOutages(conn, device, (GetOutagesRequestList) requestObject);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNTIwMA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526305200", "bodyText": "Looks like this should mention Alliander N.V. instead of Smart Society Services B.V.", "author": "bvdzwet", "createdAt": "2020-11-18T17:56:58Z", "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestDto.java", "diffHunk": "@@ -0,0 +1,13 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestDto.java b/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestDto.java\nindex 70a210cf6c..b8d647ac49 100644\n--- a/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestDto.java\n+++ b/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestDto.java\n\n@@ -1,9 +1,10 @@\n /**\n- * Copyright 2020 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  */\n package org.opensmartgridplatform.dto.valueobjects.smartmetering;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNTY0OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/515#discussion_r526305648", "bodyText": "Looks like this should mention Alliander N.V. instead of Smart Society Services B.V.", "author": "bvdzwet", "createdAt": "2020-11-18T17:57:36Z", "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.", "originalCommit": "3e199c78f633cc37bd741834b2b9812c05440ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "24261415e053cd7ced5e29427218ef0fc28ec113", "chunk": "diff --git a/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java b/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java\ndeleted file mode 100644\nindex a0681a5a4a..0000000000\n--- a/osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/GetOutagesRequestList.java\n+++ /dev/null\n\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright 2020 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.dto.valueobjects.smartmetering;\n-\n-import java.io.Serializable;\n-import java.util.List;\n-\n-public class GetOutagesRequestList implements Serializable {\n-\n-    private static final long serialVersionUID = -9041475699103580130L;\n-\n-    private List<GetOutagesRequestDto> requestDtoList;\n-\n-    public GetOutagesRequestList(final List<GetOutagesRequestDto> requestDtoList) {\n-        this.requestDtoList = requestDtoList;\n-    }\n-\n-    public List<GetOutagesRequestDto> getGetOutagesRequestList() {\n-        return this.requestDtoList;\n-    }\n-}\n"}}, {"oid": "24261415e053cd7ced5e29427218ef0fc28ec113", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/24261415e053cd7ced5e29427218ef0fc28ec113", "message": "review comments", "committedDate": "2020-11-19T16:37:21Z", "type": "commit"}, {"oid": "ef4d60b54d98c240df43507571ae43f6fefd24bd", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ef4d60b54d98c240df43507571ae43f6fefd24bd", "message": "Fix by Carlo", "committedDate": "2020-11-20T15:47:47Z", "type": "commit"}, {"oid": "a5e9a6156326ae771a1294c3c21a9ee5a4b8e27f", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a5e9a6156326ae771a1294c3c21a9ee5a4b8e27f", "message": "trigger build", "committedDate": "2020-11-25T07:55:21Z", "type": "commit"}, {"oid": "c62be8cbcc8e294b6243eac882981ac482a17d31", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c62be8cbcc8e294b6243eac882981ac482a17d31", "message": "Merge branch 'development' into feature/SLIM-2323_get_outages", "committedDate": "2020-11-25T11:13:16Z", "type": "commit"}, {"oid": "f2f3130864bb87f32850908d8328cadab0ab36bb", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/f2f3130864bb87f32850908d8328cadab0ab36bb", "message": "rolledback to development version", "committedDate": "2020-11-25T14:13:12Z", "type": "commit"}]}