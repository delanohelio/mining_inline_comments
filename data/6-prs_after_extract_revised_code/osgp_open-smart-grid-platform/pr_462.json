{"pr_number": 462, "pr_title": "code test coverage increased for AdHocManagementService", "pr_createdAt": "2020-10-15T08:49:24Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/462", "timeline": [{"oid": "fb5bb957c4e034c87d5929493c75e1d718116658", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/fb5bb957c4e034c87d5929493c75e1d718116658", "message": "Merge pull request #2 from OSGP/development\n\nUpdating Fork", "committedDate": "2020-09-24T11:43:31Z", "type": "commit"}, {"oid": "c410144c289ad8125eac641819d3c57a3984d419", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c410144c289ad8125eac641819d3c57a3984d419", "message": "fixed CLA issue", "committedDate": "2020-10-15T08:46:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc3MTY1Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522771657", "bodyText": "This file is missing a license header.", "author": "bvdzwet", "createdAt": "2020-11-13T08:10:27Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4NTk1OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r533585958", "bodyText": "The license header for new files should:\n\nrefer to the current year when the file is added in the copyright line;\nmention Alliander N.V. instead of Smart Society Services B.V.", "author": "bvdzwet", "createdAt": "2020-12-01T17:19:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjc3MTY1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2MDc3Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522860777", "bodyText": "This is using tabs for indentation. According to the formatting conventions, spaces should be used.\nSee: https://documentation.gxf.lfenergy.org/Opensourcecommunity/ToolsguidelinesCI.html", "author": "bvdzwet", "createdAt": "2020-11-13T10:26:36Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {\n+\t\twhen(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2MjExMw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522862113", "bodyText": "Missing a space before '{'. Perhaps your IDE is not configured according to the conventions?\nSee https://documentation.gxf.lfenergy.org/Opensourcecommunity/ToolsguidelinesCI.html for some guidelines on how to set this up properly for the GXF code base.", "author": "bvdzwet", "createdAt": "2020-11-13T10:29:14Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2MzU2NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522863564", "bodyText": "This line contains trailing whitespace (as do some other lines, where I won't repeat this), which is not meant to be in Java source files formatted according to the code formatting conventions for GXF.", "author": "bvdzwet", "createdAt": "2020-11-13T10:32:01Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    ", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2Njk4Mw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522866983", "bodyText": "No reason to have multiple empty lines between separate fields.\nAdding extra white lines in random locations, makes the code look a little sloppy.", "author": "bvdzwet", "createdAt": "2020-11-13T10:38:41Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    ", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4NzQzMA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r533987430", "bodyText": "I see all empty lines have been removed. I think that is fine, but to avoid misunderstanding a single empty line is not an issue if you want to create some visible separation, just avoid multiple empty lines.", "author": "bvdzwet", "createdAt": "2020-12-02T08:43:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2Njk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg4MDIxNg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522880216", "bodyText": "While we don't have hard guidelines on how to name test methods I'd like to share my thoughts for your consideration.\nIn my perspective the convention to give these methods a name starting with \"test\" stems from the days when this convention was needed for JUnit to determine which methods actually contain tests (JUnit has a history going back to ancient times when Java did not have annotations). Nowadays the @Test annotation signals the method contains a test, leaving us the option to focus the name of the method more on what is actually being tested.\nWith regard to what is being tested, the method name now only mentions it's testing something about setReboot (but what actually, other than that you can apparently invoke it?), and looking at the coverage focused only on what is visible in AdHocManagementService one could have the impression this looks kind of complete.\nLooking at what is asserted in this test, I think I'd name it something like setRebootSendsARequestMessageToOsgpCore. I feel as though this captures something important and specific, that you would want to verify by a test.", "author": "bvdzwet", "createdAt": "2020-11-13T11:03:39Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg4MzQzNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522883437", "bodyText": "While we don't have hard guidelines on how to deal with exceptions that might be thrown from a test, but are no part of the thing that is actually verified, I'd like to suggest some way you might want to deal with them.\nWhat I would do when there are checked exceptions that should not normally occur in the test, is have the test declare it throws Exception without being specific. This is just simpler and there is no reason to change it to keep it up to date if the code under test is ever changed to throw some other kind of checked exception.\nThis advice is in particular for test methods where the exception is not part of the verification in that method, and is explicitly not meant as a simple way to deal with exceptions in code outside the unit tests.", "author": "bvdzwet", "createdAt": "2020-11-13T11:10:04Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg4NTQwOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522885408", "bodyText": "There are some spaces missing following commas in this line. Please check your code formatting settings and make sure they are set and applied according to the GXF conventions.", "author": "bvdzwet", "createdAt": "2020-11-13T11:13:58Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {\n+\t\twhen(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");\n+\t\twhen(this.organisationDomainService.searchOrganisation(any(String.class))).thenReturn(Mockito.mock(Organisation.class));\n+\t\twhen(this.deviceDomainService.searchActiveDevice(any(String.class), any(ComponentType.class))).thenReturn(this.device);\n+\n+\t\tfinal int priority = 1;\n+\t\tfinal String messageType = \"testType\";\n+\t\tfinal String correlationUuid = \"correlationUid\";\n+\t\tfinal String deviceIdentification = \"deviceIdentification\";\n+\t\tfinal String organisationIdentification = \"orgIdentification\";\n+\n+\n+        final ArgumentCaptor<RequestMessage> messageCaptor = ArgumentCaptor.forClass(RequestMessage.class);\n+        final ArgumentCaptor<String> messageTypeCaptor = ArgumentCaptor.forClass(String.class);\n+        final ArgumentCaptor<Integer> intCaptor = ArgumentCaptor.forClass(int.class);\n+        final ArgumentCaptor<String> ipCaptor = ArgumentCaptor.forClass(String.class);\n+\n+        this.adHocManagementService.setReboot(organisationIdentification, deviceIdentification, correlationUuid, messageType, priority);\n+        verify(this.osgpCoreRequestMessageSender).send(messageCaptor.capture(),messageTypeCaptor.capture(),intCaptor.capture(),ipCaptor.capture());", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NDA0MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522894041", "bodyText": "The argument captors are a powerful tool, but they require a lot of code that is unnecessary for simple assertions.\nI think the code would look a lot simpler if removed all of them but the one for the request message, and make use of  a static import for org.mockito.ArgumentMatchers.eq allowing the verify to be the following:\nverify(this.osgpCoreRequestMessageSender).send(messageCaptor.capture(), eq(messageType), eq(priority), eq(ipAddress));\nFor this example I also put the IP address (\"127.0.0.1\") in a variable, to avoid repeating information that should be the same in multiple locations.", "author": "bvdzwet", "createdAt": "2020-11-13T11:31:51Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {\n+\t\twhen(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");\n+\t\twhen(this.organisationDomainService.searchOrganisation(any(String.class))).thenReturn(Mockito.mock(Organisation.class));\n+\t\twhen(this.deviceDomainService.searchActiveDevice(any(String.class), any(ComponentType.class))).thenReturn(this.device);\n+\n+\t\tfinal int priority = 1;\n+\t\tfinal String messageType = \"testType\";\n+\t\tfinal String correlationUuid = \"correlationUid\";\n+\t\tfinal String deviceIdentification = \"deviceIdentification\";\n+\t\tfinal String organisationIdentification = \"orgIdentification\";\n+\n+\n+        final ArgumentCaptor<RequestMessage> messageCaptor = ArgumentCaptor.forClass(RequestMessage.class);\n+        final ArgumentCaptor<String> messageTypeCaptor = ArgumentCaptor.forClass(String.class);\n+        final ArgumentCaptor<Integer> intCaptor = ArgumentCaptor.forClass(int.class);\n+        final ArgumentCaptor<String> ipCaptor = ArgumentCaptor.forClass(String.class);\n+\n+        this.adHocManagementService.setReboot(organisationIdentification, deviceIdentification, correlationUuid, messageType, priority);\n+        verify(this.osgpCoreRequestMessageSender).send(messageCaptor.capture(),messageTypeCaptor.capture(),intCaptor.capture(),ipCaptor.capture());", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NDUxMQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522894511", "bodyText": "Could be removed when you change the call to verify as suggested below.", "author": "bvdzwet", "createdAt": "2020-11-13T11:32:50Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {\n+\t\twhen(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");\n+\t\twhen(this.organisationDomainService.searchOrganisation(any(String.class))).thenReturn(Mockito.mock(Organisation.class));\n+\t\twhen(this.deviceDomainService.searchActiveDevice(any(String.class), any(ComponentType.class))).thenReturn(this.device);\n+\n+\t\tfinal int priority = 1;\n+\t\tfinal String messageType = \"testType\";\n+\t\tfinal String correlationUuid = \"correlationUid\";\n+\t\tfinal String deviceIdentification = \"deviceIdentification\";\n+\t\tfinal String organisationIdentification = \"orgIdentification\";\n+\n+\n+        final ArgumentCaptor<RequestMessage> messageCaptor = ArgumentCaptor.forClass(RequestMessage.class);\n+        final ArgumentCaptor<String> messageTypeCaptor = ArgumentCaptor.forClass(String.class);\n+        final ArgumentCaptor<Integer> intCaptor = ArgumentCaptor.forClass(int.class);\n+        final ArgumentCaptor<String> ipCaptor = ArgumentCaptor.forClass(String.class);", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NDY3Mw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522894673", "bodyText": "Could be removed when you change the call to verify as suggested above.", "author": "bvdzwet", "createdAt": "2020-11-13T11:33:12Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {\n+\t\twhen(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");\n+\t\twhen(this.organisationDomainService.searchOrganisation(any(String.class))).thenReturn(Mockito.mock(Organisation.class));\n+\t\twhen(this.deviceDomainService.searchActiveDevice(any(String.class), any(ComponentType.class))).thenReturn(this.device);\n+\n+\t\tfinal int priority = 1;\n+\t\tfinal String messageType = \"testType\";\n+\t\tfinal String correlationUuid = \"correlationUid\";\n+\t\tfinal String deviceIdentification = \"deviceIdentification\";\n+\t\tfinal String organisationIdentification = \"orgIdentification\";\n+\n+\n+        final ArgumentCaptor<RequestMessage> messageCaptor = ArgumentCaptor.forClass(RequestMessage.class);\n+        final ArgumentCaptor<String> messageTypeCaptor = ArgumentCaptor.forClass(String.class);\n+        final ArgumentCaptor<Integer> intCaptor = ArgumentCaptor.forClass(int.class);\n+        final ArgumentCaptor<String> ipCaptor = ArgumentCaptor.forClass(String.class);\n+\n+        this.adHocManagementService.setReboot(organisationIdentification, deviceIdentification, correlationUuid, messageType, priority);\n+        verify(this.osgpCoreRequestMessageSender).send(messageCaptor.capture(),messageTypeCaptor.capture(),intCaptor.capture(),ipCaptor.capture());\n+\n+        final RequestMessage message = messageCaptor.getValue();\n+\n+        assertThat(correlationUuid).isEqualTo(message.getCorrelationUid());\n+        assertThat(organisationIdentification).isEqualTo(message.getOrganisationIdentification());\n+        assertThat(priority).isEqualTo(intCaptor.getValue());\n+        assertThat(\"127.0.0.1\").isEqualTo(ipCaptor.getValue());\n+        assertThat(messageType).isEqualTo(messageTypeCaptor.getValue());", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkwOTc3Mw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r522909773", "bodyText": "I don't think setting up the organisationDomainService mock this way gives the result you would want to see in the test.\nIf you remove this line the outcome does not change, which is a clear indication something is wrong.\nThis is in part caused by the effect that the code from setReboot does not care about the actual return value of searchOrganisation. It does however care whether an exception is thrown or not.\nI think that you could get the verification that you would like to see, by adding the following method and calling it from the test with the organisation identification that is expected:\nvoid givenOnlyTheIdentifiedOrganisationExists(final String organisationIdentification) throws Exception {\n    when(this.organisationDomainService.searchOrganisation(anyString())).thenAnswer(new Answer<Organisation>() {\n        @Override\n        public Organisation answer(final InvocationOnMock invocation) throws Throwable {\n            final String actualIdentification = invocation.getArgument(0);\n            if (organisationIdentification.equals(actualIdentification)) {\n                return Mockito.mock(Organisation.class);\n            }\n            throw new UnknownEntityException(Organisation.class, actualIdentification);\n        }\n    });\n}", "author": "bvdzwet", "createdAt": "2020-11-13T12:06:58Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest{\n+\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    \n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\n+    @Mock\n+    private Device device;\n+\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+\n+    \n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+    \n+    @Test\n+    public void testSetReboot() throws FunctionalException, UnknownEntityException {\n+\t\twhen(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");\n+\t\twhen(this.organisationDomainService.searchOrganisation(any(String.class))).thenReturn(Mockito.mock(Organisation.class));", "originalCommit": "c410144c289ad8125eac641819d3c57a3984d419", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 48e760e921..84bb8b278b 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,10 +1,21 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n package org.opensmartgridplatform.adapter.domain.core.application.services;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.ArgumentCaptor;\n"}}, {"oid": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/723b0e4ae5eb99e4110918fbeb251326a3b34428", "message": "implemented feedback", "committedDate": "2020-11-17T14:30:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4ODU4MA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/462#discussion_r533588580", "bodyText": "Assertj assertions like these are of the form assertThat(actual).isEqualTo(expected).\nHere the actual and the expected value are swapped, which may lead to confusing error message if the test would fail.", "author": "bvdzwet", "createdAt": "2020-12-01T17:23:18Z", "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.mockito.stubbing.Answer;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class AdHocManagementServiceTest {\n+    @Mock\n+    private DeviceDomainService deviceDomainService;\n+    @Mock\n+    private OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+    @Mock\n+    private Device device;\n+    @Mock\n+    private OrganisationDomainService organisationDomainService;\n+    @InjectMocks\n+    private AdHocManagementService adHocManagementService;\n+\n+    private static final int PRIORITY = 1;\n+    private static final String MESSAGE_TYPE = \"testType\";\n+    private static final String CORRELATION_UUID = \"correlationUid\";\n+    private static final String DEVICE_IDENTIFICATION = \"deviceIdentification\";\n+    private static final String ORGANISATION_IDENTIFICATION = \"orgIdentification\";\n+    private static final String IP_ADDRESS = \"127.0.0.1\";\n+\n+    @BeforeEach\n+    public void setup() throws Exception {\n+        when(this.device.getIpAddress()).thenReturn(\"127.0.0.1\");\n+        when(this.deviceDomainService.searchActiveDevice(any(String.class), any(ComponentType.class))).thenReturn(this.device);\n+    }\n+    \n+    @Test\n+    public void testSetReboot() throws Exception {\n+        this.givenOnlyTheIdentifiedOrganisationExists(ORGANISATION_IDENTIFICATION);\n+\n+        final ArgumentCaptor<RequestMessage> messageCaptor = ArgumentCaptor.forClass(RequestMessage.class);\n+        this.adHocManagementService.setReboot(ORGANISATION_IDENTIFICATION, DEVICE_IDENTIFICATION, CORRELATION_UUID,\n+                MESSAGE_TYPE,\n+                PRIORITY);\n+        verify(this.osgpCoreRequestMessageSender).send(messageCaptor.capture(), eq(MESSAGE_TYPE), eq(PRIORITY),\n+                eq(IP_ADDRESS));\n+\n+        final RequestMessage message = messageCaptor.getValue();\n+\n+        assertThat(CORRELATION_UUID).isEqualTo(message.getCorrelationUid());\n+        assertThat(ORGANISATION_IDENTIFICATION).isEqualTo(message.getOrganisationIdentification());", "originalCommit": "723b0e4ae5eb99e4110918fbeb251326a3b34428", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4002f13eaa45c9a5e8dd3f2afb6481d40b5402c2", "chunk": "diff --git a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\nindex 84bb8b278b..88276af4d7 100644\n--- a/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n+++ b/osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/AdHocManagementServiceTest.java\n\n@@ -1,5 +1,5 @@\n /**\n- * Copyright 2015 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n  *\n"}}, {"oid": "4002f13eaa45c9a5e8dd3f2afb6481d40b5402c2", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4002f13eaa45c9a5e8dd3f2afb6481d40b5402c2", "message": "Fixes license header and assertions", "committedDate": "2020-12-03T08:10:38Z", "type": "commit"}]}