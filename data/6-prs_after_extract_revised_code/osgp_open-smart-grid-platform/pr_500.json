{"pr_number": 500, "pr_title": "FLEX-5588: Don't send bay identification in case of a meta measurement.", "pr_createdAt": "2020-11-10T16:14:09Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/500", "timeline": [{"oid": "5ed990c5bc87be5c220a5e72cb6cade54f309dee", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5ed990c5bc87be5c220a5e72cb6cade54f309dee", "message": "FLEX-5588: Don't send bay identification in case of a meta measurement.", "committedDate": "2020-11-10T16:13:26Z", "type": "commit"}, {"oid": "695aa5a69fc60b63609e07dd22d5ebd4276a3f48", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/695aa5a69fc60b63609e07dd22d5ebd4276a3f48", "message": "FLEX-5588: Adjusted the tests.", "committedDate": "2020-11-12T14:42:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI1MDk3Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/500#discussion_r522250972", "bodyText": "Were this test and the helper method below it added accidentally with the other changes?\nIf not, it might be good to make it a little clearer and actually assert something instead of printing the length to system out.", "author": "bvdzwet", "createdAt": "2020-11-12T16:42:45Z", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverterTest.java", "diffHunk": "@@ -105,4 +110,34 @@ void testNullString() {\n         assertThat(event).isNull();\n     }\n \n+    @Test\n+    void testEsm() {", "originalCommit": "695aa5a69fc60b63609e07dd22d5ebd4276a3f48", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4a4733aedd92676fa8e7911a553651a94ac10c0", "chunk": "diff --git a/osgp/platform/osgp-adapter-kafka-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverterTest.java b/osgp/platform/osgp-adapter-kafka-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverterTest.java\nindex 8ea9efad22..a194d138fe 100644\n--- a/osgp/platform/osgp-adapter-kafka-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverterTest.java\n+++ b/osgp/platform/osgp-adapter-kafka-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverterTest.java\n\n@@ -110,34 +106,4 @@ class ScadaMeasurementPublishedEventConverterTest {\n         assertThat(event).isNull();\n     }\n \n-    @Test\n-    void testEsm() {\n-        final String data = \"225.007416,226.367340,225.836166,75.651413,51.895161,39.664299,28.728397,-21.124687,15.041016,8.433359,5.254024,-7.029883,-7.497344,-6.597461,0.883000,0.717000,0.586000,24.072266,30.798340,39.025879,11.637588,9.052824,7.344671,7.592461,8.989369,8.484323,10.444678,7.693087,8.416754,2.179525,2.782928,2.973004,1.479924,0.803755,0.795053,1.511317,1.063616,0.896406,0.798262,0.565046,0.184687\";\n-        final int feeder = 7;\n-        final long utcSeconds = 1604646724;\n-        final MessageSerializer serializer = new MessageSerializer();\n-        final ScadaMeasurementPayload payload = ScadaMeasurementPayload.builder()\n-                .substationIdentification(\"9016078\")\n-                .substationName(\"Veenderij\")\n-                .feeder(String.valueOf(feeder))\n-                .createdUtcSeconds(utcSeconds)\n-                .data(data.split(\",\"))\n-                .build();\n-        final ScadaMeasurementPublishedEvent event = this.mapper.map(payload, ScadaMeasurementPublishedEvent.class);\n-        final MessageId messageId = new MessageId(getBytesFromUUID(UUID.randomUUID()));\n-        final Message message = new Message(messageId, System.currentTimeMillis(), \"GXF\", null, event);\n-\n-        final byte[] serialize = serializer.serialize(\"m_LvMeasurementPublishedEventGXF_dev\", message);\n-        System.out.println(serialize.length);\n-        serializer.close();\n-    }\n-\n-    private static byte[] getBytesFromUUID(final UUID uuid) {\n-        final ByteBuffer bb = ByteBuffer.wrap(new byte[16]);\n-        bb.putLong(uuid.getMostSignificantBits());\n-        bb.putLong(uuid.getLeastSignificantBits());\n-\n-        return bb.array();\n-    }\n-\n }\n"}}, {"oid": "d4a4733aedd92676fa8e7911a553651a94ac10c0", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d4a4733aedd92676fa8e7911a553651a94ac10c0", "message": "FLEX-5588: Addresses review comments.", "committedDate": "2020-11-13T07:32:09Z", "type": "commit"}, {"oid": "d3f745c22480a6acd2f52f3c4ed341a59aa63a0a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d3f745c22480a6acd2f52f3c4ed341a59aa63a0a", "message": "FLEX-5588: Removes unused import.", "committedDate": "2020-11-13T07:37:57Z", "type": "commit"}]}