{"pr_number": 363, "pr_title": "Bug/oc 608 fix device mapping", "pr_createdAt": "2020-07-06T06:15:54Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/363", "timeline": [{"oid": "76bf78dbc81ccdcd1648eaa04c801d4a61b0d586", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/76bf78dbc81ccdcd1648eaa04c801d4a61b0d586", "message": "OC-608: Adds a converter for the mapping.", "committedDate": "2020-07-03T11:02:59Z", "type": "commit"}, {"oid": "908bf4ae766e907544b32a69a548e11226e57ed5", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/908bf4ae766e907544b32a69a548e11226e57ed5", "message": "OC-608: Reverts unnecessary changes.", "committedDate": "2020-07-03T13:30:49Z", "type": "commit"}, {"oid": "6bdd80006180d62212b67bf0735ec8c4f9e7ae53", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6bdd80006180d62212b67bf0735ec8c4f9e7ae53", "message": "OC-608: Allows mapping from a subtype.", "committedDate": "2020-07-06T06:14:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzNzk0Mw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/363#discussion_r450037943", "bodyText": "I think we should set the alias to null instead of \"\".", "author": "rlemmers", "createdAt": "2020-07-06T07:39:16Z", "path": "osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.ws.publiclighting.application.mapping.converters;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.Base64;\n+import org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.Device;\n+import org.opensmartgridplatform.domain.core.valueobjects.Address;\n+import org.opensmartgridplatform.domain.core.valueobjects.GpsCoordinates;\n+\n+import ma.glasnost.orika.MappingContext;\n+import ma.glasnost.orika.converter.BidirectionalConverter;\n+import ma.glasnost.orika.metadata.Type;\n+\n+public class DeviceConverter\n+        extends BidirectionalConverter<org.opensmartgridplatform.domain.core.entities.Device, Device> {\n+\n+    @Override\n+    public Device convertTo(final org.opensmartgridplatform.domain.core.entities.Device source,\n+            final Type<Device> destinationType, final MappingContext mappingContext) {\n+        final Device device = new Device();\n+        final String deviceIdentification = source.getDeviceIdentification();\n+        device.setDeviceUid(Base64.encodeBase64String(deviceIdentification.getBytes(StandardCharsets.US_ASCII)));\n+        device.setDeviceIdentification(deviceIdentification);\n+        final Address containerAddress = source.getContainerAddress();\n+        if (containerAddress != null) {\n+            device.setContainerPostalCode(containerAddress.getPostalCode());\n+            device.setContainerCity(containerAddress.getCity());\n+            device.setContainerStreet(containerAddress.getStreet());\n+            device.setContainerNumber(containerAddress.getNumber().toString());\n+        }\n+        final GpsCoordinates gpsCoordinates = source.getGpsCoordinates();\n+        if (gpsCoordinates != null) {\n+            device.setGpsLatitude(gpsCoordinates.getLatitude());\n+            device.setGpsLongitude(gpsCoordinates.getLongitude());\n+        }\n+        device.setDeviceType(source.getDeviceType());\n+        device.setActivated(source.isActivated());\n+\n+        return device;\n+    }\n+\n+    @Override\n+    public org.opensmartgridplatform.domain.core.entities.Device convertFrom(final Device source,\n+            final Type<org.opensmartgridplatform.domain.core.entities.Device> destinationType,\n+            final MappingContext mappingContext) {\n+\n+        final String deviceIdentification = source.getDeviceIdentification();\n+        final Address containerAddress = new Address(source.getContainerCity(), source.getContainerPostalCode(),\n+                source.getContainerStreet(), Integer.valueOf(source.getContainerNumber()), \"\", \"\");\n+        final GpsCoordinates gpsCoordinates = new GpsCoordinates(source.getGpsLatitude(), source.getGpsLongitude());\n+        final org.opensmartgridplatform.domain.core.entities.Device device = new org.opensmartgridplatform.domain.core.entities.Device(\n+                deviceIdentification, \"\", containerAddress, gpsCoordinates, null);", "originalCommit": "6bdd80006180d62212b67bf0735ec8c4f9e7ae53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a3b8ef772e861d69461381cecbe14218e26061a", "chunk": "diff --git a/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java b/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java\nindex 609b0c67f9..4e514fd934 100644\n--- a/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java\n+++ b/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java\n\n@@ -53,10 +53,10 @@ public class DeviceConverter\n \n         final String deviceIdentification = source.getDeviceIdentification();\n         final Address containerAddress = new Address(source.getContainerCity(), source.getContainerPostalCode(),\n-                source.getContainerStreet(), Integer.valueOf(source.getContainerNumber()), \"\", \"\");\n+                source.getContainerStreet(), Integer.valueOf(source.getContainerNumber()), null, null);\n         final GpsCoordinates gpsCoordinates = new GpsCoordinates(source.getGpsLatitude(), source.getGpsLongitude());\n         final org.opensmartgridplatform.domain.core.entities.Device device = new org.opensmartgridplatform.domain.core.entities.Device(\n-                deviceIdentification, \"\", containerAddress, gpsCoordinates, null);\n+                deviceIdentification, null, containerAddress, gpsCoordinates, null);\n         device.updateRegistrationData(null, source.getDeviceType());\n         return device;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAzODIzNg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/363#discussion_r450038236", "bodyText": "I think we should set the municipality and number addition to null instead of \"\".", "author": "rlemmers", "createdAt": "2020-07-06T07:39:48Z", "path": "osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.ws.publiclighting.application.mapping.converters;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.codec.binary.Base64;\n+import org.opensmartgridplatform.adapter.ws.schema.publiclighting.adhocmanagement.Device;\n+import org.opensmartgridplatform.domain.core.valueobjects.Address;\n+import org.opensmartgridplatform.domain.core.valueobjects.GpsCoordinates;\n+\n+import ma.glasnost.orika.MappingContext;\n+import ma.glasnost.orika.converter.BidirectionalConverter;\n+import ma.glasnost.orika.metadata.Type;\n+\n+public class DeviceConverter\n+        extends BidirectionalConverter<org.opensmartgridplatform.domain.core.entities.Device, Device> {\n+\n+    @Override\n+    public Device convertTo(final org.opensmartgridplatform.domain.core.entities.Device source,\n+            final Type<Device> destinationType, final MappingContext mappingContext) {\n+        final Device device = new Device();\n+        final String deviceIdentification = source.getDeviceIdentification();\n+        device.setDeviceUid(Base64.encodeBase64String(deviceIdentification.getBytes(StandardCharsets.US_ASCII)));\n+        device.setDeviceIdentification(deviceIdentification);\n+        final Address containerAddress = source.getContainerAddress();\n+        if (containerAddress != null) {\n+            device.setContainerPostalCode(containerAddress.getPostalCode());\n+            device.setContainerCity(containerAddress.getCity());\n+            device.setContainerStreet(containerAddress.getStreet());\n+            device.setContainerNumber(containerAddress.getNumber().toString());\n+        }\n+        final GpsCoordinates gpsCoordinates = source.getGpsCoordinates();\n+        if (gpsCoordinates != null) {\n+            device.setGpsLatitude(gpsCoordinates.getLatitude());\n+            device.setGpsLongitude(gpsCoordinates.getLongitude());\n+        }\n+        device.setDeviceType(source.getDeviceType());\n+        device.setActivated(source.isActivated());\n+\n+        return device;\n+    }\n+\n+    @Override\n+    public org.opensmartgridplatform.domain.core.entities.Device convertFrom(final Device source,\n+            final Type<org.opensmartgridplatform.domain.core.entities.Device> destinationType,\n+            final MappingContext mappingContext) {\n+\n+        final String deviceIdentification = source.getDeviceIdentification();\n+        final Address containerAddress = new Address(source.getContainerCity(), source.getContainerPostalCode(),\n+                source.getContainerStreet(), Integer.valueOf(source.getContainerNumber()), \"\", \"\");", "originalCommit": "6bdd80006180d62212b67bf0735ec8c4f9e7ae53", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a3b8ef772e861d69461381cecbe14218e26061a", "chunk": "diff --git a/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java b/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java\nindex 609b0c67f9..4e514fd934 100644\n--- a/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java\n+++ b/osgp/platform/osgp-adapter-ws-publiclighting/src/main/java/org/opensmartgridplatform/adapter/ws/publiclighting/application/mapping/converters/DeviceConverter.java\n\n@@ -53,10 +53,10 @@ public class DeviceConverter\n \n         final String deviceIdentification = source.getDeviceIdentification();\n         final Address containerAddress = new Address(source.getContainerCity(), source.getContainerPostalCode(),\n-                source.getContainerStreet(), Integer.valueOf(source.getContainerNumber()), \"\", \"\");\n+                source.getContainerStreet(), Integer.valueOf(source.getContainerNumber()), null, null);\n         final GpsCoordinates gpsCoordinates = new GpsCoordinates(source.getGpsLatitude(), source.getGpsLongitude());\n         final org.opensmartgridplatform.domain.core.entities.Device device = new org.opensmartgridplatform.domain.core.entities.Device(\n-                deviceIdentification, \"\", containerAddress, gpsCoordinates, null);\n+                deviceIdentification, null, containerAddress, gpsCoordinates, null);\n         device.updateRegistrationData(null, source.getDeviceType());\n         return device;\n     }\n"}}, {"oid": "7a3b8ef772e861d69461381cecbe14218e26061a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/7a3b8ef772e861d69461381cecbe14218e26061a", "message": "OC-608: Addresses review comments.", "committedDate": "2020-07-06T07:52:46Z", "type": "commit"}]}