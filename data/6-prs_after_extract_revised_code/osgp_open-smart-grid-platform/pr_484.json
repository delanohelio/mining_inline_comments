{"pr_number": 484, "pr_title": "FLEX-5428: changed transition messages to DARK/LIGHT", "pr_createdAt": "2020-11-02T11:20:51Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/484", "timeline": [{"oid": "eae418d88fb15cf11038b322d1eb14871c41e57b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/eae418d88fb15cf11038b322d1eb14871c41e57b", "message": "FLEX-5428: changed transition messages to DARK/LIGHT", "committedDate": "2020-11-02T11:20:32Z", "type": "commit"}, {"oid": "1f4ac787ac0cd93f3e2baaa6a86dd0bc2dafb99b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/1f4ac787ac0cd93f3e2baaa6a86dd0bc2dafb99b", "message": "Merge branch 'development' into FLEX-5428_Propagate_light_sensor_events_to_domain_adapter_without_changing_message_type\n\n# Conflicts:\n#\tosgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageService.java", "committedDate": "2020-11-02T11:48:43Z", "type": "commit"}, {"oid": "e582fa370b46265de43476dd850f34e1e5c942af", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e582fa370b46265de43476dd850f34e1e5c942af", "message": "FLEX-5428: merged development into this", "committedDate": "2020-11-02T11:51:25Z", "type": "commit"}, {"oid": "3ebb761622a986c1219b7dd49769c3d934f8e6ce", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/3ebb761622a986c1219b7dd49769c3d934f8e6ce", "message": "FLEX-5428: removed useless declartion of exception", "committedDate": "2020-11-02T11:54:43Z", "type": "commit"}, {"oid": "455bd7f8c807a80c624cee2e551198a9beefa9a7", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/455bd7f8c807a80c624cee2e551198a9beefa9a7", "message": "FLEX-5428: Still work in progress.. just for handover to Ruud", "committedDate": "2020-11-04T12:51:17Z", "type": "commit"}, {"oid": "dea6e3d8b15d03bdd677b389b2c20a8a2980e97a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/dea6e3d8b15d03bdd677b389b2c20a8a2980e97a", "message": "FLEX-5428 ~ Minor refactoring", "committedDate": "2020-11-04T13:50:38Z", "type": "commit"}, {"oid": "90f2330205a64b2efd7a200971ad959c7935d65f", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/90f2330205a64b2efd7a200971ad959c7935d65f", "message": "FLEX-5428: 60870-104 adapter does not send a list to core anymore", "committedDate": "2020-11-06T09:12:15Z", "type": "commit"}, {"oid": "9262269f2f29373f03bdb60cd7dd35e61a3c880b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/9262269f2f29373f03bdb60cd7dd35e61a3c880b", "message": "FLEX-5428: reverted handleEvents for SSLD's", "committedDate": "2020-11-06T10:43:19Z", "type": "commit"}, {"oid": "6f0062ea08f22ef7882b42fdbc2bba205eead4e1", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6f0062ea08f22ef7882b42fdbc2bba205eead4e1", "message": "FLEX-5428: fixed test where list was expected instead of an eventNotificationDTO", "committedDate": "2020-11-06T11:29:26Z", "type": "commit"}, {"oid": "bedc711ebd3a2ac7ea45d67ace480c84e585239a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/bedc711ebd3a2ac7ea45d67ace480c84e585239a", "message": "Merge branch 'development' into FLEX-5428_Propagate_light_sensor_events_to_domain_adapter_without_changing_message_type", "committedDate": "2020-11-06T11:30:04Z", "type": "commit"}, {"oid": "2d38aa55271526aee44ce1d857578cbda29358d1", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2d38aa55271526aee44ce1d857578cbda29358d1", "message": "FLEX-5428: added unit test for EVENT_NOTIFICATION resulting form Dark/light event", "committedDate": "2020-11-06T14:23:54Z", "type": "commit"}, {"oid": "ce83cceb0a87ce96fbffb9e986b236e0298e8a03", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ce83cceb0a87ce96fbffb9e986b236e0298e8a03", "message": "FLEX-5428: Removed throwing of NotSupportedException due to Sonar warning", "committedDate": "2020-11-06T14:39:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgxMzY2Mg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r516813662", "bodyText": "Why is it necessary to send the full dataContainer for each of the events?", "author": "rlemmers", "createdAt": "2020-11-03T16:52:06Z", "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageService.java", "diffHunk": "@@ -275,8 +273,8 @@ private void handleLightMeasurementDeviceEvents(final Device device,\n \n         try {\n             final EventMessageDataContainer dataContainer = new EventMessageDataContainer(lightMeasurementDeviceEvents);\n-            this.sendRequestMessageToDomainPublicLighting(DeviceFunction.SET_TRANSITION.name(),\n-                    device.getDeviceIdentification(), dataContainer);\n+            lightMeasurementDeviceEvents.forEach(lightMeasurementDeviceEvent -> this.sendRequestMessageToDomainPublicLighting(lightMeasurementDeviceEvent.getEventType().name(),\n+                    device.getDeviceIdentification(), dataContainer));", "originalCommit": "3ebb761622a986c1219b7dd49769c3d934f8e6ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "455bd7f8c807a80c624cee2e551198a9beefa9a7", "chunk": "diff --git a/osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageService.java b/osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageService.java\nindex 412d7b1146..bd29e5dbea 100644\n--- a/osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageService.java\n+++ b/osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageService.java\n\n@@ -263,21 +219,16 @@ public class EventNotificationMessageService {\n         }\n     }\n \n-    private void handleLightMeasurementDeviceEvents(final Device device,\n-            final List<Event> lightMeasurementDeviceEvents) {\n-        if (lightMeasurementDeviceEvents.isEmpty()) {\n-            LOGGER.info(\"List of events is empty for LMD: {}, not needed to process events.\",\n-                    device.getDeviceIdentification());\n-            return;\n-        }\n+    private void handleLightMeasurementDeviceEvent(final String deviceIdentification, final Date dateTime, final EventType eventType, final String description,\n+    final int index) {\n \n         try {\n-            final EventMessageDataContainer dataContainer = new EventMessageDataContainer(lightMeasurementDeviceEvents);\n-            lightMeasurementDeviceEvents.forEach(lightMeasurementDeviceEvent -> this.sendRequestMessageToDomainPublicLighting(lightMeasurementDeviceEvent.getEventType().name(),\n-                    device.getDeviceIdentification(), dataContainer));\n+            final Event lightMeasurementDeviceEvent = new Event(deviceIdentification,\n+                    dateTime != null ? dateTime : DateTime.now().toDate(), eventType, description, index);\n+            this.sendRequestMessageToDomainPublicLighting(MessageType.EVENT_NOTIFICATION.name(), deviceIdentification, lightMeasurementDeviceEvent);\n         } catch (final Exception e) {\n             LOGGER.error(String.format(\"Unexpected exception while handling events for light measurement device: %s\",\n-                    device.getDeviceIdentification()), e);\n+                    deviceIdentification), e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1MTA0NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r519751045", "bodyText": "Doesn't removing this @SuppressWarnings annotation cause a new issue in Sonar?", "author": "rlemmers", "createdAt": "2020-11-09T11:51:26Z", "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/EventNotificationMessageProcessor.java", "diffHunk": "@@ -56,15 +56,12 @@ public void processMessage(final ObjectMessage message) throws JMSException {\n                 this.eventNotificationMessageService.handleEvent(metadata.getDeviceIdentification(), eventNotification);\n \n             } else if (dataObject instanceof List) {\n-\n-                @SuppressWarnings(\"unchecked\") final List<EventNotificationDto> eventNotifications =", "originalCommit": "ce83cceb0a87ce96fbffb9e986b236e0298e8a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMzNDQwMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r520334402", "bodyText": "No, at least not on my machine (that should have the same ruleset)", "author": "joostknapen", "createdAt": "2020-11-10T07:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1MTA0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyMzQ0OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r519923448", "bodyText": "What we test isn't obvious to me by reading the title. I would name it something like \"sendsLightSensorEventToDomain\".", "author": "rlemmers", "createdAt": "2020-11-09T15:59:50Z", "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+import org.joda.time.DateTime;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.valueobjects.EventType;\n+import org.opensmartgridplatform.dto.valueobjects.EventNotificationDto;\n+import org.opensmartgridplatform.dto.valueobjects.EventTypeDto;\n+import org.opensmartgridplatform.shared.domain.services.CorrelationIdProviderTimestampService;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class EventNotificationMessageServiceTest {\n+\n+    @Mock\n+    private CorrelationIdProviderTimestampService correlationIdProviderTimestampService;\n+\n+    @Mock\n+    private DomainRequestService domainRequestService;\n+\n+    @Mock\n+    private EventNotificationHelperService eventNotificationHelperService;\n+\n+    @InjectMocks\n+    private EventNotificationMessageService eventNotificationMessageService;\n+\n+    @Test\n+    void handleLightSensorReportsLightEventTest() throws UnknownEntityException {", "originalCommit": "ce83cceb0a87ce96fbffb9e986b236e0298e8a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMzMDQ1Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r520330457", "bodyText": "Hmm, the test should test if a LIGHT_SENSOR_REPORTS_LIGHT event is sent to domain. So maybe a combination of both is a good one.. sendsLightSensorReportsLightEventToDomain", "author": "joostknapen", "createdAt": "2020-11-10T06:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyMzQ0OA=="}], "type": "inlineReview", "revised_code": {"commit": "4bf0e80e914f308b2cdac0e8d35566fb12029dc4", "chunk": "diff --git a/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java b/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\nindex 646368a988..dea0f746d4 100644\n--- a/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\n+++ b/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\n\n@@ -44,7 +44,7 @@ public class EventNotificationMessageServiceTest {\n     private EventNotificationMessageService eventNotificationMessageService;\n \n     @Test\n-    void handleLightSensorReportsLightEventTest() throws UnknownEntityException {\n+    void sendsLightSensorReportsLightEventToDomainTest() throws UnknownEntityException {\n         final String deviceUid = \"testUid\";\n         final String deviceIdentification = \"testIdentification\";\n         final DateTime dateTime = DateTime.now();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzNTY2Ng==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r519935666", "bodyText": "The handleEvent(String, EventNotificationDto) method calls handleEvent(String, Date, ...). Directly call that second method. You could write a separate test if you want to show handleEvent(String, EventNotificationDto) calls handleEvent(String, Date, ...) correctly.", "author": "rlemmers", "createdAt": "2020-11-09T16:16:51Z", "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+import org.joda.time.DateTime;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.valueobjects.EventType;\n+import org.opensmartgridplatform.dto.valueobjects.EventNotificationDto;\n+import org.opensmartgridplatform.dto.valueobjects.EventTypeDto;\n+import org.opensmartgridplatform.shared.domain.services.CorrelationIdProviderTimestampService;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class EventNotificationMessageServiceTest {\n+\n+    @Mock\n+    private CorrelationIdProviderTimestampService correlationIdProviderTimestampService;\n+\n+    @Mock\n+    private DomainRequestService domainRequestService;\n+\n+    @Mock\n+    private EventNotificationHelperService eventNotificationHelperService;\n+\n+    @InjectMocks\n+    private EventNotificationMessageService eventNotificationMessageService;\n+\n+    @Test\n+    void handleLightSensorReportsLightEventTest() throws UnknownEntityException {\n+        final String deviceUid = \"testUid\";\n+        final String deviceIdentification = \"testIdentification\";\n+        final DateTime dateTime = DateTime.now();\n+        final EventTypeDto eventTypeDto = EventTypeDto.LIGHT_SENSOR_REPORTS_LIGHT;\n+        final String description = \"Sensor reports light\";\n+        final Integer index = 0;\n+        final EventNotificationDto eventNotificationDto = new EventNotificationDto(deviceUid, dateTime, eventTypeDto,\n+                description, index);\n+\n+        final EventNotificationMessageService eventNotificationMessageServiceSpy = spy(\n+                this.eventNotificationMessageService);\n+        eventNotificationMessageServiceSpy.handleEvent(deviceIdentification, eventNotificationDto);", "originalCommit": "ce83cceb0a87ce96fbffb9e986b236e0298e8a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMyOTAwNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r520329007", "bodyText": "But this tests results in a bit higher code coverage ;-)", "author": "joostknapen", "createdAt": "2020-11-10T06:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzNTY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4bf0e80e914f308b2cdac0e8d35566fb12029dc4", "chunk": "diff --git a/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java b/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\nindex 646368a988..dea0f746d4 100644\n--- a/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\n+++ b/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\n\n@@ -44,7 +44,7 @@ public class EventNotificationMessageServiceTest {\n     private EventNotificationMessageService eventNotificationMessageService;\n \n     @Test\n-    void handleLightSensorReportsLightEventTest() throws UnknownEntityException {\n+    void sendsLightSensorReportsLightEventToDomainTest() throws UnknownEntityException {\n         final String deviceUid = \"testUid\";\n         final String deviceIdentification = \"testIdentification\";\n         final DateTime dateTime = DateTime.now();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzOTI1NQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r519939255", "bodyText": "Test for the call \"this.domainRequestService.send(...)\", which is a call to another service instead of a private method. This would also simplify your test a bit.", "author": "rlemmers", "createdAt": "2020-11-09T16:21:45Z", "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+import org.joda.time.DateTime;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.valueobjects.EventType;\n+import org.opensmartgridplatform.dto.valueobjects.EventNotificationDto;\n+import org.opensmartgridplatform.dto.valueobjects.EventTypeDto;\n+import org.opensmartgridplatform.shared.domain.services.CorrelationIdProviderTimestampService;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class EventNotificationMessageServiceTest {\n+\n+    @Mock\n+    private CorrelationIdProviderTimestampService correlationIdProviderTimestampService;\n+\n+    @Mock\n+    private DomainRequestService domainRequestService;\n+\n+    @Mock\n+    private EventNotificationHelperService eventNotificationHelperService;\n+\n+    @InjectMocks\n+    private EventNotificationMessageService eventNotificationMessageService;\n+\n+    @Test\n+    void handleLightSensorReportsLightEventTest() throws UnknownEntityException {\n+        final String deviceUid = \"testUid\";\n+        final String deviceIdentification = \"testIdentification\";\n+        final DateTime dateTime = DateTime.now();\n+        final EventTypeDto eventTypeDto = EventTypeDto.LIGHT_SENSOR_REPORTS_LIGHT;\n+        final String description = \"Sensor reports light\";\n+        final Integer index = 0;\n+        final EventNotificationDto eventNotificationDto = new EventNotificationDto(deviceUid, dateTime, eventTypeDto,\n+                description, index);\n+\n+        final EventNotificationMessageService eventNotificationMessageServiceSpy = spy(\n+                this.eventNotificationMessageService);\n+        eventNotificationMessageServiceSpy.handleEvent(deviceIdentification, eventNotificationDto);\n+\n+        final ArgumentCaptor<String> argMessageType = ArgumentCaptor.forClass(String.class);\n+        final ArgumentCaptor<String> argDeviceIdentification = ArgumentCaptor.forClass(String.class);\n+        final ArgumentCaptor<Event> argLightMeasurementDeviceEvent = ArgumentCaptor.forClass(Event.class);\n+\n+        verify(eventNotificationMessageServiceSpy).sendRequestMessageToDomainPublicLighting(argMessageType.capture(),", "originalCommit": "ce83cceb0a87ce96fbffb9e986b236e0298e8a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMyNzY1MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r520327651", "bodyText": "There are 2 paths that lead to this.domainRequestService.send. Only one path is valid,  therefore I think the current solution is a better test. Although a bit more complicated.", "author": "joostknapen", "createdAt": "2020-11-10T06:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzOTI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4bf0e80e914f308b2cdac0e8d35566fb12029dc4", "chunk": "diff --git a/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java b/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\nindex 646368a988..dea0f746d4 100644\n--- a/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\n+++ b/osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java\n\n@@ -44,7 +44,7 @@ public class EventNotificationMessageServiceTest {\n     private EventNotificationMessageService eventNotificationMessageService;\n \n     @Test\n-    void handleLightSensorReportsLightEventTest() throws UnknownEntityException {\n+    void sendsLightSensorReportsLightEventToDomainTest() throws UnknownEntityException {\n         final String deviceUid = \"testUid\";\n         final String deviceIdentification = \"testIdentification\";\n         final DateTime dateTime = DateTime.now();\n"}}, {"oid": "4bf0e80e914f308b2cdac0e8d35566fb12029dc4", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4bf0e80e914f308b2cdac0e8d35566fb12029dc4", "message": "FLEX-5428: Changed name of light event test", "committedDate": "2020-11-10T07:08:25Z", "type": "commit"}, {"oid": "539eecf86fe4d7b036b6c11f22cacf86ac805b18", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/539eecf86fe4d7b036b6c11f22cacf86ac805b18", "message": "FLEX-5428 ~ Improves test", "committedDate": "2020-11-10T09:50:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQzNzY1OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/484#discussion_r520437659", "bodyText": "This looks better indeed. thx!", "author": "joostknapen", "createdAt": "2020-11-10T10:03:59Z", "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/EventNotificationMessageServiceTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.argThat;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+\n+import org.joda.time.DateTime;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentMatcher;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.valueobjects.EventType;\n+import org.opensmartgridplatform.dto.valueobjects.EventNotificationDto;\n+import org.opensmartgridplatform.dto.valueobjects.EventTypeDto;\n+import org.opensmartgridplatform.shared.domain.services.CorrelationIdProviderTimestampService;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class EventNotificationMessageServiceTest {\n+\n+    @Mock\n+    private CorrelationIdProviderTimestampService correlationIdProviderTimestampService;\n+\n+    @Mock\n+    private DomainRequestService domainRequestService;\n+\n+    @Mock\n+    private EventNotificationHelperService eventNotificationHelperService;\n+\n+    @InjectMocks\n+    private EventNotificationMessageService eventNotificationMessageService;\n+\n+    @Test\n+    void sendsLightSensorReportsLightEventToDomainTest() throws UnknownEntityException {\n+        final String deviceUid = \"testUid\";\n+        final String deviceIdentification = \"testIdentification\";\n+        final DateTime dateTime = DateTime.now();\n+        final EventTypeDto eventTypeDto = EventTypeDto.LIGHT_SENSOR_REPORTS_LIGHT;\n+        final String description = \"Sensor reports light\";\n+        final Integer index = 0;\n+        final EventNotificationDto eventNotificationDto = new EventNotificationDto(deviceUid, dateTime, eventTypeDto,\n+                description, index);\n+\n+        this.eventNotificationMessageService.handleEvent(deviceIdentification, eventNotificationDto);\n+\n+        final ArgumentMatcher<RequestMessage> matchesEventType = (\n+                final RequestMessage message) -> ((Event) message.getRequest())\n+                        .getEventType() == EventType.LIGHT_SENSOR_REPORTS_LIGHT;\n+\n+        verify(this.domainRequestService).send(argThat(matchesEventType), eq(MessageType.EVENT_NOTIFICATION.name()),", "originalCommit": "539eecf86fe4d7b036b6c11f22cacf86ac805b18", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}