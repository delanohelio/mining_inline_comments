{"pr_number": 470, "pr_title": "FLEX-5527: Added reboot functionality including error handling", "pr_createdAt": "2020-10-20T13:24:07Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/470", "timeline": [{"oid": "1e64d707523b43b0ba68bbf9023f2c90ed926ac6", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/1e64d707523b43b0ba68bbf9023f2c90ed926ac6", "message": "FLEX-5527: Added reboot functionality including error handling", "committedDate": "2020-10-20T13:23:16Z", "type": "commit"}, {"oid": "0159b150177363b0efea0546d7fafbda23bd99a7", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0159b150177363b0efea0546d7fafbda23bd99a7", "message": "FLEX-5527: Run all acceptence tests for public lightning", "committedDate": "2020-10-20T13:26:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxMTIzMA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r508511230", "bodyText": "Method has 7 parameters, which is greater than 6 authorized.", "author": "jenkins-ip-10-4-24-184", "createdAt": "2020-10-20T13:38:56Z", "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/messaging/DeviceRequestMessageProcessor.java", "diffHunk": "@@ -152,19 +154,32 @@ protected void handleError(final IOException e, final String correlationUid,\n         this.responseMessageSender.send(protocolResponseMessage);\n     }\n \n+    protected void handleFunctionalException(final FunctionalException e, final MessageMetadata messageMetadata) {\n+        LOGGER.error(\"Functional error while processing message, using MessageMetadata to create error response\", e);\n+\n+        final ProtocolResponseMessage protocolResponseMessage = createProtocolResponseMessage(messageMetadata, e);\n+        this.responseMessageSender.send(protocolResponseMessage);\n+    }\n+\n     protected void handleError(final RuntimeException e, final MessageMetadata messageMetadata) {\n         LOGGER.error(\"Error while processing message, using MessageMetadata to create error response\", e);\n \n         // Set the exception to a class known by all OSGP components\n         final TechnicalException ex = new TechnicalException(ComponentType.PROTOCOL_OSLP, UNEXPECTED_EXCEPTION);\n+        final ProtocolResponseMessage protocolResponseMessage = createProtocolResponseMessage(messageMetadata, ex);\n+        this.responseMessageSender.send(protocolResponseMessage);\n+    }\n \n+    private ProtocolResponseMessage createProtocolResponseMessage(\n+            final MessageMetadata messageMetadata, final OsgpException ex) {\n         final DeviceMessageMetadata deviceMessageMetadata = new DeviceMessageMetadata(messageMetadata);\n-        final ProtocolResponseMessage protocolResponseMessage = ProtocolResponseMessage.newBuilder()\n-                .domain(messageMetadata.getDomain()).domainVersion(messageMetadata.getDomainVersion())\n-                .deviceMessageMetadata(deviceMessageMetadata).result(ResponseMessageResultType.NOT_OK).osgpException(ex)\n-                .retryCount(messageMetadata.getRetryCount()).build();\n-\n-        this.responseMessageSender.send(protocolResponseMessage);\n+        return ProtocolResponseMessage.newBuilder()\n+                    .domain(messageMetadata.getDomain())\n+                    .domainVersion(messageMetadata.getDomainVersion())\n+                    .deviceMessageMetadata(deviceMessageMetadata)\n+                    .result(ResponseMessageResultType.NOT_OK)\n+                    .osgpException(ex)\n+                    .retryCount(messageMetadata.getRetryCount()).build();\n     }\n \n     public void handleUnableToConnectDeviceResponse(final DeviceResponse deviceResponse, final Throwable t,", "originalCommit": "0159b150177363b0efea0546d7fafbda23bd99a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "f4d736cff69c925ddacc3a98e0ef5347b55e59b3", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/f4d736cff69c925ddacc3a98e0ef5347b55e59b3", "message": "FLEX-5527: Added soap fault check in cucumber feature test", "committedDate": "2020-10-20T14:43:44Z", "type": "commit"}, {"oid": "e9f086877f035fda570e5a189a973e9a214be695", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e9f086877f035fda570e5a189a973e9a214be695", "message": "FLEX-5527: renamed Flyway script", "committedDate": "2020-10-21T07:15:26Z", "type": "commit"}, {"oid": "27f3a0fc4bd1cade9509f12ad260c6638a19b1f7", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/27f3a0fc4bd1cade9509f12ad260c6638a19b1f7", "message": "Merge branch 'development' of github.com:OSGP/open-smart-grid-platform into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-21T08:13:16Z", "type": "commit"}, {"oid": "d68ba65b5c0cc0a6643e555ee15e23fe4c859299", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d68ba65b5c0cc0a6643e555ee15e23fe4c859299", "message": "Merge branch 'FLEX-5527_Reboot_function_after_config_change' of github.com:OSGP/open-smart-grid-platform into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-21T08:13:38Z", "type": "commit"}, {"oid": "0cf40d176e4050a8d1cf824b2f83598f1b1ee39d", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0cf40d176e4050a8d1cf824b2f83598f1b1ee39d", "message": "FLEX-5527: All set schedules are blocked when a set schedule with astronomical offsets is in progress", "committedDate": "2020-10-21T08:36:15Z", "type": "commit"}, {"oid": "78b2631db25c9f707bf0e34ef44fa3bfab372373", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/78b2631db25c9f707bf0e34ef44fa3bfab372373", "message": "Merge branch 'FLEX-5527_Reboot_function_after_config_change' of https://github.com/OSGP/open-smart-grid-platform into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-21T08:36:20Z", "type": "commit"}, {"oid": "43ec2316a260b8c3c77fed36cf1125301a5256ad", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/43ec2316a260b8c3c77fed36cf1125301a5256ad", "message": "FLEX-5527: Fixed tests that check on error state when not able to set a schedule with astronomical offsets", "committedDate": "2020-10-21T10:25:07Z", "type": "commit"}, {"oid": "4b68b23d4db1e19ffc82822e263b401975c24e0a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4b68b23d4db1e19ffc82822e263b401975c24e0a", "message": "FLEX-5527: renamed property expiration_time to expires_in_minutes", "committedDate": "2020-10-21T10:29:03Z", "type": "commit"}, {"oid": "6576cc60a287485c055baf550f5ff4995cecf17b", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6576cc60a287485c055baf550f5ff4995cecf17b", "message": "FLEX-5527: Ignore CorrelationUid is unknown in buffered set schedule responses", "committedDate": "2020-10-21T13:32:45Z", "type": "commit"}, {"oid": "db4014be8a86a8045228f285fde7de737d6eeb32", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/db4014be8a86a8045228f285fde7de737d6eeb32", "message": "FLEX-5527: Changed test for paging schedules", "committedDate": "2020-10-21T14:10:05Z", "type": "commit"}, {"oid": "234ba23218c214bb7f0e1a6882f2fae019da0e65", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/234ba23218c214bb7f0e1a6882f2fae019da0e65", "message": "FLEX-5527: removed false comments", "committedDate": "2020-10-22T07:26:03Z", "type": "commit"}, {"oid": "e42443e0106e2cef548c15daf0635305a10d3b78", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e42443e0106e2cef548c15daf0635305a10d3b78", "message": "Merge branch 'development' into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-22T07:27:27Z", "type": "commit"}, {"oid": "0ce1cdf9c66d8e25504e20ff1dd0fd3311b04315", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0ce1cdf9c66d8e25504e20ff1dd0fd3311b04315", "message": "FLEX-5527: Fixed bug where a get/set configuration always occured during a set schedule", "committedDate": "2020-10-22T14:56:40Z", "type": "commit"}, {"oid": "ba64677cb9f21cf926a252a69cd64849bf854d3a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ba64677cb9f21cf926a252a69cd64849bf854d3a", "message": "Merge branch 'development' into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-23T09:12:03Z", "type": "commit"}, {"oid": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "message": "FLEX-5527: SetConfiguration and SetReboot only happen if the astro offsets in the devices configuration differ from the astro offsets in the requested schedule", "committedDate": "2020-10-26T11:20:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2NTgxNg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512265816", "bodyText": "There's already a function like this in some of the closed source test-code. If this wait function is required here, delete the other one.", "author": "kevinsmeets", "createdAt": "2020-10-26T21:01:59Z", "path": "integration-tests/cucumber-tests-platform-publiclighting/src/test/java/org/opensmartgridplatform/cucumber/platform/publiclighting/glue/steps/database/adapterprotocoloslp/OslpDeviceSteps.java", "diffHunk": "@@ -93,4 +126,12 @@ public void theSsldOslpDeviceContains(final Map<String, String> expectedEntity)\n \n         this.ssldDeviceSteps.theSsldDeviceContains(expectedEntity);\n     }\n+\n+    @Then(\"^I wait (\\\\d+) seconds$\")\n+    public void IWaitXSeconds(final Integer seconds) {\n+        try {\n+            Thread.sleep(seconds * 1000);\n+        } catch (final InterruptedException e) {\n+        }\n+    }", "originalCommit": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "978c75c05e5ad9f5e70cc13ce3989382706003f4", "chunk": "diff --git a/integration-tests/cucumber-tests-platform-publiclighting/src/test/java/org/opensmartgridplatform/cucumber/platform/publiclighting/glue/steps/database/adapterprotocoloslp/OslpDeviceSteps.java b/integration-tests/cucumber-tests-platform-publiclighting/src/test/java/org/opensmartgridplatform/cucumber/platform/publiclighting/glue/steps/database/adapterprotocoloslp/OslpDeviceSteps.java\nindex c9c4560a38..8de4643995 100644\n--- a/integration-tests/cucumber-tests-platform-publiclighting/src/test/java/org/opensmartgridplatform/cucumber/platform/publiclighting/glue/steps/database/adapterprotocoloslp/OslpDeviceSteps.java\n+++ b/integration-tests/cucumber-tests-platform-publiclighting/src/test/java/org/opensmartgridplatform/cucumber/platform/publiclighting/glue/steps/database/adapterprotocoloslp/OslpDeviceSteps.java\n\n@@ -127,11 +127,4 @@ public class OslpDeviceSteps {\n         this.ssldDeviceSteps.theSsldDeviceContains(expectedEntity);\n     }\n \n-    @Then(\"^I wait (\\\\d+) seconds$\")\n-    public void IWaitXSeconds(final Integer seconds) {\n-        try {\n-            Thread.sleep(seconds * 1000);\n-        } catch (final InterruptedException e) {\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3MDY1NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512270654", "bodyText": "I think we should be using 'Alliander N.V.' as the company name in headers.", "author": "kevinsmeets", "createdAt": "2020-10-26T21:10:52Z", "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/services/oslp/PendingSetScheduleRequestService.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.", "originalCommit": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b7b4d9f44741c8e273f792623e72e4e9c339cb3", "chunk": "diff --git a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/services/oslp/PendingSetScheduleRequestService.java b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/services/oslp/PendingSetScheduleRequestService.java\nindex 8d12318931..f45b18dc5e 100644\n--- a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/services/oslp/PendingSetScheduleRequestService.java\n+++ b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/services/oslp/PendingSetScheduleRequestService.java\n\n@@ -1,7 +1,8 @@\n /**\n- * Copyright 2020 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n  *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3MzY1MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512273651", "bodyText": "Header is missing.", "author": "kevinsmeets", "createdAt": "2020-10-26T21:16:37Z", "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/entities/PendingSetScheduleRequest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.opensmartgridplatform.adapter.protocol.oslp.elster.domain.entities;", "originalCommit": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b7b4d9f44741c8e273f792623e72e4e9c339cb3", "chunk": "diff --git a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/entities/PendingSetScheduleRequest.java b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/entities/PendingSetScheduleRequest.java\nindex c6fbe87967..ca2fc600c4 100644\n--- a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/entities/PendingSetScheduleRequest.java\n+++ b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/entities/PendingSetScheduleRequest.java\n\n@@ -1,3 +1,12 @@\n+/**\n+ * Copyright 2020 Alliander N.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+\n package org.opensmartgridplatform.adapter.protocol.oslp.elster.domain.entities;\n \n import java.util.Date;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3NTIzMg==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512275232", "bodyText": "I think we should be using 'Alliander N.V.' as the company name in headers, and the year is wrong.", "author": "kevinsmeets", "createdAt": "2020-10-26T21:19:44Z", "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/repositories/PendingSetScheduleRequestRepository.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright 2015 Smart Society Services B.V.", "originalCommit": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b7b4d9f44741c8e273f792623e72e4e9c339cb3", "chunk": "diff --git a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/repositories/PendingSetScheduleRequestRepository.java b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/repositories/PendingSetScheduleRequestRepository.java\nindex 6a36815c90..af68b9cce3 100644\n--- a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/repositories/PendingSetScheduleRequestRepository.java\n+++ b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/domain/repositories/PendingSetScheduleRequestRepository.java\n\n@@ -1,7 +1,8 @@\n /**\n- * Copyright 2015 Smart Society Services B.V.\n+ * Copyright 2020 Alliander N.V.\n  *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License at\n  *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4Mzk0OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512283949", "bodyText": "Most, if not all, of the code-base, is using Java's DateTime class (which used to be Yoda's DateTime class) to create and manipulate times. Don't use the Calender class, instead use something like:\nfinal Date date = DateTime.now().minusMonths(this.deviceMessageRetentionPeriodInMonths).toDate();", "author": "kevinsmeets", "createdAt": "2020-10-26T21:36:50Z", "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/messaging/processors/PublicLightingSetScheduleRequestMessageProcessor.java", "diffHunk": "@@ -180,24 +218,68 @@ private void handleGetConfigurationBeforeSetScheduleResponse(final SetScheduleDe\n         this.deviceService.setSchedule(newDeviceRequest);\n     }\n \n+    private ScheduleMessageTypeDto determineNextRequest(final SetScheduleDeviceRequest deviceRequest, final GetConfigurationDeviceResponse deviceResponse) {\n+        final int requestedSunriseOffset = deviceRequest.getScheduleMessageDataContainer().getSchedule().getAstronomicalSunriseOffset();\n+        final int requestedSunsetOffset = deviceRequest.getScheduleMessageDataContainer().getSchedule().getAstronomicalSunsetOffset();\n+        final ConfigurationDto configurationInDevice = deviceResponse.getConfiguration();\n+\n+        LOGGER.info(\"Requested astroGateSunRiseOffset {},  astroGateSunRiseOffset in device {}, Requested astroGateSunSetOffset {},  astroGateSunSetOffset in device {}, \",\n+                requestedSunriseOffset,configurationInDevice.getAstroGateSunRiseOffset(),\n+                requestedSunsetOffset, configurationInDevice.getAstroGateSunSetOffset());\n+\n+        if (requestedSunriseOffset != configurationInDevice.getAstroGateSunRiseOffset() ||\n+                requestedSunsetOffset != configurationInDevice.getAstroGateSunSetOffset()) {\n+            return ScheduleMessageTypeDto.SET_ASTRONOMICAL_OFFSETS;\n+        }\n+\n+        return ScheduleMessageTypeDto.SET_SCHEDULE;\n+    }\n+\n     private void handleSetScheduleAstronomicalOffsetsResponse(final SetScheduleDeviceRequest deviceRequest) {\n+        // Configuration / Astronomical offsets are set , so now continue with rebooting the device\n \n-        // Astronomical offsets are set, so now continue with the actual\n-        // schedule\n         LOGGER.info(LOG_MESSAGE_CALL_DEVICE_SERVICE, deviceRequest.getMessageType(),\n-                ScheduleMessageTypeDto.SET_SCHEDULE, deviceRequest.getDomain(), deviceRequest.getDomainVersion());\n+                ScheduleMessageTypeDto.SET_ASTRONOMICAL_OFFSETS, deviceRequest.getDomain(),\n+                deviceRequest.getDomainVersion());\n \n         final ScheduleMessageDataContainerDto dataContainer = new ScheduleMessageDataContainerDto.Builder(\n                 deviceRequest.getScheduleMessageDataContainer().getSchedule())\n-                        .withScheduleMessageType(ScheduleMessageTypeDto.SET_SCHEDULE)\n-                        .build();\n+                .withScheduleMessageType(ScheduleMessageTypeDto.SET_REBOOT)\n+                .build();\n \n         final SetScheduleDeviceRequest newDeviceRequest = new SetScheduleDeviceRequest(\n                 createDeviceRequestBuilder(deviceRequest), dataContainer, RelayTypeDto.LIGHT);\n \n         this.deviceService.setSchedule(newDeviceRequest);\n     }\n \n+    private void handleSetScheduleSetRebootResponse(final SetScheduleDeviceRequest deviceRequest) {\n+\n+        // The device will reboot now.\n+        // At this point we will need to save the current state to the pending_set_schedule_request table\n+\n+        LOGGER.info(LOG_MESSAGE_CALL_DEVICE_SERVICE, deviceRequest.getMessageType(),\n+                ScheduleMessageTypeDto.SET_SCHEDULE, deviceRequest.getDomain(), deviceRequest.getDomainVersion());\n+\n+        final ScheduleMessageDataContainerDto dataContainer = new ScheduleMessageDataContainerDto.Builder(\n+                deviceRequest.getScheduleMessageDataContainer().getSchedule())\n+                        .withScheduleMessageType(ScheduleMessageTypeDto.SET_SCHEDULE)\n+                        .build();\n+\n+        final Calendar calendar = Calendar.getInstance();\n+        calendar.setTime(new Date());\n+        calendar.add(Calendar.MINUTE, this.pendingSetScheduleRequestExpiresInMinutes);", "originalCommit": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b7b4d9f44741c8e273f792623e72e4e9c339cb3", "chunk": "diff --git a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/messaging/processors/PublicLightingSetScheduleRequestMessageProcessor.java b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/messaging/processors/PublicLightingSetScheduleRequestMessageProcessor.java\nindex d923bd736d..d3f7d4f27a 100644\n--- a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/messaging/processors/PublicLightingSetScheduleRequestMessageProcessor.java\n+++ b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/messaging/processors/PublicLightingSetScheduleRequestMessageProcessor.java\n\n@@ -266,14 +266,12 @@ public class PublicLightingSetScheduleRequestMessageProcessor extends DeviceRequ\n                         .withScheduleMessageType(ScheduleMessageTypeDto.SET_SCHEDULE)\n                         .build();\n \n-        final Calendar calendar = Calendar.getInstance();\n-        calendar.setTime(new Date());\n-        calendar.add(Calendar.MINUTE, this.pendingSetScheduleRequestExpiresInMinutes);\n+        final Date date = DateTime.now().plusMinutes(this.pendingSetScheduleRequestExpiresInMinutes).toDate();\n         final PendingSetScheduleRequest pendingSetScheduleRequest = PendingSetScheduleRequest.builder()\n                 .deviceIdentification(deviceRequest.getDeviceIdentification())\n                 .scheduleMessageDataContainerDto(dataContainer)\n                 .deviceRequest(deviceRequest)\n-                .expiredAt(calendar.getTime())\n+                .expiredAt(date)\n                 .build();\n \n         this.pendingSetScheduleRequestService.add(pendingSetScheduleRequest);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5NDg4MQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512294881", "bodyText": "There is a lot to remark about adding and calling this function here.\n\nThis class OslpChannelHandlerServer is not transactional. The function handleSetSchedule() deletes a record (this.pendingSetScheduleRequestService.remove(pendingSetScheduleRequest);), if certain conditions are met. This is not OK. Move the function handleSetSchedule() to a transactional service class.\nThis class OslpChannelHandlerServer handles incoming messages. Is it desirable that this class is now also sending a request to a device (this.deviceService.setSchedule(newDeviceRequest);)? I know it is (implicitly) decoupled because the request has to be signed, which means the request is sent to the signing-server component, which is an operation that utilizes queues, therefore there is no direct coupling. Still, it seems to me that a TCP-server is using a TCP-client, which would be a bad design, if not for the signing-thing...\nIs it desirable that each incoming confirm registration message now needs a lookup for the device, and a lookup for the (only in a few cases present) pending set schedule request record(s)? To me, this seems to add a lot of fetch operations to the database load, since every Elster OSLP devices registers once every 24 hours. Saving the device UID as part of the pending set schedule request record(s) could at least mitigate the fetching of the oslp device record.", "author": "kevinsmeets", "createdAt": "2020-10-26T21:59:53Z", "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/networking/OslpChannelHandlerServer.java", "diffHunk": "@@ -257,15 +276,18 @@ private int convertGpsCoordinateFromFloatToInt(final Float input) {\n         return (int) (input * 1000000);\n     }\n \n-    private Oslp.Message handleConfirmRegisterDeviceRequest(final byte[] deviceId, final byte[] sequenceNumber,\n+    private Oslp.Message handleConfirmRegisterDeviceRequest(final byte[] deviceUid, final byte[] sequenceNumber,\n             final Oslp.ConfirmRegisterDeviceRequest confirmRegisterDeviceRequest) throws ProtocolAdapterException {\n \n         try {\n-            this.deviceRegistrationService.confirmRegisterDevice(deviceId,\n+            this.deviceRegistrationService.confirmRegisterDevice(deviceUid,\n                     SequenceNumberUtils.convertByteArrayToInteger(sequenceNumber),\n                     confirmRegisterDeviceRequest.getRandomDevice(), confirmRegisterDeviceRequest.getRandomPlatform());\n+\n+            this.handleSetSchedule(deviceUid);", "originalCommit": "be86fa9753de720c8ea6d3e6c4a58902ec3402f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxNDQ4Nw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r512514487", "bodyText": "Hmm, the pendingSetScheduleRequestService is transactional. If some other process deleted the pendingSetScheduleRequest this would indeed result in a fail. But I don't exactly know if table locks or record locks or whatever type of locking will be used I don't think it is a good idea to put all code within the handleSetSchedule in a transaction since this.deviceService.setSchedule(newDeviceRequest) will also be inside in the transaction. I think that operation will take most of the time, and I would prefer to at least have that operation succeed before the pendingsetschedulerequest record is removed. I'll change the service to catch PersistenceException.", "author": "joostknapen", "createdAt": "2020-10-27T08:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5NDg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "3db7ccb902aecda8efc4a0b8accadb7e96073afc", "chunk": "diff --git a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/networking/OslpChannelHandlerServer.java b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/networking/OslpChannelHandlerServer.java\nindex 596b3a5412..727cf17454 100644\n--- a/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/networking/OslpChannelHandlerServer.java\n+++ b/osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/infra/networking/OslpChannelHandlerServer.java\n\n@@ -283,9 +271,6 @@ public class OslpChannelHandlerServer extends OslpChannelHandler {\n             this.deviceRegistrationService.confirmRegisterDevice(deviceUid,\n                     SequenceNumberUtils.convertByteArrayToInteger(sequenceNumber),\n                     confirmRegisterDeviceRequest.getRandomDevice(), confirmRegisterDeviceRequest.getRandomPlatform());\n-\n-            this.handleSetSchedule(deviceUid);\n-\n         } catch (final Exception e) {\n             LOGGER.error(\"handle confirm register device request exception\");\n             throw new ProtocolAdapterException(\"ConfirmRegisterDevice failed\", e);\n"}}, {"oid": "6b7b4d9f44741c8e273f792623e72e4e9c339cb3", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6b7b4d9f44741c8e273f792623e72e4e9c339cb3", "message": "FLEX-5527: Changed copyright headers", "committedDate": "2020-10-27T09:45:41Z", "type": "commit"}, {"oid": "8779e9bb7077cf7b49f5aad45457174ca9ac0381", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/8779e9bb7077cf7b49f5aad45457174ca9ac0381", "message": "FLEX-5527 ~ Processes review comments", "committedDate": "2020-10-27T22:31:08Z", "type": "commit"}, {"oid": "27d65722442798aeca924dce8f7b47e38b1edf49", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/27d65722442798aeca924dce8f7b47e38b1edf49", "message": "Merge branch 'FLEX-5527_Reboot_function_after_config_change' of github.com:OSGP/open-smart-grid-platform into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-27T22:40:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3OTUzOA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/470#discussion_r513079538", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "jenkins-ip-10-4-24-184", "createdAt": "2020-10-27T22:52:54Z", "path": "osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/RegisterDevice.java", "diffHunk": "@@ -363,6 +352,8 @@ public DeviceMessageStatus sendEventNotificationCommand(final Long id, final Int\n         }\n     }\n \n+    @Deprecated\n+    // No longer used, as device creation scripts create device UID\n     private byte[] createRandomDeviceUid() {", "originalCommit": "27d65722442798aeca924dce8f7b47e38b1edf49", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b58067a10ce9c4b4b5759a0334a2a974e60d58b8", "chunk": "diff --git a/osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/RegisterDevice.java b/osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/RegisterDevice.java\nindex 075962d70e..33ad64a084 100644\n--- a/osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/RegisterDevice.java\n+++ b/osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/RegisterDevice.java\n\n@@ -352,8 +352,10 @@ public class RegisterDevice {\n         }\n     }\n \n+    /**\n+     * @deprecated No longer used, as device creation scripts create device UID\n+     */\n     @Deprecated\n-    // No longer used, as device creation scripts create device UID\n     private byte[] createRandomDeviceUid() {\n         // Generate random bytes for UID\n         final byte[] deviceUid = new byte[OslpEnvelope.DEVICE_ID_LENGTH];\n"}}, {"oid": "85954c17dac014afacda4b39b69a56d1bc77f278", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/85954c17dac014afacda4b39b69a56d1bc77f278", "message": "Merge remote-tracking branch 'origin/development' into FLEX-5527_Reboot_function_after_config_change", "committedDate": "2020-10-27T23:06:25Z", "type": "commit"}, {"oid": "b58067a10ce9c4b4b5759a0334a2a974e60d58b8", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b58067a10ce9c4b4b5759a0334a2a974e60d58b8", "message": "FLEX-5527 ~ Updates deprecated comment.", "committedDate": "2020-10-28T10:23:27Z", "type": "commit"}, {"oid": "978c75c05e5ad9f5e70cc13ce3989382706003f4", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/978c75c05e5ad9f5e70cc13ce3989382706003f4", "message": "FLEX-5527 ~ Moves wait step to common test library.", "committedDate": "2020-10-28T22:36:59Z", "type": "commit"}, {"oid": "3db7ccb902aecda8efc4a0b8accadb7e96073afc", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/3db7ccb902aecda8efc4a0b8accadb7e96073afc", "message": "FLEX-5527 ~ Moves 'handle schedule' call in OSLP channel handler server to a more robust location.\n\nTests have shown that the introduces call to set schedule is too soon. This causes problems with the device simulator, optimistic locking exceptions caused by the fact the register device and confirm register device steps are not completed yet. This change in the execution order seem to deliver a more robust solution.", "committedDate": "2020-10-28T22:40:33Z", "type": "commit"}, {"oid": "c20da1bf0653a0b41b07ff011ce82a618ffe451a", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c20da1bf0653a0b41b07ff011ce82a618ffe451a", "message": "FLEX-5527 ~ Makes sure exceptions, like connection refused or connection time-out, which result in an IOException, are propagated.\n\nTesting revealed a major bug, which causes exceptions to be 'ignored'. Those exceptions were not handeled and converted to a response sent by protocol adapter to the platform components. Calling the response handler when an exception occurs and introducing a try-catch when bytes are written to the channel solves these problems.", "committedDate": "2020-10-28T22:44:34Z", "type": "commit"}]}