{"pr_number": 456, "pr_title": "Feature/oc 667 peakshaving update kafka", "pr_createdAt": "2020-10-13T07:06:23Z", "pr_url": "https://github.com/OSGP/open-smart-grid-platform/pull/456", "timeline": [{"oid": "154b84fd904e336d161d2fa4a74b076a4bdfbbf6", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/154b84fd904e336d161d2fa4a74b076a4bdfbbf6", "message": "OC-887: Updates code to new Avro schema.", "committedDate": "2020-10-13T06:36:49Z", "type": "commit"}, {"oid": "369bd3ce30bb813b24190ce4f81985a54f79b3f4", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/369bd3ce30bb813b24190ce4f81985a54f79b3f4", "message": "OC-667: Adapts cucumber scenario to new avro schema.", "committedDate": "2020-10-13T07:01:11Z", "type": "commit"}, {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/395df1d887ce32cf5a770347cd446b8c3d6c3465", "message": "OC-667: Removes unnecessary code.", "committedDate": "2020-10-13T07:03:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMDI3OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r503720278", "bodyText": "Override the \"equals\" method in this class.", "author": "jenkins-ip-10-4-24-184", "createdAt": "2020-10-13T07:20:11Z", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "diffHunk": "@@ -42,15 +42,15 @@\n  * ls peak shaving measurement: ean_code + the values of\n  * LsPeakShavingMeasurementType seperated by semicolons.\n  */\n-public class GridMeasurementPublishedEventConverter extends CustomConverter<String, GridMeasurementPublishedEvent> {\n+public class ScadaMeasurementPublishedEventConverter extends CustomConverter<String, ScadaMeasurementPublishedEvent> {", "originalCommit": "395df1d887ce32cf5a770347cd446b8c3d6c3465", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzQ4NA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r504217484", "bodyText": "I think the \"Arrays.toString\" is needed for readable output.", "author": "rlemmers", "createdAt": "2020-10-13T19:54:30Z", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "diffHunk": "@@ -64,8 +64,7 @@ public GridMeasurementPublishedEvent convert(final String source,\n             final Payload payload = payloads[0];\n \n             final String[] measurementValues = (payload.gisnr + \", \" + String.join(\", \", payload.data)).split(\", \");\n-            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length,\n-                    Arrays.toString(measurementValues));\n+            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length, measurementValues);", "originalCommit": "395df1d887ce32cf5a770347cd446b8c3d6c3465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4NTU4OQ==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r505185589", "bodyText": "reverted the change", "author": "robindenadel", "createdAt": "2020-10-15T06:08:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "0d27fe29750d306ec041dde9f4d2f7f558866c41", "chunk": "diff --git a/osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java b/osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java\nindex f53560fe27..e42d23abd6 100644\n--- a/osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java\n+++ b/osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java\n\n@@ -64,7 +65,8 @@ public class ScadaMeasurementPublishedEventConverter extends CustomConverter<Str\n             final Payload payload = payloads[0];\n \n             final String[] measurementValues = (payload.gisnr + \", \" + String.join(\", \", payload.data)).split(\", \");\n-            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length, measurementValues);\n+            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length,\n+                    Arrays.toString(measurementValues));\n \n             if (measurementValues.length == LsPeakShavingMeasurementType.getNumberOfElements() + 1) {\n                 stringArrayToAnalogList = new LsMeasurementMessageToAnalogList();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyOTIxNw==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r504229217", "bodyText": "Do we need a similar catch in the ScadaMeasurementPublishedEventProducer?", "author": "rlemmers", "createdAt": "2020-10-13T20:16:36Z", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/infra/kafka/out/PeakShavingProducer.java", "diffHunk": "@@ -1,39 +0,0 @@\n-/**\n- * Copyright 2020 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.adapter.kafka.da.infra.kafka.out;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n-import org.springframework.kafka.core.KafkaTemplate;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class PeakShavingProducer {\n-\n-    private static final Logger LOGGER = LoggerFactory.getLogger(PeakShavingProducer.class);\n-\n-    private final KafkaTemplate<String, String> kafkaTemplate;\n-\n-    @Autowired\n-    public PeakShavingProducer(\n-            @Qualifier(\"peakShavingKafkaTemplate\") final KafkaTemplate<String, String> kafkaTemplate) {\n-        this.kafkaTemplate = kafkaTemplate;\n-    }\n-\n-    public void send(final String message) {\n-\n-        try {\n-            this.kafkaTemplate.sendDefault(message);\n-        } catch (final RuntimeException e) {\n-            LOGGER.error(\"Sending message {} failed\", message, e);\n-        }", "originalCommit": "395df1d887ce32cf5a770347cd446b8c3d6c3465", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4NTE0OA==", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r505185148", "bodyText": "No, by default the template is configured with a LoggingProducerListener wich logs errors.", "author": "robindenadel", "createdAt": "2020-10-15T06:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyOTIxNw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0d27fe29750d306ec041dde9f4d2f7f558866c41", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0d27fe29750d306ec041dde9f4d2f7f558866c41", "message": "OC-667: Addresses review comments.", "committedDate": "2020-10-15T06:08:08Z", "type": "commit"}, {"oid": "7aff590b084b4ae46bd458a918c3202ce44fde08", "url": "https://github.com/OSGP/open-smart-grid-platform/commit/7aff590b084b4ae46bd458a918c3202ce44fde08", "message": "OC-667 ~ Reactivates xml validation", "committedDate": "2020-10-15T11:10:22Z", "type": "commit"}]}