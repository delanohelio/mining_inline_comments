{"pr_number": 1355, "pr_title": "Add hashCode() and equals() to ReplaceRegion", "pr_createdAt": "2020-01-15T13:41:54Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1355", "timeline": [{"oid": "198a74e270968581581a15932b6a7878d3099eff", "url": "https://github.com/eclipse/xtext-core/commit/198a74e270968581581a15932b6a7878d3099eff", "message": "add hashCode() and equals() to ReplaceRegion\n\nSigned-off-by: mmews <marcus.mews@numberfour.eu>", "committedDate": "2020-01-15T13:33:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzU0Nw==", "url": "https://github.com/eclipse/xtext-core/pull/1355#discussion_r366913547", "bodyText": "I'm not a big fan of Object.equals(..) for primitives. It causes boxing and is distracting for the reader.\nHow does the equals / hashcode methods look like when they are generated by Eclipse?", "author": "szarnekow", "createdAt": "2020-01-15T14:44:40Z", "path": "org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java", "diffHunk": "@@ -56,6 +58,25 @@ public void applyTo(StringBuilder builder) {\n \t\tbuilder.replace(offset, getEndOffset(), text);\n \t}\n \t\n+\t@Override\n+\tpublic boolean equals(Object object) {\n+\t\tif (object instanceof ReplaceRegion) {\n+\t\t\tReplaceRegion rr = (ReplaceRegion) object;\n+\n+\t\t\tboolean equals = true;\n+\t\t\tequals = equals && Objects.equals(getOffset(), rr.getOffset());", "originalCommit": "198a74e270968581581a15932b6a7878d3099eff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4353ade62bdf157d46853befd91861012f2e7527", "chunk": "diff --git a/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java b/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java\nindex 512675544..293357c7d 100644\n--- a/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java\n+++ b/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java\n\n@@ -60,21 +58,38 @@ public class ReplaceRegion {\n \t\n \t@Override\n \tpublic boolean equals(Object object) {\n-\t\tif (object instanceof ReplaceRegion) {\n-\t\t\tReplaceRegion rr = (ReplaceRegion) object;\n+\t\tif (this == object)\n+\t\t\treturn true;\n+\t\tif (object == null)\n+\t\t\treturn false;\n+\t\tif (getClass() != object.getClass())\n+\t\t\treturn false;\n \n-\t\t\tboolean equals = true;\n-\t\t\tequals = equals && Objects.equals(getOffset(), rr.getOffset());\n-\t\t\tequals = equals && Objects.equals(getLength(), rr.getLength());\n-\t\t\tequals = equals && Objects.equals(getText(), rr.getText());\n-\t\t\treturn equals;\n+\t\tReplaceRegion other = (ReplaceRegion) object;\n+\t\tif (this.offset != other.offset) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (this.length != other.length) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (this.text == null) {\n+\t\t\tif (other.text != null) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (!this.text.equals(other.text)) {\n+\t\t\treturn false;\n \t\t}\n-\t\treturn false;\n+\t\treturn true;\n \t}\n \n \t@Override\n \tpublic int hashCode() {\n-\t\treturn Objects.hash(getOffset(), getLength(), getText());\n+\t\tfinal int prime = 31;\n+\t\tint result = 1;\n+\t\tresult = prime * result + offset;\n+\t\tresult = prime * result + length;\n+\t\tresult = prime * result + ((text == null) ? 0 : text.hashCode());\n+\t\treturn result;\n \t}\n \t\n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzc5Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1355#discussion_r366913792", "bodyText": "This builds an array of values including boxing conversion. I think the defaults as generated by Eclipse are better.", "author": "szarnekow", "createdAt": "2020-01-15T14:45:08Z", "path": "org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java", "diffHunk": "@@ -56,6 +58,25 @@ public void applyTo(StringBuilder builder) {\n \t\tbuilder.replace(offset, getEndOffset(), text);\n \t}\n \t\n+\t@Override\n+\tpublic boolean equals(Object object) {\n+\t\tif (object instanceof ReplaceRegion) {\n+\t\t\tReplaceRegion rr = (ReplaceRegion) object;\n+\n+\t\t\tboolean equals = true;\n+\t\t\tequals = equals && Objects.equals(getOffset(), rr.getOffset());\n+\t\t\tequals = equals && Objects.equals(getLength(), rr.getLength());\n+\t\t\tequals = equals && Objects.equals(getText(), rr.getText());\n+\t\t\treturn equals;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn Objects.hash(getOffset(), getLength(), getText());", "originalCommit": "198a74e270968581581a15932b6a7878d3099eff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4353ade62bdf157d46853befd91861012f2e7527", "chunk": "diff --git a/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java b/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java\nindex 512675544..293357c7d 100644\n--- a/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java\n+++ b/org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java\n\n@@ -60,21 +58,38 @@ public class ReplaceRegion {\n \t\n \t@Override\n \tpublic boolean equals(Object object) {\n-\t\tif (object instanceof ReplaceRegion) {\n-\t\t\tReplaceRegion rr = (ReplaceRegion) object;\n+\t\tif (this == object)\n+\t\t\treturn true;\n+\t\tif (object == null)\n+\t\t\treturn false;\n+\t\tif (getClass() != object.getClass())\n+\t\t\treturn false;\n \n-\t\t\tboolean equals = true;\n-\t\t\tequals = equals && Objects.equals(getOffset(), rr.getOffset());\n-\t\t\tequals = equals && Objects.equals(getLength(), rr.getLength());\n-\t\t\tequals = equals && Objects.equals(getText(), rr.getText());\n-\t\t\treturn equals;\n+\t\tReplaceRegion other = (ReplaceRegion) object;\n+\t\tif (this.offset != other.offset) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (this.length != other.length) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (this.text == null) {\n+\t\t\tif (other.text != null) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else if (!this.text.equals(other.text)) {\n+\t\t\treturn false;\n \t\t}\n-\t\treturn false;\n+\t\treturn true;\n \t}\n \n \t@Override\n \tpublic int hashCode() {\n-\t\treturn Objects.hash(getOffset(), getLength(), getText());\n+\t\tfinal int prime = 31;\n+\t\tint result = 1;\n+\t\tresult = prime * result + offset;\n+\t\tresult = prime * result + length;\n+\t\tresult = prime * result + ((text == null) ? 0 : text.hashCode());\n+\t\treturn result;\n \t}\n \t\n \t@Override\n"}}, {"oid": "4353ade62bdf157d46853befd91861012f2e7527", "url": "https://github.com/eclipse/xtext-core/commit/4353ade62bdf157d46853befd91861012f2e7527", "message": "performance improvements, add check for class\n\nSigned-off-by: mmews <marcus.mews@numberfour.eu>", "committedDate": "2020-01-16T09:46:24Z", "type": "commit"}]}