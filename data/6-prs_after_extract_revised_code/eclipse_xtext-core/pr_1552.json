{"pr_number": 1552, "pr_title": "Improved validation against imported ecore meta model", "pr_createdAt": "2020-08-07T08:53:30Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1552", "timeline": [{"oid": "39c439b30f4491dd6ef0f02b2a911e7f178952a9", "url": "https://github.com/eclipse/xtext-core/commit/39c439b30f4491dd6ef0f02b2a911e7f178952a9", "message": "Improved validation against imported ecore meta model\n\nSigned-off-by: Sebastian Zarnekow <sebastian.zarnekow@gmail.com>", "committedDate": "2020-08-07T08:48:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNTM3MQ==", "url": "https://github.com/eclipse/xtext-core/pull/1552#discussion_r466915371", "bodyText": "is this an expected case or an error case?", "author": "cdietrich", "createdAt": "2020-08-07T09:01:17Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/Xtext2EcoreInterpretationContext.java", "diffHunk": "@@ -190,8 +212,16 @@ public Xtext2EcoreInterpretationContext mergeSpawnedContexts(List<Xtext2EcoreInt\n \t\treturn result;\n \t}\n \n+\tpublic Collection<EClassifierInfo> getCurrentTypes() {\n+\t\treturn currentTypes;\n+\t}\n+\t\n \tpublic EClassifierInfo getCurrentCompatibleType() {\n-\t\treturn eClassifierInfos.getCompatibleTypeOf(currentTypes);\n+\t\ttry {\n+\t\t\treturn eClassifierInfos.getCompatibleTypeOf(currentTypes);\n+\t\t} catch(IllegalArgumentException e) {", "originalCommit": "39c439b30f4491dd6ef0f02b2a911e7f178952a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3ODY4Mw==", "url": "https://github.com/eclipse/xtext-core/pull/1552#discussion_r466978683", "bodyText": "It used to be there. I think it doesn't really happen in practice but I wanted to keep the catch clause.", "author": "szarnekow", "createdAt": "2020-08-07T11:20:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNTM3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNTcyMg==", "url": "https://github.com/eclipse/xtext-core/pull/1552#discussion_r466915722", "bodyText": "do we want to add a since anyway?", "author": "cdietrich", "createdAt": "2020-08-07T09:01:52Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfoAccess.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Sebastian Zarnekow and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.xtext.ecoreInference;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * Encapsulates the access to the type information during the static analysis of Xtext grammar rules.\n+ */\n+interface EClassifierInfoAccess {", "originalCommit": "39c439b30f4491dd6ef0f02b2a911e7f178952a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3ODk5OA==", "url": "https://github.com/eclipse/xtext-core/pull/1552#discussion_r466978998", "bodyText": "\ud83d\udc4d", "author": "szarnekow", "createdAt": "2020-08-07T11:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNTcyMg=="}], "type": "inlineReview", "revised_code": {"commit": "66d2e3c12f3bb795883be9c79673f83bdf5f4c54", "chunk": "diff --git a/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfoAccess.java b/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfoAccess.java\nindex 871f15bc8..287b33c7e 100644\n--- a/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfoAccess.java\n+++ b/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfoAccess.java\n\n@@ -14,6 +14,8 @@ import java.util.Collections;\n \n /**\n  * Encapsulates the access to the type information during the static analysis of Xtext grammar rules.\n+ * \n+ * @since 2.23\n  */\n interface EClassifierInfoAccess {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNjk2OA==", "url": "https://github.com/eclipse/xtext-core/pull/1552#discussion_r466916968", "bodyText": "do we need instanceof EClass check here?", "author": "cdietrich", "createdAt": "2020-08-07T09:04:22Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfo.java", "diffHunk": "@@ -299,14 +306,24 @@ public boolean isFeatureSemanticallyEqualApartFromType(EStructuralFeature f1, ES\n \t\t\treturn result;\n \t\t}\n \n-\t\tpublic boolean isFeatureSemanticallyEqualTo(EStructuralFeature f1, EStructuralFeature f2) {\n+\t\tprivate boolean isFeatureSemanticallyEqualTo(EStructuralFeature f1, EStructuralFeature f2, Set<EClassifier> f2Types) {\n+\t\t\tif (f1 == f2) {\n+\t\t\t\treturn true;\n+\t\t\t}\n \t\t\tboolean result = isFeatureSemanticallyEqualApartFromType(f1, f2);\n \t\t\tif (f1 instanceof EReference && f2 instanceof EReference) {\n \t\t\t\tEClass f1Type = (EClass) f1.getEType();", "originalCommit": "39c439b30f4491dd6ef0f02b2a911e7f178952a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk3ODk1NQ==", "url": "https://github.com/eclipse/xtext-core/pull/1552#discussion_r466978955", "bodyText": "EReferences will return an EClass from their type. I can add an explicit cast to f1 and use getEReferenceType instead.", "author": "szarnekow", "createdAt": "2020-08-07T11:20:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxNjk2OA=="}], "type": "inlineReview", "revised_code": {"commit": "66d2e3c12f3bb795883be9c79673f83bdf5f4c54", "chunk": "diff --git a/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfo.java b/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfo.java\nindex f4bfdddf0..97d8aa74e 100755\n--- a/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfo.java\n+++ b/org.eclipse.xtext/src/org/eclipse/xtext/xtext/ecoreInference/EClassifierInfo.java\n\n@@ -312,7 +312,7 @@ public abstract class EClassifierInfo {\n \t\t\t}\n \t\t\tboolean result = isFeatureSemanticallyEqualApartFromType(f1, f2);\n \t\t\tif (f1 instanceof EReference && f2 instanceof EReference) {\n-\t\t\t\tEClass f1Type = (EClass) f1.getEType();\n+\t\t\t\tEClass f1Type = ((EReference)f1).getEReferenceType();\n \t\t\t\tresult &= ((EReference) f1).isContainment() == ((EReference) f2).isContainment();\n \t\t\t\tresult &= ((EReference) f1).isContainer() == ((EReference) f2).isContainer();\n \t\t\t\tif (result) {\n"}}, {"oid": "66d2e3c12f3bb795883be9c79673f83bdf5f4c54", "url": "https://github.com/eclipse/xtext-core/commit/66d2e3c12f3bb795883be9c79673f83bdf5f4c54", "message": "First round of review feedback.\n\nSigned-off-by: Sebastian Zarnekow <sebastian.zarnekow@gmail.com>", "committedDate": "2020-08-07T11:23:15Z", "type": "commit"}]}