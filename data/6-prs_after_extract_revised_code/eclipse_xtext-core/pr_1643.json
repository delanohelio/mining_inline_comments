{"pr_number": 1643, "pr_title": "Regenerated Languages", "pr_createdAt": "2020-12-04T17:22:41Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1643", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzE2Nw==", "url": "https://github.com/eclipse/xtext-core/pull/1643#discussion_r537327167", "bodyText": "Cardinality on new line @ArneDeutsch", "author": "szarnekow", "createdAt": "2020-12-07T08:48:16Z", "path": "org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java", "diffHunk": "@@ -482,21 +464,13 @@\n \t\tprivate final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);\n \t\t\n \t\t//AliasedRequiredCapability:\n-\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' ( ('when' ':' condExpr=Expression ';')?  \n-\t\t//\t\t& (greedy?=\"greedy\" ';')? \n-\t\t//\t\t& (\"requires-min\" ':' min=INT ';')? \n-\t\t//\t\t& (\"requires-max\" ':' max=INT ';')?\n-\t\t//\t\t& (\"version\" ':' versionRange=ID ';')?\n-\t\t//\t  \t)\n+\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' (('when' ':' condExpr=Expression ';')? & (greedy?=\"greedy\" ';')\n+\t\t//\t? & (\"requires-min\" ':' min=INT ';')? & (\"requires-max\" ':' max=INT ';')? & (\"version\" ':' versionRange=ID ';')?)", "originalCommit": "39aeb84f42626ec9be1ff2e0051106ab70391658", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2NjMzMQ==", "url": "https://github.com/eclipse/xtext-core/pull/1643#discussion_r540766331", "bodyText": "I have written a test and can not reproduce the behaviour, the question mark remains in the correct line. I assume there is some additional logic taking place (outside the formatter) ensuring that the lines to not get to long. Fear I can not fix this in the formatter.\nFrom this\nProvidedCapability: {ProvidedCapability}\n\t((nameSpace=ID) | \"unit\") \n\t('{'\n     \t( \t\n     \t  ('when' ':' condExpr = Expression ';')?\n\t    & (\"name\" ':' name = ID ';')          \n\t    & (\"version\" ':' version = ID ';')?\n\t    )\n\t'}')?\n;\n\nthe formatter produces that\nProvidedCapability:\n\t{ProvidedCapability}\n\t((nameSpace=ID) | \"unit\")\n\t('{'\n\t(('when' ':' condExpr=Expression ';')? & (\"name\" ':' name=ID ';') & (\"version\" ':' version=ID ';')?)\n\t'}')?;", "author": "ArneDeutsch", "createdAt": "2020-12-11T08:17:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzE2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2NzU5Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1643#discussion_r540767592", "bodyText": "What happens if you use two more chars for one of the keywords (to compensate for the '//' indentation string?", "author": "szarnekow", "createdAt": "2020-12-11T08:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "96d44d87a9eb2e5a5eefc1ced3e5d2e714746a43", "chunk": "diff --git a/org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java b/org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java\nindex b6ef7ee54..cef906aa6 100644\n--- a/org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java\n+++ b/org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java\n\n@@ -464,13 +482,21 @@ public class BeeLangTestLanguageGrammarAccess extends AbstractElementFinder.Abst\n \t\tprivate final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);\n \t\t\n \t\t//AliasedRequiredCapability:\n-\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' (('when' ':' condExpr=Expression ';')? & (greedy?=\"greedy\" ';')\n-\t\t//\t? & (\"requires-min\" ':' min=INT ';')? & (\"requires-max\" ':' max=INT ';')? & (\"version\" ':' versionRange=ID ';')?)\n+\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' ( ('when' ':' condExpr=Expression ';')?  \n+\t\t//\t\t& (greedy?=\"greedy\" ';')? \n+\t\t//\t\t& (\"requires-min\" ':' min=INT ';')? \n+\t\t//\t\t& (\"requires-max\" ':' max=INT ';')?\n+\t\t//\t\t& (\"version\" ':' versionRange=ID ';')?\n+\t\t//\t  \t)\n \t\t//\t'}');\n \t\t@Override public ParserRule getRule() { return rule; }\n \t\t\n-\t\t//(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' (('when' ':' condExpr=Expression ';')? & (greedy?=\"greedy\" ';')? &\n-\t\t//(\"requires-min\" ':' min=INT ';')? & (\"requires-max\" ':' max=INT ';')? & (\"version\" ':' versionRange=ID ';')?)\n+\t\t//(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' ( ('when' ':' condExpr=Expression ';')?  \n+\t\t//\t\t& (greedy?=\"greedy\" ';')? \n+\t\t//\t\t& (\"requires-min\" ':' min=INT ';')? \n+\t\t//\t\t& (\"requires-max\" ':' max=INT ';')?\n+\t\t//\t\t& (\"version\" ':' versionRange=ID ';')?\n+\t\t//\t  \t)\n \t\t//'}')\n \t\tpublic Group getGroup() { return cGroup; }\n \t\t\n"}}, {"oid": "96d44d87a9eb2e5a5eefc1ced3e5d2e714746a43", "url": "https://github.com/eclipse/xtext-core/commit/96d44d87a9eb2e5a5eefc1ced3e5d2e714746a43", "message": "[#1625] More formatter fixes and tests.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>", "committedDate": "2020-12-11T08:37:24Z", "type": "commit"}, {"oid": "d16c16c9163ce4f61ea7d1145d9011ab7892a6cf", "url": "https://github.com/eclipse/xtext-core/commit/d16c16c9163ce4f61ea7d1145d9011ab7892a6cf", "message": "Regenerated Languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-12-11T08:47:18Z", "type": "commit"}, {"oid": "d16c16c9163ce4f61ea7d1145d9011ab7892a6cf", "url": "https://github.com/eclipse/xtext-core/commit/d16c16c9163ce4f61ea7d1145d9011ab7892a6cf", "message": "Regenerated Languages\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-12-11T08:47:18Z", "type": "forcePushed"}]}