{"pr_number": 1543, "pr_title": "Fixed spaces after ML comments in format", "pr_createdAt": "2020-07-13T13:37:33Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1543", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMDU4Nw==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456300587", "bodyText": "We are at 2.23 now  :(", "author": "szarnekow", "createdAt": "2020-07-17T08:33:02Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java", "diffHunk": "@@ -45,7 +45,19 @@ public HiddenRegionReplacer(IHiddenRegion region, IHiddenRegionFormatting format\n \tprotected void applyHiddenRegionFormatting(List<ITextReplacer> replacers) {\n \t\tIHiddenRegionFormatting separator = findWhitespaceThatSeparatesSemanticRegions(replacers).getFormatting();\n \n-\t\t// 1. apply indentation \n+\t\tapplyIndentation(replacers, separator);\n+\n+\t\tapplySeparatorConfiguration(separator);\n+\n+\t\tapplyPriorityAndDefaultFormatting(replacers, separator);\n+\n+\t\tintroduceNewlinesAroundMLComments(replacers);\n+\t}\n+\n+\t/**\n+\t * @since 2.15", "originalCommit": "9004bca61a23cd8351bc039211cca1ede03fd98b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ4NzQxOA==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456487418", "bodyText": "Fixed", "author": "tivervac", "createdAt": "2020-07-17T14:44:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMDU4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9e9db566e51a2b7ffd518f2c5847172b1dc33b86", "chunk": "diff --git a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\nindex 356b7bf16..a06065861 100644\n--- a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n+++ b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n\n@@ -38,9 +38,9 @@ public class HiddenRegionReplacer implements ITextReplacer {\n \t}\n \n \t/**\n-\t * This method is when we have multiple TextReplacers for this HiddenRegion because the HiddenRegion contains\n+\t * This method is called when we have multiple TextReplacers for this HiddenRegion because the HiddenRegion contains\n \t * comments. It applies the formatting configuration from {@link #formatting} to the {@link WhitespaceReplacer} that\n-\t * surround the comment.\n+\t * surrounds the comment.\n \t */\n \tprotected void applyHiddenRegionFormatting(List<ITextReplacer> replacers) {\n \t\tIHiddenRegionFormatting separator = findWhitespaceThatSeparatesSemanticRegions(replacers).getFormatting();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMDg0NA==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456300844", "bodyText": "Is it correct to use identity comparison here?", "author": "szarnekow", "createdAt": "2020-07-17T08:33:34Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java", "diffHunk": "@@ -56,26 +68,52 @@ protected void applyHiddenRegionFormatting(List<ITextReplacer> replacers) {\n \t\t} else if (dec != null) {\n \t\t\tseparator.setIndentationDecrease(dec);\n \t\t}\n+\t}\n \n-\t\t// 2. apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.  \n+\t/**\n+\t * Apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.\n+\t * @since 2.15 \n+\t */\n+\tprotected void applySeparatorConfiguration(IHiddenRegionFormatting separator) {\n \t\tseparator.setNewLinesDefault(formatting.getNewLineDefault());\n \t\tseparator.setNewLinesMax(formatting.getNewLineMax());\n \t\tseparator.setNewLinesMin(formatting.getNewLineMin());\n \t\tseparator.setSpace(formatting.getSpace());\n+\t}\n \n-\t\t// 3. apply the 'priority' configuration for all and set a default formatting\n-\t\tfor (ITextReplacer replacer : replacers)\n+\t/**\n+\t * @since 2.15\n+\t */\n+\tprotected void applyPriorityAndDefaultFormatting(List<ITextReplacer> replacers, IHiddenRegionFormatting separator) {\n+\t\tfor (int i = 0; i < replacers.size(); i++) {\n+\t\t\tITextReplacer replacer = replacers.get(i);\n \t\t\tif (replacer instanceof WhitespaceReplacer) {\n \t\t\t\tIHiddenRegionFormatting formatting2 = ((WhitespaceReplacer) replacer).getFormatting();\n \t\t\t\tformatting2.setPriority(formatting.getPriority());\n \t\t\t\tif (formatting2 != separator) {", "originalCommit": "9004bca61a23cd8351bc039211cca1ede03fd98b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5MjU1NQ==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456492555", "bodyText": "Yes, but you could also leave it out or use equals. The if's just a very small optimalisation here", "author": "tivervac", "createdAt": "2020-07-17T14:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMDg0NA=="}], "type": "inlineReview", "revised_code": {"commit": "9e9db566e51a2b7ffd518f2c5847172b1dc33b86", "chunk": "diff --git a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\nindex 356b7bf16..a06065861 100644\n--- a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n+++ b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n\n@@ -71,8 +71,8 @@ public class HiddenRegionReplacer implements ITextReplacer {\n \t}\n \n \t/**\n-\t * Apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.\n-\t * @since 2.15 \n+\t * Apply newline and space configuration to the first whitespace region that follows or contains a linewrap.\n+\t * @since 2.23\n \t */\n \tprotected void applySeparatorConfiguration(IHiddenRegionFormatting separator) {\n \t\tseparator.setNewLinesDefault(formatting.getNewLineDefault());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMTI0OQ==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456301249", "bodyText": "The comment says don't add single spaces but all test cases do have spaces after the comments?", "author": "szarnekow", "createdAt": "2020-07-17T08:34:21Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java", "diffHunk": "@@ -56,26 +68,52 @@ protected void applyHiddenRegionFormatting(List<ITextReplacer> replacers) {\n \t\t} else if (dec != null) {\n \t\t\tseparator.setIndentationDecrease(dec);\n \t\t}\n+\t}\n \n-\t\t// 2. apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.  \n+\t/**\n+\t * Apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.\n+\t * @since 2.15 \n+\t */\n+\tprotected void applySeparatorConfiguration(IHiddenRegionFormatting separator) {\n \t\tseparator.setNewLinesDefault(formatting.getNewLineDefault());\n \t\tseparator.setNewLinesMax(formatting.getNewLineMax());\n \t\tseparator.setNewLinesMin(formatting.getNewLineMin());\n \t\tseparator.setSpace(formatting.getSpace());\n+\t}\n \n-\t\t// 3. apply the 'priority' configuration for all and set a default formatting\n-\t\tfor (ITextReplacer replacer : replacers)\n+\t/**\n+\t * @since 2.15\n+\t */\n+\tprotected void applyPriorityAndDefaultFormatting(List<ITextReplacer> replacers, IHiddenRegionFormatting separator) {\n+\t\tfor (int i = 0; i < replacers.size(); i++) {\n+\t\t\tITextReplacer replacer = replacers.get(i);\n \t\t\tif (replacer instanceof WhitespaceReplacer) {\n \t\t\t\tIHiddenRegionFormatting formatting2 = ((WhitespaceReplacer) replacer).getFormatting();\n \t\t\t\tformatting2.setPriority(formatting.getPriority());\n \t\t\t\tif (formatting2 != separator) {\n-\t\t\t\t\tformatting2.setSpace(replacer.getRegion().getOffset() > 0 ? \" \" : \"\");\n+\t\t\t\t\tITextReplacer previous = (i == 0) ? null : replacers.get(i - 1);\n+\t\t\t\t\tITextReplacer next = (i + 1 >= replacers.size()) ? null : replacers.get(i + 1);\n+\t\t\t\t\t// Don't add single spaces after comments", "originalCommit": "9004bca61a23cd8351bc039211cca1ede03fd98b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE4NzIxMQ==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r457187211", "bodyText": "I'll add comments", "author": "tivervac", "createdAt": "2020-07-20T08:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMTI0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9e9db566e51a2b7ffd518f2c5847172b1dc33b86", "chunk": "diff --git a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\nindex 356b7bf16..a06065861 100644\n--- a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n+++ b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n\n@@ -71,8 +71,8 @@ public class HiddenRegionReplacer implements ITextReplacer {\n \t}\n \n \t/**\n-\t * Apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.\n-\t * @since 2.15 \n+\t * Apply newline and space configuration to the first whitespace region that follows or contains a linewrap.\n+\t * @since 2.23\n \t */\n \tprotected void applySeparatorConfiguration(IHiddenRegionFormatting separator) {\n \t\tseparator.setNewLinesDefault(formatting.getNewLineDefault());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMTQ0NQ==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456301445", "bodyText": "Isn't this comment true for other tokens, too?", "author": "szarnekow", "createdAt": "2020-07-17T08:34:45Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java", "diffHunk": "@@ -56,26 +68,52 @@ protected void applyHiddenRegionFormatting(List<ITextReplacer> replacers) {\n \t\t} else if (dec != null) {\n \t\t\tseparator.setIndentationDecrease(dec);\n \t\t}\n+\t}\n \n-\t\t// 2. apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.  \n+\t/**\n+\t * Apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.\n+\t * @since 2.15 \n+\t */\n+\tprotected void applySeparatorConfiguration(IHiddenRegionFormatting separator) {\n \t\tseparator.setNewLinesDefault(formatting.getNewLineDefault());\n \t\tseparator.setNewLinesMax(formatting.getNewLineMax());\n \t\tseparator.setNewLinesMin(formatting.getNewLineMin());\n \t\tseparator.setSpace(formatting.getSpace());\n+\t}\n \n-\t\t// 3. apply the 'priority' configuration for all and set a default formatting\n-\t\tfor (ITextReplacer replacer : replacers)\n+\t/**\n+\t * @since 2.15\n+\t */\n+\tprotected void applyPriorityAndDefaultFormatting(List<ITextReplacer> replacers, IHiddenRegionFormatting separator) {\n+\t\tfor (int i = 0; i < replacers.size(); i++) {\n+\t\t\tITextReplacer replacer = replacers.get(i);\n \t\t\tif (replacer instanceof WhitespaceReplacer) {\n \t\t\t\tIHiddenRegionFormatting formatting2 = ((WhitespaceReplacer) replacer).getFormatting();\n \t\t\t\tformatting2.setPriority(formatting.getPriority());\n \t\t\t\tif (formatting2 != separator) {\n-\t\t\t\t\tformatting2.setSpace(replacer.getRegion().getOffset() > 0 ? \" \" : \"\");\n+\t\t\t\t\tITextReplacer previous = (i == 0) ? null : replacers.get(i - 1);\n+\t\t\t\t\tITextReplacer next = (i + 1 >= replacers.size()) ? null : replacers.get(i + 1);\n+\t\t\t\t\t// Don't add single spaces after comments\n+\t\t\t\t\tif (previous == null || !(previous instanceof CommentReplacer)) {\n+\t\t\t\t\t\t// Don't add spaces before ML comments because in the next step\n+\t\t\t\t\t\t// a newline will be added in front of ML comments.\n+\t\t\t\t\t\t// You don't want to end up with a ML comment on a newline that\n+\t\t\t\t\t\t// starts with a space", "originalCommit": "9004bca61a23cd8351bc039211cca1ede03fd98b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ5MzQ5Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456493492", "bodyText": "Yes, but we're already in this case we know we're dealing with whitespace (see the comment on applyHiddenRegionFormatting). The only tokens we can get here are SL/ML comment or WS.", "author": "tivervac", "createdAt": "2020-07-17T14:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMTQ0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9e9db566e51a2b7ffd518f2c5847172b1dc33b86", "chunk": "diff --git a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\nindex 356b7bf16..a06065861 100644\n--- a/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n+++ b/org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/HiddenRegionReplacer.java\n\n@@ -71,8 +71,8 @@ public class HiddenRegionReplacer implements ITextReplacer {\n \t}\n \n \t/**\n-\t * Apply NewLine and space configuration to the first whitespace region that follows or contains a linewrap.\n-\t * @since 2.15 \n+\t * Apply newline and space configuration to the first whitespace region that follows or contains a linewrap.\n+\t * @since 2.23\n \t */\n \tprotected void applySeparatorConfiguration(IHiddenRegionFormatting separator) {\n \t\tseparator.setNewLinesDefault(formatting.getNewLineDefault());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMTYxMg==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r456301612", "bodyText": "Not sure about this guard here.", "author": "szarnekow", "createdAt": "2020-07-17T08:35:03Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/formatting2/internal/MultilineCommentReplacer.java", "diffHunk": "@@ -36,8 +36,12 @@ public void configureWhitespace(WhitespaceReplacer leading, WhitespaceReplacer t\n \t\t\tenforceNewLine(leading);\n \t\t\tenforceNewLine(trailing);\n \t\t} else {\n-\t\t\tenforceSingleSpace(leading);\n-\t\t\tenforceSingleSpace(trailing);\n+\t\t\tif (!leading.getRegion().isMultiline()) {\n+\t\t\t\tenforceSingleSpace(leading);", "originalCommit": "9004bca61a23cd8351bc039211cca1ede03fd98b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyODUyMg==", "url": "https://github.com/eclipse/xtext-core/pull/1543#discussion_r457228522", "bodyText": "I've added MLSLOnSecondLine to show why this is needed", "author": "tivervac", "createdAt": "2020-07-20T09:42:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMTYxMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9e9db566e51a2b7ffd518f2c5847172b1dc33b86", "url": "https://github.com/eclipse/xtext-core/commit/9e9db566e51a2b7ffd518f2c5847172b1dc33b86", "message": "Review comments\n\nSigned-off-by: Titouan Vervack <titouan.vervack@sigasi.com>", "committedDate": "2020-08-24T11:57:58Z", "type": "forcePushed"}, {"oid": "35269d4cf9edd9e94467922070fef6326bb88674", "url": "https://github.com/eclipse/xtext-core/commit/35269d4cf9edd9e94467922070fef6326bb88674", "message": "Fixed spaces after ML comments\n\nSigned-off-by: Titouan Vervack <titouan.vervack@sigasi.com>", "committedDate": "2020-08-26T08:10:39Z", "type": "commit"}, {"oid": "7cebdd301e50b68265f335fa691ce372226e2c74", "url": "https://github.com/eclipse/xtext-core/commit/7cebdd301e50b68265f335fa691ce372226e2c74", "message": "Review comments\n\nSigned-off-by: Titouan Vervack <titouan.vervack@sigasi.com>", "committedDate": "2020-08-26T08:10:39Z", "type": "commit"}, {"oid": "7cebdd301e50b68265f335fa691ce372226e2c74", "url": "https://github.com/eclipse/xtext-core/commit/7cebdd301e50b68265f335fa691ce372226e2c74", "message": "Review comments\n\nSigned-off-by: Titouan Vervack <titouan.vervack@sigasi.com>", "committedDate": "2020-08-26T08:10:39Z", "type": "forcePushed"}]}