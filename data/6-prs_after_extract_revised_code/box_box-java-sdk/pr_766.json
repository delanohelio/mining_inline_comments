{"pr_number": 766, "pr_title": "Add the ability update and set tracking codes", "pr_createdAt": "2020-01-17T23:30:12Z", "pr_url": "https://github.com/box/box-java-sdk/pull/766", "timeline": [{"oid": "185529a869cd6d1fdb1c6d95a8f8f8777812986b", "url": "https://github.com/box/box-java-sdk/commit/185529a869cd6d1fdb1c6d95a8f8f8777812986b", "message": "tracking codes implementation", "committedDate": "2020-01-10T05:33:00Z", "type": "commit"}, {"oid": "9b5b965b53bd3e1e836aef5067bbcb6ea34b8562", "url": "https://github.com/box/box-java-sdk/commit/9b5b965b53bd3e1e836aef5067bbcb6ea34b8562", "message": "removing debug statements", "committedDate": "2020-01-10T05:36:25Z", "type": "commit"}, {"oid": "5d88cbd6fb18c85eaa01faa511fc0562d412a600", "url": "https://github.com/box/box-java-sdk/commit/5d88cbd6fb18c85eaa01faa511fc0562d412a600", "message": "added method to append tracking codes", "committedDate": "2020-01-13T05:32:54Z", "type": "commit"}, {"oid": "eb41421b290642152280a0f34a8d3b41b6cc49f5", "url": "https://github.com/box/box-java-sdk/commit/eb41421b290642152280a0f34a8d3b41b6cc49f5", "message": "Merge branch 'master' into tracking_codes", "committedDate": "2020-01-17T23:30:25Z", "type": "commit"}, {"oid": "cb422de3ee8c8b7d07540f156dbef7d138f39c8a", "url": "https://github.com/box/box-java-sdk/commit/cb422de3ee8c8b7d07540f156dbef7d138f39c8a", "message": "Merge branch 'master' into tracking_codes", "committedDate": "2020-01-23T22:23:47Z", "type": "commit"}, {"oid": "e41c39b90bf11638d0cc3009c63a12d07907add6", "url": "https://github.com/box/box-java-sdk/commit/e41c39b90bf11638d0cc3009c63a12d07907add6", "message": "Merge branch 'master' into tracking_codes", "committedDate": "2020-01-24T16:55:33Z", "type": "commit"}, {"oid": "2f1dd169e983e8b243280e6a5323a4bb8db5ae34", "url": "https://github.com/box/box-java-sdk/commit/2f1dd169e983e8b243280e6a5323a4bb8db5ae34", "message": "Merge branch 'master' into tracking_codes", "committedDate": "2020-01-28T00:08:44Z", "type": "commit"}, {"oid": "f231eda0e00bf9a055c114ade5e0011ed5c4e494", "url": "https://github.com/box/box-java-sdk/commit/f231eda0e00bf9a055c114ade5e0011ed5c4e494", "message": "Initial test framework", "committedDate": "2020-03-19T20:51:31Z", "type": "commit"}, {"oid": "c9b3c3a4b88673156558b71e34f4784e5a00182a", "url": "https://github.com/box/box-java-sdk/commit/c9b3c3a4b88673156558b71e34f4784e5a00182a", "message": "Tests Added for Create, Read, Update", "committedDate": "2020-04-02T19:21:43Z", "type": "commit"}, {"oid": "d4734cac515bf75ce5dcf38804ce3541b27a8ea9", "url": "https://github.com/box/box-java-sdk/commit/d4734cac515bf75ce5dcf38804ce3541b27a8ea9", "message": "Merge branch 'master' into tracking_codes", "committedDate": "2020-04-27T23:05:45Z", "type": "commit"}, {"oid": "029a4251e8b997fe445702931355adef1ddbe753", "url": "https://github.com/box/box-java-sdk/commit/029a4251e8b997fe445702931355adef1ddbe753", "message": "Final clean up", "committedDate": "2020-04-28T19:42:01Z", "type": "commit"}, {"oid": "1ae12c73b6118783ebafbc50476a54292b80c7a6", "url": "https://github.com/box/box-java-sdk/commit/1ae12c73b6118783ebafbc50476a54292b80c7a6", "message": "CHANGELOG + Cleanup", "committedDate": "2020-04-28T20:36:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzNjk4OQ==", "url": "https://github.com/box/box-java-sdk/pull/766#discussion_r418136989", "bodyText": "Could use return JsonObject.readFrom(this.trackingCodes.toString()).\nhttps://www.javadoc.io/doc/com.eclipsesource.minimal-json/minimal-json/0.9.4/com/eclipsesource/json/JsonObject.html\nCould simplify code a bit, but don't think it's necessary. Either way works for me.", "author": "sujaygarlanka", "createdAt": "2020-04-30T16:28:48Z", "path": "src/main/java/com/box/sdk/BoxUser.java", "diffHunk": "@@ -1059,12 +1059,39 @@ public String getHostname() {\n \n         /**\n          * Gets the tracking defined for each entity.\n-         * @return a Map with traking codes.\n+         * @return a Map with tracking codes.\n          */\n         public Map<String, String> getTrackingCodes() {\n             return this.trackingCodes;\n         }\n \n+        /**\n+         * Allows admin to set attributes specific for a group of users.\n+         * @param trackingCodes a Map representing the user's new tracking codes\n+         */\n+        public void setTrackingCodes(Map<String, String> trackingCodes) {\n+            this.trackingCodes = trackingCodes;\n+            this.addPendingChange(\"tracking_codes\", this.trackingCodesJson());\n+        }\n+\n+        /**\n+         * Allows the admin to append new tracking codes to the previous existing list.\n+         * @param name the name or `key` of the attribute to set.\n+         * @param value the value of the attribute to set.\n+         */\n+        public void appendTrackingCodes(String name, String value) {\n+            this.getTrackingCodes().put(name, value);\n+            this.addPendingChange(\"tracking_codes\", this.trackingCodesJson());\n+        }\n+\n+        private JsonObject trackingCodesJson() {", "originalCommit": "1ae12c73b6118783ebafbc50476a54292b80c7a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyNTk4NA==", "url": "https://github.com/box/box-java-sdk/pull/766#discussion_r427625984", "bodyText": "I can't actually do this because the Map isn't \"valid JSON\" at this point.  (It becomes valid later, when it's saved to the BoxUser.)", "author": "PJSimon", "createdAt": "2020-05-19T22:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzNjk4OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzNzY2Nw==", "url": "https://github.com/box/box-java-sdk/pull/766#discussion_r418137667", "bodyText": "Same option as above.", "author": "sujaygarlanka", "createdAt": "2020-04-30T16:29:52Z", "path": "src/test/java/com/box/sdk/BoxUserTest.java", "diffHunk": "@@ -477,4 +480,94 @@ public void testDeserializationException() throws IOException {\n         BoxUser.Info userInfo = new BoxUser(this.api, userID).getInfo();\n         Assert.assertEquals(\"12345\", userInfo.getID());\n     }\n+\n+    @Test\n+    @Category(UnitTest.class)\n+    public void testCreateReadAddTrackingCodesSucceeds() throws IOException {\n+        final String userID = \"12345\";\n+        final String departmentID = \"8675\";\n+        final String companyID = \"1701\";\n+        final String usersURL = \"/users/\" + userID;\n+\n+        // Mock: Create two tracking codes\n+        Map<String, String> createTrackingCodes = new HashMap<String, String>();\n+        createTrackingCodes.put(\"Employee ID\", userID);\n+        createTrackingCodes.put(\"Department ID\", departmentID);\n+        String createBody = this.trackingCodesJson(createTrackingCodes).toString();\n+        String createResponse = TestConfig.getFixture(\"BoxUser/CreateTrackingCodes200\");\n+        WIRE_MOCK_CLASS_RULE.stubFor(WireMock.put(WireMock.urlPathEqualTo(usersURL))\n+            .withRequestBody(WireMock.equalToJson(createBody))\n+            .willReturn(WireMock.aResponse()\n+                .withHeader(\"Content-Type\", \"application/json\")\n+                .withBody(createResponse)));\n+\n+        // Mock: Verify change\n+        String twoTrackingCodesResponse = TestConfig.getFixture(\"BoxUser/GetUserTwoTrackingCodes200\");\n+        WIRE_MOCK_CLASS_RULE.stubFor(WireMock.get(WireMock.urlPathEqualTo(usersURL))\n+            .withQueryParam(\"fields\", WireMock.equalTo(\"tracking_codes\"))\n+            .inScenario(\"Get Tracking Code Scenario\")\n+            .whenScenarioStateIs(Scenario.STARTED)\n+            .willReturn(WireMock.aResponse()\n+                .withHeader(\"Content-Type\", \"application/json\")\n+                .withBody(twoTrackingCodesResponse))\n+            .willSetStateTo(\"1st Request\"));\n+\n+        // Mock: Add one more tracking code\n+        Map<String, String> appendTrackingCodes = new HashMap<String, String>();\n+        appendTrackingCodes.put(\"Employee ID\", userID);\n+        appendTrackingCodes.put(\"Department ID\", departmentID);\n+        appendTrackingCodes.put(\"Company ID\", companyID);\n+        String updateBody = this.trackingCodesJson(appendTrackingCodes).toString();\n+        String updateResponse = TestConfig.getFixture(\"BoxUser/UpdateTrackingCodes200\");\n+        WIRE_MOCK_CLASS_RULE.stubFor(WireMock.put(WireMock.urlPathEqualTo(usersURL))\n+            .withRequestBody(WireMock.equalToJson(updateBody))\n+            .willReturn(WireMock.aResponse()\n+                .withHeader(\"Content-Type\", \"application/json\")\n+                .withBody(updateResponse)));\n+\n+        // Mock: Verify change\n+        String threeTrackingCodesResponse = TestConfig.getFixture(\"BoxUser/GetUserThreeTrackingCodes200\");\n+        WIRE_MOCK_CLASS_RULE.stubFor(WireMock.get(WireMock.urlPathEqualTo(usersURL))\n+            .withQueryParam(\"fields\", WireMock.equalTo(\"tracking_codes\"))\n+            .inScenario(\"Get Tracking Code Scenario\")\n+            .whenScenarioStateIs(\"1st Request\")\n+            .willReturn(WireMock.aResponse()\n+                .withHeader(\"Content-Type\", \"application/json\")\n+                .withBody(threeTrackingCodesResponse))\n+            .willSetStateTo(\"2nd Request\"));\n+\n+        // Create two tracking codes\n+        BoxUser user = new BoxUser(this.api, userID);\n+        BoxUser.Info info = user.new Info();\n+        info.setTrackingCodes(createTrackingCodes);\n+        user.updateInfo(info);\n+\n+        // Verify change\n+        user = new BoxUser(this.api, userID);\n+        info = user.getInfo(\"tracking_codes\");\n+        Map<String, String> receivedTrackingCodes = info.getTrackingCodes();\n+        Assert.assertEquals(createTrackingCodes, receivedTrackingCodes);\n+\n+        // Add one more tracking code\n+        info.appendTrackingCodes(\"Company ID\", companyID);\n+        user.updateInfo(info);\n+\n+        // Verify change\n+        user = new BoxUser(this.api, userID);\n+        info = user.getInfo(\"tracking_codes\");\n+        receivedTrackingCodes = info.getTrackingCodes();\n+        Assert.assertEquals(appendTrackingCodes, receivedTrackingCodes);\n+    }\n+\n+    private JsonObject trackingCodesJson(Map<String, String> trackingCodes) {", "originalCommit": "1ae12c73b6118783ebafbc50476a54292b80c7a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyNjAzMA==", "url": "https://github.com/box/box-java-sdk/pull/766#discussion_r427626030", "bodyText": "I can't actually do this because the Map isn't \"valid JSON\" at this point.  (It becomes valid later, when it's saved to the BoxUser.)", "author": "PJSimon", "createdAt": "2020-05-19T22:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzNzY2Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "285a7bcf5f8cfe30c300455be5084357b06f11f0", "url": "https://github.com/box/box-java-sdk/commit/285a7bcf5f8cfe30c300455be5084357b06f11f0", "message": "Merge branch 'master' into tracking_codes", "committedDate": "2020-05-19T22:03:13Z", "type": "commit"}]}