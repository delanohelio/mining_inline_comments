{"pr_number": 826, "pr_title": "Add `fields` parameter for metadata query", "pr_createdAt": "2020-07-14T16:38:16Z", "pr_url": "https://github.com/box/box-java-sdk/pull/826", "timeline": [{"oid": "26e2c7996a9b15317a07cea25b9aeef3f8a93393", "url": "https://github.com/box/box-java-sdk/commit/26e2c7996a9b15317a07cea25b9aeef3f8a93393", "message": "add support for fields for metadata query and tests", "committedDate": "2020-07-14T16:34:47Z", "type": "commit"}, {"oid": "6a1759024fcdf565d3da5173208f3fc53ed4a067", "url": "https://github.com/box/box-java-sdk/commit/6a1759024fcdf565d3da5173208f3fc53ed4a067", "message": "Update CHANGELOG.md", "committedDate": "2020-07-14T16:39:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMjQ4Mw==", "url": "https://github.com/box/box-java-sdk/pull/826#discussion_r454512483", "bodyText": "What was the complaint?", "author": "PJSimon", "createdAt": "2020-07-14T17:12:31Z", "path": "src/main/java/com/box/sdk/MetadataTemplate.java", "diffHunk": "@@ -412,6 +464,84 @@ protected BoxMetadataQueryItem factory(JsonObject jsonObject) {\n         };\n     }\n \n+    /**\n+     * Executes a metadata query.\n+     *\n+     * @param api The API connection to be used\n+     * @param from The template used in the query. Must be in the form scope.templateKey\n+     * @param query The logical expression of the query\n+     * @param queryParameters Required if query present. The arguments for the query\n+     * @param ancestorFolderId The folder_id to which to restrain the query\n+     * @param indexName The name of the Index to use\n+     * @param orderBy The field_key(s) to order on and the corresponding direction(s)\n+     * @param limit Max results to return for a single request (0-100 inclusive)\n+     * @param marker The marker to use for requesting the next page\n+     * @param fields The fields to retrieve.\n+     * @return An iterable of BoxItem.Info search results\n+     */\n+    //CHECKSTYLE:OFF", "originalCommit": "6a1759024fcdf565d3da5173208f3fc53ed4a067", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0MzY1NA==", "url": "https://github.com/box/box-java-sdk/pull/826#discussion_r454543654", "bodyText": "Too many parameters for the method", "author": "sujaygarlanka", "createdAt": "2020-07-14T18:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMjQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3c310c7fec4a9f2d2a3e1eae5579ba57065ce81e", "chunk": "diff --git a/src/main/java/com/box/sdk/MetadataTemplate.java b/src/main/java/com/box/sdk/MetadataTemplate.java\nindex 467f248d..65b3ce28 100644\n--- a/src/main/java/com/box/sdk/MetadataTemplate.java\n+++ b/src/main/java/com/box/sdk/MetadataTemplate.java\n\n@@ -486,33 +467,8 @@ public class MetadataTemplate extends BoxJSONObject {\n                                                             JsonArray orderBy, int limit, String marker,\n                                                             String ... fields) {\n     //CHECKSTYLE:ON\n-        JsonObject jsonObject = new JsonObject().add(\"from\", from);\n-        if (query != null) {\n-            jsonObject.add(\"query\", query);\n-        }\n-        if (queryParameters != null) {\n-            jsonObject.add(\"query_params\", queryParameters);\n-        }\n-        if (ancestorFolderId != null) {\n-            jsonObject.add(\"ancestor_folder_id\", ancestorFolderId);\n-        }\n-        if (indexName != null) {\n-            jsonObject.add(\"use_index\", indexName);\n-        }\n-        if (orderBy != null) {\n-            jsonObject.add(\"order_by\", orderBy);\n-        }\n-        if (fields.length > 0) {\n-            JsonArray fieldsBody = new JsonArray();\n-            for (String field : fields) {\n-                fieldsBody.add(field);\n-            }\n-            jsonObject.add(\"fields\", fieldsBody);\n-        }\n-        jsonObject.add(\"limit\", limit);\n-        if (marker != null) {\n-            jsonObject.add(\"marker\", marker);\n-        }\n+        JsonObject jsonObject = createMetadataQueryBody(from, query, queryParameters, ancestorFolderId,\n+                                                        indexName, orderBy, limit, marker, fields);\n \n         URL url = METADATA_QUERIES_URL_TEMPLATE.build(api.getBaseURL());\n         return new BoxResourceIterable<BoxItem.Info>(api, url, limit, jsonObject, marker) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxODQ3MQ==", "url": "https://github.com/box/box-java-sdk/pull/826#discussion_r454518471", "bodyText": "Could you extract these lines into a new method getMetadataQueryRequestBody or similar?  Then you can remove the similar lines of code in public static BoxResourceIterable<BoxMetadataQueryItem> executeMetadataQuery.", "author": "PJSimon", "createdAt": "2020-07-14T17:22:21Z", "path": "src/main/java/com/box/sdk/MetadataTemplate.java", "diffHunk": "@@ -412,6 +464,84 @@ protected BoxMetadataQueryItem factory(JsonObject jsonObject) {\n         };\n     }\n \n+    /**\n+     * Executes a metadata query.\n+     *\n+     * @param api The API connection to be used\n+     * @param from The template used in the query. Must be in the form scope.templateKey\n+     * @param query The logical expression of the query\n+     * @param queryParameters Required if query present. The arguments for the query\n+     * @param ancestorFolderId The folder_id to which to restrain the query\n+     * @param indexName The name of the Index to use\n+     * @param orderBy The field_key(s) to order on and the corresponding direction(s)\n+     * @param limit Max results to return for a single request (0-100 inclusive)\n+     * @param marker The marker to use for requesting the next page\n+     * @param fields The fields to retrieve.\n+     * @return An iterable of BoxItem.Info search results\n+     */\n+    //CHECKSTYLE:OFF\n+    public static BoxResourceIterable<BoxItem.Info> executeMetadataQuery(final BoxAPIConnection api,\n+                                                            String from, String query, JsonObject queryParameters,\n+                                                            String ancestorFolderId, String indexName,\n+                                                            JsonArray orderBy, int limit, String marker,\n+                                                            String ... fields) {\n+    //CHECKSTYLE:ON\n+        JsonObject jsonObject = new JsonObject().add(\"from\", from);\n+        if (query != null) {\n+            jsonObject.add(\"query\", query);\n+        }\n+        if (queryParameters != null) {\n+            jsonObject.add(\"query_params\", queryParameters);\n+        }\n+        if (ancestorFolderId != null) {\n+            jsonObject.add(\"ancestor_folder_id\", ancestorFolderId);\n+        }\n+        if (indexName != null) {\n+            jsonObject.add(\"use_index\", indexName);\n+        }\n+        if (orderBy != null) {\n+            jsonObject.add(\"order_by\", orderBy);\n+        }\n+        if (fields.length > 0) {\n+            JsonArray fieldsBody = new JsonArray();\n+            for (String field : fields) {\n+                fieldsBody.add(field);\n+            }\n+            jsonObject.add(\"fields\", fieldsBody);\n+        }\n+        jsonObject.add(\"limit\", limit);\n+        if (marker != null) {\n+            jsonObject.add(\"marker\", marker);\n+        }", "originalCommit": "6a1759024fcdf565d3da5173208f3fc53ed4a067", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c310c7fec4a9f2d2a3e1eae5579ba57065ce81e", "chunk": "diff --git a/src/main/java/com/box/sdk/MetadataTemplate.java b/src/main/java/com/box/sdk/MetadataTemplate.java\nindex 467f248d..65b3ce28 100644\n--- a/src/main/java/com/box/sdk/MetadataTemplate.java\n+++ b/src/main/java/com/box/sdk/MetadataTemplate.java\n\n@@ -486,33 +467,8 @@ public class MetadataTemplate extends BoxJSONObject {\n                                                             JsonArray orderBy, int limit, String marker,\n                                                             String ... fields) {\n     //CHECKSTYLE:ON\n-        JsonObject jsonObject = new JsonObject().add(\"from\", from);\n-        if (query != null) {\n-            jsonObject.add(\"query\", query);\n-        }\n-        if (queryParameters != null) {\n-            jsonObject.add(\"query_params\", queryParameters);\n-        }\n-        if (ancestorFolderId != null) {\n-            jsonObject.add(\"ancestor_folder_id\", ancestorFolderId);\n-        }\n-        if (indexName != null) {\n-            jsonObject.add(\"use_index\", indexName);\n-        }\n-        if (orderBy != null) {\n-            jsonObject.add(\"order_by\", orderBy);\n-        }\n-        if (fields.length > 0) {\n-            JsonArray fieldsBody = new JsonArray();\n-            for (String field : fields) {\n-                fieldsBody.add(field);\n-            }\n-            jsonObject.add(\"fields\", fieldsBody);\n-        }\n-        jsonObject.add(\"limit\", limit);\n-        if (marker != null) {\n-            jsonObject.add(\"marker\", marker);\n-        }\n+        JsonObject jsonObject = createMetadataQueryBody(from, query, queryParameters, ancestorFolderId,\n+                                                        indexName, orderBy, limit, marker, fields);\n \n         URL url = METADATA_QUERIES_URL_TEMPLATE.build(api.getBaseURL());\n         return new BoxResourceIterable<BoxItem.Info>(api, url, limit, jsonObject, marker) {\n"}}, {"oid": "3c310c7fec4a9f2d2a3e1eae5579ba57065ce81e", "url": "https://github.com/box/box-java-sdk/commit/3c310c7fec4a9f2d2a3e1eae5579ba57065ce81e", "message": "code refactor", "committedDate": "2020-07-14T18:27:00Z", "type": "commit"}]}