{"pr_number": 417, "pr_title": "Download and render offline areas", "pr_createdAt": "2020-03-26T16:38:32Z", "pr_url": "https://github.com/google/ground-android/pull/417", "timeline": [{"oid": "3d5f2d8f5aba1b953b65c9f4b7e44e548e6a26e9", "url": "https://github.com/google/ground-android/commit/3d5f2d8f5aba1b953b65c9f4b7e44e548e6a26e9", "message": "Add OfflineAreaRepository; Download OfflineAreas + add to the DB\n\n- Add a GEO_JSON_SOURCE constant to Config.java\n- Add a method to insert or update offline areas in the local data store\n- Add an offlineAreaRepository for working with offline areas", "committedDate": "2020-03-26T16:13:01Z", "type": "commit"}, {"oid": "f6487bcb1882cce18b04635c0dad6c483736a191", "url": "https://github.com/google/ground-android/commit/f6487bcb1882cce18b04635c0dad6c483736a191", "message": "Trigger offline area downloads from the OfflineAreaSelector\n\nUpon clicking \"download\" we queue up an area download using the\nOfflineAreaRepository.", "committedDate": "2020-03-26T16:15:23Z", "type": "commit"}, {"oid": "87087d562eb8d7486701f78a38a900388651a62a", "url": "https://github.com/google/ground-android/commit/87087d562eb8d7486701f78a38a900388651a62a", "message": "Render tile overlays on the map\n\n- Update MapboxOfflineTileProvider to look open tile database files on\n  demand (this is necessary because we store tiles in separate mbtiles\n  files).\n- Render a tileOverlay on map ready.\n- Use timber in MapContainerFragment", "committedDate": "2020-03-26T16:28:00Z", "type": "commit"}, {"oid": "99cfa43fbda82abfa7c6ca7c216440c5a1a817f1", "url": "https://github.com/google/ground-android/commit/99cfa43fbda82abfa7c6ca7c216440c5a1a817f1", "message": "Merge branch 'master' of https://github.com/google/ground-android into offline-areas", "committedDate": "2020-03-26T16:28:09Z", "type": "commit"}, {"oid": "9e499cb4a8ddce61e7f68925b13fb01e20c65651", "url": "https://github.com/google/ground-android/commit/9e499cb4a8ddce61e7f68925b13fb01e20c65651", "message": "Fix imports", "committedDate": "2020-03-26T16:35:15Z", "type": "commit"}, {"oid": "e05dee813378997c5015ae7e4edc64b3f9761529", "url": "https://github.com/google/ground-android/commit/e05dee813378997c5015ae7e4edc64b3f9761529", "message": "Fix offline area selector layout", "committedDate": "2020-03-26T16:35:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3ODk1OA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399078958", "bodyText": "TAG is unused. Please remove", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T07:31:44Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0MDcyNQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400940725", "bodyText": "Done thanks!", "author": "scolsen", "createdAt": "2020-03-31T14:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3ODk1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MTU2OA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400951568", "bodyText": "be912f6", "author": "scolsen", "createdAt": "2020-03-31T14:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3ODk1OA=="}], "type": "inlineReview", "revised_code": {"commit": "be912f676e7c2810f9cc1fda55b7875bcd292a5d", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\nindex e8e84609..7cce30e8 100644\n--- a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n+++ b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n\n@@ -28,10 +28,12 @@ import com.google.android.gnd.model.basemap.tile.Tile;\n import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n import com.google.android.gnd.persistence.local.LocalDataStore;\n import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n import com.google.android.gnd.workers.TileDownloadWorkManager;\n import com.google.common.collect.ImmutableList;\n import io.reactivex.Completable;\n import java.io.File;\n+import java.io.FileNotFoundException;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3OTc5MQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399079791", "bodyText": "Please use FileUtil instead so later it's easier to change source dir, if needed.\nFile jsonSource = fileUtil.getFile(Config.GEO_JSON_SOURCE);", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T07:34:06Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      Context context,\n+      OfflineUuidGenerator uuidGenerator) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.context = context;\n+    this.uuidGenerator = uuidGenerator;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+\n+    File jsonSource = new File(context.getFilesDir(), Config.GEO_JSON_SOURCE);", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0NTU0Mw==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400945543", "bodyText": "Done!", "author": "scolsen", "createdAt": "2020-03-31T14:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3OTc5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MTQ5MQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400951491", "bodyText": "be912f6", "author": "scolsen", "createdAt": "2020-03-31T14:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3OTc5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "be912f676e7c2810f9cc1fda55b7875bcd292a5d", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\nindex e8e84609..7cce30e8 100644\n--- a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n+++ b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n\n@@ -28,10 +28,12 @@ import com.google.android.gnd.model.basemap.tile.Tile;\n import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n import com.google.android.gnd.persistence.local.LocalDataStore;\n import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n import com.google.android.gnd.workers.TileDownloadWorkManager;\n import com.google.common.collect.ImmutableList;\n import io.reactivex.Completable;\n import java.io.File;\n+import java.io.FileNotFoundException;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4MTYzOQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399081639", "bodyText": "Can source be omitted from the comments? I'm guessing that the settings are generic and don't have anything specific to do with the source or destination. Also, then GEO_JSON_CONFIG_FILENAME.\nThoughts?", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T07:39:19Z", "path": "gnd/src/main/java/com/google/android/gnd/Config.java", "diffHunk": "@@ -30,4 +30,7 @@\n \n   // Photos\n   public static final String PHOTO_EXT = \".jpg\";\n+\n+  // Local geojson source settings.\n+  public static final String GEO_JSON_SOURCE = \"gnd-geojson.json\";", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MzA4NQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400953085", "bodyText": "I went with source because it's possible that we'll use a URL in the future instead of a file on the device...maybe just GEO_JSON would suffice with a more detailed comment?", "author": "scolsen", "createdAt": "2020-03-31T14:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4MTYzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk4MzgxOQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400983819", "bodyText": "e4a770b -- went with GEO_JSON and added additional commentary.", "author": "scolsen", "createdAt": "2020-03-31T14:59:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4MTYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e4a770bc09c54339409264c360d9d9363db0cc3e", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/Config.java b/gnd/src/main/java/com/google/android/gnd/Config.java\nindex d70feb4e..bbebef24 100644\n--- a/gnd/src/main/java/com/google/android/gnd/Config.java\n+++ b/gnd/src/main/java/com/google/android/gnd/Config.java\n\n@@ -31,6 +31,7 @@ public final class Config {\n   // Photos\n   public static final String PHOTO_EXT = \".jpg\";\n \n-  // Local geojson source settings.\n-  public static final String GEO_JSON_SOURCE = \"gnd-geojson.json\";\n+  // Designates the location of a geo json file that specifies downloadable tiles for offline\n+  // viewing. May point to a file on the device or a valid URL.\n+  public static final String GEO_JSON = \"gnd-geojson.json\";\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NjY4Mg==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399086682", "bodyText": "For consistency, please rename viewport to bounds", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T07:52:21Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      Context context,\n+      OfflineUuidGenerator uuidGenerator) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.context = context;\n+    this.uuidGenerator = uuidGenerator;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+\n+    File jsonSource = new File(context.getFilesDir(), Config.GEO_JSON_SOURCE);\n+\n+    ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+    return localDataStore\n+        .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+        .andThen(\n+            Completable.merge(\n+                stream(tiles.asList())\n+                    .map(localDataStore::insertOrUpdateTile)\n+                    .collect(toImmutableList())))\n+        .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))\n+        .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n+  }\n+\n+  public Completable addAreaAndEnqueue(LatLngBounds viewport) {", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MTIyNw==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400951227", "bodyText": "be912f6", "author": "scolsen", "createdAt": "2020-03-31T14:19:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NjY4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "be912f676e7c2810f9cc1fda55b7875bcd292a5d", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\nindex e8e84609..7cce30e8 100644\n--- a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n+++ b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n\n@@ -28,10 +28,12 @@ import com.google.android.gnd.model.basemap.tile.Tile;\n import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n import com.google.android.gnd.persistence.local.LocalDataStore;\n import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n import com.google.android.gnd.workers.TileDownloadWorkManager;\n import com.google.common.collect.ImmutableList;\n import io.reactivex.Completable;\n import java.io.File;\n+import java.io.FileNotFoundException;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NzcwOA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399087708", "bodyText": "Timber.v(\"Update camera: %s\", update);", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T07:54:47Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java", "diffHunk": "@@ -213,7 +214,7 @@ private void showUserActionFailureMessage(int resId) {\n   }\n \n   private void onCameraUpdate(MapContainerViewModel.CameraUpdate update, MapAdapter map) {\n-    Log.v(TAG, \"Update camera: \" + update);\n+    Timber.tag(TAG).v(\"Update camera: %s\", update);", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1OTE3NA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400959174", "bodyText": "9ff3737", "author": "scolsen", "createdAt": "2020-03-31T14:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NzcwOA=="}], "type": "inlineReview", "revised_code": {"commit": "9ff373720012476db7ef6109228b885e7643a003", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java b/gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java\nindex d0b7ec15..8f890825 100644\n--- a/gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java\n+++ b/gnd/src/main/java/com/google/android/gnd/ui/home/mapcontainer/MapContainerFragment.java\n\n@@ -214,7 +213,7 @@ public class MapContainerFragment extends AbstractFragment {\n   }\n \n   private void onCameraUpdate(MapContainerViewModel.CameraUpdate update, MapAdapter map) {\n-    Timber.tag(TAG).v(\"Update camera: %s\", update);\n+    Timber.v(\"Update camera: %s\", update);\n     if (update.getMinZoomLevel().isPresent()) {\n       map.moveCamera(\n           update.getCenter(), Math.max(update.getMinZoomLevel().get(), map.getCurrentZoomLevel()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4ODQ2Mw==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399088463", "bodyText": "Can we use try-with-resources for autoclosing the handler?", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T07:56:35Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapAdapter.java", "diffHunk": "@@ -234,4 +236,11 @@ private void onCameraMove() {\n   public LatLngBounds getViewport() {\n     return map.getProjection().getVisibleRegion().latLngBounds;\n   }\n+\n+  @Override\n+  public void renderTileOverlay() {\n+    MapBoxOfflineTileProvider tileProvider = new MapBoxOfflineTileProvider(context.getFilesDir());\n+    map.addTileOverlay(new TileOverlayOptions().tileProvider(tileProvider));\n+    tileProvider.close();", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MjAyOA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400972028", "bodyText": "Indeed we can! It implements Closable.", "author": "scolsen", "createdAt": "2020-03-31T14:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4ODQ2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MzkxMw==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400973913", "bodyText": "6eed868", "author": "scolsen", "createdAt": "2020-03-31T14:47:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4ODQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6eed868640ac898bdd31851f7b137d7524574653", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapAdapter.java b/gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapAdapter.java\nindex 6e220121..eed76c46 100644\n--- a/gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapAdapter.java\n+++ b/gnd/src/main/java/com/google/android/gnd/ui/map/gms/GoogleMapsMapAdapter.java\n\n@@ -239,8 +239,9 @@ class GoogleMapsMapAdapter implements MapAdapter {\n \n   @Override\n   public void renderTileOverlay() {\n-    MapBoxOfflineTileProvider tileProvider = new MapBoxOfflineTileProvider(context.getFilesDir());\n-    map.addTileOverlay(new TileOverlayOptions().tileProvider(tileProvider));\n-    tileProvider.close();\n+    try (MapBoxOfflineTileProvider tileProvider =\n+        new MapBoxOfflineTileProvider(context.getFilesDir())) {\n+      map.addTileOverlay(new TileOverlayOptions().tileProvider(tileProvider));\n+    }\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MDQ2MA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399090460", "bodyText": "We should limit the usage of single-variable names to standard usages. (e.g. i, j, k for counters, e for exceptions, etc.).\nPlease rename this to file", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T08:01:15Z", "path": "third_party/android-gmaps-addons/src/com/cocoahero/android/gmaps/addons/mapbox/MapBoxOfflineTileProvider.java", "diffHunk": "@@ -47,6 +47,18 @@ public MapBoxOfflineTileProvider(String pathToFile) {\n     @Override\n     public Tile getTile(int x, int y, int z) {\n         Tile tile = NO_TILE;\n+        String pathToFile = this.basepath + \"/\" + z + \"-\" + x + \"-\" + y + \".mbtiles\";\n+        File f = new File(pathToFile);", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NTkyNQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400975925", "bodyText": "done! b461845", "author": "scolsen", "createdAt": "2020-03-31T14:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MDQ2MA=="}], "type": "inlineReview", "revised_code": {"commit": "b46184550031fde47f2f885cc847ccd5ba9a15ed", "chunk": "diff --git a/third_party/android-gmaps-addons/src/com/cocoahero/android/gmaps/addons/mapbox/MapBoxOfflineTileProvider.java b/third_party/android-gmaps-addons/src/com/cocoahero/android/gmaps/addons/mapbox/MapBoxOfflineTileProvider.java\nindex 4702ad87..84892c0c 100644\n--- a/third_party/android-gmaps-addons/src/com/cocoahero/android/gmaps/addons/mapbox/MapBoxOfflineTileProvider.java\n+++ b/third_party/android-gmaps-addons/src/com/cocoahero/android/gmaps/addons/mapbox/MapBoxOfflineTileProvider.java\n\n@@ -48,9 +48,9 @@ public class MapBoxOfflineTileProvider implements TileProvider, Closeable {\n     public Tile getTile(int x, int y, int z) {\n         Tile tile = NO_TILE;\n         String pathToFile = this.basepath + \"/\" + z + \"-\" + x + \"-\" + y + \".mbtiles\";\n-        File f = new File(pathToFile);\n+        File file = new File(pathToFile);\n \n-        if (!f.exists()) {\n+        if (!file.exists()) {\n           return tile;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MTI3NQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r399091275", "bodyText": "Please use Timber.e for errors", "author": "shobhitagarwal1612", "createdAt": "2020-03-27T08:03:23Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import android.content.Context;\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final Context context;\n+\n+  private static final String TAG = OfflineAreaRepository.class.getSimpleName();\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      Context context,\n+      OfflineUuidGenerator uuidGenerator) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.context = context;\n+    this.uuidGenerator = uuidGenerator;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+\n+    File jsonSource = new File(context.getFilesDir(), Config.GEO_JSON_SOURCE);\n+\n+    ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+    return localDataStore\n+        .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+        .andThen(\n+            Completable.merge(\n+                stream(tiles.asList())\n+                    .map(localDataStore::insertOrUpdateTile)\n+                    .collect(toImmutableList())))\n+        .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))\n+        .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n+  }\n+\n+  public Completable addAreaAndEnqueue(LatLngBounds viewport) {\n+    OfflineArea offlineArea =\n+        OfflineArea.newBuilder()\n+            .setBounds(viewport)\n+            .setId(uuidGenerator.generateUuid())\n+            .setState(State.PENDING)\n+            .build();\n+\n+    return localDataStore\n+        .insertOrUpdateOfflineArea(offlineArea)\n+        .doOnError(__ -> Timber.d(\"failed to add/update offline area in the database\"))", "originalCommit": "e05dee813378997c5015ae7e4edc64b3f9761529", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MTA0NA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r400951044", "bodyText": "be912f6", "author": "scolsen", "createdAt": "2020-03-31T14:18:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MTI3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "be912f676e7c2810f9cc1fda55b7875bcd292a5d", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\nindex e8e84609..7cce30e8 100644\n--- a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n+++ b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n\n@@ -28,10 +28,12 @@ import com.google.android.gnd.model.basemap.tile.Tile;\n import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n import com.google.android.gnd.persistence.local.LocalDataStore;\n import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n import com.google.android.gnd.workers.TileDownloadWorkManager;\n import com.google.common.collect.ImmutableList;\n import io.reactivex.Completable;\n import java.io.File;\n+import java.io.FileNotFoundException;\n import javax.inject.Inject;\n import timber.log.Timber;\n \n"}}, {"oid": "24c9a1e074d7894fceb6fc1e7deeca32e6a7ae0d", "url": "https://github.com/google/ground-android/commit/24c9a1e074d7894fceb6fc1e7deeca32e6a7ae0d", "message": "Merge branch 'master' into offline-areas", "committedDate": "2020-03-28T21:43:47Z", "type": "commit"}, {"oid": "be912f676e7c2810f9cc1fda55b7875bcd292a5d", "url": "https://github.com/google/ground-android/commit/be912f676e7c2810f9cc1fda55b7875bcd292a5d", "message": "Improve OfflineAreaRepository Code Health\n\n- Use FileUtil to get the JSON Source file from the device.\n- Use timeber.e to log errors.\n- Return Completable.error on FileNotFoundExceptions.", "committedDate": "2020-03-31T14:17:55Z", "type": "commit"}, {"oid": "4ea789dbf8976a53a9d314e5463060c48088e453", "url": "https://github.com/google/ground-android/commit/4ea789dbf8976a53a9d314e5463060c48088e453", "message": "Merge branch 'offline-areas' of https://github.com/google/ground-android into offline-areas", "committedDate": "2020-03-31T14:18:29Z", "type": "commit"}, {"oid": "9ff373720012476db7ef6109228b885e7643a003", "url": "https://github.com/google/ground-android/commit/9ff373720012476db7ef6109228b885e7643a003", "message": "Remove TAG from MapContainerFragment", "committedDate": "2020-03-31T14:28:00Z", "type": "commit"}, {"oid": "6eed868640ac898bdd31851f7b137d7524574653", "url": "https://github.com/google/ground-android/commit/6eed868640ac898bdd31851f7b137d7524574653", "message": "Use try-with-resource to auto-close MapBox tile providers", "committedDate": "2020-03-31T14:46:28Z", "type": "commit"}, {"oid": "b46184550031fde47f2f885cc847ccd5ba9a15ed", "url": "https://github.com/google/ground-android/commit/b46184550031fde47f2f885cc847ccd5ba9a15ed", "message": "Rename f to file", "committedDate": "2020-03-31T14:49:46Z", "type": "commit"}, {"oid": "c32c79be5a5fb100b2728b37bd080f624763d2e4", "url": "https://github.com/google/ground-android/commit/c32c79be5a5fb100b2728b37bd080f624763d2e4", "message": "Remove unused import in OfflineAreaRepository", "committedDate": "2020-03-31T14:54:45Z", "type": "commit"}, {"oid": "e4a770bc09c54339409264c360d9d9363db0cc3e", "url": "https://github.com/google/ground-android/commit/e4a770bc09c54339409264c360d9d9363db0cc3e", "message": "Rename GEO_JSON_SOURCE -> GEO_JSON; clarify comment", "committedDate": "2020-03-31T14:59:22Z", "type": "commit"}, {"oid": "4436f033b09c3c1e210557d905109a77b00255b6", "url": "https://github.com/google/ground-android/commit/4436f033b09c3c1e210557d905109a77b00255b6", "message": "Merge branch 'master' of https://github.com/google/ground-android into offline-areas", "committedDate": "2020-03-31T16:44:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MDkwNQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r401080905", "bodyText": "Can we use Timber.e here?", "author": "shobhitagarwal1612", "createdAt": "2020-03-31T17:16:30Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final FileUtil fileUtil;\n+\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      OfflineUuidGenerator uuidGenerator,\n+      FileUtil fileUtil) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.uuidGenerator = uuidGenerator;\n+    this.fileUtil = fileUtil;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+    try {\n+      File jsonSource = fileUtil.getFile(Config.GEO_JSON);\n+\n+      ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+      return localDataStore\n+          .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+          .andThen(\n+              Completable.merge(\n+                  stream(tiles.asList())\n+                      .map(localDataStore::insertOrUpdateTile)\n+                      .collect(toImmutableList())))\n+          .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))", "originalCommit": "4436f033b09c3c1e210557d905109a77b00255b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMjM3OQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r401122379", "bodyText": "Nice catch, thanks! 95827ce", "author": "scolsen", "createdAt": "2020-03-31T18:24:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MDkwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "95827ceba145a7b59a55d5044c908ff914867b6b", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\nindex f2f6332b..dc489916 100644\n--- a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n+++ b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n\n@@ -61,7 +61,6 @@ public class OfflineAreaRepository {\n   private Completable enqueueTileDownloads(OfflineArea area) {\n     try {\n       File jsonSource = fileUtil.getFile(Config.GEO_JSON);\n-\n       ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n \n       return localDataStore\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MjY0OA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r401082648", "bodyText": "I'm guessing that FileNotFoundException can only be raised while attempting to load the json file, right? If yes, then we should only wrap the first line of the method with try-catch. Sorry, I somehow missed this earlier.", "author": "shobhitagarwal1612", "createdAt": "2020-03-31T17:19:12Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final FileUtil fileUtil;\n+\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      OfflineUuidGenerator uuidGenerator,\n+      FileUtil fileUtil) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.uuidGenerator = uuidGenerator;\n+    this.fileUtil = fileUtil;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+    try {\n+      File jsonSource = fileUtil.getFile(Config.GEO_JSON);\n+\n+      ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n+\n+      return localDataStore\n+          .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n+          .andThen(\n+              Completable.merge(\n+                  stream(tiles.asList())\n+                      .map(localDataStore::insertOrUpdateTile)\n+                      .collect(toImmutableList())))\n+          .doOnError(__ -> Timber.d(\"failed to add/update a tile in the database\"))\n+          .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n+    } catch (FileNotFoundException e) {\n+      return Completable.error(e);\n+    }", "originalCommit": "4436f033b09c3c1e210557d905109a77b00255b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMzQ0OQ==", "url": "https://github.com/google/ground-android/pull/417#discussion_r401123449", "bodyText": "That would make sense, but as far as I can tell, Java scopes declarations to try blocks, so any code that needs to use the declared variable has to also be wrapped in the block\u2014to restrict the block to the assignment only we'd have to separate the declaration from the assignment which would result in some extra checks, I think, in this case....I'm not super familiar w/ Java though, is there a common idiom we can use to get around this?", "author": "scolsen", "createdAt": "2020-03-31T18:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MjY0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0NzM3Mg==", "url": "https://github.com/google/ground-android/pull/417#discussion_r401147372", "bodyText": "This should work\n  private Completable enqueueTileDownloads(OfflineArea area) {\n    File jsonSource;\n    try {\n      jsonSource = fileUtil.getFile(Config.GEO_JSON);\n    } catch (FileNotFoundException e) {\n      return Completable.error(e);\n    }\n\n    ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n    return localDataStore\n        .insertOrUpdateOfflineArea(area.toBuilder().setState(State.IN_PROGRESS).build())\n        .andThen(\n            Completable.merge(\n                stream(tiles.asList())\n                    .map(localDataStore::insertOrUpdateTile)\n                    .collect(toImmutableList())))\n        .doOnError(__ -> Timber.e(\"failed to add/update a tile in the database\"))\n        .andThen(tileDownloadWorkManager.enqueueTileDownloadWorker());\n  }", "author": "shobhitagarwal1612", "createdAt": "2020-03-31T19:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MjY0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1Nzg4Ng==", "url": "https://github.com/google/ground-android/pull/417#discussion_r401157886", "bodyText": "ah, duh! Thanks Shobhit!", "author": "scolsen", "createdAt": "2020-03-31T19:23:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MjY0OA=="}], "type": "inlineReview", "revised_code": {"commit": "95827ceba145a7b59a55d5044c908ff914867b6b", "chunk": "diff --git a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\nindex f2f6332b..dc489916 100644\n--- a/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n+++ b/gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java\n\n@@ -61,7 +61,6 @@ public class OfflineAreaRepository {\n   private Completable enqueueTileDownloads(OfflineArea area) {\n     try {\n       File jsonSource = fileUtil.getFile(Config.GEO_JSON);\n-\n       ImmutableList<Tile> tiles = geoJsonParser.intersectingTiles(area.getBounds(), jsonSource);\n \n       return localDataStore\n"}}, {"oid": "95827ceba145a7b59a55d5044c908ff914867b6b", "url": "https://github.com/google/ground-android/commit/95827ceba145a7b59a55d5044c908ff914867b6b", "message": "Use Timber.e instead of Timber.e", "committedDate": "2020-03-31T18:23:39Z", "type": "commit"}, {"oid": "2dbf955c34b26782e513c33fa261b4534f93512a", "url": "https://github.com/google/ground-android/commit/2dbf955c34b26782e513c33fa261b4534f93512a", "message": "OfflineAreaRepository: Separate declaration and assignment of jsonSource", "committedDate": "2020-03-31T19:23:05Z", "type": "commit"}, {"oid": "ab758c3fe9672378e2d2b4c9f8060757ff98b36f", "url": "https://github.com/google/ground-android/commit/ab758c3fe9672378e2d2b4c9f8060757ff98b36f", "message": "Add gnd-geojson; update fileUtil to access raw resources\n\nAt the moment, we're using an on-device json file to source mbtiles for\ndownload. We have to bundle the file with the application, so I've added\nit as a raw resource.\n\nAccessing the file's contents also requires an additional method in the\nFileUtil helper, since android's openRawResource returns an input stream\nnot a File; it's not the most efficient solution, but in order to have\na small delta and make it easier to change this in the future, I've\nimplemented a method that copies the inputstream to a file corresponding\nto the config name--this allows us to make a drop-in replacement--the\nalternative requires rewriting the logic of the json parser, which would\nneed to change yet again as soon as we no longer use a raw resource, so\nI felt this was an appropriate approach for now, even though the stream\nto file conversion is redundant.", "committedDate": "2020-04-03T14:59:37Z", "type": "commit"}, {"oid": "0250dcc32d3bac14ed60314defb73fab93d38fbb", "url": "https://github.com/google/ground-android/commit/0250dcc32d3bac14ed60314defb73fab93d38fbb", "message": "Handle addAreaAndEnqueue errors downstream.", "committedDate": "2020-04-03T15:06:06Z", "type": "commit"}, {"oid": "17f70eb7ab4195129a82a5a38e90e0a98089ff91", "url": "https://github.com/google/ground-android/commit/17f70eb7ab4195129a82a5a38e90e0a98089ff91", "message": "Prepend files dir to GEO_JSON file write.\n\nThe root directory is a read only file system--we need to write the file\nto the app's data dir.\n\nAs mentioned in a previous commit, this extraneous write will hopefully\nbe eliminated in the future.", "committedDate": "2020-04-03T15:17:31Z", "type": "commit"}, {"oid": "6b8969dca73281d3404ad82a78b7341b681d65f0", "url": "https://github.com/google/ground-android/commit/6b8969dca73281d3404ad82a78b7341b681d65f0", "message": "Remove unused import", "committedDate": "2020-04-03T15:31:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwNTQ5OA==", "url": "https://github.com/google/ground-android/pull/417#discussion_r403105498", "bodyText": "This copies the raw file to /data dir each time the function is called. Instead, let's first try to load the file from Config.GEO_JSON and save a copy to data dir only when FileNotFound exception gets raised. That logic should probably be added to getFileFromRawResource() in fileutil\nwdyt?", "author": "shobhitagarwal1612", "createdAt": "2020-04-03T15:57:42Z", "path": "gnd/src/main/java/com/google/android/gnd/repository/OfflineAreaRepository.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.android.gnd.repository;\n+\n+import static com.google.android.gnd.util.ImmutableListCollector.toImmutableList;\n+import static java8.util.stream.StreamSupport.stream;\n+\n+import com.google.android.gms.maps.model.LatLngBounds;\n+import com.google.android.gnd.Config;\n+import com.google.android.gnd.R;\n+import com.google.android.gnd.model.basemap.OfflineArea;\n+import com.google.android.gnd.model.basemap.OfflineArea.State;\n+import com.google.android.gnd.model.basemap.tile.Tile;\n+import com.google.android.gnd.persistence.geojson.GeoJsonParser;\n+import com.google.android.gnd.persistence.local.LocalDataStore;\n+import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;\n+import com.google.android.gnd.ui.util.FileUtil;\n+import com.google.android.gnd.workers.TileDownloadWorkManager;\n+import com.google.common.collect.ImmutableList;\n+import io.reactivex.Completable;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.inject.Inject;\n+import timber.log.Timber;\n+\n+public class OfflineAreaRepository {\n+  private final TileDownloadWorkManager tileDownloadWorkManager;\n+  private final LocalDataStore localDataStore;\n+  private final GeoJsonParser geoJsonParser;\n+  private final FileUtil fileUtil;\n+\n+  private final OfflineUuidGenerator uuidGenerator;\n+\n+  @Inject\n+  public OfflineAreaRepository(\n+      TileDownloadWorkManager tileDownloadWorkManager,\n+      LocalDataStore localDataStore,\n+      GeoJsonParser geoJsonParser,\n+      OfflineUuidGenerator uuidGenerator,\n+      FileUtil fileUtil) {\n+    this.tileDownloadWorkManager = tileDownloadWorkManager;\n+    this.localDataStore = localDataStore;\n+    this.geoJsonParser = geoJsonParser;\n+    this.uuidGenerator = uuidGenerator;\n+    this.fileUtil = fileUtil;\n+  }\n+\n+  private Completable enqueueTileDownloads(OfflineArea area) {\n+    File jsonSource;\n+\n+    try {\n+      jsonSource = fileUtil.getFileFromRawResource(R.raw.gnd_geojson, Config.GEO_JSON);", "originalCommit": "6b8969dca73281d3404ad82a78b7341b681d65f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzExOTk0Mg==", "url": "https://github.com/google/ground-android/pull/417#discussion_r403119942", "bodyText": "Great point! Will do.", "author": "scolsen", "createdAt": "2020-04-03T16:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwNTQ5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU1MDc2Ng==", "url": "https://github.com/google/ground-android/pull/417#discussion_r405550766", "bodyText": "00dfee8", "author": "scolsen", "createdAt": "2020-04-08T14:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwNTQ5OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "00dfee8a73026a3489b9a8c3eaed4e83d8ee74a3", "url": "https://github.com/google/ground-android/commit/00dfee8a73026a3489b9a8c3eaed4e83d8ee74a3", "message": "Only load geojson from raw resource if it doesn't exist in /data", "committedDate": "2020-04-08T14:03:54Z", "type": "commit"}, {"oid": "417b8a056cc6be1d9784d00c5510d6c68390422f", "url": "https://github.com/google/ground-android/commit/417b8a056cc6be1d9784d00c5510d6c68390422f", "message": "Merge branch 'master' into offline-areas", "committedDate": "2020-04-08T14:42:56Z", "type": "commit"}]}