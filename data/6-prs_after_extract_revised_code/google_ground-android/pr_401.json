{"pr_number": 401, "pr_title": "[Cleanup] Replace manual subscription handling with ViewModel", "pr_createdAt": "2020-03-18T21:49:44Z", "pr_url": "https://github.com/google/ground-android/pull/401", "timeline": [{"oid": "6d0bfd7bfb69ef1391a1dd9aa4e01398727e537a", "url": "https://github.com/google/ground-android/commit/6d0bfd7bfb69ef1391a1dd9aa4e01398727e537a", "message": "Add annotations based on base class", "committedDate": "2020-03-18T20:55:55Z", "type": "commit"}, {"oid": "8d33223a91e98ec8144686844e3b0cf82ed1306a", "url": "https://github.com/google/ground-android/commit/8d33223a91e98ec8144686844e3b0cf82ed1306a", "message": "Replace switch with if block", "committedDate": "2020-03-18T20:56:29Z", "type": "commit"}, {"oid": "5fec50f6961b64b18a99dd6f697d7434b899af35", "url": "https://github.com/google/ground-android/commit/5fec50f6961b64b18a99dd6f697d7434b899af35", "message": "Move photo field elements into separate layout", "committedDate": "2020-03-18T21:43:16Z", "type": "commit"}, {"oid": "0845afb06aa512b8cb95128a225b8d9711419c5c", "url": "https://github.com/google/ground-android/commit/0845afb06aa512b8cb95128a225b8d9711419c5c", "message": "Replace RxCall with photo_view.xml and PhotoFieldViewModel", "committedDate": "2020-03-18T21:44:28Z", "type": "commit"}, {"oid": "34832873d7c1742af5c05643331f877961bb454f", "url": "https://github.com/google/ground-android/commit/34832873d7c1742af5c05643331f877961bb454f", "message": "Remove useless parenthesis", "committedDate": "2020-03-18T21:45:47Z", "type": "commit"}, {"oid": "45431707d3bbcff8a1937fc3af3782ddbbc71c74", "url": "https://github.com/google/ground-android/commit/45431707d3bbcff8a1937fc3af3782ddbbc71c74", "message": "Rename photo_view -> photo_field", "committedDate": "2020-03-18T21:52:47Z", "type": "commit"}, {"oid": "fb59b20c479b576e4f2b1fbeb6cdf3b42588d67f", "url": "https://github.com/google/ground-android/commit/fb59b20c479b576e4f2b1fbeb6cdf3b42588d67f", "message": "Remove unused dagger dependencies", "committedDate": "2020-03-18T21:57:50Z", "type": "commit"}, {"oid": "8c171e586b8108519afeb7a41fdc6c5d95f0ebe1", "url": "https://github.com/google/ground-android/commit/8c171e586b8108519afeb7a41fdc6c5d95f0ebe1", "message": "Rename to viewModel for simplicity", "committedDate": "2020-03-18T21:59:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NjE5Ng==", "url": "https://github.com/google/ground-android/pull/401#discussion_r394666196", "bodyText": "It appears this method is called both from init() and here. Is this intentional? If so, why?", "author": "gino-m", "createdAt": "2020-03-18T22:05:14Z", "path": "gnd/src/main/java/com/google/android/gnd/ui/observationdetails/ObservationDetailsFragment.java", "diffHunk": "@@ -156,35 +149,25 @@ private void addField(Field field, Observation observation) {\n     observation\n         .getResponses()\n         .getResponse(field.getId())\n-        .map(r -> r.getDetailsText(field))\n         .ifPresent(\n-            value -> {\n-              if (field.getType().equals(Type.PHOTO)) {\n-                binding.fieldValue.setVisibility(View.GONE);\n-                binding.imagePreview.setVisibility(View.VISIBLE);\n-\n-                // TODO: Subscriptions should only be made inside lifecycle methods so they can be\n-                // properly disposed of in their equivalent end lifecycle methods. To do this\n-                // safely, we can create a PublishSubject in the view model that gets exposed to\n-                // the fragment as a LiveData.\n-                storageManager\n-                    .getDownloadUrl(value)\n-                    .subscribeOn(schedulers.io())\n-                    .observeOn(schedulers.ui())\n-                    .as(autoDisposable(this))\n-                    .subscribe(\n-                        uri ->\n-                            Picasso.get()\n-                                .load(uri)\n-                                .placeholder(R.drawable.ic_photo_grey_600_24dp)\n-                                .into(binding.imagePreview));\n-\n+            response -> {\n+              if (field.getType() == Type.PHOTO) {\n+                addPhotoField((ViewGroup) binding.getRoot(), field, response);\n               } else {\n-                binding.fieldValue.setText(value);\n+                binding.fieldValue.setText(response.getDetailsText(field));\n               }\n             });\n   }\n \n+  private void addPhotoField(ViewGroup container, Field field, Response response) {\n+    PhotoFieldBinding photoFieldBinding = PhotoFieldBinding.inflate(getLayoutInflater());\n+    PhotoFieldViewModel photoFieldViewModel = viewModelFactory.create(PhotoFieldViewModel.class);\n+    photoFieldBinding.setLifecycleOwner(this);\n+    photoFieldBinding.setViewModel(photoFieldViewModel);\n+    photoFieldViewModel.updateField(response, field);", "originalCommit": "8c171e586b8108519afeb7a41fdc6c5d95f0ebe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzQzOA==", "url": "https://github.com/google/ground-android/pull/401#discussion_r394667438", "bodyText": "init() takes an ObservableMap as a parameter and calls updateField() whenever the response is changed. Here, we don't use init() as this is an one time update.", "author": "shobhitagarwal1612", "createdAt": "2020-03-18T22:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NjE5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzcxOQ==", "url": "https://github.com/google/ground-android/pull/401#discussion_r394667719", "bodyText": "Makes me wonder if init() should a part of PhotoFieldViewModel at all....", "author": "shobhitagarwal1612", "createdAt": "2020-03-18T22:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NjE5Ng=="}], "type": "inlineReview", "revised_code": null}]}