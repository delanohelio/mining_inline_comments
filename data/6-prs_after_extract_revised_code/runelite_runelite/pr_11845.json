{"pr_number": 11845, "pr_title": "mining: Daeyalt essence timers", "pr_createdAt": "2020-06-07T18:54:05Z", "pr_url": "https://github.com/runelite/runelite/pull/11845", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE3NDQ2OQ==", "url": "https://github.com/runelite/runelite/pull/11845#discussion_r443174469", "bodyText": "You should just reuse rock here.", "author": "Adam-", "createdAt": "2020-06-21T02:16:43Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java", "diffHunk": "@@ -128,20 +128,37 @@ public void onGameObjectDespawned(GameObjectDespawned event)\n \t\tRock rock = Rock.getRock(object.getId());\n \t\tif (rock != null)\n \t\t{\n-\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n-\t\t\trespawns.add(rockRespawn);\n+\t\t\tif (rock != Rock.DAEYALT)\n+\t\t\t{\n+\t\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n+\t\t\t\trespawns.add(rockRespawn);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tfinal WorldPoint point = object.getWorldLocation();\n+\t\t\t\trespawns.removeIf(rockRespawn -> rockRespawn.getWorldPoint().equals(point));\n+\t\t\t}\n \t\t}\n \t}\n \n \t@Subscribe\n \tpublic void onGameObjectSpawned(GameObjectSpawned event)\n \t{\n-\t\tif (client.getGameState() != GameState.LOGGED_IN)\n+\t\tif (client.getGameState() != GameState.LOGGED_IN || recentlyLoggedIn)\n \t\t{\n \t\t\treturn;\n \t\t}\n \n \t\tGameObject object = event.getGameObject();\n+\t\tRock rock = Rock.getRock(object.getId());\n+\n+\t\t//Inverse despawn timer to track deyalt ore life\n+\t\tif (rock == Rock.DAEYALT)\n+\t\t{\n+\t\t\tfinal int region = client.getLocalPlayer().getWorldLocation().getRegionID();\n+\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n+\t\t\trespawns.add(rockRespawn);\n+\t\t}\n \n \t\t// If the Lovakite ore respawns before the timer is up, remove it\n \t\tif (Rock.getRock(object.getId()) == Rock.LOVAKITE)", "originalCommit": "a340fcee0bde7264a6b580427d352284f34e4581", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18b4cdb8927f927b95efd4deefbc6ba977c75b34", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java\nindex fdb9550bb..5c79687f6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java\n\n@@ -128,15 +128,15 @@ public class MiningPlugin extends Plugin\n \t\tRock rock = Rock.getRock(object.getId());\n \t\tif (rock != null)\n \t\t{\n-\t\t\tif (rock != Rock.DAEYALT)\n+\t\t\tif (rock == Rock.DAEYALT_ESSENCE)\n \t\t\t{\n-\t\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n-\t\t\t\trespawns.add(rockRespawn);\n+\t\t\t\tfinal WorldPoint point = object.getWorldLocation();\n+\t\t\t\trespawns.removeIf(rockRespawn -> rockRespawn.getWorldPoint().equals(point));\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\tfinal WorldPoint point = object.getWorldLocation();\n-\t\t\t\trespawns.removeIf(rockRespawn -> rockRespawn.getWorldPoint().equals(point));\n+\t\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n+\t\t\t\trespawns.add(rockRespawn);\n \t\t\t}\n \t\t}\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1NTQyOQ==", "url": "https://github.com/runelite/runelite/pull/11845#discussion_r444555429", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (Rock.getRock(object.getId()) == Rock.LOVAKITE)\n          \n          \n            \n            \t\telse if (rock == Rock.LOVAKITE)", "author": "Adam-", "createdAt": "2020-06-23T23:05:01Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java", "diffHunk": "@@ -128,20 +128,37 @@ public void onGameObjectDespawned(GameObjectDespawned event)\n \t\tRock rock = Rock.getRock(object.getId());\n \t\tif (rock != null)\n \t\t{\n-\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n-\t\t\trespawns.add(rockRespawn);\n+\t\t\tif (rock != Rock.DAEYALT)\n+\t\t\t{\n+\t\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n+\t\t\t\trespawns.add(rockRespawn);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tfinal WorldPoint point = object.getWorldLocation();\n+\t\t\t\trespawns.removeIf(rockRespawn -> rockRespawn.getWorldPoint().equals(point));\n+\t\t\t}\n \t\t}\n \t}\n \n \t@Subscribe\n \tpublic void onGameObjectSpawned(GameObjectSpawned event)\n \t{\n-\t\tif (client.getGameState() != GameState.LOGGED_IN)\n+\t\tif (client.getGameState() != GameState.LOGGED_IN || recentlyLoggedIn)\n \t\t{\n \t\t\treturn;\n \t\t}\n \n \t\tGameObject object = event.getGameObject();\n+\t\tRock rock = Rock.getRock(object.getId());\n+\n+\t\t//Inverse despawn timer to track deyalt ore life\n+\t\tif (rock == Rock.DAEYALT)\n+\t\t{\n+\t\t\tfinal int region = client.getLocalPlayer().getWorldLocation().getRegionID();\n+\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n+\t\t\trespawns.add(rockRespawn);\n+\t\t}\n \n \t\t// If the Lovakite ore respawns before the timer is up, remove it\n \t\tif (Rock.getRock(object.getId()) == Rock.LOVAKITE)", "originalCommit": "a340fcee0bde7264a6b580427d352284f34e4581", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18b4cdb8927f927b95efd4deefbc6ba977c75b34", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java\nindex fdb9550bb..5c79687f6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/mining/MiningPlugin.java\n\n@@ -128,15 +128,15 @@ public class MiningPlugin extends Plugin\n \t\tRock rock = Rock.getRock(object.getId());\n \t\tif (rock != null)\n \t\t{\n-\t\t\tif (rock != Rock.DAEYALT)\n+\t\t\tif (rock == Rock.DAEYALT_ESSENCE)\n \t\t\t{\n-\t\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n-\t\t\t\trespawns.add(rockRespawn);\n+\t\t\t\tfinal WorldPoint point = object.getWorldLocation();\n+\t\t\t\trespawns.removeIf(rockRespawn -> rockRespawn.getWorldPoint().equals(point));\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\tfinal WorldPoint point = object.getWorldLocation();\n-\t\t\t\trespawns.removeIf(rockRespawn -> rockRespawn.getWorldPoint().equals(point));\n+\t\t\t\tRockRespawn rockRespawn = new RockRespawn(rock, object.getWorldLocation(), Instant.now(), (int) rock.getRespawnTime(region).toMillis(), rock.getZOffset());\n+\t\t\t\trespawns.add(rockRespawn);\n \t\t\t}\n \t\t}\n \t}\n"}}, {"oid": "18b4cdb8927f927b95efd4deefbc6ba977c75b34", "url": "https://github.com/runelite/runelite/commit/18b4cdb8927f927b95efd4deefbc6ba977c75b34", "message": "mining: Add Daeyalt essence timer", "committedDate": "2020-06-24T06:27:05Z", "type": "forcePushed"}, {"oid": "f7b49fa4e2f36dc608af3465883081a86e7301a2", "url": "https://github.com/runelite/runelite/commit/f7b49fa4e2f36dc608af3465883081a86e7301a2", "message": "mining: Add Daeyalt essence timers", "committedDate": "2020-06-24T06:28:09Z", "type": "commit"}, {"oid": "f7b49fa4e2f36dc608af3465883081a86e7301a2", "url": "https://github.com/runelite/runelite/commit/f7b49fa4e2f36dc608af3465883081a86e7301a2", "message": "mining: Add Daeyalt essence timers", "committedDate": "2020-06-24T06:28:09Z", "type": "forcePushed"}]}