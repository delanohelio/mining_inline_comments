{"pr_number": 11169, "pr_title": "Add region filter to world quick-hopping", "pr_createdAt": "2020-04-02T18:41:33Z", "pr_url": "https://github.com/runelite/runelite/pull/11169", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0ODczNg==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r402548736", "bodyText": "Maybe the switch can be eliminated by storing the WorldRegion mapping in RegionFilterMode. This way you can do something like world.getRegion() != config.quickHopRegionFilter().getRegion() to filter by world.", "author": "alexanderhenne", "createdAt": "2020-04-02T19:09:39Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java", "diffHunk": "@@ -584,6 +585,24 @@ private void hop(boolean previous)\n \t\t\t\t}\n \t\t\t}\n \n+\t\t\t// Check world region if filter is enabled\n+\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE) {\n+\t\t\t\tswitch (config.quickHopRegionFilter()) {\n+\t\t\t\t\tcase AUSTRALIA:\n+\t\t\t\t\t\tif (world.getRegion() != WorldRegion.AUSTRALIA) continue;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase GERMANY:\n+\t\t\t\t\t\tif (world.getRegion() != WorldRegion.GERMANY) continue;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase UNITED_KINGDOM:\n+\t\t\t\t\t\tif (world.getRegion() != WorldRegion.UNITED_KINGDOM) continue;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase UNITED_STATES:", "originalCommit": "b0502c79e57f1421be87774ce6ee34215424ea16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU3OTQyNg==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r402579426", "bodyText": "That's something I had thought about doing but forgot to do. Anyway all your requests have been made now.", "author": "Spedwards", "createdAt": "2020-04-02T20:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0ODczNg=="}], "type": "inlineReview", "revised_code": {"commit": "544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\nindex 0c13b2afd..161bf7e2a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n\n@@ -585,24 +590,6 @@ public class WorldHopperPlugin extends Plugin\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\t// Check world region if filter is enabled\n-\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE) {\n-\t\t\t\tswitch (config.quickHopRegionFilter()) {\n-\t\t\t\t\tcase AUSTRALIA:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.AUSTRALIA) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase GERMANY:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.GERMANY) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase UNITED_KINGDOM:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.UNITED_KINGDOM) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase UNITED_STATES:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.UNITED_STATES_OF_AMERICA) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\n \t\t\t// Break out if we've found a good world to hop to\n \t\t\tif (currentWorldTypes.equals(types))\n \t\t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1MDQ0OA==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r402550448", "bodyText": "{ needs to be on a new line. You can run Maven with <checkstyle.skip>false</checkstyle.skip> instead of true in pom.xml to find style errors like this one.", "author": "alexanderhenne", "createdAt": "2020-04-02T19:12:42Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/RegionFilterMode.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2019, Liam Edwards <http://github.com/Spedwards>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.worldhopper;\n+\n+public enum RegionFilterMode {", "originalCommit": "b0502c79e57f1421be87774ce6ee34215424ea16", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/RegionFilterMode.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/RegionFilterMode.java\nindex 093a67294..2a1a244b8 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/RegionFilterMode.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/RegionFilterMode.java\n\n@@ -24,20 +24,35 @@\n  */\n package net.runelite.client.plugins.worldhopper;\n \n-public enum RegionFilterMode {\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import net.runelite.http.api.worlds.WorldRegion;\n+\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public enum RegionFilterMode\n+{\n \tNONE,\n-\tAUSTRALIA,\n-\tGERMANY,\n-\tUNITED_KINGDOM {\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\treturn \"U.K.\";\n-\t\t}\n-\t},\n-\tUNITED_STATES {\n-\t\t@Override\n-\t\tpublic String toString() {\n-\t\t\treturn \"USA\";\n-\t\t}\n-\t}\n+\tAUSTRALIA(WorldRegion.AUSTRALIA),\n+\tGERMANY(WorldRegion.GERMANY),\n+\tUNITED_KINGDOM(WorldRegion.UNITED_KINGDOM)\n+\t\t{\n+\t\t\t@Override\n+\t\t\tpublic String toString()\n+\t\t\t{\n+\t\t\t\treturn \"U.K.\";\n+\t\t\t}\n+\t\t},\n+\tUNITED_STATES(WorldRegion.UNITED_STATES_OF_AMERICA)\n+\t\t{\n+\t\t\t@Override\n+\t\t\tpublic String toString()\n+\t\t\t{\n+\t\t\t\treturn \"USA\";\n+\t\t\t}\n+\t\t};\n+\n+\t@Getter\n+\tprivate WorldRegion region;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1ODE5MQ==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r402558191", "bodyText": "I think it would be better to put this here: https://github.com/runelite/runelite/blob/master/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java#L563 instead, since it's separate to the world type checking.", "author": "alexanderhenne", "createdAt": "2020-04-02T19:26:30Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java", "diffHunk": "@@ -584,6 +585,24 @@ private void hop(boolean previous)\n \t\t\t\t}\n \t\t\t}\n \n+\t\t\t// Check world region if filter is enabled\n+\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE) {", "originalCommit": "b0502c79e57f1421be87774ce6ee34215424ea16", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\nindex 0c13b2afd..161bf7e2a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n\n@@ -585,24 +590,6 @@ public class WorldHopperPlugin extends Plugin\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\t// Check world region if filter is enabled\n-\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE) {\n-\t\t\t\tswitch (config.quickHopRegionFilter()) {\n-\t\t\t\t\tcase AUSTRALIA:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.AUSTRALIA) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase GERMANY:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.GERMANY) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase UNITED_KINGDOM:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.UNITED_KINGDOM) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase UNITED_STATES:\n-\t\t\t\t\t\tif (world.getRegion() != WorldRegion.UNITED_STATES_OF_AMERICA) continue;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\n \t\t\t// Break out if we've found a good world to hop to\n \t\t\tif (currentWorldTypes.equals(types))\n \t\t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyNDk5Nw==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r406324997", "bodyText": "This key name should match the method name", "author": "Adam-", "createdAt": "2020-04-09T16:25:11Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java", "diffHunk": "@@ -70,11 +70,21 @@ default boolean quickhopOutOfDanger()\n \t\treturn true;\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"quickHopLimitRegion\",", "originalCommit": "7a9537f24470841641de99105076c8accba70250", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1MTg5OA==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r406351898", "bodyText": "Fixed now. Also removed an old import that I forgot to remove in a previous commit.", "author": "Spedwards", "createdAt": "2020-04-09T17:10:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyNDk5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\nindex 5a1e1334b..aced5e1bd 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\n\n@@ -71,12 +71,13 @@ public interface WorldHopperConfig extends Config\n \t}\n \n \t@ConfigItem(\n-\t\tkeyName = \"quickHopLimitRegion\",\n+\t\tkeyName = \"quickHopRegionFilter\",\n \t\tname = \"Quick-hop to specific region only\",\n \t\tdescription = \"Limit quick-hopping to worlds of a specific region\",\n \t\tposition = 3\n \t)\n-\tdefault RegionFilterMode quickHopRegionFilter() {\n+\tdefault RegionFilterMode quickHopRegionFilter()\n+\t{\n \t\treturn RegionFilterMode.NONE;\n \t}\n \n"}}, {"oid": "544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "url": "https://github.com/runelite/runelite/commit/544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "message": "Fix config item and remove unused import", "committedDate": "2020-04-09T19:51:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMDExMg==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r406510112", "bodyText": "if (config.quickHopRegionFilter() != RegionFilterMode.NONE && world.getRegion() != config.quickHopRegionFilter().getRegion())\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}", "author": "Adam-", "createdAt": "2020-04-09T22:22:46Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java", "diffHunk": "@@ -561,6 +561,12 @@ private void hop(boolean previous)\n \n \t\t\tworld = worlds.get(worldIdx);\n \n+\t\t\t// Check world region if filter is enabled\n+\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE)", "originalCommit": "544bd9b845f3a7f355b4d2de65733dcfe3b7cb9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyNjc4Mw==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r406526783", "bodyText": "Yeah, that looks better. That is done now.", "author": "Spedwards", "createdAt": "2020-04-09T23:14:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMDExMg=="}], "type": "inlineReview", "revised_code": {"commit": "e76842f88d2bbfb3d4e485154e3b59ecc98d6624", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\nindex 161bf7e2a..aca441e40 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n\n@@ -562,9 +562,9 @@ public class WorldHopperPlugin extends Plugin\n \t\t\tworld = worlds.get(worldIdx);\n \n \t\t\t// Check world region if filter is enabled\n-\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE)\n+\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE && world.getRegion() != config.quickHopRegionFilter().getRegion())\n \t\t\t{\n-\t\t\t\tif (world.getRegion() != config.quickHopRegionFilter().getRegion()) continue;\n+\t\t\t\tcontinue;\n \t\t\t}\n \n \t\t\tEnumSet<WorldType> types = world.getTypes().clone();\n"}}, {"oid": "e76842f88d2bbfb3d4e485154e3b59ecc98d6624", "url": "https://github.com/runelite/runelite/commit/e76842f88d2bbfb3d4e485154e3b59ecc98d6624", "message": "Combine if-statements", "committedDate": "2020-04-09T23:10:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2ODYyNg==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r412568626", "bodyText": "This should use the stored pings", "author": "Adam-", "createdAt": "2020-04-21T23:49:27Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java", "diffHunk": "@@ -561,6 +582,18 @@ private void hop(boolean previous)\n \n \t\t\tworld = worlds.get(worldIdx);\n \n+\t\t\t// Check world region if filter is enabled\n+\t\t\tif (config.quickHopRegionFilter() != RegionFilterMode.NONE && world.getRegion() != config.quickHopRegionFilter().getRegion())\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\t// Check world ping is less than or equal to config value\n+\t\t\tif (limitPing && config.quickHopPingLimit() < ping(world))", "originalCommit": "5540b36a7f1aa410f72b97c6d18960091763f84e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e27f9844c050e066e15a4cbc19077239efb48d73", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\nindex 67825d00b..6e2f5edda 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n\n@@ -589,7 +595,7 @@ public class WorldHopperPlugin extends Plugin\n \t\t\t}\n \n \t\t\t// Check world ping is less than or equal to config value\n-\t\t\tif (limitPing && config.quickHopPingLimit() < ping(world))\n+\t\t\tif (limitPing && config.quickHopPingLimit() < getStoredPing(world))\n \t\t\t{\n \t\t\t\tcontinue;\n \t\t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2ODY4MA==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r412568680", "bodyText": "The default behavior should not be changed", "author": "Adam-", "createdAt": "2020-04-21T23:49:40Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java", "diffHunk": "@@ -70,11 +70,33 @@ default boolean quickhopOutOfDanger()\n \t\treturn true;\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"quickHopRegionFilter\",\n+\t\tname = \"Quick-hop to specific region only\",\n+\t\tdescription = \"Limit quick-hopping to worlds of a specific region\",\n+\t\tposition = 3\n+\t)\n+\tdefault RegionFilterMode quickHopRegionFilter()\n+\t{\n+\t\treturn RegionFilterMode.NONE;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"quickHopPingLimit\",\n+\t\tname = \"Max ping for quick-hopper\",\n+\t\tdescription = \"Limit quick-hopping to worlds below given ping\",\n+\t\tposition = 4\n+\t)\n+\tdefault int quickHopPingLimit()\n+\t{\n+\t\treturn 500;", "originalCommit": "5540b36a7f1aa410f72b97c6d18960091763f84e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e27f9844c050e066e15a4cbc19077239efb48d73", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\nindex 3fc16dacf..822989b03 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\n\n@@ -84,12 +84,12 @@ public interface WorldHopperConfig extends Config\n \t@ConfigItem(\n \t\tkeyName = \"quickHopPingLimit\",\n \t\tname = \"Max ping for quick-hopper\",\n-\t\tdescription = \"Limit quick-hopping to worlds below given ping\",\n+\t\tdescription = \"Limit quick-hopping to worlds below given ping. Disabled at 0\",\n \t\tposition = 4\n \t)\n \tdefault int quickHopPingLimit()\n \t{\n-\t\treturn 500;\n+\t\treturn 0;\n \t}\n \n \t@ConfigItem(\n"}}, {"oid": "e27f9844c050e066e15a4cbc19077239efb48d73", "url": "https://github.com/runelite/runelite/commit/e27f9844c050e066e15a4cbc19077239efb48d73", "message": "Add ping limiter to quick-hop feature.\nA check is in place for the ping limiter ensuring there are worlds with a lower ping than what is provided in the config. If there are none or the provided value is 0, then it won't check and will warn the player.", "committedDate": "2020-04-22T06:23:47Z", "type": "forcePushed"}, {"oid": "53e2fa6d1842a78938c1e4bd447586606947e118", "url": "https://github.com/runelite/runelite/commit/53e2fa6d1842a78938c1e4bd447586606947e118", "message": "Add ping limiter to quick-hop feature.\nA check is in place for the ping limiter ensuring there are worlds with a lower ping than what is provided in the config. If there are none or the provided value is 0, then it won't check and will warn the player.", "committedDate": "2020-04-22T06:28:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExNDI1MA==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r413114250", "bodyText": "I don't see any reason to have this? There is already logic to handle if it cannot find a world to hop to, which seems fine?", "author": "Adam-", "createdAt": "2020-04-22T16:06:44Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java", "diffHunk": "@@ -531,6 +531,33 @@ private void hop(boolean previous)\n \t\tint worldIdx = worlds.indexOf(currentWorld);\n \t\tint totalLevel = client.getTotalLevel();\n \n+\t\tboolean limitPing = true;\n+\n+\t\t// Don't limit quick-hopping on ping if there are no worlds below desired ping\n+\t\tif (config.quickHopPingLimit() == 0 || worlds.stream().noneMatch(world -> getStoredPing(world) <= config.quickHopPingLimit()))", "originalCommit": "53e2fa6d1842a78938c1e4bd447586606947e118", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aedf60d00cf1cd6f6123ded90c5f78688b301aff", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\nindex 6e2f5edda..67d84d227 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n\n@@ -531,33 +530,6 @@ public class WorldHopperPlugin extends Plugin\n \t\tint worldIdx = worlds.indexOf(currentWorld);\n \t\tint totalLevel = client.getTotalLevel();\n \n-\t\tboolean limitPing = true;\n-\n-\t\t// Don't limit quick-hopping on ping if there are no worlds below desired ping\n-\t\tif (config.quickHopPingLimit() == 0 || worlds.stream().noneMatch(world -> getStoredPing(world) <= config.quickHopPingLimit()))\n-\t\t{\n-\t\t\tlimitPing = false;\n-\n-\t\t\tif (config.quickHopPingLimit() == 0)\n-\t\t\t{\n-\t\t\t\t// Don't display warning if disabled\n-\t\t\t\treturn;\n-\t\t\t}\n-\n-\t\t\t// Let the player know\n-\t\t\tString chatMessage = new ChatMessageBuilder()\n-\t\t\t\t.append(ChatColorType.HIGHLIGHT)\n-\t\t\t\t.append(\"There are no worlds with ping <= \")\n-\t\t\t\t.append(String.valueOf(config.quickHopPingLimit()))\n-\t\t\t\t.append(\". Quick-hopping will now ignore ping.\")\n-\t\t\t\t.build();\n-\n-\t\t\tchatMessageManager.queue(QueuedMessage.builder()\n-\t\t\t\t.type(ChatMessageType.CONSOLE)\n-\t\t\t\t.runeLiteFormattedMessage(chatMessage)\n-\t\t\t\t.build());\n-\t\t}\n-\n \t\tWorld world;\n \t\tdo\n \t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExNDQ0MQ==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r413114441", "bodyText": "This will crash if there is no ping", "author": "Adam-", "createdAt": "2020-04-22T16:07:01Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java", "diffHunk": "@@ -567,6 +594,12 @@ private void hop(boolean previous)\n \t\t\t\tcontinue;\n \t\t\t}\n \n+\t\t\t// Check world ping is less than or equal to config value\n+\t\t\tif (limitPing && config.quickHopPingLimit() < getStoredPing(world))", "originalCommit": "53e2fa6d1842a78938c1e4bd447586606947e118", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aedf60d00cf1cd6f6123ded90c5f78688b301aff", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\nindex 6e2f5edda..67d84d227 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperPlugin.java\n\n@@ -594,12 +566,6 @@ public class WorldHopperPlugin extends Plugin\n \t\t\t\tcontinue;\n \t\t\t}\n \n-\t\t\t// Check world ping is less than or equal to config value\n-\t\t\tif (limitPing && config.quickHopPingLimit() < getStoredPing(world))\n-\t\t\t{\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n \t\t\tEnumSet<WorldType> types = world.getTypes().clone();\n \n \t\t\ttypes.remove(WorldType.BOUNTY);\n"}}, {"oid": "aedf60d00cf1cd6f6123ded90c5f78688b301aff", "url": "https://github.com/runelite/runelite/commit/aedf60d00cf1cd6f6123ded90c5f78688b301aff", "message": "Add region filter to world quick-hopping", "committedDate": "2020-04-23T01:09:38Z", "type": "commit"}, {"oid": "aedf60d00cf1cd6f6123ded90c5f78688b301aff", "url": "https://github.com/runelite/runelite/commit/aedf60d00cf1cd6f6123ded90c5f78688b301aff", "message": "Add region filter to world quick-hopping", "committedDate": "2020-04-23T01:09:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM5NDU4MQ==", "url": "https://github.com/runelite/runelite/pull/11169#discussion_r415394581", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tname = \"Quick-hop to specific region only\",\n          \n          \n            \n            \t\tname = \"Quick-hop region\",\n          \n      \n    \n    \n  \n\nthe longer version probably won't fit?", "author": "Adam-", "createdAt": "2020-04-26T20:31:37Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java", "diffHunk": "@@ -70,11 +70,22 @@ default boolean quickhopOutOfDanger()\n \t\treturn true;\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"quickHopRegionFilter\",\n+\t\tname = \"Quick-hop to specific region only\",", "originalCommit": "aedf60d00cf1cd6f6123ded90c5f78688b301aff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab8e96f150c461bde4660e44fd9e24b2d42244a9", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\nindex aced5e1bd..7d6bb4c26 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java\n\n@@ -72,7 +72,7 @@ public interface WorldHopperConfig extends Config\n \n \t@ConfigItem(\n \t\tkeyName = \"quickHopRegionFilter\",\n-\t\tname = \"Quick-hop to specific region only\",\n+\t\tname = \"Quick-hop region\",\n \t\tdescription = \"Limit quick-hopping to worlds of a specific region\",\n \t\tposition = 3\n \t)\n"}}, {"oid": "ab8e96f150c461bde4660e44fd9e24b2d42244a9", "url": "https://github.com/runelite/runelite/commit/ab8e96f150c461bde4660e44fd9e24b2d42244a9", "message": "Update runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldHopperConfig.java", "committedDate": "2020-04-26T21:30:07Z", "type": "commit"}]}