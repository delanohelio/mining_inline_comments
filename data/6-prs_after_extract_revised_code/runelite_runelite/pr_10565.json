{"pr_number": 10565, "pr_title": "Add script fired events and add script inspector devtool", "pr_createdAt": "2020-01-08T01:12:02Z", "pr_url": "https://github.com/runelite/runelite/pull/10565", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyNjU1Ng==", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r364026556", "bodyText": "this should probably hold the whole scriptevent", "author": "abextm", "createdAt": "2020-01-08T01:14:37Z", "path": "runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.api.events;\n+\n+import lombok.Data;\n+import net.runelite.api.widgets.Widget;\n+\n+/**\n+ * An event that is fired before the designated script is ran\n+ */\n+@Data\n+public class ScriptPreFired\n+{\n+\t/**\n+\t * The script id of the invoked script\n+\t */\n+\tprivate final int scriptId;\n+\n+\t/**\n+\t * The source of the script invoke, this will be null unless\n+\t */\n+\tprivate Widget source = null;", "originalCommit": "45aa66373a931ac0fba1ca3f75e3228863aecd62", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "54eb29ab58a5981ea7309195379e3cd8eb2c004f", "chunk": "diff --git a/runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java b/runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java\nindex c1a836ee3..c50930378 100644\n--- a/runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java\n+++ b/runelite-api/src/main/java/net/runelite/api/events/ScriptPreFired.java\n\n@@ -25,7 +25,7 @@\n package net.runelite.api.events;\n \n import lombok.Data;\n-import net.runelite.api.widgets.Widget;\n+import net.runelite.api.ScriptEvent;\n \n /**\n  * An event that is fired before the designated script is ran\n"}}, {"oid": "54eb29ab58a5981ea7309195379e3cd8eb2c004f", "url": "https://github.com/runelite/runelite/commit/54eb29ab58a5981ea7309195379e3cd8eb2c004f", "message": "devtools: add script inspector", "committedDate": "2020-01-08T01:39:27Z", "type": "forcePushed"}, {"oid": "e4a6cbec2f3e8b7f623dce0e1d5218816cf341f7", "url": "https://github.com/runelite/runelite/commit/e4a6cbec2f3e8b7f623dce0e1d5218816cf341f7", "message": "rl-api: add invoke and return opcodes", "committedDate": "2020-02-01T17:14:35Z", "type": "commit"}, {"oid": "37c66bb64aebdaa34f4f7448e5f6dd01ec255389", "url": "https://github.com/runelite/runelite/commit/37c66bb64aebdaa34f4f7448e5f6dd01ec255389", "message": "rl-api: add script fired events", "committedDate": "2020-02-01T17:14:54Z", "type": "commit"}, {"oid": "b51022e2d2aa0c61166e26bc984dfd0623b06b74", "url": "https://github.com/runelite/runelite/commit/b51022e2d2aa0c61166e26bc984dfd0623b06b74", "message": "devtools: add script inspector", "committedDate": "2020-02-01T17:15:38Z", "type": "forcePushed"}, {"oid": "a427512f18091e8bf8a0c72904aca8e3d5392888", "url": "https://github.com/runelite/runelite/commit/a427512f18091e8bf8a0c72904aca8e3d5392888", "message": "devtools: add script inspector", "committedDate": "2020-02-04T01:54:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTM2MA==", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376245360", "bodyText": "Name these in ScriptID so they're not magic numbers.", "author": "Nightfirecat", "createdAt": "2020-02-07T07:23:35Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "diffHunk": "@@ -0,0 +1,493 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import com.google.common.collect.Lists;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.inject.Inject;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSpinner;\n+import javax.swing.JTree;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+import lombok.Data;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ScriptPostFired;\n+import net.runelite.api.events.ScriptPreFired;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import static net.runelite.api.widgets.WidgetInfo.TO_CHILD;\n+import static net.runelite.api.widgets.WidgetInfo.TO_GROUP;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.eventbus.EventBus;\n+import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.client.ui.ClientUI;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.DynamicGridLayout;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class ScriptInspector extends JFrame\n+{\n+\tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";", "originalCommit": "a427512f18091e8bf8a0c72904aca8e3d5392888", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NjE4MQ==", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376246181", "bodyText": "imo its better not in scriptid so I don't have to see them when they change, it doesn't matter for this use case.", "author": "abextm", "createdAt": "2020-02-07T07:26:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTM2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NzgyOQ==", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376247829", "bodyText": "A comment explaining the IDs here would be sufficient then. It's just awkward to leave these as magic numbers.", "author": "Nightfirecat", "createdAt": "2020-02-07T07:32:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "31aa207bb1d51a65078aacc4c68b458b6a696f37", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java b/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java\nindex 5f2b26cab..1cc8582c9 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java\n\n@@ -77,6 +77,7 @@ import net.runelite.client.util.Text;\n @Slf4j\n public class ScriptInspector extends JFrame\n {\n+\t// These scripts are the only ones that fire every client tick regardless of location.\n \tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";\n \tprivate final static int MAX_LOG_ENTRIES = 10000;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0NTQ5Mg==", "url": "https://github.com/runelite/runelite/pull/10565#discussion_r376245492", "bodyText": "0 is the initial value for int fields.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate int lastTick = 0;\n          \n          \n            \n            \tprivate int lastTick;", "author": "Nightfirecat", "createdAt": "2020-02-07T07:24:05Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java", "diffHunk": "@@ -0,0 +1,493 @@\n+/*\n+ * Copyright (c) 2020, Trevor <https://github.com/Trevor159>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.devtools;\n+\n+import com.google.common.collect.Lists;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.inject.Inject;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JButton;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JSpinner;\n+import javax.swing.JTree;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.border.CompoundBorder;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+import lombok.Data;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.events.ScriptPostFired;\n+import net.runelite.api.events.ScriptPreFired;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import static net.runelite.api.widgets.WidgetInfo.TO_CHILD;\n+import static net.runelite.api.widgets.WidgetInfo.TO_GROUP;\n+import net.runelite.client.config.ConfigManager;\n+import net.runelite.client.eventbus.EventBus;\n+import net.runelite.client.eventbus.Subscribe;\n+import net.runelite.client.ui.ClientUI;\n+import net.runelite.client.ui.ColorScheme;\n+import net.runelite.client.ui.DynamicGridLayout;\n+import net.runelite.client.ui.FontManager;\n+import net.runelite.client.util.Text;\n+\n+@Slf4j\n+public class ScriptInspector extends JFrame\n+{\n+\tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";\n+\tprivate final static int MAX_LOG_ENTRIES = 10000;\n+\n+\tprivate final Client client;\n+\tprivate final EventBus eventBus;\n+\tprivate final ConfigManager configManager;\n+\n+\tprivate final JPanel tracker = new JPanel();\n+\tprivate ScriptTreeNode currentNode;\n+\tprivate int lastTick = 0;", "originalCommit": "a427512f18091e8bf8a0c72904aca8e3d5392888", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "31aa207bb1d51a65078aacc4c68b458b6a696f37", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java b/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java\nindex 5f2b26cab..1cc8582c9 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/devtools/ScriptInspector.java\n\n@@ -77,6 +77,7 @@ import net.runelite.client.util.Text;\n @Slf4j\n public class ScriptInspector extends JFrame\n {\n+\t// These scripts are the only ones that fire every client tick regardless of location.\n \tprivate final static String DEFAULT_BLACKLIST = \"3174,1004\";\n \tprivate final static int MAX_LOG_ENTRIES = 10000;\n \n"}}, {"oid": "31aa207bb1d51a65078aacc4c68b458b6a696f37", "url": "https://github.com/runelite/runelite/commit/31aa207bb1d51a65078aacc4c68b458b6a696f37", "message": "devtools: add script inspector", "committedDate": "2020-02-07T18:35:16Z", "type": "commit"}, {"oid": "31aa207bb1d51a65078aacc4c68b458b6a696f37", "url": "https://github.com/runelite/runelite/commit/31aa207bb1d51a65078aacc4c68b458b6a696f37", "message": "devtools: add script inspector", "committedDate": "2020-02-07T18:35:16Z", "type": "forcePushed"}]}