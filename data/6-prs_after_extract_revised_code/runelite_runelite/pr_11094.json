{"pr_number": 11094, "pr_title": "grounditems: manually match item thresholds", "pr_createdAt": "2020-03-26T17:07:50Z", "pr_url": "https://github.com/runelite/runelite/pull/11094", "timeline": [{"oid": "1f09833022bd51c935ea4ff8fafb114f438474f2", "url": "https://github.com/runelite/runelite/commit/1f09833022bd51c935ea4ff8fafb114f438474f2", "message": "grounditems: manually match item thresholds\n\nThe regex used was explosive and wouldn't complete with large inputs\nthat can appear when the user has a mildly corrupted config", "committedDate": "2020-03-26T17:21:06Z", "type": "commit"}, {"oid": "6b1da824a811ce833b404ba519b0bfc0f8ae5f73", "url": "https://github.com/runelite/runelite/commit/6b1da824a811ce833b404ba519b0bfc0f8ae5f73", "message": "grounditems: make priceChecks threadsafe", "committedDate": "2020-03-26T17:25:31Z", "type": "commit"}, {"oid": "08703d011b6455999de2ff2ad17646cbfe43b15b", "url": "https://github.com/runelite/runelite/commit/08703d011b6455999de2ff2ad17646cbfe43b15b", "message": "grounditems: reset on the executor thread\n\nlet startup run slightly more parallel", "committedDate": "2020-03-26T17:33:43Z", "type": "commit"}, {"oid": "08703d011b6455999de2ff2ad17646cbfe43b15b", "url": "https://github.com/runelite/runelite/commit/08703d011b6455999de2ff2ad17646cbfe43b15b", "message": "grounditems: reset on the executor thread\n\nlet startup run slightly more parallel", "committedDate": "2020-03-26T17:33:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzNTc1OQ==", "url": "https://github.com/runelite/runelite/pull/11094#discussion_r399335759", "bodyText": "Is order guaranteed for this? It requires entrySet() to be in-order of insertion", "author": "Adam-", "createdAt": "2020-03-27T15:11:07Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/grounditems/GroundItemsPlugin.java", "diffHunk": "@@ -163,7 +164,7 @@\n \n \t@Getter\n \tprivate final Map<GroundItem.GroundItemKey, GroundItem> collectedGroundItems = new LinkedHashMap<>();\n-\tprivate final Map<Integer, Color> priceChecks = new LinkedHashMap<>();\n+\tprivate Map<Integer, Color> priceChecks = ImmutableMap.of();", "originalCommit": "6b1da824a811ce833b404ba519b0bfc0f8ae5f73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}