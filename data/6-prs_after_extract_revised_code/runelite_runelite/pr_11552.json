{"pr_number": 11552, "pr_title": "screenmarker: add ability to put screen markers around widgets", "pr_createdAt": "2020-05-11T18:56:14Z", "pr_url": "https://github.com/runelite/runelite/pull/11552", "timeline": [{"oid": "2708c913ea69ed42fd197cac59fb76271190e039", "url": "https://github.com/runelite/runelite/commit/2708c913ea69ed42fd197cac59fb76271190e039", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put the screen marker around a widget by clicking on the said widget\n\nCo-authored-by: melkypie <5113962+melkypie@users.noreply.github.com>", "committedDate": "2020-05-11T18:57:51Z", "type": "forcePushed"}, {"oid": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "url": "https://github.com/runelite/runelite/commit/e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-12T21:00:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjE3Nw==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424036177", "bodyText": "Reset this on shutdown", "author": "deathbeam", "createdAt": "2020-05-12T21:11:20Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java", "diffHunk": "@@ -99,13 +103,18 @@\n \tprivate ScreenMarker currentMarker;\n \n \t@Getter\n+\t@Setter\n \tprivate boolean creatingScreenMarker = false;\n+\t@Getter\n+\t@Setter\n+\tprivate Rectangle selectedWidgetBounds = null;", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\nindex 7274e86b2..dbea7cfa0 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n\n@@ -106,6 +106,8 @@ public class ScreenMarkerPlugin extends Plugin\n \t@Setter\n \tprivate boolean creatingScreenMarker = false;\n \t@Getter\n+\tprivate boolean drawing = false;\n+\t@Getter\n \t@Setter\n \tprivate Rectangle selectedWidgetBounds = null;\n \tprivate Point startLocation = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjQzMg==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424036432", "bodyText": "We usually (or always) use Overlay in overlay names", "author": "deathbeam", "createdAt": "2020-05-12T21:11:53Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j\n+class ScreenMarkerWidgetHighlight extends Overlay", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\nindex f0bc941fc..235ff0aef 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n\n@@ -42,13 +42,13 @@ import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n \n @Slf4j\n-class ScreenMarkerWidgetHighlight extends Overlay\n+class ScreenMarkerWidgetHighlightOverlay extends Overlay\n {\n \tprivate final ScreenMarkerPlugin plugin;\n \tprivate final Client client;\n \n \t@Inject\n-\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\tprivate ScreenMarkerWidgetHighlightOverlay(final ScreenMarkerPlugin plugin, final Client client)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.client = client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNjU3Nw==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424036577", "bodyText": "flip this if", "author": "deathbeam", "createdAt": "2020-05-12T21:12:13Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j\n+class ScreenMarkerWidgetHighlight extends Overlay\n+{\n+\tprivate final ScreenMarkerPlugin plugin;\n+\tprivate final Client client;\n+\n+\t@Inject\n+\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.client = client;\n+\t\tsetPosition(OverlayPosition.DETACHED);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t\tsetPriority(OverlayPriority.HIGH);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(Graphics2D graphics)\n+\t{\n+\t\tif (plugin.isCreatingScreenMarker())", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\nindex f0bc941fc..235ff0aef 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n\n@@ -42,13 +42,13 @@ import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n \n @Slf4j\n-class ScreenMarkerWidgetHighlight extends Overlay\n+class ScreenMarkerWidgetHighlightOverlay extends Overlay\n {\n \tprivate final ScreenMarkerPlugin plugin;\n \tprivate final Client client;\n \n \t@Inject\n-\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\tprivate ScreenMarkerWidgetHighlightOverlay(final ScreenMarkerPlugin plugin, final Client client)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.client = client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNzI3Mg==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424037272", "bodyText": "final, and just pass widget.getChild(param0) to drawHighlight directly", "author": "deathbeam", "createdAt": "2020-05-12T21:13:31Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j\n+class ScreenMarkerWidgetHighlight extends Overlay\n+{\n+\tprivate final ScreenMarkerPlugin plugin;\n+\tprivate final Client client;\n+\n+\t@Inject\n+\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.client = client;\n+\t\tsetPosition(OverlayPosition.DETACHED);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t\tsetPriority(OverlayPriority.HIGH);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(Graphics2D graphics)\n+\t{\n+\t\tif (plugin.isCreatingScreenMarker())\n+\t\t{\n+\t\t\tif (client.isMenuOpen())\n+\t\t\t{\n+\t\t\t\tplugin.setSelectedWidgetBounds(null);\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tMenuEntry[] menuEntries = client.getMenuEntries();\n+\n+\t\t\tint last = menuEntries.length - 1;\n+\t\t\tif (last < 0)\n+\t\t\t{\n+\t\t\t\tplugin.setSelectedWidgetBounds(null);\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tMenuEntry menuEntry = menuEntries[last];\n+\t\t\tfinal int widgetId = menuEntry.getParam1();\n+\t\t\tfinal int groupId = WidgetInfo.TO_GROUP(widgetId);\n+\t\t\tfinal int childId = WidgetInfo.TO_CHILD(widgetId);\n+\n+\t\t\tWidget widget = client.getWidget(groupId, childId);", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\nindex f0bc941fc..235ff0aef 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n\n@@ -42,13 +42,13 @@ import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n \n @Slf4j\n-class ScreenMarkerWidgetHighlight extends Overlay\n+class ScreenMarkerWidgetHighlightOverlay extends Overlay\n {\n \tprivate final ScreenMarkerPlugin plugin;\n \tprivate final Client client;\n \n \t@Inject\n-\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\tprivate ScreenMarkerWidgetHighlightOverlay(final ScreenMarkerPlugin plugin, final Client client)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.client = client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNzMyMg==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424037322", "bodyText": "final", "author": "deathbeam", "createdAt": "2020-05-12T21:13:37Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j\n+class ScreenMarkerWidgetHighlight extends Overlay\n+{\n+\tprivate final ScreenMarkerPlugin plugin;\n+\tprivate final Client client;\n+\n+\t@Inject\n+\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.client = client;\n+\t\tsetPosition(OverlayPosition.DETACHED);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t\tsetPriority(OverlayPriority.HIGH);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(Graphics2D graphics)\n+\t{\n+\t\tif (plugin.isCreatingScreenMarker())\n+\t\t{\n+\t\t\tif (client.isMenuOpen())\n+\t\t\t{\n+\t\t\t\tplugin.setSelectedWidgetBounds(null);\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tMenuEntry[] menuEntries = client.getMenuEntries();\n+\n+\t\t\tint last = menuEntries.length - 1;\n+\t\t\tif (last < 0)\n+\t\t\t{\n+\t\t\t\tplugin.setSelectedWidgetBounds(null);\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tMenuEntry menuEntry = menuEntries[last];", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\nindex f0bc941fc..235ff0aef 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n\n@@ -42,13 +42,13 @@ import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n \n @Slf4j\n-class ScreenMarkerWidgetHighlight extends Overlay\n+class ScreenMarkerWidgetHighlightOverlay extends Overlay\n {\n \tprivate final ScreenMarkerPlugin plugin;\n \tprivate final Client client;\n \n \t@Inject\n-\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\tprivate ScreenMarkerWidgetHighlightOverlay(final ScreenMarkerPlugin plugin, final Client client)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.client = client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNzM4Mg==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424037382", "bodyText": "final", "author": "deathbeam", "createdAt": "2020-05-12T21:13:44Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j\n+class ScreenMarkerWidgetHighlight extends Overlay\n+{\n+\tprivate final ScreenMarkerPlugin plugin;\n+\tprivate final Client client;\n+\n+\t@Inject\n+\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.client = client;\n+\t\tsetPosition(OverlayPosition.DETACHED);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t\tsetPriority(OverlayPriority.HIGH);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(Graphics2D graphics)\n+\t{\n+\t\tif (plugin.isCreatingScreenMarker())\n+\t\t{\n+\t\t\tif (client.isMenuOpen())\n+\t\t\t{\n+\t\t\t\tplugin.setSelectedWidgetBounds(null);\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tMenuEntry[] menuEntries = client.getMenuEntries();\n+\n+\t\t\tint last = menuEntries.length - 1;", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\nindex f0bc941fc..235ff0aef 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n\n@@ -42,13 +42,13 @@ import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n \n @Slf4j\n-class ScreenMarkerWidgetHighlight extends Overlay\n+class ScreenMarkerWidgetHighlightOverlay extends Overlay\n {\n \tprivate final ScreenMarkerPlugin plugin;\n \tprivate final Client client;\n \n \t@Inject\n-\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\tprivate ScreenMarkerWidgetHighlightOverlay(final ScreenMarkerPlugin plugin, final Client client)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.client = client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzNzQwOQ==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424037409", "bodyText": "final", "author": "deathbeam", "createdAt": "2020-05-12T21:13:50Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j\n+class ScreenMarkerWidgetHighlight extends Overlay\n+{\n+\tprivate final ScreenMarkerPlugin plugin;\n+\tprivate final Client client;\n+\n+\t@Inject\n+\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\t{\n+\t\tthis.plugin = plugin;\n+\t\tthis.client = client;\n+\t\tsetPosition(OverlayPosition.DETACHED);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t\tsetPriority(OverlayPriority.HIGH);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(Graphics2D graphics)\n+\t{\n+\t\tif (plugin.isCreatingScreenMarker())\n+\t\t{\n+\t\t\tif (client.isMenuOpen())\n+\t\t\t{\n+\t\t\t\tplugin.setSelectedWidgetBounds(null);\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tMenuEntry[] menuEntries = client.getMenuEntries();", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\nindex f0bc941fc..235ff0aef 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlight.java\n\n@@ -42,13 +42,13 @@ import net.runelite.client.ui.overlay.OverlayPosition;\n import net.runelite.client.ui.overlay.OverlayPriority;\n \n @Slf4j\n-class ScreenMarkerWidgetHighlight extends Overlay\n+class ScreenMarkerWidgetHighlightOverlay extends Overlay\n {\n \tprivate final ScreenMarkerPlugin plugin;\n \tprivate final Client client;\n \n \t@Inject\n-\tprivate ScreenMarkerWidgetHighlight(final ScreenMarkerPlugin plugin, final Client client)\n+\tprivate ScreenMarkerWidgetHighlightOverlay(final ScreenMarkerPlugin plugin, final Client client)\n \t{\n \t\tthis.plugin = plugin;\n \t\tthis.client = client;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzOTY4NA==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424039684", "bodyText": "This is literally same method as startCreation(Point location)", "author": "deathbeam", "createdAt": "2020-05-12T21:18:41Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java", "diffHunk": "@@ -165,6 +175,26 @@ public void setMouseListenerEnabled(boolean enabled)\n \t\t}\n \t}\n \n+\tpublic void createWidgetMarker()", "originalCommit": "e4820d3c2b3637bc13b0b04827f7c6a9bd85dd05", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\nindex 7274e86b2..dbea7cfa0 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n\n@@ -175,27 +178,18 @@ public class ScreenMarkerPlugin extends Plugin\n \t\t}\n \t}\n \n-\tpublic void createWidgetMarker()\n+\tpublic void startCreation(Point location)\n \t{\n+\t\tstartCreation(location, DEFAULT_SIZE);\n+\t\t// Stop the highlighting so we don't get rectangles around widgets while trying to make normal screen markers\n \t\tif (selectedWidgetBounds == null)\n \t\t{\n-\t\t\treturn;\n+\t\t\tdrawing = true;\n \t\t}\n-\t\tcurrentMarker = new ScreenMarker(\n-\t\t\tInstant.now().toEpochMilli(),\n-\t\t\tDEFAULT_MARKER_NAME + \" \" + (screenMarkers.size() + 1),\n-\t\t\tpluginPanel.getSelectedBorderThickness(),\n-\t\t\tpluginPanel.getSelectedColor(),\n-\t\t\tpluginPanel.getSelectedFillColor(),\n-\t\t\ttrue\n-\t\t);\n \n-\t\tstartLocation = new Point(selectedWidgetBounds.x, selectedWidgetBounds.y);\n-\t\toverlay.setPreferredLocation(startLocation);\n-\t\toverlay.setPreferredSize(selectedWidgetBounds.getSize());\n \t}\n \n-\tpublic void startCreation(Point location)\n+\tpublic void startCreation(Point location, Dimension size)\n \t{\n \t\tcurrentMarker = new ScreenMarker(\n \t\t\tInstant.now().toEpochMilli(),\n"}}, {"oid": "69379e3b6305eeaf483a6c8b18493bd167f6515f", "url": "https://github.com/runelite/runelite/commit/69379e3b6305eeaf483a6c8b18493bd167f6515f", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-12T22:06:52Z", "type": "forcePushed"}, {"oid": "fa183bbcc038b2baba2babf26f87ad54b946698c", "url": "https://github.com/runelite/runelite/commit/fa183bbcc038b2baba2babf26f87ad54b946698c", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-12T22:07:46Z", "type": "forcePushed"}, {"oid": "97702a2f13b603b8c553b7c7338c29aceec5f999", "url": "https://github.com/runelite/runelite/commit/97702a2f13b603b8c553b7c7338c29aceec5f999", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-12T22:12:51Z", "type": "forcePushed"}, {"oid": "60a2ccfa08542389c1e7e7be6d159179b11ed9ea", "url": "https://github.com/runelite/runelite/commit/60a2ccfa08542389c1e7e7be6d159179b11ed9ea", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-13T17:22:03Z", "type": "forcePushed"}, {"oid": "e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "url": "https://github.com/runelite/runelite/commit/e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-13T18:18:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODI5MQ==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424708291", "bodyText": "final", "author": "deathbeam", "createdAt": "2020-05-13T20:21:51Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java", "diffHunk": "@@ -45,6 +47,15 @@ public MouseEvent mouseClicked(MouseEvent event)\n \t\t\treturn event;\n \t\t}\n \n+\t\tif (SwingUtilities.isLeftMouseButton(event))\n+\t\t{\n+\t\t\tRectangle bounds = plugin.getSelectedWidgetBounds();", "originalCommit": "e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca5999ae3788363f6762a362c36f1c99099f017", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java\nindex 703215fec..d48d9334a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java\n\n@@ -49,10 +49,10 @@ public class ScreenMarkerMouseListener extends MouseAdapter\n \n \t\tif (SwingUtilities.isLeftMouseButton(event))\n \t\t{\n-\t\t\tRectangle bounds = plugin.getSelectedWidgetBounds();\n+\t\t\tfinal Rectangle bounds = plugin.getSelectedWidgetBounds();\n \t\t\tif (bounds != null)\n \t\t\t{\n-\t\t\t\tplugin.startCreation(new Point(bounds.x, bounds.y), bounds.getSize());\n+\t\t\t\tplugin.startCreation(bounds.getLocation(), bounds.getSize());\n \t\t\t}\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODUwOA==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424708508", "bodyText": "bounds.getLocation()", "author": "deathbeam", "createdAt": "2020-05-13T20:22:19Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java", "diffHunk": "@@ -45,6 +47,15 @@ public MouseEvent mouseClicked(MouseEvent event)\n \t\t\treturn event;\n \t\t}\n \n+\t\tif (SwingUtilities.isLeftMouseButton(event))\n+\t\t{\n+\t\t\tRectangle bounds = plugin.getSelectedWidgetBounds();\n+\t\t\tif (bounds != null)\n+\t\t\t{\n+\t\t\t\tplugin.startCreation(new Point(bounds.x, bounds.y), bounds.getSize());", "originalCommit": "e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca5999ae3788363f6762a362c36f1c99099f017", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java\nindex 703215fec..d48d9334a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerMouseListener.java\n\n@@ -49,10 +49,10 @@ public class ScreenMarkerMouseListener extends MouseAdapter\n \n \t\tif (SwingUtilities.isLeftMouseButton(event))\n \t\t{\n-\t\t\tRectangle bounds = plugin.getSelectedWidgetBounds();\n+\t\t\tfinal Rectangle bounds = plugin.getSelectedWidgetBounds();\n \t\t\tif (bounds != null)\n \t\t\t{\n-\t\t\t\tplugin.startCreation(new Point(bounds.x, bounds.y), bounds.getSize());\n+\t\t\t\tplugin.startCreation(bounds.getLocation(), bounds.getSize());\n \t\t\t}\n \t\t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODc4OA==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424708788", "bodyText": "empty line above", "author": "deathbeam", "createdAt": "2020-05-13T20:22:48Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java", "diffHunk": "@@ -99,13 +103,20 @@\n \tprivate ScreenMarker currentMarker;\n \n \t@Getter\n+\t@Setter\n \tprivate boolean creatingScreenMarker = false;\n+\t@Getter", "originalCommit": "e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca5999ae3788363f6762a362c36f1c99099f017", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\nindex 03a6b91c7..3f8e55d8e 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n\n@@ -105,8 +105,10 @@ public class ScreenMarkerPlugin extends Plugin\n \t@Getter\n \t@Setter\n \tprivate boolean creatingScreenMarker = false;\n+\n \t@Getter\n \tprivate boolean drawing = false;\n+\n \t@Getter\n \t@Setter\n \tprivate Rectangle selectedWidgetBounds = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODg0Mw==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424708843", "bodyText": "empty line above", "author": "deathbeam", "createdAt": "2020-05-13T20:22:55Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java", "diffHunk": "@@ -99,13 +103,20 @@\n \tprivate ScreenMarker currentMarker;\n \n \t@Getter\n+\t@Setter\n \tprivate boolean creatingScreenMarker = false;\n+\t@Getter\n+\tprivate boolean drawing = false;\n+\t@Getter", "originalCommit": "e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca5999ae3788363f6762a362c36f1c99099f017", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\nindex 03a6b91c7..3f8e55d8e 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerPlugin.java\n\n@@ -105,8 +105,10 @@ public class ScreenMarkerPlugin extends Plugin\n \t@Getter\n \t@Setter\n \tprivate boolean creatingScreenMarker = false;\n+\n \t@Getter\n \tprivate boolean drawing = false;\n+\n \t@Getter\n \t@Setter\n \tprivate Rectangle selectedWidgetBounds = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwOTY2Ng==", "url": "https://github.com/runelite/runelite/pull/11552#discussion_r424709666", "bodyText": "You are not logging anything", "author": "deathbeam", "createdAt": "2020-05-13T20:24:28Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlightOverlay.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright (c) 2018, Jasper <Jasper0781@gmail.com>\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.screenmarkers;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.api.Client;\n+import net.runelite.api.MenuEntry;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.api.widgets.WidgetItem;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.OverlayPriority;\n+\n+@Slf4j", "originalCommit": "e344f56de2984c4b024a7b2d33e6f13f26bf37ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ca5999ae3788363f6762a362c36f1c99099f017", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlightOverlay.java b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlightOverlay.java\nindex 235ff0aef..a336aebee 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlightOverlay.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/screenmarkers/ScreenMarkerWidgetHighlightOverlay.java\n\n@@ -30,7 +30,6 @@ import java.awt.Dimension;\n import java.awt.Graphics2D;\n import java.awt.Rectangle;\n import javax.inject.Inject;\n-import lombok.extern.slf4j.Slf4j;\n import net.runelite.api.Client;\n import net.runelite.api.MenuEntry;\n import net.runelite.api.widgets.Widget;\n"}}, {"oid": "7ca5999ae3788363f6762a362c36f1c99099f017", "url": "https://github.com/runelite/runelite/commit/7ca5999ae3788363f6762a362c36f1c99099f017", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-13T20:27:33Z", "type": "forcePushed"}, {"oid": "a1aca588d7112b08f807a60c84b19c01b67fd219", "url": "https://github.com/runelite/runelite/commit/a1aca588d7112b08f807a60c84b19c01b67fd219", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-13T20:28:49Z", "type": "forcePushed"}, {"oid": "30a97ee69dc3e068c7a49c416d206afe3fc24cb7", "url": "https://github.com/runelite/runelite/commit/30a97ee69dc3e068c7a49c416d206afe3fc24cb7", "message": "screenmarker: add ability to put screen markers around widgets\nGives you the ability to put a screen marker around a widget that has a menu option attached to it\n\nCo-authored-by: Jasper Ketelaar <Jasperketelaar@kpnmail.nl>", "committedDate": "2020-05-22T07:52:06Z", "type": "commit"}, {"oid": "4c325bc65ae6c8261af0703a2091822379b71b2d", "url": "https://github.com/runelite/runelite/commit/4c325bc65ae6c8261af0703a2091822379b71b2d", "message": "Cleanup & fixes\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-05-22T08:19:34Z", "type": "commit"}, {"oid": "4c325bc65ae6c8261af0703a2091822379b71b2d", "url": "https://github.com/runelite/runelite/commit/4c325bc65ae6c8261af0703a2091822379b71b2d", "message": "Cleanup & fixes\n\nSigned-off-by: Tomas Slusny <slusnucky@gmail.com>", "committedDate": "2020-05-22T08:19:34Z", "type": "forcePushed"}]}