{"pr_number": 11358, "pr_title": "client session manager: fix shutdown race deleting a null session", "pr_createdAt": "2020-04-24T03:21:06Z", "pr_url": "https://github.com/runelite/runelite/pull/11358", "timeline": [{"oid": "ec994cbee037057423c008711c5b85ccfdf881ea", "url": "https://github.com/runelite/runelite/commit/ec994cbee037057423c008711c5b85ccfdf881ea", "message": "Preventing ClientSessionManager from calling onClinetShutdown\nmultiple times.", "committedDate": "2020-04-24T03:25:15Z", "type": "forcePushed"}, {"oid": "65f65e4b32058d7c03fe1dafff24d72ba268e81f", "url": "https://github.com/runelite/runelite/commit/65f65e4b32058d7c03fe1dafff24d72ba268e81f", "message": "Preventing ClientSessionManager from calling onClinetShutdown\nmultiple times.", "committedDate": "2020-04-24T03:41:59Z", "type": "forcePushed"}, {"oid": "ea6a83bd7a9c3a6c353ec2afb442432529a8dd7b", "url": "https://github.com/runelite/runelite/commit/ea6a83bd7a9c3a6c353ec2afb442432529a8dd7b", "message": "Keep from calling onClientShutdown with null sessionId\n\nCalling onClientShutdown twice will always have a null session ID and so\nwill throw a null pointer exception. Adding a check to the beginning of\nonClientShutdown to return early if sessionId is null.", "committedDate": "2020-04-24T04:13:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNjY5OA==", "url": "https://github.com/runelite/runelite/pull/11358#discussion_r414726698", "bodyText": "this null check should be down next to the delete call", "author": "Adam-", "createdAt": "2020-04-24T17:02:20Z", "path": "runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java", "diffHunk": "@@ -75,6 +75,11 @@ public void start()\n \t@Subscribe\r\n \tprivate void onClientShutdown(ClientShutdown e)\r\n \t{\r\n+\t\tif (sessionId == null)\r", "originalCommit": "ea6a83bd7a9c3a6c353ec2afb442432529a8dd7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "14123c5e087ba3c91ff51916287b3cb18bc45516", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java b/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\nindex d42077e63..c1cb0b259 100644\n--- a/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\n+++ b/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\n\n@@ -75,18 +75,16 @@ public class ClientSessionManager\n \t@Subscribe\n \tprivate void onClientShutdown(ClientShutdown e)\n \t{\n-\t\tif (sessionId == null)\n-\t\t{\n-\t\t\treturn;\n-\t\t}\n-\n \t\tscheduledFuture.cancel(true);\n \n \t\te.waitFor(executorService.submit(() ->\n \t\t{\n \t\t\ttry\n \t\t\t{\n-\t\t\t\tsessionClient.delete(sessionId);\n+\t\t\t\tif (sessionId != null)\n+\t\t\t\t{\n+\t\t\t\t\tsessionClient.delete(sessionId);\n+\t\t\t\t}\n \t\t\t}\n \t\t\tcatch (IOException ex)\n \t\t\t{\n"}}, {"oid": "14123c5e087ba3c91ff51916287b3cb18bc45516", "url": "https://github.com/runelite/runelite/commit/14123c5e087ba3c91ff51916287b3cb18bc45516", "message": "Keep from calling onClientShutdown with null sessionId\n\nCalling onClientShutdown twice will always have a null session ID and so\nwill throw a null pointer exception. Adding a check to the beginning of\nonClientShutdown to return early if sessionId is null.", "committedDate": "2020-04-24T17:13:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3MzE2OQ==", "url": "https://github.com/runelite/runelite/pull/11358#discussion_r414773169", "bodyText": "There are potentially ~3 threads here (event, which comes in on EDT?), this thread, and the thread executing ping, so this is not thread safe. You should make a local reference to sessionId and then use that.", "author": "Adam-", "createdAt": "2020-04-24T18:19:14Z", "path": "runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java", "diffHunk": "@@ -81,7 +81,10 @@ private void onClientShutdown(ClientShutdown e)\n \t\t{\r\n \t\t\ttry\r\n \t\t\t{\r\n-\t\t\t\tsessionClient.delete(sessionId);\r\n+\t\t\t\tif (sessionId != null)\r", "originalCommit": "14123c5e087ba3c91ff51916287b3cb18bc45516", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNTAwNg==", "url": "https://github.com/runelite/runelite/pull/11358#discussion_r414835006", "bodyText": "Good catch, I hadn't thought of the threaded nature of this.", "author": "Doxterpepper", "createdAt": "2020-04-24T20:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3MzE2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f85a49d4c2d141f823a2084f5fbc96fb97c3973a", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java b/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\nindex c1cb0b259..24a66136a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\n+++ b/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\n\n@@ -81,7 +81,8 @@ public class ClientSessionManager\n \t\t{\n \t\t\ttry\n \t\t\t{\n-\t\t\t\tif (sessionId != null)\n+\t\t\t\tUUID localUuid = sessionId;\n+\t\t\t\tif (localUuid != null)\n \t\t\t\t{\n \t\t\t\t\tsessionClient.delete(sessionId);\n \t\t\t\t}\n"}}, {"oid": "f85a49d4c2d141f823a2084f5fbc96fb97c3973a", "url": "https://github.com/runelite/runelite/commit/f85a49d4c2d141f823a2084f5fbc96fb97c3973a", "message": "Keep from calling onClientShutdown with null sessionId\n\nCalling onClientShutdown twice will always have a null session ID and so\nwill throw a null pointer exception. Adding a check to the beginning of\nonClientShutdown to return early if sessionId is null.", "committedDate": "2020-04-24T19:53:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNDA1NA==", "url": "https://github.com/runelite/runelite/pull/11358#discussion_r414904054", "bodyText": "this should be localUuid", "author": "Adam-", "createdAt": "2020-04-24T22:46:49Z", "path": "runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java", "diffHunk": "@@ -81,7 +81,11 @@ private void onClientShutdown(ClientShutdown e)\n \t\t{\r\n \t\t\ttry\r\n \t\t\t{\r\n-\t\t\t\tsessionClient.delete(sessionId);\r\n+\t\t\t\tUUID localUuid = sessionId;\r\n+\t\t\t\tif (localUuid != null)\r\n+\t\t\t\t{\r\n+\t\t\t\t\tsessionClient.delete(sessionId);\r", "originalCommit": "f85a49d4c2d141f823a2084f5fbc96fb97c3973a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "498b720e4a6d75e0f5ed3de134bcb65418447bee", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java b/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\nindex 24a66136a..5009bd509 100644\n--- a/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\n+++ b/runelite-client/src/main/java/net/runelite/client/ClientSessionManager.java\n\n@@ -84,7 +84,7 @@ public class ClientSessionManager\n \t\t\t\tUUID localUuid = sessionId;\n \t\t\t\tif (localUuid != null)\n \t\t\t\t{\n-\t\t\t\t\tsessionClient.delete(sessionId);\n+\t\t\t\t\tsessionClient.delete(localUuid);\n \t\t\t\t}\n \t\t\t}\n \t\t\tcatch (IOException ex)\n"}}, {"oid": "498b720e4a6d75e0f5ed3de134bcb65418447bee", "url": "https://github.com/runelite/runelite/commit/498b720e4a6d75e0f5ed3de134bcb65418447bee", "message": "Keep from calling onClientShutdown with null sessionId\n\nCalling onClientShutdown twice will always have a null session ID and so\nwill throw a null pointer exception. Adding a check to the beginning of\nonClientShutdown to return early if sessionId is null.", "committedDate": "2020-04-24T22:48:33Z", "type": "commit"}, {"oid": "498b720e4a6d75e0f5ed3de134bcb65418447bee", "url": "https://github.com/runelite/runelite/commit/498b720e4a6d75e0f5ed3de134bcb65418447bee", "message": "Keep from calling onClientShutdown with null sessionId\n\nCalling onClientShutdown twice will always have a null session ID and so\nwill throw a null pointer exception. Adding a check to the beginning of\nonClientShutdown to return early if sessionId is null.", "committedDate": "2020-04-24T22:48:33Z", "type": "forcePushed"}]}