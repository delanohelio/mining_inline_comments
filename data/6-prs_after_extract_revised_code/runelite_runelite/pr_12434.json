{"pr_number": 12434, "pr_title": "Feature: Pet list chat command", "pr_createdAt": "2020-09-02T00:19:08Z", "pr_url": "https://github.com/runelite/runelite/pull/12434", "timeline": [{"oid": "5ff1936cb18d9972ace58186bcead8b7020acf90", "url": "https://github.com/runelite/runelite/commit/5ff1936cb18d9972ace58186bcead8b7020acf90", "message": "Initial commit", "committedDate": "2021-01-03T04:00:18Z", "type": "forcePushed"}, {"oid": "d08eb3e659f86e3c256613a5a3953502c6253136", "url": "https://github.com/runelite/runelite/commit/d08eb3e659f86e3c256613a5a3953502c6253136", "message": "Implement !pets chat command", "committedDate": "2021-01-13T01:48:30Z", "type": "forcePushed"}, {"oid": "261ca652f65677020a7fb56796ca44cfbeb5a03d", "url": "https://github.com/runelite/runelite/commit/261ca652f65677020a7fb56796ca44cfbeb5a03d", "message": "Merge branch 'pet-count-cmd' of github.com:IllyaMyshakov/runelite into pet-count-cmd", "committedDate": "2021-01-16T02:30:07Z", "type": "forcePushed"}, {"oid": "d71e5bed0a775e91e9d5fa3e62f7309d3ece1afb", "url": "https://github.com/runelite/runelite/commit/d71e5bed0a775e91e9d5fa3e62f7309d3ece1afb", "message": "Implement !pets chat command", "committedDate": "2021-01-16T02:57:47Z", "type": "forcePushed"}, {"oid": "2c719eef812b0844d2cb5c531f4705ccf6cc6c76", "url": "https://github.com/runelite/runelite/commit/2c719eef812b0844d2cb5c531f4705ccf6cc6c76", "message": "!pets - Resurrect PR", "committedDate": "2021-05-04T15:19:57Z", "type": "forcePushed"}, {"oid": "ca75c67cca1d0bbf3605e7b7d5f24a6212b7e77e", "url": "https://github.com/runelite/runelite/commit/ca75c67cca1d0bbf3605e7b7d5f24a6212b7e77e", "message": "!pets - Remove unnecessary stubbings", "committedDate": "2021-05-07T01:21:34Z", "type": "forcePushed"}, {"oid": "0f2318283166d53b3c5d6a87260f02f8f9ecbb4d", "url": "https://github.com/runelite/runelite/commit/0f2318283166d53b3c5d6a87260f02f8f9ecbb4d", "message": "!pets - Add CI tests", "committedDate": "2021-05-07T01:42:53Z", "type": "forcePushed"}, {"oid": "9f0662e933b5a76928911139a0c97a0ae75b88ae", "url": "https://github.com/runelite/runelite/commit/9f0662e933b5a76928911139a0c97a0ae75b88ae", "message": "!pets - Add CI tests", "committedDate": "2021-05-07T02:28:45Z", "type": "forcePushed"}, {"oid": "c3edcfc988f977562b7890d378eeab242582228c", "url": "https://github.com/runelite/runelite/commit/c3edcfc988f977562b7890d378eeab242582228c", "message": "!pets - Add CI tests", "committedDate": "2021-05-07T02:36:21Z", "type": "forcePushed"}, {"oid": "30d4283405a31b11b1352f37a0dba4e3ab7d0845", "url": "https://github.com/runelite/runelite/commit/30d4283405a31b11b1352f37a0dba4e3ab7d0845", "message": "!pets - Add CI tests", "committedDate": "2021-05-07T11:24:57Z", "type": "forcePushed"}, {"oid": "0502014ea124fc8c95d3e4701a8b4a881032b38b", "url": "https://github.com/runelite/runelite/commit/0502014ea124fc8c95d3e4701a8b4a881032b38b", "message": "!pets - Add CI tests", "committedDate": "2021-05-07T14:31:06Z", "type": "forcePushed"}, {"oid": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "url": "https://github.com/runelite/runelite/commit/faecfaac743be4027018dcdc3abf3ca87dac31ed", "message": "!pets - Add CI tests", "committedDate": "2021-05-07T14:56:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY4OTg2Mw==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628689863", "bodyText": "missing break;", "author": "Adam-", "createdAt": "2021-05-08T03:10:33Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java", "diffHunk": "@@ -562,6 +701,9 @@ public void onGameStateChanged(GameStateChanged event)\n \t\t\tcase LOADING:\n \t\t\tcase HOPPING:\n \t\t\t\tpohOwner = null;", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\nindex 3911783b1..b30771b80 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n\n@@ -701,6 +674,7 @@ public class ChatCommandsPlugin extends Plugin\n \t\t\tcase LOADING:\n \t\t\tcase HOPPING:\n \t\t\t\tpohOwner = null;\n+\t\t\t\tbreak;\n \t\t\tcase LOGGED_IN:\n \t\t\t\tloadPetIcons();\n \t\t\t\tbreak;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDA0MA==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628690040", "bodyText": "It's possible to look at someone else's collection log in their poh, so this should check that similar to how the boss log checks it.", "author": "Adam-", "createdAt": "2021-05-08T03:11:59Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java", "diffHunk": "@@ -469,6 +585,26 @@ public void onGameTick(GameTick event)\n \t\t\t}\n \t\t}\n \n+\t\tif (collectionLogLoaded)\n+\t\t{\n+\t\t\tWidget collectionLogEntryHeader = client.getWidget(WidgetInfo.COLLECTION_LOG_ENTRY_HEADER);\n+\t\t\tif (collectionLogEntryHeader != null && collectionLogEntryHeader.getChildren() != null)\n+\t\t\t{\n+\t\t\t\tWidget entryTitle = collectionLogEntryHeader.getChild(COL_LOG_ENTRY_HEADER_TITLE_INDEX);\n+\t\t\t\t// Make sure that the player is looking in the All Pets tab of the collection log\n+\t\t\t\tif (entryTitle.getText().equals(\"All Pets\"))", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\nindex 3911783b1..b30771b80 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n\n@@ -585,7 +558,7 @@ public class ChatCommandsPlugin extends Plugin\n \t\t\t}\n \t\t}\n \n-\t\tif (collectionLogLoaded)\n+\t\tif (collectionLogLoaded && (pohOwner == null || pohOwner.equals(client.getLocalPlayer().getName())))\n \t\t{\n \t\t\tWidget collectionLogEntryHeader = client.getWidget(WidgetInfo.COLLECTION_LOG_ENTRY_HEADER);\n \t\t\tif (collectionLogEntryHeader != null && collectionLogEntryHeader.getChildren() != null)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDE5Mg==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628690192", "bodyText": "Typically we inject Gson into the plugin, since is provided by the injector.", "author": "Adam-", "createdAt": "2021-05-08T03:13:12Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java", "diffHunk": "@@ -262,6 +285,99 @@ private double getPb(String boss)\n \t\treturn personalBest == null ? 0 : personalBest;\n \t}\n \n+\tprivate void loadPetIcons()\n+\t{\n+\t\tfinal IndexedSprite[] modIcons = client.getModIcons();\n+\t\tif (modIconIdx != -1 || modIcons == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tfinal Pet[] pets = getPets();\n+\t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n+\t\tmodIconIdx = modIcons.length;\n+\n+\t\tfor (int i = 0; i < pets.length; i++)\n+\t\t{\n+\t\t\tfinal Pet pet = pets[i];\n+\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\tfinal BufferedImage image = ImageUtil.resizeImage(itemManager.getImage(pet.getIcon()), 18, 16);\n+\t\t\t\tfinal IndexedSprite sprite = ImageUtil.getImageIndexedSprite(image, client);\n+\t\t\t\tnewModIcons[modIconIdx + i] = sprite;\n+\t\t\t}\n+\t\t\tcatch (Exception ex)\n+\t\t\t{\n+\t\t\t\tlog.warn(\"Failed to load the sprite for \" + pet.getName(), ex);\n+\t\t\t}\n+\t\t}\n+\n+\t\tlog.debug(\"Adding pet icons\");\n+\t\tclient.setModIcons(newModIcons);\n+\t}\n+\n+\t/**\n+\t * Sets the list of owned pets in local storage for the local player.\n+\t *\n+\t * @param totalPetList The widget containing the list of owned pets for the local player\n+\t */\n+\tprivate void setPetList(Widget[] totalPetList)\n+\t{\n+\t\tif (totalPetList == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tList<Pet> petList = new ArrayList<>();\n+\t\tfor (Widget child : totalPetList)\n+\t\t{\n+\t\t\tif (child.getOpacity() == 0)\n+\t\t\t{\n+\t\t\t\tPet pet = new Pet(\n+\t\t\t\t\tchild.getName().replace(\"<col=ff9040>\", \"\").replace(\"</col>\", \"\"),\n+\t\t\t\t\tchild.getItemId());\n+\t\t\t\tpetList.add(pet);\n+\t\t\t}\n+\t\t}\n+\n+\t\tconfigManager.setRSProfileConfiguration(\"pets\", client.getUsername().toLowerCase(),\n+\t\t\tRuneLiteAPI.GSON.toJson(petList.toArray(new Pet[0])));\n+\t}\n+\n+\t/**\n+\t * Looks up the list of owned pets in local storage for the local player\n+\t */\n+\tprivate Pet[] getPetList()\n+\t{\n+\t\tString petListJson = configManager.getRSProfileConfiguration(\"pets\",\n+\t\t\tclient.getUsername().toLowerCase(), String.class);\n+\n+\t\tPet[] petList = RuneLiteAPI.GSON.fromJson(petListJson, Pet[].class);", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\nindex 3911783b1..b30771b80 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n\n@@ -292,7 +292,7 @@ public class ChatCommandsPlugin extends Plugin\n \t\t{\n \t\t\treturn;\n \t\t}\n-\t\tfinal Pet[] pets = getPets();\n+\t\tfinal Pet[] pets = Pet.values();\n \t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n \t\tmodIconIdx = modIcons.length;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDM2Mg==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628690362", "bodyText": "RSProfileConfiguration is already per RS-profile, so it is not necessary to set the key to the client username. I would probably just use chatcommands as the group and pets as the key.", "author": "Adam-", "createdAt": "2021-05-08T03:14:35Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java", "diffHunk": "@@ -262,6 +285,99 @@ private double getPb(String boss)\n \t\treturn personalBest == null ? 0 : personalBest;\n \t}\n \n+\tprivate void loadPetIcons()\n+\t{\n+\t\tfinal IndexedSprite[] modIcons = client.getModIcons();\n+\t\tif (modIconIdx != -1 || modIcons == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tfinal Pet[] pets = getPets();\n+\t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n+\t\tmodIconIdx = modIcons.length;\n+\n+\t\tfor (int i = 0; i < pets.length; i++)\n+\t\t{\n+\t\t\tfinal Pet pet = pets[i];\n+\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\tfinal BufferedImage image = ImageUtil.resizeImage(itemManager.getImage(pet.getIcon()), 18, 16);\n+\t\t\t\tfinal IndexedSprite sprite = ImageUtil.getImageIndexedSprite(image, client);\n+\t\t\t\tnewModIcons[modIconIdx + i] = sprite;\n+\t\t\t}\n+\t\t\tcatch (Exception ex)\n+\t\t\t{\n+\t\t\t\tlog.warn(\"Failed to load the sprite for \" + pet.getName(), ex);\n+\t\t\t}\n+\t\t}\n+\n+\t\tlog.debug(\"Adding pet icons\");\n+\t\tclient.setModIcons(newModIcons);\n+\t}\n+\n+\t/**\n+\t * Sets the list of owned pets in local storage for the local player.\n+\t *\n+\t * @param totalPetList The widget containing the list of owned pets for the local player\n+\t */\n+\tprivate void setPetList(Widget[] totalPetList)\n+\t{\n+\t\tif (totalPetList == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tList<Pet> petList = new ArrayList<>();\n+\t\tfor (Widget child : totalPetList)\n+\t\t{\n+\t\t\tif (child.getOpacity() == 0)\n+\t\t\t{\n+\t\t\t\tPet pet = new Pet(\n+\t\t\t\t\tchild.getName().replace(\"<col=ff9040>\", \"\").replace(\"</col>\", \"\"),\n+\t\t\t\t\tchild.getItemId());\n+\t\t\t\tpetList.add(pet);\n+\t\t\t}\n+\t\t}\n+\n+\t\tconfigManager.setRSProfileConfiguration(\"pets\", client.getUsername().toLowerCase(),", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\nindex 3911783b1..b30771b80 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n\n@@ -292,7 +292,7 @@ public class ChatCommandsPlugin extends Plugin\n \t\t{\n \t\t\treturn;\n \t\t}\n-\t\tfinal Pet[] pets = getPets();\n+\t\tfinal Pet[] pets = Pet.values();\n \t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n \t\tmodIconIdx = modIcons.length;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDQwOQ==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628690409", "bodyText": "see Text.removeTags", "author": "Adam-", "createdAt": "2021-05-08T03:14:57Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java", "diffHunk": "@@ -262,6 +285,99 @@ private double getPb(String boss)\n \t\treturn personalBest == null ? 0 : personalBest;\n \t}\n \n+\tprivate void loadPetIcons()\n+\t{\n+\t\tfinal IndexedSprite[] modIcons = client.getModIcons();\n+\t\tif (modIconIdx != -1 || modIcons == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tfinal Pet[] pets = getPets();\n+\t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n+\t\tmodIconIdx = modIcons.length;\n+\n+\t\tfor (int i = 0; i < pets.length; i++)\n+\t\t{\n+\t\t\tfinal Pet pet = pets[i];\n+\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\tfinal BufferedImage image = ImageUtil.resizeImage(itemManager.getImage(pet.getIcon()), 18, 16);\n+\t\t\t\tfinal IndexedSprite sprite = ImageUtil.getImageIndexedSprite(image, client);\n+\t\t\t\tnewModIcons[modIconIdx + i] = sprite;\n+\t\t\t}\n+\t\t\tcatch (Exception ex)\n+\t\t\t{\n+\t\t\t\tlog.warn(\"Failed to load the sprite for \" + pet.getName(), ex);\n+\t\t\t}\n+\t\t}\n+\n+\t\tlog.debug(\"Adding pet icons\");\n+\t\tclient.setModIcons(newModIcons);\n+\t}\n+\n+\t/**\n+\t * Sets the list of owned pets in local storage for the local player.\n+\t *\n+\t * @param totalPetList The widget containing the list of owned pets for the local player\n+\t */\n+\tprivate void setPetList(Widget[] totalPetList)\n+\t{\n+\t\tif (totalPetList == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tList<Pet> petList = new ArrayList<>();\n+\t\tfor (Widget child : totalPetList)\n+\t\t{\n+\t\t\tif (child.getOpacity() == 0)\n+\t\t\t{\n+\t\t\t\tPet pet = new Pet(\n+\t\t\t\t\tchild.getName().replace(\"<col=ff9040>\", \"\").replace(\"</col>\", \"\"),", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\nindex 3911783b1..b30771b80 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n\n@@ -292,7 +292,7 @@ public class ChatCommandsPlugin extends Plugin\n \t\t{\n \t\t\treturn;\n \t\t}\n-\t\tfinal Pet[] pets = getPets();\n+\t\tfinal Pet[] pets = Pet.values();\n \t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n \t\tmodIconIdx = modIcons.length;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDU2OA==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628690568", "bodyText": "What is this for? Does anything here throw?", "author": "Adam-", "createdAt": "2021-05-08T03:16:02Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java", "diffHunk": "@@ -262,6 +285,99 @@ private double getPb(String boss)\n \t\treturn personalBest == null ? 0 : personalBest;\n \t}\n \n+\tprivate void loadPetIcons()\n+\t{\n+\t\tfinal IndexedSprite[] modIcons = client.getModIcons();\n+\t\tif (modIconIdx != -1 || modIcons == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\t\tfinal Pet[] pets = getPets();\n+\t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n+\t\tmodIconIdx = modIcons.length;\n+\n+\t\tfor (int i = 0; i < pets.length; i++)\n+\t\t{\n+\t\t\tfinal Pet pet = pets[i];\n+\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\tfinal BufferedImage image = ImageUtil.resizeImage(itemManager.getImage(pet.getIcon()), 18, 16);\n+\t\t\t\tfinal IndexedSprite sprite = ImageUtil.getImageIndexedSprite(image, client);\n+\t\t\t\tnewModIcons[modIconIdx + i] = sprite;\n+\t\t\t}\n+\t\t\tcatch (Exception ex)", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODgwMDM1Ng==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628800356", "bodyText": "As this was pulled directly from how the Emoji plugin works, the try catch was originally for if loading one of the png files failed. Good catch, will remove", "author": "IllyaMyshakov", "createdAt": "2021-05-08T21:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\nindex 3911783b1..b30771b80 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java\n\n@@ -292,7 +292,7 @@ public class ChatCommandsPlugin extends Plugin\n \t\t{\n \t\t\treturn;\n \t\t}\n-\t\tfinal Pet[] pets = getPets();\n+\t\tfinal Pet[] pets = Pet.values();\n \t\tfinal IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + pets.length);\n \t\tmodIconIdx = modIcons.length;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MDY0MQ==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628690641", "bodyText": "See @Data", "author": "Adam-", "createdAt": "2021-05-08T03:16:38Z", "path": "http-api/src/main/java/net/runelite/http/api/chat/Pet.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright (c) 2021, Illya Myshakov <https://github.com/IllyaMyshakov>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.chat;\n+\n+import java.util.Objects;\n+import lombok.Getter;\n+\n+@Getter", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/http-api/src/main/java/net/runelite/http/api/chat/Pet.java b/http-api/src/main/java/net/runelite/http/api/chat/Pet.java\ndeleted file mode 100644\nindex f95944de8..000000000\n--- a/http-api/src/main/java/net/runelite/http/api/chat/Pet.java\n+++ /dev/null\n\n@@ -1,71 +0,0 @@\n-/*\n- * Copyright (c) 2021, Illya Myshakov <https://github.com/IllyaMyshakov>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-package net.runelite.http.api.chat;\n-\n-import java.util.Objects;\n-import lombok.Getter;\n-\n-@Getter\n-public class Pet\n-{\n-\tprivate final String name;\n-\tprivate final Integer icon;\n-\n-\tpublic Pet(String name, Integer icon)\n-\t{\n-\t\tthis.name = name;\n-\t\tthis.icon = icon;\n-\t}\n-\n-\t@Override\n-\tpublic String toString()\n-\t{\n-\t\treturn \"Pet{\" +\n-\t\t\t\"name='\" + name + '\\'' +\n-\t\t\t\", icon=\" + icon +\n-\t\t\t'}';\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object o)\n-\t{\n-\t\tif (this == o)\n-\t\t{\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (o == null || getClass() != o.getClass())\n-\t\t{\n-\t\t\treturn false;\n-\t\t}\n-\t\tPet pet = (Pet) o;\n-\t\treturn Objects.equals(name, pet.name) && Objects.equals(icon, pet.icon);\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode()\n-\t{\n-\t\treturn Objects.hash(name, icon);\n-\t}\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODY5MTAzMw==", "url": "https://github.com/runelite/runelite/pull/12434#discussion_r628691033", "bodyText": "Classes are placed in http-api if they are used in both runelite-client and http-service as part of the client <-> service communication, as its classpath is available in both modules. However, you are not using this in http-service, which means this class is in the wrong place.", "author": "Adam-", "createdAt": "2021-05-08T03:21:29Z", "path": "http-api/src/main/java/net/runelite/http/api/chat/Pet.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright (c) 2021, Illya Myshakov <https://github.com/IllyaMyshakov>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.chat;\n+\n+import java.util.Objects;\n+import lombok.Getter;\n+\n+@Getter\n+public class Pet", "originalCommit": "faecfaac743be4027018dcdc3abf3ca87dac31ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "chunk": "diff --git a/http-api/src/main/java/net/runelite/http/api/chat/Pet.java b/http-api/src/main/java/net/runelite/http/api/chat/Pet.java\ndeleted file mode 100644\nindex f95944de8..000000000\n--- a/http-api/src/main/java/net/runelite/http/api/chat/Pet.java\n+++ /dev/null\n\n@@ -1,71 +0,0 @@\n-/*\n- * Copyright (c) 2021, Illya Myshakov <https://github.com/IllyaMyshakov>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-package net.runelite.http.api.chat;\n-\n-import java.util.Objects;\n-import lombok.Getter;\n-\n-@Getter\n-public class Pet\n-{\n-\tprivate final String name;\n-\tprivate final Integer icon;\n-\n-\tpublic Pet(String name, Integer icon)\n-\t{\n-\t\tthis.name = name;\n-\t\tthis.icon = icon;\n-\t}\n-\n-\t@Override\n-\tpublic String toString()\n-\t{\n-\t\treturn \"Pet{\" +\n-\t\t\t\"name='\" + name + '\\'' +\n-\t\t\t\", icon=\" + icon +\n-\t\t\t'}';\n-\t}\n-\n-\t@Override\n-\tpublic boolean equals(Object o)\n-\t{\n-\t\tif (this == o)\n-\t\t{\n-\t\t\treturn true;\n-\t\t}\n-\t\tif (o == null || getClass() != o.getClass())\n-\t\t{\n-\t\t\treturn false;\n-\t\t}\n-\t\tPet pet = (Pet) o;\n-\t\treturn Objects.equals(name, pet.name) && Objects.equals(icon, pet.icon);\n-\t}\n-\n-\t@Override\n-\tpublic int hashCode()\n-\t{\n-\t\treturn Objects.hash(name, icon);\n-\t}\n-}\n"}}, {"oid": "95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "url": "https://github.com/runelite/runelite/commit/95b04cbbec0ef05d6ef9ba683315a01f36b17f6d", "message": "!pets - Address nits", "committedDate": "2021-05-09T01:38:31Z", "type": "forcePushed"}, {"oid": "ddc01f20423b4c92d86b72cb2af228a7e9addc29", "url": "https://github.com/runelite/runelite/commit/ddc01f20423b4c92d86b72cb2af228a7e9addc29", "message": "!pets - Add CI tests, and address nits", "committedDate": "2021-05-09T01:55:51Z", "type": "forcePushed"}, {"oid": "9c1433da2cb370541df1ee5ef0cbc3f48ae1e351", "url": "https://github.com/runelite/runelite/commit/9c1433da2cb370541df1ee5ef0cbc3f48ae1e351", "message": "!pets - Add pet list update logic", "committedDate": "2021-05-10T23:40:41Z", "type": "forcePushed"}, {"oid": "8a5c0ef300b56bbd9c582dbe7dc58da600d3b0e9", "url": "https://github.com/runelite/runelite/commit/8a5c0ef300b56bbd9c582dbe7dc58da600d3b0e9", "message": "!pets - Move Pet class back into plugin", "committedDate": "2021-05-12T01:18:25Z", "type": "forcePushed"}, {"oid": "9e8831150fda10da0c8bb6ff5d8738ddba44e37c", "url": "https://github.com/runelite/runelite/commit/9e8831150fda10da0c8bb6ff5d8738ddba44e37c", "message": "!pets - Move Pet class back into plugin", "committedDate": "2021-05-12T01:27:53Z", "type": "forcePushed"}, {"oid": "ca67b01041c3127e0c97f63021d8e348848ed922", "url": "https://github.com/runelite/runelite/commit/ca67b01041c3127e0c97f63021d8e348848ed922", "message": "chat commands: add pets command\n\nCo-authored-by: Illya Myshakov <imyshako@uwaterloo.ca>", "committedDate": "2021-07-16T21:11:42Z", "type": "forcePushed"}, {"oid": "407eb8e49509470038b985da1b4410f337a94e72", "url": "https://github.com/runelite/runelite/commit/407eb8e49509470038b985da1b4410f337a94e72", "message": "chat commands: add pets command\n\nCo-authored-by: Illya Myshakov <imyshako@uwaterloo.ca>", "committedDate": "2021-07-16T22:00:10Z", "type": "forcePushed"}, {"oid": "39a9f62671024262bc1a9160add3b8b1dccc33fd", "url": "https://github.com/runelite/runelite/commit/39a9f62671024262bc1a9160add3b8b1dccc33fd", "message": "chat commands: add pets command\n\nCo-authored-by: Illya Myshakov <imyshako@uwaterloo.ca>", "committedDate": "2021-07-16T23:16:11Z", "type": "commit"}, {"oid": "39a9f62671024262bc1a9160add3b8b1dccc33fd", "url": "https://github.com/runelite/runelite/commit/39a9f62671024262bc1a9160add3b8b1dccc33fd", "message": "chat commands: add pets command\n\nCo-authored-by: Illya Myshakov <imyshako@uwaterloo.ca>", "committedDate": "2021-07-16T23:16:11Z", "type": "forcePushed"}]}