{"pr_number": 11226, "pr_title": "Agility: Course laps per hour display", "pr_createdAt": "2020-04-08T13:46:32Z", "pr_url": "https://github.com/runelite/runelite/pull/11226", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNzczNw==", "url": "https://github.com/runelite/runelite/pull/11226#discussion_r406507737", "bodyText": "You can simplify this to something like:\n\t\tInstant now = Instant.now();\n\n\t\tif (lastLapCompleted != null)\n\t\t{\n\t\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\n\n\t\t\tif (!timeSinceLastLap.isNegative())\n\t\t\t{\n\t\t\t\tlastLapTimes.add(timeSinceLastLap);\n\n\t\t\t\tDuration sum = Duration.ofSeconds(0);\n\t\t\t\tfor (Duration lapTime : lastLapTimes)\n\t\t\t\t{\n\t\t\t\t\tsum = sum.plus(lapTime);\n\t\t\t\t}\n\n\t\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\n\t\t\t\tlapsPerHour = Duration.ofHours(1).toMillis() / averageLapTime.toMillis();\n\t\t\t}\n\t\t}\n\n\t\tlastLapCompleted = now;", "author": "Adam-", "createdAt": "2020-04-09T22:15:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java", "diffHunk": "@@ -64,6 +70,37 @@ void incrementLapCount(Client client, XpTrackerService xpTrackerService)\n \t\tlapsTillGoal = goalRemainingXp > 0 ? (int) Math.ceil(goalRemainingXp / courseTotalExp) : 0;\n \t}\n \n+\tvoid calculateLapsPerHour()\n+\t{\n+\t\tInstant now = Instant.now();", "originalCommit": "7fe6bd20189873283cdf6710f7069a6b3af7c1a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyNTYzOQ==", "url": "https://github.com/runelite/runelite/pull/11226#discussion_r406525639", "bodyText": "That is better, I have fixed this", "author": "petter", "createdAt": "2020-04-09T23:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNzczNw=="}], "type": "inlineReview", "revised_code": {"commit": "5f6b34003ca6dc5f3eaa37a50823b162f00a591e", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java b/runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java\nindex 59651e835..ea466a1c5 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java\n\n@@ -74,28 +73,23 @@ class AgilitySession\n \t{\n \t\tInstant now = Instant.now();\n \n-\t\tif (lastLapCompleted == null)\n+\t\tif (lastLapCompleted != null)\n \t\t{\n-\t\t\tlastLapCompleted = now;\n-\t\t}\n+\t\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\n \n-\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\n+\t\t\tif (!timeSinceLastLap.isNegative())\n+\t\t\t{\n+\t\t\t\tlastLapTimes.add(timeSinceLastLap);\n \n-\t\tif (!timeSinceLastLap.isZero())\n-\t\t{\n-\t\t\tlastLapTimes.add(timeSinceLastLap);\n-\t\t}\n+\t\t\t\tDuration sum = Duration.ZERO;\n+\t\t\t\tfor (Duration lapTime : lastLapTimes)\n+\t\t\t\t{\n+\t\t\t\t\tsum = sum.plus(lapTime);\n+\t\t\t\t}\n \n-\t\tif (!lastLapTimes.isEmpty())\n-\t\t{\n-\t\t\tDuration sum = Duration.ofSeconds(0);\n-\t\t\tfor (Duration lapTime : lastLapTimes)\n-\t\t\t{\n-\t\t\t\tsum = sum.plus(lapTime);\n+\t\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\n+\t\t\t\tlapsPerHour = (int) (Duration.ofHours(1).toMillis() / averageLapTime.toMillis());\n \t\t\t}\n-\n-\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\n-\t\t\tlapsPerHour = Duration.ofHours(1).toMillis() / averageLapTime.toMillis();\n \t\t}\n \n \t\tlastLapCompleted = now;\n"}}, {"oid": "5f6b34003ca6dc5f3eaa37a50823b162f00a591e", "url": "https://github.com/runelite/runelite/commit/5f6b34003ca6dc5f3eaa37a50823b162f00a591e", "message": "agility plugin: add laps per hour to lap counter overlay\n\nCo-authored-by: Adam <Adam@sigterm.info>", "committedDate": "2020-04-22T17:03:06Z", "type": "commit"}]}