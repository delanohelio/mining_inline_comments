{"pr_number": 10944, "pr_title": "chatfilter: add filtering by username", "pr_createdAt": "2020-03-04T02:10:11Z", "pr_url": "https://github.com/runelite/runelite/pull/10944", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjYzMQ==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388046631", "bodyText": "Any reason these can't be the same config?", "author": "raiyni", "createdAt": "2020-03-05T02:26:12Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterConfig.java", "diffHunk": "@@ -65,11 +65,33 @@ default String filteredRegex()\n \t\treturn \"\";\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"filteredNames\",\n+\t\tname = \"Filtered Names\",\n+\t\tdescription = \"List of filtered names, seperated by commas\",\n+\t\tposition = 4\n+\t)\n+\tdefault String filteredNames()\n+\t{\n+\t\treturn \"\";\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"filteredNamesRegex\",\n+\t\tname = \"Filtered Names Regex\",\n+\t\tdescription = \"List of filtered regular expressions for usernames, one per line\",\n+\t\tposition = 5\n+\t)\n+\tdefault String filteredNamesRegex()", "originalCommit": "5c78038bb78f8a4b94242def6ea75c66d07a2041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NzQwMQ==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388047401", "bodyText": "i dont think so, will change", "author": "ThatGamerBlue", "createdAt": "2020-03-05T02:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterConfig.java\nindex ca779934d..dbdb4d647 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterConfig.java\n\n@@ -65,33 +65,11 @@ public interface ChatFilterConfig extends Config\n \t\treturn \"\";\n \t}\n \n-\t@ConfigItem(\n-\t\tkeyName = \"filteredNames\",\n-\t\tname = \"Filtered Names\",\n-\t\tdescription = \"List of filtered names, seperated by commas\",\n-\t\tposition = 4\n-\t)\n-\tdefault String filteredNames()\n-\t{\n-\t\treturn \"\";\n-\t}\n-\n-\t@ConfigItem(\n-\t\tkeyName = \"filteredNamesRegex\",\n-\t\tname = \"Filtered Names Regex\",\n-\t\tdescription = \"List of filtered regular expressions for usernames, one per line\",\n-\t\tposition = 5\n-\t)\n-\tdefault String filteredNamesRegex()\n-\t{\n-\t\treturn \"\";\n-\t}\n-\n \t@ConfigItem(\n \t\tkeyName = \"filterFriends\",\n \t\tname = \"Filter Friends\",\n \t\tdescription = \"Filter your friends' messages\",\n-\t\tposition = 6\n+\t\tposition = 4\n \t)\n \tdefault boolean filterFriends()\n \t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDM4Mg==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388074382", "bodyText": "Move the CENSOR_WORDS code to a separate method and use it here and in the filteredPatterns loop.", "author": "Nightfirecat", "createdAt": "2020-03-05T04:37:04Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java", "diffHunk": "@@ -183,10 +185,22 @@ boolean shouldFilterPlayerMessage(String playerName)\n \t\t\t(config.filterClan() || !clanManager.isClanMember(playerName));\n \t}\n \n-\tString censorMessage(final String message)\n+\tString censorMessage(final String username, final String message)\n \t{\n \t\tString strippedMessage = jagexPrintableCharMatcher.retainFrom(message)\n \t\t\t.replace('\\u00A0', ' ');\n+\t\tif (shouldFilterByName(username))\n+\t\t{\n+\t\t\tswitch (config.filterType())\n+\t\t\t{\n+\t\t\t\tcase CENSOR_WORDS:\n+\t\t\t\t\treturn StringUtils.repeat('*', strippedMessage.length());", "originalCommit": "b43fdd5209f4a45370598eac8db96b43a2d3f7ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1MDE0NQ==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388350145", "bodyText": "I think this is fine as-is", "author": "Adam-", "createdAt": "2020-03-05T15:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java\nindex 8d440aca9..fe8fdb18f 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java\n\n@@ -185,22 +183,10 @@ public class ChatFilterPlugin extends Plugin\n \t\t\t(config.filterClan() || !clanManager.isClanMember(playerName));\n \t}\n \n-\tString censorMessage(final String username, final String message)\n+\tString censorMessage(final String message)\n \t{\n \t\tString strippedMessage = jagexPrintableCharMatcher.retainFrom(message)\n \t\t\t.replace('\\u00A0', ' ');\n-\t\tif (shouldFilterByName(username))\n-\t\t{\n-\t\t\tswitch (config.filterType())\n-\t\t\t{\n-\t\t\t\tcase CENSOR_WORDS:\n-\t\t\t\t\treturn StringUtils.repeat('*', strippedMessage.length());\n-\t\t\t\tcase CENSOR_MESSAGE:\n-\t\t\t\t\treturn CENSOR_MESSAGE;\n-\t\t\t\tcase REMOVE_MESSAGE:\n-\t\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n \t\tboolean filtered = false;\n \t\tfor (Pattern pattern : filteredPatterns)\n \t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDUxMw==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388074513", "bodyText": "This can be static\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate Pattern compilePattern(String pattern)\n          \n          \n            \n            \tprivate static Pattern compilePattern(String pattern)", "author": "Nightfirecat", "createdAt": "2020-03-05T04:37:48Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java", "diffHunk": "@@ -219,25 +233,33 @@ String censorMessage(final String message)\n \tvoid updateFilteredPatterns()\n \t{\n \t\tfilteredPatterns.clear();\n+\t\tfilteredNamePatterns.clear();\n \n \t\tText.fromCSV(config.filteredWords()).stream()\n \t\t\t.map(s -> Pattern.compile(Pattern.quote(s), Pattern.CASE_INSENSITIVE))\n \t\t\t.forEach(filteredPatterns::add);\n \n \t\tNEWLINE_SPLITTER.splitToList(config.filteredRegex()).stream()\n-\t\t\t.map(s ->\n-\t\t\t{\n-\t\t\t\ttry\n-\t\t\t\t{\n-\t\t\t\t\treturn Pattern.compile(s, Pattern.CASE_INSENSITIVE);\n-\t\t\t\t}\n-\t\t\t\tcatch (PatternSyntaxException ex)\n-\t\t\t\t{\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t})\n+\t\t\t.map(this::compilePattern)\n \t\t\t.filter(Objects::nonNull)\n \t\t\t.forEach(filteredPatterns::add);\n+\n+\t\tNEWLINE_SPLITTER.splitToList(config.filteredNames()).stream()\n+\t\t\t.map(this::compilePattern)\n+\t\t\t.filter(Objects::nonNull)\n+\t\t\t.forEach(filteredNamePatterns::add);\n+\t}\n+\n+\tprivate Pattern compilePattern(String pattern)", "originalCommit": "b43fdd5209f4a45370598eac8db96b43a2d3f7ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java\nindex 8d440aca9..fe8fdb18f 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java\n\n@@ -233,33 +219,25 @@ public class ChatFilterPlugin extends Plugin\n \tvoid updateFilteredPatterns()\n \t{\n \t\tfilteredPatterns.clear();\n-\t\tfilteredNamePatterns.clear();\n \n \t\tText.fromCSV(config.filteredWords()).stream()\n \t\t\t.map(s -> Pattern.compile(Pattern.quote(s), Pattern.CASE_INSENSITIVE))\n \t\t\t.forEach(filteredPatterns::add);\n \n \t\tNEWLINE_SPLITTER.splitToList(config.filteredRegex()).stream()\n-\t\t\t.map(this::compilePattern)\n+\t\t\t.map(s ->\n+\t\t\t{\n+\t\t\t\ttry\n+\t\t\t\t{\n+\t\t\t\t\treturn Pattern.compile(s, Pattern.CASE_INSENSITIVE);\n+\t\t\t\t}\n+\t\t\t\tcatch (PatternSyntaxException ex)\n+\t\t\t\t{\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t})\n \t\t\t.filter(Objects::nonNull)\n \t\t\t.forEach(filteredPatterns::add);\n-\n-\t\tNEWLINE_SPLITTER.splitToList(config.filteredNames()).stream()\n-\t\t\t.map(this::compilePattern)\n-\t\t\t.filter(Objects::nonNull)\n-\t\t\t.forEach(filteredNamePatterns::add);\n-\t}\n-\n-\tprivate Pattern compilePattern(String pattern)\n-\t{\n-\t\ttry\n-\t\t{\n-\t\t\treturn Pattern.compile(pattern, Pattern.CASE_INSENSITIVE);\n-\t\t}\n-\t\tcatch (PatternSyntaxException ex)\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n \t}\n \n \t@Subscribe\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDc4Ng==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388074786", "bodyText": "Re-use the censor message from plugin. (make it package-private and @VisibleForTesting)", "author": "Nightfirecat", "createdAt": "2020-03-05T04:39:25Z", "path": "runelite-client/src/test/java/net/runelite/client/plugins/chatfilter/ChatFilterPluginTest.java", "diffHunk": "@@ -64,6 +69,8 @@\n \t@Inject\n \tprivate ChatFilterPlugin chatFilterPlugin;\n \n+\tprivate static final String CENSOR_MESSAGE_STRING = \"Hey, everyone, I just tried to say something very silly!\";", "originalCommit": "b43fdd5209f4a45370598eac8db96b43a2d3f7ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "chunk": "diff --git a/runelite-client/src/test/java/net/runelite/client/plugins/chatfilter/ChatFilterPluginTest.java b/runelite-client/src/test/java/net/runelite/client/plugins/chatfilter/ChatFilterPluginTest.java\nindex d2a8c9543..949bac892 100644\n--- a/runelite-client/src/test/java/net/runelite/client/plugins/chatfilter/ChatFilterPluginTest.java\n+++ b/runelite-client/src/test/java/net/runelite/client/plugins/chatfilter/ChatFilterPluginTest.java\n\n@@ -69,8 +64,6 @@ public class ChatFilterPluginTest\n \t@Inject\n \tprivate ChatFilterPlugin chatFilterPlugin;\n \n-\tprivate static final String CENSOR_MESSAGE_STRING = \"Hey, everyone, I just tried to say something very silly!\";\n-\n \t@Before\n \tpublic void before()\n \t{\n"}}, {"oid": "c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "url": "https://github.com/runelite/runelite/commit/c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "message": "rlapi: MessageNode extends CacheableNode (but Node is close enough)", "committedDate": "2020-03-05T15:28:50Z", "type": "commit"}, {"oid": "6cc010af1ffff604759bf1d9385a63baf45f095e", "url": "https://github.com/runelite/runelite/commit/6cc010af1ffff604759bf1d9385a63baf45f095e", "message": "chatfilter: add filtering by username", "committedDate": "2020-03-05T16:58:52Z", "type": "commit"}]}