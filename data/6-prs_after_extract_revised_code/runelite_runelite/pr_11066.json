{"pr_number": 11066, "pr_title": "runenergy: update graceful recovery rate logic to reflect 9 Jan game update", "pr_createdAt": "2020-03-25T01:58:44Z", "pr_url": "https://github.com/runelite/runelite/pull/11066", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTQ4OQ==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r397589489", "bodyText": "Instead of having hardcoded values here and below for the full set effect check, an enum with the slot index, set of graceful item IDs, and slot bonus could be defined which would give better definition to this data. This also would allow creation of some static FULL_SET_BONUS value that can be referenced below.", "author": "Nightfirecat", "createdAt": "2020-03-25T03:26:17Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +210,42 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\tint boost = 0;\n+\n+\t\tfor (int i = 0; i < items.length; ++i)\n+\t\t{\n+\t\t\tfinal ImmutableSet<Integer> gracefulForSlot = GRACEFUL_EQUIPMENT_SLOT_MAP.get(i);\n+\n+\t\t\tif (gracefulForSlot != null && gracefulForSlot.contains(items[i].getId()))\n+\t\t\t{\n+\t\t\t\t// 4% boost for the top and legs; 3% for the others\n+\t\t\t\tboost += i == EquipmentInventorySlot.BODY.getSlotIdx() || i == EquipmentInventorySlot.LEGS.getSlotIdx() ? 4 : 3;", "originalCommit": "4f734d4e76775a24abd9870e0b0af1f43084877e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5369bd47dca764ebfda8442a3d428b693592a6f0", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\nindex e589de214..d4eb9f042 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n\n@@ -228,21 +244,19 @@ public class RunEnergyPlugin extends Plugin\n \n \t\tint boost = 0;\n \n-\t\tfor (int i = 0; i < items.length; ++i)\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n \t\t{\n-\t\t\tfinal ImmutableSet<Integer> gracefulForSlot = GRACEFUL_EQUIPMENT_SLOT_MAP.get(i);\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();\n \n-\t\t\tif (gracefulForSlot != null && gracefulForSlot.contains(items[i].getId()))\n+\t\t\tif (items.length > slot.getIndex() && slot.getItems().contains(wornItemId))\n \t\t\t{\n-\t\t\t\t// 4% boost for the top and legs; 3% for the others\n-\t\t\t\tboost += i == EquipmentInventorySlot.BODY.getSlotIdx() || i == EquipmentInventorySlot.LEGS.getSlotIdx() ? 4 : 3;\n+\t\t\t\tboost += slot.getBoost();\n \t\t\t}\n \t\t}\n \n-\t\t// Full set effect (individual boosts sum to 20%) grants a 10% boost to recovery rate\n-\t\tif (boost >= 20)\n+\t\tif (boost == GracefulEquipmentSlot.getFullSetBoostSum())\n \t\t{\n-\t\t\tboost += 10;\n+\t\t\tboost += GRACEFUL_FULL_SET_BOOST_BONUS;\n \t\t}\n \n \t\treturn boost;\n"}}, {"oid": "5369bd47dca764ebfda8442a3d428b693592a6f0", "url": "https://github.com/runelite/runelite/commit/5369bd47dca764ebfda8442a3d428b693592a6f0", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T00:16:40Z", "type": "forcePushed"}, {"oid": "cb817f4068bcc09bbc4718a46e6c281072c2a546", "url": "https://github.com/runelite/runelite/commit/cb817f4068bcc09bbc4718a46e6c281072c2a546", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T00:29:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3MjgyOA==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r398272828", "bodyText": "This can cause ArrayIndexOutOfBoundsException as equipment.getItems() is not guaranteed to have a length out to the highest equipment slot type's ID. Moving the items.length > slot.getIndex() check which is currently part of the if statement below this to the start of the block should correct that.\nif (items.length <= slot.getIndex())\n{\n\tcontinue;\n}\n\n// rest of method", "author": "Nightfirecat", "createdAt": "2020-03-26T01:53:51Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +223,40 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n-\t\treturn (ALL_GRACEFUL_HOODS.contains(items[EquipmentInventorySlot.HEAD.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_TOPS.contains(items[EquipmentInventorySlot.BODY.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_LEGS.contains(items[EquipmentInventorySlot.LEGS.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_GLOVES.contains(items[EquipmentInventorySlot.GLOVES.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_BOOTS.contains(items[EquipmentInventorySlot.BOOTS.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_CAPES.contains(items[EquipmentInventorySlot.CAPE.getSlotIdx()].getId()));\n+\t\tint boost = 0;\n+\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n+\t\t{\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();", "originalCommit": "cb817f4068bcc09bbc4718a46e6c281072c2a546", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\nindex 34daacaae..d377fcadc 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n\n@@ -243,9 +243,14 @@ public class RunEnergyPlugin extends Plugin\n \n \t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n \t\t{\n+\t\t\tif (items.length <= slot.getIndex())\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n \t\t\tfinal int wornItemId = items[slot.getIndex()].getId();\n \n-\t\t\tif (items.length > slot.getIndex() && slot.getItems().contains(wornItemId))\n+\t\t\tif (slot.getItems().contains(wornItemId))\n \t\t\t{\n \t\t\t\tboost += slot.getBoost();\n \t\t\t}\n"}}, {"oid": "3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "url": "https://github.com/runelite/runelite/commit/3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T02:10:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI5MTE5OA==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r398291198", "bodyText": "Entries are not guaranteed to be nonnull. Change this to final Item wornItem and null-check it along with checking slot.getItems().contains(wornItem.getId()) below.", "author": "Nightfirecat", "createdAt": "2020-03-26T03:02:16Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +223,45 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\tint boost = 0;\n+\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n \t\t{\n-\t\t\treturn false;\n+\t\t\tif (items.length <= slot.getIndex())\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();", "originalCommit": "3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6c517f4553772f8d06239298eb277756bbe8d7a", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\nindex d377fcadc..4b65c11f1 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n\n@@ -248,9 +248,9 @@ public class RunEnergyPlugin extends Plugin\n \t\t\t\tcontinue;\n \t\t\t}\n \n-\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();\n+\t\t\tfinal Item wornItem = items[slot.getIndex()];\n \n-\t\t\tif (slot.getItems().contains(wornItemId))\n+\t\t\tif (wornItem != null && slot.getItems().contains(wornItem.getId()))\n \t\t\t{\n \t\t\t\tboost += slot.getBoost();\n \t\t\t}\n"}}, {"oid": "c6c517f4553772f8d06239298eb277756bbe8d7a", "url": "https://github.com/runelite/runelite/commit/c6c517f4553772f8d06239298eb277756bbe8d7a", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T03:18:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzOTM1NQ==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r401939355", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();\n          \n          \n            \n            \t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(GracefulEquipmentSlot::getBoost).sum();", "author": "Adam-", "createdAt": "2020-04-01T22:09:37Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -94,6 +97,27 @@\n \t\tAGILITY_CAPE, AGILITY_CAPET, MAX_CAPE\n \t);\n \n+\t@RequiredArgsConstructor\n+\t@Getter\n+\tprivate enum GracefulEquipmentSlot\n+\t{\n+\t\tHEAD(EquipmentInventorySlot.HEAD.getSlotIdx(), ALL_GRACEFUL_HOODS, 3),\n+\t\tBODY(EquipmentInventorySlot.BODY.getSlotIdx(), ALL_GRACEFUL_TOPS, 4),\n+\t\tLEGS(EquipmentInventorySlot.LEGS.getSlotIdx(), ALL_GRACEFUL_LEGS, 4),\n+\t\tGLOVES(EquipmentInventorySlot.GLOVES.getSlotIdx(), ALL_GRACEFUL_GLOVES, 3),\n+\t\tBOOTS(EquipmentInventorySlot.BOOTS.getSlotIdx(), ALL_GRACEFUL_BOOTS, 3),\n+\t\tCAPE(EquipmentInventorySlot.CAPE.getSlotIdx(), ALL_GRACEFUL_CAPES, 3);\n+\n+\t\tprivate final int index;\n+\t\tprivate final ImmutableSet<Integer> items;\n+\t\tprivate final int boost;\n+\n+\t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();", "originalCommit": "c6c517f4553772f8d06239298eb277756bbe8d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3af8a65be1cd833eafb994e717a49a76971e8f9", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\nindex 4b65c11f1..bf911c2f3 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java\n\n@@ -112,7 +112,7 @@ public class RunEnergyPlugin extends Plugin\n \t\tprivate final ImmutableSet<Integer> items;\n \t\tprivate final int boost;\n \n-\t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();\n+\t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(GracefulEquipmentSlot::getBoost).sum();\n \t}\n \n \t// Full set grants an extra 10% boost to recovery rate\n"}}, {"oid": "c3af8a65be1cd833eafb994e717a49a76971e8f9", "url": "https://github.com/runelite/runelite/commit/c3af8a65be1cd833eafb994e717a49a76971e8f9", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-04-01T22:28:48Z", "type": "forcePushed"}, {"oid": "535c5f0b476fac10f655d4f7c57a900ea472eb23", "url": "https://github.com/runelite/runelite/commit/535c5f0b476fac10f655d4f7c57a900ea472eb23", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-04-01T22:38:47Z", "type": "commit"}, {"oid": "535c5f0b476fac10f655d4f7c57a900ea472eb23", "url": "https://github.com/runelite/runelite/commit/535c5f0b476fac10f655d4f7c57a900ea472eb23", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-04-01T22:38:47Z", "type": "forcePushed"}]}