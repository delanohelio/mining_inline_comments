{"pr_number": 12841, "pr_title": "Special attack counter notifications", "pr_createdAt": "2020-11-25T22:51:34Z", "pr_url": "https://github.com/runelite/runelite/pull/12841", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2Nzk5OQ==", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532967999", "bodyText": "Maybe call this Threshold Notifications", "author": "Adam-", "createdAt": "2020-11-30T23:22:15Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r\n+\t\t\tname = \"Notification\",\r", "originalCommit": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\nindex 081fe1b4c..4320b59e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n\n@@ -1,89 +1,89 @@\n-/*\n- * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-\n-package net.runelite.client.plugins.specialcounter;\n-\n-import net.runelite.client.config.Config;\n-import net.runelite.client.config.ConfigGroup;\n-import net.runelite.client.config.ConfigItem;\n-\n-@ConfigGroup(\"specialcounter\")\n-public interface SpecialCounterConfig extends Config\n-{\n-\t@ConfigItem(\n-\t\t\tposition = 0,\n-\t\t\tkeyName = \"receiveSpecialAttackNotification\",\n-\t\t\tname = \"Notification\",\n-\t\t\tdescription = \"Check to receive notifications at below thresholds\"\n-\t)\n-\tdefault boolean receiveSpecialAttackNotification()\n-\t{\n-\t\treturn false;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 1,\n-\t\t\tkeyName = \"dragonWarhammerThreshold\",\n-\t\t\tname = \"Dragon Warhammer\",\n-\t\t\tdescription = \"Threshold for Dragon Warhammer\"\n-\t)\n-\tdefault int dragonWarhammerThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 2,\n-\t\t\tkeyName = \"arclightThreshold\",\n-\t\t\tname = \"Arclight\",\n-\t\t\tdescription = \"Threshold for Arclight\"\n-\t)\n-\tdefault int arclightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 3,\n-\t\t\tkeyName = \"darklightThreshold\",\n-\t\t\tname = \"DarkLight\",\n-\t\t\tdescription = \"Threshold for Darklight\"\n-\t)\n-\tdefault int darklightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 4,\n-\t\t\tkeyName = \"bandosGodswordThreshold\",\n-\t\t\tname = \"Bandos Godsword\",\n-\t\t\tdescription = \"Threshold for Bandos Godsword\"\n-\t)\n-\tdefault int bandosGodswordThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-}\n+/*\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu>\n+ * Copyright (c) 2020, Jacob <jgozon@umich.edu>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.specialcounter;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+\n+@ConfigGroup(\"specialcounter\")\n+public interface SpecialCounterConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 0,\n+\t\tkeyName = \"thresholdNotification\",\n+\t\tname = \"Threshold Notifications\",\n+\t\tdescription = \"Sends a notification when your special attack counter exceeds the threshold\"\n+\t)\n+\tdefault boolean thresholdNotification()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 1,\n+\t\tkeyName = \"dragonWarhammerThreshold\",\n+\t\tname = \"Dragon Warhammer\",\n+\t\tdescription = \"Threshold for Dragon Warhammer (0 to disable)\"\n+\t)\n+\tdefault int dragonWarhammerThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 2,\n+\t\tkeyName = \"arclightThreshold\",\n+\t\tname = \"Arclight\",\n+\t\tdescription = \"Threshold for Arclight (0 to disable)\"\n+\t)\n+\tdefault int arclightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 3,\n+\t\tkeyName = \"darklightThreshold\",\n+\t\tname = \"Darklight\",\n+\t\tdescription = \"Threshold for Darklight (0 to disable)\"\n+\t)\n+\tdefault int darklightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 4,\n+\t\tkeyName = \"bandosGodswordThreshold\",\n+\t\tname = \"Bandos Godsword\",\n+\t\tdescription = \"Threshold for Bandos Godsword (0 to disable)\"\n+\t)\n+\tdefault int bandosGodswordThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2ODA4Nw==", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532968087", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tkeyName = \"receiveSpecialAttackNotification\",\n          \n          \n            \n            \t\t\tkeyName = \"thresholdNotification\",", "author": "Adam-", "createdAt": "2020-11-30T23:22:26Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r", "originalCommit": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\nindex 081fe1b4c..4320b59e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n\n@@ -1,89 +1,89 @@\n-/*\n- * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-\n-package net.runelite.client.plugins.specialcounter;\n-\n-import net.runelite.client.config.Config;\n-import net.runelite.client.config.ConfigGroup;\n-import net.runelite.client.config.ConfigItem;\n-\n-@ConfigGroup(\"specialcounter\")\n-public interface SpecialCounterConfig extends Config\n-{\n-\t@ConfigItem(\n-\t\t\tposition = 0,\n-\t\t\tkeyName = \"receiveSpecialAttackNotification\",\n-\t\t\tname = \"Notification\",\n-\t\t\tdescription = \"Check to receive notifications at below thresholds\"\n-\t)\n-\tdefault boolean receiveSpecialAttackNotification()\n-\t{\n-\t\treturn false;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 1,\n-\t\t\tkeyName = \"dragonWarhammerThreshold\",\n-\t\t\tname = \"Dragon Warhammer\",\n-\t\t\tdescription = \"Threshold for Dragon Warhammer\"\n-\t)\n-\tdefault int dragonWarhammerThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 2,\n-\t\t\tkeyName = \"arclightThreshold\",\n-\t\t\tname = \"Arclight\",\n-\t\t\tdescription = \"Threshold for Arclight\"\n-\t)\n-\tdefault int arclightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 3,\n-\t\t\tkeyName = \"darklightThreshold\",\n-\t\t\tname = \"DarkLight\",\n-\t\t\tdescription = \"Threshold for Darklight\"\n-\t)\n-\tdefault int darklightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 4,\n-\t\t\tkeyName = \"bandosGodswordThreshold\",\n-\t\t\tname = \"Bandos Godsword\",\n-\t\t\tdescription = \"Threshold for Bandos Godsword\"\n-\t)\n-\tdefault int bandosGodswordThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-}\n+/*\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu>\n+ * Copyright (c) 2020, Jacob <jgozon@umich.edu>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.specialcounter;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+\n+@ConfigGroup(\"specialcounter\")\n+public interface SpecialCounterConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 0,\n+\t\tkeyName = \"thresholdNotification\",\n+\t\tname = \"Threshold Notifications\",\n+\t\tdescription = \"Sends a notification when your special attack counter exceeds the threshold\"\n+\t)\n+\tdefault boolean thresholdNotification()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 1,\n+\t\tkeyName = \"dragonWarhammerThreshold\",\n+\t\tname = \"Dragon Warhammer\",\n+\t\tdescription = \"Threshold for Dragon Warhammer (0 to disable)\"\n+\t)\n+\tdefault int dragonWarhammerThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 2,\n+\t\tkeyName = \"arclightThreshold\",\n+\t\tname = \"Arclight\",\n+\t\tdescription = \"Threshold for Arclight (0 to disable)\"\n+\t)\n+\tdefault int arclightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 3,\n+\t\tkeyName = \"darklightThreshold\",\n+\t\tname = \"Darklight\",\n+\t\tdescription = \"Threshold for Darklight (0 to disable)\"\n+\t)\n+\tdefault int darklightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 4,\n+\t\tkeyName = \"bandosGodswordThreshold\",\n+\t\tname = \"Bandos Godsword\",\n+\t\tdescription = \"Threshold for Bandos Godsword (0 to disable)\"\n+\t)\n+\tdefault int bandosGodswordThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2ODM1Mg==", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532968352", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tdefault boolean receiveSpecialAttackNotification()\n          \n          \n            \n            \tdefault boolean thresholdNotification()", "author": "Adam-", "createdAt": "2020-11-30T23:23:10Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r\n+\t\t\tname = \"Notification\",\r\n+\t\t\tdescription = \"Check to receive notifications at below thresholds\"\r\n+\t)\r\n+\tdefault boolean receiveSpecialAttackNotification()\r", "originalCommit": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\nindex 081fe1b4c..4320b59e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n\n@@ -1,89 +1,89 @@\n-/*\n- * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-\n-package net.runelite.client.plugins.specialcounter;\n-\n-import net.runelite.client.config.Config;\n-import net.runelite.client.config.ConfigGroup;\n-import net.runelite.client.config.ConfigItem;\n-\n-@ConfigGroup(\"specialcounter\")\n-public interface SpecialCounterConfig extends Config\n-{\n-\t@ConfigItem(\n-\t\t\tposition = 0,\n-\t\t\tkeyName = \"receiveSpecialAttackNotification\",\n-\t\t\tname = \"Notification\",\n-\t\t\tdescription = \"Check to receive notifications at below thresholds\"\n-\t)\n-\tdefault boolean receiveSpecialAttackNotification()\n-\t{\n-\t\treturn false;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 1,\n-\t\t\tkeyName = \"dragonWarhammerThreshold\",\n-\t\t\tname = \"Dragon Warhammer\",\n-\t\t\tdescription = \"Threshold for Dragon Warhammer\"\n-\t)\n-\tdefault int dragonWarhammerThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 2,\n-\t\t\tkeyName = \"arclightThreshold\",\n-\t\t\tname = \"Arclight\",\n-\t\t\tdescription = \"Threshold for Arclight\"\n-\t)\n-\tdefault int arclightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 3,\n-\t\t\tkeyName = \"darklightThreshold\",\n-\t\t\tname = \"DarkLight\",\n-\t\t\tdescription = \"Threshold for Darklight\"\n-\t)\n-\tdefault int darklightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 4,\n-\t\t\tkeyName = \"bandosGodswordThreshold\",\n-\t\t\tname = \"Bandos Godsword\",\n-\t\t\tdescription = \"Threshold for Bandos Godsword\"\n-\t)\n-\tdefault int bandosGodswordThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-}\n+/*\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu>\n+ * Copyright (c) 2020, Jacob <jgozon@umich.edu>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.specialcounter;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+\n+@ConfigGroup(\"specialcounter\")\n+public interface SpecialCounterConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 0,\n+\t\tkeyName = \"thresholdNotification\",\n+\t\tname = \"Threshold Notifications\",\n+\t\tdescription = \"Sends a notification when your special attack counter exceeds the threshold\"\n+\t)\n+\tdefault boolean thresholdNotification()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 1,\n+\t\tkeyName = \"dragonWarhammerThreshold\",\n+\t\tname = \"Dragon Warhammer\",\n+\t\tdescription = \"Threshold for Dragon Warhammer (0 to disable)\"\n+\t)\n+\tdefault int dragonWarhammerThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 2,\n+\t\tkeyName = \"arclightThreshold\",\n+\t\tname = \"Arclight\",\n+\t\tdescription = \"Threshold for Arclight (0 to disable)\"\n+\t)\n+\tdefault int arclightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 3,\n+\t\tkeyName = \"darklightThreshold\",\n+\t\tname = \"Darklight\",\n+\t\tdescription = \"Threshold for Darklight (0 to disable)\"\n+\t)\n+\tdefault int darklightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 4,\n+\t\tkeyName = \"bandosGodswordThreshold\",\n+\t\tname = \"Bandos Godsword\",\n+\t\tdescription = \"Threshold for Bandos Godsword (0 to disable)\"\n+\t)\n+\tdefault int bandosGodswordThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2ODczMw==", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532968733", "bodyText": "I would just default these to 0 and treat that as off, which is consistent with many other things we have.", "author": "Adam-", "createdAt": "2020-11-30T23:24:10Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\r\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\r\n+ * All rights reserved.\r\n+ *\r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are met:\r\n+ *\r\n+ * 1. Redistributions of source code must retain the above copyright notice, this\r\n+ *    list of conditions and the following disclaimer.\r\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n+ *    this list of conditions and the following disclaimer in the documentation\r\n+ *    and/or other materials provided with the distribution.\r\n+ *\r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+\r\n+package net.runelite.client.plugins.specialcounter;\r\n+\r\n+import net.runelite.client.config.Config;\r\n+import net.runelite.client.config.ConfigGroup;\r\n+import net.runelite.client.config.ConfigItem;\r\n+\r\n+@ConfigGroup(\"specialcounter\")\r\n+public interface SpecialCounterConfig extends Config\r\n+{\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 0,\r\n+\t\t\tkeyName = \"receiveSpecialAttackNotification\",\r\n+\t\t\tname = \"Notification\",\r\n+\t\t\tdescription = \"Check to receive notifications at below thresholds\"\r\n+\t)\r\n+\tdefault boolean receiveSpecialAttackNotification()\r\n+\t{\r\n+\t\treturn false;\r\n+\t}\r\n+\r\n+\t@ConfigItem(\r\n+\t\t\tposition = 1,\r\n+\t\t\tkeyName = \"dragonWarhammerThreshold\",\r\n+\t\t\tname = \"Dragon Warhammer\",\r\n+\t\t\tdescription = \"Threshold for Dragon Warhammer\"\r\n+\t)\r\n+\tdefault int dragonWarhammerThreshold()\r\n+\t{\r\n+\t\treturn 1;\r", "originalCommit": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\nindex 081fe1b4c..4320b59e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterConfig.java\n\n@@ -1,89 +1,89 @@\n-/*\n- * Copyright (c) 2020, Dylan <dylanhe@umich.edu> and Jacob <jgozon@umich.edu>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-\n-package net.runelite.client.plugins.specialcounter;\n-\n-import net.runelite.client.config.Config;\n-import net.runelite.client.config.ConfigGroup;\n-import net.runelite.client.config.ConfigItem;\n-\n-@ConfigGroup(\"specialcounter\")\n-public interface SpecialCounterConfig extends Config\n-{\n-\t@ConfigItem(\n-\t\t\tposition = 0,\n-\t\t\tkeyName = \"receiveSpecialAttackNotification\",\n-\t\t\tname = \"Notification\",\n-\t\t\tdescription = \"Check to receive notifications at below thresholds\"\n-\t)\n-\tdefault boolean receiveSpecialAttackNotification()\n-\t{\n-\t\treturn false;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 1,\n-\t\t\tkeyName = \"dragonWarhammerThreshold\",\n-\t\t\tname = \"Dragon Warhammer\",\n-\t\t\tdescription = \"Threshold for Dragon Warhammer\"\n-\t)\n-\tdefault int dragonWarhammerThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 2,\n-\t\t\tkeyName = \"arclightThreshold\",\n-\t\t\tname = \"Arclight\",\n-\t\t\tdescription = \"Threshold for Arclight\"\n-\t)\n-\tdefault int arclightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 3,\n-\t\t\tkeyName = \"darklightThreshold\",\n-\t\t\tname = \"DarkLight\",\n-\t\t\tdescription = \"Threshold for Darklight\"\n-\t)\n-\tdefault int darklightThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-\n-\t@ConfigItem(\n-\t\t\tposition = 4,\n-\t\t\tkeyName = \"bandosGodswordThreshold\",\n-\t\t\tname = \"Bandos Godsword\",\n-\t\t\tdescription = \"Threshold for Bandos Godsword\"\n-\t)\n-\tdefault int bandosGodswordThreshold()\n-\t{\n-\t\treturn 1;\n-\t}\n-}\n+/*\n+ * Copyright (c) 2020, Dylan <dylanhe@umich.edu>\n+ * Copyright (c) 2020, Jacob <jgozon@umich.edu>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.specialcounter;\n+\n+import net.runelite.client.config.Config;\n+import net.runelite.client.config.ConfigGroup;\n+import net.runelite.client.config.ConfigItem;\n+\n+@ConfigGroup(\"specialcounter\")\n+public interface SpecialCounterConfig extends Config\n+{\n+\t@ConfigItem(\n+\t\tposition = 0,\n+\t\tkeyName = \"thresholdNotification\",\n+\t\tname = \"Threshold Notifications\",\n+\t\tdescription = \"Sends a notification when your special attack counter exceeds the threshold\"\n+\t)\n+\tdefault boolean thresholdNotification()\n+\t{\n+\t\treturn false;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 1,\n+\t\tkeyName = \"dragonWarhammerThreshold\",\n+\t\tname = \"Dragon Warhammer\",\n+\t\tdescription = \"Threshold for Dragon Warhammer (0 to disable)\"\n+\t)\n+\tdefault int dragonWarhammerThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 2,\n+\t\tkeyName = \"arclightThreshold\",\n+\t\tname = \"Arclight\",\n+\t\tdescription = \"Threshold for Arclight (0 to disable)\"\n+\t)\n+\tdefault int arclightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 3,\n+\t\tkeyName = \"darklightThreshold\",\n+\t\tname = \"Darklight\",\n+\t\tdescription = \"Threshold for Darklight (0 to disable)\"\n+\t)\n+\tdefault int darklightThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tposition = 4,\n+\t\tkeyName = \"bandosGodswordThreshold\",\n+\t\tname = \"Bandos Godsword\",\n+\t\tdescription = \"Threshold for Bandos Godsword (0 to disable)\"\n+\t)\n+\tdefault int bandosGodswordThreshold()\n+\t{\n+\t\treturn 0;\n+\t}\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2OTU2OA==", "url": "https://github.com/runelite/runelite/pull/12841#discussion_r532969568", "bodyText": "Instead of switching on the weapon name, use the weapon. This is preferred in the event an item name changes.", "author": "Adam-", "createdAt": "2020-11-30T23:26:04Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java", "diffHunk": "@@ -326,6 +345,44 @@ private void updateCounter(SpecialWeapon specialWeapon, String name, int hit)\n \t\t}\n \t}\n \n+\tprivate void displayNotification(SpecialWeapon weapon, SpecialCounter counter)\n+\t{\n+\t\tif (config.receiveSpecialAttackNotification())\n+\t\t{\n+\t\t\tif (counter.getCount() >= getSpecialWeaponThreshold(weapon))\n+\t\t\t{\n+\t\t\t\tString notificationMessage = \"You've reached your \" + weapon.getName() + \" threshold!\";\n+\t\t\t\tnotifier.notify(notificationMessage);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate int getSpecialWeaponThreshold(SpecialWeapon weapon)\n+\t{\n+\t\tint threshold = Integer.MAX_VALUE;\n+\n+\t\tswitch (weapon.getName())", "originalCommit": "cf67ad54f77b9f710c5843bc55c59c2fc74b3d44", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java\nindex 7456b4412..799dd098e 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/specialcounter/SpecialCounterPlugin.java\n\n@@ -345,42 +356,13 @@ public class SpecialCounterPlugin extends Plugin\n \t\t}\n \t}\n \n-\tprivate void displayNotification(SpecialWeapon weapon, SpecialCounter counter)\n-\t{\n-\t\tif (config.receiveSpecialAttackNotification())\n-\t\t{\n-\t\t\tif (counter.getCount() >= getSpecialWeaponThreshold(weapon))\n-\t\t\t{\n-\t\t\t\tString notificationMessage = \"You've reached your \" + weapon.getName() + \" threshold!\";\n-\t\t\t\tnotifier.notify(notificationMessage);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate int getSpecialWeaponThreshold(SpecialWeapon weapon)\n+\tprivate void sendNotification(SpecialWeapon weapon, SpecialCounter counter)\n \t{\n-\t\tint threshold = Integer.MAX_VALUE;\n-\n-\t\tswitch (weapon.getName())\n+\t\tint threshold = weapon.getThreshold().apply(config);\n+\t\tif (threshold > 0 && counter.getCount() >= threshold && config.thresholdNotification())\n \t\t{\n-\t\t\tcase \"Dragon Warhammer\":\n-\t\t\t\tthreshold = config.dragonWarhammerThreshold();\n-\t\t\t\tbreak;\n-\n-\t\t\tcase \"Arclight\":\n-\t\t\t\tthreshold = config.arclightThreshold();\n-\t\t\t\tbreak;\n-\n-\t\t\tcase \"Darklight\":\n-\t\t\t\tthreshold = config.darklightThreshold();\n-\t\t\t\tbreak;\n-\n-\t\t\tcase \"Bandos Godsword\":\n-\t\t\t\tthreshold = config.bandosGodswordThreshold();\n-\t\t\t\tbreak;\n+\t\t\tnotifier.notify(weapon.getName() + \" special attack threshold reached!\");\n \t\t}\n-\n-\t\treturn threshold;\n \t}\n \n \tprivate void removeCounters()\n"}}, {"oid": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "url": "https://github.com/runelite/runelite/commit/f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "message": "spec counter: add spec threshold notifications\n\nThis allows configuring spec thresholds which a notification will be sent for\nwhen reached. Additionally it colors the infobox text red or green based on if\nthe threshold has been reached.\n\nCo-authored-by: Dylan <dylanhe@gmail.com>\nCo-authored-by: jgozon <47003557+jgozon@users.noreply.github.com>", "committedDate": "2021-01-08T19:32:33Z", "type": "commit"}, {"oid": "39ebdef9a79bc356e0912b106f7fab028979344c", "url": "https://github.com/runelite/runelite/commit/39ebdef9a79bc356e0912b106f7fab028979344c", "message": "more cleanup", "committedDate": "2021-01-08T19:21:45Z", "type": "forcePushed"}, {"oid": "f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "url": "https://github.com/runelite/runelite/commit/f55018fdb39b55f35bc50b4a0eb1be1dcd7ccf55", "message": "spec counter: add spec threshold notifications\n\nThis allows configuring spec thresholds which a notification will be sent for\nwhen reached. Additionally it colors the infobox text red or green based on if\nthe threshold has been reached.\n\nCo-authored-by: Dylan <dylanhe@gmail.com>\nCo-authored-by: jgozon <47003557+jgozon@users.noreply.github.com>", "committedDate": "2021-01-08T19:32:33Z", "type": "forcePushed"}]}