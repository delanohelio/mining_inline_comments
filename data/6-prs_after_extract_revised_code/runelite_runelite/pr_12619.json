{"pr_number": 12619, "pr_title": "timetracking: add compost bin time trackers", "pr_createdAt": "2020-10-07T23:13:02Z", "pr_url": "https://github.com/runelite/runelite/pull/12619", "timeline": [{"oid": "f26759aaae88edea64c6ba51d85976e751950c3c", "url": "https://github.com/runelite/runelite/commit/f26759aaae88edea64c6ba51d85976e751950c3c", "message": "timetracking: add compost bin time trackers", "committedDate": "2020-10-07T23:17:18Z", "type": "commit"}, {"oid": "f26759aaae88edea64c6ba51d85976e751950c3c", "url": "https://github.com/runelite/runelite/commit/f26759aaae88edea64c6ba51d85976e751950c3c", "message": "timetracking: add compost bin time trackers", "committedDate": "2020-10-07T23:17:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzA4Ng==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507217086", "bodyText": "remove this", "author": "abextm", "createdAt": "2020-10-18T21:37:51Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java", "diffHunk": "@@ -27,10 +27,12 @@\n import javax.annotation.Nullable;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n import net.runelite.client.plugins.timetracking.Tab;\n \n @RequiredArgsConstructor\n @Getter\n+@Slf4j", "originalCommit": "f26759aaae88edea64c6ba51d85976e751950c3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\nindex b41c216f4..d7ecd63e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\n\n@@ -27,12 +27,10 @@ package net.runelite.client.plugins.timetracking.farming;\n import javax.annotation.Nullable;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n-import lombok.extern.slf4j.Slf4j;\n import net.runelite.client.plugins.timetracking.Tab;\n \n @RequiredArgsConstructor\n @Getter\n-@Slf4j\n public enum PatchImplementation\n {\n \tBELLADONNA(Tab.SPECIAL, \"\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzExNA==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507217114", "bodyText": "what about 207-238?", "author": "abextm", "createdAt": "2020-10-18T21:38:15Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java", "diffHunk": "@@ -2603,6 +2605,137 @@ PatchState forVarbitValue(int value)\n \t\t\t\t}\n \t\t\t\treturn null;\n \t\t\t}\n+\t\t},\n+\tCOMPOST(Tab.SPECIAL, \"Compost Bin\")\n+\t\t{\n+\t\t\t@Override\n+\t\t\tPatchState forVarbitValue(int value)\n+\t\t\t{\n+\t\t\t\tif (value == 0)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Examine] 7808\n+\t\t\t\t\treturn new PatchState(Produce.COMPOST_BIN, CropState.EMPTY, 0);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 1 && value <= 15)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Examine,Dump] 3830\n+\t\t\t\t\treturn new PatchState(Produce.COMPOST, CropState.FILLING, value - 1);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 16 && value <= 30)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Take,Examine,Dump] 19050,19051,19052,19053,19054,19055,19056,19057,19058,19059,19060,19061,19062,19063,19064\n+\t\t\t\t\treturn new PatchState(Produce.COMPOST, CropState.HARVESTABLE, value - 16);\n+\t\t\t\t}\n+\t\t\t\tif (value == 31 || value == 32)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Open,Examine,Dump] 3849,3849\n+\t\t\t\t\treturn new PatchState(Produce.COMPOST, CropState.GROWING, value - 31);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 33 && value <= 47)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Examine,Dump] 19066,19067,19068,19069,19070,19071,19072,19073,19074,19075,19076,19077,19078,19079,19080\n+\t\t\t\t\treturn new PatchState(Produce.SUPERCOMPOST, CropState.FILLING, value - 33); // 33 means there is 1 item\n+\t\t\t\t}\n+\t\t\t\tif (value >= 48 && value <= 62)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Take,Examine,Dump] 19097\n+\t\t\t\t\treturn new PatchState(Produce.SUPERCOMPOST, CropState.HARVESTABLE, value - 48); // 48 means there is only 1 bucket left\n+\t\t\t\t}\n+\t\t\t\tif (value == 94)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Open,Examine,Dump] 3850\n+\t\t\t\t\treturn new PatchState(Produce.COMPOST, CropState.GROWING, Produce.COMPOST.getStages() - 1);\n+\t\t\t\t}\n+\t\t\t\tif (value == 95 || value == 96)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Open,Examine,Dump] 19082,19082\n+\t\t\t\t\treturn new PatchState(Produce.SUPERCOMPOST, CropState.GROWING, value - 95);\n+\t\t\t\t}\n+\t\t\t\tif (value == 126)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Open,Examine,Dump] 19082\n+\t\t\t\t\treturn new PatchState(Produce.SUPERCOMPOST, CropState.GROWING, Produce.SUPERCOMPOST.getStages() - 1);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 176 && value <= 190)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Take,Examine,Dump] 30502,30503,30504,30505,30506,30507,30508,30509,30510,30511,30512,30513,30514,30515,30516\n+\t\t\t\t\treturn new PatchState(Produce.ULTRACOMPOST, CropState.HARVESTABLE, value - 176);\n+\t\t\t\t}\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t},\n+\tGIANT_COMPOST(Tab.SPECIAL, \"Giant Compost Bin\")\n+\t\t{\n+\t\t\t@Override\n+\t\t\tPatchState forVarbitValue(int value)\n+\t\t\t{\n+\t\t\t\tif (value == 0)\n+\t\t\t\t{\n+\t\t\t\t\t// Big compost bin[Examine] 33762\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST_BIN, CropState.EMPTY, 0);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 1 && value <= 15)\n+\t\t\t\t{\n+\t\t\t\t\t// Big compost bin[Examine,Dump] 33763..33777\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST, CropState.FILLING, value - 1);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 16 && value <= 30)\n+\t\t\t\t{\n+\t\t\t\t\t// Big compost bin[Take,Examine,Dump] 33795..33809\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST, CropState.HARVESTABLE, value - 16);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 33 && value <= 47)\n+\t\t\t\t{\n+\t\t\t\t\t// Big compost bin[Examine,Dump] 33825..33839\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_SUPERCOMPOST, CropState.FILLING, value - 33);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 48 && value <= 62)\n+\t\t\t\t{\n+\t\t\t\t\t// Big compost bin[Take,Examine,Dump] 33857..33871\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_SUPERCOMPOST, CropState.HARVESTABLE, value - 48);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 63 && value <= 77)\n+\t\t\t\t{\n+\t\t\t\t\t// Big compost bin[Examine,Dump] 33778..33792\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST, CropState.FILLING, 15 + value - 63);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 78 && value <= 92)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Take,Examine,Dump] 33810..33824\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST, CropState.HARVESTABLE, 15 + value - 78);\n+\t\t\t\t}\n+\t\t\t\tif (value == 93)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Open,Examine,Dump] 33794\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST, CropState.GROWING, Produce.GIANT_COMPOST.getStages() - 1);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 97 && value <= 99)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Open] 33855,33855\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_SUPERCOMPOST, CropState.GROWING, value - 97); // Once closed, starts rotting (super compost)\n+\t\t\t\t}\n+\t\t\t\tif (value >= 100 && value <= 114)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Take,Examine,Dump] 33872..33886\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_SUPERCOMPOST, CropState.HARVESTABLE, 15 + value - 100);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 127 && value <= 128)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Open,Examine,Dump] 33793,33793\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_COMPOST, CropState.GROWING, value - 127);\n+\t\t\t\t}\n+\t\t\t\tif (value >= 161 && value <= 175)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Examine,Dump] 33840..33854\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_SUPERCOMPOST, CropState.FILLING, 15 + value - 161); // 161 means there are 16 items\n+\t\t\t\t}\n+\t\t\t\tif (value >= 176 && value <= 205)\n+\t\t\t\t{\n+\t\t\t\t\t// Giant compost bin[Take,Examine,Dump] 33957..33986\n+\t\t\t\t\treturn new PatchState(Produce.GIANT_ULTRACOMPOST, CropState.HARVESTABLE, value - 176);\n+\t\t\t\t}\n+\t\t\t\treturn null;", "originalCommit": "f26759aaae88edea64c6ba51d85976e751950c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2MDMzNA==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507760334", "bodyText": "I didn't observe those enum values. Is there something indicating those varbits should be mapped? I was playing around with the setvarb command earlier and there were other varbits that seemed to map to similar states but again, they were never observed in my testing over a week of making compost.", "author": "SirGirion", "createdAt": "2020-10-19T13:48:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA5OTkzOQ==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r508099939", "bodyText": "They have what looks like valid states in the object config so they should be mapped. Just take a guess, if its actually used and wrong we can fix it later.", "author": "abextm", "createdAt": "2020-10-19T22:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzExNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyODA1OQ==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r508128059", "bodyText": "Yes you were right they correspond to rotten tomatoes.", "author": "SirGirion", "createdAt": "2020-10-19T23:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzExNA=="}], "type": "inlineReview", "revised_code": {"commit": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\nindex b41c216f4..d7ecd63e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\n\n@@ -2614,7 +2612,7 @@ public enum PatchImplementation\n \t\t\t\tif (value == 0)\n \t\t\t\t{\n \t\t\t\t\t// Compost bin[Examine] 7808\n-\t\t\t\t\treturn new PatchState(Produce.COMPOST_BIN, CropState.EMPTY, 0);\n+\t\t\t\t\treturn new PatchState(Produce.EMPTY_COMPOST_BIN, CropState.EMPTY, 0);\n \t\t\t\t}\n \t\t\t\tif (value >= 1 && value <= 15)\n \t\t\t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzQ2Mg==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507217462", "bodyText": "this should be split into a separate section", "author": "abextm", "createdAt": "2020-10-18T21:41:14Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java", "diffHunk": "@@ -131,7 +131,15 @@\n \tCELASTRUS(\"Celastrus\", \"Celastrus tree\", PatchImplementation.CELASTRUS, ItemID.BATTLESTAFF, 160, 6, 0, 4),\n \tREDWOOD(\"Redwood\", \"Redwood tree\", PatchImplementation.REDWOOD, ItemID.REDWOOD_LOGS, 640, 11),\n \tHESPORI(\"Hespori\", NullItemID.NULL_23044, 640, 4, 0, 2),\n-\tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7);\n+\tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7),\n+\tCOMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state", "originalCommit": "f26759aaae88edea64c6ba51d85976e751950c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2MDk1OQ==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507760959", "bodyText": "Like another top level tab icon? I didn't want to add another one because then there'd be 3 rows.", "author": "SirGirion", "createdAt": "2020-10-19T13:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEwMDI0NA==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r508100244", "bodyText": "no just a  // Compost like everything else has", "author": "abextm", "createdAt": "2020-10-19T22:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\nindex 2fc638b1e..275d6e99a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\n\n@@ -132,11 +132,13 @@ public enum Produce\n \tREDWOOD(\"Redwood\", \"Redwood tree\", PatchImplementation.REDWOOD, ItemID.REDWOOD_LOGS, 640, 11),\n \tHESPORI(\"Hespori\", NullItemID.NULL_23044, 640, 4, 0, 2),\n \tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7),\n-\tCOMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\n+\t// Compost bins\n+\tEMPTY_COMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n \tCOMPOST(\"Compost\", PatchImplementation.COMPOST, ItemID.COMPOST, 40, 3, 0, 15),\n \tSUPERCOMPOST(\"Supercompost\", PatchImplementation.COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 15),\n \tULTRACOMPOST(\"Ultracompost\", PatchImplementation.COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 15), // Ultra doesn't compost\n-\tGIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\tEMPTY_GIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n \tGIANT_COMPOST(\"Compost\", PatchImplementation.GIANT_COMPOST, ItemID.COMPOST, 40, 3, 0, 30),\n \tGIANT_SUPERCOMPOST(\"Supercompost\", PatchImplementation.GIANT_COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 30),\n \tGIANT_ULTRACOMPOST(\"Ultracompost\", PatchImplementation.GIANT_COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 30); // Ultra doesn't compost\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzUzOA==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507217538", "bodyText": "you don't need variants for giant compost, they can use the same as normal since they are not farming contracts", "author": "abextm", "createdAt": "2020-10-18T21:41:56Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java", "diffHunk": "@@ -131,7 +131,15 @@\n \tCELASTRUS(\"Celastrus\", \"Celastrus tree\", PatchImplementation.CELASTRUS, ItemID.BATTLESTAFF, 160, 6, 0, 4),\n \tREDWOOD(\"Redwood\", \"Redwood tree\", PatchImplementation.REDWOOD, ItemID.REDWOOD_LOGS, 640, 11),\n \tHESPORI(\"Hespori\", NullItemID.NULL_23044, 640, 4, 0, 2),\n-\tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7);\n+\tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7),\n+\tCOMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\tCOMPOST(\"Compost\", PatchImplementation.COMPOST, ItemID.COMPOST, 40, 3, 0, 15),\n+\tSUPERCOMPOST(\"Supercompost\", PatchImplementation.COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 15),\n+\tULTRACOMPOST(\"Ultracompost\", PatchImplementation.COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 15), // Ultra doesn't compost\n+\tGIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state", "originalCommit": "f26759aaae88edea64c6ba51d85976e751950c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1ODM0Mg==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507758342", "bodyText": "Could you clarify if you mean the different produce or the bins themselves? I do need different produce enums since the giant bins have more harvest stages.", "author": "SirGirion", "createdAt": "2020-10-19T13:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\nindex 2fc638b1e..275d6e99a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\n\n@@ -132,11 +132,13 @@ public enum Produce\n \tREDWOOD(\"Redwood\", \"Redwood tree\", PatchImplementation.REDWOOD, ItemID.REDWOOD_LOGS, 640, 11),\n \tHESPORI(\"Hespori\", NullItemID.NULL_23044, 640, 4, 0, 2),\n \tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7),\n-\tCOMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\n+\t// Compost bins\n+\tEMPTY_COMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n \tCOMPOST(\"Compost\", PatchImplementation.COMPOST, ItemID.COMPOST, 40, 3, 0, 15),\n \tSUPERCOMPOST(\"Supercompost\", PatchImplementation.COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 15),\n \tULTRACOMPOST(\"Ultracompost\", PatchImplementation.COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 15), // Ultra doesn't compost\n-\tGIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\tEMPTY_GIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n \tGIANT_COMPOST(\"Compost\", PatchImplementation.GIANT_COMPOST, ItemID.COMPOST, 40, 3, 0, 30),\n \tGIANT_SUPERCOMPOST(\"Supercompost\", PatchImplementation.GIANT_COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 30),\n \tGIANT_ULTRACOMPOST(\"Ultracompost\", PatchImplementation.GIANT_COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 30); // Ultra doesn't compost\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzg1Ng==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507217856", "bodyText": "fwiw Examine isn't a real menu op and shouldn't be here, but this is just debug from the code generator script so you don't need it anyway", "author": "abextm", "createdAt": "2020-10-18T21:45:11Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java", "diffHunk": "@@ -2603,6 +2605,137 @@ PatchState forVarbitValue(int value)\n \t\t\t\t}\n \t\t\t\treturn null;\n \t\t\t}\n+\t\t},\n+\tCOMPOST(Tab.SPECIAL, \"Compost Bin\")\n+\t\t{\n+\t\t\t@Override\n+\t\t\tPatchState forVarbitValue(int value)\n+\t\t\t{\n+\t\t\t\tif (value == 0)\n+\t\t\t\t{\n+\t\t\t\t\t// Compost bin[Examine] 7808", "originalCommit": "f26759aaae88edea64c6ba51d85976e751950c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NzkwNA==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507757904", "bodyText": "I made these not realizing the stuff was code gen'd so I tried to copy the style of the existing code", "author": "SirGirion", "createdAt": "2020-10-19T13:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzg1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\nindex b41c216f4..d7ecd63e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/PatchImplementation.java\n\n@@ -2614,7 +2612,7 @@ public enum PatchImplementation\n \t\t\t\tif (value == 0)\n \t\t\t\t{\n \t\t\t\t\t// Compost bin[Examine] 7808\n-\t\t\t\t\treturn new PatchState(Produce.COMPOST_BIN, CropState.EMPTY, 0);\n+\t\t\t\t\treturn new PatchState(Produce.EMPTY_COMPOST_BIN, CropState.EMPTY, 0);\n \t\t\t\t}\n \t\t\t\tif (value >= 1 && value <= 15)\n \t\t\t\t{\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNzk1Ng==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r507217956", "bodyText": "Also this should probably be EMPTY_BIN(\"Empty\", ...", "author": "abextm", "createdAt": "2020-10-18T21:46:06Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java", "diffHunk": "@@ -131,7 +131,15 @@\n \tCELASTRUS(\"Celastrus\", \"Celastrus tree\", PatchImplementation.CELASTRUS, ItemID.BATTLESTAFF, 160, 6, 0, 4),\n \tREDWOOD(\"Redwood\", \"Redwood tree\", PatchImplementation.REDWOOD, ItemID.REDWOOD_LOGS, 640, 11),\n \tHESPORI(\"Hespori\", NullItemID.NULL_23044, 640, 4, 0, 2),\n-\tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7);\n+\tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7),\n+\tCOMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state", "originalCommit": "f26759aaae88edea64c6ba51d85976e751950c3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\nindex 2fc638b1e..275d6e99a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/Produce.java\n\n@@ -132,11 +132,13 @@ public enum Produce\n \tREDWOOD(\"Redwood\", \"Redwood tree\", PatchImplementation.REDWOOD, ItemID.REDWOOD_LOGS, 640, 11),\n \tHESPORI(\"Hespori\", NullItemID.NULL_23044, 640, 4, 0, 2),\n \tCRYSTAL_TREE(\"Crystal tree\", ItemID.CRYSTAL_SHARDS, 80, 7),\n-\tCOMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\n+\t// Compost bins\n+\tEMPTY_COMPOST_BIN(\"Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n \tCOMPOST(\"Compost\", PatchImplementation.COMPOST, ItemID.COMPOST, 40, 3, 0, 15),\n \tSUPERCOMPOST(\"Supercompost\", PatchImplementation.COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 15),\n \tULTRACOMPOST(\"Ultracompost\", PatchImplementation.COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 15), // Ultra doesn't compost\n-\tGIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n+\tEMPTY_GIANT_COMPOST_BIN(\"Giant Compost Bin\", PatchImplementation.COMPOST, ItemID.COMPOST_BIN, 0, 1, 0, 0), // Dummy produce for the empty state\n \tGIANT_COMPOST(\"Compost\", PatchImplementation.GIANT_COMPOST, ItemID.COMPOST, 40, 3, 0, 30),\n \tGIANT_SUPERCOMPOST(\"Supercompost\", PatchImplementation.GIANT_COMPOST, ItemID.SUPERCOMPOST, 40, 3, 0, 30),\n \tGIANT_ULTRACOMPOST(\"Ultracompost\", PatchImplementation.GIANT_COMPOST, ItemID.ULTRACOMPOST, 0, 3, 0, 30); // Ultra doesn't compost\n"}}, {"oid": "bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "url": "https://github.com/runelite/runelite/commit/bff4bcba7b708eeb5ecb14438313dcbae215ef9c", "message": "timetracking: address code review comments", "committedDate": "2020-10-19T18:54:30Z", "type": "commit"}, {"oid": "1cc880fff512c98c4b2caba4201994fcb4f70c76", "url": "https://github.com/runelite/runelite/commit/1cc880fff512c98c4b2caba4201994fcb4f70c76", "message": "timetracking: map rotten tomato produce to compost bin patch implementations.", "committedDate": "2020-10-19T23:54:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4Mjc4Mg==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r508582782", "bodyText": "@abextm did you check this varbit? It might be made up.", "author": "Adam-", "createdAt": "2020-10-20T14:57:49Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/farming/FarmingWorld.java", "diffHunk": "@@ -272,7 +278,8 @@ public boolean isInBounds(WorldPoint loc)\n \t\t\tnew FarmingPatch(\"North\", Varbits.FARMING_4771, PatchImplementation.ALLOTMENT),\n \t\t\tnew FarmingPatch(\"South\", Varbits.FARMING_4772, PatchImplementation.ALLOTMENT),\n \t\t\tnew FarmingPatch(\"\", Varbits.FARMING_4773, PatchImplementation.FLOWER),\n-\t\t\tnew FarmingPatch(\"\", Varbits.FARMING_4775, PatchImplementation.CRYSTAL_TREE)\n+\t\t\tnew FarmingPatch(\"\", Varbits.FARMING_4775, PatchImplementation.CRYSTAL_TREE),\n+\t\t\tnew FarmingPatch(\"\", Varbits.FARMING_4774, PatchImplementation.COMPOST) // TODO: Find correct varbit", "originalCommit": "1cc880fff512c98c4b2caba4201994fcb4f70c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5OTU1Nw==", "url": "https://github.com/runelite/runelite/pull/12619#discussion_r508599557", "bodyText": "I forgot to remove the TODO, the prif bin tracks correctly at least in my testing.", "author": "SirGirion", "createdAt": "2020-10-20T15:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4Mjc4Mg=="}], "type": "inlineReview", "revised_code": null}]}