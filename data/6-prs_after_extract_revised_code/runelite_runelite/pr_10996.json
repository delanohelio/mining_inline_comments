{"pr_number": 10996, "pr_title": "timetracking: add timer warning colors and ability to sort timers.", "pr_createdAt": "2020-03-11T12:19:28Z", "pr_url": "https://github.com/runelite/runelite/pull/10996", "timeline": [{"oid": "8feaac5c5cd44d8a2470d98e188b0232c4da128f", "url": "https://github.com/runelite/runelite/commit/8feaac5c5cd44d8a2470d98e188b0232c4da128f", "message": "timetracking: add timer warning colors and ability to sort timers.\n\nLets the user sort by ascending or descending time.\nLets the user choose a time for showing a timer warning in orange.\nCloses #7240\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-11T12:33:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5OTQ2NQ==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r391499465", "bodyText": "Use Units", "author": "dekvall", "createdAt": "2020-03-12T09:38:50Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java", "diffHunk": "@@ -83,6 +83,28 @@ default int defaultTimerMinutes()\n \t\treturn 5;\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"sortOrder\",\n+\t\tname = \"Sort Order\",\n+\t\tdescription = \"The order in which to sort the timers\",\n+\t\tposition = 5\n+\t)\n+\tdefault SortOrder sortOrder()\n+\t{\n+\t\treturn SortOrder.NONE;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"timerWarningSeconds\",\n+\t\tname = \"Timer Warning (Seconds)\",\n+\t\tdescription = \"The time at which to change the timer color to the warning color\",\n+\t\tposition = 6\n+\t)\n+\tdefault int timerWarningSeconds()", "originalCommit": "8feaac5c5cd44d8a2470d98e188b0232c4da128f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c860a872b644f4dd2cb548cac28c64e9f6c58a5", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java\nindex f4000fa91..9c1fc49be 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java\n\n@@ -100,6 +100,7 @@ public interface TimeTrackingConfig extends Config\n \t\tdescription = \"The time at which to change the timer color to the warning color\",\n \t\tposition = 6\n \t)\n+\t@Units(Units.SECONDS)\n \tdefault int timerWarningSeconds()\n \t{\n \t\treturn 10;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwNDc0NQ==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r391504745", "bodyText": "I think that this is a bit hard to read, can you un-nest this ternary?", "author": "dekvall", "createdAt": "2020-03-12T09:47:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/TimerPanel.java", "diffHunk": "@@ -42,4 +46,25 @@\n \t\tdeleteButton.addActionListener(e -> clockManager.removeTimer(timer));\n \t\trightActions.add(deleteButton);\n \t}\n+\n+\t@Override\n+\tvoid updateDisplayInput()\n+\t{\n+\t\tsuper.updateDisplayInput();\n+\n+\t\tTimer timer = (Timer) getClock();\n+\t\tif (timer.isWarning())\n+\t\t{\n+\t\t\tdisplayInput.getTextField().setForeground(getColor());\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tprotected Color getColor()\n+\t{\n+\t\tColor color = super.getColor();\n+\t\tTimer timer = (Timer) getClock();\n+\n+\t\treturn timer.isWarning() ? (timer.isActive() ? WARNING_COLOR : WARNING_COLOR.darker()) : super.getColor();", "originalCommit": "8feaac5c5cd44d8a2470d98e188b0232c4da128f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c860a872b644f4dd2cb548cac28c64e9f6c58a5", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/TimerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/TimerPanel.java\nindex d1663e829..af6525348 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/TimerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/TimerPanel.java\n\n@@ -62,9 +62,9 @@ class TimerPanel extends ClockPanel\n \t@Override\n \tprotected Color getColor()\n \t{\n-\t\tColor color = super.getColor();\n \t\tTimer timer = (Timer) getClock();\n+\t\tColor warningColor = timer.isActive() ? WARNING_COLOR : WARNING_COLOR.darker();\n \n-\t\treturn timer.isWarning() ? (timer.isActive() ? WARNING_COLOR : WARNING_COLOR.darker()) : super.getColor();\n+\t\treturn timer.isWarning() ? warningColor : super.getColor();\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODY0MA==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r391528640", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn (remaining > 0) && warning;\n          \n          \n            \n            \t\treturn warning && remaining > 0;", "author": "dekvall", "createdAt": "2020-03-12T10:30:39Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java", "diffHunk": "@@ -96,4 +103,9 @@ void reset()\n \t\tremaining = duration;\n \t\tlastUpdate = Instant.now().getEpochSecond();\n \t}\n+\n+\tboolean isWarning()\n+\t{\n+\t\treturn (remaining > 0) && warning;", "originalCommit": "8feaac5c5cd44d8a2470d98e188b0232c4da128f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c860a872b644f4dd2cb548cac28c64e9f6c58a5", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java\nindex b3e55d3eb..0e496bb06 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java\n\n@@ -106,6 +106,6 @@ class Timer extends Clock\n \n \tboolean isWarning()\n \t{\n-\t\treturn (remaining > 0) && warning;\n+\t\treturn warning && (remaining > 0) ;\n \t}\n }\n"}}, {"oid": "4c860a872b644f4dd2cb548cac28c64e9f6c58a5", "url": "https://github.com/runelite/runelite/commit/4c860a872b644f4dd2cb548cac28c64e9f6c58a5", "message": "timetracking: add timer warning colors and ability to sort timers.\n\nLets the user sort by ascending or descending time.\nLets the user choose a time for showing a timer warning in orange.\nCloses #7240\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-13T20:50:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMDgwOA==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r392530808", "bodyText": "Now that it's using Units the name Timer Warning (Seconds) feels redundant, consider renaming the option and corresponding fields to something like Timer Warning Threshold or similar", "author": "dekvall", "createdAt": "2020-03-13T23:49:30Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java", "diffHunk": "@@ -83,6 +83,29 @@ default int defaultTimerMinutes()\n \t\treturn 5;\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"sortOrder\",\n+\t\tname = \"Sort Order\",\n+\t\tdescription = \"The order in which to sort the timers\",\n+\t\tposition = 5\n+\t)\n+\tdefault SortOrder sortOrder()\n+\t{\n+\t\treturn SortOrder.NONE;\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"timerWarningSeconds\",\n+\t\tname = \"Timer Warning (Seconds)\",\n+\t\tdescription = \"The time at which to change the timer color to the warning color\",\n+\t\tposition = 6\n+\t)\n+\t@Units(Units.SECONDS)\n+\tdefault int timerWarningSeconds()", "originalCommit": "4c860a872b644f4dd2cb548cac28c64e9f6c58a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "92351a4f7d95c8becbbf3d58433cd30d333ba110", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java\nindex 9c1fc49be..0f7598e4c 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/TimeTrackingConfig.java\n\n@@ -95,13 +95,13 @@ public interface TimeTrackingConfig extends Config\n \t}\n \n \t@ConfigItem(\n-\t\tkeyName = \"timerWarningSeconds\",\n-\t\tname = \"Timer Warning (Seconds)\",\n+\t\tkeyName = \"timerWarningThreshold\",\n+\t\tname = \"Timer Warning Threshold\",\n \t\tdescription = \"The time at which to change the timer color to the warning color\",\n \t\tposition = 6\n \t)\n \t@Units(Units.SECONDS)\n-\tdefault int timerWarningSeconds()\n+\tdefault int timerWarningThreshold()\n \t{\n \t\treturn 10;\n \t}\n"}}, {"oid": "92351a4f7d95c8becbbf3d58433cd30d333ba110", "url": "https://github.com/runelite/runelite/commit/92351a4f7d95c8becbbf3d58433cd30d333ba110", "message": "timetracking: add timer warning colors and ability to sort timers.\n\nLets the user sort by ascending or descending time.\nLets the user choose a time for showing a timer warning in orange.\nCloses #7240\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-14T14:34:54Z", "type": "forcePushed"}, {"oid": "680a76cb4c8ba36638ac099d59b217065b9af763", "url": "https://github.com/runelite/runelite/commit/680a76cb4c8ba36638ac099d59b217065b9af763", "message": "timetracking: add timer warning colors\n\nLets the user choose a time for showing when the timer should turn orange.\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-18T11:56:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzMDEwNg==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r394430106", "bodyText": "I think this can just be removed?", "author": "Adam-", "createdAt": "2020-03-18T15:22:42Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/ClockManager.java", "diffHunk": "@@ -131,6 +134,36 @@ public boolean checkCompletion()\n \t\treturn changed;\n \t}\n \n+\t/**\n+\t * Checks to ensure the timers are in the correct order.\n+\t * If they are not, sort them and rebuild the clock panel\n+\t *\n+\t * @return whether the timer order was changed or not\n+\t */\n+\tpublic boolean checkTimerOrder()\n+\t{\n+\t\tSortOrder sortOrder = config.sortOrder();\n+\t\tif (sortOrder != SortOrder.NONE)\n+\t\t{\n+\t\t\tComparator<Timer> comparator = Comparator.comparingLong(Timer::getDisplayTime);\n+\t\t\tif (sortOrder == SortOrder.DESC)\n+\t\t\t{\n+\t\t\t\tcomparator = comparator.reversed();\n+\t\t\t}\n+\n+\t\t\tif (!Comparators.isInOrder(timers, comparator))\n+\t\t\t{\n+\t\t\t\ttimers.sort(comparator);\n+\t\t\t\tsaveTimers();", "originalCommit": "1c9caad107d07c15dc4791a687b0853599b78031", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "25ac3dc939cdd3d1b3161262dab22ba43e6fa339", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/ClockManager.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/ClockManager.java\nindex e943ac88c..1f01e1c3c 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/ClockManager.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/ClockManager.java\n\n@@ -154,16 +154,24 @@ public class ClockManager\n \t\t\tif (!Comparators.isInOrder(timers, comparator))\n \t\t\t{\n \t\t\t\ttimers.sort(comparator);\n-\t\t\t\tsaveTimers();\n \t\t\t\tSwingUtilities.invokeLater(clockTabPanel::rebuild);\n-\n \t\t\t\treturn true;\n \t\t\t}\n \t\t}\n-\n \t\treturn false;\n \t}\n \n+\t/**\n+\t * Sets the warning flag on each timer that should be in the warning state\n+\t */\n+\tpublic void checkForWarnings()\n+\t{\n+\t\tfor (Timer timer : timers)\n+\t\t{\n+\t\t\ttimer.setWarning(timer.getDisplayTime() <= config.timerWarningThreshold());\n+\t\t}\n+\t}\n+\n \tpublic void loadTimers()\n \t{\n \t\tfinal String timersJson = configManager.getConfiguration(TimeTrackingConfig.CONFIG_GROUP, TimeTrackingConfig.TIMERS);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzMTM2Ng==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r394431366", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn warning && (remaining > 0) ;\n          \n          \n            \n            \t\treturn warning && (remaining > 0);", "author": "Adam-", "createdAt": "2020-03-18T15:24:19Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java", "diffHunk": "@@ -96,4 +103,9 @@ void reset()\n \t\tremaining = duration;\n \t\tlastUpdate = Instant.now().getEpochSecond();\n \t}\n+\n+\tboolean isWarning()\n+\t{\n+\t\treturn warning && (remaining > 0) ;", "originalCommit": "680a76cb4c8ba36638ac099d59b217065b9af763", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUxMzExOA==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r394513118", "bodyText": "No idea how I missed that.", "author": "melkypie", "createdAt": "2020-03-18T17:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzMTM2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "25ac3dc939cdd3d1b3161262dab22ba43e6fa339", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java\nindex 0e496bb06..48adf0e76 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/clocks/Timer.java\n\n@@ -106,6 +106,6 @@ class Timer extends Clock\n \n \tboolean isWarning()\n \t{\n-\t\treturn warning && (remaining > 0) ;\n+\t\treturn warning && (remaining > 0);\n \t}\n }\n"}}, {"oid": "25ac3dc939cdd3d1b3161262dab22ba43e6fa339", "url": "https://github.com/runelite/runelite/commit/25ac3dc939cdd3d1b3161262dab22ba43e6fa339", "message": "timetracking: add timer warning colors\n\nLets the user choose a time for showing when the timer should turn orange.\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-18T17:10:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMDMwMA==", "url": "https://github.com/runelite/runelite/pull/10996#discussion_r394600300", "bodyText": "I think this is unused?", "author": "Adam-", "createdAt": "2020-03-18T19:50:17Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/timetracking/SortOrder.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2020, Jake Wilson <https://github.com/jakewilson>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.timetracking;\n+\n+public enum SortOrder\n+{\n+\tNONE(\"NONE\"),\n+\tASC(\"ASC\"),\n+\tDESC(\"DESC\");\n+\n+\tprivate final String name;", "originalCommit": "25ac3dc939cdd3d1b3161262dab22ba43e6fa339", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b978910296e25f6e65b292819408bbb5d219db31", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/SortOrder.java b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/SortOrder.java\nindex f831d015b..14e3924e6 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/SortOrder.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/timetracking/SortOrder.java\n\n@@ -26,14 +26,7 @@ package net.runelite.client.plugins.timetracking;\n \n public enum SortOrder\n {\n-\tNONE(\"NONE\"),\n-\tASC(\"ASC\"),\n-\tDESC(\"DESC\");\n-\n-\tprivate final String name;\n-\n-\tSortOrder(String name)\n-\t{\n-\t\tthis.name = name;\n-\t}\n+\tNONE,\n+\tASC,\n+\tDESC\n }\n"}}, {"oid": "b978910296e25f6e65b292819408bbb5d219db31", "url": "https://github.com/runelite/runelite/commit/b978910296e25f6e65b292819408bbb5d219db31", "message": "timetracking: add ability to sort timers\n\nLets the user sort by ascending or descending time.\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-18T19:56:26Z", "type": "commit"}, {"oid": "ca51a2fe4d7552e06076ab2a0f5c73a553098cfd", "url": "https://github.com/runelite/runelite/commit/ca51a2fe4d7552e06076ab2a0f5c73a553098cfd", "message": "timetracking: add timer warning colors\n\nLets the user choose a time for showing when the timer should turn orange.\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-18T19:56:26Z", "type": "commit"}, {"oid": "ca51a2fe4d7552e06076ab2a0f5c73a553098cfd", "url": "https://github.com/runelite/runelite/commit/ca51a2fe4d7552e06076ab2a0f5c73a553098cfd", "message": "timetracking: add timer warning colors\n\nLets the user choose a time for showing when the timer should turn orange.\n\nCo-authored-by: jakewilson <jakewilsonfl@gmail.com>", "committedDate": "2020-03-18T19:56:26Z", "type": "forcePushed"}]}