{"pr_number": 10928, "pr_title": "object indicators: add support for multiple colors", "pr_createdAt": "2020-03-02T20:22:54Z", "pr_url": "https://github.com/runelite/runelite/pull/10928", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg0NjAyMw==", "url": "https://github.com/runelite/runelite/pull/10928#discussion_r386846023", "bodyText": "This should be checked for null and set to a real value before calling renderPolygon.", "author": "Nightfirecat", "createdAt": "2020-03-03T07:49:51Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java", "diffHunk": "@@ -60,8 +61,11 @@ private ObjectIndicatorsOverlay(Client client, ObjectIndicatorsConfig config, Ob\n \t@Override\n \tpublic Dimension render(Graphics2D graphics)\n \t{\n-\t\tfor (TileObject object : plugin.getObjects())\n+\t\tfor (ColorTileObject colorTileObject : plugin.getObjects())\n \t\t{\n+\t\t\tTileObject object = colorTileObject.getTileObject();\n+\t\t\tColor color = colorTileObject.getColor();", "originalCommit": "a88e9d93bb5cfae05c8c6975d13c6c9572f6bebd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java b/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java\nindex a21a5bf0d..0e52edf0a 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsOverlay.java\n\n@@ -71,6 +71,12 @@ class ObjectIndicatorsOverlay extends Overlay\n \t\t\t\tcontinue;\n \t\t\t}\n \n+\t\t\tif (color == null || !config.rememberObjectColors())\n+\t\t\t{\n+\t\t\t\t// Fallback to the current config if the object is marked before the addition of multiple colors\n+\t\t\t\tcolor = config.markerColor();\n+\t\t\t}\n+\n \t\t\tfinal Shape polygon;\n \t\t\tShape polygon2 = null;\n \n"}}, {"oid": "8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171", "url": "https://github.com/runelite/runelite/commit/8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171", "message": "object indicators: add support for multiple colors", "committedDate": "2020-03-03T19:20:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMDcyMg==", "url": "https://github.com/runelite/runelite/pull/10928#discussion_r389020722", "bodyText": "you can also just objects.removeIf(o -> o.getTileObject() == tileObject)", "author": "Adam-", "createdAt": "2020-03-06T16:55:05Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java", "diffHunk": "@@ -178,54 +182,56 @@ public void onWallObjectChanged(WallObjectChanged event)\n \t\tWallObject previous = event.getPrevious();\n \t\tWallObject wallObject = event.getWallObject();\n \n-\t\tobjects.remove(previous);\n+\t\tremoveObject(previous);\n \t\tcheckObjectPoints(wallObject);\n \t}\n \n \t@Subscribe\n \tpublic void onWallObjectDespawned(WallObjectDespawned event)\n \t{\n-\t\tobjects.remove(event.getWallObject());\n+\t\tremoveObject(event.getWallObject());\n \t}\n \n \t@Subscribe\n \tpublic void onGameObjectSpawned(GameObjectSpawned event)\n \t{\n-\t\tfinal GameObject eventObject = event.getGameObject();\n-\t\tcheckObjectPoints(eventObject);\n+\t\tcheckObjectPoints(event.getGameObject());\n \t}\n \n \t@Subscribe\n \tpublic void onDecorativeObjectSpawned(DecorativeObjectSpawned event)\n \t{\n-\t\tfinal DecorativeObject eventObject = event.getDecorativeObject();\n-\t\tcheckObjectPoints(eventObject);\n+\t\tcheckObjectPoints(event.getDecorativeObject());\n \t}\n \n \t@Subscribe\n \tpublic void onGameObjectDespawned(GameObjectDespawned event)\n \t{\n-\t\tobjects.remove(event.getGameObject());\n+\t\tremoveObject(event.getGameObject());\n \t}\n \n \t@Subscribe\n \tpublic void onDecorativeObjectDespawned(DecorativeObjectDespawned event)\n \t{\n-\t\tobjects.remove(event.getDecorativeObject());\n+\t\tremoveObject(event.getDecorativeObject());\n \t}\n \n \t@Subscribe\n-\tpublic void onGroundObjectSpawned(GroundObjectSpawned groundObjectSpawned)\n+\tpublic void onGroundObjectSpawned(GroundObjectSpawned event)\n \t{\n-\t\tfinal GroundObject groundObject = groundObjectSpawned.getGroundObject();\n-\t\tcheckObjectPoints(groundObject);\n+\t\tcheckObjectPoints(event.getGroundObject());\n \t}\n \n \t@Subscribe\n-\tpublic void onGroundObjectDespawned(GroundObjectDespawned groundObjectDespawned)\n+\tpublic void onGroundObjectDespawned(GroundObjectDespawned event)\n+\t{\n+\t\tremoveObject(event.getGroundObject());\n+\t}\n+\n+\tprivate void removeObject(TileObject tileObject)\n \t{\n-\t\tGroundObject groundObject = groundObjectDespawned.getGroundObject();\n-\t\tobjects.remove(groundObject);\n+\t\tColorTileObject colorTileObject = new ColorTileObject(tileObject);\n+\t\tobjects.remove(colorTileObject);", "originalCommit": "8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a65d44b65a5d72b4f70b3eea1c271ac2c559f94d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java\nindex 4cbb76519..2d6d36a5c 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java\n\n@@ -230,8 +230,7 @@ public class ObjectIndicatorsPlugin extends Plugin implements KeyListener\n \n \tprivate void removeObject(TileObject tileObject)\n \t{\n-\t\tColorTileObject colorTileObject = new ColorTileObject(tileObject);\n-\t\tobjects.remove(colorTileObject);\n+\t\tobjects.removeIf(o -> o.getTileObject() == tileObject);\n \t}\n \n \t@Subscribe\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMjYzMQ==", "url": "https://github.com/runelite/runelite/pull/10928#discussion_r389022631", "bodyText": "similarly objects.stream().anyMatch(o -> o.getTileObject() == tileObject)", "author": "Adam-", "createdAt": "2020-03-06T16:58:08Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java", "diffHunk": "@@ -263,11 +269,19 @@ public void onMenuEntryAdded(MenuEntryAdded event)\n \t\t}\n \n \t\tfinal Tile tile = client.getScene().getTiles()[client.getPlane()][event.getActionParam0()][event.getActionParam1()];\n+\t\tfinal TileObject tileObject = findTileObject(tile, event.getIdentifier());\n+\n+\t\tif (tileObject == null)\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal ColorTileObject colorTileObject = new ColorTileObject(tileObject);\n \n \t\tMenuEntry[] menuEntries = client.getMenuEntries();\n \t\tmenuEntries = Arrays.copyOf(menuEntries, menuEntries.length + 1);\n \t\tMenuEntry menuEntry = menuEntries[menuEntries.length - 1] = new MenuEntry();\n-\t\tmenuEntry.setOption(objects.contains(findTileObject(tile, event.getIdentifier())) ? UNMARK : MARK);\n+\t\tmenuEntry.setOption(objects.contains(colorTileObject) ? UNMARK : MARK);", "originalCommit": "8bc5b1ad721ef7cb00fb72f9c36ad13fe5eb8171", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a65d44b65a5d72b4f70b3eea1c271ac2c559f94d", "chunk": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java\nindex 4cbb76519..2d6d36a5c 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/objectindicators/ObjectIndicatorsPlugin.java\n\n@@ -276,12 +275,10 @@ public class ObjectIndicatorsPlugin extends Plugin implements KeyListener\n \t\t\treturn;\n \t\t}\n \n-\t\tfinal ColorTileObject colorTileObject = new ColorTileObject(tileObject);\n-\n \t\tMenuEntry[] menuEntries = client.getMenuEntries();\n \t\tmenuEntries = Arrays.copyOf(menuEntries, menuEntries.length + 1);\n \t\tMenuEntry menuEntry = menuEntries[menuEntries.length - 1] = new MenuEntry();\n-\t\tmenuEntry.setOption(objects.contains(colorTileObject) ? UNMARK : MARK);\n+\t\tmenuEntry.setOption(objects.stream().anyMatch(o -> o.getTileObject() == tileObject) ? UNMARK : MARK);\n \t\tmenuEntry.setTarget(event.getTarget());\n \t\tmenuEntry.setParam0(event.getActionParam0());\n \t\tmenuEntry.setParam1(event.getActionParam1());\n"}}, {"oid": "a65d44b65a5d72b4f70b3eea1c271ac2c559f94d", "url": "https://github.com/runelite/runelite/commit/a65d44b65a5d72b4f70b3eea1c271ac2c559f94d", "message": "object indicators: add support for multiple colors", "committedDate": "2020-03-09T22:42:39Z", "type": "forcePushed"}, {"oid": "569524a9061820f2ad82e1f0884712920d617ffa", "url": "https://github.com/runelite/runelite/commit/569524a9061820f2ad82e1f0884712920d617ffa", "message": "object indicators: add support for multiple colors", "committedDate": "2020-03-09T22:51:00Z", "type": "commit"}, {"oid": "569524a9061820f2ad82e1f0884712920d617ffa", "url": "https://github.com/runelite/runelite/commit/569524a9061820f2ad82e1f0884712920d617ffa", "message": "object indicators: add support for multiple colors", "committedDate": "2020-03-09T22:51:00Z", "type": "forcePushed"}]}