{"pr_number": 1606, "pr_title": "Abandon ship", "pr_createdAt": "2020-03-31T18:55:06Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1606", "timeline": [{"oid": "7004fbcccea14ef9fdfa9fa0191ad69986e283da", "url": "https://github.com/MegaMek/mekhq/commit/7004fbcccea14ef9fdfa9fa0191ad69986e283da", "message": "Create some marines framework in Unit", "committedDate": "2020-02-19T18:47:27Z", "type": "commit"}, {"oid": "7994b33538777d61e4f3a6e9f5b47e33fcf2898b", "url": "https://github.com/MegaMek/mekhq/commit/7994b33538777d61e4f3a6e9f5b47e33fcf2898b", "message": "Update crew and marine count for each unit at deployment", "committedDate": "2020-02-19T18:47:52Z", "type": "commit"}, {"oid": "559c5887fe62df7e25e39db9bdca0c3de40e64a1", "url": "https://github.com/MegaMek/mekhq/commit/559c5887fe62df7e25e39db9bdca0c3de40e64a1", "message": "Update transport passenger count when loading units in lobby", "committedDate": "2020-02-19T19:15:31Z", "type": "commit"}, {"oid": "b9a0fedede30d37dacd3d65a33095f8b0c7ef687", "url": "https://github.com/MegaMek/mekhq/commit/b9a0fedede30d37dacd3d65a33095f8b0c7ef687", "message": "Update transport passenger counts with techs of loaded units", "committedDate": "2020-02-19T19:16:15Z", "type": "commit"}, {"oid": "1ca844c666be292bb16f6ce90ecad9549842765b", "url": "https://github.com/MegaMek/mekhq/commit/1ca844c666be292bb16f6ce90ecad9549842765b", "message": "Remove unneeded class casts and imports", "committedDate": "2020-02-19T19:25:58Z", "type": "commit"}, {"oid": "1a34ecd5b620447cc2df6c7ea1a0d5addada76cc", "url": "https://github.com/MegaMek/mekhq/commit/1a34ecd5b620447cc2df6c7ea1a0d5addada76cc", "message": "Correct update Entity passengers at unit load", "committedDate": "2020-02-19T19:49:27Z", "type": "commit"}, {"oid": "92858d7bce0c616463a7c7fb3233ec335e62e722", "url": "https://github.com/MegaMek/mekhq/commit/92858d7bce0c616463a7c7fb3233ec335e62e722", "message": "Merge branch 'master' of https://github.com/megamek/mekhq into\nAbandon_ship\n\nConflicts:\n\tMekHQ/src/mekhq/AtBGameThread.java", "committedDate": "2020-03-08T16:23:31Z", "type": "commit"}, {"oid": "cc4b2d5c75ef1d3ca0b2b477a992d6a655c8a64a", "url": "https://github.com/MegaMek/mekhq/commit/cc4b2d5c75ef1d3ca0b2b477a992d6a655c8a64a", "message": "Fix crew size calculations in Unit", "committedDate": "2020-03-12T16:53:58Z", "type": "commit"}, {"oid": "1b1f1f39489d50bcffa0338961047bb7dbfb14fb", "url": "https://github.com/MegaMek/mekhq/commit/1b1f1f39489d50bcffa0338961047bb7dbfb14fb", "message": "Calculate crew size correctly on scenario deployment", "committedDate": "2020-03-12T17:09:03Z", "type": "commit"}, {"oid": "3099675468fd548545a062486f209703ecfaac7e", "url": "https://github.com/MegaMek/mekhq/commit/3099675468fd548545a062486f209703ecfaac7e", "message": "Fix size calculation for single pilot units", "committedDate": "2020-03-12T17:14:36Z", "type": "commit"}, {"oid": "682866bcc1f70d2aae37075cd5b8d671bea21913", "url": "https://github.com/MegaMek/mekhq/commit/682866bcc1f70d2aae37075cd5b8d671bea21913", "message": "Remove BriefingTab edits to crew size. Duplicate code.", "committedDate": "2020-03-14T15:07:45Z", "type": "commit"}, {"oid": "5562c2e614fa4ad0613cca011a13dd6c269ce883", "url": "https://github.com/MegaMek/mekhq/commit/5562c2e614fa4ad0613cca011a13dd6c269ce883", "message": "Remove unused imports from BriefingTab", "committedDate": "2020-03-14T15:09:10Z", "type": "commit"}, {"oid": "d368a383b3c4a05f7ec0485e3e8fa1d36facfa7a", "url": "https://github.com/MegaMek/mekhq/commit/d368a383b3c4a05f7ec0485e3e8fa1d36facfa7a", "message": "Remove transported crew from autoload passenger update", "committedDate": "2020-03-14T16:37:35Z", "type": "commit"}, {"oid": "fcd5179ac36e8615f68020938616ec8491495729", "url": "https://github.com/MegaMek/mekhq/commit/fcd5179ac36e8615f68020938616ec8491495729", "message": "Start setup of processEjectedLargeCraft helper function", "committedDate": "2020-03-20T14:54:21Z", "type": "commit"}, {"oid": "380b8cc06e41f75a944d7aacebe5b2ba721fc7b9", "url": "https://github.com/MegaMek/mekhq/commit/380b8cc06e41f75a944d7aacebe5b2ba721fc7b9", "message": "WIP crew to escape craft matchup", "committedDate": "2020-03-20T16:44:58Z", "type": "commit"}, {"oid": "7123aef4427c56e6d5b6c268da24957cb6e74f67", "url": "https://github.com/MegaMek/mekhq/commit/7123aef4427c56e6d5b6c268da24957cb6e74f67", "message": "Fix NPEs when fetching passengers/crew from escape craft", "committedDate": "2020-03-21T14:34:21Z", "type": "commit"}, {"oid": "5e255543101222bd690df878cbb9eb90d17dbed5", "url": "https://github.com/MegaMek/mekhq/commit/5e255543101222bd690df878cbb9eb90d17dbed5", "message": "WIP import and damage passengers", "committedDate": "2020-03-22T17:09:22Z", "type": "commit"}, {"oid": "af798f1c96aab31a94a082879804695b58b08286", "url": "https://github.com/MegaMek/mekhq/commit/af798f1c96aab31a94a082879804695b58b08286", "message": "Fix load logic so dialog choice isn't ignored after 1st", "committedDate": "2020-03-23T15:14:30Z", "type": "commit"}, {"oid": "343af4978eacc493335b23ef906dcbb546004b03", "url": "https://github.com/MegaMek/mekhq/commit/343af4978eacc493335b23ef906dcbb546004b03", "message": "Add space to prevent double processing of loaded units", "committedDate": "2020-03-23T17:52:04Z", "type": "commit"}, {"oid": "df612c41a5e53db383d9e32a4504a7a090da480f", "url": "https://github.com/MegaMek/mekhq/commit/df612c41a5e53db383d9e32a4504a7a090da480f", "message": "Save bay loaded units in processGame and processMUL", "committedDate": "2020-03-24T16:15:30Z", "type": "commit"}, {"oid": "6f32609aa092657a1a4e578b58a50c1196ab5162", "url": "https://github.com/MegaMek/mekhq/commit/6f32609aa092657a1a4e578b58a50c1196ab5162", "message": "Finish casualty checks for bay destroyed unit crews", "committedDate": "2020-03-24T16:48:19Z", "type": "commit"}, {"oid": "1f8342162f2e72c1bd7793bc16ef393bfa2c724a", "url": "https://github.com/MegaMek/mekhq/commit/1f8342162f2e72c1bd7793bc16ef393bfa2c724a", "message": "Prevent passengers from being hit twice", "committedDate": "2020-03-24T17:00:02Z", "type": "commit"}, {"oid": "2e44a003a9c07af1e8f59e1b33a5a1ec5957d276", "url": "https://github.com/MegaMek/mekhq/commit/2e44a003a9c07af1e8f59e1b33a5a1ec5957d276", "message": "WIP deal with ejected/rescued passengers", "committedDate": "2020-03-25T17:15:50Z", "type": "commit"}, {"oid": "35a6260d36e74228d49c336aa4cd7ba5f0f77efb", "url": "https://github.com/MegaMek/mekhq/commit/35a6260d36e74228d49c336aa4cd7ba5f0f77efb", "message": "WIP personStatus updates for LC passengers", "committedDate": "2020-03-28T16:41:14Z", "type": "commit"}, {"oid": "0dffedea60a397a66349c2be6dbbef98c4dc5552", "url": "https://github.com/MegaMek/mekhq/commit/0dffedea60a397a66349c2be6dbbef98c4dc5552", "message": "Rescue everyone if host ship ejecting not destroyed", "committedDate": "2020-03-28T16:51:56Z", "type": "commit"}, {"oid": "a686ac357d06d5b502b957dafeb35d29d36e2876", "url": "https://github.com/MegaMek/mekhq/commit/a686ac357d06d5b502b957dafeb35d29d36e2876", "message": "Change processing of entities in bays", "committedDate": "2020-03-29T15:53:40Z", "type": "commit"}, {"oid": "ca05c9480577347677d2f9cfa54663f8961c9e79", "url": "https://github.com/MegaMek/mekhq/commit/ca05c9480577347677d2f9cfa54663f8961c9e79", "message": "Handle dead but still loaded units and crews", "committedDate": "2020-03-30T16:12:04Z", "type": "commit"}, {"oid": "2590740eb59b4d852ed366b832cae0813374f56e", "url": "https://github.com/MegaMek/mekhq/commit/2590740eb59b4d852ed366b832cae0813374f56e", "message": "WIP handle MUL resolution", "committedDate": "2020-03-30T16:34:53Z", "type": "commit"}, {"oid": "7be0393bb668d6fd60e3978b77844d06c84ff9e2", "url": "https://github.com/MegaMek/mekhq/commit/7be0393bb668d6fd60e3978b77844d06c84ff9e2", "message": "Really prevent double processing of loaded units", "committedDate": "2020-03-31T17:55:23Z", "type": "commit"}, {"oid": "1fa78b2c9fa48ccca82a7d20f92f4c099f688cb8", "url": "https://github.com/MegaMek/mekhq/commit/1fa78b2c9fa48ccca82a7d20f92f4c099f688cb8", "message": "Destroy loaded units in Salvage section of MUL", "committedDate": "2020-03-31T18:36:56Z", "type": "commit"}, {"oid": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "url": "https://github.com/MegaMek/mekhq/commit/6f435eead4a970afab02f06a31f3b1c9879b7ece", "message": "Merge branch 'master' of https://github.com/megamek/mekhq into Abandon_ship", "committedDate": "2020-03-31T18:51:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3ODk3MA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401178970", "bodyText": "Why was this swapped from .equals? That makes no sense for a string comparison. Also a few other weird formatting changes in this file.", "author": "Windchild292", "createdAt": "2020-03-31T20:01:32Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -395,7 +409,7 @@ private void configureBot(BotClient botClient, BotForce botForce) {\n                 botClient.getLocalPlayer().setTeam(botForce.getTeam());\n                 botClient.getLocalPlayer().setStartingPos(botForce.getStart());\n \n-                if (botForce.getCamoCategory().equals(Player.NO_CAMO)) {\n+                if (botForce.getCamoCategory() == Player.NO_CAMO) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MTcxMg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401681712", "bodyText": "Couldn't say. I suspect it was introduced from a merge of the latest Master.", "author": "mkerensky", "createdAt": "2020-04-01T14:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3ODk3MA=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -409,7 +409,7 @@ public class AtBGameThread extends GameThread {\n                 botClient.getLocalPlayer().setTeam(botForce.getTeam());\n                 botClient.getLocalPlayer().setStartingPos(botForce.getStart());\n \n-                if (botForce.getCamoCategory() == Player.NO_CAMO) {\n+                if (botForce.getCamoCategory().equals(Player.NO_CAMO)) {\n                     if (botForce.getColorIndex() >= 0) {\n                         botClient.getLocalPlayer().setColorIndex(botForce.getColorIndex());\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDEzMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401184131", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        if(wounded) {\n          \n          \n            \n                                        if (wounded) {", "author": "Windchild292", "createdAt": "2020-03-31T20:10:33Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {\n+            PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n+                    p.getHits(), p.getId());\n+            boolean wounded = false;\n+            if(casualtiesAssigned < casualties) {\n+                casualtiesAssigned++;\n+                if(Compute.d6(2) >= 7) {\n+                    wounded = true;\n+                } else {\n+                    status.setHits(6);\n+                    status.setDead(true);\n+                }\n+            }\n+            if(wounded) {\n+                int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n+                if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n+                    int range = 6 - hits;\n+                    hits = hits + Compute.randomInt(range);\n+                }\n+                status.setHits(hits);\n+            }\n+        status.setXP(campaign.getCampaignOptions().getScenarioXP());\n+        status.setDeployed(!en.wasNeverDeployed());\n+        peopleStatus.put(p.getId(), status);\n+        }\n+        \n+        //Now, did the passengers take any hits? \n+        //We'll assume that if units in transport bays were hit, their crews and techs might also have been\n+        Set<PersonStatus> allPassengersStatus = new HashSet<>(); //Use this to keep track of ejected passengers for the next step\n+        List<Entity> cargo = bayLoadedEntities.get(UUID.fromString(en.getExternalIdAsString()));\n+        if (cargo != null) {\n+            for (Entity e : cargo) {\n+                //Match the still-loaded cargo entity with its unit so we can get the crew\n+                Unit u = campaign.getUnit(UUID.fromString(e.getExternalIdAsString()));\n+                if (u != null) {\n+                    List<Person> cargoCrew = u.getActiveCrew();\n+                    cargoCrew.add(u.getTech());\n+                    cargoCrew = shuffleCrew(cargoCrew);\n+                    for (Person p : cargoCrew) {\n+                        PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                                p.getHits(), p.getId());\n+                        boolean wounded = false;\n+                        //The lore says bay crews have pressurized sleeping alcoves in the corners of each bay\n+                        //Let's assume people are injured on an 8+ if the unit is destroyed, same as a critical hit chance\n+                        if (e.isDestroyed() && Compute.d6(2) >= 8) {\n+                            //As with crewmembers, on a 7+ they're only wounded\n+                            if(Compute.d6(2) >= 7) {\n+                                wounded = true;\n+                            } else {\n+                                status.setHits(6);\n+                                status.setDead(true);\n+                            }\n+                            if(wounded) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MDgyOA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401690828", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDEzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDE5MA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401184190", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        if(Compute.d6(2) >= 7) {\n          \n          \n            \n                                        if (Compute.d6(2) >= 7) {", "author": "Windchild292", "createdAt": "2020-03-31T20:10:41Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {\n+            PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n+                    p.getHits(), p.getId());\n+            boolean wounded = false;\n+            if(casualtiesAssigned < casualties) {\n+                casualtiesAssigned++;\n+                if(Compute.d6(2) >= 7) {\n+                    wounded = true;\n+                } else {\n+                    status.setHits(6);\n+                    status.setDead(true);\n+                }\n+            }\n+            if(wounded) {\n+                int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n+                if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n+                    int range = 6 - hits;\n+                    hits = hits + Compute.randomInt(range);\n+                }\n+                status.setHits(hits);\n+            }\n+        status.setXP(campaign.getCampaignOptions().getScenarioXP());\n+        status.setDeployed(!en.wasNeverDeployed());\n+        peopleStatus.put(p.getId(), status);\n+        }\n+        \n+        //Now, did the passengers take any hits? \n+        //We'll assume that if units in transport bays were hit, their crews and techs might also have been\n+        Set<PersonStatus> allPassengersStatus = new HashSet<>(); //Use this to keep track of ejected passengers for the next step\n+        List<Entity> cargo = bayLoadedEntities.get(UUID.fromString(en.getExternalIdAsString()));\n+        if (cargo != null) {\n+            for (Entity e : cargo) {\n+                //Match the still-loaded cargo entity with its unit so we can get the crew\n+                Unit u = campaign.getUnit(UUID.fromString(e.getExternalIdAsString()));\n+                if (u != null) {\n+                    List<Person> cargoCrew = u.getActiveCrew();\n+                    cargoCrew.add(u.getTech());\n+                    cargoCrew = shuffleCrew(cargoCrew);\n+                    for (Person p : cargoCrew) {\n+                        PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                                p.getHits(), p.getId());\n+                        boolean wounded = false;\n+                        //The lore says bay crews have pressurized sleeping alcoves in the corners of each bay\n+                        //Let's assume people are injured on an 8+ if the unit is destroyed, same as a critical hit chance\n+                        if (e.isDestroyed() && Compute.d6(2) >= 8) {\n+                            //As with crewmembers, on a 7+ they're only wounded\n+                            if(Compute.d6(2) >= 7) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MDcwNQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401690705", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDE5MA=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDY2MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401184661", "bodyText": "Suggested change", "author": "Windchild292", "createdAt": "2020-03-31T20:11:36Z", "path": "MekHQ/src/mekhq/campaign/unit/Unit.java", "diffHunk": "@@ -117,14 +117,17 @@\n     // Convenience data used by GameThread\n     private boolean carryingAero = false;\n     private boolean carryingGround = false;\n-\n+    ", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MTQ3NA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401691474", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:10:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDY2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d40fec103106864f2e89ecbb344e5ab97872f624", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/unit/Unit.java b/MekHQ/src/mekhq/campaign/unit/Unit.java\nindex f75cc6b6a..758254d36 100644\n--- a/MekHQ/src/mekhq/campaign/unit/Unit.java\n+++ b/MekHQ/src/mekhq/campaign/unit/Unit.java\n\n@@ -117,7 +117,7 @@ public class Unit implements MekHqXmlSerializable, ITechnology {\n     // Convenience data used by GameThread\n     private boolean carryingAero = false;\n     private boolean carryingGround = false;\n-    \n+\n     //assignments\n     private int forceId;\n     protected int scenarioId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTEwNQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401185105", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * \n          \n          \n            \n             *", "author": "Windchild292", "createdAt": "2020-03-31T20:12:25Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -51,7 +51,7 @@\n \n /**\n  * @author Neoancient\n- *\n+ * ", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NzEzNg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401677136", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:52:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTEwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -51,7 +51,7 @@ import mekhq.campaign.unit.Unit;\n \n /**\n  * @author Neoancient\n- * \n+ *\n  * Enhanced version of GameThread which imports settings and non-player\n  * units into the MM game\n  *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTIyOQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401185229", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if((scenario instanceof AtBScenario) &&\n          \n          \n            \n                            if ((scenario instanceof AtBScenario) &&", "author": "Windchild292", "createdAt": "2020-03-31T20:12:38Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -128,7 +128,7 @@ public void run() {\n                 MapSettings mapSettings = MapSettings.getInstance();\n \n                 // if the scenario is taking place in space, do space settings instead\n-                if ((scenario instanceof AtBScenario) &&\n+                if((scenario instanceof AtBScenario) &&", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NzUzMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401677533", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTIyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -128,7 +128,7 @@ public class AtBGameThread extends GameThread {\n                 MapSettings mapSettings = MapSettings.getInstance();\n \n                 // if the scenario is taking place in space, do space settings instead\n-                if((scenario instanceof AtBScenario) &&\n+                if ((scenario instanceof AtBScenario) &&\n                         scenario.getTerrainType() == AtBScenario.TER_SPACE) {\n                     mapSettings.setMedium(MapSettings.MEDIUM_SPACE);\n                 } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTMxMg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401185312", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            PlanetaryConditions planetaryConditions = new PlanetaryConditions(); \n          \n          \n            \n                            PlanetaryConditions planetaryConditions = new PlanetaryConditions();", "author": "Windchild292", "createdAt": "2020-03-31T20:12:47Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -153,7 +153,7 @@ public void run() {\n                 client.sendMapSettings(mapSettings);\n                 Thread.sleep(campaign.getCampaignOptions().getStartGameDelay());\n \n-                PlanetaryConditions planetaryConditions = new PlanetaryConditions();\n+                PlanetaryConditions planetaryConditions = new PlanetaryConditions(); ", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3Nzc3NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401677775", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTMxMg=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -153,7 +153,7 @@ public class AtBGameThread extends GameThread {\n                 client.sendMapSettings(mapSettings);\n                 Thread.sleep(campaign.getCampaignOptions().getStartGameDelay());\n \n-                PlanetaryConditions planetaryConditions = new PlanetaryConditions(); \n+                PlanetaryConditions planetaryConditions = new PlanetaryConditions();\n                 planetaryConditions.setLight(scenario.getLight());\n                 planetaryConditions.setWeather(scenario.getWeather());\n                 planetaryConditions.setWindStrength(scenario.getWind());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTQzMg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401185432", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // Wait a few secs to not overuse bandwith\n          \n          \n            \n                                // Wait a few secs to not overuse bandwidth", "author": "Windchild292", "createdAt": "2020-03-31T20:12:57Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -223,7 +229,7 @@ public void run() {\n                     entity.setDeployRound(deploymentRound);\n                     // Add Mek to game\n                     client.sendAddEntity(entity);\n-                    // Wait a few secs to not overuse bandwidth\n+                    // Wait a few secs to not overuse bandwith", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3ODcyMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401678723", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTQzMg=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -229,7 +229,7 @@ public class AtBGameThread extends GameThread {\n                     entity.setDeployRound(deploymentRound);\n                     // Add Mek to game\n                     client.sendAddEntity(entity);\n-                    // Wait a few secs to not overuse bandwith\n+                    // Wait a few secs to not overuse bandwidth\n                     Thread.sleep(campaign.getCampaignOptions().getStartGameDelay());\n                 }\n                 // Run through the units again. This time add transported units to the correct linkage,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTU4Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401185583", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (entity.isLargeCraft() || entity.getUnitType() == UnitType.SMALL_CRAFT) {\n          \n          \n            \n                                if (entity.isLargeCraft() || (entity.getUnitType() == UnitType.SMALL_CRAFT)) {", "author": "Windchild292", "createdAt": "2020-03-31T20:13:13Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -199,6 +199,12 @@ public void run() {\n                         //Store this unit as a potential transport to load\n                         scenario.getPlayerTransportLinkages().put(unit.getId(), new ArrayList<>());\n                     }\n+                    // If this unit is a spacecraft, set the crew size and marine size values\n+                    if (entity.isLargeCraft() || entity.getUnitType() == UnitType.SMALL_CRAFT) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3ODMwMg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401678302", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -200,7 +200,7 @@ public class AtBGameThread extends GameThread {\n                         scenario.getPlayerTransportLinkages().put(unit.getId(), new ArrayList<>());\n                     }\n                     // If this unit is a spacecraft, set the crew size and marine size values\n-                    if (entity.isLargeCraft() || entity.getUnitType() == UnitType.SMALL_CRAFT) {\n+                    if (entity.isLargeCraft() || (entity.getUnitType() == UnitType.SMALL_CRAFT)) {\n                         entity.setNCrew(unit.getActiveCrew().size());\n                         //TODO: Change this when marines are fully implemented\n                         entity.setNMarines(unit.getMarineCount());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NjQ0OQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401186449", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }    \t\n          \n          \n            \n                    }", "author": "Windchild292", "createdAt": "2020-03-31T20:14:37Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -408,6 +422,6 @@ private void configureBot(BotClient botClient, BotForce botForce) {\n             }\n         } catch (Exception e) {\n             MekHQ.getLogger().error(getClass(), \"configureBot\", e); //$NON-NLS-1$\n-        }\n+        }    \t", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MTk3MA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401681970", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:58:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NjQ0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -422,6 +422,6 @@ public class AtBGameThread extends GameThread {\n             }\n         } catch (Exception e) {\n             MekHQ.getLogger().error(getClass(), \"configureBot\", e); //$NON-NLS-1$\n-        }    \t\n+        }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NjgwNw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401186807", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (botForce.getCamoCategory() == Player.NO_CAMO) {\n          \n          \n            \n                            if (botForce.getCamoCategory().equals(Player.NO_CAMO)) {", "author": "Windchild292", "createdAt": "2020-03-31T20:15:09Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -395,7 +409,7 @@ private void configureBot(BotClient botClient, BotForce botForce) {\n                 botClient.getLocalPlayer().setTeam(botForce.getTeam());\n                 botClient.getLocalPlayer().setStartingPos(botForce.getStart());\n \n-                if (botForce.getCamoCategory().equals(Player.NO_CAMO)) {\n+                if (botForce.getCamoCategory() == Player.NO_CAMO) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -409,7 +409,7 @@ public class AtBGameThread extends GameThread {\n                 botClient.getLocalPlayer().setTeam(botForce.getTeam());\n                 botClient.getLocalPlayer().setStartingPos(botForce.getStart());\n \n-                if (botForce.getCamoCategory() == Player.NO_CAMO) {\n+                if (botForce.getCamoCategory().equals(Player.NO_CAMO)) {\n                     if (botForce.getColorIndex() >= 0) {\n                         botClient.getLocalPlayer().setColorIndex(botForce.getColorIndex());\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4Njg5Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401186893", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * \n          \n          \n            \n                 *", "author": "Windchild292", "createdAt": "2020-03-31T20:15:19Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -367,7 +381,7 @@ public void run() {\n     /**\n      * wait for the server to add the bot client, then send starting position,\n      * camo, and entities\n-     *\n+     * ", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MDEwOQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401680109", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T14:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4Njg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "chunk": "diff --git a/MekHQ/src/mekhq/AtBGameThread.java b/MekHQ/src/mekhq/AtBGameThread.java\nindex 07f03662c..e35bf839c 100644\n--- a/MekHQ/src/mekhq/AtBGameThread.java\n+++ b/MekHQ/src/mekhq/AtBGameThread.java\n\n@@ -381,7 +381,7 @@ public class AtBGameThread extends GameThread {\n     /**\n      * wait for the server to add the bot client, then send starting position,\n      * camo, and entities\n-     * \n+     *\n      * @param botClient\n      * @param botForce\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4ODQyMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401188421", "bodyText": "I'm assuming this is to ensure the UUIDs are all unique?", "author": "Windchild292", "createdAt": "2020-03-31T20:18:05Z", "path": "MekHQ/src/mekhq/AtBGameThread.java", "diffHunk": "@@ -317,33 +323,41 @@ public void run() {\n                     if(scenario instanceof AtBScenario) {\n                         AtBDynamicScenarioFactory.loadTransports((AtBScenario) scenario, botClient);\n                     }\n-\n-                    // Prompt the player to auto-load units into transports\n-                    if (!scenario.getPlayerTransportLinkages().isEmpty()) {\n+                }\n+                \n+                // All player and bot units have been added to the lobby\n+                // Prompt the player to auto-load units into transports\n+                if (!scenario.getPlayerTransportLinkages().isEmpty()) {\n+                    for (UUID id : scenario.getPlayerTransportLinkages().keySet()) {\n                         boolean loadFighters = false;\n                         boolean loadGround = false;\n-                        for (UUID id : scenario.getPlayerTransportLinkages().keySet()) {\n-                            Unit transport = campaign.getUnit(id);\n-                            Set<Integer> toLoad = new HashSet<>();\n-                            // Let the player choose to load fighters and/or ground units on each transport\n-                            if (transport.isCarryingAero()) {\n-                                loadFighters = (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(null,\n-                                                    String.format(AtBGameThread.LOAD_FTR_DIALOG_TEXT, transport.getName()),\n-                                                    AtBGameThread.LOAD_FTR_DIALOG_TITLE, JOptionPane.YES_NO_OPTION));\n-                            }\n-                            if (transport.isCarryingGround()) {\n-                                loadGround = (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(null,\n-                                        String.format(AtBGameThread.LOAD_GND_DIALOG_TEXT, transport.getName()),\n-                                        AtBGameThread.LOAD_GND_DIALOG_TITLE, JOptionPane.YES_NO_OPTION));\n-                            }\n-                            // Now, send the load commands\n-                            if (loadFighters || loadGround) {\n-                                for (UUID cargoId : scenario.getPlayerTransportLinkages().get(id)) {\n-                                    //Convert the list of Unit UUIDs to MM EntityIds\n-                                    toLoad.add(campaign.getUnit(cargoId).getEntity().getId());\n-                                }\n-                                Utilities.loadPlayerTransports(transport.getEntity().getId(), toLoad, client, loadFighters, loadGround);\n+                        Unit transport = campaign.getUnit(id);\n+                        Set<Integer> toLoad = new HashSet<>();\n+                        // Let the player choose to load fighters and/or ground units on each transport\n+                        if (transport.isCarryingAero()) {\n+                            loadFighters = (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(null,\n+                                                String.format(AtBGameThread.LOAD_FTR_DIALOG_TEXT, transport.getName()),\n+                                                AtBGameThread.LOAD_FTR_DIALOG_TITLE, JOptionPane.YES_NO_OPTION));\n+                        }\n+                        if (transport.isCarryingGround()) {\n+                            loadGround = (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(null,\n+                                    String.format(AtBGameThread.LOAD_GND_DIALOG_TEXT, transport.getName()),\n+                                    AtBGameThread.LOAD_GND_DIALOG_TITLE, JOptionPane.YES_NO_OPTION));\n+                        }\n+                        // Now, send the load commands\n+                        if (loadFighters || loadGround) {\n+                            // List of technicians assigned to transported units. Several units can share a tech.\n+                            Set<UUID> cargoTechs = new HashSet<>();", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3OTc4OA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401679788", "bodyText": "Correct.  You can have the same tech assigned to multiple units, and I only want one person to be added aboard the transport in such cases.", "author": "mkerensky", "createdAt": "2020-04-01T14:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4ODQyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MDg4NA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401190884", "bodyText": "Suggested change", "author": "Windchild292", "createdAt": "2020-03-31T20:22:10Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -375,7 +412,7 @@ private UnitStatus processAlliedUnit(Entity e) {\n         UnitStatus us = new UnitStatus(nu);\n         unitsStatus.put(nu.getId(), us);\n         alliedUnits.add(nu);\n-\n+        ", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4NzgzMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401687833", "bodyText": "Fixed. My IDE puts this space in when I add a new line. I think I fixed that in preferences from here forward.", "author": "mkerensky", "createdAt": "2020-04-01T15:06:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MDg4NA=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -412,7 +412,7 @@ public class ResolveScenarioTracker {\n         UnitStatus us = new UnitStatus(nu);\n         unitsStatus.put(nu.getId(), us);\n         alliedUnits.add(nu);\n-        \n+\n         return us;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Mzk1NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401193955", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if (transport != null && transport.isLargeCraft()) {\n          \n          \n            \n                                    if ((transport != null) && transport.isLargeCraft()) {", "author": "Windchild292", "createdAt": "2020-03-31T20:27:33Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4ODMxNw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401688317", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Mzk1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NjU5Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401196593", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            for(Person p : crew) {\n          \n          \n            \n                            for (Person p : crew) {", "author": "Windchild292", "createdAt": "2020-03-31T20:32:09Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {\n+                            continue;\n+                        }\n+                    }\n                 }\n-                if (null != en.getCrew()) {\n-                    currentHits = en.getCrew().getHits();\n+                // check for an ejected entity and if we find one then assign it instead to switch vees\n+                // over to infantry checks for casualties\n+                Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                // determine total casualties for infantry and large craft\n+                int casualties = 0;\n+                int casualtiesAssigned = 0;\n+                Infantry infantry = null;\n+                if (en instanceof Infantry) {\n+                    infantry = (Infantry) en;\n+                } else if (ejected != null) {\n+                    infantry = (Infantry) ejected;\n                 }\n-                int newHits = Math.max(0, currentHits - existingHits);\n-                casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n-            }\n-            //try to find the crew in our pilot and mia vectors\n-            Crew pilot = pilots.get(u.getCommander().getId());\n-            boolean missingCrew = false;\n-            //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n-            if (null == pilot) {\n-                for (Person p : u.getCrew()) {\n-                    if (pilots.containsKey(p.getId())) {\n-                        pilot = pilots.get(p.getId());\n-                        break;\n+                if (infantry != null) {\n+                    infantry.applyDamage();\n+                    // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n+                    int strength = Math.min(infantry.getShootingStrength(), crew.size());\n+                    casualties = crew.size() - strength;\n+                    if (unitStatus.isTotalLoss()) {\n+                        casualties = crew.size();\n+                    }\n+                    // If a tank has already taken hits to the commander or driver, do not assign them again.\n+                    if (en instanceof Tank) {\n+                        if (((Tank) en).isDriverHit()) {\n+                            casualtiesAssigned++;\n+                        }\n+                        if (((Tank) en).isCommanderHit()) {\n+                            casualtiesAssigned++;\n+                        }\n                     }\n                 }\n-            }\n-            if (null == pilot) {\n-                pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-                missingCrew = true;\n-            }\n-            for(Person p : crew) {\n-                PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n-                        p.getHits(), p.getId());\n-                status.setMissing(missingCrew);\n-                // if the pilot was not found in either the pilot or mia vector\n-                // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                //try to find the crew in our pilot and mia vectors\n+                Crew pilot = pilots.get(u.getCommander().getId());\n+                boolean missingCrew = false;\n+                //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n                 if (null == pilot) {\n-                    status.setHits(6);\n-                    status.setDead(true);\n-                }\n-                // multi-crewed cockpit; set each crew member separately\n-                else if (pilot.getSlotCount() > 1) {\n-                    for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n-                        if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n-                            status.setHits(pilot.getHits(slot));\n+                    for (Person p : u.getCrew()) {\n+                        if (pilots.containsKey(p.getId())) {\n+                            pilot = pilots.get(p.getId());\n                             break;\n                         }\n                     }\n-                // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n-                } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n-                    status.setHits(pilot.getHits());\n-                } else {\n-                    // we have a multi-crewed Vehicle/Aero/Infantry\n-                    boolean wounded = false;\n-                    // tanks need to be handled specially because of the special crits and because\n-                    // tank destruction should \"kill\" the crew\n-                    if (en instanceof Tank) {\n-                        boolean destroyed = false;\n-                        for (int loc = 0; loc < en.locations(); loc++) {\n-                            if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n-                                continue;\n-                            }\n-                            if (en.getInternal(loc) <= 0) {\n-                                destroyed = true;\n+                }\n+                if (null == pilot) {\n+                    pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                    missingCrew = true;\n+                }\n+                for(Person p : crew) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4ODYyMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401688623", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NjU5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NzY3MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401197671", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            if(Compute.d6(2) >= 7) {\n          \n          \n            \n                                            if (Compute.d6(2) >= 7) {", "author": "Windchild292", "createdAt": "2020-03-31T20:33:58Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {\n+                            continue;\n+                        }\n+                    }\n                 }\n-                if (null != en.getCrew()) {\n-                    currentHits = en.getCrew().getHits();\n+                // check for an ejected entity and if we find one then assign it instead to switch vees\n+                // over to infantry checks for casualties\n+                Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                // determine total casualties for infantry and large craft\n+                int casualties = 0;\n+                int casualtiesAssigned = 0;\n+                Infantry infantry = null;\n+                if (en instanceof Infantry) {\n+                    infantry = (Infantry) en;\n+                } else if (ejected != null) {\n+                    infantry = (Infantry) ejected;\n                 }\n-                int newHits = Math.max(0, currentHits - existingHits);\n-                casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n-            }\n-            //try to find the crew in our pilot and mia vectors\n-            Crew pilot = pilots.get(u.getCommander().getId());\n-            boolean missingCrew = false;\n-            //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n-            if (null == pilot) {\n-                for (Person p : u.getCrew()) {\n-                    if (pilots.containsKey(p.getId())) {\n-                        pilot = pilots.get(p.getId());\n-                        break;\n+                if (infantry != null) {\n+                    infantry.applyDamage();\n+                    // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n+                    int strength = Math.min(infantry.getShootingStrength(), crew.size());\n+                    casualties = crew.size() - strength;\n+                    if (unitStatus.isTotalLoss()) {\n+                        casualties = crew.size();\n+                    }\n+                    // If a tank has already taken hits to the commander or driver, do not assign them again.\n+                    if (en instanceof Tank) {\n+                        if (((Tank) en).isDriverHit()) {\n+                            casualtiesAssigned++;\n+                        }\n+                        if (((Tank) en).isCommanderHit()) {\n+                            casualtiesAssigned++;\n+                        }\n                     }\n                 }\n-            }\n-            if (null == pilot) {\n-                pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-                missingCrew = true;\n-            }\n-            for(Person p : crew) {\n-                PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n-                        p.getHits(), p.getId());\n-                status.setMissing(missingCrew);\n-                // if the pilot was not found in either the pilot or mia vector\n-                // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                //try to find the crew in our pilot and mia vectors\n+                Crew pilot = pilots.get(u.getCommander().getId());\n+                boolean missingCrew = false;\n+                //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n                 if (null == pilot) {\n-                    status.setHits(6);\n-                    status.setDead(true);\n-                }\n-                // multi-crewed cockpit; set each crew member separately\n-                else if (pilot.getSlotCount() > 1) {\n-                    for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n-                        if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n-                            status.setHits(pilot.getHits(slot));\n+                    for (Person p : u.getCrew()) {\n+                        if (pilots.containsKey(p.getId())) {\n+                            pilot = pilots.get(p.getId());\n                             break;\n                         }\n                     }\n-                // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n-                } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n-                    status.setHits(pilot.getHits());\n-                } else {\n-                    // we have a multi-crewed Vehicle/Aero/Infantry\n-                    boolean wounded = false;\n-                    // tanks need to be handled specially because of the special crits and because\n-                    // tank destruction should \"kill\" the crew\n-                    if (en instanceof Tank) {\n-                        boolean destroyed = false;\n-                        for (int loc = 0; loc < en.locations(); loc++) {\n-                            if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n-                                continue;\n-                            }\n-                            if (en.getInternal(loc) <= 0) {\n-                                destroyed = true;\n+                }\n+                if (null == pilot) {\n+                    pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                    missingCrew = true;\n+                }\n+                for(Person p : crew) {\n+                    PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                            p.getHits(), p.getId());\n+                    status.setMissing(missingCrew);\n+                    // if the pilot was not found in either the pilot or mia vector\n+                    // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                    if (null == pilot) {\n+                        status.setHits(6);\n+                        status.setDead(true);\n+                    }\n+                    // multi-crewed cockpit; set each crew member separately\n+                    else if (pilot.getSlotCount() > 1) {\n+                        for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n+                            if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n+                                status.setHits(pilot.getHits(slot));\n                                 break;\n                             }\n                         }\n-                        if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n-                            if (Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n-                            }\n-                        } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                    // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n+                    } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n+                        status.setHits(pilot.getHits());\n+                    } else {\n+                        // we have a multi-crewed Vehicle/Aero/Infantry\n+                        boolean wounded = false;\n+                        // tanks need to be handled specially because of the special crits and because\n+                        // tank destruction should \"kill\" the crew\n+                        if (en instanceof Tank) {\n+                            boolean destroyed = false;\n+                            for (int loc = 0; loc < en.locations(); loc++) {\n+                                if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n+                                    continue;\n+                                }\n+                                if (en.getInternal(loc) <= 0) {\n+                                    destroyed = true;\n+                                    break;\n+                                }\n                             }\n-                        } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n-                                || u.isTechOfficer(p))) {\n-                            //If there is a command console, the commander hit flag is set on the second such critical,\n-                            //which means both commanders have been hit.\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                            if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n+                                if (Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n+                                if(Compute.d6(2) >= 7) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4ODg5MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401688891", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NzY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Nzc5Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401197797", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            if(Compute.d6(2) >= 7) {\n          \n          \n            \n                                            if (Compute.d6(2) >= 7) {", "author": "Windchild292", "createdAt": "2020-03-31T20:34:09Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {\n+                            continue;\n+                        }\n+                    }\n                 }\n-                if (null != en.getCrew()) {\n-                    currentHits = en.getCrew().getHits();\n+                // check for an ejected entity and if we find one then assign it instead to switch vees\n+                // over to infantry checks for casualties\n+                Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                // determine total casualties for infantry and large craft\n+                int casualties = 0;\n+                int casualtiesAssigned = 0;\n+                Infantry infantry = null;\n+                if (en instanceof Infantry) {\n+                    infantry = (Infantry) en;\n+                } else if (ejected != null) {\n+                    infantry = (Infantry) ejected;\n                 }\n-                int newHits = Math.max(0, currentHits - existingHits);\n-                casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n-            }\n-            //try to find the crew in our pilot and mia vectors\n-            Crew pilot = pilots.get(u.getCommander().getId());\n-            boolean missingCrew = false;\n-            //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n-            if (null == pilot) {\n-                for (Person p : u.getCrew()) {\n-                    if (pilots.containsKey(p.getId())) {\n-                        pilot = pilots.get(p.getId());\n-                        break;\n+                if (infantry != null) {\n+                    infantry.applyDamage();\n+                    // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n+                    int strength = Math.min(infantry.getShootingStrength(), crew.size());\n+                    casualties = crew.size() - strength;\n+                    if (unitStatus.isTotalLoss()) {\n+                        casualties = crew.size();\n+                    }\n+                    // If a tank has already taken hits to the commander or driver, do not assign them again.\n+                    if (en instanceof Tank) {\n+                        if (((Tank) en).isDriverHit()) {\n+                            casualtiesAssigned++;\n+                        }\n+                        if (((Tank) en).isCommanderHit()) {\n+                            casualtiesAssigned++;\n+                        }\n                     }\n                 }\n-            }\n-            if (null == pilot) {\n-                pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-                missingCrew = true;\n-            }\n-            for(Person p : crew) {\n-                PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n-                        p.getHits(), p.getId());\n-                status.setMissing(missingCrew);\n-                // if the pilot was not found in either the pilot or mia vector\n-                // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                //try to find the crew in our pilot and mia vectors\n+                Crew pilot = pilots.get(u.getCommander().getId());\n+                boolean missingCrew = false;\n+                //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n                 if (null == pilot) {\n-                    status.setHits(6);\n-                    status.setDead(true);\n-                }\n-                // multi-crewed cockpit; set each crew member separately\n-                else if (pilot.getSlotCount() > 1) {\n-                    for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n-                        if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n-                            status.setHits(pilot.getHits(slot));\n+                    for (Person p : u.getCrew()) {\n+                        if (pilots.containsKey(p.getId())) {\n+                            pilot = pilots.get(p.getId());\n                             break;\n                         }\n                     }\n-                // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n-                } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n-                    status.setHits(pilot.getHits());\n-                } else {\n-                    // we have a multi-crewed Vehicle/Aero/Infantry\n-                    boolean wounded = false;\n-                    // tanks need to be handled specially because of the special crits and because\n-                    // tank destruction should \"kill\" the crew\n-                    if (en instanceof Tank) {\n-                        boolean destroyed = false;\n-                        for (int loc = 0; loc < en.locations(); loc++) {\n-                            if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n-                                continue;\n-                            }\n-                            if (en.getInternal(loc) <= 0) {\n-                                destroyed = true;\n+                }\n+                if (null == pilot) {\n+                    pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                    missingCrew = true;\n+                }\n+                for(Person p : crew) {\n+                    PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                            p.getHits(), p.getId());\n+                    status.setMissing(missingCrew);\n+                    // if the pilot was not found in either the pilot or mia vector\n+                    // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                    if (null == pilot) {\n+                        status.setHits(6);\n+                        status.setDead(true);\n+                    }\n+                    // multi-crewed cockpit; set each crew member separately\n+                    else if (pilot.getSlotCount() > 1) {\n+                        for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n+                            if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n+                                status.setHits(pilot.getHits(slot));\n                                 break;\n                             }\n                         }\n-                        if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n-                            if (Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n-                            }\n-                        } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                    // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n+                    } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n+                        status.setHits(pilot.getHits());\n+                    } else {\n+                        // we have a multi-crewed Vehicle/Aero/Infantry\n+                        boolean wounded = false;\n+                        // tanks need to be handled specially because of the special crits and because\n+                        // tank destruction should \"kill\" the crew\n+                        if (en instanceof Tank) {\n+                            boolean destroyed = false;\n+                            for (int loc = 0; loc < en.locations(); loc++) {\n+                                if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n+                                    continue;\n+                                }\n+                                if (en.getInternal(loc) <= 0) {\n+                                    destroyed = true;\n+                                    break;\n+                                }\n                             }\n-                        } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n-                                || u.isTechOfficer(p))) {\n-                            //If there is a command console, the commander hit flag is set on the second such critical,\n-                            //which means both commanders have been hit.\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                            if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n+                                if (Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n+                                    || u.isTechOfficer(p))) {\n+                                //If there is a command console, the commander hit flag is set on the second such critical,\n+                                //which means both commanders have been hit.\n+                                if(Compute.d6(2) >= 7) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTA3OQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401689079", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:07:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Nzc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NzkyMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401197921", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            if(Compute.d6(2) >= 7) {\n          \n          \n            \n                                            if (Compute.d6(2) >= 7) {", "author": "Windchild292", "createdAt": "2020-03-31T20:34:25Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {\n+                            continue;\n+                        }\n+                    }\n                 }\n-                if (null != en.getCrew()) {\n-                    currentHits = en.getCrew().getHits();\n+                // check for an ejected entity and if we find one then assign it instead to switch vees\n+                // over to infantry checks for casualties\n+                Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                // determine total casualties for infantry and large craft\n+                int casualties = 0;\n+                int casualtiesAssigned = 0;\n+                Infantry infantry = null;\n+                if (en instanceof Infantry) {\n+                    infantry = (Infantry) en;\n+                } else if (ejected != null) {\n+                    infantry = (Infantry) ejected;\n                 }\n-                int newHits = Math.max(0, currentHits - existingHits);\n-                casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n-            }\n-            //try to find the crew in our pilot and mia vectors\n-            Crew pilot = pilots.get(u.getCommander().getId());\n-            boolean missingCrew = false;\n-            //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n-            if (null == pilot) {\n-                for (Person p : u.getCrew()) {\n-                    if (pilots.containsKey(p.getId())) {\n-                        pilot = pilots.get(p.getId());\n-                        break;\n+                if (infantry != null) {\n+                    infantry.applyDamage();\n+                    // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n+                    int strength = Math.min(infantry.getShootingStrength(), crew.size());\n+                    casualties = crew.size() - strength;\n+                    if (unitStatus.isTotalLoss()) {\n+                        casualties = crew.size();\n+                    }\n+                    // If a tank has already taken hits to the commander or driver, do not assign them again.\n+                    if (en instanceof Tank) {\n+                        if (((Tank) en).isDriverHit()) {\n+                            casualtiesAssigned++;\n+                        }\n+                        if (((Tank) en).isCommanderHit()) {\n+                            casualtiesAssigned++;\n+                        }\n                     }\n                 }\n-            }\n-            if (null == pilot) {\n-                pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-                missingCrew = true;\n-            }\n-            for(Person p : crew) {\n-                PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n-                        p.getHits(), p.getId());\n-                status.setMissing(missingCrew);\n-                // if the pilot was not found in either the pilot or mia vector\n-                // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                //try to find the crew in our pilot and mia vectors\n+                Crew pilot = pilots.get(u.getCommander().getId());\n+                boolean missingCrew = false;\n+                //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n                 if (null == pilot) {\n-                    status.setHits(6);\n-                    status.setDead(true);\n-                }\n-                // multi-crewed cockpit; set each crew member separately\n-                else if (pilot.getSlotCount() > 1) {\n-                    for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n-                        if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n-                            status.setHits(pilot.getHits(slot));\n+                    for (Person p : u.getCrew()) {\n+                        if (pilots.containsKey(p.getId())) {\n+                            pilot = pilots.get(p.getId());\n                             break;\n                         }\n                     }\n-                // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n-                } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n-                    status.setHits(pilot.getHits());\n-                } else {\n-                    // we have a multi-crewed Vehicle/Aero/Infantry\n-                    boolean wounded = false;\n-                    // tanks need to be handled specially because of the special crits and because\n-                    // tank destruction should \"kill\" the crew\n-                    if (en instanceof Tank) {\n-                        boolean destroyed = false;\n-                        for (int loc = 0; loc < en.locations(); loc++) {\n-                            if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n-                                continue;\n-                            }\n-                            if (en.getInternal(loc) <= 0) {\n-                                destroyed = true;\n+                }\n+                if (null == pilot) {\n+                    pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                    missingCrew = true;\n+                }\n+                for(Person p : crew) {\n+                    PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                            p.getHits(), p.getId());\n+                    status.setMissing(missingCrew);\n+                    // if the pilot was not found in either the pilot or mia vector\n+                    // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                    if (null == pilot) {\n+                        status.setHits(6);\n+                        status.setDead(true);\n+                    }\n+                    // multi-crewed cockpit; set each crew member separately\n+                    else if (pilot.getSlotCount() > 1) {\n+                        for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n+                            if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n+                                status.setHits(pilot.getHits(slot));\n                                 break;\n                             }\n                         }\n-                        if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n-                            if (Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n-                            }\n-                        } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                    // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n+                    } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n+                        status.setHits(pilot.getHits());\n+                    } else {\n+                        // we have a multi-crewed Vehicle/Aero/Infantry\n+                        boolean wounded = false;\n+                        // tanks need to be handled specially because of the special crits and because\n+                        // tank destruction should \"kill\" the crew\n+                        if (en instanceof Tank) {\n+                            boolean destroyed = false;\n+                            for (int loc = 0; loc < en.locations(); loc++) {\n+                                if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n+                                    continue;\n+                                }\n+                                if (en.getInternal(loc) <= 0) {\n+                                    destroyed = true;\n+                                    break;\n+                                }\n                             }\n-                        } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n-                                || u.isTechOfficer(p))) {\n-                            //If there is a command console, the commander hit flag is set on the second such critical,\n-                            //which means both commanders have been hit.\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                            if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n+                                if (Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n+                                    || u.isTechOfficer(p))) {\n+                                //If there is a command console, the commander hit flag is set on the second such critical,\n+                                //which means both commanders have been hit.\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isUsingConsoleCommander() && u.isCommander(p)) {\n+                                //This flag is set after the first commander hit critical.\n+                                if(Compute.d6(2) >= 7) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTIyMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401689223", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:07:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NzkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODAyMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401198023", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if(casualtiesAssigned < casualties) {\n          \n          \n            \n                                    if (casualtiesAssigned < casualties) {", "author": "Windchild292", "createdAt": "2020-03-31T20:34:36Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {\n+                            continue;\n+                        }\n+                    }\n                 }\n-                if (null != en.getCrew()) {\n-                    currentHits = en.getCrew().getHits();\n+                // check for an ejected entity and if we find one then assign it instead to switch vees\n+                // over to infantry checks for casualties\n+                Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                // determine total casualties for infantry and large craft\n+                int casualties = 0;\n+                int casualtiesAssigned = 0;\n+                Infantry infantry = null;\n+                if (en instanceof Infantry) {\n+                    infantry = (Infantry) en;\n+                } else if (ejected != null) {\n+                    infantry = (Infantry) ejected;\n                 }\n-                int newHits = Math.max(0, currentHits - existingHits);\n-                casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n-            }\n-            //try to find the crew in our pilot and mia vectors\n-            Crew pilot = pilots.get(u.getCommander().getId());\n-            boolean missingCrew = false;\n-            //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n-            if (null == pilot) {\n-                for (Person p : u.getCrew()) {\n-                    if (pilots.containsKey(p.getId())) {\n-                        pilot = pilots.get(p.getId());\n-                        break;\n+                if (infantry != null) {\n+                    infantry.applyDamage();\n+                    // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n+                    int strength = Math.min(infantry.getShootingStrength(), crew.size());\n+                    casualties = crew.size() - strength;\n+                    if (unitStatus.isTotalLoss()) {\n+                        casualties = crew.size();\n+                    }\n+                    // If a tank has already taken hits to the commander or driver, do not assign them again.\n+                    if (en instanceof Tank) {\n+                        if (((Tank) en).isDriverHit()) {\n+                            casualtiesAssigned++;\n+                        }\n+                        if (((Tank) en).isCommanderHit()) {\n+                            casualtiesAssigned++;\n+                        }\n                     }\n                 }\n-            }\n-            if (null == pilot) {\n-                pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-                missingCrew = true;\n-            }\n-            for(Person p : crew) {\n-                PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n-                        p.getHits(), p.getId());\n-                status.setMissing(missingCrew);\n-                // if the pilot was not found in either the pilot or mia vector\n-                // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                //try to find the crew in our pilot and mia vectors\n+                Crew pilot = pilots.get(u.getCommander().getId());\n+                boolean missingCrew = false;\n+                //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n                 if (null == pilot) {\n-                    status.setHits(6);\n-                    status.setDead(true);\n-                }\n-                // multi-crewed cockpit; set each crew member separately\n-                else if (pilot.getSlotCount() > 1) {\n-                    for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n-                        if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n-                            status.setHits(pilot.getHits(slot));\n+                    for (Person p : u.getCrew()) {\n+                        if (pilots.containsKey(p.getId())) {\n+                            pilot = pilots.get(p.getId());\n                             break;\n                         }\n                     }\n-                // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n-                } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n-                    status.setHits(pilot.getHits());\n-                } else {\n-                    // we have a multi-crewed Vehicle/Aero/Infantry\n-                    boolean wounded = false;\n-                    // tanks need to be handled specially because of the special crits and because\n-                    // tank destruction should \"kill\" the crew\n-                    if (en instanceof Tank) {\n-                        boolean destroyed = false;\n-                        for (int loc = 0; loc < en.locations(); loc++) {\n-                            if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n-                                continue;\n-                            }\n-                            if (en.getInternal(loc) <= 0) {\n-                                destroyed = true;\n+                }\n+                if (null == pilot) {\n+                    pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                    missingCrew = true;\n+                }\n+                for(Person p : crew) {\n+                    PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                            p.getHits(), p.getId());\n+                    status.setMissing(missingCrew);\n+                    // if the pilot was not found in either the pilot or mia vector\n+                    // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                    if (null == pilot) {\n+                        status.setHits(6);\n+                        status.setDead(true);\n+                    }\n+                    // multi-crewed cockpit; set each crew member separately\n+                    else if (pilot.getSlotCount() > 1) {\n+                        for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n+                            if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n+                                status.setHits(pilot.getHits(slot));\n                                 break;\n                             }\n                         }\n-                        if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n-                            if (Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n-                            }\n-                        } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                    // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n+                    } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n+                        status.setHits(pilot.getHits());\n+                    } else {\n+                        // we have a multi-crewed Vehicle/Aero/Infantry\n+                        boolean wounded = false;\n+                        // tanks need to be handled specially because of the special crits and because\n+                        // tank destruction should \"kill\" the crew\n+                        if (en instanceof Tank) {\n+                            boolean destroyed = false;\n+                            for (int loc = 0; loc < en.locations(); loc++) {\n+                                if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n+                                    continue;\n+                                }\n+                                if (en.getInternal(loc) <= 0) {\n+                                    destroyed = true;\n+                                    break;\n+                                }\n                             }\n-                        } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n-                                || u.isTechOfficer(p))) {\n-                            //If there is a command console, the commander hit flag is set on the second such critical,\n-                            //which means both commanders have been hit.\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                            if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n+                                if (Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n+                                    || u.isTechOfficer(p))) {\n+                                //If there is a command console, the commander hit flag is set on the second such critical,\n+                                //which means both commanders have been hit.\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isUsingConsoleCommander() && u.isCommander(p)) {\n+                                //This flag is set after the first commander hit critical.\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n                             }\n-                        } else if (((Tank)en).isUsingConsoleCommander() && u.isCommander(p)) {\n-                            //This flag is set after the first commander hit critical.\n+                        }\n+                        if(casualtiesAssigned < casualties) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTM3Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401689373", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODAyMw=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODEwNw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401198107", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if(wounded) {\n          \n          \n            \n                                    if (wounded) {", "author": "Windchild292", "createdAt": "2020-03-31T20:34:45Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -473,158 +510,160 @@ public void checkStatusOfPersonnel() {\n             if (null == en) {\n                 continue;\n             }\n-            // check for an ejected entity and if we find one then assign it instead to switch vees\n-            // over to infantry checks for casualties\n-            Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-            // determine total casualties for infantry and large craft\n-            int casualties = 0;\n-            int casualtiesAssigned = 0;\n-            Infantry infantry = null;\n-            if (en instanceof Infantry) {\n-                infantry = (Infantry) en;\n-            } else if (ejected != null) {\n-                infantry = (Infantry) ejected;\n-            }\n-            if (infantry != null) {\n-                infantry.applyDamage();\n-                // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n-                int strength = Math.min(infantry.getShootingStrength(), crew.size());\n-                casualties = crew.size() - strength;\n-                if (unitStatus.isTotalLoss()) {\n-                    casualties = crew.size();\n-                }\n-                // If a tank has already taken hits to the commander or driver, do not assign them again.\n-                if (en instanceof Tank) {\n-                    if (((Tank) en).isDriverHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                    if (((Tank) en).isCommanderHit()) {\n-                        casualtiesAssigned++;\n-                    }\n-                }\n-            }\n+            //Handle spacecraft a bit differently\n             if ((en instanceof SmallCraft) || (en instanceof Jumpship)) {\n-                //need to check for existing hits because you can fly aeros with less than full\n-                //crew\n-                int existingHits = 0;\n-                int currentHits = 0;\n-                if (null != u.getEntity().getCrew()) {\n-                    existingHits = u.getEntity().getCrew().getHits();\n+                processLargeCraft(u, en, crew, unitStatus);\n+            } else {\n+                if (en.getTransportId() != Entity.NONE) {\n+                    // Check to see if the unit is in a large craft bay, if so, its crew will be processed with the ship,\n+                    // so ignore it here.\n+                    UUID trnId = idMap.get(en.getTransportId());\n+                    if (trnId != null) {\n+                        Entity transport = unitsStatus.get(trnId).getEntity();\n+                        if (transport != null && transport.isLargeCraft()) {\n+                            continue;\n+                        }\n+                    }\n                 }\n-                if (null != en.getCrew()) {\n-                    currentHits = en.getCrew().getHits();\n+                // check for an ejected entity and if we find one then assign it instead to switch vees\n+                // over to infantry checks for casualties\n+                Entity ejected = ejections.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                // determine total casualties for infantry and large craft\n+                int casualties = 0;\n+                int casualtiesAssigned = 0;\n+                Infantry infantry = null;\n+                if (en instanceof Infantry) {\n+                    infantry = (Infantry) en;\n+                } else if (ejected != null) {\n+                    infantry = (Infantry) ejected;\n                 }\n-                int newHits = Math.max(0, currentHits - existingHits);\n-                casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n-            }\n-            //try to find the crew in our pilot and mia vectors\n-            Crew pilot = pilots.get(u.getCommander().getId());\n-            boolean missingCrew = false;\n-            //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n-            if (null == pilot) {\n-                for (Person p : u.getCrew()) {\n-                    if (pilots.containsKey(p.getId())) {\n-                        pilot = pilots.get(p.getId());\n-                        break;\n+                if (infantry != null) {\n+                    infantry.applyDamage();\n+                    // If reading from a MUL, the shooting strength is set to Integer.MAX_VALUE if there is no damage.\n+                    int strength = Math.min(infantry.getShootingStrength(), crew.size());\n+                    casualties = crew.size() - strength;\n+                    if (unitStatus.isTotalLoss()) {\n+                        casualties = crew.size();\n+                    }\n+                    // If a tank has already taken hits to the commander or driver, do not assign them again.\n+                    if (en instanceof Tank) {\n+                        if (((Tank) en).isDriverHit()) {\n+                            casualtiesAssigned++;\n+                        }\n+                        if (((Tank) en).isCommanderHit()) {\n+                            casualtiesAssigned++;\n+                        }\n                     }\n                 }\n-            }\n-            if (null == pilot) {\n-                pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n-                missingCrew = true;\n-            }\n-            for(Person p : crew) {\n-                PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n-                        p.getHits(), p.getId());\n-                status.setMissing(missingCrew);\n-                // if the pilot was not found in either the pilot or mia vector\n-                // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                //try to find the crew in our pilot and mia vectors\n+                Crew pilot = pilots.get(u.getCommander().getId());\n+                boolean missingCrew = false;\n+                //For multi-crew cockpits, the crew id is the first slot, which is not necessarily the commander\n                 if (null == pilot) {\n-                    status.setHits(6);\n-                    status.setDead(true);\n-                }\n-                // multi-crewed cockpit; set each crew member separately\n-                else if (pilot.getSlotCount() > 1) {\n-                    for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n-                        if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n-                            status.setHits(pilot.getHits(slot));\n+                    for (Person p : u.getCrew()) {\n+                        if (pilots.containsKey(p.getId())) {\n+                            pilot = pilots.get(p.getId());\n                             break;\n                         }\n                     }\n-                // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n-                } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n-                    status.setHits(pilot.getHits());\n-                } else {\n-                    // we have a multi-crewed Vehicle/Aero/Infantry\n-                    boolean wounded = false;\n-                    // tanks need to be handled specially because of the special crits and because\n-                    // tank destruction should \"kill\" the crew\n-                    if (en instanceof Tank) {\n-                        boolean destroyed = false;\n-                        for (int loc = 0; loc < en.locations(); loc++) {\n-                            if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n-                                continue;\n-                            }\n-                            if (en.getInternal(loc) <= 0) {\n-                                destroyed = true;\n+                }\n+                if (null == pilot) {\n+                    pilot = mia.get(UUID.fromString(en.getCrew().getExternalIdAsString()));\n+                    missingCrew = true;\n+                }\n+                for(Person p : crew) {\n+                    PersonStatus status = new PersonStatus(p.getFullName(), u.getEntity().getDisplayName(),\n+                            p.getHits(), p.getId());\n+                    status.setMissing(missingCrew);\n+                    // if the pilot was not found in either the pilot or mia vector\n+                    // then the unit was devastated and no one ejected, so they should be dead, really dead\n+                    if (null == pilot) {\n+                        status.setHits(6);\n+                        status.setDead(true);\n+                    }\n+                    // multi-crewed cockpit; set each crew member separately\n+                    else if (pilot.getSlotCount() > 1) {\n+                        for (int slot = 0; slot < pilot.getSlotCount(); slot++) {\n+                            if (p.getId().toString().equals(pilot.getExternalIdAsString(slot))) {\n+                                status.setHits(pilot.getHits(slot));\n                                 break;\n                             }\n                         }\n-                        if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n-                            if (Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n-                            }\n-                        } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                    // else if: can't do the following by u.usesSoloPilot because entity may be different if ejected\n+                    } else if (en instanceof Mech || en instanceof Protomech || en.isFighter()) {\n+                        status.setHits(pilot.getHits());\n+                    } else {\n+                        // we have a multi-crewed Vehicle/Aero/Infantry\n+                        boolean wounded = false;\n+                        // tanks need to be handled specially because of the special crits and because\n+                        // tank destruction should \"kill\" the crew\n+                        if (en instanceof Tank) {\n+                            boolean destroyed = false;\n+                            for (int loc = 0; loc < en.locations(); loc++) {\n+                                if (loc == Tank.LOC_TURRET || loc == Tank.LOC_TURRET_2 || loc == Tank.LOC_BODY) {\n+                                    continue;\n+                                }\n+                                if (en.getInternal(loc) <= 0) {\n+                                    destroyed = true;\n+                                    break;\n+                                }\n                             }\n-                        } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n-                                || u.isTechOfficer(p))) {\n-                            //If there is a command console, the commander hit flag is set on the second such critical,\n-                            //which means both commanders have been hit.\n-                            if(Compute.d6(2) >= 7) {\n-                                wounded = true;\n-                            } else {\n-                                status.setHits(6);\n-                                status.setDead(true);\n+                            if (destroyed || null == en.getCrew() || en.getCrew().isDead()) {\n+                                if (Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isDriverHit() && u.isDriver(p)) {\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isCommanderHit() && (u.isCommander(p)\n+                                    || u.isTechOfficer(p))) {\n+                                //If there is a command console, the commander hit flag is set on the second such critical,\n+                                //which means both commanders have been hit.\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n+                            } else if (((Tank)en).isUsingConsoleCommander() && u.isCommander(p)) {\n+                                //This flag is set after the first commander hit critical.\n+                                if(Compute.d6(2) >= 7) {\n+                                    wounded = true;\n+                                } else {\n+                                    status.setHits(6);\n+                                    status.setDead(true);\n+                                }\n                             }\n-                        } else if (((Tank)en).isUsingConsoleCommander() && u.isCommander(p)) {\n-                            //This flag is set after the first commander hit critical.\n+                        }\n+                        if(casualtiesAssigned < casualties) {\n+                            casualtiesAssigned++;\n                             if(Compute.d6(2) >= 7) {\n                                 wounded = true;\n                             } else {\n                                 status.setHits(6);\n                                 status.setDead(true);\n                             }\n                         }\n-                    }\n-                    if(casualtiesAssigned < casualties) {\n-                        casualtiesAssigned++;\n-                        if(Compute.d6(2) >= 7) {\n-                            wounded = true;\n-                        } else {\n-                            status.setHits(6);\n-                            status.setDead(true);\n-                        }\n-                    }\n-                    if(wounded) {\n-                        int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n-                        if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n-                            int range = 6 - hits;\n-                            hits = hits + Compute.randomInt(range);\n+                        if(wounded) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTUyOA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401689528", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:08:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODEwNw=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -520,7 +520,7 @@ public class ResolveScenarioTracker {\n                     UUID trnId = idMap.get(en.getTransportId());\n                     if (trnId != null) {\n                         Entity transport = unitsStatus.get(trnId).getEntity();\n-                        if (transport != null && transport.isLargeCraft()) {\n+                        if ((transport != null) && transport.isLargeCraft()) {\n                             continue;\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODU3OA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401198578", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(casualtiesAssigned < casualties) {\n          \n          \n            \n                        if (casualtiesAssigned < casualties) {", "author": "Windchild292", "createdAt": "2020-03-31T20:35:41Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {\n+            PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n+                    p.getHits(), p.getId());\n+            boolean wounded = false;\n+            if(casualtiesAssigned < casualties) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTkyMw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401689923", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:08:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODU3OA=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODY2Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401198666", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(Person p : personnel) {\n          \n          \n            \n                    for (Person p : personnel) {", "author": "Windchild292", "createdAt": "2020-03-31T20:35:50Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTc5Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401689792", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:08:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODc1NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401198755", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(Compute.d6(2) >= 7) {\n          \n          \n            \n                            if (Compute.d6(2) >= 7) {", "author": "Windchild292", "createdAt": "2020-03-31T20:35:59Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {\n+            PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n+                    p.getHits(), p.getId());\n+            boolean wounded = false;\n+            if(casualtiesAssigned < casualties) {\n+                casualtiesAssigned++;\n+                if(Compute.d6(2) >= 7) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MDA1Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401690053", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:08:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODc1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODg0Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401198842", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(wounded) {\n          \n          \n            \n                        if (wounded) {", "author": "Windchild292", "createdAt": "2020-03-31T20:36:07Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {\n+            PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n+                    p.getHits(), p.getId());\n+            boolean wounded = false;\n+            if(casualtiesAssigned < casualties) {\n+                casualtiesAssigned++;\n+                if(Compute.d6(2) >= 7) {\n+                    wounded = true;\n+                } else {\n+                    status.setHits(6);\n+                    status.setDead(true);\n+                }\n+            }\n+            if(wounded) {", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MDIwMQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401690201", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:08:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5ODg0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5OTE5NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401199195", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }\n          \n          \n            \n                    status.setXP(campaign.getCampaignOptions().getScenarioXP());\n          \n          \n            \n                    status.setDeployed(!en.wasNeverDeployed());\n          \n          \n            \n                    peopleStatus.put(p.getId(), status);\n          \n          \n            \n                    }\n          \n          \n            \n                        }\n          \n          \n            \n                        status.setXP(campaign.getCampaignOptions().getScenarioXP());\n          \n          \n            \n                        status.setDeployed(!en.wasNeverDeployed());\n          \n          \n            \n                        peopleStatus.put(p.getId(), status);\n          \n          \n            \n                    }", "author": "Windchild292", "createdAt": "2020-03-31T20:36:46Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -634,6 +673,180 @@ else if (pilot.getSlotCount() > 1) {\n             processPrisonerCapture(devastatedEnemyUnits);\n         }\n     }\n+    \n+    /**\n+     * Helper function that handles crew and passengers ejected from a large spacecraft,\n+     * which may be scattered about on numerous other entities\n+     * @param ship The large craft unit we're currently processing\n+     * @param en The entity associated with the unit Ship\n+     * @param crew The list of persons assigned to the ship as crew and marines\n+     * @param unitStatus The post-battle status of en\n+     */\n+    private void processLargeCraft(Unit ship, Entity en, List<Person> personnel, UnitStatus unitStatus) {\n+        final String METHOD_NAME = \"processLargeCraft(Unit,Entity,List<Person>,UnitStatus)\"; //$NON-NLS-1$\n+        //The entity must be an Aero for us to get here\n+        Aero aero = (Aero) en;\n+        //Find out if this large craft ejected or was in the process of ejecting, \n+        // and if so what entities are carrying the personnel\n+        int rescuedCrew = 0;\n+        int rescuedPassengers = 0;\n+        if (en.getCrew().isEjected() || aero.isEjecting()) {\n+            for (String id : aero.getEscapeCraft()) {\n+                Entity e = entities.get(UUID.fromString(id));\n+                // Invalid entity?\n+                if (e == null) {\n+                    MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n+                            \"Null entity reference in:\" + aero.getDisplayName() + \"getEscapeCraft()\");\n+                }\n+                //If the escape craft was destroyed in combat, skip it\n+                if (e.isDestroyed() || e.isDoomed()) {\n+                    continue;\n+                }\n+                //Now let's see how many passengers and crew we picked up\n+                if (e instanceof SmallCraft) {\n+                    SmallCraft craft = (SmallCraft) e;\n+                    if (craft.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += craft.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (craft.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += craft.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                } else if (e instanceof EjectedCrew) {\n+                    EjectedCrew crew = (EjectedCrew) e;\n+                    if (crew.getPassengers().get(en.getExternalIdAsString()) != null) {\n+                        rescuedPassengers += crew.getPassengers().get(en.getExternalIdAsString());\n+                    }\n+                    if (crew.getNOtherCrew().get(en.getExternalIdAsString()) != null) {\n+                        rescuedCrew += crew.getNOtherCrew().get(en.getExternalIdAsString());\n+                    }\n+                }\n+            }\n+        }\n+        //Check crewed aeros for existing hits since they could be flying without full crews\n+        int casualties = 0;\n+        int casualtiesAssigned = 0;\n+        int existingHits = 0;\n+        int currentHits = 0;\n+        if (null != ship.getEntity().getCrew()) {\n+            existingHits = ship.getEntity().getCrew().getHits();\n+        }\n+        if (null != en.getCrew()) {\n+            currentHits = en.getCrew().getHits();\n+        }\n+        if (en.isDestroyed()) {\n+            currentHits = 6;\n+        }\n+        int newHits = Math.max(0, currentHits - existingHits);\n+        casualties = (int) Math.ceil(Compute.getFullCrewSize(en) * (newHits / 6.0));\n+        //Now reduce the casualties if some \"hits\" were caused by ejection\n+        casualties = Math.max(0, casualties - rescuedCrew);\n+        \n+        //And assign the casualties and experience amongst the crew and marines\n+        for(Person p : personnel) {\n+            PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n+                    p.getHits(), p.getId());\n+            boolean wounded = false;\n+            if(casualtiesAssigned < casualties) {\n+                casualtiesAssigned++;\n+                if(Compute.d6(2) >= 7) {\n+                    wounded = true;\n+                } else {\n+                    status.setHits(6);\n+                    status.setDead(true);\n+                }\n+            }\n+            if(wounded) {\n+                int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n+                if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n+                    int range = 6 - hits;\n+                    hits = hits + Compute.randomInt(range);\n+                }\n+                status.setHits(hits);\n+            }\n+        status.setXP(campaign.getCampaignOptions().getScenarioXP());\n+        status.setDeployed(!en.wasNeverDeployed());\n+        peopleStatus.put(p.getId(), status);\n+        }", "originalCommit": "6f435eead4a970afab02f06a31f3b1c9879b7ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MDUxOA==", "url": "https://github.com/MegaMek/mekhq/pull/1606#discussion_r401690518", "bodyText": "Fixed", "author": "mkerensky", "createdAt": "2020-04-01T15:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5OTE5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\nindex 376b627ab..64fd6d552 100644\n--- a/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n+++ b/MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java\n\n@@ -742,20 +742,20 @@ public class ResolveScenarioTracker {\n         casualties = Math.max(0, casualties - rescuedCrew);\n         \n         //And assign the casualties and experience amongst the crew and marines\n-        for(Person p : personnel) {\n+        for (Person p : personnel) {\n             PersonStatus status = new PersonStatus(p.getFullName(), ship.getEntity().getDisplayName(),\n                     p.getHits(), p.getId());\n             boolean wounded = false;\n-            if(casualtiesAssigned < casualties) {\n+            if (casualtiesAssigned < casualties) {\n                 casualtiesAssigned++;\n-                if(Compute.d6(2) >= 7) {\n+                if (Compute.d6(2) >= 7) {\n                     wounded = true;\n                 } else {\n                     status.setHits(6);\n                     status.setDead(true);\n                 }\n             }\n-            if(wounded) {\n+            if (wounded) {\n                 int hits = campaign.getCampaignOptions().getMinimumHitsForVees();\n                 if (campaign.getCampaignOptions().useAdvancedMedical() || campaign.getCampaignOptions().useRandomHitsForVees()) {\n                     int range = 6 - hits;\n"}}, {"oid": "5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "url": "https://github.com/MegaMek/mekhq/commit/5414ece9f060ec99dbae68f5a38cc9ea1c2da273", "message": "Fix whitespace in AtBGameThread", "committedDate": "2020-04-01T14:58:47Z", "type": "commit"}, {"oid": "7a2ff396625d9648b7898dec4a404b8d19d6a635", "url": "https://github.com/MegaMek/mekhq/commit/7a2ff396625d9648b7898dec4a404b8d19d6a635", "message": "Fix spacing issues in ResolveScnTracker", "committedDate": "2020-04-01T15:10:16Z", "type": "commit"}, {"oid": "d40fec103106864f2e89ecbb344e5ab97872f624", "url": "https://github.com/MegaMek/mekhq/commit/d40fec103106864f2e89ecbb344e5ab97872f624", "message": "Whitespace fix in Unit", "committedDate": "2020-04-01T15:12:34Z", "type": "commit"}]}