{"pr_number": 1931, "pr_title": "1922: CrewSkillUpgrader Infinite Loop Fix", "pr_createdAt": "2020-08-17T17:21:49Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1931", "timeline": [{"oid": "25d6f3563b3d71af742c10623ae2f5d7ce0eb049", "url": "https://github.com/MegaMek/mekhq/commit/25d6f3563b3d71af742c10623ae2f5d7ce0eb049", "message": "Code cleanup in CrewSkillUpgrader", "committedDate": "2020-08-17T16:49:35Z", "type": "commit"}, {"oid": "7b99b51d1da5c47f11e6778098635d66358e0267", "url": "https://github.com/MegaMek/mekhq/commit/7b99b51d1da5c47f11e6778098635d66358e0267", "message": "Fixing infinite loop", "committedDate": "2020-08-17T17:21:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0ODI4Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1931#discussion_r471848286", "bodyText": "I think this logic is the main problem, it drops the x counter back one if we fail to generate an SPA. I think it needs to be taken out and the addSingleSPA modified, as described in the comment there.", "author": "NickAragua", "createdAt": "2020-08-18T00:38:05Z", "path": "MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java", "diffHunk": "@@ -85,34 +88,36 @@ public void upgradeCrew(Entity entity) {\n         // this sets the weight limit and how many SPAs we can assign\n         // this is described in some detail in CamOps page 70 (Special Pilot Abilities)\n         int upgradeRoll = Compute.randomInt(4);\n-        if(upgradeRoll != 3) {\n+        if (upgradeRoll != 3) {\n             return;\n         }\n-        \n+\n         double skillAvg = (entity.getCrew().getGunnery() + entity.getCrew().getPiloting()) / 2.0;\n         double xpCap = 0;\n         int spaCap = 0;\n-        \n+\n         // elite\n-        if(skillAvg < 3) {\n+        if (skillAvg < 3) {\n             xpCap = maxAbilityXPCost;\n             spaCap = 3;\n         // veteran\n-        } else if(skillAvg < 4) {\n+        } else if (skillAvg < 4) {\n             xpCap = twoThirdsXPCost;\n             spaCap = 2;\n         // regular\n-        } else if(skillAvg < 5) {\n+        } else if (skillAvg < 5) {\n             xpCap = oneThirdXPCost;\n             spaCap = 1;\n         }\n-        \n-        // algorithm: \n+\n+        // algorithm:\n         // we want a maximum # of SPAs, capped, in total at a max XP cost\n         // every time we generate an SPA, we reduce the max available XP\n         // this logic also prevents attempting to assign an SPA when there are no SPAs\n         // that cost less XP than the remaining cap\n-        for(int x = 0; (x < spaCap) && (xpCap > minAbilityCost); x++) {\n+        // We also want to ensure this only happens a maximum of a thousand times, to prevent an\n+        // infinite loop\n+        for (int x = 0, y = 0; (x < spaCap) && (xpCap > minAbilityCost) && (y < 1000); x++, y++) {\n             int spaCost = addSingleSPA(entity, xpCap);\n             // if we didn't assign an SPA, let's reroll it.\n             if (spaCost == 0) {", "originalCommit": "7b99b51d1da5c47f11e6778098635d66358e0267", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c5087f01387c0c13439f295263937acddd5931b", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java b/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java\nindex 08a552891..4c0be3761 100644\n--- a/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java\n+++ b/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java\n\n@@ -115,13 +115,10 @@ public class CrewSkillUpgrader {\n         // every time we generate an SPA, we reduce the max available XP\n         // this logic also prevents attempting to assign an SPA when there are no SPAs\n         // that cost less XP than the remaining cap\n-        // We also want to ensure this only happens a maximum of a thousand times, to prevent an\n-        // infinite loop\n-        for (int x = 0, y = 0; (x < spaCap) && (xpCap > minAbilityCost) && (y < 1000); x++, y++) {\n+        for (int x = 0; (x < spaCap) && (xpCap > minAbilityCost); x++) {\n             int spaCost = addSingleSPA(entity, xpCap);\n-            // if we didn't assign an SPA, let's reroll it.\n             if (spaCost == 0) {\n-                x--;\n+                break;\n             }\n             xpCap -= spaCost;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0ODk2Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1931#discussion_r471848963", "bodyText": "The main problem is likely that after the list of SPAs is built, the only SPAs left are ones that wind up ineligible. So I would have a loop in here that terminates either once we've picked an SPA or run out of SPAs to pick. Any time an SPA is eliminated below for whatever reason, remove it from the \"choices\" list and go through the loop again. That way, we're guaranteed to eventually reduces \"choices\" to an empty list or pick one that's valid.", "author": "NickAragua", "createdAt": "2020-08-18T00:40:30Z", "path": "MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java", "diffHunk": "@@ -121,76 +126,76 @@ public void upgradeCrew(Entity entity) {\n             xpCap -= spaCost;\n         }\n     }\n-    \n+\n     /**\n      * Upgrade an entity with a single SPA\n      * @param entity\n      * @return the xp cost of the added SPA\n      */\n-    public int addSingleSPA(Entity entity, double xpCap) {\n+    private int addSingleSPA(Entity entity, double xpCap) {\n         int unitType = entity.getUnitType();\n-        \n+\n         List<SpecialAbility> choices = coalescedSPAList(unitType, xpCap);", "originalCommit": "7b99b51d1da5c47f11e6778098635d66358e0267", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc5MTk3Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1931#discussion_r474791976", "bodyText": "Solid idea, and far more readable.", "author": "Windchild292", "createdAt": "2020-08-21T16:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0ODk2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1c5087f01387c0c13439f295263937acddd5931b", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java b/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java\nindex 08a552891..4c0be3761 100644\n--- a/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java\n+++ b/MekHQ/src/mekhq/campaign/mission/CrewSkillUpgrader.java\n\n@@ -115,13 +115,10 @@ public class CrewSkillUpgrader {\n         // every time we generate an SPA, we reduce the max available XP\n         // this logic also prevents attempting to assign an SPA when there are no SPAs\n         // that cost less XP than the remaining cap\n-        // We also want to ensure this only happens a maximum of a thousand times, to prevent an\n-        // infinite loop\n-        for (int x = 0, y = 0; (x < spaCap) && (xpCap > minAbilityCost) && (y < 1000); x++, y++) {\n+        for (int x = 0; (x < spaCap) && (xpCap > minAbilityCost); x++) {\n             int spaCost = addSingleSPA(entity, xpCap);\n-            // if we didn't assign an SPA, let's reroll it.\n             if (spaCost == 0) {\n-                x--;\n+                break;\n             }\n             xpCap -= spaCost;\n         }\n"}}, {"oid": "43b93ff69768a3a40cc2601c20be77fa02afd5f6", "url": "https://github.com/MegaMek/mekhq/commit/43b93ff69768a3a40cc2601c20be77fa02afd5f6", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_1922", "committedDate": "2020-08-21T15:44:21Z", "type": "commit"}, {"oid": "1c5087f01387c0c13439f295263937acddd5931b", "url": "https://github.com/MegaMek/mekhq/commit/1c5087f01387c0c13439f295263937acddd5931b", "message": "Applying modifications to the addSingleSPA method to prevent infinite loops", "committedDate": "2020-08-21T16:09:19Z", "type": "commit"}]}