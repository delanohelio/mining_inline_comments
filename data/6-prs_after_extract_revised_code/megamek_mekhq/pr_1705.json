{"pr_number": 1705, "pr_title": "LGTM and String Comparison Fixes", "pr_createdAt": "2020-04-28T15:39:31Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1705", "timeline": [{"oid": "5250038d0021a6f9fa37bc4d28b1481e0f12d796", "url": "https://github.com/MegaMek/mekhq/commit/5250038d0021a6f9fa37bc4d28b1481e0f12d796", "message": "Fixing LGTM issues", "committedDate": "2020-04-20T17:46:30Z", "type": "commit"}, {"oid": "363aff56940a137b1d70494d9e4e39a5e0bad0e8", "url": "https://github.com/MegaMek/mekhq/commit/363aff56940a137b1d70494d9e4e39a5e0bad0e8", "message": "Adding and expanding logging in IconPackage", "committedDate": "2020-04-20T17:47:50Z", "type": "commit"}, {"oid": "b1b6434aec82e859ff471bb6a904b46f87495cd9", "url": "https://github.com/MegaMek/mekhq/commit/b1b6434aec82e859ff471bb6a904b46f87495cd9", "message": "Adding null guarded assignment for image items", "committedDate": "2020-04-20T17:51:57Z", "type": "commit"}, {"oid": "4a88ba8e79c073abdfa2b86320d6df74ea44c034", "url": "https://github.com/MegaMek/mekhq/commit/4a88ba8e79c073abdfa2b86320d6df74ea44c034", "message": "Fixing a potential null issue with image label assignment", "committedDate": "2020-04-20T17:54:04Z", "type": "commit"}, {"oid": "9da9fc5e710f8d6657439b5418fc1baf54ae6c65", "url": "https://github.com/MegaMek/mekhq/commit/9da9fc5e710f8d6657439b5418fc1baf54ae6c65", "message": "Fixing potential NPEs", "committedDate": "2020-04-20T18:06:01Z", "type": "commit"}, {"oid": "b0a519e073ea815e3594bebf316ef54d72f8de17", "url": "https://github.com/MegaMek/mekhq/commit/b0a519e073ea815e3594bebf316ef54d72f8de17", "message": "Adding some defensive code for refits", "committedDate": "2020-04-20T18:09:57Z", "type": "commit"}, {"oid": "46097962413f93804d79127373f658aa6ccc92c7", "url": "https://github.com/MegaMek/mekhq/commit/46097962413f93804d79127373f658aa6ccc92c7", "message": "Fixing non-final fields in Enums", "committedDate": "2020-04-20T18:23:03Z", "type": "commit"}, {"oid": "aaf6a33db324f08280e81dfee919b1b18eb8e11b", "url": "https://github.com/MegaMek/mekhq/commit/aaf6a33db324f08280e81dfee919b1b18eb8e11b", "message": "Fixing object and string comparison issues", "committedDate": "2020-04-20T18:40:03Z", "type": "commit"}, {"oid": "c71919d97c783e5be248b7799deb4ace289bd882", "url": "https://github.com/MegaMek/mekhq/commit/c71919d97c783e5be248b7799deb4ace289bd882", "message": "adding equals override to Person", "committedDate": "2020-04-20T18:47:49Z", "type": "commit"}, {"oid": "4e858fa29296e3653abd1f0bbec2ce4cc514721e", "url": "https://github.com/MegaMek/mekhq/commit/4e858fa29296e3653abd1f0bbec2ce4cc514721e", "message": "Fixing comparison for people", "committedDate": "2020-04-20T18:53:02Z", "type": "commit"}, {"oid": "b9461579b2f588814399d571bf5b9374169a4423", "url": "https://github.com/MegaMek/mekhq/commit/b9461579b2f588814399d571bf5b9374169a4423", "message": "Fixing person comparisons", "committedDate": "2020-04-20T19:03:32Z", "type": "commit"}, {"oid": "debaea13f8206211b83605113cddde5cdd31b7b3", "url": "https://github.com/MegaMek/mekhq/commit/debaea13f8206211b83605113cddde5cdd31b7b3", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_LGTM", "committedDate": "2020-04-28T15:21:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcxOTU0Nw==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416719547", "bodyText": "I guess we don't need the enclosing parens if there's no !=", "author": "NickAragua", "createdAt": "2020-04-28T15:41:59Z", "path": "MekHQ/src/mekhq/MekHqXmlUtil.java", "diffHunk": "@@ -328,14 +328,14 @@ public static String writeEntityToXmlString(Entity tgtEnt, int indentLvl, ArrayL\n         }\n \n          if ((null != tgtEnt.getCamoCategory())\n-                 && (tgtEnt.getCamoCategory() != IPlayer.NO_CAMO)\n+                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory()))", "originalCommit": "debaea13f8206211b83605113cddde5cdd31b7b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "212b80b622c828fa5048794b8d61efc9ad6f74e3", "chunk": "diff --git a/MekHQ/src/mekhq/MekHqXmlUtil.java b/MekHQ/src/mekhq/MekHqXmlUtil.java\nindex 36f628e5d..7188b98a3 100644\n--- a/MekHQ/src/mekhq/MekHqXmlUtil.java\n+++ b/MekHQ/src/mekhq/MekHqXmlUtil.java\n\n@@ -328,14 +328,14 @@ public class MekHqXmlUtil {\n         }\n \n          if ((null != tgtEnt.getCamoCategory())\n-                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory()))\n+                 && !IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory())\n                  && !tgtEnt.getCamoCategory().isEmpty()) {\n              retVal += \"\\\" camoCategory=\\\"\";\n              retVal += String.valueOf(escape(tgtEnt.getCamoCategory()));\n          }\n \n          if ((null != tgtEnt.getCamoFileName())\n-                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoFileName()))\n+                 && !IPlayer.NO_CAMO.equals(tgtEnt.getCamoFileName())\n                  && !tgtEnt.getCamoFileName().isEmpty()) {\n              retVal += \"\\\" camoFileName=\\\"\";\n              retVal += String.valueOf(escape(tgtEnt.getCamoFileName()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcxOTc3Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416719776", "bodyText": "Unnecessary enclosing parens", "author": "NickAragua", "createdAt": "2020-04-28T15:42:17Z", "path": "MekHQ/src/mekhq/MekHqXmlUtil.java", "diffHunk": "@@ -328,14 +328,14 @@ public static String writeEntityToXmlString(Entity tgtEnt, int indentLvl, ArrayL\n         }\n \n          if ((null != tgtEnt.getCamoCategory())\n-                 && (tgtEnt.getCamoCategory() != IPlayer.NO_CAMO)\n+                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory()))\n                  && !tgtEnt.getCamoCategory().isEmpty()) {\n              retVal += \"\\\" camoCategory=\\\"\";\n              retVal += String.valueOf(escape(tgtEnt.getCamoCategory()));\n          }\n \n          if ((null != tgtEnt.getCamoFileName())\n-                 && (tgtEnt.getCamoFileName() != IPlayer.NO_CAMO)\n+                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoFileName()))", "originalCommit": "debaea13f8206211b83605113cddde5cdd31b7b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "212b80b622c828fa5048794b8d61efc9ad6f74e3", "chunk": "diff --git a/MekHQ/src/mekhq/MekHqXmlUtil.java b/MekHQ/src/mekhq/MekHqXmlUtil.java\nindex 36f628e5d..7188b98a3 100644\n--- a/MekHQ/src/mekhq/MekHqXmlUtil.java\n+++ b/MekHQ/src/mekhq/MekHqXmlUtil.java\n\n@@ -328,14 +328,14 @@ public class MekHqXmlUtil {\n         }\n \n          if ((null != tgtEnt.getCamoCategory())\n-                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory()))\n+                 && !IPlayer.NO_CAMO.equals(tgtEnt.getCamoCategory())\n                  && !tgtEnt.getCamoCategory().isEmpty()) {\n              retVal += \"\\\" camoCategory=\\\"\";\n              retVal += String.valueOf(escape(tgtEnt.getCamoCategory()));\n          }\n \n          if ((null != tgtEnt.getCamoFileName())\n-                 && (!IPlayer.NO_CAMO.equals(tgtEnt.getCamoFileName()))\n+                 && !IPlayer.NO_CAMO.equals(tgtEnt.getCamoFileName())\n                  && !tgtEnt.getCamoFileName().isEmpty()) {\n              retVal += \"\\\" camoFileName=\\\"\";\n              retVal += String.valueOf(escape(tgtEnt.getCamoFileName()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMjc3MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416722771", "bodyText": "I don't see a reason to eliminate the VEENOVA logic.", "author": "NickAragua", "createdAt": "2020-04-28T15:46:18Z", "path": "MekHQ/src/mekhq/campaign/mission/AtBScenario.java", "diffHunk": "@@ -1183,8 +1182,8 @@ private void addStar(ArrayList<Entity> list, String faction, int skill, int qual\n                 list.add(en);\n             }\n         }\n-        if (forceType == FORCE_NOVA || forceType == FORCE_VEENOVA) {\n-            unitType = forceType == FORCE_VEENOVA ? UnitType.INFANTRY : UnitType.BATTLE_ARMOR;\n+        if (forceType == FORCE_NOVA) {", "originalCommit": "debaea13f8206211b83605113cddde5cdd31b7b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNzYwNw==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416727607", "bodyText": "Unused and has never been used, years after it was originally implemented.", "author": "Windchild292", "createdAt": "2020-04-28T15:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMjc3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNQ==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416723535", "bodyText": "Do we really want a non-null person in case we fail to read a person in?", "author": "NickAragua", "createdAt": "2020-04-28T15:47:14Z", "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -1886,12 +1886,9 @@ public void writeToXml(PrintWriter pw1, int indent) {\n     public static Person generateInstanceFromXML(Node wn, Campaign c, Version version) {\n         final String METHOD_NAME = \"generateInstanceFromXML(Node,Campaign,Version)\"; //$NON-NLS-1$\n \n-        Person retVal = null;\n+        Person retVal = new Person(c);", "originalCommit": "debaea13f8206211b83605113cddde5cdd31b7b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMzQwMA==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416733400", "bodyText": "We already will have a non-null person, as the only way it will return null currently is if it fails to create the person object initially.\nHowever, by adding retVal = null on the catch would do that, which seems to have been the original intent in the code. Pushed a fix to ensure the original intent works.", "author": "Windchild292", "createdAt": "2020-04-28T16:00:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "212b80b622c828fa5048794b8d61efc9ad6f74e3", "url": "https://github.com/MegaMek/mekhq/commit/212b80b622c828fa5048794b8d61efc9ad6f74e3", "message": "implementing changes from review", "committedDate": "2020-04-28T16:00:17Z", "type": "commit"}, {"oid": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2", "url": "https://github.com/MegaMek/mekhq/commit/c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2", "message": "Adding person hashcode override", "committedDate": "2020-04-28T16:08:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NjIxMw==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416796213", "bodyText": "I think reference equality is okay here actually. We wouldn't want two instances with the same UUID. In any case this is safe for now.", "author": "sixlettervariables", "createdAt": "2020-04-28T17:31:55Z", "path": "MekHQ/src/mekhq/campaign/ResolveScenarioTracker.java", "diffHunk": "@@ -923,7 +922,7 @@ private void processPrisonerCapture(List<TestUnit> unitsToProcess) {\n                 }\n                 if (en.hasWorkingMisc(MiscType.F_COMMAND_CONSOLE)) {\n                     for (Person p : crew) {\n-                        if (p != commander && p != driver) {\n+                        if (!p.equals(commander) && !p.equals(driver)) {", "originalCommit": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyMzkwMA==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416923900", "bodyText": "It is okay for now, but I'd rather future proof and implement it properly with equals comparisons.", "author": "Windchild292", "createdAt": "2020-04-28T21:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NjIxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416797319", "bodyText": "Should have a reference equality check first.", "author": "sixlettervariables", "createdAt": "2020-04-28T17:33:36Z", "path": "MekHQ/src/mekhq/campaign/personnel/Person.java", "diffHunk": "@@ -2654,6 +2652,25 @@ public String toString() {\n         return getFullName();\n     }\n \n+    /**\n+     * Two people are determined to be equal if they have the same id\n+     * @param object the object to check if it is equal to the person or not\n+     * @return true if they have the same id, otherwise false\n+     */\n+    @Override\n+    public boolean equals(Object object) {\n+        if (!(object instanceof Person)) {\n+            return false;\n+        } else {\n+            return getId().equals(((Person) object).getId());", "originalCommit": "c6bcff5ca016ce504fc8d537be58a60cd7e6f9b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1MzMyMA==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416853320", "bodyText": "Is that for performance reasons?", "author": "Windchild292", "createdAt": "2020-04-28T19:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwNzk5NA==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416907994", "bodyText": "Part of the recommendations for implementing Object::equals.", "author": "sixlettervariables", "createdAt": "2020-04-28T20:40:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyMzIyMA==", "url": "https://github.com/MegaMek/mekhq/pull/1705#discussion_r416923220", "bodyText": "Implemented the fix", "author": "Windchild292", "createdAt": "2020-04-28T21:07:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc5NzMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "66016bc764989ae91d8a997f7dc6ecc7e651e492", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/personnel/Person.java b/MekHQ/src/mekhq/campaign/personnel/Person.java\nindex 1b67e1343..7e975d0de 100644\n--- a/MekHQ/src/mekhq/campaign/personnel/Person.java\n+++ b/MekHQ/src/mekhq/campaign/personnel/Person.java\n\n@@ -2659,7 +2659,9 @@ public class Person implements Serializable, MekHqXmlSerializable {\n      */\n     @Override\n     public boolean equals(Object object) {\n-        if (!(object instanceof Person)) {\n+        if (this == object) {\n+            return true;\n+        } else if (!(object instanceof Person)) {\n             return false;\n         } else {\n             return getId().equals(((Person) object).getId());\n"}}, {"oid": "66016bc764989ae91d8a997f7dc6ecc7e651e492", "url": "https://github.com/MegaMek/mekhq/commit/66016bc764989ae91d8a997f7dc6ecc7e651e492", "message": "Implementing object comparison equality for Person::equals", "committedDate": "2020-04-28T20:57:46Z", "type": "commit"}]}