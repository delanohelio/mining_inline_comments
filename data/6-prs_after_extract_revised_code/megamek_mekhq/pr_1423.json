{"pr_number": 1423, "pr_title": "Personnel and AtBScenarioFactor Code Refactor", "pr_createdAt": "2020-01-23T17:39:16Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1423", "timeline": [{"oid": "4b1e9f1430f67e5f155a31dfe26a7bb18fdad095", "url": "https://github.com/MegaMek/mekhq/commit/4b1e9f1430f67e5f155a31dfe26a7bb18fdad095", "message": "Refactoring in AtBScenarioFactory and Lance files relating to the use of the GM Generate Contracts button", "committedDate": "2020-01-21T16:14:43Z", "type": "commit"}, {"oid": "540b3f98ba8ab91913df29c0722e925456ba2f2b", "url": "https://github.com/MegaMek/mekhq/commit/540b3f98ba8ab91913df29c0722e925456ba2f2b", "message": "Merge remote-tracking branch 'origin/dev_Windchild_RandomRefactoring' into dev_Windchild_Personnel_Refactor", "committedDate": "2020-01-23T15:11:38Z", "type": "commit"}, {"oid": "fc7343a4358a7e7dd360cd4fd78d1263231a4d7f", "url": "https://github.com/MegaMek/mekhq/commit/fc7343a4358a7e7dd360cd4fd78d1263231a4d7f", "message": "Refactoring and code cleanup relating to Personnel and Ancestors", "committedDate": "2020-01-23T17:25:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2NjE4MA==", "url": "https://github.com/MegaMek/mekhq/pull/1423#discussion_r370266180", "bodyText": "Should just be -retVal", "author": "sixlettervariables", "createdAt": "2020-01-23T17:52:16Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1860,31 +1843,27 @@ public Person findBestInRole(int role, String skill) {\n         // Return the tech collection sorted worst to best\n         // Reverse the sort if we've been asked for best to worst\n         if (sorted) {\n-            Collections.sort(techs, new Comparator<Person>() {\n-                @Override\n-                public int compare(Person person1, Person person2) {\n-                    // default to 0, which means they're equal\n-                    int retVal = 0;\n-\n-                    // Set up booleans to know if the tech is secondary only\n-                    // this is to get the skill from getExperienceLevel(boolean) properly\n-                    boolean p1Secondary = !person1.isTechPrimary() && person1.isTechSecondary();\n-                    boolean p2Secondary = !person2.isTechPrimary() && person2.isTechSecondary();\n-\n-                    if (person1.getExperienceLevel(p1Secondary)\n-                            > person2.getExperienceLevel(p2Secondary)) {\n-                        // Person 1 is better than Person 2.\n-                        retVal = -1;\n-                    } else if (person1.getExperienceLevel(p1Secondary)\n-                            < person2.getExperienceLevel(p2Secondary)) {\n-                        // Person 2 is better than Person 1\n-                        retVal = 1;\n-                    }\n-\n-                    // Return, swapping the value if we're looking to have Elites ordered first\n-                    return eliteFirst ? retVal *= -1 : retVal;\n-                }\n-\n+            techs.sort((person1, person2) -> {\n+                // default to 0, which means they're equal\n+                int retVal = 0;\n+\n+                // Set up booleans to know if the tech is secondary only\n+                // this is to get the skill from getExperienceLevel(boolean) properly\n+                boolean p1Secondary = !person1.isTechPrimary() && person1.isTechSecondary();\n+                boolean p2Secondary = !person2.isTechPrimary() && person2.isTechSecondary();\n+\n+                if (person1.getExperienceLevel(p1Secondary)\n+                        > person2.getExperienceLevel(p2Secondary)) {\n+                    // Person 1 is better than Person 2.\n+                    retVal = -1;\n+                } else if (person1.getExperienceLevel(p1Secondary)\n+                        < person2.getExperienceLevel(p2Secondary)) {\n+                    // Person 2 is better than Person 1\n+                    retVal = 1;\n+                }\n+\n+                // Return, swapping the value if we're looking to have Elites ordered first\n+                return eliteFirst ? retVal *= -1 : retVal;", "originalCommit": "fc7343a4358a7e7dd360cd4fd78d1263231a4d7f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f17a8742d78d12c06c23072a66ff741c5c0f6e29", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 28c791fb8..f556755ff 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1863,7 +1863,7 @@ public class Campaign implements Serializable, ITechManager {\n                 }\n \n                 // Return, swapping the value if we're looking to have Elites ordered first\n-                return eliteFirst ? retVal *= -1 : retVal;\n+                return eliteFirst ? -retVal : retVal;\n             });\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3MDM2OQ==", "url": "https://github.com/MegaMek/mekhq/pull/1423#discussion_r370270369", "bodyText": "Revert these ProtomekArmor -> ProtoMech Armor changes. We're referring to class names here.", "author": "sixlettervariables", "createdAt": "2020-01-23T18:01:09Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -6887,15 +6854,15 @@ public PartInventory getPartInventory(Part part) {\n             }\n             if (part.isSamePartType(p)) {\n                 if (p.isPresent()) {\n-                    if (p instanceof Armor) { // ProtomekArmor and BaArmor are derived from Armor", "originalCommit": "fc7343a4358a7e7dd360cd4fd78d1263231a4d7f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f17a8742d78d12c06c23072a66ff741c5c0f6e29", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex 28c791fb8..f556755ff 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -6854,7 +6854,7 @@ public class Campaign implements Serializable, ITechManager {\n             }\n             if (part.isSamePartType(p)) {\n                 if (p.isPresent()) {\n-                    if (p instanceof Armor) { // ProtoMech Armor and BaArmor are derived from Armor\n+                    if (p instanceof Armor) { // ProtomekArmor and BaArmor are derived from Armor\n                         nSupply += ((Armor) p).getAmount();\n                     } else if (p instanceof AmmoStorage) {\n                         nSupply += ((AmmoStorage) p).getShots();\n"}}, {"oid": "f17a8742d78d12c06c23072a66ff741c5c0f6e29", "url": "https://github.com/MegaMek/mekhq/commit/f17a8742d78d12c06c23072a66ff741c5c0f6e29", "message": "Fixing review comments", "committedDate": "2020-01-23T18:15:15Z", "type": "commit"}, {"oid": "88ec67ce73016f1b326420aadc16b44e9187956a", "url": "https://github.com/MegaMek/mekhq/commit/88ec67ce73016f1b326420aadc16b44e9187956a", "message": "Merge branch 'master' into dev_Windchild_Personnel_Refactor", "committedDate": "2020-01-25T18:26:43Z", "type": "commit"}, {"oid": "f0def0269f480851220460d50301d63c768838a7", "url": "https://github.com/MegaMek/mekhq/commit/f0def0269f480851220460d50301d63c768838a7", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_Personnel_Refactor", "committedDate": "2020-01-26T16:07:42Z", "type": "commit"}, {"oid": "76d4111e1e2a015ac42dc8031003859387e6c729", "url": "https://github.com/MegaMek/mekhq/commit/76d4111e1e2a015ac42dc8031003859387e6c729", "message": "Fixing merge conflicts", "committedDate": "2020-01-26T16:16:58Z", "type": "commit"}]}