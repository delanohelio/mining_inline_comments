{"pr_number": 1403, "pr_title": "Refactoring and Fixing lgtm Recommendations", "pr_createdAt": "2020-01-19T05:38:30Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1403", "timeline": [{"oid": "2cc03313e996fc449ee15e7646f20442f9a39c1e", "url": "https://github.com/MegaMek/mekhq/commit/2cc03313e996fc449ee15e7646f20442f9a39c1e", "message": "Refactoring and Fixing lgtm Recommendations", "committedDate": "2020-01-19T05:36:10Z", "type": "commit"}, {"oid": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "url": "https://github.com/MegaMek/mekhq/commit/e2f99a4339f305b2ea902eefc395e97c94ae6213", "message": "Fixing spurious : in @param entity", "committedDate": "2020-01-19T13:28:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDI1Ng==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294256", "bodyText": "Why wrap this list in a new list?", "author": "sixlettervariables", "createdAt": "2020-01-19T13:31:35Z", "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -452,15 +452,10 @@ public static int generateForce(AtBDynamicScenario scenario, AtBContract contrac\n     public static List<Entity> generateCivilianUnits(int num, Campaign campaign) {\n         RandomUnitGenerator.getInstance().setChosenRAT(\"CivilianUnits\");\n         ArrayList<MechSummary> msl = RandomUnitGenerator.getInstance().generate(num);\n-        List<Entity> retval = new ArrayList<>();\n-        \n-        List<Entity> entities = msl.stream().map(ms -> createEntityWithCrew(\"IND\",\n-                RandomSkillsGenerator.L_GREEN, campaign, ms))\n-                .collect(Collectors.<Entity>toList());\n-        retval.addAll(entities);\n-        return retval;\n+        List<Entity> entities = msl.stream().map(ms -> createEntityWithCrew(\"IND\", RandomSkillsGenerator.L_GREEN, campaign, ms)).collect(Collectors.<Entity>toList());\n+        return new ArrayList<>(entities);", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NzEyNg==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368297126", "bodyText": "Was trying to keep same return type, however I've refactored it more so that it only needs to create the one ArrayList.", "author": "Windchild292", "createdAt": "2020-01-19T14:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDI1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\nindex 2a18b3dc5..551ec182e 100644\n--- a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n+++ b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n\n@@ -452,8 +452,7 @@ public class AtBDynamicScenarioFactory {\n     public static List<Entity> generateCivilianUnits(int num, Campaign campaign) {\n         RandomUnitGenerator.getInstance().setChosenRAT(\"CivilianUnits\");\n         ArrayList<MechSummary> msl = RandomUnitGenerator.getInstance().generate(num);\n-        List<Entity> entities = msl.stream().map(ms -> createEntityWithCrew(\"IND\", RandomSkillsGenerator.L_GREEN, campaign, ms)).collect(Collectors.<Entity>toList());\n-        return new ArrayList<>(entities);\n+        return msl.stream().map(ms -> createEntityWithCrew(\"IND\", RandomSkillsGenerator.L_GREEN, campaign, ms)).collect(Collectors.toCollection(ArrayList::new));\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDM3NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294375", "bodyText": "Inconsistent spacing before the open brace in this block.", "author": "sixlettervariables", "createdAt": "2020-01-19T13:33:01Z", "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -557,100 +547,104 @@ public static ScenarioObjective translateTemplateObjective(AtBDynamicScenario sc\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(forceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         for(int forceID : scenario.getPlayerForceTemplates().keySet()) {\n             ScenarioForceTemplate playerForceTemplate = scenario.getPlayerForceTemplates().get(forceID);\n-            \n+\n             if(templateObjective.isApplicableToForceTemplate(playerForceTemplate, scenario) ||\n                     templateObjective.getAssociatedForceNames().contains(ScenarioObjective.FORCE_SHORTCUT_ALL_PRIMARY_PLAYER_FORCES)) {\n                 objectiveForceNames.add(campaign.getForce(forceID).getName());\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(playerForceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         for(UUID unitID : scenario.getPlayerUnitTemplates().keySet()) {\n             ScenarioForceTemplate playerForceTemplate = scenario.getPlayerUnitTemplates().get(unitID);\n-            \n+\n             if(templateObjective.isApplicableToForceTemplate(playerForceTemplate, scenario) ||\n                     templateObjective.getAssociatedForceNames().contains(ScenarioObjective.FORCE_SHORTCUT_ALL_PRIMARY_PLAYER_FORCES)) {\n                 objectiveUnitIDs.add(unitID.toString());\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(playerForceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         // this handles generated units that have been put under the player's control\n         for(UUID unitID : scenario.getBotUnitTemplates().keySet()) {\n             ScenarioForceTemplate botForceTemplate = scenario.getBotUnitTemplates().get(unitID);\n-            \n+\n             if(templateObjective.isApplicableToForceTemplate(botForceTemplate, scenario)) {\n                 objectiveUnitIDs.add(unitID.toString());\n                 calculatedDestinationZone = OffBoardDirection.translateBoardStart(getOppositeEdge(botForceTemplate.getActualDeploymentZone()));\n             }\n         }\n-        \n+\n         for(String forceName : objectiveForceNames) {\n             actualObjective.addForce(forceName);\n         }\n-        \n+\n         for(String unitID : objectiveUnitIDs) {\n             actualObjective.addUnit(unitID);\n         }\n-        \n+\n         // if the objective specifies that it's to reach or prevent reaching a map edge\n         // and has been set to \"force destination edge\", set that here\n-        if(actualObjective.getDestinationEdge() == OffBoardDirection.NONE && \n+        if(actualObjective.getDestinationEdge() == OffBoardDirection.NONE &&\n                 calculatedDestinationZone != OffBoardDirection.NONE &&\n                 (actualObjective.getObjectiveCriterion() == ObjectiveCriterion.ReachMapEdge ||\n                 actualObjective.getObjectiveCriterion() == ObjectiveCriterion.PreventReachMapEdge)) {\n             actualObjective.setDestinationEdge(calculatedDestinationZone);\n         }\n-        \n+\n         return actualObjective;\n     }\n-    \n+\n     /**\n      * Scale the scenario's objective time limits, if called for, by the number of units\n      * that have associated force templates that \"contribute to the unit count\".\n      */\n     private static void scaleObjectiveTimeLimits(AtBDynamicScenario scenario, Campaign campaign) {\n         int primaryUnitCount = 0;\n-        \n+\n         for(int forceID : scenario.getPlayerForceTemplates().keySet()) {\n             if(scenario.getPlayerForceTemplates().get(forceID).getContributesToUnitCount()) {\n                 primaryUnitCount += campaign.getForce(forceID).getAllUnits().size();\n             }\n         }\n-        \n+\n         for(BotForce botForce : scenario.getBotForceTemplates().keySet()) {\n             if(scenario.getBotForceTemplates().get(botForce).getContributesToUnitCount()) {\n                 primaryUnitCount += botForce.getEntityList().size();\n             }\n         }\n-        \n+\n         for(ScenarioObjective objective : scenario.getScenarioObjectives()) {\n             if(objective.getTimeLimitType() == TimeLimitType.ScaledToPrimaryUnitCount) {\n                 objective.setTimeLimit(primaryUnitCount * objective.getTimeLimitScaleFactor());\n             }\n         }\n     }\n-    \n+\n     /**\n      * Handles random determination of light conditions for the given scenario, as per AtB rules\n      * @param scenario The scenario for which to set lighting conditions.\n      */\n     private static void setLightConditions(AtBDynamicScenario scenario) {\n-        int light = PlanetaryConditions.L_DAY;\n-\n         int roll = Compute.randomInt(10) + 1;\n-        if (roll < 6) light = PlanetaryConditions.L_DAY;\n-        else if (roll < 8) light = PlanetaryConditions.L_DUSK;\n-        else if (roll == 8) light = PlanetaryConditions.L_FULL_MOON;\n-        else if (roll == 9) light = PlanetaryConditions.L_MOONLESS;\n-        else light = PlanetaryConditions.L_PITCH_BLACK;\n-        \n+        int light = PlanetaryConditions.L_DAY; //this handles all rolls less than 6\n+\n+        if ((6 <= roll) && (roll < 8)){", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTc2Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295763", "bodyText": "The logic is also faulty, so I've reverted this change and fixed the formatting.", "author": "Windchild292", "createdAt": "2020-01-19T13:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\nindex 2a18b3dc5..551ec182e 100644\n--- a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n+++ b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n\n@@ -630,11 +628,13 @@ public class AtBDynamicScenarioFactory {\n      */\n     private static void setLightConditions(AtBDynamicScenario scenario) {\n         int roll = Compute.randomInt(10) + 1;\n-        int light = PlanetaryConditions.L_DAY; //this handles all rolls less than 6\n+        int light;\n \n-        if ((6 <= roll) && (roll < 8)){\n+        if (roll < 6) {\n+            light = PlanetaryConditions.L_DAY;\n+        } else if (roll < 8) {\n             light = PlanetaryConditions.L_DUSK;\n-        } else if (roll == 8){\n+        } else if (roll == 8) {\n             light = PlanetaryConditions.L_FULL_MOON;\n         } else if (roll == 9) {\n             light = PlanetaryConditions.L_MOONLESS;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDQ1Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294452", "bodyText": "Remove the colon.", "author": "sixlettervariables", "createdAt": "2020-01-19T13:34:19Z", "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -992,64 +986,64 @@ public static Entity getInfantryEntity(UnitGeneratorParameters params, int skill\n                     newParams.getMovementModes().addAll(IUnitGenerator.ALL_INFANTRY_MODES);\n                     newParams.setFilter(inf -> inf.getTons() <= bayCapacity);\n                 }\n-                \n+\n                 MechSummary ms = campaign.getUnitGenerator().generate(newParams);\n-                \n+\n                 if (ms == null) {\n                     continue;\n                 }\n-                \n+\n                 Entity infantry = createEntityWithCrew(params.getFaction(), skill, campaign, ms);\n-                \n+\n                 // if we're dealing with a *really* small bay, drop the # squads down until we can fit it in\n                 while(infantry.getWeight() > bayCapacity) {\n                     ((Infantry) infantry).setSquadN(((Infantry) infantry).getSquadN() - 1);\n                     infantry.autoSetInternal();\n                 }\n-                \n+\n                 // unlikely but theoretically possible\n                 if(((Infantry) infantry).getSquadN() == 0) {\n                     continue;\n                 }\n-                \n+\n                 // sometimes something crazy will happen and we will not be able to load the unit into the transport\n                 // so let's at least not have it deploy right away.\n                 infantry.setDeployRound(transport.getDeployRound());\n                 scenario.addTransportRelationship(transport.getExternalIdAsString(), infantry.getExternalIdAsString());\n-                \n+\n                 transportedUnits.add(infantry);\n             }\n         }\n-        \n+\n         return transportedUnits;\n     }\n-    \n+\n     /**\n      * Fill the provided transports with randomly generated units that\n      * can fit into their bays.\n-     * @param transports\n+     * @param scenario\n+     * @param transports: list of potential transports", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\nindex 2a18b3dc5..551ec182e 100644\n--- a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n+++ b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n\n@@ -1022,12 +1022,12 @@ public class AtBDynamicScenarioFactory {\n      * Fill the provided transports with randomly generated units that\n      * can fit into their bays.\n      * @param scenario\n-     * @param transports: list of potential transports\n+     * @param transports list of potential transports\n      * @param factionCode\n      * @param skill\n      * @param quality\n      * @param campaign\n-     * @return transportedUnits, which are the units being transported\n+     * @return transportedUnits List of units being transported\n      */\n     public static List<Entity> fillTransports(AtBScenario scenario, List<Entity> transports, String factionCode, int skill, int quality, Campaign campaign) {\n         List<Entity> transportedUnits = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NDg1NA==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368294854", "bodyText": "Remove :", "author": "Windchild292", "createdAt": "2020-01-19T13:40:16Z", "path": "MekHQ/src/mekhq/campaign/personnel/SkillPrereq.java", "diffHunk": "@@ -91,71 +91,71 @@ public boolean qualifies(Skills s) {\n     /**\n      * Determines if the given unit type \"qualifies\" for this skill pre-requisite.\n      * For now, we simply check whether the pre-requisite skills are required for the unit type\n-     * @param e\n+     * @param unitType: the type of unit that is being checked", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/personnel/SkillPrereq.java b/MekHQ/src/mekhq/campaign/personnel/SkillPrereq.java\nindex 09e5fdb6e..8963325e1 100644\n--- a/MekHQ/src/mekhq/campaign/personnel/SkillPrereq.java\n+++ b/MekHQ/src/mekhq/campaign/personnel/SkillPrereq.java\n\n@@ -91,7 +91,7 @@ public class SkillPrereq implements MekHqXmlSerializable {\n     /**\n      * Determines if the given unit type \"qualifies\" for this skill pre-requisite.\n      * For now, we simply check whether the pre-requisite skills are required for the unit type\n-     * @param unitType: the type of unit that is being checked\n+     * @param unitType the type of unit that is being checked\n      * @return\n      */\n     public boolean qualifies(int unitType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTAxNw==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295017", "bodyText": "fix :", "author": "Windchild292", "createdAt": "2020-01-19T13:42:25Z", "path": "MekHQ/src/mekhq/campaign/mission/Scenario.java", "diffHunk": "@@ -119,71 +119,71 @@ public static String getStatusName(int s) {\n             return \"?\";\n         }\n     }\n-    \n+\n     public String getName() {\n         return name;\n     }\n     public void setName(String n) {\n         this.name = n;\n     }\n-    \n+\n     public String getDescription() {\n         return desc;\n     }\n-    \n+\n     public void setDesc(String d) {\n         this.desc = d;\n     }\n-    \n+\n     public String getReport() {\n         return report;\n     }\n-    \n+\n     public void setReport(String r) {\n         this.report = r;\n     }\n-    \n+\n     public int getStatus() {\n         return status;\n     }\n-    \n+\n     public void setStatus(int s) {\n         this.status = s;\n     }\n-    \n+\n     public String getStatusName() {\n         return getStatusName(getStatus());\n     }\n-    \n+\n     public void setDate(Date d) {\n         this.date = d;\n     }\n-    \n+\n     public Date getDate() {\n         return date;\n     }\n-    \n+\n     public boolean hasObjectives() {\n         return scenarioObjectives != null &&\n                 scenarioObjectives.size() > 0;\n     }\n-    \n+\n     public List<ScenarioObjective> getScenarioObjectives() {\n         return scenarioObjectives;\n     }\n \n     public void setScenarioObjectives(List<ScenarioObjective> scenarioObjectives) {\n         this.scenarioObjectives = scenarioObjectives;\n     }\n-    \n+\n     public Map<UUID,ArrayList<UUID>> getPlayerTransportLinkages() {\n         return playerTransportLinkages;\n     }\n-    \n+\n     /**\n      * Adds a transport-cargo pair to the internal transport relationship store.\n-     * @param transport\n-     * @param cargo\n+     * @param transportId: the UUID of the transport object\n+     * @param cargoId: the UUID of the cargo being transported", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/Scenario.java b/MekHQ/src/mekhq/campaign/mission/Scenario.java\nindex abb34f405..8f9f731eb 100644\n--- a/MekHQ/src/mekhq/campaign/mission/Scenario.java\n+++ b/MekHQ/src/mekhq/campaign/mission/Scenario.java\n\n@@ -182,8 +182,8 @@ public class Scenario implements Serializable {\n \n     /**\n      * Adds a transport-cargo pair to the internal transport relationship store.\n-     * @param transportId: the UUID of the transport object\n-     * @param cargoId: the UUID of the cargo being transported\n+     * @param transportId the UUID of the transport object\n+     * @param cargoId     the UUID of the cargo being transported\n      */\n     public void addPlayerTransportRelationship(UUID transportId, UUID cargoId) {\n         playerTransportLinkages.get(transportId).add(cargoId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTMzMA==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295330", "bodyText": "remove ,", "author": "Windchild292", "createdAt": "2020-01-19T13:46:42Z", "path": "MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java", "diffHunk": "@@ -992,64 +986,64 @@ public static Entity getInfantryEntity(UnitGeneratorParameters params, int skill\n                     newParams.getMovementModes().addAll(IUnitGenerator.ALL_INFANTRY_MODES);\n                     newParams.setFilter(inf -> inf.getTons() <= bayCapacity);\n                 }\n-                \n+\n                 MechSummary ms = campaign.getUnitGenerator().generate(newParams);\n-                \n+\n                 if (ms == null) {\n                     continue;\n                 }\n-                \n+\n                 Entity infantry = createEntityWithCrew(params.getFaction(), skill, campaign, ms);\n-                \n+\n                 // if we're dealing with a *really* small bay, drop the # squads down until we can fit it in\n                 while(infantry.getWeight() > bayCapacity) {\n                     ((Infantry) infantry).setSquadN(((Infantry) infantry).getSquadN() - 1);\n                     infantry.autoSetInternal();\n                 }\n-                \n+\n                 // unlikely but theoretically possible\n                 if(((Infantry) infantry).getSquadN() == 0) {\n                     continue;\n                 }\n-                \n+\n                 // sometimes something crazy will happen and we will not be able to load the unit into the transport\n                 // so let's at least not have it deploy right away.\n                 infantry.setDeployRound(transport.getDeployRound());\n                 scenario.addTransportRelationship(transport.getExternalIdAsString(), infantry.getExternalIdAsString());\n-                \n+\n                 transportedUnits.add(infantry);\n             }\n         }\n-        \n+\n         return transportedUnits;\n     }\n-    \n+\n     /**\n      * Fill the provided transports with randomly generated units that\n      * can fit into their bays.\n-     * @param transports\n+     * @param scenario\n+     * @param transports: list of potential transports\n      * @param factionCode\n      * @param skill\n      * @param quality\n-     * @param year\n      * @param campaign\n-     * @return\n+     * @return transportedUnits, which are the units being transported", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\nindex 2a18b3dc5..551ec182e 100644\n--- a/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n+++ b/MekHQ/src/mekhq/campaign/mission/AtBDynamicScenarioFactory.java\n\n@@ -1022,12 +1022,12 @@ public class AtBDynamicScenarioFactory {\n      * Fill the provided transports with randomly generated units that\n      * can fit into their bays.\n      * @param scenario\n-     * @param transports: list of potential transports\n+     * @param transports list of potential transports\n      * @param factionCode\n      * @param skill\n      * @param quality\n      * @param campaign\n-     * @return transportedUnits, which are the units being transported\n+     * @return transportedUnits List of units being transported\n      */\n     public static List<Entity> fillTransports(AtBScenario scenario, List<Entity> transports, String factionCode, int skill, int quality, Campaign campaign) {\n         List<Entity> transportedUnits = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5NTQwNA==", "url": "https://github.com/MegaMek/mekhq/pull/1403#discussion_r368295404", "bodyText": "remove :", "author": "Windchild292", "createdAt": "2020-01-19T13:48:07Z", "path": "MekHQ/src/mekhq/campaign/mission/AtBScenario.java", "diffHunk": "@@ -575,8 +575,8 @@ public boolean canDeployUnits(Vector<Unit> units, Campaign campaign) {\n     /**\n      * Determines whether a list of forces is eligible to deploy to the scenario.\n      *\n-     * @param units\n-     * @param campaign\n+     * @param forces: list of forces\n+     * @param c: the campaign that the forces are part of", "originalCommit": "e2f99a4339f305b2ea902eefc395e97c94ae6213", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/mission/AtBScenario.java b/MekHQ/src/mekhq/campaign/mission/AtBScenario.java\nindex 99054650f..e69b8b893 100644\n--- a/MekHQ/src/mekhq/campaign/mission/AtBScenario.java\n+++ b/MekHQ/src/mekhq/campaign/mission/AtBScenario.java\n\n@@ -575,8 +575,8 @@ public abstract class AtBScenario extends Scenario implements IAtBScenario {\n     /**\n      * Determines whether a list of forces is eligible to deploy to the scenario.\n      *\n-     * @param forces: list of forces\n-     * @param c: the campaign that the forces are part of\n+     * @param forces    list of forces\n+     * @param c         the campaign that the forces are part of\n      * @return true if all units in all forces in the list are eligible, otherwise false\n      */\n     public boolean canDeployForces(Vector<Force> forces, Campaign c) {\n"}}, {"oid": "4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "url": "https://github.com/MegaMek/mekhq/commit/4bd325f41a3ae3f6e5e659d8bb8f6ff3ab0db205", "message": "1403: Fixes from review", "committedDate": "2020-01-19T14:15:14Z", "type": "commit"}, {"oid": "a82396072529abb772d6e5398a18ca4d332231f5", "url": "https://github.com/MegaMek/mekhq/commit/a82396072529abb772d6e5398a18ca4d332231f5", "message": "Fixed Bug in TO&E Relating to Transporting Units, Refactoring in TO&E Mouse Adapter", "committedDate": "2020-01-19T15:56:25Z", "type": "commit"}]}