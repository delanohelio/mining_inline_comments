{"pr_number": 2018, "pr_title": "Improved tracking of integrated heat sink changes during refit", "pr_createdAt": "2020-09-17T20:38:01Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2018", "timeline": [{"oid": "94523d9a51ce8027b5c00976cbeb4c59ada89040", "url": "https://github.com/MegaMek/mekhq/commit/94523d9a51ce8027b5c00976cbeb4c59ada89040", "message": "new integrated heat sinks should be added as MissingParts, otherwise they will be ignored by shoppingList", "committedDate": "2020-09-17T02:37:07Z", "type": "commit"}, {"oid": "1bd5efc05ca97a538a068f3d324daa0dea1d6745", "url": "https://github.com/MegaMek/mekhq/commit/1bd5efc05ca97a538a068f3d324daa0dea1d6745", "message": "cleanup Integrated heat sink parts: don't actually add them to the unit", "committedDate": "2020-09-17T05:06:09Z", "type": "commit"}, {"oid": "518eff0aabb071820c8226d20465dbc5ff7c6050", "url": "https://github.com/MegaMek/mekhq/commit/518eff0aabb071820c8226d20465dbc5ff7c6050", "message": "when refitting internal heat sinks, check warehouse for spares before ordering new ones", "committedDate": "2020-09-17T05:46:40Z", "type": "commit"}, {"oid": "d2c532c163c25c04e9c5fdbe46df73ca77882f82", "url": "https://github.com/MegaMek/mekhq/commit/d2c532c163c25c04e9c5fdbe46df73ca77882f82", "message": "Merge remote-tracking branch 'upstream/master' into fix-refit-integrated-heat-sinks", "committedDate": "2020-09-17T13:39:54Z", "type": "commit"}, {"oid": "45f407c020714ed45a4a98d068aa42ea6350b5e3", "url": "https://github.com/MegaMek/mekhq/commit/45f407c020714ed45a4a98d068aa42ea6350b5e3", "message": "better cleanup of integrated heat sinks for Tanks and Aeros", "committedDate": "2020-09-17T18:20:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NDIyMg==", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490584222", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for(Part nHsPart : newIntegratedHS) {\n          \n          \n            \n                    for (Part nHsPart : newIntegratedHS) {", "author": "Windchild292", "createdAt": "2020-09-17T21:55:29Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {", "originalCommit": "45f407c020714ed45a4a98d068aa42ea6350b5e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03309dbf8f46910e840d753d89824ac1f5187667", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 1ef0a9bb5..53cbb4587 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -915,17 +915,17 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        for(Part nHsPart : newIntegratedHS) {\n+        for (Part nHsPart : newIntegratedHS) {\n             // Check warehouse for spare heat sinks before adding to shopping list\n-            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            Part replacement = ((MissingPart) nHsPart).findReplacement(true);\n             //check quantity\n-            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+            if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n                 partQuantity.put(replacement.getId(), replacement.getQuantity());\n             }\n-            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+            if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n                 newUnitParts.add(replacement.getId());\n                 //adjust quantity\n-                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);\n                 //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                 if (partQuantity.get(replacement.getId()) == 0) {\n                     replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NDg4OQ==", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490584889", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n          \n          \n            \n                        if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {", "author": "Windchild292", "createdAt": "2020-09-17T21:57:05Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            //check quantity\n+            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {", "originalCommit": "45f407c020714ed45a4a98d068aa42ea6350b5e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03309dbf8f46910e840d753d89824ac1f5187667", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 1ef0a9bb5..53cbb4587 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -915,17 +915,17 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        for(Part nHsPart : newIntegratedHS) {\n+        for (Part nHsPart : newIntegratedHS) {\n             // Check warehouse for spare heat sinks before adding to shopping list\n-            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            Part replacement = ((MissingPart) nHsPart).findReplacement(true);\n             //check quantity\n-            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+            if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n                 partQuantity.put(replacement.getId(), replacement.getQuantity());\n             }\n-            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+            if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n                 newUnitParts.add(replacement.getId());\n                 //adjust quantity\n-                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);\n                 //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                 if (partQuantity.get(replacement.getId()) == 0) {\n                     replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NDkzOA==", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490584938", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n          \n          \n            \n                        Part replacement = ((MissingPart) nHsPart).findReplacement(true);", "author": "Windchild292", "createdAt": "2020-09-17T21:57:11Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);", "originalCommit": "45f407c020714ed45a4a98d068aa42ea6350b5e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03309dbf8f46910e840d753d89824ac1f5187667", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 1ef0a9bb5..53cbb4587 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -915,17 +915,17 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        for(Part nHsPart : newIntegratedHS) {\n+        for (Part nHsPart : newIntegratedHS) {\n             // Check warehouse for spare heat sinks before adding to shopping list\n-            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            Part replacement = ((MissingPart) nHsPart).findReplacement(true);\n             //check quantity\n-            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+            if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n                 partQuantity.put(replacement.getId(), replacement.getQuantity());\n             }\n-            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+            if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n                 newUnitParts.add(replacement.getId());\n                 //adjust quantity\n-                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);\n                 //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                 if (partQuantity.get(replacement.getId()) == 0) {\n                     replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NTAwNQ==", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490585005", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n          \n          \n            \n                        if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {", "author": "Windchild292", "createdAt": "2020-09-17T21:57:19Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            //check quantity\n+            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+                partQuantity.put(replacement.getId(), replacement.getQuantity());\n+            }\n+            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {", "originalCommit": "45f407c020714ed45a4a98d068aa42ea6350b5e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03309dbf8f46910e840d753d89824ac1f5187667", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 1ef0a9bb5..53cbb4587 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -915,17 +915,17 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        for(Part nHsPart : newIntegratedHS) {\n+        for (Part nHsPart : newIntegratedHS) {\n             // Check warehouse for spare heat sinks before adding to shopping list\n-            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            Part replacement = ((MissingPart) nHsPart).findReplacement(true);\n             //check quantity\n-            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+            if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n                 partQuantity.put(replacement.getId(), replacement.getQuantity());\n             }\n-            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+            if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n                 newUnitParts.add(replacement.getId());\n                 //adjust quantity\n-                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);\n                 //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                 if (partQuantity.get(replacement.getId()) == 0) {\n                     replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NTA3MA==", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490585070", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n          \n          \n            \n                            partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);", "author": "Windchild292", "createdAt": "2020-09-17T21:57:28Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -907,15 +906,40 @@ public void calculate() {\n             if (oldHS != newHS) {\n                 Part hsPart = heatSinkPart(newEntity); // only single HS allowed, so they have to be of the same type\n                 for (int i = oldHS; i < newHS; i++) {\n-                    newIntegratedHS.add(hsPart.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(hsPart.clone().getMissingPart());\n                 }\n                 for (int i = newHS; i < oldHS; i++) {\n                     oldIntegratedHS.add(hsPart.clone());\n                 }\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        shoppingList.addAll(newIntegratedHS);\n+        for(Part nHsPart : newIntegratedHS) {\n+            // Check warehouse for spare heat sinks before adding to shopping list\n+            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            //check quantity\n+            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+                partQuantity.put(replacement.getId(), replacement.getQuantity());\n+            }\n+            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+                newUnitParts.add(replacement.getId());\n+                //adjust quantity\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);", "originalCommit": "45f407c020714ed45a4a98d068aa42ea6350b5e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03309dbf8f46910e840d753d89824ac1f5187667", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 1ef0a9bb5..53cbb4587 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -915,17 +915,17 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n             }\n         }\n         time += (oldIntegratedHS.size() + newIntegratedHS.size()) * 90;\n-        for(Part nHsPart : newIntegratedHS) {\n+        for (Part nHsPart : newIntegratedHS) {\n             // Check warehouse for spare heat sinks before adding to shopping list\n-            Part replacement = ((MissingPart)nHsPart).findReplacement(true);\n+            Part replacement = ((MissingPart) nHsPart).findReplacement(true);\n             //check quantity\n-            if((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n+            if ((null != replacement) && (null == partQuantity.get(replacement.getId()))) {\n                 partQuantity.put(replacement.getId(), replacement.getQuantity());\n             }\n-            if((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n+            if ((null != replacement) && (partQuantity.get(replacement.getId())) > 0) {\n                 newUnitParts.add(replacement.getId());\n                 //adjust quantity\n-                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n+                partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId()) - 1);\n                 //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                 if (partQuantity.get(replacement.getId()) == 0) {\n                     replacement.setUsedForRefitPlanning(true);\n"}}, {"oid": "03309dbf8f46910e840d753d89824ac1f5187667", "url": "https://github.com/MegaMek/mekhq/commit/03309dbf8f46910e840d753d89824ac1f5187667", "message": "style formatting fixes", "committedDate": "2020-09-17T23:29:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY4MDI4Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2018#discussion_r490680283", "bodyText": "Can't this just be newHS.getMissingPart() ?", "author": "Windchild292", "createdAt": "2020-09-18T03:32:47Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -881,14 +878,16 @@ public void calculate() {\n                     oldIntegratedHS.add(oldHS.clone());\n                 }\n                 for (int i = 0; i < newCount - oldCount; i++) {\n-                    newIntegratedHS.add(oldHS.clone());\n+                    // Heat sink added for supply chain tracking purposes and removed from refit later\n+                    newIntegratedHS.add(newHS.clone().getMissingPart());", "originalCommit": "03309dbf8f46910e840d753d89824ac1f5187667", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "46ceeb4975d8a0d1775da40feb014f3e2476a870", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 53cbb4587..6d392f9fc 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -879,7 +879,7 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n                 }\n                 for (int i = 0; i < newCount - oldCount; i++) {\n                     // Heat sink added for supply chain tracking purposes and removed from refit later\n-                    newIntegratedHS.add(newHS.clone().getMissingPart());\n+                    newIntegratedHS.add(newHS.getMissingPart());\n                 }\n             } else {\n                 for (int i = 0; i < oldCount; i++) {\n"}}, {"oid": "46ceeb4975d8a0d1775da40feb014f3e2476a870", "url": "https://github.com/MegaMek/mekhq/commit/46ceeb4975d8a0d1775da40feb014f3e2476a870", "message": "unnecessary clones", "committedDate": "2020-09-18T04:39:25Z", "type": "commit"}]}