{"pr_number": 1794, "pr_title": "1781: Adding Sorting to the Scenario Table", "pr_createdAt": "2020-06-03T15:08:25Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1794", "timeline": [{"oid": "9da7ff7758ddd2e60c7e403a6e5de1098cf7e8e6", "url": "https://github.com/MegaMek/mekhq/commit/9da7ff7758ddd2e60c7e403a6e5de1098cf7e8e6", "message": "Initial work to add the sorting, just need to deal with a NPE", "committedDate": "2020-06-03T12:00:52Z", "type": "commit"}, {"oid": "1d2d98d3542799e4c2d50f15a2527a41c0e4d362", "url": "https://github.com/MegaMek/mekhq/commit/1d2d98d3542799e4c2d50f15a2527a41c0e4d362", "message": "Fixing the NPE caused by not updating the data properly", "committedDate": "2020-06-03T13:45:08Z", "type": "commit"}, {"oid": "a29f5d2f12ca11241c03409154299e60577fc26a", "url": "https://github.com/MegaMek/mekhq/commit/a29f5d2f12ca11241c03409154299e60577fc26a", "message": "Fixing scenario null pointers", "committedDate": "2020-06-03T13:45:42Z", "type": "commit"}, {"oid": "a95c8b6f5a01634e741825eb66d8d18ce7fecf3a", "url": "https://github.com/MegaMek/mekhq/commit/a95c8b6f5a01634e741825eb66d8d18ce7fecf3a", "message": "Refactoring to standardize and actually utilize the abstraction for scenario and unit market table models.", "committedDate": "2020-06-03T13:46:45Z", "type": "commit"}, {"oid": "31512be33c75df10670ff2d28040e11ced4430e4", "url": "https://github.com/MegaMek/mekhq/commit/31512be33c75df10670ff2d28040e11ced4430e4", "message": "clarifying # units", "committedDate": "2020-06-03T13:49:43Z", "type": "commit"}, {"oid": "ad1a76bcbd9ffee17557f38b77d4ff5d0ffaaabe", "url": "https://github.com/MegaMek/mekhq/commit/ad1a76bcbd9ffee17557f38b77d4ff5d0ffaaabe", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_1781", "committedDate": "2020-06-03T13:50:08Z", "type": "commit"}, {"oid": "703699b9b33eb700e482c2748b0f77b9caac091e", "url": "https://github.com/MegaMek/mekhq/commit/703699b9b33eb700e482c2748b0f77b9caac091e", "message": "Adding a special sort for Scenario Status", "committedDate": "2020-06-03T14:15:49Z", "type": "commit"}, {"oid": "ac57d7bd39fc9507e29c0a63841a025a2c7dabfe", "url": "https://github.com/MegaMek/mekhq/commit/ac57d7bd39fc9507e29c0a63841a025a2c7dabfe", "message": "Adding GMModeEvent handler", "committedDate": "2020-06-03T14:17:47Z", "type": "commit"}, {"oid": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd", "url": "https://github.com/MegaMek/mekhq/commit/66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd", "message": "Fixing the sort order", "committedDate": "2020-06-03T14:26:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTY5MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439165691", "bodyText": "Why not try these first?", "author": "sixlettervariables", "createdAt": "2020-06-12T01:53:29Z", "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.Campaign;\n+\n+import java.io.Serializable;\n+import java.time.LocalDate;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Comparator;\n+\n+public class DateStringComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6745919248211983499L;\n+\n+    private Campaign campaign;\n+\n+    public DateStringComparator(Campaign campaign) {\n+        this.campaign = campaign;\n+    }\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        LocalDate dateA;\n+        LocalDate dateB;\n+        try {\n+            dateA = LocalDate.parse(o1, DateTimeFormatter.ofPattern(\n+                    campaign.getCampaignOptions().getDisplayDateFormat()));\n+        } catch (Exception ignored) {\n+            if (\"-\".equals(o2) && \"-\".equals(o1)) {", "originalCommit": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3NzkwNg==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r440177906", "bodyText": "Fixed, just a dumb ordering decision on my part", "author": "Windchild292", "createdAt": "2020-06-15T13:32:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTY5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "88e8402880f44659023689eab665fc291706ec45", "chunk": "diff --git a/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java b/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java\nindex be5f16d5a..4fe873292 100644\n--- a/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java\n+++ b/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java\n\n@@ -36,26 +36,28 @@ public class DateStringComparator implements Comparator<String>, Serializable {\n \n     @Override\n     public int compare(String o1, String o2) {\n+        if (o1.equals(o2)) {\n+            return 0;\n+        } else if (\"-\".equals(o1)) {\n+            return -1;\n+        } else if (\"-\".equals(o2)) {\n+            return 1;\n+        }\n+\n         LocalDate dateA;\n         LocalDate dateB;\n         try {\n             dateA = LocalDate.parse(o1, DateTimeFormatter.ofPattern(\n                     campaign.getCampaignOptions().getDisplayDateFormat()));\n         } catch (Exception ignored) {\n-            if (\"-\".equals(o2) && \"-\".equals(o1)) {\n-                return 0;\n-            } else if (\"-\".equals(o1)) {\n-                return 1;\n-            } else {\n-                return -1;\n-            }\n+            return -1;\n         }\n \n         try {\n             dateB = LocalDate.parse(o2, DateTimeFormatter.ofPattern(\n                     campaign.getCampaignOptions().getDisplayDateFormat()));\n         } catch (Exception ignored) {\n-            return -1;\n+            return 1;\n         }\n \n         return dateA.compareTo(dateB);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NTk2MA==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439165960", "bodyText": "Could o1 and o2 be equal?", "author": "sixlettervariables", "createdAt": "2020-06-12T01:54:40Z", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        int a = -1;\n+        int b = -1;\n+\n+        // First we need to determine the numbers based on the name\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(o1)) {\n+                a = i;\n+            } else if (Scenario.getStatusName(i).equals(o2)) {", "originalCommit": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88e8402880f44659023689eab665fc291706ec45", "chunk": "diff --git a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\nindex 16719f238..77aa5bd71 100644\n--- a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n+++ b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n\n@@ -19,47 +19,50 @@\n package mekhq.gui.sorter;\n \n import mekhq.campaign.mission.Scenario;\n+import mekhq.campaign.parts.Part;\n \n import java.io.Serializable;\n import java.util.Comparator;\n \n+/**\n+ * This class compares two {@link Scenario} status integers\n+ */\n public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n     private static final long serialVersionUID = -6287998488809978029L;\n \n     @Override\n     public int compare(String o1, String o2) {\n-        int a = -1;\n-        int b = -1;\n-\n-        // First we need to determine the numbers based on the name\n-        for (int i = 0; i < Scenario.S_NUM; i++) {\n-            if (Scenario.getStatusName(i).equals(o1)) {\n-                a = i;\n-            } else if (Scenario.getStatusName(i).equals(o2)) {\n-                b = i;\n-            }\n+        if (o1.equals(o2)) {\n+            return 0;\n         }\n \n-        // Now we need to fix the references to Defeat and Draw so they sort nicely\n-        switch (a) {\n-            case 3:\n-                a = 5;\n-                break;\n-            case 5:\n-                a = 3;\n+        int a = getStatusInt(o1);\n+        int b = getStatusInt(o2);\n+\n+        // Then we just subtract b from a to determine the sort order\n+        return a - b;\n+    }\n+\n+    private int getStatusInt(String status) {\n+        int statusInt = -1;\n+\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(status)) {\n+                statusInt = i;\n                 break;\n+            }\n         }\n \n-        switch (b) {\n-            case 3:\n-                b = 5;\n+        // Now we need to fix the references to Defeat (3) and Draw (5) so they sort nicely\n+        switch (statusInt) {\n+            case 3: // Defeat is listed as 3, but is best sorted as 5\n+                statusInt = 5;\n                 break;\n-            case 5:\n-                b = 3;\n+            case 5: // Draw is listed as 5, but is best sorted as 3 (in the middle between Victory and Defeat)\n+                statusInt = 3;\n                 break;\n         }\n \n-        // Then we just subtract b from a to determine the sort order\n-        return a - b;\n+        return statusInt;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjEwMw==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439166103", "bodyText": "Comments for which is defeat and which is draw would be nice.", "author": "sixlettervariables", "createdAt": "2020-06-12T01:55:13Z", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        int a = -1;\n+        int b = -1;\n+\n+        // First we need to determine the numbers based on the name\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(o1)) {\n+                a = i;\n+            } else if (Scenario.getStatusName(i).equals(o2)) {\n+                b = i;\n+            }\n+        }\n+\n+        // Now we need to fix the references to Defeat and Draw so they sort nicely\n+        switch (a) {\n+            case 3:", "originalCommit": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88e8402880f44659023689eab665fc291706ec45", "chunk": "diff --git a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\nindex 16719f238..77aa5bd71 100644\n--- a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n+++ b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n\n@@ -19,47 +19,50 @@\n package mekhq.gui.sorter;\n \n import mekhq.campaign.mission.Scenario;\n+import mekhq.campaign.parts.Part;\n \n import java.io.Serializable;\n import java.util.Comparator;\n \n+/**\n+ * This class compares two {@link Scenario} status integers\n+ */\n public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n     private static final long serialVersionUID = -6287998488809978029L;\n \n     @Override\n     public int compare(String o1, String o2) {\n-        int a = -1;\n-        int b = -1;\n-\n-        // First we need to determine the numbers based on the name\n-        for (int i = 0; i < Scenario.S_NUM; i++) {\n-            if (Scenario.getStatusName(i).equals(o1)) {\n-                a = i;\n-            } else if (Scenario.getStatusName(i).equals(o2)) {\n-                b = i;\n-            }\n+        if (o1.equals(o2)) {\n+            return 0;\n         }\n \n-        // Now we need to fix the references to Defeat and Draw so they sort nicely\n-        switch (a) {\n-            case 3:\n-                a = 5;\n-                break;\n-            case 5:\n-                a = 3;\n+        int a = getStatusInt(o1);\n+        int b = getStatusInt(o2);\n+\n+        // Then we just subtract b from a to determine the sort order\n+        return a - b;\n+    }\n+\n+    private int getStatusInt(String status) {\n+        int statusInt = -1;\n+\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(status)) {\n+                statusInt = i;\n                 break;\n+            }\n         }\n \n-        switch (b) {\n-            case 3:\n-                b = 5;\n+        // Now we need to fix the references to Defeat (3) and Draw (5) so they sort nicely\n+        switch (statusInt) {\n+            case 3: // Defeat is listed as 3, but is best sorted as 5\n+                statusInt = 5;\n                 break;\n-            case 5:\n-                b = 3;\n+            case 5: // Draw is listed as 5, but is best sorted as 3 (in the middle between Victory and Defeat)\n+                statusInt = 3;\n                 break;\n         }\n \n-        // Then we just subtract b from a to determine the sort order\n-        return a - b;\n+        return statusInt;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjkyMg==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r439166922", "bodyText": "I think it would be more natural to have a helper method that converted the string to its sort order integer, then just compare the two integers.", "author": "sixlettervariables", "createdAt": "2020-06-12T01:58:40Z", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        int a = -1;\n+        int b = -1;\n+\n+        // First we need to determine the numbers based on the name\n+        for (int i = 0; i < Scenario.S_NUM; i++) {", "originalCommit": "66ddfe0fcaa7fd5bad7e2b78a76ab46cfa15f8fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88e8402880f44659023689eab665fc291706ec45", "chunk": "diff --git a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\nindex 16719f238..77aa5bd71 100644\n--- a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n+++ b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n\n@@ -19,47 +19,50 @@\n package mekhq.gui.sorter;\n \n import mekhq.campaign.mission.Scenario;\n+import mekhq.campaign.parts.Part;\n \n import java.io.Serializable;\n import java.util.Comparator;\n \n+/**\n+ * This class compares two {@link Scenario} status integers\n+ */\n public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n     private static final long serialVersionUID = -6287998488809978029L;\n \n     @Override\n     public int compare(String o1, String o2) {\n-        int a = -1;\n-        int b = -1;\n-\n-        // First we need to determine the numbers based on the name\n-        for (int i = 0; i < Scenario.S_NUM; i++) {\n-            if (Scenario.getStatusName(i).equals(o1)) {\n-                a = i;\n-            } else if (Scenario.getStatusName(i).equals(o2)) {\n-                b = i;\n-            }\n+        if (o1.equals(o2)) {\n+            return 0;\n         }\n \n-        // Now we need to fix the references to Defeat and Draw so they sort nicely\n-        switch (a) {\n-            case 3:\n-                a = 5;\n-                break;\n-            case 5:\n-                a = 3;\n+        int a = getStatusInt(o1);\n+        int b = getStatusInt(o2);\n+\n+        // Then we just subtract b from a to determine the sort order\n+        return a - b;\n+    }\n+\n+    private int getStatusInt(String status) {\n+        int statusInt = -1;\n+\n+        for (int i = 0; i < Scenario.S_NUM; i++) {\n+            if (Scenario.getStatusName(i).equals(status)) {\n+                statusInt = i;\n                 break;\n+            }\n         }\n \n-        switch (b) {\n-            case 3:\n-                b = 5;\n+        // Now we need to fix the references to Defeat (3) and Draw (5) so they sort nicely\n+        switch (statusInt) {\n+            case 3: // Defeat is listed as 3, but is best sorted as 5\n+                statusInt = 5;\n                 break;\n-            case 5:\n-                b = 3;\n+            case 5: // Draw is listed as 5, but is best sorted as 3 (in the middle between Victory and Defeat)\n+                statusInt = 3;\n                 break;\n         }\n \n-        // Then we just subtract b from a to determine the sort order\n-        return a - b;\n+        return statusInt;\n     }\n }\n"}}, {"oid": "88e8402880f44659023689eab665fc291706ec45", "url": "https://github.com/MegaMek/mekhq/commit/88e8402880f44659023689eab665fc291706ec45", "message": "Modifying sorters based on code review", "committedDate": "2020-06-15T13:47:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMTAyNQ==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r440221025", "bodyText": "This will fail on a null string, prefer Objects.equals here to make that case moot.", "author": "sixlettervariables", "createdAt": "2020-06-15T14:34:32Z", "path": "MekHQ/src/mekhq/gui/sorter/DateStringComparator.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.Campaign;\n+\n+import java.io.Serializable;\n+import java.time.LocalDate;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Comparator;\n+\n+public class DateStringComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6745919248211983499L;\n+\n+    private Campaign campaign;\n+\n+    public DateStringComparator(Campaign campaign) {\n+        this.campaign = campaign;\n+    }\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        if (o1.equals(o2)) {", "originalCommit": "88e8402880f44659023689eab665fc291706ec45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faee2513e04aff20298874be7a13934eac71b6a1", "chunk": "diff --git a/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java b/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java\nindex 4fe873292..856ff8dcc 100644\n--- a/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java\n+++ b/MekHQ/src/mekhq/gui/sorter/DateStringComparator.java\n\n@@ -24,6 +24,7 @@ import java.io.Serializable;\n import java.time.LocalDate;\n import java.time.format.DateTimeFormatter;\n import java.util.Comparator;\n+import java.util.Objects;\n \n public class DateStringComparator implements Comparator<String>, Serializable {\n     private static final long serialVersionUID = -6745919248211983499L;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMTQ1MQ==", "url": "https://github.com/MegaMek/mekhq/pull/1794#discussion_r440221451", "bodyText": "Null check issues again.", "author": "sixlettervariables", "createdAt": "2020-06-15T14:35:09Z", "path": "MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq.gui.sorter;\n+\n+import mekhq.campaign.mission.Scenario;\n+import mekhq.campaign.parts.Part;\n+\n+import java.io.Serializable;\n+import java.util.Comparator;\n+\n+/**\n+ * This class compares two {@link Scenario} status integers\n+ */\n+public class ScenarioStatusComparator implements Comparator<String>, Serializable {\n+    private static final long serialVersionUID = -6287998488809978029L;\n+\n+    @Override\n+    public int compare(String o1, String o2) {\n+        if (o1.equals(o2)) {", "originalCommit": "88e8402880f44659023689eab665fc291706ec45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faee2513e04aff20298874be7a13934eac71b6a1", "chunk": "diff --git a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\nindex 77aa5bd71..718ad5aae 100644\n--- a/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n+++ b/MekHQ/src/mekhq/gui/sorter/ScenarioStatusComparator.java\n\n@@ -23,6 +23,7 @@ import mekhq.campaign.parts.Part;\n \n import java.io.Serializable;\n import java.util.Comparator;\n+import java.util.Objects;\n \n /**\n  * This class compares two {@link Scenario} status integers\n"}}, {"oid": "faee2513e04aff20298874be7a13934eac71b6a1", "url": "https://github.com/MegaMek/mekhq/commit/faee2513e04aff20298874be7a13934eac71b6a1", "message": "Fixing null handling for comparisons", "committedDate": "2020-06-15T14:40:08Z", "type": "commit"}]}