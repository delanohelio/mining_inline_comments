{"pr_number": 1746, "pr_title": "Variable equipment size", "pr_createdAt": "2020-05-07T21:18:28Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1746", "timeline": [{"oid": "bca0649f28189084e687c0fdb9c79caa960b1b74", "url": "https://github.com/MegaMek/mekhq/commit/bca0649f28189084e687c0fdb9c79caa960b1b74", "message": "Added size field to EquipmentPart and MissingEquipmentPart.\n\nRemoved capacity field from LargeCraftAmmoBin to use size field instead.", "committedDate": "2020-05-01T19:46:04Z", "type": "commit"}, {"oid": "8e5417ba1ea74bdc4e01e3fb8884adf50a68d0f3", "url": "https://github.com/MegaMek/mekhq/commit/8e5417ba1ea74bdc4e01e3fb8884adf50a68d0f3", "message": "Use size field when setting EquipmentPart name.", "committedDate": "2020-05-01T19:50:32Z", "type": "commit"}, {"oid": "4b7651f97960bef183086f73079849289770ba7c", "url": "https://github.com/MegaMek/mekhq/commit/4b7651f97960bef183086f73079849289770ba7c", "message": "Fix Drone carrier control system and MASH equipment part costs.", "committedDate": "2020-05-01T20:25:58Z", "type": "commit"}, {"oid": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "url": "https://github.com/MegaMek/mekhq/commit/2881869b9d25aa0144cddb51e7dc72f60a974f11", "message": "Merge remote-tracking branch 'origin/master' into variable_equipment_size", "committedDate": "2020-05-07T21:10:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjEwNw==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421802107", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n          \n          \n            \n                            MekHqXmlUtil.escape(type.getInternalName()));\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());", "author": "Windchild292", "createdAt": "2020-05-07T21:21:52Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java", "diffHunk": "@@ -81,22 +82,12 @@ public EquipmentPart clone() {\n     @Override\n     public void writeToXml(PrintWriter pw1, int indent) {\n         writeToXmlBegin(pw1, indent);\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<equipmentNum>\"\n-                +equipmentNum\n-                +\"</equipmentNum>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<typeName>\"\n-                +MekHqXmlUtil.escape(type.getInternalName())\n-                +\"</typeName>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<equipTonnage>\"\n-                +equipTonnage\n-                +\"</equipTonnage>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<trooper>\"\n-                +trooper\n-                +\"</trooper>\");\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n+                MekHqXmlUtil.escape(type.getInternalName()));", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjI2Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421802263", "bodyText": "Strings are always escaped, so no need to call it here.", "author": "Windchild292", "createdAt": "2020-05-07T21:22:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjEwNw=="}], "type": "inlineReview", "revised_code": {"commit": "26ecf8774fad948f3146c5941527afe266c6c7a1", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java\nindex e73f08c91..b0ce49cb5 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java\n\n@@ -83,8 +83,7 @@ public class BattleArmorEquipmentPart extends EquipmentPart {\n     public void writeToXml(PrintWriter pw1, int indent) {\n         writeToXmlBegin(pw1, indent);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n-        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n-                MekHqXmlUtil.escape(type.getInternalName()));\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"size\", size);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipTonnage\", equipTonnage);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"trooper\", trooper);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMjc3OA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421802778", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            && getType().equals(((BattleArmorEquipmentPart)part).getType())\n          \n          \n            \n                            && getType().equals(((BattleArmorEquipmentPart) part).getType())", "author": "Windchild292", "createdAt": "2020-05-07T21:23:18Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java", "diffHunk": "@@ -235,13 +225,15 @@ public int getLocation() {\n \n     @Override\n     public MissingPart getMissingPart() {\n-        return new MissingBattleArmorEquipmentPart(getUnitTonnage(), type, equipmentNum, trooper, campaign, equipTonnage);\n+        return new MissingBattleArmorEquipmentPart(getUnitTonnage(), type, equipmentNum, size, trooper,\n+                campaign, equipTonnage);\n     }\n \n     @Override\n     public boolean isSamePartType(Part part) {\n         return part instanceof BattleArmorEquipmentPart\n                 && getType().equals(((BattleArmorEquipmentPart)part).getType())", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java\nindex e73f08c91..be4a1d7e6 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/BattleArmorEquipmentPart.java\n\n@@ -232,7 +231,7 @@ public class BattleArmorEquipmentPart extends EquipmentPart {\n     @Override\n     public boolean isSamePartType(Part part) {\n         return part instanceof BattleArmorEquipmentPart\n-                && getType().equals(((BattleArmorEquipmentPart)part).getType())\n+                && getType().equals(((BattleArmorEquipmentPart) part).getType())\n                 && getSize() == ((BattleArmorEquipmentPart) part).getSize()\n                 && getTonnage() == part.getTonnage();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMzA4MA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421803080", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        epart = new EquipmentPart(0, et, -1, 1.0,true, c);\n          \n          \n            \n                                        epart = new EquipmentPart(0, et, -1, 1.0, true, c);", "author": "Windchild292", "createdAt": "2020-05-07T21:23:57Z", "path": "MekHQ/src/mekhq/campaign/market/PartsStore.java", "diffHunk": "@@ -273,22 +273,22 @@ private void stockWeaponsAmmoAndEquipment(Campaign c) {\n                 if(EquipmentPart.hasVariableTonnage(et)) {\n                     EquipmentPart epart;\n                     for(double ton = EquipmentPart.getStartingTonnage(et); ton <= EquipmentPart.getMaxTonnage(et); ton += EquipmentPart.getTonnageIncrement(et)) {\n-                        epart = new EquipmentPart(0, et, -1, false, c);\n+                        epart = new EquipmentPart(0, et, -1, 1.0, false, c);\n                         epart.setEquipTonnage(ton);\n                         parts.add(epart);\n                         if (poddable) {\n-                            epart = new EquipmentPart(0, et, -1, true, c);\n+                            epart = new EquipmentPart(0, et, -1, 1.0,true, c);", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/market/PartsStore.java b/MekHQ/src/mekhq/campaign/market/PartsStore.java\nindex ba2d15f5f..cdaf46797 100644\n--- a/MekHQ/src/mekhq/campaign/market/PartsStore.java\n+++ b/MekHQ/src/mekhq/campaign/market/PartsStore.java\n\n@@ -277,7 +277,7 @@ public class PartsStore implements Serializable {\n                         epart.setEquipTonnage(ton);\n                         parts.add(epart);\n                         if (poddable) {\n-                            epart = new EquipmentPart(0, et, -1, 1.0,true, c);\n+                            epart = new EquipmentPart(0, et, -1, 1.0, true, c);\n                             epart.setEquipTonnage(ton);\n                             parts.add(epart);\n                             parts.add(new OmniPod(epart, c));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMzE2OQ==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421803169", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Part p = new EquipmentPart(0, et, -1, 1.0,false, c);\n          \n          \n            \n                                Part p = new EquipmentPart(0, et, -1, 1.0, false, c);", "author": "Windchild292", "createdAt": "2020-05-07T21:24:04Z", "path": "MekHQ/src/mekhq/campaign/market/PartsStore.java", "diffHunk": "@@ -273,22 +273,22 @@ private void stockWeaponsAmmoAndEquipment(Campaign c) {\n                 if(EquipmentPart.hasVariableTonnage(et)) {\n                     EquipmentPart epart;\n                     for(double ton = EquipmentPart.getStartingTonnage(et); ton <= EquipmentPart.getMaxTonnage(et); ton += EquipmentPart.getTonnageIncrement(et)) {\n-                        epart = new EquipmentPart(0, et, -1, false, c);\n+                        epart = new EquipmentPart(0, et, -1, 1.0, false, c);\n                         epart.setEquipTonnage(ton);\n                         parts.add(epart);\n                         if (poddable) {\n-                            epart = new EquipmentPart(0, et, -1, true, c);\n+                            epart = new EquipmentPart(0, et, -1, 1.0,true, c);\n                             epart.setEquipTonnage(ton);\n                             parts.add(epart);\n                             parts.add(new OmniPod(epart, c));\n                         }\n                         //TODO: still need to deal with talons (unit tonnage) and masc (engine rating)\n                     }\n                 } else {\n-                    Part p = new EquipmentPart(0, et, -1, false, c);\n+                    Part p = new EquipmentPart(0, et, -1, 1.0,false, c);", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/market/PartsStore.java b/MekHQ/src/mekhq/campaign/market/PartsStore.java\nindex ba2d15f5f..cdaf46797 100644\n--- a/MekHQ/src/mekhq/campaign/market/PartsStore.java\n+++ b/MekHQ/src/mekhq/campaign/market/PartsStore.java\n\n@@ -277,7 +277,7 @@ public class PartsStore implements Serializable {\n                         epart.setEquipTonnage(ton);\n                         parts.add(epart);\n                         if (poddable) {\n-                            epart = new EquipmentPart(0, et, -1, 1.0,true, c);\n+                            epart = new EquipmentPart(0, et, -1, 1.0, true, c);\n                             epart.setEquipTonnage(ton);\n                             parts.add(epart);\n                             parts.add(new OmniPod(epart, c));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMzIzOA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421803238", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    parts.add(new EquipmentPart(0, et, -1, 1.0,true, c));\n          \n          \n            \n                                    parts.add(new EquipmentPart(0, et, -1, 1.0, true, c));", "author": "Windchild292", "createdAt": "2020-05-07T21:24:12Z", "path": "MekHQ/src/mekhq/campaign/market/PartsStore.java", "diffHunk": "@@ -273,22 +273,22 @@ private void stockWeaponsAmmoAndEquipment(Campaign c) {\n                 if(EquipmentPart.hasVariableTonnage(et)) {\n                     EquipmentPart epart;\n                     for(double ton = EquipmentPart.getStartingTonnage(et); ton <= EquipmentPart.getMaxTonnage(et); ton += EquipmentPart.getTonnageIncrement(et)) {\n-                        epart = new EquipmentPart(0, et, -1, false, c);\n+                        epart = new EquipmentPart(0, et, -1, 1.0, false, c);\n                         epart.setEquipTonnage(ton);\n                         parts.add(epart);\n                         if (poddable) {\n-                            epart = new EquipmentPart(0, et, -1, true, c);\n+                            epart = new EquipmentPart(0, et, -1, 1.0,true, c);\n                             epart.setEquipTonnage(ton);\n                             parts.add(epart);\n                             parts.add(new OmniPod(epart, c));\n                         }\n                         //TODO: still need to deal with talons (unit tonnage) and masc (engine rating)\n                     }\n                 } else {\n-                    Part p = new EquipmentPart(0, et, -1, false, c);\n+                    Part p = new EquipmentPart(0, et, -1, 1.0,false, c);\n                     parts.add(p);\n                     if (poddable) {\n-                        parts.add(new EquipmentPart(0, et, -1, true, c));\n+                        parts.add(new EquipmentPart(0, et, -1, 1.0,true, c));", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/market/PartsStore.java b/MekHQ/src/mekhq/campaign/market/PartsStore.java\nindex ba2d15f5f..cdaf46797 100644\n--- a/MekHQ/src/mekhq/campaign/market/PartsStore.java\n+++ b/MekHQ/src/mekhq/campaign/market/PartsStore.java\n\n@@ -277,7 +277,7 @@ public class PartsStore implements Serializable {\n                         epart.setEquipTonnage(ton);\n                         parts.add(epart);\n                         if (poddable) {\n-                            epart = new EquipmentPart(0, et, -1, 1.0,true, c);\n+                            epart = new EquipmentPart(0, et, -1, 1.0, true, c);\n                             epart.setEquipTonnage(ton);\n                             parts.add(epart);\n                             parts.add(new OmniPod(epart, c));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwMzc4MA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421803780", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n          \n          \n            \n                            MekHqXmlUtil.escape(type.getInternalName()));\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());", "author": "Windchild292", "createdAt": "2020-05-07T21:25:16Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/EquipmentPart.java", "diffHunk": "@@ -154,16 +155,18 @@ public boolean isSamePartType(Part part) {\n         // http://bg.battletech.com/forums/strategic-operations/(answered)-can-a-lance-for-a-35-ton-mech-be-used-on-a-40-ton-mech-and-so-on/\n         return part instanceof EquipmentPart && getType().equals(((EquipmentPart) part).getType())\n                 && getTonnage() == part.getTonnage() && getStickerPrice().equals(part.getStickerPrice())\n+                && getSize() == ((EquipmentPart) part).getSize()\n                 && isOmniPodded() == part.isOmniPodded();\n     }\n \n     @Override\n     public void writeToXml(PrintWriter pw1, int indent) {\n         writeToXmlBegin(pw1, indent);\n-        pw1.println(MekHqXmlUtil.indentStr(indent + 1) + \"<equipmentNum>\" + equipmentNum + \"</equipmentNum>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent + 1) + \"<typeName>\" + MekHqXmlUtil.escape(type.getInternalName())\n-                + \"</typeName>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent + 1) + \"<equipTonnage>\" + equipTonnage + \"</equipTonnage>\");\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n+                MekHqXmlUtil.escape(type.getInternalName()));", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26ecf8774fad948f3146c5941527afe266c6c7a1", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/EquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/EquipmentPart.java\nindex 6e182d71b..44f2e3269 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/EquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/EquipmentPart.java\n\n@@ -163,8 +163,7 @@ public class EquipmentPart extends Part {\n     public void writeToXml(PrintWriter pw1, int indent) {\n         writeToXmlBegin(pw1, indent);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n-        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n-                MekHqXmlUtil.escape(type.getInternalName()));\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"size\", size);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipTonnage\", equipTonnage);\n         writeToXmlEnd(pw1, indent);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNTQyNA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421805424", "bodyText": "Why is there no setter for size?", "author": "Windchild292", "createdAt": "2020-05-07T21:28:35Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/EquipmentPart.java", "diffHunk": "@@ -330,6 +335,10 @@ public int getLocation() {\n         return -1;\n     }\n \n+    public double getSize() {\n+        return size;\n+    }\n+", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5Nzc2Mg==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421897762", "bodyText": "The size doesn't change.", "author": "neoancient", "createdAt": "2020-05-08T02:15:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNTQyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5NzkyNg==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421897926", "bodyText": "Except for LargeCraftAmmoBin?", "author": "Windchild292", "createdAt": "2020-05-08T02:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNTQyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkwNDE2NA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421904164", "bodyText": "No. That doesn't change either.", "author": "neoancient", "createdAt": "2020-05-08T02:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNTQyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNTgwOQ==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421805809", "bodyText": "Why even keep these, or at least not deprecate them?\nJust temporary cause you don't want to make the change now to remove them? Or is it because they is no setter for size?", "author": "Windchild292", "createdAt": "2020-05-07T21:29:23Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/LargeCraftAmmoBin.java", "diffHunk": "@@ -139,20 +138,20 @@ public double getTonnage() {\n     }\n \n     public double getCapacity() {\n-        return capacity;\n+        return size;\n     }\n \n     public void setCapacity(double capacity) {\n-        this.capacity = capacity;\n+        this.size = capacity;\n     }", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5ODYyNg==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421898626", "bodyText": "I considered that but in the context of a LargeCraftAmmoBin I think the getCapacity() alias is more intuitive. I deprecated Mounted::getCapacity because the concept of capacity doesn't make sense for Mounted in every context.", "author": "neoancient", "createdAt": "2020-05-08T02:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNTgwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "de8f3dc68e3ae8d33ff16dc569fdcda4aa94ecf6", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/LargeCraftAmmoBin.java b/MekHQ/src/mekhq/campaign/parts/equipment/LargeCraftAmmoBin.java\nindex 3c51aa7fa..527fd9bcb 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/LargeCraftAmmoBin.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/LargeCraftAmmoBin.java\n\n@@ -141,10 +141,6 @@ public class LargeCraftAmmoBin extends AmmoBin {\n         return size;\n     }\n \n-    public void setCapacity(double capacity) {\n-        this.size = capacity;\n-    }\n-\n     public double getUnusedCapacity() {\n         return size - Math.ceil(getCurrentShots() * type.getTonnage(null) / ((AmmoType) type).getShots());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNjMwNw==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421806307", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    epart = new EquipmentPart((int)entity.getWeight(), type, eqnum, m.getSize(),\n          \n          \n            \n                                    epart = new EquipmentPart((int) entity.getWeight(), type, eqnum, m.getSize(),", "author": "Windchild292", "createdAt": "2020-05-07T21:30:27Z", "path": "MekHQ/src/mekhq/campaign/unit/Unit.java", "diffHunk": "@@ -2740,7 +2741,7 @@ else if(entity instanceof BattleArmor) {\n                             //weapon bays aren't real parts\n                             continue;\n                         }\n-                        epart = new EquipmentPart((int)entity.getWeight(), type, eqnum,\n+                        epart = new EquipmentPart((int)entity.getWeight(), type, eqnum, m.getSize(),", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/unit/Unit.java b/MekHQ/src/mekhq/campaign/unit/Unit.java\nindex f7e4e2fd3..be515f283 100644\n--- a/MekHQ/src/mekhq/campaign/unit/Unit.java\n+++ b/MekHQ/src/mekhq/campaign/unit/Unit.java\n\n@@ -2741,10 +2741,10 @@ public class Unit implements MekHqXmlSerializable, ITechnology {\n                             //weapon bays aren't real parts\n                             continue;\n                         }\n-                        epart = new EquipmentPart((int)entity.getWeight(), type, eqnum, m.getSize(),\n+                        epart = new EquipmentPart((int) entity.getWeight(), type, eqnum, m.getSize(),\n                                 m.isOmniPodMounted(), getCampaign());\n                         if(type instanceof MiscType && type.hasFlag(MiscType.F_MASC)) {\n-                            epart = new MASC((int)entity.getWeight(), type, eqnum, getCampaign(),\n+                            epart = new MASC((int) entity.getWeight(), type, eqnum, getCampaign(),\n                                     erating, m.isOmniPodMounted());\n                         }\n                         addPart(epart);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNjQxNw==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421806417", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                infantryArmor = new EquipmentPart(0, eq, 0, 1.0,false, getCampaign());\n          \n          \n            \n                                infantryArmor = new EquipmentPart(0, eq, 0, 1.0, false, getCampaign());", "author": "Windchild292", "createdAt": "2020-05-07T21:30:43Z", "path": "MekHQ/src/mekhq/campaign/unit/Unit.java", "diffHunk": "@@ -3168,7 +3169,7 @@ else if(entity instanceof BattleArmor) {\n             if(null == infantryArmor) {\n                 EquipmentType eq = ((Infantry)entity).getArmorKit();\n                 if (null != eq) {\n-                    infantryArmor = new EquipmentPart(0, eq, 0, false, getCampaign());\n+                    infantryArmor = new EquipmentPart(0, eq, 0, 1.0,false, getCampaign());", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/unit/Unit.java b/MekHQ/src/mekhq/campaign/unit/Unit.java\nindex f7e4e2fd3..be515f283 100644\n--- a/MekHQ/src/mekhq/campaign/unit/Unit.java\n+++ b/MekHQ/src/mekhq/campaign/unit/Unit.java\n\n@@ -3169,7 +3169,7 @@ public class Unit implements MekHqXmlSerializable, ITechnology {\n             if(null == infantryArmor) {\n                 EquipmentType eq = ((Infantry)entity).getArmorKit();\n                 if (null != eq) {\n-                    infantryArmor = new EquipmentPart(0, eq, 0, 1.0,false, getCampaign());\n+                    infantryArmor = new EquipmentPart(0, eq, 0, 1.0, false, getCampaign());\n                 } else {\n                     infantryArmor = new InfantryArmorPart(0, getCampaign(), ((Infantry)entity).getDamageDivisor(), ((Infantry)entity).isArmorEncumbering(), ((Infantry)entity).hasDEST(), ((Infantry)entity).hasSneakCamo(), ((Infantry)entity).hasSneakECM(), ((Infantry)entity).hasSneakIR(), ((Infantry)entity).hasSpaceSuit());\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNjgzNg==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421806836", "bodyText": "Same as equipment part, why not include a set size?", "author": "Windchild292", "createdAt": "2020-05-07T21:31:36Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java", "diffHunk": "@@ -299,6 +298,9 @@ public int getLocation() {\n     \treturn -1;\n     }\n \n+    public double getSize() {\n+\t    return size;\n+    }\n ", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\nindex ef984ec7e..bc4620d63 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n\n@@ -221,111 +220,111 @@ public class MissingEquipmentPart extends MissingPart {\n         return null;\n     }\n \n-\t@Override\n-\tpublic boolean onBadHipOrShoulder() {\n-\t\tif(null != unit) {\n-\t\t\tfor(int loc = 0; loc < unit.getEntity().locations(); loc++) {\n-\t            for (int i = 0; i < unit.getEntity().getNumberOfCriticals(loc); i++) {\n-\t                CriticalSlot slot = unit.getEntity().getCritical(loc, i);\n-\n-\t                // ignore empty & system slots\n-\t                if ((slot == null) || (slot.getType() != CriticalSlot.TYPE_EQUIPMENT)) {\n-\t                    continue;\n-\t                }\n-\t                Mounted equip = unit.getEntity().getEquipment(equipmentNum);\n-\t                Mounted m1 = slot.getMount();\n-\t                Mounted m2 = slot.getMount2();\n-\t                if (m1 == null && m2 == null) {\n-\t                \tcontinue;\n-\t                }\n-\t                if ((equip.equals(m1)) || (equip.equals(m2))) {\n-\t                    if (unit.hasBadHipOrShoulder(loc)) {\n-\t                        return true;\n-\t                    }\n-\t                }\n-\t            }\n-\t        }\n-\t\t}\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n+    @Override\n+    public boolean onBadHipOrShoulder() {\n+        if(null != unit) {\n+            for(int loc = 0; loc < unit.getEntity().locations(); loc++) {\n+                for (int i = 0; i < unit.getEntity().getNumberOfCriticals(loc); i++) {\n+                    CriticalSlot slot = unit.getEntity().getCritical(loc, i);\n+\n+                    // ignore empty & system slots\n+                    if ((slot == null) || (slot.getType() != CriticalSlot.TYPE_EQUIPMENT)) {\n+                        continue;\n+                    }\n+                    Mounted equip = unit.getEntity().getEquipment(equipmentNum);\n+                    Mounted m1 = slot.getMount();\n+                    Mounted m2 = slot.getMount2();\n+                    if (m1 == null && m2 == null) {\n+                        continue;\n+                    }\n+                    if ((equip.equals(m1)) || (equip.equals(m2))) {\n+                        if (unit.hasBadHipOrShoulder(loc)) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override\n     public void setUnit(Unit u) {\n-    \tsuper.setUnit(u);\n-    \tif(null != unit) {\n-    \t\tequipTonnage = type.getTonnage(unit.getEntity());\n-    \t}\n+        super.setUnit(u);\n+        if(null != unit) {\n+            equipTonnage = type.getTonnage(unit.getEntity());\n+        }\n     }\n \n-\t@Override\n-\tpublic Part getNewPart() {\n-\t\tEquipmentPart epart = new EquipmentPart(getUnitTonnage(), type, -1, size, omniPodded, campaign);\n-\t\tepart.setEquipTonnage(equipTonnage);\n-\t\treturn epart;\n-\t}\n+    @Override\n+    public Part getNewPart() {\n+        EquipmentPart epart = new EquipmentPart(getUnitTonnage(), type, -1, size, omniPodded, campaign);\n+        epart.setEquipTonnage(equipTonnage);\n+        return epart;\n+    }\n /*\n-\tprivate boolean hasReallyCheckedToday() {\n-\t\treturn checkedToday;\n-\t}\n-\n-\t@Override\n-\tpublic boolean hasCheckedToday() {\n-\t\t//if this unit has been checked for any other equipment of this same type\n-\t\t//then return false, regardless of whether this one has been checked\n-\t\tif(null != unit) {\n-\t\t\tfor(Part part : unit.getParts()) {\n-\t\t\t\tif(part.getId() == getId()) {\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tif(part instanceof MissingEquipmentPart\n-\t\t\t\t\t\t&& ((MissingEquipmentPart)part).getType().equals(type)\n-\t\t\t\t\t\t&& ((MissingEquipmentPart)part).hasReallyCheckedToday()) {\n-\t\t\t\t\treturn true;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn super.hasCheckedToday();\n-\t}\n+    private boolean hasReallyCheckedToday() {\n+        return checkedToday;\n+    }\n+\n+    @Override\n+    public boolean hasCheckedToday() {\n+        //if this unit has been checked for any other equipment of this same type\n+        //then return false, regardless of whether this one has been checked\n+        if(null != unit) {\n+            for(Part part : unit.getParts()) {\n+                if(part.getId() == getId()) {\n+                    continue;\n+                }\n+                if(part instanceof MissingEquipmentPart\n+                        && ((MissingEquipmentPart)part).getType().equals(type)\n+                        && ((MissingEquipmentPart)part).hasReallyCheckedToday()) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return super.hasCheckedToday();\n+    }\n */\n \n-\tpublic int getLocation() {\n-    \tif(null != unit) {\n-    \t\tMounted mounted = unit.getEntity().getEquipment(equipmentNum);\n-\t\t\tif(null != mounted) {\n-\t\t\t\treturn mounted.getLocation();\n-\t\t\t}\n-    \t}\n-    \treturn -1;\n+    public int getLocation() {\n+        if(null != unit) {\n+            Mounted mounted = unit.getEntity().getEquipment(equipmentNum);\n+            if(null != mounted) {\n+                return mounted.getLocation();\n+            }\n+        }\n+        return -1;\n     }\n \n     public double getSize() {\n-\t    return size;\n+        return size;\n     }\n \n     public boolean isRearFacing() {\n-    \tif(null != unit) {\n-    \t\tMounted mounted = unit.getEntity().getEquipment(equipmentNum);\n-\t\t\tif(null != mounted) {\n-\t\t\t\treturn mounted.isRearMounted();\n-\t\t\t}\n-    \t}\n-    \treturn false;\n+        if(null != unit) {\n+            Mounted mounted = unit.getEntity().getEquipment(equipmentNum);\n+            if(null != mounted) {\n+                return mounted.isRearMounted();\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public void updateConditionFromPart() {\n+        if(null != unit) {\n+            Mounted mounted = unit.getEntity().getEquipment(equipmentNum);\n+            if(null != mounted) {\n+                mounted.setHit(true);\n+                mounted.setDestroyed(true);\n+                mounted.setRepairable(false);\n+                unit.destroySystem(CriticalSlot.TYPE_EQUIPMENT, unit.getEntity().getEquipmentNum(mounted));\n+            }\n+        }\n     }\n \n-\t@Override\n-\tpublic void updateConditionFromPart() {\n-\t\tif(null != unit) {\n-\t\t\tMounted mounted = unit.getEntity().getEquipment(equipmentNum);\n-\t\t\tif(null != mounted) {\n-\t\t\t\tmounted.setHit(true);\n-\t\t        mounted.setDestroyed(true);\n-\t\t        mounted.setRepairable(false);\n-\t\t        unit.destroySystem(CriticalSlot.TYPE_EQUIPMENT, unit.getEntity().getEquipmentNum(mounted));\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\t@Override\n+    @Override\n     public boolean isOmniPoddable() {\n         if (type.isOmniFixedOnly()) {\n             return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzEyMA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421807120", "bodyText": "Looks like tab spacing.", "author": "Windchild292", "createdAt": "2020-05-07T21:32:10Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java", "diffHunk": "@@ -148,7 +143,9 @@ protected void loadFieldsFromXmlNode(Node wn) {\n \t\t\tif (wn2.getNodeName().equalsIgnoreCase(\"equipmentNum\")) {\n \t\t\t\tequipmentNum = Integer.parseInt(wn2.getTextContent());\n \t\t\t} else if (wn2.getNodeName().equalsIgnoreCase(\"typeName\")) {\n-\t\t\t\ttypeName = wn2.getTextContent();\n+                typeName = wn2.getTextContent();\n+            } else if (wn2.getNodeName().equalsIgnoreCase(\"size\")) {\n+\t\t\t    size = Double.parseDouble(wn2.getTextContent());\n \t\t\t} else if (wn2.getNodeName().equalsIgnoreCase(\"equipTonnage\")) {\n \t\t\t\tequipTonnage = Double.parseDouble(wn2.getTextContent());\n \t\t\t}", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\nindex ef984ec7e..bc4620d63 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n\n@@ -120,93 +120,92 @@ public class MissingEquipmentPart extends MissingPart {\n \n     @Override\n     public double getTonnage() {\n-    \treturn equipTonnage;\n+        return equipTonnage;\n     }\n \n     @Override\n-\tpublic void writeToXml(PrintWriter pw1, int indent) {\n-\t\twriteToXmlBegin(pw1, indent);\n-        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n-                MekHqXmlUtil.escape(type.getInternalName()));\n+    public void writeToXml(PrintWriter pw1, int indent) {\n+        writeToXmlBegin(pw1, indent);\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"size\", size);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipTonnage\", equipTonnage);\n-\t\twriteToXmlEnd(pw1, indent);\n-\t}\n-\n-\t@Override\n-\tprotected void loadFieldsFromXmlNode(Node wn) {\n-\t\tNodeList nl = wn.getChildNodes();\n-\n-\t\tfor (int x=0; x<nl.getLength(); x++) {\n-\t\t\tNode wn2 = nl.item(x);\n-\t\t\tif (wn2.getNodeName().equalsIgnoreCase(\"equipmentNum\")) {\n-\t\t\t\tequipmentNum = Integer.parseInt(wn2.getTextContent());\n-\t\t\t} else if (wn2.getNodeName().equalsIgnoreCase(\"typeName\")) {\n+        writeToXmlEnd(pw1, indent);\n+    }\n+\n+    @Override\n+    protected void loadFieldsFromXmlNode(Node wn) {\n+        NodeList nl = wn.getChildNodes();\n+\n+        for (int x=0; x<nl.getLength(); x++) {\n+            Node wn2 = nl.item(x);\n+            if (wn2.getNodeName().equalsIgnoreCase(\"equipmentNum\")) {\n+                equipmentNum = Integer.parseInt(wn2.getTextContent());\n+            } else if (wn2.getNodeName().equalsIgnoreCase(\"typeName\")) {\n                 typeName = wn2.getTextContent();\n             } else if (wn2.getNodeName().equalsIgnoreCase(\"size\")) {\n-\t\t\t    size = Double.parseDouble(wn2.getTextContent());\n-\t\t\t} else if (wn2.getNodeName().equalsIgnoreCase(\"equipTonnage\")) {\n-\t\t\t\tequipTonnage = Double.parseDouble(wn2.getTextContent());\n-\t\t\t}\n-\t\t}\n-\t\trestore();\n-\t}\n-\n-\t@Override\n-\tpublic TechAdvancement getTechAdvancement() {\n-\t    return type.getTechAdvancement();\n-\t}\n-\n-\t@Override\n-\tpublic void fix() {\n-\t\tPart replacement = findReplacement(false);\n-\t\tif(null != replacement) {\n-\t\t\tPart actualReplacement = replacement.clone();\n-\t\t\tunit.addPart(actualReplacement);\n-\t\t\tcampaign.addPart(actualReplacement, 0);\n-\t\t\treplacement.decrementQuantity();\n-\t\t\t((EquipmentPart)actualReplacement).setEquipmentNum(equipmentNum);\n-\t\t\tremove(false);\n-\t\t\t//assign the replacement part to the unit\n-\t\t\tactualReplacement.updateConditionFromPart();\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic boolean isAcceptableReplacement(Part part, boolean refit) {\n-\t\t//According to official answer, if sticker prices are different then\n-\t\t//they are not acceptable substitutes, so we need to check for that as\n-\t\t//well\n-\t\t//http://bg.battletech.com/forums/strategic-operations/(answered)-can-a-lance-for-a-35-ton-mech-be-used-on-a-40-ton-mech-and-so-on/\n-\t\tPart newPart = getNewPart();\n-\t\tnewPart.setUnit(unit);\n-\t\tif(part instanceof EquipmentPart) {\n-\t\t\tEquipmentPart eqpart = (EquipmentPart)part;\n-\t\t\tEquipmentType et = eqpart.getType();\n-\t\t\treturn type.equals(et) && getTonnage() == part.getTonnage()\n-                    && size == eqpart.getSize()\n+                size = Double.parseDouble(wn2.getTextContent());\n+            } else if (wn2.getNodeName().equalsIgnoreCase(\"equipTonnage\")) {\n+                equipTonnage = Double.parseDouble(wn2.getTextContent());\n+            }\n+        }\n+        restore();\n+    }\n+\n+    @Override\n+    public TechAdvancement getTechAdvancement() {\n+        return type.getTechAdvancement();\n+    }\n+\n+    @Override\n+    public void fix() {\n+        Part replacement = findReplacement(false);\n+        if(null != replacement) {\n+            Part actualReplacement = replacement.clone();\n+            unit.addPart(actualReplacement);\n+            campaign.addPart(actualReplacement, 0);\n+            replacement.decrementQuantity();\n+            ((EquipmentPart)actualReplacement).setEquipmentNum(equipmentNum);\n+            remove(false);\n+            //assign the replacement part to the unit\n+            actualReplacement.updateConditionFromPart();\n+        }\n+    }\n+\n+    @Override\n+    public boolean isAcceptableReplacement(Part part, boolean refit) {\n+        //According to official answer, if sticker prices are different then\n+        //they are not acceptable substitutes, so we need to check for that as\n+        //well\n+        //http://bg.battletech.com/forums/strategic-operations/(answered)-can-a-lance-for-a-35-ton-mech-be-used-on-a-40-ton-mech-and-so-on/\n+        Part newPart = getNewPart();\n+        newPart.setUnit(unit);\n+        if(part instanceof EquipmentPart) {\n+            EquipmentPart eqpart = (EquipmentPart)part;\n+            EquipmentType et = eqpart.getType();\n+            return (type.equals(et) && getTonnage() == part.getTonnage())\n+                    && (size == eqpart.getSize())\n                     && part.getStickerPrice().equals(newPart.getStickerPrice());\n-\t\t}\n-\t\treturn false;\n-\t}\n+        }\n+        return false;\n+    }\n \n-\t@Override\n+    @Override\n     public String checkFixable() {\n-\t    // The part is only fixable if the location is not destroyed.\n+        // The part is only fixable if the location is not destroyed.\n         // be sure to check location and second location\n         if(null != unit) {\n             Mounted m = unit.getEntity().getEquipment(equipmentNum);\n             if(null != m) {\n                 int loc = m.getLocation();\n                 if(loc != Entity.LOC_NONE) {\n-\t\t\t\t\tif (unit.isLocationBreached(loc)) {\n-\t\t\t\t\t\treturn unit.getEntity().getLocationName(loc) + \" is breached.\";\n-\t\t\t\t\t}\n-\t\t\t\t\tif (unit.isLocationDestroyed(loc)) {\n-\t\t\t\t\t\treturn unit.getEntity().getLocationName(loc) + \" is destroyed.\";\n-\t\t\t\t\t}\n-\t\t\t\t}\n+                    if (unit.isLocationBreached(loc)) {\n+                        return unit.getEntity().getLocationName(loc) + \" is breached.\";\n+                    }\n+                    if (unit.isLocationDestroyed(loc)) {\n+                        return unit.getEntity().getLocationName(loc) + \" is destroyed.\";\n+                    }\n+                }\n                 loc = m.getSecondLocation();\n                 if(loc != Entity.LOC_NONE) {\n                     if (unit.isLocationBreached(loc)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzI0OA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421807248", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n          \n          \n            \n                            MekHqXmlUtil.escape(type.getInternalName()));\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());", "author": "Windchild292", "createdAt": "2020-05-07T21:32:28Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java", "diffHunk": "@@ -124,18 +126,11 @@ public double getTonnage() {\n     @Override\n \tpublic void writeToXml(PrintWriter pw1, int indent) {\n \t\twriteToXmlBegin(pw1, indent);\n-\t\tpw1.println(MekHqXmlUtil.indentStr(indent+1)\n-\t\t\t\t+\"<typeName>\"\n-\t\t\t\t+MekHqXmlUtil.escape(typeName)\n-\t\t\t\t+\"</typeName>\");\n-\t\tpw1.println(MekHqXmlUtil.indentStr(indent+1)\n-\t\t\t\t+\"<equipmentNum>\"\n-\t\t\t\t+equipmentNum\n-\t\t\t\t+\"</equipmentNum>\");\n-\t\tpw1.println(MekHqXmlUtil.indentStr(indent+1)\n-\t\t\t\t+\"<equipTonnage>\"\n-\t\t\t\t+equipTonnage\n-\t\t\t\t+\"</equipTonnage>\");\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n+                MekHqXmlUtil.escape(type.getInternalName()));", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26ecf8774fad948f3146c5941527afe266c6c7a1", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\nindex ef984ec7e..249674292 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n\n@@ -126,8 +126,7 @@ public class MissingEquipmentPart extends MissingPart {\n     @Override\n \tpublic void writeToXml(PrintWriter pw1, int indent) {\n \t\twriteToXmlBegin(pw1, indent);\n-        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n-                MekHqXmlUtil.escape(type.getInternalName()));\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"size\", size);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipTonnage\", equipTonnage);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzcyMA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421807720", "bodyText": "Should the two == comparisons be bracketed? Asking as that's part of our coding style guide I've never been certain on for return values", "author": "Windchild292", "createdAt": "2020-05-07T21:33:35Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java", "diffHunk": "@@ -187,7 +184,9 @@ public boolean isAcceptableReplacement(Part part, boolean refit) {\n \t\tif(part instanceof EquipmentPart) {\n \t\t\tEquipmentPart eqpart = (EquipmentPart)part;\n \t\t\tEquipmentType et = eqpart.getType();\n-\t\t\treturn type.equals(et) && getTonnage() == part.getTonnage() && part.getStickerPrice().equals(newPart.getStickerPrice());\n+\t\t\treturn type.equals(et) && getTonnage() == part.getTonnage()\n+                    && size == eqpart.getSize()", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkwMDE0Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421900143", "bodyText": "I usually add them. I missed it here.", "author": "neoancient", "createdAt": "2020-05-08T02:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNzcyMA=="}], "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\nindex ef984ec7e..bc4620d63 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/MissingEquipmentPart.java\n\n@@ -120,93 +120,92 @@ public class MissingEquipmentPart extends MissingPart {\n \n     @Override\n     public double getTonnage() {\n-    \treturn equipTonnage;\n+        return equipTonnage;\n     }\n \n     @Override\n-\tpublic void writeToXml(PrintWriter pw1, int indent) {\n-\t\twriteToXmlBegin(pw1, indent);\n-        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n-                MekHqXmlUtil.escape(type.getInternalName()));\n+    public void writeToXml(PrintWriter pw1, int indent) {\n+        writeToXmlBegin(pw1, indent);\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"size\", size);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipTonnage\", equipTonnage);\n-\t\twriteToXmlEnd(pw1, indent);\n-\t}\n-\n-\t@Override\n-\tprotected void loadFieldsFromXmlNode(Node wn) {\n-\t\tNodeList nl = wn.getChildNodes();\n-\n-\t\tfor (int x=0; x<nl.getLength(); x++) {\n-\t\t\tNode wn2 = nl.item(x);\n-\t\t\tif (wn2.getNodeName().equalsIgnoreCase(\"equipmentNum\")) {\n-\t\t\t\tequipmentNum = Integer.parseInt(wn2.getTextContent());\n-\t\t\t} else if (wn2.getNodeName().equalsIgnoreCase(\"typeName\")) {\n+        writeToXmlEnd(pw1, indent);\n+    }\n+\n+    @Override\n+    protected void loadFieldsFromXmlNode(Node wn) {\n+        NodeList nl = wn.getChildNodes();\n+\n+        for (int x=0; x<nl.getLength(); x++) {\n+            Node wn2 = nl.item(x);\n+            if (wn2.getNodeName().equalsIgnoreCase(\"equipmentNum\")) {\n+                equipmentNum = Integer.parseInt(wn2.getTextContent());\n+            } else if (wn2.getNodeName().equalsIgnoreCase(\"typeName\")) {\n                 typeName = wn2.getTextContent();\n             } else if (wn2.getNodeName().equalsIgnoreCase(\"size\")) {\n-\t\t\t    size = Double.parseDouble(wn2.getTextContent());\n-\t\t\t} else if (wn2.getNodeName().equalsIgnoreCase(\"equipTonnage\")) {\n-\t\t\t\tequipTonnage = Double.parseDouble(wn2.getTextContent());\n-\t\t\t}\n-\t\t}\n-\t\trestore();\n-\t}\n-\n-\t@Override\n-\tpublic TechAdvancement getTechAdvancement() {\n-\t    return type.getTechAdvancement();\n-\t}\n-\n-\t@Override\n-\tpublic void fix() {\n-\t\tPart replacement = findReplacement(false);\n-\t\tif(null != replacement) {\n-\t\t\tPart actualReplacement = replacement.clone();\n-\t\t\tunit.addPart(actualReplacement);\n-\t\t\tcampaign.addPart(actualReplacement, 0);\n-\t\t\treplacement.decrementQuantity();\n-\t\t\t((EquipmentPart)actualReplacement).setEquipmentNum(equipmentNum);\n-\t\t\tremove(false);\n-\t\t\t//assign the replacement part to the unit\n-\t\t\tactualReplacement.updateConditionFromPart();\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic boolean isAcceptableReplacement(Part part, boolean refit) {\n-\t\t//According to official answer, if sticker prices are different then\n-\t\t//they are not acceptable substitutes, so we need to check for that as\n-\t\t//well\n-\t\t//http://bg.battletech.com/forums/strategic-operations/(answered)-can-a-lance-for-a-35-ton-mech-be-used-on-a-40-ton-mech-and-so-on/\n-\t\tPart newPart = getNewPart();\n-\t\tnewPart.setUnit(unit);\n-\t\tif(part instanceof EquipmentPart) {\n-\t\t\tEquipmentPart eqpart = (EquipmentPart)part;\n-\t\t\tEquipmentType et = eqpart.getType();\n-\t\t\treturn type.equals(et) && getTonnage() == part.getTonnage()\n-                    && size == eqpart.getSize()\n+                size = Double.parseDouble(wn2.getTextContent());\n+            } else if (wn2.getNodeName().equalsIgnoreCase(\"equipTonnage\")) {\n+                equipTonnage = Double.parseDouble(wn2.getTextContent());\n+            }\n+        }\n+        restore();\n+    }\n+\n+    @Override\n+    public TechAdvancement getTechAdvancement() {\n+        return type.getTechAdvancement();\n+    }\n+\n+    @Override\n+    public void fix() {\n+        Part replacement = findReplacement(false);\n+        if(null != replacement) {\n+            Part actualReplacement = replacement.clone();\n+            unit.addPart(actualReplacement);\n+            campaign.addPart(actualReplacement, 0);\n+            replacement.decrementQuantity();\n+            ((EquipmentPart)actualReplacement).setEquipmentNum(equipmentNum);\n+            remove(false);\n+            //assign the replacement part to the unit\n+            actualReplacement.updateConditionFromPart();\n+        }\n+    }\n+\n+    @Override\n+    public boolean isAcceptableReplacement(Part part, boolean refit) {\n+        //According to official answer, if sticker prices are different then\n+        //they are not acceptable substitutes, so we need to check for that as\n+        //well\n+        //http://bg.battletech.com/forums/strategic-operations/(answered)-can-a-lance-for-a-35-ton-mech-be-used-on-a-40-ton-mech-and-so-on/\n+        Part newPart = getNewPart();\n+        newPart.setUnit(unit);\n+        if(part instanceof EquipmentPart) {\n+            EquipmentPart eqpart = (EquipmentPart)part;\n+            EquipmentType et = eqpart.getType();\n+            return (type.equals(et) && getTonnage() == part.getTonnage())\n+                    && (size == eqpart.getSize())\n                     && part.getStickerPrice().equals(newPart.getStickerPrice());\n-\t\t}\n-\t\treturn false;\n-\t}\n+        }\n+        return false;\n+    }\n \n-\t@Override\n+    @Override\n     public String checkFixable() {\n-\t    // The part is only fixable if the location is not destroyed.\n+        // The part is only fixable if the location is not destroyed.\n         // be sure to check location and second location\n         if(null != unit) {\n             Mounted m = unit.getEntity().getEquipment(equipmentNum);\n             if(null != m) {\n                 int loc = m.getLocation();\n                 if(loc != Entity.LOC_NONE) {\n-\t\t\t\t\tif (unit.isLocationBreached(loc)) {\n-\t\t\t\t\t\treturn unit.getEntity().getLocationName(loc) + \" is breached.\";\n-\t\t\t\t\t}\n-\t\t\t\t\tif (unit.isLocationDestroyed(loc)) {\n-\t\t\t\t\t\treturn unit.getEntity().getLocationName(loc) + \" is destroyed.\";\n-\t\t\t\t\t}\n-\t\t\t\t}\n+                    if (unit.isLocationBreached(loc)) {\n+                        return unit.getEntity().getLocationName(loc) + \" is breached.\";\n+                    }\n+                    if (unit.isLocationDestroyed(loc)) {\n+                        return unit.getEntity().getLocationName(loc) + \" is destroyed.\";\n+                    }\n+                }\n                 loc = m.getSecondLocation();\n                 if(loc != Entity.LOC_NONE) {\n                     if (unit.isLocationBreached(loc)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwODEzNA==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421808134", "bodyText": "Same as the non-missing part, why leave these in or not deprecate them?", "author": "Windchild292", "createdAt": "2020-05-07T21:34:23Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingLargeCraftAmmoBin.java", "diffHunk": "@@ -106,20 +105,20 @@ public void setBay(int bayEqNum) {\n             bay = unit.getEntity().getEquipment(bayEqNum);\n         }\n     }\n-        \n+\n     @Override\n     public double getTonnage() {\n-        return capacity;\n+        return size;\n     }\n-    \n+\n     public double getCapacity() {\n-        return capacity;\n+        return size;\n     }\n-    \n+\n     public void setCapacity(double capacity) {\n-        this.capacity = capacity;\n+        this.size = capacity;\n     }\n-    \n+", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwOTM3OQ==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421809379", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super(tonnage, et, equipNum, c, 1.0, 1, omniPodded);\n          \n          \n            \n                    super(tonnage, et, equipNum, c, 1.0, 1.0, omniPodded);", "author": "Windchild292", "createdAt": "2020-05-07T21:37:21Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingAmmoBin.java", "diffHunk": "@@ -47,18 +47,18 @@\n     public MissingAmmoBin() {\n         this(0, null, -1, false, false, null);\n     }\n-    \n+\n     public MissingAmmoBin(int tonnage, EquipmentType et, int equipNum, boolean singleShot,\n             boolean omniPodded, Campaign c) {\n-        super(tonnage, et, equipNum, c, 1, omniPodded);\n+        super(tonnage, et, equipNum, c, 1.0, 1, omniPodded);", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/MissingAmmoBin.java b/MekHQ/src/mekhq/campaign/parts/equipment/MissingAmmoBin.java\nindex 1abd3943d..04fabed1c 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/MissingAmmoBin.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/MissingAmmoBin.java\n\n@@ -50,7 +50,7 @@ public class MissingAmmoBin extends MissingEquipmentPart {\n \n     public MissingAmmoBin(int tonnage, EquipmentType et, int equipNum, boolean singleShot,\n             boolean omniPodded, Campaign c) {\n-        super(tonnage, et, equipNum, c, 1.0, 1, omniPodded);\n+        super(tonnage, et, equipNum, c, 1.0, 1.0, omniPodded);\n         this.oneShot = singleShot;\n         if(null != name) {\n             this.name += \" Bin\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwOTc0Mw==", "url": "https://github.com/MegaMek/mekhq/pull/1746#discussion_r421809743", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n          \n          \n            \n                            MekHqXmlUtil.escape(type.getInternalName()));\n          \n          \n            \n                    MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());", "author": "Windchild292", "createdAt": "2020-05-07T21:38:15Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/MissingBattleArmorEquipmentPart.java", "diffHunk": "@@ -68,22 +69,12 @@ public int getDifficulty() {\n     @Override\n     public void writeToXml(PrintWriter pw1, int indent) {\n         writeToXmlBegin(pw1, indent);\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<equipmentNum>\"\n-                +equipmentNum\n-                +\"</equipmentNum>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<typeName>\"\n-                +MekHqXmlUtil.escape(type.getInternalName())\n-                +\"</typeName>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<equipTonnage>\"\n-                +equipTonnage\n-                +\"</equipTonnage>\");\n-        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                +\"<trooper>\"\n-                +trooper\n-                +\"</trooper>\");\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n+                MekHqXmlUtil.escape(type.getInternalName()));", "originalCommit": "2881869b9d25aa0144cddb51e7dc72f60a974f11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26ecf8774fad948f3146c5941527afe266c6c7a1", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/MissingBattleArmorEquipmentPart.java b/MekHQ/src/mekhq/campaign/parts/equipment/MissingBattleArmorEquipmentPart.java\nindex ed2394836..9f7539e0e 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/MissingBattleArmorEquipmentPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/MissingBattleArmorEquipmentPart.java\n\n@@ -70,8 +70,7 @@ public class MissingBattleArmorEquipmentPart extends MissingEquipmentPart {\n     public void writeToXml(PrintWriter pw1, int indent) {\n         writeToXmlBegin(pw1, indent);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipmentNum\", equipmentNum);\n-        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\",\n-                MekHqXmlUtil.escape(type.getInternalName()));\n+        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"typeName\", type.getInternalName());\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"size\", size);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"equipTonnage\", equipTonnage);\n         MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"trooper\", trooper);\n"}}, {"oid": "26ecf8774fad948f3146c5941527afe266c6c7a1", "url": "https://github.com/MegaMek/mekhq/commit/26ecf8774fad948f3146c5941527afe266c6c7a1", "message": "Remove redundant double xml escape.", "committedDate": "2020-05-08T02:07:29Z", "type": "commit"}, {"oid": "d6fe75911411562cd8a74fd20d69e4a854e65cb4", "url": "https://github.com/MegaMek/mekhq/commit/d6fe75911411562cd8a74fd20d69e4a854e65cb4", "message": "Whitespace fixes", "committedDate": "2020-05-08T02:26:54Z", "type": "commit"}, {"oid": "de8f3dc68e3ae8d33ff16dc569fdcda4aa94ecf6", "url": "https://github.com/MegaMek/mekhq/commit/de8f3dc68e3ae8d33ff16dc569fdcda4aa94ecf6", "message": "Remove unused method.", "committedDate": "2020-05-08T02:37:32Z", "type": "commit"}]}