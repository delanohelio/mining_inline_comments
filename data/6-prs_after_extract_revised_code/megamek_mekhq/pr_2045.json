{"pr_number": 2045, "pr_title": "Aero Fighter refit heat sink tracking improvements", "pr_createdAt": "2020-09-23T21:30:42Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2045", "timeline": [{"oid": "c91298a02f5e183cd23e670b9650a3fe0ac85d41", "url": "https://github.com/MegaMek/mekhq/commit/c91298a02f5e183cd23e670b9650a3fe0ac85d41", "message": "Determine number of aero engine-free heat sinks by engine type, not engine size", "committedDate": "2020-09-23T21:19:36Z", "type": "commit"}, {"oid": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "url": "https://github.com/MegaMek/mekhq/commit/ee7e9080db9ddfd9bfba0edf5a61003834879d04", "message": "improved cleanup of integrated heat sinks for Aero", "committedDate": "2020-09-23T21:23:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494334175", "bodyText": "The determination  of \"is aero but not conventional fighter/smallcraft/jumpship\" is used multiple times in this file, here and on line 2480. And probably in other places. Let's place it into a separate function for ease of reuse.", "author": "NickAragua", "createdAt": "2020-09-24T13:48:46Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {", "originalCommit": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NDA4Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494374082", "bodyText": "I wasn't a fan of this either. I searched around to see if there was an operator similar to instanceof that didn't match on sub-classes. There doesn't appear to be one, however I ran across a post that suggested doing the equivalent of \"newEntity.getClass() == Aero.class\", which seems like it would work. In the end, I just went with the method previously used (I think the one you mentioned at line 2480).\n\"newEntity.getClass() == Aero.class\" is technically more precise in that it would exclude TeleMissile and FighterSquadron as well (not sure how those are used).\nWould you prefer I move the original to a function or use the \"newEntity.getClass() == Aero.class\" method?", "author": "RexPearce", "createdAt": "2020-09-24T14:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzMjY2Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494432662", "bodyText": "Let's give that getClass() == Aero.class thing a try. Just make sure to beat up on that code with other non-ASF unit types as well.", "author": "NickAragua", "createdAt": "2020-09-24T15:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MDAyOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494490029", "bodyText": "Tested and works well.", "author": "RexPearce", "createdAt": "2020-09-24T17:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDE3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "508a51d9354e5f42b103841569cd6934bc8c40dd", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 80f7530bd..05ba2815b 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1437,7 +1437,7 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n                 (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n             // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n             // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n-            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+            expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -\n                     untrackedHeatSinkCount(newEntity);\n         }\n         for(int pid : newUnitParts) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494334825", "bodyText": "What about conventional fighters? Those behave the same way as tanks do as I recall.", "author": "NickAragua", "createdAt": "2020-09-24T13:49:18Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "originalCommit": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4MDk2Nw==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494380967", "bodyText": "ConvFighters (and all other subclasses of Aero) should enter line 1457 with expectedHeatSinkParts = 0, and have all heat sink parts removed (except OmniPodded ones, but they'll only be present for Aero Fighters).\nFor readability, I could restore the check for ConvFighters back to line 1450, but I'd have to restore the check for AeroHeatSink as well. Either way works - let me know what you prefer.", "author": "RexPearce", "createdAt": "2020-09-24T14:48:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzNDUwNA==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494434504", "bodyText": "I don't think it's necessary, let's leave it as is.", "author": "NickAragua", "createdAt": "2020-09-24T16:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDgyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "508a51d9354e5f42b103841569cd6934bc8c40dd", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 80f7530bd..05ba2815b 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1437,7 +1437,7 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n                 (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n             // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n             // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n-            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+            expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -\n                     untrackedHeatSinkCount(newEntity);\n         }\n         for(int pid : newUnitParts) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNjc1MA==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494336750", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n          \n          \n            \n                        expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -", "author": "Windchild292", "createdAt": "2020-09-24T13:51:44Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -", "originalCommit": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "508a51d9354e5f42b103841569cd6934bc8c40dd", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 80f7530bd..05ba2815b 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1437,7 +1437,7 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n                 (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n             // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n             // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n-            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+            expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -\n                     untrackedHeatSinkCount(newEntity);\n         }\n         for(int pid : newUnitParts) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNzA3Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494337073", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (part instanceof HeatSink && newEntity instanceof Tank) {\n          \n          \n            \n                        if ((part instanceof HeatSink) && (newEntity instanceof Tank)) {", "author": "Windchild292", "createdAt": "2020-09-24T13:52:09Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {", "originalCommit": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "508a51d9354e5f42b103841569cd6934bc8c40dd", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 80f7530bd..05ba2815b 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1437,7 +1437,7 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n                 (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n             // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n             // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n-            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+            expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -\n                     untrackedHeatSinkCount(newEntity);\n         }\n         for(int pid : newUnitParts) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNzM5OA==", "url": "https://github.com/MegaMek/mekhq/pull/2045#discussion_r494337398", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }\n          \n          \n            \n                        else if (part instanceof AeroHeatSink && newEntity instanceof Aero && !part.isOmniPodded()) {\n          \n          \n            \n                        } else if ((part instanceof AeroHeatSink) && (newEntity instanceof Aero) && !part.isOmniPodded()) {", "author": "Windchild292", "createdAt": "2020-09-24T13:52:33Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1433,20 +1432,37 @@ else if (part instanceof MissingPart) {\n                 suit.setUnit(oldUnit);\n             }\n         }\n+        int expectedHeatSinkParts = 0;\n+        if ((newEntity instanceof Aero) && ((newEntity.getEntityType() &\n+                (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n+            // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n+            // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n+            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+                    untrackedHeatSinkCount(newEntity);\n+        }\n         for(int pid : newUnitParts) {\n             Part part = oldUnit.getCampaign().getPart(pid);\n             if(null == part) {\n                 MekHQ.getLogger().log(getClass(), METHOD_NAME, LogLevel.ERROR,\n                         \"part with id \" + pid + \" not found for refit of \" + getDesc()); //$NON-NLS-1$\n                 continue;\n             }\n-            if (((part instanceof HeatSink) || (part instanceof AeroHeatSink)) &&\n-                    ((newEntity instanceof Tank) || (newEntity instanceof Aero))) {\n-                // Tanks and Aeros do not track heat sink parts (Mechs handled later)\n+            if (part instanceof HeatSink && newEntity instanceof Tank) {\n+                // Unit should not have heat sink parts\n                 // Remove heat sink parts added for supply chain tracking purposes\n                 oldUnit.getCampaign().removePart(part);\n                 continue;\n             }\n+            else if (part instanceof AeroHeatSink && newEntity instanceof Aero && !part.isOmniPodded()) {", "originalCommit": "ee7e9080db9ddfd9bfba0edf5a61003834879d04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "508a51d9354e5f42b103841569cd6934bc8c40dd", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 80f7530bd..05ba2815b 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1437,7 +1437,7 @@ public class Refit extends Part implements IPartWork, IAcquisitionWork {\n                 (Entity.ETYPE_CONV_FIGHTER | Entity.ETYPE_SMALL_CRAFT | Entity.ETYPE_JUMPSHIP)) == 0)) {\n             // Only Aerospace Fighters are expected to have heat sink parts (Mechs handled separately)\n             // SmallCraft, Dropship, Jumpship, Warship, and SpaceStation use SpacecraftCoolingSystem instead\n-            expectedHeatSinkParts = ((Aero)newEntity).getHeatSinks() - ((Aero)newEntity).getPodHeatSinks() -\n+            expectedHeatSinkParts = ((Aero) newEntity).getHeatSinks() - ((Aero) newEntity).getPodHeatSinks() -\n                     untrackedHeatSinkCount(newEntity);\n         }\n         for(int pid : newUnitParts) {\n"}}, {"oid": "508a51d9354e5f42b103841569cd6934bc8c40dd", "url": "https://github.com/MegaMek/mekhq/commit/508a51d9354e5f42b103841569cd6934bc8c40dd", "message": "style formatting fixes", "committedDate": "2020-09-24T15:00:12Z", "type": "commit"}, {"oid": "5612e3b93445552ea44feb3c87bf582d3b0403b3", "url": "https://github.com/MegaMek/mekhq/commit/5612e3b93445552ea44feb3c87bf582d3b0403b3", "message": "style formatting fixes", "committedDate": "2020-09-24T15:03:24Z", "type": "commit"}, {"oid": "348d2c196b87649d2846c7be91b431abe9e4eb1b", "url": "https://github.com/MegaMek/mekhq/commit/348d2c196b87649d2846c7be91b431abe9e4eb1b", "message": "better method of excluding subclasses", "committedDate": "2020-09-24T17:25:47Z", "type": "commit"}]}