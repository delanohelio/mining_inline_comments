{"pr_number": 1955, "pr_title": "1951: Autosave Does Not Always Initiate On First Load", "pr_createdAt": "2020-08-21T15:41:41Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1955", "timeline": [{"oid": "1810e656fb723a73b876f9b120c7a22e84e870a7", "url": "https://github.com/MegaMek/mekhq/commit/1810e656fb723a73b876f9b120c7a22e84e870a7", "message": "Putting an initial fix to get style reviews", "committedDate": "2020-08-21T15:35:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc3ODYyOA==", "url": "https://github.com/MegaMek/mekhq/pull/1955#discussion_r474778628", "bodyText": "This is my preferred way to handle this, as it creates a standardized format for handling MekHQ Options.", "author": "Windchild292", "createdAt": "2020-08-21T15:42:42Z", "path": "MekHQ/src/mekhq/MekHQOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020 - The MekHQ Team. All Rights Reserved.\n+ *\n+ * This file is part of MekHQ.\n+ *\n+ * MekHQ is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * MekHQ is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package mekhq;\n+\n+import java.util.prefs.Preferences;\n+\n+public final class MekHQOptions {\n+    private static final Preferences userPreferences = Preferences.userRoot();\n+\n+    public boolean getNoAutosaveValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.NO_SAVE_KEY, false);\n+    }\n+\n+    public void setNoAutosaveValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.NO_SAVE_KEY, value);\n+    }\n+\n+    public void initializeMekHQOptions() {\n+        //region Autosave\n+        setNoAutosaveValue(getNoAutosaveValue());", "originalCommit": "1810e656fb723a73b876f9b120c7a22e84e870a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4e9f74a32248e290b649fd1f5819986f73311d9", "chunk": "diff --git a/MekHQ/src/mekhq/MekHQOptions.java b/MekHQ/src/mekhq/MekHQOptions.java\nindex 293a95f1d..f1fcfd4db 100644\n--- a/MekHQ/src/mekhq/MekHQOptions.java\n+++ b/MekHQ/src/mekhq/MekHQOptions.java\n\n@@ -31,33 +31,52 @@ public final class MekHQOptions {\n         userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.NO_SAVE_KEY, value);\n     }\n \n-    public void initializeMekHQOptions() {\n-        //region Autosave\n-        setNoAutosaveValue(getNoAutosaveValue());\n-        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(\n-                MekHqConstants.SAVE_DAILY_KEY,\n-                userPreferences.node(MekHqConstants.AUTOSAVE_NODE)\n-                        .getBoolean(MekHqConstants.SAVE_DAILY_KEY, false));\n-        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(\n-                MekHqConstants.SAVE_WEEKLY_KEY,\n-                userPreferences.node(MekHqConstants.AUTOSAVE_NODE)\n-                        .getBoolean(MekHqConstants.SAVE_WEEKLY_KEY, true));\n-        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(\n-                MekHqConstants.SAVE_MONTHLY_KEY,\n-                userPreferences.node(MekHqConstants.AUTOSAVE_NODE)\n-                        .getBoolean(MekHqConstants.SAVE_MONTHLY_KEY, false));\n-        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(\n-                MekHqConstants.SAVE_YEARLY_KEY,\n-                userPreferences.node(MekHqConstants.AUTOSAVE_NODE)\n-                        .getBoolean(MekHqConstants.SAVE_YEARLY_KEY, false));\n-        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(\n-                MekHqConstants.SAVE_BEFORE_MISSIONS_KEY,\n-                userPreferences.node(MekHqConstants.AUTOSAVE_NODE)\n-                        .getBoolean(MekHqConstants.SAVE_BEFORE_MISSIONS_KEY, false));\n-        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putInt(\n-                MekHqConstants.MAXIMUM_NUMBER_SAVES_KEY,\n-                userPreferences.node(MekHqConstants.AUTOSAVE_NODE)\n-                        .getInt(MekHqConstants.MAXIMUM_NUMBER_SAVES_KEY, MekHqConstants.DEFAULT_NUMBER_SAVES));\n-        //endregion Autosave\n+    public boolean getAutosaveDailyValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.SAVE_DAILY_KEY, false);\n+    }\n+\n+    public void setAutosaveDailyValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.SAVE_DAILY_KEY, value);\n+    }\n+\n+    public boolean getAutosaveWeeklyValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.SAVE_WEEKLY_KEY, true);\n+    }\n+\n+    public void setAutosaveWeeklyValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.SAVE_WEEKLY_KEY, value);\n+    }\n+\n+    public boolean getAutosaveMonthlyValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.SAVE_MONTHLY_KEY, false);\n+    }\n+\n+    public void setAutosaveMonthlyValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.SAVE_MONTHLY_KEY, value);\n+    }\n+\n+    public boolean getAutosaveYearlyValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.SAVE_YEARLY_KEY, false);\n+    }\n+\n+    public void setAutosaveYearlyValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.SAVE_YEARLY_KEY, value);\n+    }\n+\n+    public boolean getAutosaveBeforeMissionsValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getBoolean(MekHqConstants.SAVE_BEFORE_MISSIONS_KEY, false);\n+    }\n+\n+    public void setAutosaveBeforeMissionsValue(boolean value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putBoolean(MekHqConstants.SAVE_BEFORE_MISSIONS_KEY, value);\n+    }\n+\n+    public int getMaximumNumberOfAutosavesValue() {\n+        return userPreferences.node(MekHqConstants.AUTOSAVE_NODE).getInt(MekHqConstants.MAXIMUM_NUMBER_SAVES_KEY,\n+                MekHqConstants.DEFAULT_NUMBER_SAVES);\n+    }\n+\n+    public void setMaximumNumberOfAutosavesValue(int value) {\n+        userPreferences.node(MekHqConstants.AUTOSAVE_NODE).putInt(MekHqConstants.MAXIMUM_NUMBER_SAVES_KEY, value);\n     }\n }\n"}}, {"oid": "c4e9f74a32248e290b649fd1f5819986f73311d9", "url": "https://github.com/MegaMek/mekhq/commit/c4e9f74a32248e290b649fd1f5819986f73311d9", "message": "Changing to using a MekHQOptions object to standardize how MekHQOptions are done.", "committedDate": "2020-08-21T16:35:05Z", "type": "commit"}, {"oid": "08fc8df1d344dd0ff25948bf2b007f99e4cca63b", "url": "https://github.com/MegaMek/mekhq/commit/08fc8df1d344dd0ff25948bf2b007f99e4cca63b", "message": "Removing older comment", "committedDate": "2020-08-21T16:38:48Z", "type": "commit"}, {"oid": "1a7d4dd183b741ab3bbaab89de352fd0d91ef2ff", "url": "https://github.com/MegaMek/mekhq/commit/1a7d4dd183b741ab3bbaab89de352fd0d91ef2ff", "message": "Removing unused import", "committedDate": "2020-08-21T16:40:58Z", "type": "commit"}]}