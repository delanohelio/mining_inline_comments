{"pr_number": 1620, "pr_title": "780/1102: Implementing Submenus for Personnel Unit Assignment", "pr_createdAt": "2020-04-03T14:27:57Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/1620", "timeline": [{"oid": "512419eceb3e34f5d7b608d2b154492087f13328", "url": "https://github.com/MegaMek/mekhq/commit/512419eceb3e34f5d7b608d2b154492087f13328", "message": "Hiding assign to unit based on an if statement instead of doing the logic then disabling it (performance improvement)", "committedDate": "2020-03-28T19:57:05Z", "type": "commit"}, {"oid": "d50ac0128d8e80e7af1ae41ef2bb11bf59fe8bee", "url": "https://github.com/MegaMek/mekhq/commit/d50ac0128d8e80e7af1ae41ef2bb11bf59fe8bee", "message": "Switching to use JMenuHelpers", "committedDate": "2020-03-28T19:58:46Z", "type": "commit"}, {"oid": "738813d342e8ad680254d8846cf9a29fd1c70f8d", "url": "https://github.com/MegaMek/mekhq/commit/738813d342e8ad680254d8846cf9a29fd1c70f8d", "message": "Switching to using weight-based menu options", "committedDate": "2020-03-28T20:00:22Z", "type": "commit"}, {"oid": "095c6d2a68aee1438d342cfaf3fef4bb734ca9a6", "url": "https://github.com/MegaMek/mekhq/commit/095c6d2a68aee1438d342cfaf3fef4bb734ca9a6", "message": "Renaming from submenu to entity weight menu", "committedDate": "2020-03-28T20:17:42Z", "type": "commit"}, {"oid": "1495bdd17ce561fe8a22fdc82657a13251d89e31", "url": "https://github.com/MegaMek/mekhq/commit/1495bdd17ce561fe8a22fdc82657a13251d89e31", "message": "Part 1 of implementing unit type menus", "committedDate": "2020-03-28T20:36:02Z", "type": "commit"}, {"oid": "34ed1e9147ae794a6563ea7b4f3597773a3b68e1", "url": "https://github.com/MegaMek/mekhq/commit/34ed1e9147ae794a6563ea7b4f3597773a3b68e1", "message": "Switching the sorting to include a third type based on Entity Type", "committedDate": "2020-03-28T21:26:21Z", "type": "commit"}, {"oid": "82cb619af355732d26c8215502f5bdb7da917268", "url": "https://github.com/MegaMek/mekhq/commit/82cb619af355732d26c8215502f5bdb7da917268", "message": "Adding additional sorting methods to getUnits", "committedDate": "2020-03-28T22:21:59Z", "type": "commit"}, {"oid": "b6aa99035a0ef1d2f3732d2270e53ef115806c72", "url": "https://github.com/MegaMek/mekhq/commit/b6aa99035a0ef1d2f3732d2270e53ef115806c72", "message": "Reverting getUnits call change", "committedDate": "2020-03-28T22:22:22Z", "type": "commit"}, {"oid": "0dbfc4833442f76a7e3bac1b0a9a9c544b639791", "url": "https://github.com/MegaMek/mekhq/commit/0dbfc4833442f76a7e3bac1b0a9a9c544b639791", "message": "Fixing issues in sorting order, and making the normal sort natural order", "committedDate": "2020-03-28T22:58:56Z", "type": "commit"}, {"oid": "76fa24445fea2143be7f9fa8f6365af4b6418611", "url": "https://github.com/MegaMek/mekhq/commit/76fa24445fea2143be7f9fa8f6365af4b6418611", "message": "Switching to using the proper sort format", "committedDate": "2020-03-28T22:59:38Z", "type": "commit"}, {"oid": "94b2fc588f259a043677c1d0afeca263903ef3c5", "url": "https://github.com/MegaMek/mekhq/commit/94b2fc588f259a043677c1d0afeca263903ef3c5", "message": "Properly implementing unit type sorting", "committedDate": "2020-03-28T23:00:14Z", "type": "commit"}, {"oid": "82fcdfe59e99ce3a3ad63e27a8ccef25cb6f7e8a", "url": "https://github.com/MegaMek/mekhq/commit/82fcdfe59e99ce3a3ad63e27a8ccef25cb6f7e8a", "message": "Fixing merge conflicts", "committedDate": "2020-04-03T02:32:00Z", "type": "commit"}, {"oid": "8847f7f7f8bce58e00a297cdd35dcd8c5f362541", "url": "https://github.com/MegaMek/mekhq/commit/8847f7f7f8bce58e00a297cdd35dcd8c5f362541", "message": "Fixing merge conflicts", "committedDate": "2020-04-04T18:31:35Z", "type": "commit"}, {"oid": "cf7ea705096a76af1a299d07eae0bccac722d154", "url": "https://github.com/MegaMek/mekhq/commit/cf7ea705096a76af1a299d07eae0bccac722d154", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_780", "committedDate": "2020-04-04T18:31:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjAxMg==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502012", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n          \n          \n            \n                                    return Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight());", "author": "sixlettervariables", "createdAt": "2020-04-04T18:37:28Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,\n+                               boolean unitTypeSorted) {\n+        List<Unit> units = getCopyOfUnits();\n+\n+        // Natural order sorting the units alphabetically is the default for getSortedUnits\n+        Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n+        units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));\n+\n+        if (weightClassSorted || weightSorted || unitTypeSorted) {\n+            // We need to determine these by both the weight sorted and weight class sorted values,\n+            // as to properly sort by weight class and weight we should do both at the same time\n+            if (weightSorted && weightClassSorted) {\n+                units.sort((lhs, rhs) -> {\n+                    int weightClass1 = lhs.getEntity().getWeightClass();\n+                    int weightClass2 = rhs.getEntity().getWeightClass();\n+                    if (weightClass1 == weightClass2) {\n+                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());", "originalCommit": "cf7ea705096a76af1a299d07eae0bccac722d154", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28edf47e027e294172a07fa28f74184fc45b2f97", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b0283460d..fa3ab9838 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1178,7 +1178,7 @@ public class Campaign implements Serializable, ITechManager {\n                     int weightClass1 = lhs.getEntity().getWeightClass();\n                     int weightClass2 = rhs.getEntity().getWeightClass();\n                     if (weightClass1 == weightClass2) {\n-                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n+                        return Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight());\n                     } else {\n                         return weightClass2 - weightClass1;\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjI3NQ==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502275", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            units.sort((lhs, rhs) -> Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight()));\n          \n          \n            \n                            units.sort(Comparator.comparingDouble(o -> o.getEntity().getWeight()));", "author": "sixlettervariables", "createdAt": "2020-04-04T18:39:30Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,\n+                               boolean unitTypeSorted) {\n+        List<Unit> units = getCopyOfUnits();\n+\n+        // Natural order sorting the units alphabetically is the default for getSortedUnits\n+        Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n+        units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));\n+\n+        if (weightClassSorted || weightSorted || unitTypeSorted) {\n+            // We need to determine these by both the weight sorted and weight class sorted values,\n+            // as to properly sort by weight class and weight we should do both at the same time\n+            if (weightSorted && weightClassSorted) {\n+                units.sort((lhs, rhs) -> {\n+                    int weightClass1 = lhs.getEntity().getWeightClass();\n+                    int weightClass2 = rhs.getEntity().getWeightClass();\n+                    if (weightClass1 == weightClass2) {\n+                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n+                    } else {\n+                        return weightClass2 - weightClass1;\n+                    }\n+                });\n+            } else if (weightClassSorted) {\n+                units.sort(Comparator.comparingInt(o -> o.getEntity().getWeightClass()));\n+            } else if (weightSorted) {\n                 // Sorted in descending order of weights\n-                sortedUnits.sort((lhs, rhs) -> Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight()));\n+                units.sort((lhs, rhs) -> Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight()));", "originalCommit": "cf7ea705096a76af1a299d07eae0bccac722d154", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28edf47e027e294172a07fa28f74184fc45b2f97", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b0283460d..fa3ab9838 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1178,7 +1178,7 @@ public class Campaign implements Serializable, ITechManager {\n                     int weightClass1 = lhs.getEntity().getWeightClass();\n                     int weightClass2 = rhs.getEntity().getWeightClass();\n                     if (weightClass1 == weightClass2) {\n-                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n+                        return Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight());\n                     } else {\n                         return weightClass2 - weightClass1;\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjQyOQ==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502429", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n          \n          \n            \n                    units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));\n          \n          \n            \n                    units.sort(Comparator.comparing(o -> o.getName(), new NaturalOrderComparator()));", "author": "sixlettervariables", "createdAt": "2020-04-04T18:41:14Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,\n+                               boolean unitTypeSorted) {\n+        List<Unit> units = getCopyOfUnits();\n+\n+        // Natural order sorting the units alphabetically is the default for getSortedUnits\n+        Comparator<String> naturalOrderComparator = new NaturalOrderComparator();\n+        units.sort((o1, o2) -> naturalOrderComparator.compare(o1.getName(), o2.getName()));", "originalCommit": "cf7ea705096a76af1a299d07eae0bccac722d154", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28edf47e027e294172a07fa28f74184fc45b2f97", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b0283460d..fa3ab9838 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1178,7 +1178,7 @@ public class Campaign implements Serializable, ITechManager {\n                     int weightClass1 = lhs.getEntity().getWeightClass();\n                     int weightClass2 = rhs.getEntity().getWeightClass();\n                     if (weightClass1 == weightClass2) {\n-                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n+                        return Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight());\n                     } else {\n                         return weightClass2 - weightClass1;\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403502508", "bodyText": "Are these mutually exclusive or \"then by\"?", "author": "sixlettervariables", "createdAt": "2020-04-04T18:41:50Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1150,18 +1151,50 @@ public Unit addUnit(Entity en, boolean allowNewPilots, int days) {\n         return units.values();\n     }\n \n-    public ArrayList<Unit> getUnits(boolean weightSorted, boolean alphaSorted) {\n-        ArrayList<Unit> sortedUnits = getCopyOfUnits();\n-        if (alphaSorted || weightSorted) {\n-            if (alphaSorted) {\n-                sortedUnits.sort(Comparator.comparing(Unit::getName));\n-            }\n-            if (weightSorted) {\n+    public List<Unit> getUnits(boolean weightSorted) {\n+        return getUnits(false, weightSorted, false);\n+    }\n+\n+    /**\n+     * This returns a list of the current units, sorted alphabetically and potentially by other methods\n+     * @param weightSorted      True if the unit list is sorted by weight descending, otherwise false\n+     * @param weightClassSorted True if the unit list is sorted by weight class in format heaviest to lightest, otherwise false\n+     * @param unitTypeSorted    True if the unit list is sorted by the unit type\n+     * @return a copy of the units in the campaign with the applicable sort format\n+     */\n+    public List<Unit> getUnits(boolean weightClassSorted, boolean weightSorted,", "originalCommit": "cf7ea705096a76af1a299d07eae0bccac722d154", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMzE3NA==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403503174", "bodyText": "Currently, they are applied as a then by, although you can do the first or the second alone. I'm going to replace it with an enum-based sorter method to handle all the possible use cases. I'm 99% code done for that, it just needs to be updated with a few of the comments here.", "author": "Windchild292", "createdAt": "2020-04-04T18:48:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMzcwNg==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403503706", "bodyText": "If that's the case, then this would be easier to understand if you chained the comparators:\nComparator<Unit> comparator = Comparator.comparing(u -> u.getName(), new NaturalOrderComparator());\n...\nif (expr) {\n    comparator = comparator.thenComparing(...);\n}\n\nif (otherExpr) {\n    comparator = comparator.thenComparing(...);\n}\n\nunits.sort(comparator);", "author": "sixlettervariables", "createdAt": "2020-04-04T18:52:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwNDkwOQ==", "url": "https://github.com/MegaMek/mekhq/pull/1620#discussion_r403504909", "bodyText": "I'm opening a PR to replace this either later today or tomorrow with the enum (didn't want to distract from the main portion of this. Is it okay if I just leave it like this, and implement it in a final case then?", "author": "Windchild292", "createdAt": "2020-04-04T19:04:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjUwOA=="}], "type": "inlineReview", "revised_code": {"commit": "28edf47e027e294172a07fa28f74184fc45b2f97", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex b0283460d..fa3ab9838 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1178,7 +1178,7 @@ public class Campaign implements Serializable, ITechManager {\n                     int weightClass1 = lhs.getEntity().getWeightClass();\n                     int weightClass2 = rhs.getEntity().getWeightClass();\n                     if (weightClass1 == weightClass2) {\n-                        return (int) (rhs.getEntity().getWeight() - lhs.getEntity().getWeight());\n+                        return Double.compare(rhs.getEntity().getWeight(), lhs.getEntity().getWeight());\n                     } else {\n                         return weightClass2 - weightClass1;\n                     }\n"}}, {"oid": "28edf47e027e294172a07fa28f74184fc45b2f97", "url": "https://github.com/MegaMek/mekhq/commit/28edf47e027e294172a07fa28f74184fc45b2f97", "message": "Update MekHQ/src/mekhq/campaign/Campaign.java\n\nCo-Authored-By: Christopher Watford <christopher.watford@gmail.com>", "committedDate": "2020-04-04T18:45:41Z", "type": "commit"}, {"oid": "fc56acacb00b3cdb47ad0c94af73c0baa6ae9353", "url": "https://github.com/MegaMek/mekhq/commit/fc56acacb00b3cdb47ad0c94af73c0baa6ae9353", "message": "Update MekHQ/src/mekhq/campaign/Campaign.java\n\nCo-Authored-By: Christopher Watford <christopher.watford@gmail.com>", "committedDate": "2020-04-04T18:46:02Z", "type": "commit"}, {"oid": "ed8aa94ba0b24e27ced47e6c75ec6658191da93a", "url": "https://github.com/MegaMek/mekhq/commit/ed8aa94ba0b24e27ced47e6c75ec6658191da93a", "message": "Update MekHQ/src/mekhq/campaign/Campaign.java\n\nCo-Authored-By: Christopher Watford <christopher.watford@gmail.com>", "committedDate": "2020-04-04T18:47:13Z", "type": "commit"}, {"oid": "08ca5798d467cc39d3e667923a87244e2a41cb33", "url": "https://github.com/MegaMek/mekhq/commit/08ca5798d467cc39d3e667923a87244e2a41cb33", "message": "Merge remote-tracking branch 'upstream/master' into dev_Windchild_780", "committedDate": "2020-04-20T15:23:10Z", "type": "commit"}, {"oid": "7a085eb7c2b1b8014061fff7e1b9905d6ad469cb", "url": "https://github.com/MegaMek/mekhq/commit/7a085eb7c2b1b8014061fff7e1b9905d6ad469cb", "message": "Fixing comparator source following MegaMek move", "committedDate": "2020-04-20T15:34:50Z", "type": "commit"}]}