{"pr_number": 2105, "pr_title": "Avoid part ID references in Refits and elsewhere", "pr_createdAt": "2020-10-03T20:46:15Z", "pr_url": "https://github.com/MegaMek/mekhq/pull/2105", "timeline": [{"oid": "4e039470304bbba97aa8ee7fb45339920b12c78b", "url": "https://github.com/MegaMek/mekhq/commit/4e039470304bbba97aa8ee7fb45339920b12c78b", "message": "Don't reference replacement parts by ID", "committedDate": "2020-10-04T19:25:15Z", "type": "commit"}, {"oid": "fa1c7570f0fe4c708a608fdc06049bd17fed0de7", "url": "https://github.com/MegaMek/mekhq/commit/fa1c7570f0fe4c708a608fdc06049bd17fed0de7", "message": "Don't merge parts which can't be merged", "committedDate": "2020-10-04T19:25:15Z", "type": "commit"}, {"oid": "04f474c18716b5c22e7ae1d8295871dab1aced2e", "url": "https://github.com/MegaMek/mekhq/commit/04f474c18716b5c22e7ae1d8295871dab1aced2e", "message": "Have Refit use part references rather than IDs", "committedDate": "2020-10-04T19:27:19Z", "type": "commit"}, {"oid": "7e807e174ec689e004f76e39bb3725cdd686636d", "url": "https://github.com/MegaMek/mekhq/commit/7e807e174ec689e004f76e39bb3725cdd686636d", "message": "Fix ammo and armor errors with cancelled refits", "committedDate": "2020-10-04T19:27:21Z", "type": "commit"}, {"oid": "6fd9a4dd390b1138942ac8b75a673d1bc63c91f6", "url": "https://github.com/MegaMek/mekhq/commit/6fd9a4dd390b1138942ac8b75a673d1bc63c91f6", "message": "Make campaign respect non-spare parts\n\n- Stage for AmmoBin not doing some campaign level work", "committedDate": "2020-10-04T19:27:21Z", "type": "commit"}, {"oid": "5df75cb0176fc774c1563c3f483978b01cdd3669", "url": "https://github.com/MegaMek/mekhq/commit/5df75cb0176fc774c1563c3f483978b01cdd3669", "message": "Don't use ammo reserved for refits", "committedDate": "2020-10-04T19:27:21Z", "type": "commit"}, {"oid": "bc97b7ce52a91b90670105f61b8e64278bf2feea", "url": "https://github.com/MegaMek/mekhq/commit/bc97b7ce52a91b90670105f61b8e64278bf2feea", "message": "Track ammo as a part on a refit", "committedDate": "2020-10-04T19:27:21Z", "type": "commit"}, {"oid": "88f5910fa9d3e9f870e4f93410e5249c8ffc9908", "url": "https://github.com/MegaMek/mekhq/commit/88f5910fa9d3e9f870e4f93410e5249c8ffc9908", "message": "Get closer to fixing ammo purchases for custom refits", "committedDate": "2020-10-04T20:26:33Z", "type": "commit"}, {"oid": "88f5910fa9d3e9f870e4f93410e5249c8ffc9908", "url": "https://github.com/MegaMek/mekhq/commit/88f5910fa9d3e9f870e4f93410e5249c8ffc9908", "message": "Get closer to fixing ammo purchases for custom refits", "committedDate": "2020-10-04T20:26:33Z", "type": "forcePushed"}, {"oid": "7a3dccbbb75f2ed0e57ec9a0d43865451cb36123", "url": "https://github.com/MegaMek/mekhq/commit/7a3dccbbb75f2ed0e57ec9a0d43865451cb36123", "message": "Minor improvements to Campaign w.r.t. parts and refits", "committedDate": "2020-10-04T21:06:28Z", "type": "commit"}, {"oid": "c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "url": "https://github.com/MegaMek/mekhq/commit/c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "message": "Don't double the ammo we order", "committedDate": "2020-10-04T21:06:48Z", "type": "commit"}, {"oid": "a813ac22fa818f4926651115303b2c7bae26c8e6", "url": "https://github.com/MegaMek/mekhq/commit/a813ac22fa818f4926651115303b2c7bae26c8e6", "message": "Don't use part IDs when a part will do", "committedDate": "2020-10-04T21:22:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4OTY5OQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499289699", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        && !p.isReservedForRefit() && !p.isReservedForReplacement()) {\n          \n          \n            \n                            && !p.isReservedForRefit() && !p.isReservedForReplacement()) {", "author": "Windchild292", "createdAt": "2020-10-04T21:16:42Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1634,7 +1634,8 @@ public void addPart(Part p, int transitDays) {\n             p.setId(-1);\n             return;\n         }\n-        if ((null == p.getUnit()) && !p.hasParentPart()) {\n+        if ((null == p.getUnit()) && !p.hasParentPart()\n+            && !p.isReservedForRefit() && !p.isReservedForReplacement()) {", "originalCommit": "c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e16f3f21b..a00b46c2a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1635,7 +1635,7 @@ public class Campaign implements Serializable, ITechManager {\n             return;\n         }\n         if ((null == p.getUnit()) && !p.hasParentPart()\n-            && !p.isReservedForRefit() && !p.isReservedForReplacement()) {\n+                && !p.isReservedForRefit() && !p.isReservedForReplacement()) {\n             Part spare = checkForExistingSparePart(p);\n             if (null != spare) {\n                 if (p instanceof Armor) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4OTc0Mw==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499289743", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        && !p.isReservedForRefit() && !p.isReservedForReplacement()) {\n          \n          \n            \n                            && !p.isReservedForRefit() && !p.isReservedForReplacement()) {", "author": "Windchild292", "createdAt": "2020-10-04T21:17:11Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1746,7 +1747,8 @@ public void addPartWithoutId(Part p) {\n         // go ahead and check for existing parts because some version weren't\n         // properly collecting parts\n         Part mergedWith = null;\n-        if (!(p instanceof MissingPart) && null == p.getUnitId()) {\n+        if (!(p instanceof MissingPart) && (null == p.getUnitId())\n+            && !p.isReservedForRefit() && !p.isReservedForReplacement()) {", "originalCommit": "c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e16f3f21b..a00b46c2a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1748,7 +1748,7 @@ public class Campaign implements Serializable, ITechManager {\n         // properly collecting parts\n         Part mergedWith = null;\n         if (!(p instanceof MissingPart) && (null == p.getUnitId())\n-            && !p.isReservedForRefit() && !p.isReservedForReplacement()) {\n+                && !p.isReservedForRefit() && !p.isReservedForReplacement()) {\n             Part spare = checkForExistingSparePart(p);\n             if (null != spare) {\n                 if (p instanceof Armor) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4OTc1NA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499289754", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Go through each unit and its refits to see if the new armorshould be updated\n          \n          \n            \n                        // Go through each unit and its refits to see if the new armor should be updated", "author": "Windchild292", "createdAt": "2020-10-04T21:17:21Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1773,39 +1775,19 @@ public void addPartWithoutId(Part p) {\n             parts.put(p.getId(), p);\n             MekHQ.triggerEvent(new PartNewEvent(p));\n         } else {\n-            // Go through each unit and its refits to see if the new armor ID should be updated\n+            // Go through each unit and its refits to see if the new armorshould be updated", "originalCommit": "c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e16f3f21b..a00b46c2a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1775,7 +1775,7 @@ public class Campaign implements Serializable, ITechManager {\n             parts.put(p.getId(), p);\n             MekHQ.triggerEvent(new PartNewEvent(p));\n         } else {\n-            // Go through each unit and its refits to see if the new armorshould be updated\n+            // Go through each unit and its refits to see if the new armor should be updated\n             // CAW: I believe all other parts on a refit have a unit assigned to them.\n             if (mergedWith instanceof Armor) {\n                 for (Unit u : getUnits()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4OTk0NA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499289944", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        Armor mergedArmor = (Armor)mergedWith;\n          \n          \n            \n                                        Armor mergedArmor = (Armor) mergedWith;", "author": "Windchild292", "createdAt": "2020-10-04T21:19:32Z", "path": "MekHQ/src/mekhq/campaign/Campaign.java", "diffHunk": "@@ -1773,39 +1775,19 @@ public void addPartWithoutId(Part p) {\n             parts.put(p.getId(), p);\n             MekHQ.triggerEvent(new PartNewEvent(p));\n         } else {\n-            // Go through each unit and its refits to see if the new armor ID should be updated\n+            // Go through each unit and its refits to see if the new armorshould be updated\n             // CAW: I believe all other parts on a refit have a unit assigned to them.\n-            for (Unit u : getUnits()) {\n-                Refit r = u.getRefit();\n-                // If there is a refit and this part matches the new armor, update the ID\n-                if (null != r) {\n-                    if (mergedWith instanceof Armor\n-                        && r.getNewArmorSuppliesId() == p.getId()) {\n-                        MekHQ.getLogger().info(Campaign.class, \"addPartWithoutId\",\n-                            String.format(\"%s (%d) was merged with %s (%d) used in a refit for %s\", p.getName(),\n-                                p.getId(), mergedWith.getName(), mergedWith.getId(), u.getName()));\n-                        Armor mergedArmor = (Armor)mergedWith;\n-                        r.setNewArmorSupplies(mergedArmor);\n-                    } else {\n-                        List<Integer> ids = r.getOldUnitPartIds();\n-                        for (int ii = 0; ii < ids.size(); ++ii) {\n-                            int oid = ids.get(ii);\n-                            if (p.getId() == oid) {\n-                                MekHQ.getLogger().info(Campaign.class, \"addPartWithoutId\",\n-                                String.format(\"%s (%d) was merged with %s (%d) used in the old unit in a refit for %s\", p.getName(),\n-                                    p.getId(), mergedWith.getName(), mergedWith.getId(), u.getName()));\n-                                ids.set(ii, mergedWith.getId());\n-                            }\n-                        }\n-                        ids = r.getNewUnitPartIds();\n-                        for (int ii = 0; ii < ids.size(); ++ii) {\n-                            int nid = ids.get(ii);\n-                            if (p.getId() == nid) {\n-                                MekHQ.getLogger().info(Campaign.class, \"addPartWithoutId\",\n-                                String.format(\"%s (%d) was merged with %s (%d) used in the new unit in a refit for %s\", p.getName(),\n+            if (mergedWith instanceof Armor) {\n+                for (Unit u : getUnits()) {\n+                    Refit r = u.getRefit();\n+                    // If there is a refit and this part matches the new armor, update the armor entry\n+                    if (null != r) {\n+                        if (r.getNewArmorSupplies() == p) {\n+                            MekHQ.getLogger().info(\n+                                String.format(\"%s (%d) was merged with %s (%d) used in a refit for %s\", p.getName(),\n                                     p.getId(), mergedWith.getName(), mergedWith.getId(), u.getName()));\n-                                ids.set(ii, mergedWith.getId());\n-                            }\n+                            Armor mergedArmor = (Armor)mergedWith;", "originalCommit": "c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/Campaign.java b/MekHQ/src/mekhq/campaign/Campaign.java\nindex e16f3f21b..a00b46c2a 100644\n--- a/MekHQ/src/mekhq/campaign/Campaign.java\n+++ b/MekHQ/src/mekhq/campaign/Campaign.java\n\n@@ -1775,7 +1775,7 @@ public class Campaign implements Serializable, ITechManager {\n             parts.put(p.getId(), p);\n             MekHQ.triggerEvent(new PartNewEvent(p));\n         } else {\n-            // Go through each unit and its refits to see if the new armorshould be updated\n+            // Go through each unit and its refits to see if the new armor should be updated\n             // CAW: I believe all other parts on a refit have a unit assigned to them.\n             if (mergedWith instanceof Armor) {\n                 for (Unit u : getUnits()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDIzNw==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290237", "bodyText": "Tab vs Space formatting", "author": "Windchild292", "createdAt": "2020-10-04T21:22:54Z", "path": "MekHQ/src/mekhq/campaign/parts/MissingPart.java", "diffHunk": "@@ -161,12 +161,10 @@ public Part findReplacement(boolean refit) {\n \t\tPart bestPart = null;\n \n \t\t//check to see if we already have a replacement assigned\n-\t\tif(replacementId > -1) {\n-\t\t\tbestPart = campaign.getPart(replacementId);\n-\t\t\tif(null != bestPart) {\n-\t\t\t\treturn bestPart;\n-\t\t\t}\n-\t\t}\n+\t\tif (hasReplacementPart()) {\n+\t\t\treturn getReplacementPart();\n+        }\n+", "originalCommit": "c813ca62eae3e3c42a7da2b7cc161ea7e775e780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "882a7efc10b211821ddcdab1e09aed00268f3922", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/MissingPart.java b/MekHQ/src/mekhq/campaign/parts/MissingPart.java\nindex 719e8cd72..a426c6d7c 100644\n--- a/MekHQ/src/mekhq/campaign/parts/MissingPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/MissingPart.java\n\n@@ -119,134 +119,134 @@ public abstract class MissingPart extends Part implements Serializable, MekHqXml\n                 toReturn += \"<br/><i>\" + getCurrentModeName() + \"</i>\";\n             }\n         }\n-\t\ttoReturn += \"</font></html>\";\n-\t\treturn toReturn;\n-\t}\n-\n-\t@Override\n-\tpublic String succeed() {\n-\t\tfix();\n-\t\treturn \" <font color='green'><b> replaced.</b></font>\";\n-\t}\n-\n-\t@Override\n-\tpublic void fix() {\n-\t\tPart replacement = findReplacement(false);\n-\t\tif(null != replacement) {\n-\t\t\tPart actualReplacement = replacement.clone();\n-\t\t\tunit.addPart(actualReplacement);\n-\t\t\tcampaign.addPart(actualReplacement, 0);\n-\t\t\treplacement.decrementQuantity();\n-\t\t\tremove(false);\n-\t\t\t//assign the replacement part to the unit\n-\t\t\tactualReplacement.updateConditionFromPart();\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void remove(boolean salvage) {\n-\t\tcampaign.removePart(this);\n-\t\tif(null != unit) {\n-\t\t\tunit.removePart(this);\n-\t\t}\n-\t\tsetUnit(null);\n-\t\tif (null != parentPart) {\n-\t\t    parentPart.removeChildPart(this);\n-\t\t}\n-\t}\n-\n-\tpublic abstract boolean isAcceptableReplacement(Part part, boolean refit);\n-\n-\tpublic Part findReplacement(boolean refit) {\n-\t\tPart bestPart = null;\n-\n-\t\t//check to see if we already have a replacement assigned\n-\t\tif (hasReplacementPart()) {\n-\t\t\treturn getReplacementPart();\n+        toReturn += \"</font></html>\";\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public String succeed() {\n+        fix();\n+        return \" <font color='green'><b> replaced.</b></font>\";\n+    }\n+\n+    @Override\n+    public void fix() {\n+        Part replacement = findReplacement(false);\n+        if(null != replacement) {\n+            Part actualReplacement = replacement.clone();\n+            unit.addPart(actualReplacement);\n+            campaign.addPart(actualReplacement, 0);\n+            replacement.decrementQuantity();\n+            remove(false);\n+            //assign the replacement part to the unit\n+            actualReplacement.updateConditionFromPart();\n         }\n+    }\n \n-\t\t// don't just return with the first part if it is damaged\n-\t\tfor(Part part : campaign.getSpareParts()) {\n-\t\t\tif (part.isReservedForRefit() || part.isBeingWorkedOn() || part.isReservedForReplacement() || !part.isPresent() || part.hasParentPart() || part.isUsedForRefitPlanning()) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\t\t\tif(isAcceptableReplacement(part, refit)) {\n-\t\t\t\tif(null == bestPart) {\n-\t\t\t\t\tbestPart = part;\n-\t\t\t\t} else if(bestPart.needsFixing() && !part.needsFixing()) {\n-\t\t\t\t\tbestPart = part;\n-\t\t\t\t} else if (bestPart.getQuality() < part.getQuality()) {\n-\t\t\t\t    bestPart = part;\n+    @Override\n+    public void remove(boolean salvage) {\n+        campaign.removePart(this);\n+        if(null != unit) {\n+            unit.removePart(this);\n+        }\n+        setUnit(null);\n+        if (null != parentPart) {\n+            parentPart.removeChildPart(this);\n+        }\n+    }\n+\n+    public abstract boolean isAcceptableReplacement(Part part, boolean refit);\n+\n+    public Part findReplacement(boolean refit) {\n+        Part bestPart = null;\n+\n+        //check to see if we already have a replacement assigned\n+        if (hasReplacementPart()) {\n+            return getReplacementPart();\n+        }\n+\n+        // don't just return with the first part if it is damaged\n+        for(Part part : campaign.getSpareParts()) {\n+            if (part.isReservedForRefit() || part.isBeingWorkedOn() || part.isReservedForReplacement() || !part.isPresent() || part.hasParentPart() || part.isUsedForRefitPlanning()) {\n+                continue;\n+            }\n+\n+            if(isAcceptableReplacement(part, refit)) {\n+                if(null == bestPart) {\n+                    bestPart = part;\n+                } else if(bestPart.needsFixing() && !part.needsFixing()) {\n+                    bestPart = part;\n+                } else if (bestPart.getQuality() < part.getQuality()) {\n+                    bestPart = part;\n                 }\n-\t\t\t}\n-\t\t}\n-\t\treturn bestPart;\n-\t}\n+            }\n+        }\n+        return bestPart;\n+    }\n \n-\tpublic boolean isReplacementAvailable() {\n-\t\treturn null != findReplacement(false);\n-\t}\n+    public boolean isReplacementAvailable() {\n+        return null != findReplacement(false);\n+    }\n \n-\t@Override\n+    @Override\n     public String getDetails() {\n         return getDetails(true);\n     }\n \n     @Override\n     public String getDetails(boolean includeRepairDetails) {\n-\t\tif(isReplacementAvailable()) {\n-\t\t\treturn \"Replacement part available\";\n-\t\t} else {\n-\t\t\tPartInventory inventories = campaign.getPartInventory(getNewPart());\n-\t\t\treturn \"<font color='red'>No replacement (\" + inventories.getTransitOrderedDetails() + \")</font>\";\n-\t\t}\n-    }\n-\n-\t@Override\n-\tpublic boolean needsFixing() {\n-\t\t//missing parts always need fixing\n-\t\tif(null != unit) {\n-\t\t\treturn (!unit.isSalvage() || null != getTeamId()) && unit.isRepairable();\n-\t\t}\n-\t\treturn false;\n-\t}\n-\n-\t@Override\n-\tpublic MissingPart getMissingPart() {\n-\t\t//do nothing - this should never be accessed\n-\t\treturn null;\n-\t}\n-\n-\t@Override\n-\tpublic void updateConditionFromEntity(boolean checkForDestruction) {\n-\t\t//do nothing\n-\t}\n-\n-\t@Override\n-\tpublic String fail(int rating) {\n-\t\tskillMin = ++rating;\n-\t\ttimeSpent = 0;\n-\t\tshorthandedMod = 0;\n-\t\tif(skillMin > SkillType.EXP_ELITE) {\n-\t\t\tPart part = findReplacement(false);\n-\t\t\tif(null != part) {\n-\t\t\t\tpart.decrementQuantity();\n-\t\t\t\tskillMin = SkillType.EXP_GREEN;\n-\t\t\t}\n-\t\t\treturn \" <font color='red'><b> failed and part destroyed.</b></font>\";\n-\t\t} else {\n-\t\t\treturn \" <font color='red'><b> failed.</b></font>\";\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic boolean canChangeWorkMode() {\n-\t    return !isOmniPodded();\n-\t}\n-\n-\t@Override\n-\tpublic TargetRoll getAllAcquisitionMods() {\n+        if(isReplacementAvailable()) {\n+            return \"Replacement part available\";\n+        } else {\n+            PartInventory inventories = campaign.getPartInventory(getNewPart());\n+            return \"<font color='red'>No replacement (\" + inventories.getTransitOrderedDetails() + \")</font>\";\n+        }\n+    }\n+\n+    @Override\n+    public boolean needsFixing() {\n+        //missing parts always need fixing\n+        if(null != unit) {\n+            return (!unit.isSalvage() || null != getTeamId()) && unit.isRepairable();\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public MissingPart getMissingPart() {\n+        //do nothing - this should never be accessed\n+        return null;\n+    }\n+\n+    @Override\n+    public void updateConditionFromEntity(boolean checkForDestruction) {\n+        //do nothing\n+    }\n+\n+    @Override\n+    public String fail(int rating) {\n+        skillMin = ++rating;\n+        timeSpent = 0;\n+        shorthandedMod = 0;\n+        if(skillMin > SkillType.EXP_ELITE) {\n+            Part part = findReplacement(false);\n+            if(null != part) {\n+                part.decrementQuantity();\n+                skillMin = SkillType.EXP_GREEN;\n+            }\n+            return \" <font color='red'><b> failed and part destroyed.</b></font>\";\n+        } else {\n+            return \" <font color='red'><b> failed.</b></font>\";\n+        }\n+    }\n+\n+    @Override\n+    public boolean canChangeWorkMode() {\n+        return !isOmniPodded();\n+    }\n+\n+    @Override\n+    public TargetRoll getAllAcquisitionMods() {\n         TargetRoll target = new TargetRoll();\n         if(getTechBase() == T_CLAN && campaign.getCampaignOptions().getClanAcquisitionPenalty() > 0) {\n             target.addModifier(campaign.getCampaignOptions().getClanAcquisitionPenalty(), \"clan-tech\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDQyNg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290426", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        pw1.println(MekHqXmlUtil.indentStr(indent+1)\n          \n          \n            \n                                +\"<replacementId>\"\n          \n          \n            \n                                + getReplacementPart().getId()\n          \n          \n            \n                                +\"</replacementId>\");\n          \n          \n            \n                        MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"replacementId\", getReplacementPart().getId());", "author": "Windchild292", "createdAt": "2020-10-04T21:25:24Z", "path": "MekHQ/src/mekhq/campaign/parts/MissingPart.java", "diffHunk": "@@ -347,11 +345,13 @@ public void writeToXmlBegin(PrintWriter pw1, int indent) {\n \t\tpw1.println(MekHqXmlUtil.indentStr(indent+1)\n \t\t\t\t+\"<daysToWait>\"\n \t\t\t\t+daysToWait\n-\t\t\t\t+\"</daysToWait>\");\n-\t\tpw1.println(MekHqXmlUtil.indentStr(indent+1)\n-\t\t\t\t+\"<replacementId>\"\n-\t\t\t\t+replacementId\n-\t\t\t\t+\"</replacementId>\");\n+                +\"</daysToWait>\");\n+        if (hasReplacementPart()) {\n+            pw1.println(MekHqXmlUtil.indentStr(indent+1)\n+                    +\"<replacementId>\"\n+                    + getReplacementPart().getId()\n+                    +\"</replacementId>\");", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/MissingPart.java b/MekHQ/src/mekhq/campaign/parts/MissingPart.java\nindex 719e8cd72..1cfe858f3 100644\n--- a/MekHQ/src/mekhq/campaign/parts/MissingPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/MissingPart.java\n\n@@ -347,10 +347,7 @@ public abstract class MissingPart extends Part implements Serializable, MekHqXml\n \t\t\t\t+daysToWait\n                 +\"</daysToWait>\");\n         if (hasReplacementPart()) {\n-            pw1.println(MekHqXmlUtil.indentStr(indent+1)\n-                    +\"<replacementId>\"\n-                    + getReplacementPart().getId()\n-                    +\"</replacementId>\");\n+            MekHqXmlUtil.writeSimpleXmlTag(pw1, indent + 1, \"replacementId\", getReplacementPart().getId());\n         }\n \t}\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDQ2Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290462", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (hasReplacementPart() && null != replacement) {\n          \n          \n            \n            \t\tif (hasReplacementPart() && (null != replacement)) {", "author": "Windchild292", "createdAt": "2020-10-04T21:26:02Z", "path": "MekHQ/src/mekhq/campaign/parts/MissingPart.java", "diffHunk": "@@ -402,29 +402,29 @@ public void reservePart() {\n \t\t//shouldn't be null, but it never hurts to check\n \t\tPart replacement = findReplacement(false);\n \t\tUUID teamId = getTeamId();\n-\t\tif(null != replacement && null != teamId) {\n-\t\t\tif(replacement.getQuantity() > 1) {\n+\t\tif ((null != replacement) &&(null != teamId)) {\n+\t\t\tif (replacement.getQuantity() > 1) {\n \t\t\t\tPart actualReplacement = replacement.clone();\n \t\t\t\tactualReplacement.setReserveId(teamId);\n-\t\t\t\tcampaign.addPart(actualReplacement, 0);\n-\t\t\t\treplacementId = actualReplacement.getId();\n+                campaign.addPart(actualReplacement, 0);\n+                setReplacementPart(actualReplacement);\n \t\t\t\treplacement.decrementQuantity();\n \t\t\t} else {\n-\t\t\t\treplacement.setReserveId(teamId);\n-\t\t\t\treplacementId = replacement.getId();\n+                replacement.setReserveId(teamId);\n+                setReplacementPart(replacement);\n \t\t\t}\n \t\t}\n \t}\n \n \t@Override\n \tpublic void cancelReservation() {\n \t\tPart replacement = findReplacement(false);\n-\t\tif(replacementId > -1 && null != replacement) {\n-\t\t\treplacementId = -1;\n+\t\tif (hasReplacementPart() && null != replacement) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/MissingPart.java b/MekHQ/src/mekhq/campaign/parts/MissingPart.java\nindex 719e8cd72..1cfe858f3 100644\n--- a/MekHQ/src/mekhq/campaign/parts/MissingPart.java\n+++ b/MekHQ/src/mekhq/campaign/parts/MissingPart.java\n\n@@ -419,7 +416,7 @@ public abstract class MissingPart extends Part implements Serializable, MekHqXml\n \t@Override\n \tpublic void cancelReservation() {\n \t\tPart replacement = findReplacement(false);\n-\t\tif (hasReplacementPart() && null != replacement) {\n+\t\tif (hasReplacementPart() && (null != replacement)) {\n \t\t\tsetReplacementPart(null);\n \t\t\treplacement.setReserveId(null);\n \t\t\tif (replacement.isSpare()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDUyNg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290526", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MekHQ.getLogger().error(PartRef.class,\n          \n          \n            \n                                String.format(\"Part %d ('%s') references missing replacement part %d\",\n          \n          \n            \n                                    getId(), getName(), id));\n          \n          \n            \n                            MekHQ.getLogger().error(\n          \n          \n            \n                                String.format(\"Part %d ('%s') references missing replacement part %d\",\n          \n          \n            \n                                    getId(), getName(), id));", "author": "Windchild292", "createdAt": "2020-10-04T21:26:48Z", "path": "MekHQ/src/mekhq/campaign/parts/Part.java", "diffHunk": "@@ -1783,6 +1823,16 @@ public SimpleTechLevel getStaticTechLevel() {\n     }\n \n     public void fixupPartReferences(Map<Integer, Part> knownParts) {\n+        if (replacementPart instanceof PartRef) {\n+            int id = replacementPart.getId();\n+            replacementPart = knownParts.get(id);\n+            if ((replacementPart == null) && (id > 0)) {\n+                MekHQ.getLogger().error(PartRef.class,\n+                    String.format(\"Part %d ('%s') references missing replacement part %d\",\n+                        getId(), getName(), id));", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89b73fcf6132c4789f68835de8e4400bae0ec178", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Part.java b/MekHQ/src/mekhq/campaign/parts/Part.java\nindex f96d1de85..28553fbb8 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Part.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Part.java\n\n@@ -1827,7 +1827,7 @@ public abstract class Part implements Serializable, MekHqXmlSerializable, IPartW\n             int id = replacementPart.getId();\n             replacementPart = knownParts.get(id);\n             if ((replacementPart == null) && (id > 0)) {\n-                MekHQ.getLogger().error(PartRef.class,\n+                MekHQ.getLogger().error(\n                     String.format(\"Part %d ('%s') references missing replacement part %d\",\n                         getId(), getName(), id));\n             }\n"}}, {"oid": "89b73fcf6132c4789f68835de8e4400bae0ec178", "url": "https://github.com/MegaMek/mekhq/commit/89b73fcf6132c4789f68835de8e4400bae0ec178", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-10-04T21:43:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDgxOA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290818", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    converted = (int)Math.round((double)converted/curType.getRackSize());\n          \n          \n            \n                    converted = (int) Math.round((double) converted / curType.getRackSize());", "author": "Windchild292", "createdAt": "2020-10-04T21:30:30Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "diffHunk": "@@ -582,13 +582,17 @@ public void swapAmmoFromCompatible(int needed, AmmoStorage as) {\n                 }\n             }\n         }\n-        converted = Math.round((float)converted/curType.getRackSize());\n-        as.changeAmountAvailable(converted, curType);\n+        converted = (int)Math.round((double)converted/curType.getRackSize());", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\nindex 2a3603da8..16684b9c7 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n\n@@ -582,7 +582,7 @@ public class AmmoBin extends EquipmentPart implements IAcquisitionWork {\n                 }\n             }\n         }\n-        converted = (int)Math.round((double)converted/curType.getRackSize());\n+        converted = (int) Math.round((double) converted / curType.getRackSize());\n         changeAmountAvailable(campaign, converted, curType);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDk0NA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290944", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getAmountAvailable(campaign, (AmmoType)getType());\n          \n          \n            \n                    return getAmountAvailable(campaign, (AmmoType) getType());", "author": "Windchild292", "createdAt": "2020-10-04T21:31:49Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "diffHunk": "@@ -684,38 +692,41 @@ public boolean isCompatibleAmmo(AmmoType a1, AmmoType a2) {\n     }\n \n     public int getAmountAvailable() {\n-        final AmmoType thisType = (AmmoType)getType();\n+        return getAmountAvailable(campaign, (AmmoType)getType());", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\nindex 2a3603da8..16684b9c7 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n\n@@ -692,7 +692,7 @@ public class AmmoBin extends EquipmentPart implements IAcquisitionWork {\n     }\n \n     public int getAmountAvailable() {\n-        return getAmountAvailable(campaign, (AmmoType)getType());\n+        return getAmountAvailable(campaign, (AmmoType) getType());\n     }\n \n     public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDk2OA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290968", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                           } else if (isCompatibleAmmo(campaign, aType, ammoType) && ammoType.getRackSize() != 0) {\n          \n          \n            \n                                           } else if (isCompatibleAmmo(campaign, aType, ammoType) && (ammoType.getRackSize() != 0)) {", "author": "Windchild292", "createdAt": "2020-10-04T21:32:07Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "diffHunk": "@@ -684,38 +692,41 @@ public boolean isCompatibleAmmo(AmmoType a1, AmmoType a2) {\n     }\n \n     public int getAmountAvailable() {\n-        final AmmoType thisType = (AmmoType)getType();\n+        return getAmountAvailable(campaign, (AmmoType)getType());\n+    }\n+\n+    public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n         if (campaign.getCampaignOptions().useAmmoByType()) {\n             Predicate<Part> predicate;\n-            if (AmmoBin.ALLOWED_BY_TYPE.contains(thisType.getAmmoType())) {\n+            if (AmmoBin.ALLOWED_BY_TYPE.contains(ammoType.getAmmoType())) {\n                 predicate = part -> {\n                     return part instanceof AmmoStorage\n-                            && thisType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n-                            && thisType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n+                            && ammoType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n+                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n                 };\n             } else {\n                 predicate = part -> {\n                     return part instanceof AmmoStorage\n-                            && thisType.equals(((AmmoStorage) part).getType())\n-                            && thisType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n+                            && ammoType.equals(((AmmoStorage) part).getType())\n+                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n                 };\n             }\n             AmmoStorage a = (AmmoStorage) campaign.findSparePart(predicate);\n             return a != null ? a.getShots() : 0;\n         } else {\n             return campaign.streamSpareParts()\n-                            .filter(part -> part instanceof AmmoStorage && part.isPresent())\n-                            .mapToInt(part -> {\n-                                AmmoStorage a = (AmmoStorage)part;\n-                                AmmoType aType = (AmmoType)a.getType();\n-                                if (aType.equals(getType()) && thisType.getMunitionType() == aType.getMunitionType()) {\n-                                    return a.getShots();\n-                                } else if (isCompatibleAmmo(aType, thisType) && thisType.getRackSize() != 0) {\n-                                    return (a.getShots() * aType.getRackSize()) / thisType.getRackSize();\n-                                }\n-                                return 0;\n-                            })\n-                            .sum();\n+                           .filter(part -> part instanceof AmmoStorage && part.isPresent())\n+                           .mapToInt(part -> {\n+                               AmmoStorage a = (AmmoStorage)part;\n+                               AmmoType aType = (AmmoType)a.getType();\n+                               if (aType.equals(ammoType) && ammoType.getMunitionType() == aType.getMunitionType()) {\n+                                   return a.getShots();\n+                               } else if (isCompatibleAmmo(campaign, aType, ammoType) && ammoType.getRackSize() != 0) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\nindex 2a3603da8..16684b9c7 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n\n@@ -692,7 +692,7 @@ public class AmmoBin extends EquipmentPart implements IAcquisitionWork {\n     }\n \n     public int getAmountAvailable() {\n-        return getAmountAvailable(campaign, (AmmoType)getType());\n+        return getAmountAvailable(campaign, (AmmoType) getType());\n     }\n \n     public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDk4NQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499290985", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                           if (aType.equals(ammoType) && ammoType.getMunitionType() == aType.getMunitionType()) {\n          \n          \n            \n                                           if (aType.equals(ammoType) && (ammoType.getMunitionType() == aType.getMunitionType())) {", "author": "Windchild292", "createdAt": "2020-10-04T21:32:16Z", "path": "MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java", "diffHunk": "@@ -684,38 +692,41 @@ public boolean isCompatibleAmmo(AmmoType a1, AmmoType a2) {\n     }\n \n     public int getAmountAvailable() {\n-        final AmmoType thisType = (AmmoType)getType();\n+        return getAmountAvailable(campaign, (AmmoType)getType());\n+    }\n+\n+    public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n         if (campaign.getCampaignOptions().useAmmoByType()) {\n             Predicate<Part> predicate;\n-            if (AmmoBin.ALLOWED_BY_TYPE.contains(thisType.getAmmoType())) {\n+            if (AmmoBin.ALLOWED_BY_TYPE.contains(ammoType.getAmmoType())) {\n                 predicate = part -> {\n                     return part instanceof AmmoStorage\n-                            && thisType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n-                            && thisType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n+                            && ammoType.equalsAmmoTypeOnly(((AmmoStorage) part).getType())\n+                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n                 };\n             } else {\n                 predicate = part -> {\n                     return part instanceof AmmoStorage\n-                            && thisType.equals(((AmmoStorage) part).getType())\n-                            && thisType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n+                            && ammoType.equals(((AmmoStorage) part).getType())\n+                            && ammoType.getMunitionType() == ((AmmoType) ((AmmoStorage) part).getType()).getMunitionType();\n                 };\n             }\n             AmmoStorage a = (AmmoStorage) campaign.findSparePart(predicate);\n             return a != null ? a.getShots() : 0;\n         } else {\n             return campaign.streamSpareParts()\n-                            .filter(part -> part instanceof AmmoStorage && part.isPresent())\n-                            .mapToInt(part -> {\n-                                AmmoStorage a = (AmmoStorage)part;\n-                                AmmoType aType = (AmmoType)a.getType();\n-                                if (aType.equals(getType()) && thisType.getMunitionType() == aType.getMunitionType()) {\n-                                    return a.getShots();\n-                                } else if (isCompatibleAmmo(aType, thisType) && thisType.getRackSize() != 0) {\n-                                    return (a.getShots() * aType.getRackSize()) / thisType.getRackSize();\n-                                }\n-                                return 0;\n-                            })\n-                            .sum();\n+                           .filter(part -> part instanceof AmmoStorage && part.isPresent())\n+                           .mapToInt(part -> {\n+                               AmmoStorage a = (AmmoStorage)part;\n+                               AmmoType aType = (AmmoType)a.getType();\n+                               if (aType.equals(ammoType) && ammoType.getMunitionType() == aType.getMunitionType()) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\nindex 2a3603da8..16684b9c7 100644\n--- a/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n+++ b/MekHQ/src/mekhq/campaign/parts/equipment/AmmoBin.java\n\n@@ -692,7 +692,7 @@ public class AmmoBin extends EquipmentPart implements IAcquisitionWork {\n     }\n \n     public int getAmountAvailable() {\n-        return getAmountAvailable(campaign, (AmmoType)getType());\n+        return getAmountAvailable(campaign, (AmmoType) getType());\n     }\n \n     public static int getAmountAvailable(Campaign campaign, AmmoType ammoType) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzM5Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293392", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (null != replacement && null == partQuantity.get(replacement)) {\n          \n          \n            \n                            if ((null != replacement) && (null == partQuantity.get(replacement))) {", "author": "Windchild292", "createdAt": "2020-10-04T22:00:35Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -508,15 +503,15 @@ public void calculate() {\n                 Part replacement = ((MissingPart)nPart).findReplacement(true);\n                 //check quantity\n                 //TODO: the one weakness here is that we will not pick up damaged parts\n-                if (null != replacement && null == partQuantity.get(replacement.getId())) {\n-                    partQuantity.put(replacement.getId(), replacement.getQuantity());\n+                if (null != replacement && null == partQuantity.get(replacement)) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -503,13 +503,14 @@ public class Refit extends Part implements IAcquisitionWork {\n                 Part replacement = ((MissingPart)nPart).findReplacement(true);\n                 //check quantity\n                 //TODO: the one weakness here is that we will not pick up damaged parts\n-                if (null != replacement && null == partQuantity.get(replacement)) {\n+                if ((null != replacement) && (null == partQuantity.get(replacement))) {\n                     partQuantity.put(replacement, replacement.getQuantity());\n                 }\n-                if (null != replacement && partQuantity.get(replacement) > 0) {\n+\n+                if ((null != replacement) && (partQuantity.get(replacement) > 0)) {\n                     newUnitParts.add(replacement);\n                     //adjust quantity\n-                    partQuantity.put(replacement, partQuantity.get(replacement)-1);\n+                    partQuantity.put(replacement, partQuantity.get(replacement) - 1);\n                     //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                     if (partQuantity.get(replacement) == 0) {\n                         replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQyMQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293421", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (null != replacement && partQuantity.get(replacement) > 0) {\n          \n          \n            \n            \n          \n          \n            \n                            if ((null != replacement) && (partQuantity.get(replacement) > 0)) {", "author": "Windchild292", "createdAt": "2020-10-04T22:00:51Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -508,15 +503,15 @@ public void calculate() {\n                 Part replacement = ((MissingPart)nPart).findReplacement(true);\n                 //check quantity\n                 //TODO: the one weakness here is that we will not pick up damaged parts\n-                if (null != replacement && null == partQuantity.get(replacement.getId())) {\n-                    partQuantity.put(replacement.getId(), replacement.getQuantity());\n+                if (null != replacement && null == partQuantity.get(replacement)) {\n+                    partQuantity.put(replacement, replacement.getQuantity());\n                 }\n-                if (null != replacement && partQuantity.get(replacement.getId()) > 0) {\n-                    newUnitParts.add(replacement.getId());\n+                if (null != replacement && partQuantity.get(replacement) > 0) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -503,13 +503,14 @@ public class Refit extends Part implements IAcquisitionWork {\n                 Part replacement = ((MissingPart)nPart).findReplacement(true);\n                 //check quantity\n                 //TODO: the one weakness here is that we will not pick up damaged parts\n-                if (null != replacement && null == partQuantity.get(replacement)) {\n+                if ((null != replacement) && (null == partQuantity.get(replacement))) {\n                     partQuantity.put(replacement, replacement.getQuantity());\n                 }\n-                if (null != replacement && partQuantity.get(replacement) > 0) {\n+\n+                if ((null != replacement) && (partQuantity.get(replacement) > 0)) {\n                     newUnitParts.add(replacement);\n                     //adjust quantity\n-                    partQuantity.put(replacement, partQuantity.get(replacement)-1);\n+                    partQuantity.put(replacement, partQuantity.get(replacement) - 1);\n                     //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                     if (partQuantity.get(replacement) == 0) {\n                         replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQ1OQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293459", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                partQuantity.put(replacement, partQuantity.get(replacement)-1);\n          \n          \n            \n                                partQuantity.put(replacement, partQuantity.get(replacement) - 1);", "author": "Windchild292", "createdAt": "2020-10-04T22:01:19Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -508,15 +503,15 @@ public void calculate() {\n                 Part replacement = ((MissingPart)nPart).findReplacement(true);\n                 //check quantity\n                 //TODO: the one weakness here is that we will not pick up damaged parts\n-                if (null != replacement && null == partQuantity.get(replacement.getId())) {\n-                    partQuantity.put(replacement.getId(), replacement.getQuantity());\n+                if (null != replacement && null == partQuantity.get(replacement)) {\n+                    partQuantity.put(replacement, replacement.getQuantity());\n                 }\n-                if (null != replacement && partQuantity.get(replacement.getId()) > 0) {\n-                    newUnitParts.add(replacement.getId());\n+                if (null != replacement && partQuantity.get(replacement) > 0) {\n+                    newUnitParts.add(replacement);\n                     //adjust quantity\n-                    partQuantity.put(replacement.getId(), partQuantity.get(replacement.getId())-1);\n+                    partQuantity.put(replacement, partQuantity.get(replacement)-1);", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -503,13 +503,14 @@ public class Refit extends Part implements IAcquisitionWork {\n                 Part replacement = ((MissingPart)nPart).findReplacement(true);\n                 //check quantity\n                 //TODO: the one weakness here is that we will not pick up damaged parts\n-                if (null != replacement && null == partQuantity.get(replacement)) {\n+                if ((null != replacement) && (null == partQuantity.get(replacement))) {\n                     partQuantity.put(replacement, replacement.getQuantity());\n                 }\n-                if (null != replacement && partQuantity.get(replacement) > 0) {\n+\n+                if ((null != replacement) && (partQuantity.get(replacement) > 0)) {\n                     newUnitParts.add(replacement);\n                     //adjust quantity\n-                    partQuantity.put(replacement, partQuantity.get(replacement)-1);\n+                    partQuantity.put(replacement, partQuantity.get(replacement) - 1);\n                     //If the quantity is now 0 set usedForRefitPlanning flag so findReplacement ignores this item\n                     if (partQuantity.get(replacement) == 0) {\n                         replacement.setUsedForRefitPlanning(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQ4MA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293480", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (null != replacement && null == partQuantity.get(replacement)) {\n          \n          \n            \n                                if ((null != replacement) && (null == partQuantity.get(replacement))) {", "author": "Windchild292", "createdAt": "2020-10-04T22:01:41Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -554,15 +549,15 @@ public void calculate() {\n                     Part replacement = mab.findReplacement(true);\n                     //check quantity\n                     //TODO: the one weakness here is that we will not pick up damaged parts\n-                    if (null != replacement && null == partQuantity.get(replacement.getId())) {\n-                        partQuantity.put(replacement.getId(), replacement.getQuantity());\n+                    if (null != replacement && null == partQuantity.get(replacement)) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -549,10 +550,11 @@ public class Refit extends Part implements IAcquisitionWork {\n                     Part replacement = mab.findReplacement(true);\n                     //check quantity\n                     //TODO: the one weakness here is that we will not pick up damaged parts\n-                    if (null != replacement && null == partQuantity.get(replacement)) {\n+                    if ((null != replacement) && (null == partQuantity.get(replacement))) {\n                         partQuantity.put(replacement, replacement.getQuantity());\n                     }\n-                    if (null != replacement && partQuantity.get(replacement) > 0) {\n+\n+                    if ((null != replacement) && (partQuantity.get(replacement) > 0)) {\n                         newUnitParts.add(replacement);\n                         //adjust quantity\n                         partQuantity.put(replacement, partQuantity.get(replacement)-1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzUwOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293509", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (null != replacement && partQuantity.get(replacement) > 0) {\n          \n          \n            \n            \n          \n          \n            \n                                if ((null != replacement) && (partQuantity.get(replacement) > 0)) {", "author": "Windchild292", "createdAt": "2020-10-04T22:01:59Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -554,15 +549,15 @@ public void calculate() {\n                     Part replacement = mab.findReplacement(true);\n                     //check quantity\n                     //TODO: the one weakness here is that we will not pick up damaged parts\n-                    if (null != replacement && null == partQuantity.get(replacement.getId())) {\n-                        partQuantity.put(replacement.getId(), replacement.getQuantity());\n+                    if (null != replacement && null == partQuantity.get(replacement)) {\n+                        partQuantity.put(replacement, replacement.getQuantity());\n                     }\n-                    if (null != replacement && partQuantity.get(replacement.getId()) > 0) {\n-                        newUnitParts.add(replacement.getId());\n+                    if (null != replacement && partQuantity.get(replacement) > 0) {", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -549,10 +550,11 @@ public class Refit extends Part implements IAcquisitionWork {\n                     Part replacement = mab.findReplacement(true);\n                     //check quantity\n                     //TODO: the one weakness here is that we will not pick up damaged parts\n-                    if (null != replacement && null == partQuantity.get(replacement)) {\n+                    if ((null != replacement) && (null == partQuantity.get(replacement))) {\n                         partQuantity.put(replacement, replacement.getQuantity());\n                     }\n-                    if (null != replacement && partQuantity.get(replacement) > 0) {\n+\n+                    if ((null != replacement) && (partQuantity.get(replacement) > 0)) {\n                         newUnitParts.add(replacement);\n                         //adjust quantity\n                         partQuantity.put(replacement, partQuantity.get(replacement)-1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzcwNw==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293707", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        && (null == newArmorSupplies || (armorNeeded - newArmorSupplies.getAmount()) <= 0);\n          \n          \n            \n                        && ((null == newArmorSupplies) || (armorNeeded - newArmorSupplies.getAmount()) <= 0);", "author": "Windchild292", "createdAt": "2020-10-04T22:04:43Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1214,7 +1224,8 @@ public boolean acquireParts() {\n             return false;\n         }\n \n-        return shoppingList.size() == 0 && !missingAmmo && (null == newArmorSupplies || (armorNeeded - newArmorSupplies.getAmount()) <= 0);\n+        return shoppingList.size() == 0\n+            && (null == newArmorSupplies || (armorNeeded - newArmorSupplies.getAmount()) <= 0);", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1225,7 +1227,7 @@ public class Refit extends Part implements IAcquisitionWork {\n         }\n \n         return shoppingList.size() == 0\n-            && (null == newArmorSupplies || (armorNeeded - newArmorSupplies.getAmount()) <= 0);\n+            && ((null == newArmorSupplies) || (armorNeeded - newArmorSupplies.getAmount()) <= 0);\n     }\n \n     public void checkForArmorSupplies() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzczMg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293732", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            AmmoStorage ammoStorage = (AmmoStorage)part;\n          \n          \n            \n                            AmmoStorage ammoStorage = (AmmoStorage) part;", "author": "Windchild292", "createdAt": "2020-10-04T22:04:56Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1276,13 +1275,20 @@ private void updateRefitClass(int rClass) {\n \n     public void cancel() {\n         oldUnit.setRefit(null);\n-        for (int pid : newUnitParts) {\n-            Part part = oldUnit.getCampaign().getPart(pid);\n-            if (null == part) {\n-                MekHQ.getLogger().error(this, \"part with id \" + pid + \" not found for refit of \" + getDesc());\n-                continue;\n+\n+        // Return our reserved ammo back to the campaign\n+        for (Part part : newUnitParts) {\n+            if (part instanceof AmmoStorage) {\n+                // merge back into the campaign\n+                AmmoStorage ammoStorage = (AmmoStorage)part;", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1280,8 +1282,8 @@ public class Refit extends Part implements IAcquisitionWork {\n         for (Part part : newUnitParts) {\n             if (part instanceof AmmoStorage) {\n                 // merge back into the campaign\n-                AmmoStorage ammoStorage = (AmmoStorage)part;\n-                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());\n+                AmmoStorage ammoStorage = (AmmoStorage) part;\n+                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType) ammoStorage.getType());\n                 oldUnit.getCampaign().removePart(part);\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc3Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293772", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());\n          \n          \n            \n                            AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType) ammoStorage.getType());", "author": "Windchild292", "createdAt": "2020-10-04T22:05:04Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1276,13 +1275,20 @@ private void updateRefitClass(int rClass) {\n \n     public void cancel() {\n         oldUnit.setRefit(null);\n-        for (int pid : newUnitParts) {\n-            Part part = oldUnit.getCampaign().getPart(pid);\n-            if (null == part) {\n-                MekHQ.getLogger().error(this, \"part with id \" + pid + \" not found for refit of \" + getDesc());\n-                continue;\n+\n+        // Return our reserved ammo back to the campaign\n+        for (Part part : newUnitParts) {\n+            if (part instanceof AmmoStorage) {\n+                // merge back into the campaign\n+                AmmoStorage ammoStorage = (AmmoStorage)part;\n+                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1280,8 +1282,8 @@ public class Refit extends Part implements IAcquisitionWork {\n         for (Part part : newUnitParts) {\n             if (part instanceof AmmoStorage) {\n                 // merge back into the campaign\n-                AmmoStorage ammoStorage = (AmmoStorage)part;\n-                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());\n+                AmmoStorage ammoStorage = (AmmoStorage) part;\n+                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType) ammoStorage.getType());\n                 oldUnit.getCampaign().removePart(part);\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzgxOQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499293819", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            AmmoStorage ammoStorage = (AmmoStorage)part;\n          \n          \n            \n                            AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());\n          \n          \n            \n                            AmmoStorage ammoStorage = (AmmoStorage) part;\n          \n          \n            \n                            AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType) ammoStorage.getType());", "author": "Windchild292", "createdAt": "2020-10-04T22:05:42Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -1465,6 +1458,12 @@ else if ((part instanceof AeroHeatSink) && (newEntity instanceof Aero) && !part.\n                     oldUnit.getCampaign().removePart(part);\n                     continue;\n                 }\n+            } else if (part instanceof AmmoStorage) {\n+                // merge back into the campaign before completing the refit\n+                AmmoStorage ammoStorage = (AmmoStorage)part;\n+                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -1460,8 +1462,8 @@ public class Refit extends Part implements IAcquisitionWork {\n                 }\n             } else if (part instanceof AmmoStorage) {\n                 // merge back into the campaign before completing the refit\n-                AmmoStorage ammoStorage = (AmmoStorage)part;\n-                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType)ammoStorage.getType());\n+                AmmoStorage ammoStorage = (AmmoStorage) part;\n+                AmmoBin.changeAmountAvailable(campaign, ammoStorage.getShots(), (AmmoType) ammoStorage.getType());\n                 oldUnit.getCampaign().removePart(part);\n                 continue;\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5NDAwMA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499294000", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            newArmorSupplies = (Armor)realPart;\n          \n          \n            \n                            newArmorSupplies = (Armor) realPart;", "author": "Windchild292", "createdAt": "2020-10-04T22:08:20Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -2589,4 +2581,166 @@ public boolean isIntroducedBy(int year, boolean clan, int techFaction) {\n     public boolean isExtinctIn(int year, boolean clan, int techFaction) {\n         return isExtinct(year, clan, techFaction);\n     }\n+\n+    @Override\n+    public void fixupPartReferences(Map<Integer, Part> knownParts) {\n+        if (newArmorSupplies instanceof RefitArmorRef) {\n+            Part realPart = knownParts.get(newArmorSupplies.getId());\n+            if (realPart instanceof Armor) {\n+                newArmorSupplies = (Armor)realPart;", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -2587,9 +2589,9 @@ public class Refit extends Part implements IAcquisitionWork {\n         if (newArmorSupplies instanceof RefitArmorRef) {\n             Part realPart = knownParts.get(newArmorSupplies.getId());\n             if (realPart instanceof Armor) {\n-                newArmorSupplies = (Armor)realPart;\n+                newArmorSupplies = (Armor) realPart;\n             } else {\n-                MekHQ.getLogger().error(RefitArmorRef.class,\n+                MekHQ.getLogger().error(\n                     String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n                         getRefitId(), getUnitId(), newArmorSupplies.getId()));\n                 newArmorSupplies = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5NDAxMg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499294012", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            MekHQ.getLogger().error(RefitArmorRef.class,\n          \n          \n            \n                            MekHQ.getLogger().error(", "author": "Windchild292", "createdAt": "2020-10-04T22:08:27Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -2589,4 +2581,166 @@ public boolean isIntroducedBy(int year, boolean clan, int techFaction) {\n     public boolean isExtinctIn(int year, boolean clan, int techFaction) {\n         return isExtinct(year, clan, techFaction);\n     }\n+\n+    @Override\n+    public void fixupPartReferences(Map<Integer, Part> knownParts) {\n+        if (newArmorSupplies instanceof RefitArmorRef) {\n+            Part realPart = knownParts.get(newArmorSupplies.getId());\n+            if (realPart instanceof Armor) {\n+                newArmorSupplies = (Armor)realPart;\n+            } else {\n+                MekHQ.getLogger().error(RefitArmorRef.class,", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -2587,9 +2589,9 @@ public class Refit extends Part implements IAcquisitionWork {\n         if (newArmorSupplies instanceof RefitArmorRef) {\n             Part realPart = knownParts.get(newArmorSupplies.getId());\n             if (realPart instanceof Armor) {\n-                newArmorSupplies = (Armor)realPart;\n+                newArmorSupplies = (Armor) realPart;\n             } else {\n-                MekHQ.getLogger().error(RefitArmorRef.class,\n+                MekHQ.getLogger().error(\n                     String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n                         getRefitId(), getUnitId(), newArmorSupplies.getId()));\n                 newArmorSupplies = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5NDAzMA==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499294030", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                MekHQ.getLogger().error(RefitPartRef.class,\n          \n          \n            \n                                MekHQ.getLogger().error(", "author": "Windchild292", "createdAt": "2020-10-04T22:08:40Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -2589,4 +2581,166 @@ public boolean isIntroducedBy(int year, boolean clan, int techFaction) {\n     public boolean isExtinctIn(int year, boolean clan, int techFaction) {\n         return isExtinct(year, clan, techFaction);\n     }\n+\n+    @Override\n+    public void fixupPartReferences(Map<Integer, Part> knownParts) {\n+        if (newArmorSupplies instanceof RefitArmorRef) {\n+            Part realPart = knownParts.get(newArmorSupplies.getId());\n+            if (realPart instanceof Armor) {\n+                newArmorSupplies = (Armor)realPart;\n+            } else {\n+                MekHQ.getLogger().error(RefitArmorRef.class,\n+                    String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n+                        getRefitId(), getUnitId(), newArmorSupplies.getId()));\n+                newArmorSupplies = null;\n+            }\n+        }\n+\n+        for (int ii = oldUnitParts.size() - 1; ii >= 0; --ii) {\n+            Part part = oldUnitParts.get(ii);\n+            if (part instanceof RefitPartRef) {\n+                Part realPart = knownParts.get(part.getId());\n+                if (realPart != null) {\n+                    oldUnitParts.set(ii, realPart);\n+                } else if (part.getId() > 0) {\n+                    MekHQ.getLogger().error(RefitPartRef.class,", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -2587,9 +2589,9 @@ public class Refit extends Part implements IAcquisitionWork {\n         if (newArmorSupplies instanceof RefitArmorRef) {\n             Part realPart = knownParts.get(newArmorSupplies.getId());\n             if (realPart instanceof Armor) {\n-                newArmorSupplies = (Armor)realPart;\n+                newArmorSupplies = (Armor) realPart;\n             } else {\n-                MekHQ.getLogger().error(RefitArmorRef.class,\n+                MekHQ.getLogger().error(\n                     String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n                         getRefitId(), getUnitId(), newArmorSupplies.getId()));\n                 newArmorSupplies = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5NDA1MQ==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499294051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                MekHQ.getLogger().error(RefitPartRef.class,\n          \n          \n            \n                                MekHQ.getLogger().error(", "author": "Windchild292", "createdAt": "2020-10-04T22:08:55Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -2589,4 +2581,166 @@ public boolean isIntroducedBy(int year, boolean clan, int techFaction) {\n     public boolean isExtinctIn(int year, boolean clan, int techFaction) {\n         return isExtinct(year, clan, techFaction);\n     }\n+\n+    @Override\n+    public void fixupPartReferences(Map<Integer, Part> knownParts) {\n+        if (newArmorSupplies instanceof RefitArmorRef) {\n+            Part realPart = knownParts.get(newArmorSupplies.getId());\n+            if (realPart instanceof Armor) {\n+                newArmorSupplies = (Armor)realPart;\n+            } else {\n+                MekHQ.getLogger().error(RefitArmorRef.class,\n+                    String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n+                        getRefitId(), getUnitId(), newArmorSupplies.getId()));\n+                newArmorSupplies = null;\n+            }\n+        }\n+\n+        for (int ii = oldUnitParts.size() - 1; ii >= 0; --ii) {\n+            Part part = oldUnitParts.get(ii);\n+            if (part instanceof RefitPartRef) {\n+                Part realPart = knownParts.get(part.getId());\n+                if (realPart != null) {\n+                    oldUnitParts.set(ii, realPart);\n+                } else if (part.getId() > 0) {\n+                    MekHQ.getLogger().error(RefitPartRef.class,\n+                        String.format(\"Refit %s (Unit: %s) references missing old unit part %d\",\n+                            getRefitId(), getUnitId(), part.getId()));\n+                    oldUnitParts.remove(ii);\n+                }\n+            }\n+        }\n+\n+        for (int ii = newUnitParts.size() - 1; ii >= 0; --ii) {\n+            Part part = newUnitParts.get(ii);\n+            if (part instanceof RefitPartRef) {\n+                Part realPart = knownParts.get(part.getId());\n+                if (realPart != null) {\n+                    newUnitParts.set(ii, realPart);\n+                } else if (part.getId() > 0) {\n+                    MekHQ.getLogger().error(RefitPartRef.class,", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -2587,9 +2589,9 @@ public class Refit extends Part implements IAcquisitionWork {\n         if (newArmorSupplies instanceof RefitArmorRef) {\n             Part realPart = knownParts.get(newArmorSupplies.getId());\n             if (realPart instanceof Armor) {\n-                newArmorSupplies = (Armor)realPart;\n+                newArmorSupplies = (Armor) realPart;\n             } else {\n-                MekHQ.getLogger().error(RefitArmorRef.class,\n+                MekHQ.getLogger().error(\n                     String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n                         getRefitId(), getUnitId(), newArmorSupplies.getId()));\n                 newArmorSupplies = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5NDA2Mg==", "url": "https://github.com/MegaMek/mekhq/pull/2105#discussion_r499294062", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                MekHQ.getLogger().error(RefitPartRef.class,\n          \n          \n            \n                                MekHQ.getLogger().error(", "author": "Windchild292", "createdAt": "2020-10-04T22:09:07Z", "path": "MekHQ/src/mekhq/campaign/parts/Refit.java", "diffHunk": "@@ -2589,4 +2581,166 @@ public boolean isIntroducedBy(int year, boolean clan, int techFaction) {\n     public boolean isExtinctIn(int year, boolean clan, int techFaction) {\n         return isExtinct(year, clan, techFaction);\n     }\n+\n+    @Override\n+    public void fixupPartReferences(Map<Integer, Part> knownParts) {\n+        if (newArmorSupplies instanceof RefitArmorRef) {\n+            Part realPart = knownParts.get(newArmorSupplies.getId());\n+            if (realPart instanceof Armor) {\n+                newArmorSupplies = (Armor)realPart;\n+            } else {\n+                MekHQ.getLogger().error(RefitArmorRef.class,\n+                    String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n+                        getRefitId(), getUnitId(), newArmorSupplies.getId()));\n+                newArmorSupplies = null;\n+            }\n+        }\n+\n+        for (int ii = oldUnitParts.size() - 1; ii >= 0; --ii) {\n+            Part part = oldUnitParts.get(ii);\n+            if (part instanceof RefitPartRef) {\n+                Part realPart = knownParts.get(part.getId());\n+                if (realPart != null) {\n+                    oldUnitParts.set(ii, realPart);\n+                } else if (part.getId() > 0) {\n+                    MekHQ.getLogger().error(RefitPartRef.class,\n+                        String.format(\"Refit %s (Unit: %s) references missing old unit part %d\",\n+                            getRefitId(), getUnitId(), part.getId()));\n+                    oldUnitParts.remove(ii);\n+                }\n+            }\n+        }\n+\n+        for (int ii = newUnitParts.size() - 1; ii >= 0; --ii) {\n+            Part part = newUnitParts.get(ii);\n+            if (part instanceof RefitPartRef) {\n+                Part realPart = knownParts.get(part.getId());\n+                if (realPart != null) {\n+                    newUnitParts.set(ii, realPart);\n+                } else if (part.getId() > 0) {\n+                    MekHQ.getLogger().error(RefitPartRef.class,\n+                        String.format(\"Refit %s (Unit: %s) references missing new unit part %d\",\n+                            getRefitId(), getUnitId(), part.getId()));\n+                    newUnitParts.remove(ii);\n+                }\n+            }\n+        }\n+\n+        List<Part> realParts = new ArrayList<>();\n+        Iterator<Part> it = lcBinsToChange.iterator();\n+        while (it.hasNext()) {\n+            Part part = it.next();\n+            if (part instanceof RefitPartRef) {\n+                Part realPart = knownParts.get(part.getId());\n+                it.remove();\n+                if (realPart != null) {\n+                    realParts.add(realPart);\n+                } else {\n+                    MekHQ.getLogger().error(RefitPartRef.class,", "originalCommit": "a813ac22fa818f4926651115303b2c7bae26c8e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "407bad67e01c0d3483e5cc23025f4043c2634fef", "chunk": "diff --git a/MekHQ/src/mekhq/campaign/parts/Refit.java b/MekHQ/src/mekhq/campaign/parts/Refit.java\nindex 8ad769327..5230a792d 100644\n--- a/MekHQ/src/mekhq/campaign/parts/Refit.java\n+++ b/MekHQ/src/mekhq/campaign/parts/Refit.java\n\n@@ -2587,9 +2589,9 @@ public class Refit extends Part implements IAcquisitionWork {\n         if (newArmorSupplies instanceof RefitArmorRef) {\n             Part realPart = knownParts.get(newArmorSupplies.getId());\n             if (realPart instanceof Armor) {\n-                newArmorSupplies = (Armor)realPart;\n+                newArmorSupplies = (Armor) realPart;\n             } else {\n-                MekHQ.getLogger().error(RefitArmorRef.class,\n+                MekHQ.getLogger().error(\n                     String.format(\"Refit %s (Unit: %s) references missing armor supplies %d\",\n                         getRefitId(), getUnitId(), newArmorSupplies.getId()));\n                 newArmorSupplies = null;\n"}}, {"oid": "407bad67e01c0d3483e5cc23025f4043c2634fef", "url": "https://github.com/MegaMek/mekhq/commit/407bad67e01c0d3483e5cc23025f4043c2634fef", "message": "Apply suggestions from code review\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-10-05T02:22:50Z", "type": "commit"}, {"oid": "882a7efc10b211821ddcdab1e09aed00268f3922", "url": "https://github.com/MegaMek/mekhq/commit/882a7efc10b211821ddcdab1e09aed00268f3922", "message": "Fix space vs tabs", "committedDate": "2020-10-05T18:12:04Z", "type": "commit"}, {"oid": "7e8b82f1215558b045ed983d9aa288f829adb6e5", "url": "https://github.com/MegaMek/mekhq/commit/7e8b82f1215558b045ed983d9aa288f829adb6e5", "message": "Merge remote-tracking branch 'upstream/master' into avoid-part-id-references", "committedDate": "2020-10-05T18:14:16Z", "type": "commit"}]}