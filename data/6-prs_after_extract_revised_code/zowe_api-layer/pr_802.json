{"pr_number": 802, "pr_title": "Rip/ta16215/x509 spring security", "pr_createdAt": "2020-08-25T12:04:35Z", "pr_url": "https://github.com/zowe/api-layer/pull/802", "timeline": [{"oid": "f999a46f9d738463332e22903dbce1b448ed5ae3", "url": "https://github.com/zowe/api-layer/commit/f999a46f9d738463332e22903dbce1b448ed5ae3", "message": "initial x509 auth implementation\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-21T07:40:30Z", "type": "commit"}, {"oid": "ab392219e4f3cb859e886aad1942632c6b42113b", "url": "https://github.com/zowe/api-layer/commit/ab392219e4f3cb859e886aad1942632c6b42113b", "message": "separate x509 login filter\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-21T09:29:20Z", "type": "commit"}, {"oid": "0f7d0e9b054803b0791bea2d9bcd594980dd3933", "url": "https://github.com/zowe/api-layer/commit/0f7d0e9b054803b0791bea2d9bcd594980dd3933", "message": "client CA and cert for testing\n\nSigned-off-by: jandadav <janda.david@gmail.com>", "committedDate": "2020-08-21T12:23:17Z", "type": "commit"}, {"oid": "67b0c6b40f22a8770c764b124ddcf3d0d7cbf255", "url": "https://github.com/zowe/api-layer/commit/67b0c6b40f22a8770c764b124ddcf3d0d7cbf255", "message": "fail/success handler for x509\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-21T12:51:50Z", "type": "commit"}, {"oid": "6da8520cf53e39ac0fd4af95d720df9cf7b92efc", "url": "https://github.com/zowe/api-layer/commit/6da8520cf53e39ac0fd4af95d720df9cf7b92efc", "message": "filter order\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-21T12:53:51Z", "type": "commit"}, {"oid": "2bb24f2d47021c01c75befe6960df0c77a90ac66", "url": "https://github.com/zowe/api-layer/commit/2bb24f2d47021c01c75befe6960df0c77a90ac66", "message": "Merge remote-tracking branch 'origin/rip/TA16215/x509_spring_security' into rip/TA16215/x509_spring_security", "committedDate": "2020-08-21T12:54:05Z", "type": "commit"}, {"oid": "2a087c35f65ed93647afc476e05224895acdb754", "url": "https://github.com/zowe/api-layer/commit/2a087c35f65ed93647afc476e05224895acdb754", "message": "Initial commit for the client X509 test. This code will be refactored upon completion of implementation of feature. Need to add more assertions to this test class.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-08-21T12:54:32Z", "type": "commit"}, {"oid": "c3d6015a3e14b839b91ad8f0f60662dc93e7000c", "url": "https://github.com/zowe/api-layer/commit/c3d6015a3e14b839b91ad8f0f60662dc93e7000c", "message": "Merge branch 'rip/TA16215/x509_spring_security' of github.com:zowe/api-layer into rip/TA16215/x509_spring_security\nPulling in changes from origin", "committedDate": "2020-08-21T12:55:46Z", "type": "commit"}, {"oid": "a40bde7c59c6252c075b58fdc771f8994862b377", "url": "https://github.com/zowe/api-layer/commit/a40bde7c59c6252c075b58fdc771f8994862b377", "message": "Refactor the X509ClientCert test to use restAssured.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-08-24T07:47:13Z", "type": "commit"}, {"oid": "5d84b2b1b928c7646cd75e07adfe0433ba2de509", "url": "https://github.com/zowe/api-layer/commit/5d84b2b1b928c7646cd75e07adfe0433ba2de509", "message": "Refactor Login class.\n- Introduce login end point constant.\n\nSigned-off-by: ap891843 <aman.prashant@broadcom.com>", "committedDate": "2020-08-24T09:08:37Z", "type": "commit"}, {"oid": "1023f63540bda57fa8aa3f013dda5a9c7329bcfd", "url": "https://github.com/zowe/api-layer/commit/1023f63540bda57fa8aa3f013dda5a9c7329bcfd", "message": "unit tests for X509 auth\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-24T13:18:30Z", "type": "commit"}, {"oid": "6285413ceba31eb1f1d3cc8f11805ab436209cb5", "url": "https://github.com/zowe/api-layer/commit/6285413ceba31eb1f1d3cc8f11805ab436209cb5", "message": "Merge remote-tracking branch 'origin/rip/TA16215/x509_spring_security' into rip/TA16215/x509_spring_security", "committedDate": "2020-08-24T13:18:37Z", "type": "commit"}, {"oid": "e73c2964d0a8221d87ba13d6f656c5e251be7d93", "url": "https://github.com/zowe/api-layer/commit/e73c2964d0a8221d87ba13d6f656c5e251be7d93", "message": "set new attribute for client cert, new keystore to test the x509 login\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-25T11:59:49Z", "type": "commit"}, {"oid": "1e8a93e2a626ef4e482d32aa1f831668c075512d", "url": "https://github.com/zowe/api-layer/commit/1e8a93e2a626ef4e482d32aa1f831668c075512d", "message": "fix code smells/bugs\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-25T14:39:12Z", "type": "commit"}, {"oid": "be5da822cafed40b94d497757e2f297a0357a0ad", "url": "https://github.com/zowe/api-layer/commit/be5da822cafed40b94d497757e2f297a0357a0ad", "message": "add tests\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-25T18:55:03Z", "type": "commit"}, {"oid": "0667476ab5585887a27551061aea7ded2942f6dd", "url": "https://github.com/zowe/api-layer/commit/0667476ab5585887a27551061aea7ded2942f6dd", "message": "code coverage\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T07:06:49Z", "type": "commit"}, {"oid": "ad398523339a0ac5af71e33b55204c737e6ce278", "url": "https://github.com/zowe/api-layer/commit/ad398523339a0ac5af71e33b55204c737e6ce278", "message": "verify if cert is client auth\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T07:45:04Z", "type": "commit"}, {"oid": "9ad7a6ccc03d8bed12b3c380a1046faddd705f19", "url": "https://github.com/zowe/api-layer/commit/9ad7a6ccc03d8bed12b3c380a1046faddd705f19", "message": "do not accept zowe service certificate for client auth\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T11:17:41Z", "type": "commit"}, {"oid": "6277ebe2eba82cf82aff5a9fa043b0def181b327", "url": "https://github.com/zowe/api-layer/commit/6277ebe2eba82cf82aff5a9fa043b0def181b327", "message": "move ssl config to test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T11:31:14Z", "type": "commit"}, {"oid": "1d2942e76935622a46d31be0aa3cc91c5303b5be", "url": "https://github.com/zowe/api-layer/commit/1d2942e76935622a46d31be0aa3cc91c5303b5be", "message": "remove redundant try/catch\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T12:11:38Z", "type": "commit"}, {"oid": "1fd7d592ba7f61f36a2dfb3943c2f03fe05b21ad", "url": "https://github.com/zowe/api-layer/commit/1fd7d592ba7f61f36a2dfb3943c2f03fe05b21ad", "message": "sort certificates\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T14:02:39Z", "type": "commit"}, {"oid": "2dcba27a992b6dc3a2fa156c7f33b01a5cbff5be", "url": "https://github.com/zowe/api-layer/commit/2dcba27a992b6dc3a2fa156c7f33b01a5cbff5be", "message": "cert auth only for specific cert\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T19:26:10Z", "type": "commit"}, {"oid": "4d4e8e8616d0c41968e8e3c8e0953b71eca13c03", "url": "https://github.com/zowe/api-layer/commit/4d4e8e8616d0c41968e8e3c8e0953b71eca13c03", "message": "prevent null pointer\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-26T20:36:57Z", "type": "commit"}, {"oid": "13e7c79d849a58f97410ffba03c2f52b6923cf67", "url": "https://github.com/zowe/api-layer/commit/13e7c79d849a58f97410ffba03c2f52b6923cf67", "message": "styles\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-27T05:19:12Z", "type": "commit"}, {"oid": "42a9cb29bee3863d0ac0560e783b5be70b7a667b", "url": "https://github.com/zowe/api-layer/commit/42a9cb29bee3863d0ac0560e783b5be70b7a667b", "message": "remove username condition\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-27T08:38:50Z", "type": "commit"}, {"oid": "6d7ea6e0dbf04165eb45e30c1ffb1cba7bfdaf56", "url": "https://github.com/zowe/api-layer/commit/6d7ea6e0dbf04165eb45e30c1ffb1cba7bfdaf56", "message": "log username from certificate\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-27T12:37:33Z", "type": "commit"}, {"oid": "25a084aa5b223e18e175c498900c1e0ce34b52f7", "url": "https://github.com/zowe/api-layer/commit/25a084aa5b223e18e175c498900c1e0ce34b52f7", "message": "return null if username is null\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-27T14:58:38Z", "type": "commit"}, {"oid": "b4fb5f91f1acc35184b41a51ba1bb81c838a173c", "url": "https://github.com/zowe/api-layer/commit/b4fb5f91f1acc35184b41a51ba1bb81c838a173c", "message": "new tests, remove log msgs\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-28T06:44:02Z", "type": "commit"}, {"oid": "8d8651953fb2c616ddfb87c4e852e04cf339e4f1", "url": "https://github.com/zowe/api-layer/commit/8d8651953fb2c616ddfb87c4e852e04cf339e4f1", "message": "Merge branch 'master' into rip/TA16215/x509_spring_security", "committedDate": "2020-08-28T07:29:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk5NDk3Mw==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r478994973", "bodyText": "This class makes my brain hurt. The code is working but it could be made more readable, and the javadoc could use an update.", "author": "jandadav", "createdAt": "2020-08-28T09:11:17Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java", "diffHunk": "@@ -35,26 +34,28 @@\n \n     /**\n      * Filter certificated by allowed - see publicKeyCertificatesBase64\n+     *\n      * @param certs all certificated to filter\n      * @return filtered certificates (certs), contains only certificated used to sign in APIML\n      */\n-    private X509Certificate[] filter(X509Certificate[] certs) {\n-        return Arrays.stream(certs)\n-            .filter(x -> publicKeyCertificatesBase64.contains(\n-                Base64.getEncoder().encodeToString(x.getPublicKey().getEncoded())\n-            ))\n-            .toArray(X509Certificate[]::new);\n+    private Map<Boolean, List<X509Certificate>> filter(X509Certificate[] certs) {\n+        return Arrays.stream(certs).collect(Collectors.partitioningBy(cer -> publicKeyCertificatesBase64.contains(Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded()))));\n     }\n \n     /**\n      * Get certificates from request (if exists), filter them (to use only APIML certificate to request sign) and\n      * store again into request.\n+     *\n      * @param request Request to filter certificates\n      */\n     private void filterCerts(ServletRequest request) {\n         X509Certificate[] certs = (X509Certificate[]) request.getAttribute(\"javax.servlet.request.X509Certificate\");\n         if (certs != null) {\n-            certs = filter(certs);\n+            Map<Boolean, List<X509Certificate>> separatedCerts = filter(certs);\n+            X509Certificate[] clientAuthCerts = new X509Certificate[separatedCerts.get(false).size()];\n+            request.setAttribute(\"client.auth.X509Certificate\", separatedCerts.get(false).toArray(clientAuthCerts));\n+            X509Certificate[] zoweCerts = new X509Certificate[separatedCerts.get(true).size()];\n+            certs = separatedCerts.get(true).toArray(zoweCerts);", "originalCommit": "8d8651953fb2c616ddfb87c4e852e04cf339e4f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk5NjQyNw==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r478996427", "bodyText": "maybe it's just me : )", "author": "jandadav", "createdAt": "2020-08-28T09:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk5NDk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA3MTI2OA==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479071268", "bodyText": "I feel the same way", "author": "balhar-jakub", "createdAt": "2020-08-28T10:10:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk5NDk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NDY2NA==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479294664", "bodyText": "It's now refactored for readability", "author": "jandadav", "createdAt": "2020-08-28T13:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODk5NDk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "338aa16b1cb977936d05a21b4047f1311766485d", "chunk": "diff --git a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\nsimilarity index 76%\nrename from gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java\nrename to gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\nindex 65b96ac7e..2272ab955 100644\n--- a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java\n+++ b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\n\n@@ -28,35 +28,39 @@ import java.util.stream.Collectors;\n  * Be careful with usage as later on it means that the set of original certificates won't be available.\n  */\n @RequiredArgsConstructor\n-public class ApimlX509AuthenticationFilter extends X509AuthenticationFilter {\n+public class ApimlX509Filter extends X509AuthenticationFilter {\n \n     private final Set<String> publicKeyCertificatesBase64;\n \n     /**\n-     * Filter certificated by allowed - see publicKeyCertificatesBase64\n-     *\n+     * Separate certificates into 2 lists by allowed - see publicKeyCertificatesBase64.\n+     *  List with key \"true\" are allowed and \"false\" not allowed certificates.\n      * @param certs all certificated to filter\n-     * @return filtered certificates (certs), contains only certificated used to sign in APIML\n+     * @return map of lists with separated certificates (certs)\n      */\n-    private Map<Boolean, List<X509Certificate>> filter(X509Certificate[] certs) {\n-        return Arrays.stream(certs).collect(Collectors.partitioningBy(cer -> publicKeyCertificatesBase64.contains(Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded()))));\n+    private Map<Boolean, List<X509Certificate>> partitionByAllowed(X509Certificate[] certs) {\n+        return Arrays.stream(certs).collect(Collectors.partitioningBy(\n+            cer -> publicKeyCertificatesBase64.contains(\n+                Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded())\n+            )\n+        ));\n     }\n \n     /**\n-     * Get certificates from request (if exists), filter them (to use only APIML certificate to request sign) and\n-     * store again into request.\n+     * Get certificates from request (if exists), separate them (to use only APIML certificate to request sign and\n+     * other for authentication) and store again into request.\n      *\n      * @param request Request to filter certificates\n      */\n     private void filterCerts(ServletRequest request) {\n         X509Certificate[] certs = (X509Certificate[]) request.getAttribute(\"javax.servlet.request.X509Certificate\");\n         if (certs != null) {\n-            Map<Boolean, List<X509Certificate>> separatedCerts = filter(certs);\n+            Map<Boolean, List<X509Certificate>> separatedCerts = partitionByAllowed(certs);\n             X509Certificate[] clientAuthCerts = new X509Certificate[separatedCerts.get(false).size()];\n             request.setAttribute(\"client.auth.X509Certificate\", separatedCerts.get(false).toArray(clientAuthCerts));\n             X509Certificate[] zoweCerts = new X509Certificate[separatedCerts.get(true).size()];\n-            certs = separatedCerts.get(true).toArray(zoweCerts);\n-            request.setAttribute(\"javax.servlet.request.X509Certificate\", certs);\n+            zoweCerts = separatedCerts.get(true).toArray(zoweCerts);\n+            request.setAttribute(\"javax.servlet.request.X509Certificate\", zoweCerts);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAwMDYyOQ==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479000629", "bodyText": "Don't you have the filter names reversed? X509Filter is doing authentication, the ApimlX509AuthenticationFilter is not doing authentication and yet the name suggests that.", "author": "jandadav", "createdAt": "2020-08-28T09:15:29Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509Filter.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.security.config;\n+\n+import org.springframework.security.authentication.AuthenticationProvider;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;\n+import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n+import org.zowe.apiml.security.common.token.X509AuthenticationToken;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.security.cert.X509Certificate;\n+\n+public class X509Filter extends AbstractAuthenticationProcessingFilter {", "originalCommit": "8d8651953fb2c616ddfb87c4e852e04cf339e4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "338aa16b1cb977936d05a21b4047f1311766485d", "chunk": "diff --git a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509Filter.java b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509AuthenticationFilter.java\nsimilarity index 90%\nrename from gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509Filter.java\nrename to gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509AuthenticationFilter.java\nindex 9e516e68f..6c84163dd 100644\n--- a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509Filter.java\n+++ b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/X509AuthenticationFilter.java\n\n@@ -24,15 +24,15 @@ import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n import java.security.cert.X509Certificate;\n \n-public class X509Filter extends AbstractAuthenticationProcessingFilter {\n+public class X509AuthenticationFilter extends AbstractAuthenticationProcessingFilter {\n \n     private final AuthenticationProvider authenticationProvider;\n     private final AuthenticationSuccessHandler successHandler;\n \n \n-    public X509Filter(String endpoint,\n-                      AuthenticationSuccessHandler successHandler,\n-                      AuthenticationProvider authenticationProvider) {\n+    public X509AuthenticationFilter(String endpoint,\n+                                    AuthenticationSuccessHandler successHandler,\n+                                    AuthenticationProvider authenticationProvider) {\n         super(endpoint);\n         this.authenticationProvider = authenticationProvider;\n         this.successHandler = successHandler;\n"}}, {"oid": "338aa16b1cb977936d05a21b4047f1311766485d", "url": "https://github.com/zowe/api-layer/commit/338aa16b1cb977936d05a21b4047f1311766485d", "message": "rename files, javadoc update, code changes\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>", "committedDate": "2020-08-28T11:21:41Z", "type": "commit"}, {"oid": "ceb3b393af7ca3e9f22551035a9b4dce76cc55e8", "url": "https://github.com/zowe/api-layer/commit/ceb3b393af7ca3e9f22551035a9b4dce76cc55e8", "message": "Merge branch 'master' into rip/TA16215/x509_spring_security", "committedDate": "2020-08-28T12:11:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA3MDE3OQ==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479070179", "bodyText": "Isn't ending of the tag  missing?", "author": "balhar-jakub", "createdAt": "2020-08-28T10:10:02Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java", "diffHunk": "@@ -18,14 +18,13 @@\n import javax.servlet.ServletResponse;\n import java.io.IOException;\n import java.security.cert.X509Certificate;\n-import java.util.Arrays;\n-import java.util.Base64;\n-import java.util.Set;\n+import java.util.*;\n+import java.util.stream.Collectors;\n \n /**\n  * This filter extends authentication via certificate. It removes all certificates signature from request which are not\n  * related to private key using to request signing.\n- *\n+ * <p>\n  * Be careful with usage as later on it means that the set of original certificates won't be available.", "originalCommit": "8d8651953fb2c616ddfb87c4e852e04cf339e4f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5Mzk1Mg==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479293952", "bodyText": "i removed it", "author": "jandadav", "createdAt": "2020-08-28T13:33:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA3MDE3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "338aa16b1cb977936d05a21b4047f1311766485d", "chunk": "diff --git a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\nsimilarity index 76%\nrename from gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java\nrename to gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\nindex 65b96ac7e..2272ab955 100644\n--- a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java\n+++ b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\n\n@@ -28,35 +28,39 @@ import java.util.stream.Collectors;\n  * Be careful with usage as later on it means that the set of original certificates won't be available.\n  */\n @RequiredArgsConstructor\n-public class ApimlX509AuthenticationFilter extends X509AuthenticationFilter {\n+public class ApimlX509Filter extends X509AuthenticationFilter {\n \n     private final Set<String> publicKeyCertificatesBase64;\n \n     /**\n-     * Filter certificated by allowed - see publicKeyCertificatesBase64\n-     *\n+     * Separate certificates into 2 lists by allowed - see publicKeyCertificatesBase64.\n+     *  List with key \"true\" are allowed and \"false\" not allowed certificates.\n      * @param certs all certificated to filter\n-     * @return filtered certificates (certs), contains only certificated used to sign in APIML\n+     * @return map of lists with separated certificates (certs)\n      */\n-    private Map<Boolean, List<X509Certificate>> filter(X509Certificate[] certs) {\n-        return Arrays.stream(certs).collect(Collectors.partitioningBy(cer -> publicKeyCertificatesBase64.contains(Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded()))));\n+    private Map<Boolean, List<X509Certificate>> partitionByAllowed(X509Certificate[] certs) {\n+        return Arrays.stream(certs).collect(Collectors.partitioningBy(\n+            cer -> publicKeyCertificatesBase64.contains(\n+                Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded())\n+            )\n+        ));\n     }\n \n     /**\n-     * Get certificates from request (if exists), filter them (to use only APIML certificate to request sign) and\n-     * store again into request.\n+     * Get certificates from request (if exists), separate them (to use only APIML certificate to request sign and\n+     * other for authentication) and store again into request.\n      *\n      * @param request Request to filter certificates\n      */\n     private void filterCerts(ServletRequest request) {\n         X509Certificate[] certs = (X509Certificate[]) request.getAttribute(\"javax.servlet.request.X509Certificate\");\n         if (certs != null) {\n-            Map<Boolean, List<X509Certificate>> separatedCerts = filter(certs);\n+            Map<Boolean, List<X509Certificate>> separatedCerts = partitionByAllowed(certs);\n             X509Certificate[] clientAuthCerts = new X509Certificate[separatedCerts.get(false).size()];\n             request.setAttribute(\"client.auth.X509Certificate\", separatedCerts.get(false).toArray(clientAuthCerts));\n             X509Certificate[] zoweCerts = new X509Certificate[separatedCerts.get(true).size()];\n-            certs = separatedCerts.get(true).toArray(zoweCerts);\n-            request.setAttribute(\"javax.servlet.request.X509Certificate\", certs);\n+            zoweCerts = separatedCerts.get(true).toArray(zoweCerts);\n+            request.setAttribute(\"javax.servlet.request.X509Certificate\", zoweCerts);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA3MDk1OQ==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479070959", "bodyText": "Is it possible at least to structure it in multiple lines?", "author": "balhar-jakub", "createdAt": "2020-08-28T10:10:43Z", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java", "diffHunk": "@@ -35,26 +34,28 @@\n \n     /**\n      * Filter certificated by allowed - see publicKeyCertificatesBase64\n+     *\n      * @param certs all certificated to filter\n      * @return filtered certificates (certs), contains only certificated used to sign in APIML\n      */\n-    private X509Certificate[] filter(X509Certificate[] certs) {\n-        return Arrays.stream(certs)\n-            .filter(x -> publicKeyCertificatesBase64.contains(\n-                Base64.getEncoder().encodeToString(x.getPublicKey().getEncoded())\n-            ))\n-            .toArray(X509Certificate[]::new);\n+    private Map<Boolean, List<X509Certificate>> filter(X509Certificate[] certs) {\n+        return Arrays.stream(certs).collect(Collectors.partitioningBy(cer -> publicKeyCertificatesBase64.contains(Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded()))));", "originalCommit": "8d8651953fb2c616ddfb87c4e852e04cf339e4f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NDE3Mg==", "url": "https://github.com/zowe/api-layer/pull/802#discussion_r479294172", "bodyText": "i refactored it, check the new one", "author": "jandadav", "createdAt": "2020-08-28T13:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA3MDk1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "338aa16b1cb977936d05a21b4047f1311766485d", "chunk": "diff --git a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\nsimilarity index 76%\nrename from gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java\nrename to gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\nindex 65b96ac7e..2272ab955 100644\n--- a/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509AuthenticationFilter.java\n+++ b/gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/ApimlX509Filter.java\n\n@@ -28,35 +28,39 @@ import java.util.stream.Collectors;\n  * Be careful with usage as later on it means that the set of original certificates won't be available.\n  */\n @RequiredArgsConstructor\n-public class ApimlX509AuthenticationFilter extends X509AuthenticationFilter {\n+public class ApimlX509Filter extends X509AuthenticationFilter {\n \n     private final Set<String> publicKeyCertificatesBase64;\n \n     /**\n-     * Filter certificated by allowed - see publicKeyCertificatesBase64\n-     *\n+     * Separate certificates into 2 lists by allowed - see publicKeyCertificatesBase64.\n+     *  List with key \"true\" are allowed and \"false\" not allowed certificates.\n      * @param certs all certificated to filter\n-     * @return filtered certificates (certs), contains only certificated used to sign in APIML\n+     * @return map of lists with separated certificates (certs)\n      */\n-    private Map<Boolean, List<X509Certificate>> filter(X509Certificate[] certs) {\n-        return Arrays.stream(certs).collect(Collectors.partitioningBy(cer -> publicKeyCertificatesBase64.contains(Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded()))));\n+    private Map<Boolean, List<X509Certificate>> partitionByAllowed(X509Certificate[] certs) {\n+        return Arrays.stream(certs).collect(Collectors.partitioningBy(\n+            cer -> publicKeyCertificatesBase64.contains(\n+                Base64.getEncoder().encodeToString(cer.getPublicKey().getEncoded())\n+            )\n+        ));\n     }\n \n     /**\n-     * Get certificates from request (if exists), filter them (to use only APIML certificate to request sign) and\n-     * store again into request.\n+     * Get certificates from request (if exists), separate them (to use only APIML certificate to request sign and\n+     * other for authentication) and store again into request.\n      *\n      * @param request Request to filter certificates\n      */\n     private void filterCerts(ServletRequest request) {\n         X509Certificate[] certs = (X509Certificate[]) request.getAttribute(\"javax.servlet.request.X509Certificate\");\n         if (certs != null) {\n-            Map<Boolean, List<X509Certificate>> separatedCerts = filter(certs);\n+            Map<Boolean, List<X509Certificate>> separatedCerts = partitionByAllowed(certs);\n             X509Certificate[] clientAuthCerts = new X509Certificate[separatedCerts.get(false).size()];\n             request.setAttribute(\"client.auth.X509Certificate\", separatedCerts.get(false).toArray(clientAuthCerts));\n             X509Certificate[] zoweCerts = new X509Certificate[separatedCerts.get(true).size()];\n-            certs = separatedCerts.get(true).toArray(zoweCerts);\n-            request.setAttribute(\"javax.servlet.request.X509Certificate\", certs);\n+            zoweCerts = separatedCerts.get(true).toArray(zoweCerts);\n+            request.setAttribute(\"javax.servlet.request.X509Certificate\", zoweCerts);\n         }\n     }\n \n"}}, {"oid": "682b97220507d72898f026b680abbbcff49c6b59", "url": "https://github.com/zowe/api-layer/commit/682b97220507d72898f026b680abbbcff49c6b59", "message": "refactor\n\nSigned-off-by: jandadav <janda.david@gmail.com>", "committedDate": "2020-08-28T13:29:02Z", "type": "commit"}]}