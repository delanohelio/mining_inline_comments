{"pr_number": 762, "pr_title": "Create ApiMediationClient.isRegistered Interface", "pr_createdAt": "2020-07-24T18:14:46Z", "pr_url": "https://github.com/zowe/api-layer/pull/762", "timeline": [{"oid": "cdc9a5d5a1d8f6c030d1021e56e3ddc2bc4a2734", "url": "https://github.com/zowe/api-layer/commit/cdc9a5d5a1d8f6c030d1021e56e3ddc2bc4a2734", "message": "Create ApiMediationClient.isRegistered\n\nUses EurekaClient.getInstanceRemoteStatus to test for registration with the Discovery Service.\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-23T12:30:15Z", "type": "commit"}, {"oid": "05d5aded89c0bd7f6ff919fddb5b5f1f13146bbd", "url": "https://github.com/zowe/api-layer/commit/05d5aded89c0bd7f6ff919fddb5b5f1f13146bbd", "message": "Create test API endpoint in discoverable client\n\nCreates a new endpoint to test registration to the Discovery Service via the API Mediation Client.\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-24T15:08:23Z", "type": "commit"}, {"oid": "7cbf56489428a6ff7b3d2c251313d7807f3e067a", "url": "https://github.com/zowe/api-layer/commit/7cbf56489428a6ff7b3d2c251313d7807f3e067a", "message": "Merge branch 'master' into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-24T15:30:30Z", "type": "commit"}, {"oid": "3c9bedf74585c6833f20e39a1b942082bf545361", "url": "https://github.com/zowe/api-layer/commit/3c9bedf74585c6833f20e39a1b942082bf545361", "message": "Remove unused config reader property\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-24T16:10:46Z", "type": "commit"}, {"oid": "be82525ebae1d79499870fa1fb4d485ed451a364", "url": "https://github.com/zowe/api-layer/commit/be82525ebae1d79499870fa1fb4d485ed451a364", "message": "Merge branch 'master' of github.com:zowe/api-layer into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-24T16:11:39Z", "type": "commit"}, {"oid": "a136c7b8f57e51fe5b4f24f0becb52e9f0ffd50d", "url": "https://github.com/zowe/api-layer/commit/a136c7b8f57e51fe5b4f24f0becb52e9f0ffd50d", "message": "Merge branch 'user/carsoncook/isEurekaRegisteredWithDiscoveryInterface' of github.com:CarsonCook/api-layer into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-24T16:12:22Z", "type": "commit"}, {"oid": "99ca380b4b615227655c6172619391fdefbcb3de", "url": "https://github.com/zowe/api-layer/commit/99ca380b4b615227655c6172619391fdefbcb3de", "message": "Merge branch 'user/carsoncook/isEurekaRegisteredWithDiscoveryInterface' of github.com:CarsonCook/api-layer into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-24T16:45:06Z", "type": "commit"}, {"oid": "f8342f031c9166338ce63871ddbae4a8f48b94d7", "url": "https://github.com/zowe/api-layer/commit/f8342f031c9166338ce63871ddbae4a8f48b94d7", "message": "Add tests for mediation client endpoint in discoverable client\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-24T17:41:23Z", "type": "commit"}, {"oid": "878f01a68f916c1de51da9529b01f96aef107fc3", "url": "https://github.com/zowe/api-layer/commit/878f01a68f916c1de51da9529b01f96aef107fc3", "message": "Merge branch 'user/carsoncook/isEurekaRegisteredWithDiscoveryInterface' of github.com:CarsonCook/api-layer into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-24T18:11:53Z", "type": "commit"}, {"oid": "4e059fd14c826a8ce7816209c7a52f68f7f10962", "url": "https://github.com/zowe/api-layer/commit/4e059fd14c826a8ce7816209c7a52f68f7f10962", "message": "Create ApiMediationService unit tests\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-24T20:34:20Z", "type": "commit"}, {"oid": "956817911879e14da1f3faa9516feb5c0003d828", "url": "https://github.com/zowe/api-layer/commit/956817911879e14da1f3faa9516feb5c0003d828", "message": "Merge branch 'master' into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-28T12:14:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzY4Nw==", "url": "https://github.com/zowe/api-layer/pull/762#discussion_r462243687", "bodyText": "Can we please change the hardcoded items and take them from the discoverable client configuration where it makes sense?", "author": "jandadav", "createdAt": "2020-07-29T11:58:15Z", "path": "discoverable-client/src/main/java/org/zowe/apiml/client/service/ApiMediationClientService.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.client.service;\n+\n+import org.springframework.stereotype.Service;\n+import org.zowe.apiml.config.ApiInfo;\n+import org.zowe.apiml.eurekaservice.client.ApiMediationClient;\n+import org.zowe.apiml.eurekaservice.client.config.*;\n+import org.zowe.apiml.eurekaservice.client.impl.ApiMediationClientImpl;\n+import org.zowe.apiml.exception.ServiceDefinitionException;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Service\n+public class ApiMediationClientService {\n+    private final ApiMediationClient apiMediationClient;\n+    private static final char[] PASSWORD = \"password\".toCharArray();\n+\n+    public ApiMediationClientService() {\n+        apiMediationClient = new ApiMediationClientImpl();\n+    }\n+\n+    public void register() throws ServiceDefinitionException {\n+        ApiInfo apiInfo = new ApiInfo(\"org.zowe.discoverableclient.registrationTest\", \"api/v1\", \"1.0.0\", \"https://localhost:10013/dummy\", null);\n+        Catalog catalogUiTile = new Catalog(new Catalog.Tile(\"cademoapps\", \"Sample API Mediation Client\", \"Application that demonstrates API Mediation registration\", \"1.0.1\"));\n+        Authentication authentication = new Authentication(\"bypass\", null);\n+        Ssl ssl = new Ssl(true, true, \"TLSv1.2\", \"localhost\", PASSWORD,\n+            \"../keystore/localhost/localhost.keystore.p12\", PASSWORD, \"PKCS12\",\n+            \"../keystore/localhost/localhost.truststore.p12\", PASSWORD, \"PKCS12\");\n+        List<Route> routes = new ArrayList<>();\n+        Route apiRoute = new Route(\"api/v1\", \"/registrationTest/api/v1\");\n+        routes.add(apiRoute);\n+\n+        ApiMediationServiceConfig config = ApiMediationServiceConfig.builder()\n+            .apiInfo(Collections.singletonList(apiInfo))\n+            .catalog(catalogUiTile)\n+            .authentication(authentication)\n+            .routes(routes)\n+            .description(\"Example for API Mediation registration\")\n+            .title(\"API Mediation Registration\")\n+            .serviceId(\"registrationTest\")\n+            .baseUrl(\"https://localhost:10013\")\n+            .healthCheckRelativeUrl(\"\")\n+            .homePageRelativeUrl(\"\")\n+            .statusPageRelativeUrl(\"\")\n+            .discoveryServiceUrls(Collections.singletonList(\"https://localhost:10011/eureka\"))\n+            .ssl(ssl)\n+            .serviceIpAddress(\"127.0.0.1\")\n+            .build();\n+        apiMediationClient.register(config);", "originalCommit": "956817911879e14da1f3faa9516feb5c0003d828", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEwNjE2OA==", "url": "https://github.com/zowe/api-layer/pull/762#discussion_r463106168", "bodyText": "Resolved.", "author": "CarsonCook", "createdAt": "2020-07-30T16:04:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8bb38ffce51154083596b9cc16a38c4d013bd80a", "chunk": "diff --git a/discoverable-client/src/main/java/org/zowe/apiml/client/service/ApiMediationClientService.java b/discoverable-client/src/main/java/org/zowe/apiml/client/service/ApiMediationClientService.java\nindex 3d6a1ddd..864f6ce5 100644\n--- a/discoverable-client/src/main/java/org/zowe/apiml/client/service/ApiMediationClientService.java\n+++ b/discoverable-client/src/main/java/org/zowe/apiml/client/service/ApiMediationClientService.java\n\n@@ -9,54 +9,65 @@\n  */\n package org.zowe.apiml.client.service;\n \n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n+import org.zowe.apiml.client.model.DiscoverableClientConfig;\n import org.zowe.apiml.config.ApiInfo;\n import org.zowe.apiml.eurekaservice.client.ApiMediationClient;\n-import org.zowe.apiml.eurekaservice.client.config.*;\n+import org.zowe.apiml.eurekaservice.client.config.ApiMediationServiceConfig;\n+import org.zowe.apiml.eurekaservice.client.config.Authentication;\n+import org.zowe.apiml.eurekaservice.client.config.Route;\n+import org.zowe.apiml.eurekaservice.client.config.Ssl;\n import org.zowe.apiml.eurekaservice.client.impl.ApiMediationClientImpl;\n import org.zowe.apiml.exception.ServiceDefinitionException;\n \n-import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.List;\n \n+/**\n+ * Service that allows a new {@link com.netflix.discovery.EurekaClient} to be registered and un-registered via ApiMediationClientImpl instance.\n+ * This service uses its own {@link com.netflix.discovery.EurekaClient} so that registration can be tested without affecting other services in\n+ * the Discoverable Client.\n+ */\n @Service\n public class ApiMediationClientService {\n+    private static final String PORT = \"10013\";\n+    private static final String SERVICE_ID = \"registrationTest\";\n+    private static final String GATEWAY_URL = \"api/v1\";\n+\n+    private final DiscoverableClientConfig dcConfig;\n+\n     private final ApiMediationClient apiMediationClient;\n-    private static final char[] PASSWORD = \"password\".toCharArray();\n \n-    public ApiMediationClientService() {\n+    public ApiMediationClientService(@Autowired DiscoverableClientConfig dcConfig) {\n         apiMediationClient = new ApiMediationClientImpl();\n+        this.dcConfig = dcConfig;\n     }\n \n     public void register() throws ServiceDefinitionException {\n-        ApiInfo apiInfo = new ApiInfo(\"org.zowe.discoverableclient.registrationTest\", \"api/v1\", \"1.0.0\", \"https://localhost:10013/dummy\", null);\n-        Catalog catalogUiTile = new Catalog(new Catalog.Tile(\"cademoapps\", \"Sample API Mediation Client\", \"Application that demonstrates API Mediation registration\", \"1.0.1\"));\n+        ApiInfo apiInfo = new ApiInfo(SERVICE_ID, GATEWAY_URL, \"1.0.0\", null, null);\n         Authentication authentication = new Authentication(\"bypass\", null);\n-        Ssl ssl = new Ssl(true, true, \"TLSv1.2\", \"localhost\", PASSWORD,\n-            \"../keystore/localhost/localhost.keystore.p12\", PASSWORD, \"PKCS12\",\n-            \"../keystore/localhost/localhost.truststore.p12\", PASSWORD, \"PKCS12\");\n-        List<Route> routes = new ArrayList<>();\n-        Route apiRoute = new Route(\"api/v1\", \"/registrationTest/api/v1\");\n-        routes.add(apiRoute);\n+        Ssl ssl = new Ssl(dcConfig.isSslEnabled(), dcConfig.isVerifyCerts(), dcConfig.getSslProtocol(), dcConfig.getKeyAlias(),\n+            dcConfig.getKeyPassword().toCharArray(), dcConfig.getKeyStore(), dcConfig.getKeyStorePassword().toCharArray(),\n+            dcConfig.getKeyStoreType(), dcConfig.getTrustStore(), dcConfig.getTrustStorePassword().toCharArray(), dcConfig.getTrustStoreType());\n+        Route apiRoute = new Route(GATEWAY_URL, \"/\" + SERVICE_ID + \"/\" + GATEWAY_URL);\n \n-        ApiMediationServiceConfig config = ApiMediationServiceConfig.builder()\n+        ApiMediationServiceConfig apiConfig = ApiMediationServiceConfig.builder()\n             .apiInfo(Collections.singletonList(apiInfo))\n-            .catalog(catalogUiTile)\n             .authentication(authentication)\n-            .routes(routes)\n-            .description(\"Example for API Mediation registration\")\n-            .title(\"API Mediation Registration\")\n-            .serviceId(\"registrationTest\")\n-            .baseUrl(\"https://localhost:10013\")\n+            .routes(Collections.singletonList(apiRoute))\n+            .description(\"Example for API Mediation Client registration\")\n+            .title(\"API Mediation Client Registration\")\n+            .serviceId(SERVICE_ID)\n+            .baseUrl(dcConfig.getScheme() + \"://\" + dcConfig.getHostname() + \":\" + PORT)\n             .healthCheckRelativeUrl(\"\")\n             .homePageRelativeUrl(\"\")\n             .statusPageRelativeUrl(\"\")\n-            .discoveryServiceUrls(Collections.singletonList(\"https://localhost:10011/eureka\"))\n+            .discoveryServiceUrls(dcConfig.getDiscoveryServiceUrls())\n             .ssl(ssl)\n-            .serviceIpAddress(\"127.0.0.1\")\n+            .preferIpAddress(false)\n+            .serviceIpAddress(\"0.0.0.0\") //use hostname instead of IP address\n             .build();\n-        apiMediationClient.register(config);\n+        apiMediationClient.register(apiConfig);\n     }\n \n     public void unregister() {\n"}}, {"oid": "8bb38ffce51154083596b9cc16a38c4d013bd80a", "url": "https://github.com/zowe/api-layer/commit/8bb38ffce51154083596b9cc16a38c4d013bd80a", "message": "Replace hardcoded config with dynamic DC config\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-30T15:58:12Z", "type": "commit"}, {"oid": "3bf41a3fd3951b3b7dcc31df9b900c4985e6c66d", "url": "https://github.com/zowe/api-layer/commit/3bf41a3fd3951b3b7dcc31df9b900c4985e6c66d", "message": "Fix code smell on tests with no assert\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>", "committedDate": "2020-07-30T15:58:51Z", "type": "commit"}, {"oid": "ed7dc80bff56088bf10ed54ecb249a0f33703210", "url": "https://github.com/zowe/api-layer/commit/ed7dc80bff56088bf10ed54ecb249a0f33703210", "message": "Merge branch 'master' of github.com:zowe/api-layer into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-30T15:59:06Z", "type": "commit"}, {"oid": "c9ba6c291f3ee4e330ef72310b320dfdb2c82415", "url": "https://github.com/zowe/api-layer/commit/c9ba6c291f3ee4e330ef72310b320dfdb2c82415", "message": "Merge branch 'user/carsoncook/isEurekaRegisteredWithDiscoveryInterface' of github.com:CarsonCook/api-layer into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-30T16:04:06Z", "type": "commit"}, {"oid": "ea31fbcda5ee00282dc484937618a56299ddf190", "url": "https://github.com/zowe/api-layer/commit/ea31fbcda5ee00282dc484937618a56299ddf190", "message": "Merge branch 'master' into user/carsoncook/isEurekaRegisteredWithDiscoveryInterface", "committedDate": "2020-07-31T14:47:13Z", "type": "commit"}]}