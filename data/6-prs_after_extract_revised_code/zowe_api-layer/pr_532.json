{"pr_number": 532, "pr_title": "Version endpoint in API Gateway", "pr_createdAt": "2020-02-27T15:28:17Z", "pr_url": "https://github.com/zowe/api-layer/pull/532", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5NDQwMg==", "url": "https://github.com/zowe/api-layer/pull/532#discussion_r385194402", "bodyText": "Could you please provide more information in the name about what it is supposed to do?\n\nThe given, when, then form is good to store this information", "author": "balhar-jakub", "createdAt": "2020-02-27T15:48:04Z", "path": "gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/VersionControllerTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.controllers;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n+import org.zowe.apiml.product.version.VersionInfo;\n+import org.zowe.apiml.product.version.VersionService;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+@RunWith(SpringRunner.class)\n+public class VersionControllerTest {\n+    @Mock\n+    private VersionService versionService;\n+\n+    private MockMvc mockMvc;\n+\n+    @Before\n+    public void setUp() {\n+        VersionController versionController = new VersionController(versionService);\n+        mockMvc = MockMvcBuilders.standaloneSetup(versionController).build();\n+    }\n+\n+    @Test\n+    public void callVersionEndpoint() throws Exception {\n+        Mockito.when(versionService.getVersion()).thenReturn(getDummyVersionInfo());\n+        this.mockMvc.perform(get(\"/version\"))\n+            .andExpect(status().isOk())\n+            .andExpect(jsonPath(\"$.zoweVersion\", is(\"0.0.0 build #000\")))\n+            .andExpect(jsonPath(\"$.apimlVersion\", is(\"0.0.0 build #000 (1a3b5c7)\")));\n+    }", "originalCommit": "8d984be2f88cc7fcaf52efde833c191632848e05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1OTc5OQ==", "url": "https://github.com/zowe/api-layer/pull/532#discussion_r385259799", "bodyText": "Done!", "author": "arxioly", "createdAt": "2020-02-27T17:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE5NDQwMg=="}], "type": "inlineReview", "revised_code": {"commit": "823fb54bfa29e930408db7415bccf10d6be09e99", "chunk": "diff --git a/gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/VersionControllerTest.java b/gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/VersionControllerTest.java\nindex 90280bbb..8b4cae77 100644\n--- a/gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/VersionControllerTest.java\n+++ b/gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/VersionControllerTest.java\n\n@@ -18,6 +18,7 @@ import org.springframework.test.context.junit4.SpringRunner;\n import org.springframework.test.web.servlet.MockMvc;\n import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n import org.zowe.apiml.product.version.VersionInfo;\n+import org.zowe.apiml.product.version.VersionInfoDetails;\n import org.zowe.apiml.product.version.VersionService;\n \n import static org.hamcrest.core.Is.is;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIwMDk2Mg==", "url": "https://github.com/zowe/api-layer/pull/532#discussion_r385200962", "bodyText": "Would it be possible to move at least the internal logic to the separate private method to make this method more easily understood?", "author": "balhar-jakub", "createdAt": "2020-02-27T15:57:33Z", "path": "apiml-common/src/main/java/org/zowe/apiml/product/version/VersionService.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.product.version;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Service;\n+import org.zowe.apiml.util.FileUtils;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Class for retrieving information about Zowe version from Zowe's manifest.json\n+ * and information about API ML version from build-info.properties and git.properties\n+ */\n+\n+@Slf4j\n+@Service\n+public class VersionService {\n+    private static final String NO_VERSION = \"Build information is not available\";\n+    private static final VersionInfo version = new VersionInfo();\n+\n+    private final BuildInfoDetails buildInfo;\n+\n+    @Value(\"${apiml.zoweManifest:#{null}}\")\n+    private String zoweManifest;\n+\n+    public VersionService() {\n+        buildInfo = new BuildInfo().getBuildInfoDetails();\n+    }\n+\n+    public VersionService(BuildInfoDetails buildInfo) {\n+        this.buildInfo = buildInfo;\n+    }\n+\n+    /**\n+     * Getting the cached VersionInfo object, if it's empty it will be filled\n+     * @return filled VersionInfo object\n+     */\n+    public VersionInfo getVersion() {\n+        if (version.getApimlVersion() == null) {\n+            updateVersionInfo();\n+        }\n+        return version;\n+    }\n+\n+    /**\n+     * Updating the cached VersionInfo object with values from Zowe's manifest.json, API ML's build-info.properties\n+     * and git.properties files\n+     */\n+    public void updateVersionInfo() {\n+        if (StringUtils.isNotEmpty(zoweManifest)) {\n+            version.setZoweVersion(getZoweVersion(zoweManifest));\n+        }\n+        version.setApimlVersion(getApimlVersion());\n+    }\n+\n+    /**\n+     * Retrieving the information about API ML version from build-info.properties and git.properties files\n+     * @return the version, build and commit numbers in one string\n+     */\n+    private String getApimlVersion() {\n+        String apimlVersion = NO_VERSION;\n+        if (!buildInfo.getVersion().equalsIgnoreCase(\"unknown\")) {\n+            apimlVersion = String.format(\"%s build #%s (%s)\", buildInfo.getVersion(), buildInfo.getNumber(), buildInfo.getCommitId());\n+        }\n+        return apimlVersion;\n+    }\n+\n+    /**\n+     * Retrieving the information about Zowe version from manifest.json file\n+     * @param manifestJsonFile the path to Zowe's manifest.json file\n+     * @return the version and build numbers in one string\n+     */\n+    private String getZoweVersion(String manifestJsonFile) {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n+        try {\n+            String manifestJson = FileUtils.readFile(manifestJsonFile);\n+            if (manifestJson != null) {\n+                ObjectNode objectNode = mapper.readValue(manifestJson, ObjectNode.class);\n+                JsonNode versionNode = objectNode.get(\"version\");\n+                if (versionNode != null && !versionNode.asText().isEmpty()) {\n+                    StringBuilder zoweVersion = new StringBuilder();\n+                    zoweVersion.append(versionNode.asText());\n+                    String buildNumber = \"n/a\";\n+                    JsonNode buildNode = objectNode.get(\"build\");\n+                    if (buildNode != null) {\n+                        JsonNode buildNumberNode = buildNode.get(\"number\");\n+                        if (buildNumberNode != null && StringUtils.isNotEmpty(buildNumberNode.asText())) {\n+                            buildNumber = buildNumberNode.asText();\n+                        }\n+                    }\n+                    zoweVersion.append(\" build #\");\n+                    zoweVersion.append(buildNumber);", "originalCommit": "8d984be2f88cc7fcaf52efde833c191632848e05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1OTAzMg==", "url": "https://github.com/zowe/api-layer/pull/532#discussion_r385259032", "bodyText": "Sure! Even into two private methods!", "author": "arxioly", "createdAt": "2020-02-27T17:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIwMDk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "823fb54bfa29e930408db7415bccf10d6be09e99", "chunk": "diff --git a/apiml-common/src/main/java/org/zowe/apiml/product/version/VersionService.java b/apiml-common/src/main/java/org/zowe/apiml/product/version/VersionService.java\nindex 0dae9843..32c35bff 100644\n--- a/apiml-common/src/main/java/org/zowe/apiml/product/version/VersionService.java\n+++ b/apiml-common/src/main/java/org/zowe/apiml/product/version/VersionService.java\n\n@@ -10,6 +10,7 @@\n package org.zowe.apiml.product.version;\n \n import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n"}}, {"oid": "823fb54bfa29e930408db7415bccf10d6be09e99", "url": "https://github.com/zowe/api-layer/commit/823fb54bfa29e930408db7415bccf10d6be09e99", "message": "changed version model and added changes in documentation\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-03T10:16:05Z", "type": "forcePushed"}, {"oid": "a5b2f24d122f9802b33b13f7672c6f7c77f99fb3", "url": "https://github.com/zowe/api-layer/commit/a5b2f24d122f9802b33b13f7672c6f7c77f99fb3", "message": "added encoding manifest.json if it's not in UTF-8\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-04T17:39:32Z", "type": "forcePushed"}, {"oid": "5ca08c710a89208dea6fa536b3fc18406b0fd8b3", "url": "https://github.com/zowe/api-layer/commit/5ca08c710a89208dea6fa536b3fc18406b0fd8b3", "message": "changed example of response\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-04T18:06:32Z", "type": "forcePushed"}, {"oid": "a246d3d7824fdc409b6fe25eb6187c91265e71e1", "url": "https://github.com/zowe/api-layer/commit/a246d3d7824fdc409b6fe25eb6187c91265e71e1", "message": "version endpoint replaced to api/v1/gateway\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-10T10:29:42Z", "type": "forcePushed"}, {"oid": "3bfe4c6dcf10a94f0fb971dab3752fd146ca3af0", "url": "https://github.com/zowe/api-layer/commit/3bfe4c6dcf10a94f0fb971dab3752fd146ca3af0", "message": "fixed routing problem\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T12:00:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk0OTA1Nw==", "url": "https://github.com/zowe/api-layer/pull/532#discussion_r390949057", "bodyText": "Integration test is failing. requestString should be updated to contain also either /gateway or /api/v1/gateway I guess.", "author": "taban03", "createdAt": "2020-03-11T12:54:18Z", "path": "integration-tests/src/test/java/org/zowe/apiml/gatewayservice/VersionEndpointTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gatewayservice;\n+\n+import io.restassured.RestAssured;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.zowe.apiml.util.config.ConfigReader;\n+import org.zowe.apiml.util.config.GatewayServiceConfiguration;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.apache.http.HttpStatus.SC_OK;\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.hamcrest.Matchers.is;\n+\n+public class VersionEndpointTest {\n+\n+    private String requestString;\n+\n+    @BeforeClass\n+    public static void beforeClass() {\n+        RestAssured.useRelaxedHTTPSValidation();\n+    }\n+\n+    @Before\n+    public void setUp() {\n+        GatewayServiceConfiguration serviceConfiguration = ConfigReader.environmentConfiguration().getGatewayServiceConfiguration();\n+        String scheme = serviceConfiguration.getScheme();\n+        String host = serviceConfiguration.getHost();\n+        int port = serviceConfiguration.getPort();\n+        requestString = String.format(\"%s://%s:%s%s\", scheme, host, port, \"/version\");", "originalCommit": "41c845fecffc842996747e4265d2fe09546d6899", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5NzE0MQ==", "url": "https://github.com/zowe/api-layer/pull/532#discussion_r390997141", "bodyText": "Good point! Thanks for catched it!", "author": "arxioly", "createdAt": "2020-03-11T14:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk0OTA1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d1bf0b2317c6c702394e559e9d3c834abed1840a", "chunk": "diff --git a/integration-tests/src/test/java/org/zowe/apiml/gatewayservice/VersionEndpointTest.java b/integration-tests/src/test/java/org/zowe/apiml/gatewayservice/VersionEndpointTest.java\ndeleted file mode 100644\nindex bfb35938..00000000\n--- a/integration-tests/src/test/java/org/zowe/apiml/gatewayservice/VersionEndpointTest.java\n+++ /dev/null\n\n@@ -1,51 +0,0 @@\n-/*\n- * This program and the accompanying materials are made available under the terms of the\n- * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n- * https://www.eclipse.org/legal/epl-v20.html\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- *\n- * Copyright Contributors to the Zowe Project.\n- */\n-package org.zowe.apiml.gatewayservice;\n-\n-import io.restassured.RestAssured;\n-import org.junit.Before;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n-import org.zowe.apiml.util.config.ConfigReader;\n-import org.zowe.apiml.util.config.GatewayServiceConfiguration;\n-\n-import static io.restassured.RestAssured.given;\n-import static org.apache.http.HttpStatus.SC_OK;\n-import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.Matchers.is;\n-\n-public class VersionEndpointTest {\n-\n-    private String requestString;\n-\n-    @BeforeClass\n-    public static void beforeClass() {\n-        RestAssured.useRelaxedHTTPSValidation();\n-    }\n-\n-    @Before\n-    public void setUp() {\n-        GatewayServiceConfiguration serviceConfiguration = ConfigReader.environmentConfiguration().getGatewayServiceConfiguration();\n-        String scheme = serviceConfiguration.getScheme();\n-        String host = serviceConfiguration.getHost();\n-        int port = serviceConfiguration.getPort();\n-        requestString = String.format(\"%s://%s:%s%s\", scheme, host, port, \"/version\");\n-    }\n-\n-    @Test\n-    public void shouldCallVersionEndpointAndReceivedVersion() {\n-        given()\n-            .when()\n-            .get(requestString)\n-            .then()\n-            .body(containsString(\"apiml\"))\n-            .statusCode(is(SC_OK));\n-    }\n-}\n"}}, {"oid": "d1bf0b2317c6c702394e559e9d3c834abed1840a", "url": "https://github.com/zowe/api-layer/commit/d1bf0b2317c6c702394e559e9d3c834abed1840a", "message": "added version controller\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:26Z", "type": "commit"}, {"oid": "6320d4a89606537929f0cb03c7983a3b549a70ba", "url": "https://github.com/zowe/api-layer/commit/6320d4a89606537929f0cb03c7983a3b549a70ba", "message": "added JavaDocs, tests, parameter in installation scripts and docs\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "e7e0a3c8cb87507dc641c2309539868dccaf5228", "url": "https://github.com/zowe/api-layer/commit/e7e0a3c8cb87507dc641c2309539868dccaf5228", "message": "added changes after review\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "79590609098b9efd106fdac2f05b850b9011fe51", "url": "https://github.com/zowe/api-layer/commit/79590609098b9efd106fdac2f05b850b9011fe51", "message": "changed version model and added changes in documentation\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "4bac9d014728a51f12956342cec61a5a347c2656", "url": "https://github.com/zowe/api-layer/commit/4bac9d014728a51f12956342cec61a5a347c2656", "message": "Update diagnostics.md\n\nSigned-off-by: Andrew Jandacek <andrew.jandacek@broadcom.com>\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "27d8b48ec37b5948ebb640f5f5c23433ca5014b9", "url": "https://github.com/zowe/api-layer/commit/27d8b48ec37b5948ebb640f5f5c23433ca5014b9", "message": "Update FileUtils.java\n\nSigned-off-by: Andrew Jandacek <andrew.jandacek@broadcom.com>\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "0af7875b1a4221cdd5570eba3831a3dd0bb10cd4", "url": "https://github.com/zowe/api-layer/commit/0af7875b1a4221cdd5570eba3831a3dd0bb10cd4", "message": "added encoding manifest.json if it's not in UTF-8\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "710cafdbddb34e24ed38fe38f769050e35026d8a", "url": "https://github.com/zowe/api-layer/commit/710cafdbddb34e24ed38fe38f769050e35026d8a", "message": "changed example of response\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "fbfe02d9d6280fab514bcfd4c50510449242f6e2", "url": "https://github.com/zowe/api-layer/commit/fbfe02d9d6280fab514bcfd4c50510449242f6e2", "message": "version endpoint replaced to api/v1/gateway\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "99f1c9f7547775166a1b17a588c50a7543ccdc04", "url": "https://github.com/zowe/api-layer/commit/99f1c9f7547775166a1b17a588c50a7543ccdc04", "message": "fixed routing problem\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "3ce668c973212ff8916e0cc6f6344cf379ea16d6", "url": "https://github.com/zowe/api-layer/commit/3ce668c973212ff8916e0cc6f6344cf379ea16d6", "message": "fixed typo\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "dc1e6e88ccdf7db49cf412dea37bcf23ca6ffa72", "url": "https://github.com/zowe/api-layer/commit/dc1e6e88ccdf7db49cf412dea37bcf23ca6ffa72", "message": "fixed integration test\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "commit"}, {"oid": "dc1e6e88ccdf7db49cf412dea37bcf23ca6ffa72", "url": "https://github.com/zowe/api-layer/commit/dc1e6e88ccdf7db49cf412dea37bcf23ca6ffa72", "message": "fixed integration test\n\nSigned-off-by: Elena Kubantseva <elena.kubantseva@broadcom.com>", "committedDate": "2020-03-11T14:31:27Z", "type": "forcePushed"}]}