{"pr_number": 3908, "pr_title": "Delete old bleeding edge builds on update", "pr_createdAt": "2020-12-10T16:42:59Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/3908", "timeline": [{"oid": "3b3daf0e25727136a512091a2307e44ccb69f908", "url": "https://github.com/Anuken/Mindustry/commit/3b3daf0e25727136a512091a2307e44ccb69f908", "message": "Delete old bleeding edge builds on update", "committedDate": "2020-12-10T16:41:50Z", "type": "commit"}, {"oid": "0f8304674f8f9668b8f4eeef0ef5c59a95252289", "url": "https://github.com/Anuken/Mindustry/commit/0f8304674f8f9668b8f4eeef0ef5c59a95252289", "message": "now 100% less readable", "committedDate": "2020-12-10T16:54:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzNDQ1NQ==", "url": "https://github.com/Anuken/Mindustry/pull/3908#discussion_r540334455", "bodyText": "Do not use forEach, that is a Java 8 feature.\nHave you tested this?\nDo not use reference comparison for files.", "author": "Anuken", "createdAt": "2020-12-10T16:55:44Z", "path": "core/src/mindustry/net/BeControl.java", "diffHunk": "@@ -49,6 +49,8 @@ public BeControl(){\n             try{\n                 Fi dest = Fi.get(System.getProperty(\"becopy\"));\n                 Fi self = Fi.get(BeControl.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath());\n+                \n+                self.parent().findAll(f -> f != self).forEach(Fi::delete);", "originalCommit": "0f8304674f8f9668b8f4eeef0ef5c59a95252289", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzOTM0Mg==", "url": "https://github.com/Anuken/Mindustry/pull/3908#discussion_r540339342", "bodyText": "I have tested this and it works fine, how would you suggest that I avoid deleting the file without comparing references? If it's built with java 14 then whats the issue with using java 8 features?", "author": "buthed010203", "createdAt": "2020-12-10T17:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzNDQ1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MzAwMQ==", "url": "https://github.com/Anuken/Mindustry/pull/3908#discussion_r540343001", "bodyText": "findAll creates new file objects, which means reference comparison is meaningless. You're just deleting the entire contents of the folder. Use equals.\n\nIf it's built with java 14 then whats the issue with using java 8 features?\n\nRead the contributing guidelines.  The version used for building is irrelevant.", "author": "Anuken", "createdAt": "2020-12-10T17:06:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzNDQ1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b3beb92557d9f5e177148a060625a2132d0e0bd9", "chunk": "diff --git a/core/src/mindustry/net/BeControl.java b/core/src/mindustry/net/BeControl.java\nindex bd4aa150b..768b3547f 100644\n--- a/core/src/mindustry/net/BeControl.java\n+++ b/core/src/mindustry/net/BeControl.java\n\n@@ -50,7 +50,7 @@ public class BeControl{\n                 Fi dest = Fi.get(System.getProperty(\"becopy\"));\n                 Fi self = Fi.get(BeControl.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath());\n                 \n-                self.parent().findAll(f -> f != self).forEach(Fi::delete);\n+                for(Fi file : self.parent().findAll(f -> !f.equals(self))) file.delete();\n \n                 self.copyTo(dest);\n             }catch(Throwable e){\n"}}, {"oid": "b3beb92557d9f5e177148a060625a2132d0e0bd9", "url": "https://github.com/Anuken/Mindustry/commit/b3beb92557d9f5e177148a060625a2132d0e0bd9", "message": "fixed", "committedDate": "2020-12-10T17:18:11Z", "type": "commit"}]}