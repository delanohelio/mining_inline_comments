{"pr_number": 4006, "pr_title": "allow mods to set zoom limits", "pr_createdAt": "2020-12-16T16:59:59Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/4006", "timeline": [{"oid": "9d7d602181d6f5cf410cfd6b5c1cc5d2928421ce", "url": "https://github.com/Anuken/Mindustry/commit/9d7d602181d6f5cf410cfd6b5c1cc5d2928421ce", "message": "allow mods to set zoom limits", "committedDate": "2020-12-16T16:16:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ2Njk5OA==", "url": "https://github.com/Anuken/Mindustry/pull/4006#discussion_r544466998", "bodyText": "Where did the Math.round go?", "author": "Anuken", "createdAt": "2020-12-16T17:02:22Z", "path": "core/src/mindustry/core/Renderer.java", "diffHunk": "@@ -302,16 +304,19 @@ public void scaleCamera(float amount){\n     }\n \n     public void clampScale(){\n-        float s = Scl.scl(1f);\n-        targetscale = Mathf.clamp(targetscale, minScale(), Math.round(s * 6));\n+        targetscale = Mathf.clamp(targetscale, minScale(), maxScale());\n     }\n \n     public float getDisplayScale(){\n         return camerascale;\n     }\n \n     public float minScale(){\n-        return Scl.scl(1.5f);\n+        return Scl.scl(minZoom);\n+    }\n+\n+    public float maxScale(){\n+        return Scl.scl(maxZoom);", "originalCommit": "9d7d602181d6f5cf410cfd6b5c1cc5d2928421ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4MDU1OQ==", "url": "https://github.com/Anuken/Mindustry/pull/4006#discussion_r544480559", "bodyText": "\\x7F", "author": "DeltaNedas", "createdAt": "2020-12-16T17:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ2Njk5OA=="}], "type": "inlineReview", "revised_code": {"commit": "af46b6fc970e8960beb56067c622837e026ecdb5", "chunk": "diff --git a/core/src/mindustry/core/Renderer.java b/core/src/mindustry/core/Renderer.java\nindex 38c9a95f2..0117c4fef 100644\n--- a/core/src/mindustry/core/Renderer.java\n+++ b/core/src/mindustry/core/Renderer.java\n\n@@ -312,11 +312,11 @@ public class Renderer implements ApplicationListener{\n     }\n \n     public float minScale(){\n-        return Scl.scl(minZoom);\n+        return Math.round(Scl.scl(minZoom));\n     }\n \n     public float maxScale(){\n-        return Scl.scl(maxZoom);\n+        return Math.round(Scl.scl(maxZoom));\n     }\n \n     public float getScale(){\n"}}, {"oid": "af46b6fc970e8960beb56067c622837e026ecdb5", "url": "https://github.com/Anuken/Mindustry/commit/af46b6fc970e8960beb56067c622837e026ecdb5", "message": "rounding", "committedDate": "2020-12-16T17:21:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyMTQ5Mw==", "url": "https://github.com/Anuken/Mindustry/pull/4006#discussion_r544521493", "bodyText": "minScale wasn't rounded before.", "author": "Anuken", "createdAt": "2020-12-16T18:20:45Z", "path": "core/src/mindustry/core/Renderer.java", "diffHunk": "@@ -302,16 +304,19 @@ public void scaleCamera(float amount){\n     }\n \n     public void clampScale(){\n-        float s = Scl.scl(1f);\n-        targetscale = Mathf.clamp(targetscale, minScale(), Math.round(s * 6));\n+        targetscale = Mathf.clamp(targetscale, minScale(), maxScale());\n     }\n \n     public float getDisplayScale(){\n         return camerascale;\n     }\n \n     public float minScale(){\n-        return Scl.scl(1.5f);\n+        return Math.round(Scl.scl(minZoom));", "originalCommit": "af46b6fc970e8960beb56067c622837e026ecdb5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyODIzOQ==", "url": "https://github.com/Anuken/Mindustry/pull/4006#discussion_r544528239", "bodyText": "aaaa", "author": "DeltaNedas", "createdAt": "2020-12-16T18:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUyMTQ5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "27e6cf57493ce507e238d34b6005051e349d367a", "chunk": "diff --git a/core/src/mindustry/core/Renderer.java b/core/src/mindustry/core/Renderer.java\nindex 0117c4fef..824ec637f 100644\n--- a/core/src/mindustry/core/Renderer.java\n+++ b/core/src/mindustry/core/Renderer.java\n\n@@ -312,11 +312,11 @@ public class Renderer implements ApplicationListener{\n     }\n \n     public float minScale(){\n-        return Math.round(Scl.scl(minZoom));\n+        return Scl.scl(minZoom);\n     }\n \n     public float maxScale(){\n-        return Math.round(Scl.scl(maxZoom));\n+        return Mathf.round(Scl.scl(maxZoom));\n     }\n \n     public float getScale(){\n"}}, {"oid": "27e6cf57493ce507e238d34b6005051e349d367a", "url": "https://github.com/Anuken/Mindustry/commit/27e6cf57493ce507e238d34b6005051e349d367a", "message": "dont round min", "committedDate": "2020-12-16T18:31:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzMjc4Mg==", "url": "https://github.com/Anuken/Mindustry/pull/4006#discussion_r544532782", "bodyText": "hold up, why is this 1.5*6 instead of 6", "author": "Anuken", "createdAt": "2020-12-16T18:37:45Z", "path": "core/src/mindustry/core/Renderer.java", "diffHunk": "@@ -30,6 +30,8 @@\n     public @Nullable Bloom bloom;\n     public FrameBuffer effectBuffer = new FrameBuffer();\n     public float laserOpacity = 1f;\n+    /** minZoom = zooming out, maxZoom = zooming in */\n+    public float minZoom = 1.5f, maxZoom = 1.5f * 6;", "originalCommit": "27e6cf57493ce507e238d34b6005051e349d367a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMzc0Mw==", "url": "https://github.com/Anuken/Mindustry/pull/4006#discussion_r544633743", "bodyText": "oops i thought it was Scl.scl(1.5f) * 6f", "author": "DeltaNedas", "createdAt": "2020-12-16T21:25:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzMjc4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0205bff87e6afff6ca988a02876d4addda46a164", "chunk": "diff --git a/core/src/mindustry/core/Renderer.java b/core/src/mindustry/core/Renderer.java\nindex 824ec637f..4b05e83a6 100644\n--- a/core/src/mindustry/core/Renderer.java\n+++ b/core/src/mindustry/core/Renderer.java\n\n@@ -31,7 +31,7 @@ public class Renderer implements ApplicationListener{\n     public FrameBuffer effectBuffer = new FrameBuffer();\n     public float laserOpacity = 1f;\n     /** minZoom = zooming out, maxZoom = zooming in */\n-    public float minZoom = 1.5f, maxZoom = 1.5f * 6;\n+    public float minZoom = 1.5f, maxZoom = 6f;\n \n     //TODO unused\n     private FxProcessor fx = new FxProcessor();\n"}}, {"oid": "0205bff87e6afff6ca988a02876d4addda46a164", "url": "https://github.com/Anuken/Mindustry/commit/0205bff87e6afff6ca988a02876d4addda46a164", "message": "zoom 1.5 -> 1", "committedDate": "2020-12-16T21:25:52Z", "type": "commit"}]}