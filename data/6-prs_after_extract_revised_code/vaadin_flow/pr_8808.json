{"pr_number": 8808, "pr_title": "Make a workaround for Spring boot run as jar", "pr_createdAt": "2020-08-04T07:52:11Z", "pr_url": "https://github.com/vaadin/flow/pull/8808", "timeline": [{"oid": "7e6709970a9cc96879b6143f69d7bf8c89331b90", "url": "https://github.com/vaadin/flow/commit/7e6709970a9cc96879b6143f69d7bf8c89331b90", "message": "Make a workaround for Spring boot run as jar\n\nFixes #8705", "committedDate": "2020-08-04T07:51:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0MzM0NQ==", "url": "https://github.com/vaadin/flow/pull/8808#discussion_r465743345", "bodyText": "I suggest to improve the naming a bit: getUrl -> getResourceUrl, URL logo -> resourceUrl", "author": "mshabarov", "createdAt": "2020-08-05T13:54:04Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java", "diffHunk": "@@ -127,6 +132,19 @@ public PwaRegistry(PWA pwa, ServletContext servletContext)\n         }\n     }\n \n+    private URL getUrl(ServletContext context, String path)", "originalCommit": "7e6709970a9cc96879b6143f69d7bf8c89331b90", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39dc4e0498029fb0c61fcbd67d0c2181f0941d15", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java b/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\nindex 75d13a97fb..dfb296d904 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\n\n@@ -132,7 +133,7 @@ public class PwaRegistry implements Serializable {\n         }\n     }\n \n-    private URL getUrl(ServletContext context, String path)\n+    private URL getResourceUrl(ServletContext context, String path)\n             throws MalformedURLException {\n         URL logo = context.getResource(path);\n         if (logo == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NTYxNA==", "url": "https://github.com/vaadin/flow/pull/8808#discussion_r465745614", "bodyText": "Does it make sense to cover this by a test? Just to be sure this workaround won't be removed accidentally.", "author": "mshabarov", "createdAt": "2020-08-05T13:57:15Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java", "diffHunk": "@@ -96,18 +99,20 @@ public PwaRegistry(PWA pwa, ServletContext servletContext)\n \n         // Build pwa elements only if they are enabled\n         if (pwaConfiguration.isEnabled()) {\n-            URL logo = servletContext\n-                    .getResource(pwaConfiguration.relIconPath());\n-            URL offlinePage = servletContext\n-                    .getResource(pwaConfiguration.relOfflinePath());\n+            URL logo = getUrl(servletContext, pwaConfiguration.relIconPath());", "originalCommit": "7e6709970a9cc96879b6143f69d7bf8c89331b90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MTg3Mg==", "url": "https://github.com/vaadin/flow/pull/8808#discussion_r466161872", "bodyText": "For many reasons I didn't want to make a test.\nBut let it be ...\nThe test makes impossible to test getting icon resource from servlet context - that was the primary reason.", "author": "denis-anisimov", "createdAt": "2020-08-06T05:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NTYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "39dc4e0498029fb0c61fcbd67d0c2181f0941d15", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java b/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\nindex 75d13a97fb..dfb296d904 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\n\n@@ -99,9 +99,10 @@ public class PwaRegistry implements Serializable {\n \n         // Build pwa elements only if they are enabled\n         if (pwaConfiguration.isEnabled()) {\n-            URL logo = getUrl(servletContext, pwaConfiguration.relIconPath());\n+            URL logo = getResourceUrl(servletContext,\n+                    pwaConfiguration.relIconPath());\n \n-            URL offlinePage = getUrl(servletContext,\n+            URL offlinePage = getResourceUrl(servletContext,\n                     pwaConfiguration.relOfflinePath());\n             // Load base logo from servlet context if available\n             // fall back to local image if unavailable\n"}}, {"oid": "39dc4e0498029fb0c61fcbd67d0c2181f0941d15", "url": "https://github.com/vaadin/flow/commit/39dc4e0498029fb0c61fcbd67d0c2181f0941d15", "message": "Add a unit test for implemented workaround.", "committedDate": "2020-08-06T05:50:42Z", "type": "commit"}, {"oid": "3644226432deb46e4cd141f97979c9c9f13ebda4", "url": "https://github.com/vaadin/flow/commit/3644226432deb46e4cd141f97979c9c9f13ebda4", "message": "Add forgotten resource", "committedDate": "2020-08-06T06:21:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3ODUxNA==", "url": "https://github.com/vaadin/flow/pull/8808#discussion_r466178514", "bodyText": "Rename logo to resourceUrl", "author": "mshabarov", "createdAt": "2020-08-06T06:41:26Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java", "diffHunk": "@@ -127,6 +133,19 @@ public PwaRegistry(PWA pwa, ServletContext servletContext)\n         }\n     }\n \n+    private URL getResourceUrl(ServletContext context, String path)\n+            throws MalformedURLException {\n+        URL logo = context.getResource(path);", "originalCommit": "3644226432deb46e4cd141f97979c9c9f13ebda4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a35c88383b9258cd4da90d66daa44171e10894e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java b/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\nindex dfb296d904..b5b98ec7c5 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/PwaRegistry.java\n\n@@ -135,15 +135,15 @@ public class PwaRegistry implements Serializable {\n \n     private URL getResourceUrl(ServletContext context, String path)\n             throws MalformedURLException {\n-        URL logo = context.getResource(path);\n-        if (logo == null) {\n+        URL resourceUrl = context.getResource(path);\n+        if (resourceUrl == null) {\n             // this is a workaround specific for Spring default static resources\n             // location: see #8705\n             String cpPath = path.startsWith(\"/\") ? META_INF_RESOURCES + path\n                     : META_INF_RESOURCES + \"/\" + path;\n-            logo = PwaRegistry.class.getResource(cpPath);\n+            resourceUrl = PwaRegistry.class.getResource(cpPath);\n         }\n-        return logo;\n+        return resourceUrl;\n     }\n \n     private List<PwaIcon> initializeIcons(BufferedImage baseImage,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4OTAzOA==", "url": "https://github.com/vaadin/flow/pull/8808#discussion_r466189038", "bodyText": "Add a comment that this filtered pwaIcon is the custom one, and got from META-INF/resources/icons/icon.png", "author": "mshabarov", "createdAt": "2020-08-06T07:05:20Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/PwaRegistryTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server;\n+\n+import javax.servlet.ServletContext;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.util.List;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+@PWA(name = \"foo\", shortName = \"bar\")\n+public class PwaRegistryTest {\n+\n+    @Test\n+    public void pwaIconIsGeneratedBasedOnClasspathIcon_servletContextHasNoResources()\n+            throws IOException {\n+        ServletContext context = Mockito.mock(ServletContext.class);\n+        PwaRegistry registry = new PwaRegistry(\n+                PwaRegistryTest.class.getAnnotation(PWA.class), context);\n+        List<PwaIcon> icons = registry.getIcons();\n+        PwaIcon pwaIcon = icons.stream().filter(icon -> icon.getWidth() == 32)", "originalCommit": "3644226432deb46e4cd141f97979c9c9f13ebda4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a35c88383b9258cd4da90d66daa44171e10894e2", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/PwaRegistryTest.java b/flow-server/src/test/java/com/vaadin/flow/server/PwaRegistryTest.java\nindex 00e2cf007d..cc45abec01 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/PwaRegistryTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/PwaRegistryTest.java\n\n@@ -32,9 +32,17 @@ public class PwaRegistryTest {\n     public void pwaIconIsGeneratedBasedOnClasspathIcon_servletContextHasNoResources()\n             throws IOException {\n         ServletContext context = Mockito.mock(ServletContext.class);\n+        // PWA annotation has default value for \"iconPath\" but servlet context\n+        // has no resource for that path, in that case the ClassPath URL will be\n+        // checked which is \"META-INF/resources/icons/icon.png\" (this path\n+        // available is in the test resources folder). The icon in this path\n+        // differs from the default icon and set of icons will be generated\n+        // based on it\n         PwaRegistry registry = new PwaRegistry(\n                 PwaRegistryTest.class.getAnnotation(PWA.class), context);\n         List<PwaIcon> icons = registry.getIcons();\n+        // This icon has width 32 and it's generated based on a custom icon (see\n+        // above)\n         PwaIcon pwaIcon = icons.stream().filter(icon -> icon.getWidth() == 32)\n                 .findFirst().get();\n         ByteArrayOutputStream stream = new ByteArrayOutputStream();\n"}}, {"oid": "a35c88383b9258cd4da90d66daa44171e10894e2", "url": "https://github.com/vaadin/flow/commit/a35c88383b9258cd4da90d66daa44171e10894e2", "message": "Improve variable name and add comments", "committedDate": "2020-08-06T08:13:07Z", "type": "commit"}]}