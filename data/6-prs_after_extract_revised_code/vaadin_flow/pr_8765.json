{"pr_number": 8765, "pr_title": "fixing error message when fails to load content of index.html (#8593)", "pr_createdAt": "2020-07-23T10:38:06Z", "pr_url": "https://github.com/vaadin/flow/pull/8765", "timeline": [{"oid": "3f7455247b8b015c722497e1e2836abe90c85b13", "url": "https://github.com/vaadin/flow/commit/3f7455247b8b015c722497e1e2836abe90c85b13", "message": "fixing error message when fails to load content of index.html", "committedDate": "2020-07-23T10:32:32Z", "type": "commit"}, {"oid": "90e838d3a8fd82a9d050a589cc5c54362b395c12", "url": "https://github.com/vaadin/flow/commit/90e838d3a8fd82a9d050a589cc5c54362b395c12", "message": "adding import", "committedDate": "2020-07-23T10:47:32Z", "type": "commit"}, {"oid": "0e56491aa5e66addacb46f1938a726a4ca900c66", "url": "https://github.com/vaadin/flow/commit/0e56491aa5e66addacb46f1938a726a4ca900c66", "message": "code enhancement", "committedDate": "2020-07-23T11:17:03Z", "type": "commit"}, {"oid": "626975b60518dbab6cd14e64ad948d65d117d5ce", "url": "https://github.com/vaadin/flow/commit/626975b60518dbab6cd14e64ad948d65d117d5ce", "message": "code enhancement and adding test", "committedDate": "2020-08-13T10:57:18Z", "type": "commit"}, {"oid": "9336ca16f9557763dde9292817399dbf5ca48e60", "url": "https://github.com/vaadin/flow/commit/9336ca16f9557763dde9292817399dbf5ca48e60", "message": "enhancement", "committedDate": "2020-08-13T11:11:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDMxOA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469880318", "bodyText": "I believe you can use @Rule ExpectedException exceptionRule and then expect() and exceptionRule.expectMessage() here. Flow project has many examples of such a usage.", "author": "mshabarov", "createdAt": "2020-08-13T11:22:05Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}\n+\n+        try {\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODI0OA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928248", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T12:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDMxOA=="}], "type": "inlineReview", "revised_code": {"commit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\nindex fbd72354ed..4ea4629b33 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n\n@@ -109,30 +112,33 @@ public class IndexHtmlRequestHandlerTest {\n     }\n \n     @Test\n-    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n         VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n-\n         VaadinService vaadinService = vaadinServletRequest.getService();\n         String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n                 + INDEX_HTML;\n-\n         URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n \n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n         try {\n-            Objects.requireNonNull(url);\n-            File indexHtmlFile = new File(url.getPath());\n-            indexHtmlFile.delete();\n-        } catch (Exception ignored) {}\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n \n-        try {\n-            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n-                    vaadinServletRequest, response);\n-            throw new IllegalStateException(\"Must not reach to this point since index.html is not found\");\n-        } catch (IOException iOExeption) {\n             String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n                     \"It is required to have './frontend/index.html' file \" +\n                     \"when using client side bootstrapping.\";\n-            assertEquals(expectedError, iOExeption.getMessage());\n+\n+            exceptionRule.expect(IOException.class);\n+            exceptionRule.expectMessage(expectedError);\n+\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n+                    vaadinServletRequest, response);\n+        } finally {\n+            //restore index.html\n+            indexHtmlFileTmp.renameTo(indexHtmlFile);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MjEwNg==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469882106", "bodyText": "Better use Assert.assertNotNull(), because it's a test, not a production code.", "author": "mshabarov", "createdAt": "2020-08-13T11:25:55Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODMwOQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928309", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T12:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MjEwNg=="}], "type": "inlineReview", "revised_code": {"commit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\nindex fbd72354ed..4ea4629b33 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n\n@@ -109,30 +112,33 @@ public class IndexHtmlRequestHandlerTest {\n     }\n \n     @Test\n-    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n         VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n-\n         VaadinService vaadinService = vaadinServletRequest.getService();\n         String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n                 + INDEX_HTML;\n-\n         URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n \n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n         try {\n-            Objects.requireNonNull(url);\n-            File indexHtmlFile = new File(url.getPath());\n-            indexHtmlFile.delete();\n-        } catch (Exception ignored) {}\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n \n-        try {\n-            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n-                    vaadinServletRequest, response);\n-            throw new IllegalStateException(\"Must not reach to this point since index.html is not found\");\n-        } catch (IOException iOExeption) {\n             String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n                     \"It is required to have './frontend/index.html' file \" +\n                     \"when using client side bootstrapping.\";\n-            assertEquals(expectedError, iOExeption.getMessage());\n+\n+            exceptionRule.expect(IOException.class);\n+            exceptionRule.expectMessage(expectedError);\n+\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n+                    vaadinServletRequest, response);\n+        } finally {\n+            //restore index.html\n+            indexHtmlFileTmp.renameTo(indexHtmlFile);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDQxMg==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469884412", "bodyText": "Why are you ignore the exceptions? Try-catch should be excluded and those exceptions should be added to method signature, and if being thrown, fails the test.", "author": "mshabarov", "createdAt": "2020-08-13T11:30:50Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();\n+        } catch (Exception ignored) {}", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODQzMQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928431", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T12:53:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDQxMg=="}], "type": "inlineReview", "revised_code": {"commit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\nindex fbd72354ed..4ea4629b33 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n\n@@ -109,30 +112,33 @@ public class IndexHtmlRequestHandlerTest {\n     }\n \n     @Test\n-    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n         VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n-\n         VaadinService vaadinService = vaadinServletRequest.getService();\n         String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n                 + INDEX_HTML;\n-\n         URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n \n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n         try {\n-            Objects.requireNonNull(url);\n-            File indexHtmlFile = new File(url.getPath());\n-            indexHtmlFile.delete();\n-        } catch (Exception ignored) {}\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n \n-        try {\n-            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n-                    vaadinServletRequest, response);\n-            throw new IllegalStateException(\"Must not reach to this point since index.html is not found\");\n-        } catch (IOException iOExeption) {\n             String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n                     \"It is required to have './frontend/index.html' file \" +\n                     \"when using client side bootstrapping.\";\n-            assertEquals(expectedError, iOExeption.getMessage());\n+\n+            exceptionRule.expect(IOException.class);\n+            exceptionRule.expectMessage(expectedError);\n+\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n+                    vaadinServletRequest, response);\n+        } finally {\n+            //restore index.html\n+            indexHtmlFileTmp.renameTo(indexHtmlFile);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469886301", "bodyText": "Maybe I missed something, but this file deletion looks like a side effect that may have an impact on other tests, because the require this file to be presented. I think we have to re-create this file in the end of test.", "author": "mshabarov", "createdAt": "2020-08-13T11:34:42Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +108,34 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        try {\n+            Objects.requireNonNull(url);\n+            File indexHtmlFile = new File(url.getPath());\n+            indexHtmlFile.delete();", "originalCommit": "626975b60518dbab6cd14e64ad948d65d117d5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NzI0Ng==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469887246", "bodyText": "UPDATE: Yes. The tests are failing because of that. So, please re-create a file or choose another way to simulate the index.html absence.", "author": "mshabarov", "createdAt": "2020-08-13T11:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyODA1Mw==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469928053", "bodyText": "Yes indead, So I simulated the absence by renaming the file and finally restore it", "author": "hfazai", "createdAt": "2020-08-13T12:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NjMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\nindex fbd72354ed..4ea4629b33 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n\n@@ -109,30 +112,33 @@ public class IndexHtmlRequestHandlerTest {\n     }\n \n     @Test\n-    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException() {\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n         VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n-\n         VaadinService vaadinService = vaadinServletRequest.getService();\n         String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n                 + INDEX_HTML;\n-\n         URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n \n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n         try {\n-            Objects.requireNonNull(url);\n-            File indexHtmlFile = new File(url.getPath());\n-            indexHtmlFile.delete();\n-        } catch (Exception ignored) {}\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n \n-        try {\n-            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n-                    vaadinServletRequest, response);\n-            throw new IllegalStateException(\"Must not reach to this point since index.html is not found\");\n-        } catch (IOException iOExeption) {\n             String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n                     \"It is required to have './frontend/index.html' file \" +\n                     \"when using client side bootstrapping.\";\n-            assertEquals(expectedError, iOExeption.getMessage());\n+\n+            exceptionRule.expect(IOException.class);\n+            exceptionRule.expectMessage(expectedError);\n+\n+            indexHtmlRequestHandler.synchronizedHandleRequest(session,\n+                    vaadinServletRequest, response);\n+        } finally {\n+            //restore index.html\n+            indexHtmlFileTmp.renameTo(indexHtmlFile);\n         }\n     }\n \n"}}, {"oid": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "url": "https://github.com/vaadin/flow/commit/0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "message": "simulate index-html absence by rename", "committedDate": "2020-08-13T12:50:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469944364", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .format(\"Failed to load content of '%1$s'.\"\n          \n          \n            \n                            .format(\"Failed to load content of '%1$s'. \"", "author": "mshabarov", "createdAt": "2020-08-13T13:18:57Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java", "diffHunk": "@@ -172,10 +174,16 @@ private static Document getIndexHtmlDocument(VaadinRequest request)\n         }\n         String frontendDir = FrontendUtils.getProjectFrontendDir(\n                 request.getService().getDeploymentConfiguration());\n+        String indexHtmlFilePath;\n+        if(frontendDir.endsWith(File.separator)) {\n+            indexHtmlFilePath = frontendDir + \"index.html\";\n+        } else {\n+            indexHtmlFilePath = frontendDir + File.separatorChar + \"index.html\";\n+        }\n         String message = String\n-                .format(\"Failed to load content of '%1$sindex.html'.\"\n-                        + \"It is required to have '%1$sindex.html' file when \"\n-                        + \"using client side bootstrapping.\", frontendDir);\n+                .format(\"Failed to load content of '%1$s'.\"", "originalCommit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NzEwNQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469947105", "bodyText": "Suggestion to add a space between sentences for pretty format", "author": "mshabarov", "createdAt": "2020-08-13T13:23:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODA2MA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968060", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T13:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDM2NA=="}], "type": "inlineReview", "revised_code": {"commit": "997cceacfd3f5db8f51ce05b8b639f45857a195f", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java b/flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java\nindex b18b9412bb..b34dd19fbe 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandler.java\n\n@@ -181,7 +181,7 @@ public class IndexHtmlRequestHandler extends JavaScriptBootstrapHandler {\n             indexHtmlFilePath = frontendDir + File.separatorChar + \"index.html\";\n         }\n         String message = String\n-                .format(\"Failed to load content of '%1$s'.\"\n+                .format(\"Failed to load content of '%1$s'. \"\n                         + \"It is required to have '%1$s' file when \"\n                         + \"using client side bootstrapping.\", indexHtmlFilePath);\n         throw new IOException(message);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469944661", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String expectedError = \"Failed to load content of './frontend/index.html'.\" +\n          \n          \n            \n                        String expectedError = \"Failed to load content of './frontend/index.html'. \" +", "author": "mshabarov", "createdAt": "2020-08-13T13:19:28Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);\n+\n+            String expectedError = \"Failed to load content of './frontend/index.html'.\" +", "originalCommit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NzE1OQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469947159", "bodyText": "Suggestion to add a space between sentences for pretty format", "author": "mshabarov", "createdAt": "2020-08-13T13:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODEwNQ==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968105", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T13:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0NDY2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "997cceacfd3f5db8f51ce05b8b639f45857a195f", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\nindex 4ea4629b33..192cf1905f 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n\n@@ -116,6 +117,8 @@ public class IndexHtmlRequestHandlerTest {\n             throws IOException {\n         VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n         VaadinService vaadinService = vaadinServletRequest.getService();\n+\n+        // Finding index.html URL\n         String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n                 + INDEX_HTML;\n         URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTkxNA==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469951914", "bodyText": "Please also add an assertion of returned value, so as to be sure the file has been renamed.", "author": "mshabarov", "createdAt": "2020-08-13T13:30:22Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java", "diffHunk": "@@ -103,6 +111,37 @@ public void serveIndexHtml_requestWithRootPath_serveContentFromTemplate()\n                 indexHtml.contains(\".v-system-error\"));\n     }\n \n+    @Test\n+    public void serveNotFoundIndexHtml_requestWithRootPath_failsWithIOException()\n+            throws IOException {\n+        VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n+        VaadinService vaadinService = vaadinServletRequest.getService();\n+        String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n+                + INDEX_HTML;\n+        URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n+\n+        assertNotNull(url);\n+        File indexHtmlFile = new File(url.getPath());\n+        File indexHtmlFileTmp = new File(url.getPath() + \"_tmp\");\n+        try {\n+            // rename file to simulate the absence of index.html\n+            indexHtmlFile.renameTo(indexHtmlFileTmp);", "originalCommit": "0490ea9b84d36cf1680ee78d9b5d56f662cd2811", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2ODE1Mg==", "url": "https://github.com/vaadin/flow/pull/8765#discussion_r469968152", "bodyText": "Fixed", "author": "hfazai", "createdAt": "2020-08-13T13:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTkxNA=="}], "type": "inlineReview", "revised_code": {"commit": "997cceacfd3f5db8f51ce05b8b639f45857a195f", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\nindex 4ea4629b33..192cf1905f 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/communication/IndexHtmlRequestHandlerTest.java\n\n@@ -116,6 +117,8 @@ public class IndexHtmlRequestHandlerTest {\n             throws IOException {\n         VaadinServletRequest vaadinServletRequest = createVaadinRequest(\"/\");\n         VaadinService vaadinService = vaadinServletRequest.getService();\n+\n+        // Finding index.html URL\n         String indexHtmlPathInProductionMode = VAADIN_SERVLET_RESOURCES\n                 + INDEX_HTML;\n         URL url = vaadinService.getClassLoader().getResource(indexHtmlPathInProductionMode);\n"}}, {"oid": "997cceacfd3f5db8f51ce05b8b639f45857a195f", "url": "https://github.com/vaadin/flow/commit/997cceacfd3f5db8f51ce05b8b639f45857a195f", "message": "adding space and assert rename file", "committedDate": "2020-08-13T13:51:44Z", "type": "commit"}]}