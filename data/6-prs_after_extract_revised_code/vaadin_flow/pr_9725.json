{"pr_number": 9725, "pr_title": "fix: AppTheme is not applied in client-side Fusion", "pr_createdAt": "2020-12-25T09:46:29Z", "pr_url": "https://github.com/vaadin/flow/pull/9725", "timeline": [{"oid": "44bc8b45bc0e823db763d44aa4a253fb5154c648", "url": "https://github.com/vaadin/flow/commit/44bc8b45bc0e823db763d44aa4a253fb5154c648", "message": "Generate bootstrap script in /frontend/generated to load AppTheme", "committedDate": "2020-12-24T09:06:47Z", "type": "commit"}, {"oid": "e538efa76a85950cf94e15c3416a57dca649b0c0", "url": "https://github.com/vaadin/flow/commit/e538efa76a85950cf94e15c3416a57dca649b0c0", "message": "Include bootstrap file in webpack", "committedDate": "2020-12-24T09:06:56Z", "type": "commit"}, {"oid": "e8d6d3b60f66bf58b816f8e3502eeb66248d4a5b", "url": "https://github.com/vaadin/flow/commit/e8d6d3b60f66bf58b816f8e3502eeb66248d4a5b", "message": "Always generate bootstrap file", "committedDate": "2020-12-24T09:07:01Z", "type": "commit"}, {"oid": "57477db8460b8172d4223f6ecf26850c4761072a", "url": "https://github.com/vaadin/flow/commit/57477db8460b8172d4223f6ecf26850c4761072a", "message": "Include bootstrap file in webpack", "committedDate": "2020-12-24T09:12:11Z", "type": "commit"}, {"oid": "5496f6682aa49577983d891193ef6b1c6d6fa692", "url": "https://github.com/vaadin/flow/commit/5496f6682aa49577983d891193ef6b1c6d6fa692", "message": "Generate import index.ts for the bootstrap file", "committedDate": "2020-12-25T09:45:09Z", "type": "commit"}, {"oid": "4d41d6235a7fd365a6967f209d52af39ad24c93f", "url": "https://github.com/vaadin/flow/commit/4d41d6235a7fd365a6967f209d52af39ad24c93f", "message": "Fix unit test", "committedDate": "2020-12-25T11:20:12Z", "type": "commit"}, {"oid": "64a427ac9e0fb4709635a76d245eac6ea07670ef", "url": "https://github.com/vaadin/flow/commit/64a427ac9e0fb4709635a76d245eac6ea07670ef", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2020-12-25T16:13:37Z", "type": "commit"}, {"oid": "3b6537db19bfdc4a67a4f741486ac57d60a7ad7d", "url": "https://github.com/vaadin/flow/commit/3b6537db19bfdc4a67a4f741486ac57d60a7ad7d", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2020-12-29T08:42:45Z", "type": "commit"}, {"oid": "9983423b624bb741d6c6567fbf3dff44db1ff233", "url": "https://github.com/vaadin/flow/commit/9983423b624bb741d6c6567fbf3dff44db1ff233", "message": "Always generate vaadin.ts even when having no Endpoint Service", "committedDate": "2020-12-29T11:44:59Z", "type": "commit"}, {"oid": "3a23b2ac8295581ac900485fc0ae71c611af1969", "url": "https://github.com/vaadin/flow/commit/3a23b2ac8295581ac900485fc0ae71c611af1969", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2020-12-29T14:40:20Z", "type": "commit"}, {"oid": "02364cbec8181cb6c2616de32b4056d558f20cf9", "url": "https://github.com/vaadin/flow/commit/02364cbec8181cb6c2616de32b4056d558f20cf9", "message": "Fix for custom frontend folder name", "committedDate": "2020-12-29T17:41:53Z", "type": "commit"}, {"oid": "db8fc4a750d6988fe72531778c3be7b1dd3a892a", "url": "https://github.com/vaadin/flow/commit/db8fc4a750d6988fe72531778c3be7b1dd3a892a", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2020-12-31T07:20:05Z", "type": "commit"}, {"oid": "96cf65166f033d1b175a62c4a6ddae7d5bf8e1a8", "url": "https://github.com/vaadin/flow/commit/96cf65166f033d1b175a62c4a6ddae7d5bf8e1a8", "message": "Unit test for generating vaadin.ts imports index and AppTheme", "committedDate": "2020-12-31T09:43:42Z", "type": "commit"}, {"oid": "96cf65166f033d1b175a62c4a6ddae7d5bf8e1a8", "url": "https://github.com/vaadin/flow/commit/96cf65166f033d1b175a62c4a6ddae7d5bf8e1a8", "message": "Unit test for generating vaadin.ts imports index and AppTheme", "committedDate": "2020-12-31T09:43:42Z", "type": "forcePushed"}, {"oid": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "url": "https://github.com/vaadin/flow/commit/58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "message": "IT test for AppTheme in client-side view", "committedDate": "2020-12-31T12:20:58Z", "type": "commit"}, {"oid": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "url": "https://github.com/vaadin/flow/commit/58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "message": "IT test for AppTheme in client-side view", "committedDate": "2020-12-31T12:20:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3MDI5MQ==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551270291", "bodyText": "On the first glance it may seem for reader that the generated/ folder corresponds to ${project.root}/generated, but actually ${project.root}/frontend/generated. So I propose to extend the comment with that this folder is inside frontend folder", "author": "mshabarov", "createdAt": "2021-01-04T11:47:32Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java", "diffHunk": "@@ -90,6 +90,11 @@\n      */\n     public static final String FRONTEND = \"frontend/\";\n \n+    /**\n+     * Default folder for client-side generated files.", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgwNDQwMA==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551804400", "bodyText": "Added.", "author": "tanbt", "createdAt": "2021-01-05T09:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3MDI5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\nindex fa0c77e5b6..7f90dcfaf5 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n\n@@ -91,7 +90,8 @@ public class FrontendUtils {\n     public static final String FRONTEND = \"frontend/\";\n \n     /**\n-     * Default folder for client-side generated files.\n+     * Default folder for client-side generated files inside the project root\n+     * frontend folder\n      */\n     public static final String GENERATED = \"generated/\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3MDY3NA==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551270674", "bodyText": "Good to mention that this file is autogenerated and where it's generated (in frontend/generated/)", "author": "mshabarov", "createdAt": "2021-01-04T11:48:23Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java", "diffHunk": "@@ -166,6 +171,11 @@\n      */\n     public static final String IMPORTS_D_TS_NAME = \"generated-flow-imports.d.ts\";\n \n+    /**\n+     * File name of the bootstrap file in client side.", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgwNTg2Mg==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551805862", "bodyText": "Added.", "author": "tanbt", "createdAt": "2021-01-05T09:15:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3MDY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\nindex fa0c77e5b6..7f90dcfaf5 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n\n@@ -172,7 +172,8 @@ public class FrontendUtils {\n     public static final String IMPORTS_D_TS_NAME = \"generated-flow-imports.d.ts\";\n \n     /**\n-     * File name of the bootstrap file in client side.\n+     * File name of the bootstrap file that is generated in frontend\n+     * {@link #GENERATED} folder. The bootstrap file is always executed in a Vaadin app.\n      */\n     public static final String BOOTSTRAP_FILE_NAME = \"vaadin.ts\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3NzExNg==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551277116", "bodyText": "Do I understand right, that this fix won't work for old (deprecated) bootstrapping? Although, it might be completely fine, because TS views theming is not even needed with deprecated V14 bootstrap, is it (TS views do not work with old bootstrapping)?", "author": "mshabarov", "createdAt": "2021-01-04T12:03:21Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -533,6 +533,8 @@ private NodeTasks(Builder builder) {\n                     && builder.connectGeneratedOpenApiFile != null) {\n                 addConnectServicesTasks(builder);\n             }\n+\n+            commands.add(new TaskGenerateBootstrap(frontendDependencies, builder.frontendDirectory));", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxMjUwNA==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551812504", "bodyText": "TS views do not work with old bootstrapping\n\nIt looks like that but I'm not 100% sure.\nFrom the source code, old bootstrapping (do you know any example of old bootstrapping?) doesn't run addBootstrapTasks so TS views probably won't work with it.\n        if (!builder.useDeprecatedV14Bootstrapping) {\n            addBootstrapTasks(builder);\n            //......\n            commands.add(new TaskGenerateBootstrap(frontendDependencies, builder.frontendDirectory));\n        }", "author": "tanbt", "createdAt": "2021-01-05T09:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3NzExNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg2OTgzMQ==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551869831", "bodyText": "Yes, Viktor confirmed TS views do not work in old bootstrapping.", "author": "mshabarov", "createdAt": "2021-01-05T11:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI3NzExNg=="}], "type": "inlineReview", "revised_code": {"commit": "69faa1eb09a237de143601128ff8deebbbc12c72", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java\nindex 7a2dd4b938..bc8b20d1c4 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java\n\n@@ -526,7 +542,7 @@ public class NodeTasks implements FallibleCommand {\n         }\n \n         if (!builder.useDeprecatedV14Bootstrapping) {\n-            addBootstrapTasks(builder);\n+            addBootstrapTasks(builder, frontendDependencies);\n \n             if (builder.connectJavaSourceFolder != null\n                     && builder.connectJavaSourceFolder.exists()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4MTY0Ng==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551281646", "bodyText": "WebComponentGenerator class still contains applyTheme code injection for shadow root. Do we need to point it to the vaadin.ts within this PR, or is it another feature/fix?", "author": "mshabarov", "createdAt": "2021-01-04T12:13:46Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.vaadin.flow.server.frontend.scanner.FrontendDependenciesScanner;\n+import com.vaadin.flow.theme.ThemeDefinition;\n+\n+import static com.vaadin.flow.server.frontend.FrontendUtils.BOOTSTRAP_FILE_NAME;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.GENERATED;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_JS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n+\n+/**\n+ * A task for generate a TS file which is always executed in a Vaadin app.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public class TaskGenerateBootstrap extends AbstractTaskClientGenerator {\n+\n+    private final FrontendDependenciesScanner frontDeps;\n+    private final File connectClientTsApiFolder;\n+    private final File frontendDirectory;\n+\n+    TaskGenerateBootstrap(FrontendDependenciesScanner frontDeps,\n+            File frontendDirectory) {\n+        this.frontDeps = frontDeps;\n+        this.frontendDirectory = frontendDirectory;\n+        this.connectClientTsApiFolder = new File(Paths\n+                .get(frontendDirectory.getPath(), GENERATED).toString());\n+    }\n+\n+    @Override\n+    protected String getFileContent() {\n+        List<String> lines = new ArrayList<>();\n+        lines.add(String.format(\"import '%s';%n\", getIndexTsEntryPath()));\n+        lines.addAll(getThemeLines());\n+\n+        return String.join(\"\\n\", lines);\n+    }\n+\n+    @Override\n+    protected File getGeneratedFile() {\n+        return new File(connectClientTsApiFolder, BOOTSTRAP_FILE_NAME);\n+    }\n+\n+    @Override\n+    protected boolean shouldGenerate() {\n+        return frontDeps != null && connectClientTsApiFolder != null;\n+    }\n+\n+    private String getIndexTsEntryPath() {\n+        boolean exists = new File(frontendDirectory, INDEX_TS).exists()\n+                || new File(frontendDirectory, INDEX_JS).exists();\n+        Path path = exists ? Paths.get(frontendDirectory.getPath(), INDEX_TS)\n+                : Paths.get(frontendDirectory.getParentFile().getPath(), TARGET,\n+                        INDEX_TS);\n+\n+        String relativePath = FrontendUtils\n+                .getUnixRelativePath(connectClientTsApiFolder.toPath(), path);\n+        return relativePath.replaceFirst(\"\\\\.[tj]s$\", \"\");\n+    }\n+\n+    private Collection<String> getThemeLines() {\n+        Collection<String> lines = new ArrayList<>();\n+        if (shouldApplyAppTheme()) {\n+            lines.add(\"//@ts-ignore\");\n+            lines.add(\n+                    \"import {applyTheme} from '../../target/flow-frontend/themes/theme-generated.js';\");\n+            lines.add(\"applyTheme(document);\");", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg2MzAxNA==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551863014", "bodyText": "Does WebComponentGenerator work in TS client-side views?\nWebComponentGenerator is new to me, and I didn't consider it during this PR.", "author": "tanbt", "createdAt": "2021-01-05T11:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4MTY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg3MzU2OQ==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551873569", "bodyText": "Does WebComponentGenerator work in TS client-side views?\n\nDouble checked the code and actually web components are separated from TS view, so not relevant. Please ignore my comment.", "author": "mshabarov", "createdAt": "2021-01-05T11:26:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4MTY0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\nindex 510a750555..3fdce34917 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n\n@@ -32,7 +32,8 @@ import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n \n /**\n- * A task for generate a TS file which is always executed in a Vaadin app.\n+ * A task for generating the bootstrap file\n+ * {@link FrontendUtils#BOOTSTRAP_FILE_NAME} during `package` Maven goal.\n  *\n  * @author Vaadin Ltd\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4NDk5Ng==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551284996", "bodyText": "Not clear from this javadoc what's the file (name), when and where is it being executed, as well as it's goal.", "author": "mshabarov", "createdAt": "2021-01-04T12:21:14Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.vaadin.flow.server.frontend.scanner.FrontendDependenciesScanner;\n+import com.vaadin.flow.theme.ThemeDefinition;\n+\n+import static com.vaadin.flow.server.frontend.FrontendUtils.BOOTSTRAP_FILE_NAME;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.GENERATED;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_JS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n+\n+/**\n+ * A task for generate a TS file which is always executed in a Vaadin app.", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxODg1Mw==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551818853", "bodyText": "Updated with a link to FrontendUtils#BOOTSTRAP_FILE_NAME where the bootstrap file is explained a bit more detail.", "author": "tanbt", "createdAt": "2021-01-05T09:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4NDk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\nindex 510a750555..3fdce34917 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n\n@@ -32,7 +32,8 @@ import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n \n /**\n- * A task for generate a TS file which is always executed in a Vaadin app.\n+ * A task for generating the bootstrap file\n+ * {@link FrontendUtils#BOOTSTRAP_FILE_NAME} during `package` Maven goal.\n  *\n  * @author Vaadin Ltd\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5NDM0Mg==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551294342", "bodyText": "Not sure here, maybe it's totally fine, but is that correct that index.ts file is supposed to be in target/ root, not in target/flow-frontend?", "author": "mshabarov", "createdAt": "2021-01-04T12:41:32Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.vaadin.flow.server.frontend.scanner.FrontendDependenciesScanner;\n+import com.vaadin.flow.theme.ThemeDefinition;\n+\n+import static com.vaadin.flow.server.frontend.FrontendUtils.BOOTSTRAP_FILE_NAME;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.GENERATED;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_JS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n+\n+/**\n+ * A task for generate a TS file which is always executed in a Vaadin app.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public class TaskGenerateBootstrap extends AbstractTaskClientGenerator {\n+\n+    private final FrontendDependenciesScanner frontDeps;\n+    private final File connectClientTsApiFolder;\n+    private final File frontendDirectory;\n+\n+    TaskGenerateBootstrap(FrontendDependenciesScanner frontDeps,\n+            File frontendDirectory) {\n+        this.frontDeps = frontDeps;\n+        this.frontendDirectory = frontendDirectory;\n+        this.connectClientTsApiFolder = new File(Paths\n+                .get(frontendDirectory.getPath(), GENERATED).toString());\n+    }\n+\n+    @Override\n+    protected String getFileContent() {\n+        List<String> lines = new ArrayList<>();\n+        lines.add(String.format(\"import '%s';%n\", getIndexTsEntryPath()));\n+        lines.addAll(getThemeLines());\n+\n+        return String.join(\"\\n\", lines);\n+    }\n+\n+    @Override\n+    protected File getGeneratedFile() {\n+        return new File(connectClientTsApiFolder, BOOTSTRAP_FILE_NAME);\n+    }\n+\n+    @Override\n+    protected boolean shouldGenerate() {\n+        return frontDeps != null && connectClientTsApiFolder != null;\n+    }\n+\n+    private String getIndexTsEntryPath() {\n+        boolean exists = new File(frontendDirectory, INDEX_TS).exists()\n+                || new File(frontendDirectory, INDEX_JS).exists();\n+        Path path = exists ? Paths.get(frontendDirectory.getPath(), INDEX_TS)\n+                : Paths.get(frontendDirectory.getParentFile().getPath(), TARGET,", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyNjAxMg==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551326012", "bodyText": "Oh, this was taken from TaskUpdateWebpack. Skip my comment.", "author": "mshabarov", "createdAt": "2021-01-04T13:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5NDM0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\nindex 510a750555..3fdce34917 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n\n@@ -32,7 +32,8 @@ import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n \n /**\n- * A task for generate a TS file which is always executed in a Vaadin app.\n+ * A task for generating the bootstrap file\n+ * {@link FrontendUtils#BOOTSTRAP_FILE_NAME} during `package` Maven goal.\n  *\n  * @author Vaadin Ltd\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5OTg3OA==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551299878", "bodyText": "Might this field connectClientTsApiFolder  ever be a null? it's created in CTOR and has a final.", "author": "mshabarov", "createdAt": "2021-01-04T12:53:28Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.vaadin.flow.server.frontend.scanner.FrontendDependenciesScanner;\n+import com.vaadin.flow.theme.ThemeDefinition;\n+\n+import static com.vaadin.flow.server.frontend.FrontendUtils.BOOTSTRAP_FILE_NAME;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.GENERATED;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_JS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n+\n+/**\n+ * A task for generate a TS file which is always executed in a Vaadin app.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public class TaskGenerateBootstrap extends AbstractTaskClientGenerator {\n+\n+    private final FrontendDependenciesScanner frontDeps;\n+    private final File connectClientTsApiFolder;\n+    private final File frontendDirectory;\n+\n+    TaskGenerateBootstrap(FrontendDependenciesScanner frontDeps,\n+            File frontendDirectory) {\n+        this.frontDeps = frontDeps;\n+        this.frontendDirectory = frontendDirectory;\n+        this.connectClientTsApiFolder = new File(Paths\n+                .get(frontendDirectory.getPath(), GENERATED).toString());\n+    }\n+\n+    @Override\n+    protected String getFileContent() {\n+        List<String> lines = new ArrayList<>();\n+        lines.add(String.format(\"import '%s';%n\", getIndexTsEntryPath()));\n+        lines.addAll(getThemeLines());\n+\n+        return String.join(\"\\n\", lines);\n+    }\n+\n+    @Override\n+    protected File getGeneratedFile() {\n+        return new File(connectClientTsApiFolder, BOOTSTRAP_FILE_NAME);\n+    }\n+\n+    @Override\n+    protected boolean shouldGenerate() {\n+        return frontDeps != null && connectClientTsApiFolder != null;", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMxNDk2Mg==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551314962", "bodyText": "Also, don't we check here the result of shouldApplyAppTheme() ? So that if no theme definition => no file generate?", "author": "mshabarov", "createdAt": "2021-01-04T13:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5OTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyNTM5Mw==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551825393", "bodyText": "Removed null check for connectClientTsApiFolder , it was an old check before my refactoring.\n\nAlso, don't we check here the result of shouldApplyAppTheme() ? So that if no theme definition => no file generate?\n\nThis bootstrap file doesn't only contain app-theme script but also other things, i.e. import 'index' and something else later. That's why I only check shouldApplyAppTheme before generating app-theme scripts.", "author": "tanbt", "createdAt": "2021-01-05T09:51:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5OTg3OA=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\nindex 510a750555..3fdce34917 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n\n@@ -32,7 +32,8 @@ import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n \n /**\n- * A task for generate a TS file which is always executed in a Vaadin app.\n+ * A task for generating the bootstrap file\n+ * {@link FrontendUtils#BOOTSTRAP_FILE_NAME} during `package` Maven goal.\n  *\n  * @author Vaadin Ltd\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMwMzkwNw==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551303907", "bodyText": "Could you please give a comment here that the relativePath is a relative path of a file given by path to the path frontend/generated? It's really hard to get the meaning of this line of code without any certain example.", "author": "mshabarov", "createdAt": "2021-01-04T13:02:12Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.vaadin.flow.server.frontend.scanner.FrontendDependenciesScanner;\n+import com.vaadin.flow.theme.ThemeDefinition;\n+\n+import static com.vaadin.flow.server.frontend.FrontendUtils.BOOTSTRAP_FILE_NAME;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.GENERATED;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_JS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n+import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n+\n+/**\n+ * A task for generate a TS file which is always executed in a Vaadin app.\n+ *\n+ * @author Vaadin Ltd\n+ */\n+public class TaskGenerateBootstrap extends AbstractTaskClientGenerator {\n+\n+    private final FrontendDependenciesScanner frontDeps;\n+    private final File connectClientTsApiFolder;\n+    private final File frontendDirectory;\n+\n+    TaskGenerateBootstrap(FrontendDependenciesScanner frontDeps,\n+            File frontendDirectory) {\n+        this.frontDeps = frontDeps;\n+        this.frontendDirectory = frontendDirectory;\n+        this.connectClientTsApiFolder = new File(Paths\n+                .get(frontendDirectory.getPath(), GENERATED).toString());\n+    }\n+\n+    @Override\n+    protected String getFileContent() {\n+        List<String> lines = new ArrayList<>();\n+        lines.add(String.format(\"import '%s';%n\", getIndexTsEntryPath()));\n+        lines.addAll(getThemeLines());\n+\n+        return String.join(\"\\n\", lines);\n+    }\n+\n+    @Override\n+    protected File getGeneratedFile() {\n+        return new File(connectClientTsApiFolder, BOOTSTRAP_FILE_NAME);\n+    }\n+\n+    @Override\n+    protected boolean shouldGenerate() {\n+        return frontDeps != null && connectClientTsApiFolder != null;\n+    }\n+\n+    private String getIndexTsEntryPath() {\n+        boolean exists = new File(frontendDirectory, INDEX_TS).exists()\n+                || new File(frontendDirectory, INDEX_JS).exists();\n+        Path path = exists ? Paths.get(frontendDirectory.getPath(), INDEX_TS)\n+                : Paths.get(frontendDirectory.getParentFile().getPath(), TARGET,\n+                        INDEX_TS);\n+\n+        String relativePath = FrontendUtils\n+                .getUnixRelativePath(connectClientTsApiFolder.toPath(), path);", "originalCommit": "58d3b81b8e0a6df3ee422c84b5e61b66b0f5bf94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg1NDU3MQ==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r551854571", "bodyText": "Added comment with examples.", "author": "tanbt", "createdAt": "2021-01-05T10:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMwMzkwNw=="}], "type": "inlineReview", "revised_code": {"commit": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\nindex 510a750555..3fdce34917 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskGenerateBootstrap.java\n\n@@ -32,7 +32,8 @@ import static com.vaadin.flow.server.frontend.FrontendUtils.INDEX_TS;\n import static com.vaadin.flow.server.frontend.FrontendUtils.TARGET;\n \n /**\n- * A task for generate a TS file which is always executed in a Vaadin app.\n+ * A task for generating the bootstrap file\n+ * {@link FrontendUtils#BOOTSTRAP_FILE_NAME} during `package` Maven goal.\n  *\n  * @author Vaadin Ltd\n  */\n"}}, {"oid": "6fe2e6904fd7b98e59d629734baf1c0567c654ad", "url": "https://github.com/vaadin/flow/commit/6fe2e6904fd7b98e59d629734baf1c0567c654ad", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2021-01-05T08:37:29Z", "type": "commit"}, {"oid": "745b54a4bcad1e76507067326e714976915bcfdc", "url": "https://github.com/vaadin/flow/commit/745b54a4bcad1e76507067326e714976915bcfdc", "message": "Remove scripts for loading AppTheme in generated-flow-imports.js", "committedDate": "2021-01-05T08:44:28Z", "type": "commit"}, {"oid": "f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "url": "https://github.com/vaadin/flow/commit/f2788c3c8279386bce0d64b1d49fdf15d518a3e2", "message": "Update based on comments", "committedDate": "2021-01-05T11:09:39Z", "type": "commit"}, {"oid": "69faa1eb09a237de143601128ff8deebbbc12c72", "url": "https://github.com/vaadin/flow/commit/69faa1eb09a237de143601128ff8deebbbc12c72", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2021-01-05T13:52:37Z", "type": "commit"}, {"oid": "77d1f7b3487f6ae67c7cac977b59f802c9e9ea27", "url": "https://github.com/vaadin/flow/commit/77d1f7b3487f6ae67c7cac977b59f802c9e9ea27", "message": "Fix after rebased", "committedDate": "2021-01-05T19:33:47Z", "type": "commit"}, {"oid": "a12f51b44e7b4722cbaf1e7b7c5329c2d52f7a9a", "url": "https://github.com/vaadin/flow/commit/a12f51b44e7b4722cbaf1e7b7c5329c2d52f7a9a", "message": "Merge branch 'master' into bug/fusion-app-theme-1", "committedDate": "2021-01-07T06:57:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE0MzM5OQ==", "url": "https://github.com/vaadin/flow/pull/9725#discussion_r553143399", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * frontend folder\n          \n          \n            \n                 * frontend folder.", "author": "mshabarov", "createdAt": "2021-01-07T07:02:59Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java", "diffHunk": "@@ -93,6 +92,12 @@\n      */\n     public static final String FRONTEND = \"frontend/\";\n \n+    /**\n+     * Default folder for client-side generated files inside the project root\n+     * frontend folder", "originalCommit": "a12f51b44e7b4722cbaf1e7b7c5329c2d52f7a9a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b65243af9aa99eb90227ff355950f1b35a390266", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\nindex b7c6406b2d..0aa8dd0af5 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n\n@@ -94,7 +94,7 @@ public class FrontendUtils {\n \n     /**\n      * Default folder for client-side generated files inside the project root\n-     * frontend folder\n+     * frontend folder.\n      */\n     public static final String GENERATED = \"generated/\";\n \n"}}, {"oid": "b65243af9aa99eb90227ff355950f1b35a390266", "url": "https://github.com/vaadin/flow/commit/b65243af9aa99eb90227ff355950f1b35a390266", "message": "Update flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java\n\nCo-authored-by: Mikhail Shabarov <61410877+mshabarov@users.noreply.github.com>", "committedDate": "2021-01-07T07:13:03Z", "type": "commit"}]}