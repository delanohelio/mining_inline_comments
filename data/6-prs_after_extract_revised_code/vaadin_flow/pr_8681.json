{"pr_number": 8681, "pr_title": "Fall back to user.dir / cwd as frontend build base directory only if it is a project directory", "pr_createdAt": "2020-07-02T12:47:47Z", "pr_url": "https://github.com/vaadin/flow/pull/8681", "timeline": [{"oid": "e87cd961dbf92fabe95f40f737889ee3c66882c7", "url": "https://github.com/vaadin/flow/commit/e87cd961dbf92fabe95f40f737889ee3c66882c7", "message": "Fall back to user.dir / cwd as frontend build base directory only if it is a project directory", "committedDate": "2020-07-02T12:35:02Z", "type": "commit"}, {"oid": "3f62cf0bf009959e03c0e2107c9cf22f18f91f7d", "url": "https://github.com/vaadin/flow/commit/3f62cf0bf009959e03c0e2107c9cf22f18f91f7d", "message": "Apply Sonar suggestion to not use NIO for file existence for JDK8 performance issues", "committedDate": "2020-07-02T14:03:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4NTM4NA==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450785384", "bodyText": "Could we simplify this by placing getBaseDirectoryFallback() directly as a second parameter of method instead of null?", "author": "mshabarov", "createdAt": "2020-07-07T11:09:05Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java", "diffHunk": "@@ -267,8 +267,10 @@ public static void initDevModeHandler(Set<Class<?>> classes,\n             return;\n         }\n \n-        String baseDir = config.getStringProperty(FrontendUtils.PROJECT_BASEDIR,\n-                System.getProperty(\"user.dir\", \".\"));\n+        String baseDir = config.getStringProperty(FrontendUtils.PROJECT_BASEDIR, null);", "originalCommit": "3f62cf0bf009959e03c0e2107c9cf22f18f91f7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwODQ3NA==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450808474", "bodyText": "No. getBaseDirectoryFallback() should be evaluated lazily, as it throws on failure.", "author": "joheriks", "createdAt": "2020-07-07T11:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4NTM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxMTQxOA==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450811418", "bodyText": "You're right! Thanks", "author": "mshabarov", "createdAt": "2020-07-07T12:01:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4NTM4NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4NzAzMg==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450787032", "bodyText": "I propose to explicitly add the mention of flow-build-info.json: \"... prepare-frontend Maven goal which generates 'flow-build-info.json' file prior to deploying ...\"", "author": "mshabarov", "createdAt": "2020-07-07T11:12:25Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java", "diffHunk": "@@ -423,6 +425,29 @@ public void contextDestroyed(ServletContextEvent ctx) {\n         }\n     }\n \n+    /*\n+     * Accept user.dir or cwd as a fallback only if the directory seems to be a\n+     * Maven or Gradle project. Check to avoid cluttering server directories\n+     * (see tickets #8249, #8403).\n+     */\n+    private static String getBaseDirectoryFallback() {\n+        String baseDirCandidate = System.getProperty(\"user.dir\", \".\");\n+        Path path = Paths.get(baseDirCandidate);\n+        if (path.toFile().isDirectory()\n+                && (path.resolve(\"pom.xml\").toFile().exists()\n+                        || path.resolve(\"build.gradle\").toFile().exists())) {\n+            return path.toString();\n+        } else {\n+            throw new IllegalStateException(String.format(\n+                    \"Failed to determine project directory for dev mode. \"\n+                            + \"Directory '%s' does not look like a Maven or \"\n+                            + \"Gradle project. Ensure that you have run the \"\n+                            + \"prepare-frontend Maven goal prior to deploying \"", "originalCommit": "3f62cf0bf009959e03c0e2107c9cf22f18f91f7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2NTUzOQ==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450865539", "bodyText": "Done.", "author": "joheriks", "createdAt": "2020-07-07T13:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4NzAzMg=="}], "type": "inlineReview", "revised_code": {"commit": "c1e2147796836158636200e5c84175d4d43fa151", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java b/flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java\nindex e36aa7db30..5dfeefa7a7 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/startup/DevModeInitializer.java\n\n@@ -442,8 +442,9 @@ public class DevModeInitializer\n                     \"Failed to determine project directory for dev mode. \"\n                             + \"Directory '%s' does not look like a Maven or \"\n                             + \"Gradle project. Ensure that you have run the \"\n-                            + \"prepare-frontend Maven goal prior to deploying \"\n-                            + \"your application\",\n+                            + \"prepare-frontend Maven goal, which generates \"\n+                            +\"'flow-build-info.json', prior to deploying your \"\n+                            + \"application\",\n                     path.toString()));\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4Nzk5MQ==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450787991", "bodyText": "Let's add the gradle case as well", "author": "mshabarov", "createdAt": "2020-07-07T11:14:32Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/startup/DevModeInitializerTest.java", "diffHunk": "@@ -396,6 +397,47 @@ public void onStartup_devModeAlreadyStarted_shouldBeTrueWhenStarted() throws Exc\n         assertTrue(DevModeInitializer.isDevModeAlreadyStarted(servletContext));\n     }\n \n+    @Test(expected = IllegalStateException.class)\n+    public void onStartup_fallbackBaseDirIsNotProjectDirectory_throws()\n+            throws Exception {\n+        initParams.remove(FrontendUtils.PROJECT_BASEDIR);\n+        TemporaryFolder tmp = new TemporaryFolder();\n+        tmp.create();\n+        baseDir = tmp.getRoot().getPath();\n+\n+        String originalUserDirValue = null;\n+        try {\n+            originalUserDirValue = System.getProperty(\"user.dir\");\n+            System.setProperty(\"user.dir\", baseDir);\n+            devModeInitializer.onStartup(classes, servletContext);\n+        } finally {\n+            if (originalUserDirValue != null) {\n+                System.setProperty(\"user.dir\", originalUserDirValue);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void onStartup_fallbackBaseDirIsMavenProjectDirectory_isAccepted()\n+            throws Exception {\n+        initParams.remove(FrontendUtils.PROJECT_BASEDIR);\n+        TemporaryFolder tmp = new TemporaryFolder();\n+        tmp.create();\n+        tmp.newFile(\"pom.xml\");", "originalCommit": "3f62cf0bf009959e03c0e2107c9cf22f18f91f7d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2NTU5Ng==", "url": "https://github.com/vaadin/flow/pull/8681#discussion_r450865596", "bodyText": "Done.", "author": "joheriks", "createdAt": "2020-07-07T13:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc4Nzk5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "164c07db27723fe3e528ba9bc79d00222b56bdc7", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/startup/DevModeInitializerTest.java b/flow-server/src/test/java/com/vaadin/flow/server/startup/DevModeInitializerTest.java\nindex 9f35377bff..548980e173 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/startup/DevModeInitializerTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/startup/DevModeInitializerTest.java\n\n@@ -438,6 +438,27 @@ public class DevModeInitializerTest extends DevModeInitializerTestBase {\n         }\n     }\n \n+    @Test\n+    public void onStartup_fallbackBaseDirIsGradleProjectDirectory_isAccepted()\n+            throws Exception {\n+        initParams.remove(FrontendUtils.PROJECT_BASEDIR);\n+        TemporaryFolder tmp = new TemporaryFolder();\n+        tmp.create();\n+        tmp.newFile(\"build.gradle\");\n+        baseDir = tmp.getRoot().getPath();\n+\n+        String originalUserDirValue = null;\n+        try {\n+            originalUserDirValue = System.getProperty(\"user.dir\");\n+            System.setProperty(\"user.dir\", baseDir);\n+            devModeInitializer.onStartup(classes, servletContext);\n+        } finally {\n+            if (originalUserDirValue != null) {\n+                System.setProperty(\"user.dir\", originalUserDirValue);\n+            }\n+        }\n+    }\n+\n     private void loadingJars_allFilesExist(String resourcesFolder)\n             throws IOException, ServletException {\n         loadingJarsWithProtocol_allFilesExist(resourcesFolder, s -> {\n"}}, {"oid": "c1e2147796836158636200e5c84175d4d43fa151", "url": "https://github.com/vaadin/flow/commit/c1e2147796836158636200e5c84175d4d43fa151", "message": "Improved exception message", "committedDate": "2020-07-07T13:30:30Z", "type": "commit"}, {"oid": "164c07db27723fe3e528ba9bc79d00222b56bdc7", "url": "https://github.com/vaadin/flow/commit/164c07db27723fe3e528ba9bc79d00222b56bdc7", "message": "Unit test for build.gradle", "committedDate": "2020-07-07T13:30:47Z", "type": "commit"}]}