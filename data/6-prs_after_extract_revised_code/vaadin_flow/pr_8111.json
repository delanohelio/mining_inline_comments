{"pr_number": 8111, "pr_title": "Be aware of skinny war workaround in OSGi support", "pr_createdAt": "2020-04-20T09:38:04Z", "pr_url": "https://github.com/vaadin/flow/pull/8111", "timeline": [{"oid": "bf711eda7bef544c0e33bab49335605f6323bbc5", "url": "https://github.com/vaadin/flow/commit/bf711eda7bef544c0e33bab49335605f6323bbc5", "message": "Be aware of skinny war workaround in OSGi support\n\nFixes #8105", "committedDate": "2020-04-20T08:28:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI0MzI5NA==", "url": "https://github.com/vaadin/flow/pull/8111#discussion_r411243294", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "author": "vaadin-bot", "createdAt": "2020-04-20T09:48:10Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/osgi/OSGiAccess.java", "diffHunk": "@@ -202,8 +202,17 @@ private void resetContextInitializers() {\n     private void handleTypes(ServletContainerInitializer initializer) {\n         Optional<HandlesTypes> handleTypes = AnnotationReader\n                 .getAnnotationFor(initializer.getClass(), HandlesTypes.class);\n+        /*\n+         * Every initializer should be an instance of\n+         * ClassLoaderAwareServletContainerInitializer : there is a test which\n+         * forces this. So assert should be enough here.\n+         */\n+        assert initializer instanceof ClassLoaderAwareServletContainerInitializer;\n         try {\n-            initializer.onStartup(filterClasses(handleTypes.orElse(null)),\n+            // don't use onStartup method because a fake servlet context is\n+            // passed here: no need to detect classloaders in OSGi case\n+            ((ClassLoaderAwareServletContainerInitializer) initializer).process(\n+                    filterClasses(handleTypes.orElse(null)),\n                     getOsgiServletContext());\n         } catch (ServletException e) {\n             throw new RuntimeException(", "originalCommit": "bf711eda7bef544c0e33bab49335605f6323bbc5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d469da0433544fc6e699dad87a6572913b55879", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/osgi/OSGiAccess.java b/flow-server/src/main/java/com/vaadin/flow/server/osgi/OSGiAccess.java\nindex ab30b8b508..c613961d6e 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/osgi/OSGiAccess.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/osgi/OSGiAccess.java\n\n@@ -195,8 +213,13 @@ public final class OSGiAccess {\n     }\n \n     private void resetContextInitializers() {\n-        initializerClasses.get().stream().map(ReflectTools::createInstance)\n-                .forEach(this::handleTypes);\n+        try {\n+            initializerClasses.get().stream().map(ReflectTools::createInstance)\n+                    .forEach(this::handleTypes);\n+        } catch (Exception exception) {\n+            exception.printStackTrace();\n+            throw exception;\n+        }\n     }\n \n     private void handleTypes(ServletContainerInitializer initializer) {\n"}}, {"oid": "5d469da0433544fc6e699dad87a6572913b55879", "url": "https://github.com/vaadin/flow/commit/5d469da0433544fc6e699dad87a6572913b55879", "message": "Enable OSGi support for 2.2", "committedDate": "2020-04-21T05:40:51Z", "type": "commit"}, {"oid": "1d0c909412a9a8c1ed1f30988c5eca977e0fe8ea", "url": "https://github.com/vaadin/flow/commit/1d0c909412a9a8c1ed1f30988c5eca977e0fe8ea", "message": "Reset the code back", "committedDate": "2020-04-21T07:36:15Z", "type": "commit"}, {"oid": "240c1b2eae5d9a6da43ec7a58bd4215baebf3dd2", "url": "https://github.com/vaadin/flow/commit/240c1b2eae5d9a6da43ec7a58bd4215baebf3dd2", "message": "Format extra dependency to OSGi test module", "committedDate": "2020-04-21T07:38:14Z", "type": "commit"}]}