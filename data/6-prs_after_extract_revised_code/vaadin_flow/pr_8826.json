{"pr_number": 8826, "pr_title": "Add transmission semantic for URI attribute values", "pr_createdAt": "2020-08-07T05:38:01Z", "pr_url": "https://github.com/vaadin/flow/pull/8826", "timeline": [{"oid": "aa44391af76e0f3695e8de7cd250216242018d75", "url": "https://github.com/vaadin/flow/commit/aa44391af76e0f3695e8de7cd250216242018d75", "message": "Add transmission semantic for URI attribute values\n\nFixes #8813", "committedDate": "2020-08-06T08:07:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MDMyOQ==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466870329", "bodyText": "Please put a brief explanations that this wrapper is put intentionally within doSetResource method? Why don't we use java cast here, but use a JS cast?", "author": "mshabarov", "createdAt": "2020-08-07T07:29:10Z", "path": "flow-client/src/main/java/com/vaadin/client/flow/binding/SimpleElementBindingStrategy.java", "diffHunk": "@@ -1366,6 +1375,28 @@ private EventRemover bindClientCallableMethods(BindingContext context) {\n                 (Element) context.htmlNode, context.node);\n     }\n \n+    private static void updateAttributeValue(\n+            ApplicationConfiguration configuration, Element element,\n+            String attribute, Object value) {\n+        if (value == null || value instanceof String) {\n+            WidgetUtil.updateAttribute(element, attribute, (String) value);\n+        } else {\n+            JsonObject object = WidgetUtil.crazyJsCast(value);", "originalCommit": "aa44391af76e0f3695e8de7cd250216242018d75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkxOTI4MQ==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466919281", "bodyText": "Which doSetResource  ?\nI don't understand this comment , sorry.\nJava cast doesn't work here since it's a client side code which works this way. This will be compiled into JS.", "author": "denis-anisimov", "createdAt": "2020-08-07T09:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3MDMyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ebadd21ac4212d281b33341ca790064c6a2abf9", "chunk": "diff --git a/flow-client/src/main/java/com/vaadin/client/flow/binding/SimpleElementBindingStrategy.java b/flow-client/src/main/java/com/vaadin/client/flow/binding/SimpleElementBindingStrategy.java\nindex b25e57b5a6..cac2a466cd 100644\n--- a/flow-client/src/main/java/com/vaadin/client/flow/binding/SimpleElementBindingStrategy.java\n+++ b/flow-client/src/main/java/com/vaadin/client/flow/binding/SimpleElementBindingStrategy.java\n\n@@ -1381,7 +1381,7 @@ public class SimpleElementBindingStrategy implements BindingStrategy<Element> {\n         if (value == null || value instanceof String) {\n             WidgetUtil.updateAttribute(element, attribute, (String) value);\n         } else {\n-            JsonObject object = WidgetUtil.crazyJsCast(value);\n+            JsonObject object = WidgetUtil.crazyJsoCast(value);\n             assert object.hasKey(\n                     NodeProperties.URI_ATTRIBUTE) : \"Implementation error: JsonObject is recieved as an attribute value for '\"\n                             + attribute + \"' but it has no \"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg3NzU2NQ==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466877565", "bodyText": "Update a javadoc accordingly: ... otherwise {@code value.toString()} is set as its value. is obsolete now.", "author": "mshabarov", "createdAt": "2020-08-07T07:44:45Z", "path": "flow-client/src/main/java/com/vaadin/client/WidgetUtil.java", "diffHunk": "@@ -136,11 +136,11 @@ public static String toPrettyJson(JsonValue json) {\n      *            the value to update\n      */\n     public static void updateAttribute(Element element, String attribute,\n-            Object value) {\n+            String value) {\n         if (value == null) {\n             DomApi.wrap(element).removeAttribute(attribute);\n         } else {\n-            DomApi.wrap(element).setAttribute(attribute, value.toString());\n+            DomApi.wrap(element).setAttribute(attribute, value);", "originalCommit": "aa44391af76e0f3695e8de7cd250216242018d75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg4NTM3Nw==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466885377", "bodyText": "Even though the assert is placed here, I wonder why we so confident about URI_ATTRIBUTE  presence, it is hard to read and understand if someone doesn't know it should have been put here within doSetResource. Please put an explanation comment here.", "author": "mshabarov", "createdAt": "2020-08-07T08:00:30Z", "path": "flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java", "diffHunk": "@@ -103,7 +105,15 @@ public Serializable remove(String attribute) {\n      */\n     @Override\n     public String get(String attribute) {\n-        return (String) super.get(attribute);\n+        Serializable value = super.get(attribute);\n+        if (value == null || value instanceof String) {\n+            return (String) value;\n+        } else {\n+            assert value instanceof JsonObject;\n+            JsonObject object = (JsonObject) value;\n+            assert object.hasKey(NodeProperties.URI_ATTRIBUTE);", "originalCommit": "aa44391af76e0f3695e8de7cd250216242018d75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyMDQ5OA==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466920498", "bodyText": "The code will grow at least twice if we add such comments everywhere where such thins are already done.", "author": "denis-anisimov", "createdAt": "2020-08-07T09:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg4NTM3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0e65d83fdf6c3138fb96d588e82faee181452a6f", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java b/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java\nindex 698273d0dd..b74d1a5ce2 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java\n\n@@ -109,8 +109,12 @@ public class ElementAttributeMap extends NodeMap {\n         if (value == null || value instanceof String) {\n             return (String) value;\n         } else {\n+            // If the value is not a string then current impl only uses\n+            // JsonObject\n             assert value instanceof JsonObject;\n             JsonObject object = (JsonObject) value;\n+            // The only object which may be set by the current imlp contains\n+            // \"uri\" attribute, only this situation is expected here.\n             assert object.hasKey(NodeProperties.URI_ATTRIBUTE);\n             return object.getString(NodeProperties.URI_ATTRIBUTE);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg4NzQxOQ==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466887419", "bodyText": "I believe this method should be private", "author": "mshabarov", "createdAt": "2020-08-07T08:04:49Z", "path": "flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java", "diffHunk": "@@ -225,6 +239,11 @@ public void execute() {\n                 }));\n     }\n \n+    public void doSet(String attribute, Serializable value) {", "originalCommit": "aa44391af76e0f3695e8de7cd250216242018d75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyMDc4NQ==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466920785", "bodyText": "Right, copy/paste.\nThanks.", "author": "denis-anisimov", "createdAt": "2020-08-07T09:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg4NzQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e65d83fdf6c3138fb96d588e82faee181452a6f", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java b/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java\nindex 698273d0dd..b74d1a5ce2 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/internal/nodefeature/ElementAttributeMap.java\n\n@@ -239,7 +243,7 @@ public class ElementAttributeMap extends NodeMap {\n                 }));\n     }\n \n-    public void doSet(String attribute, Serializable value) {\n+    private void doSet(String attribute, Serializable value) {\n         unregisterResource(attribute);\n         put(attribute, value);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5NTg4MQ==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466895881", "bodyText": "Silly question: author's bug description refers to <RootUrl>/VAADIN/dynamic/resource/... URI, but here we expect <RootUrl>/vaadin/VAADIN/dynamic/resource/.... Why?", "author": "mshabarov", "createdAt": "2020-08-07T08:22:35Z", "path": "flow-tests/test-embedding/embedding-test-assets/src/test/java/com/vaadin/flow/webcomponent/WebComponentIT.java", "diffHunk": "@@ -57,8 +58,25 @@ public void indexPageGetsWebComponent_attributeIsReflectedToServer() {\n                 select);\n \n         Assert.assertFalse(\"Message should not be visible\",\n-                noMessage.$(\"span\").first()\n-                        .isDisplayed());\n+                noMessage.$(\"span\").first().isDisplayed());\n+    }\n+\n+    @Test\n+    public void downloadLinkHasCorrectBaseURL() {\n+        open();\n+\n+        waitForElementVisible(By.id(\"show-message\"));\n+        TestBenchElement showMessage = byId(\"show-message\");\n+        TestBenchElement link = showMessage.$(\"a\").id(\"link\");\n+        String href = link.getAttribute(\"href\");\n+        // self check\n+        Assert.assertTrue(href.startsWith(getRootURL()));\n+        // remove host and port\n+        href = href.substring(getRootURL().length());\n+        // now the URI should starts with \"/vaadin\" since this is the URI of\n+        // embedded app\n+        Assert.assertThat(href,\n+                CoreMatchers.startsWith(\"/vaadin/VAADIN/dynamic/resource/\"));", "originalCommit": "aa44391af76e0f3695e8de7cd250216242018d75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyMTU3OA==", "url": "https://github.com/vaadin/flow/pull/8826#discussion_r466921578", "bodyText": "vaadin is a part of RootUrl.\nIn the original description vaadin is /v/main .", "author": "denis-anisimov", "createdAt": "2020-08-07T09:13:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5NTg4MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "0e65d83fdf6c3138fb96d588e82faee181452a6f", "url": "https://github.com/vaadin/flow/commit/0e65d83fdf6c3138fb96d588e82faee181452a6f", "message": "Add some comments, correct javadocs", "committedDate": "2020-08-07T09:14:05Z", "type": "commit"}, {"oid": "7bd7113c128de4b151833f93c227888ba92fc3fb", "url": "https://github.com/vaadin/flow/commit/7bd7113c128de4b151833f93c227888ba92fc3fb", "message": "Fix GWT tests", "committedDate": "2020-08-07T09:20:50Z", "type": "commit"}, {"oid": "9ebadd21ac4212d281b33341ca790064c6a2abf9", "url": "https://github.com/vaadin/flow/commit/9ebadd21ac4212d281b33341ca790064c6a2abf9", "message": "Use one magic method instead of another", "committedDate": "2020-08-07T10:22:32Z", "type": "commit"}, {"oid": "156b68a887fee2c1b36e1e654ae790a9de454cd8", "url": "https://github.com/vaadin/flow/commit/156b68a887fee2c1b36e1e654ae790a9de454cd8", "message": "Check the type of JsonValue before read it", "committedDate": "2020-08-07T10:45:39Z", "type": "commit"}]}