{"pr_number": 9699, "pr_title": "feat: use superclass of VadinServlet/Request if possible", "pr_createdAt": "2020-12-20T21:28:02Z", "pr_url": "https://github.com/vaadin/flow/pull/9699", "timeline": [{"oid": "66880e60139ba51ab764b6ddce8f6e8047b80048", "url": "https://github.com/vaadin/flow/commit/66880e60139ba51ab764b6ddce8f6e8047b80048", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-12-21T00:21:40Z", "type": "forcePushed"}, {"oid": "ac5a1a87a88ef236c416fbce5fd97fb96bc5b032", "url": "https://github.com/vaadin/flow/commit/ac5a1a87a88ef236c416fbce5fd97fb96bc5b032", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-12-21T00:32:53Z", "type": "forcePushed"}, {"oid": "c076b9d4716a3170e352ac8ada2f3d2e2f1122b2", "url": "https://github.com/vaadin/flow/commit/c076b9d4716a3170e352ac8ada2f3d2e2f1122b2", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-12-21T00:35:17Z", "type": "forcePushed"}, {"oid": "87541294aa82b709f239575f9514c07e41bc508f", "url": "https://github.com/vaadin/flow/commit/87541294aa82b709f239575f9514c07e41bc508f", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-12-21T01:46:02Z", "type": "forcePushed"}, {"oid": "4803667113cbc1848152f170d75af346c285e2ef", "url": "https://github.com/vaadin/flow/commit/4803667113cbc1848152f170d75af346c285e2ef", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-12-21T02:10:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ3ODA0Nw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r546478047", "bodyText": "Remove this unused import 'javax.servlet.ServletRequestWrapper'.", "author": "vaadin-bot", "createdAt": "2020-12-21T02:22:27Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "diffHunk": "@@ -16,6 +16,8 @@\n package com.vaadin.flow.server.communication;\n \n import javax.servlet.ServletContext;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletRequestWrapper;", "originalCommit": "4803667113cbc1848152f170d75af346c285e2ef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "ae688b9edce49530fe1ece708a911db8c3a11a03", "url": "https://github.com/vaadin/flow/commit/ae688b9edce49530fe1ece708a911db8c3a11a03", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2020-12-21T12:11:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODA2NA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569988064", "bodyText": "Since this is VaadinServlet it means that there should be a servlet. I don't see a point in doing any changes for this class for \"no servlet present\". Why are there changes done here ?", "author": "pleku", "createdAt": "2021-02-04T07:01:47Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -51,7 +51,7 @@\n  * @since 1.0\n  */\n public class VaadinServlet extends HttpServlet {\n-    private VaadinServletService servletService;\n+    private VaadinService servletService;", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDAyMzMxNA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570023314", "bodyText": "I do not use the VaadinServletService i am using my own VaadinServic.If I want to use your VaadinServlet.class i have no way to do this because it must be your VaadinServletService.\nBut you are not using any methods of VaadinServletService because VaadinService is enough.", "author": "stbischof", "createdAt": "2021-02-04T08:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODA2NA=="}], "type": "inlineReview", "revised_code": {"commit": "6246f5895b5e364f9578c0b081b1c748a8522c91", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java b/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\nindex e23855343a..a25859f61b 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\n\n@@ -51,9 +52,11 @@ import com.vaadin.flow.shared.JsonConstants;\n  * @since 1.0\n  */\n public class VaadinServlet extends HttpServlet {\n-    private VaadinService servletService;\n+    private VaadinService vaadinService;\n     private StaticFileHandler staticFileHandler;\n \n+    private volatile boolean isServletInitialized;\n+\n     /**\n      * Called by the servlet container to indicate to a servlet that the servlet\n      * is being placed into service.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODM3NQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569988375", "bodyText": "This is a servlet request, so why shouldn't it have access to servlet service ?", "author": "pleku", "createdAt": "2021-02-04T07:02:40Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletRequest.java", "diffHunk": "@@ -32,7 +32,7 @@\n public class VaadinServletRequest extends HttpServletRequestWrapper\n         implements VaadinRequest {\n \n-    private final VaadinServletService vaadinService;\n+    private final VaadinService vaadinService;", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDAyNDQ3MQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570024471", "bodyText": "because then you cant use it with other VasdinService Implementations then yours", "author": "stbischof", "createdAt": "2021-02-04T08:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODM3NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODcyOQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569988729", "bodyText": "Again, servlet based class and these changes seem like a waste of time, or why would these be needed ?", "author": "pleku", "createdAt": "2021-02-04T07:03:41Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServletService.java", "diffHunk": "@@ -285,14 +285,14 @@ private InputStream getResourceInServletContextAsStream(String path) {\n \n     @Override\n     public String getContextRootRelativePath(VaadinRequest request) {\n-        assert request instanceof VaadinServletRequest;\n+        assert request instanceof HttpServletRequest;\n         // Generate location from the request by finding how many \"../\" should\n         // be added to the servlet path before we get to the context root\n \n         // Should not take pathinfo into account because the base URI refers to\n         // the servlet path\n \n-        String servletPath = ((VaadinServletRequest) request).getServletPath();\n+        String servletPath = ((HttpServletRequest) request).getServletPath();", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTQwMg==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041402", "bodyText": "I fixed the description.\nhere it is just a cleanup because you do not need a VaadinServletRequest. The HttpServletRequestWrapper is enough to .getServletPath(). And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "author": "stbischof", "createdAt": "2021-02-04T08:46:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4ODcyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTYyNg==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989626", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:05:59Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -239,7 +255,7 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             return false;\n         }\n \n-        if (request instanceof VaadinServletRequest) {\n+        if (request instanceof HttpServletRequest) {", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTQ2Ng==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041466", "bodyText": "I fixed the description.\nwhen it is a HttpServletRequest but not a VaadinServletRequest", "author": "stbischof", "createdAt": "2021-02-04T08:46:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTYyNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY2Mw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989663", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:06:03Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0NTIzNw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570045237", "bodyText": "when it is a HttpServletRequest but not a VaadinServletRequest", "author": "stbischof", "createdAt": "2021-02-04T08:52:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY2Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY4OQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989689", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:06:08Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),\n                         AtmosphereResponseImpl\n-                                .wrap((VaadinServletResponse) response));\n+                                .wrap((HttpServletResponse) response));", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTU1MQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041551", "bodyText": "I fixed the description.", "author": "stbischof", "createdAt": "2021-02-04T08:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTY4OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTc0Mw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989743", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:06:14Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/PushRequestHandler.java", "diffHunk": "@@ -248,16 +264,16 @@ public boolean handleRequest(VaadinSession session, VaadinRequest request,\n             try {\n                 atmosphere.doCometSupport(\n                         AtmosphereRequestImpl\n-                                .wrap((VaadinServletRequest) request),\n+                                .wrap((HttpServletRequest) request),\n                         AtmosphereResponseImpl\n-                                .wrap((VaadinServletResponse) response));\n+                                .wrap((HttpServletResponse) response));\n             } catch (ServletException e) {\n                 // TODO PUSH decide how to handle\n                 throw new RuntimeException(e);\n             }\n         } else {\n             throw new IllegalArgumentException(\n-                    \"Only VaadinServletRequests are supported\");\n+                    \"Only HttpServletRequest are supported\");", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTYyOA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041628", "bodyText": "I fixed the description.", "author": "stbischof", "createdAt": "2021-02-04T08:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTc0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTgzMQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989831", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:06:28Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/StreamResourceHandler.java", "diffHunk": "@@ -60,7 +61,7 @@ public void handleRequest(VaadinSession session, VaadinRequest request,\n         StreamResourceWriter writer;\n         session.lock();\n         try {\n-            ServletContext context = ((VaadinServletRequest) request)\n+            ServletContext context = ((ServletRequest) request)", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTY3MQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041671", "bodyText": "here it is just a cleanup because you do not need a VaadinServletRequest. The ServletRequest is enough to get the Context. And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "author": "stbischof", "createdAt": "2021-02-04T08:46:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTgzMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg4NA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989884", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:06:38Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "diffHunk": "@@ -136,7 +138,7 @@ protected boolean canHandleRequest(VaadinRequest request) {\n      * @return Request's url.\n      */\n     protected String getRequestUrl(VaadinRequest request) {\n-        return ((VaadinServletRequest) request).getRequestURL().toString();\n+        return ((HttpServletRequest) request).getRequestURL().toString();", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MTc0NA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570041744", "bodyText": "here it is just a cleanup because you do not need a VaadinServletRequest. The HttpServletRequestWrapper is enough to .getRequestURL(). And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "author": "stbischof", "createdAt": "2021-02-04T08:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg4NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg5Ng==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r569989896", "bodyText": "When would it be a case here that VaadinServletRequest is not applicable here ??", "author": "pleku", "createdAt": "2021-02-04T07:06:42Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java", "diffHunk": "@@ -434,7 +436,7 @@ protected String getServiceUrl(VaadinRequest request,\n         String url = request.getParameter(REQ_PARAM_URL);\n         // if 'url' parameter was not available, use request url\n         if (url == null) {\n-            url = ((VaadinServletRequest) request).getRequestURL().toString();\n+            url = ((HttpServletRequestWrapper) request).getRequestURL().toString();", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA0MzI1MQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r570043251", "bodyText": "here it is just a cleanup because you do not need a VaadinServletRequest. The HttpServletRequestWrapper is enough to .getRequestURL(). And others that do not use the VaadinServletRequestwill not end with a ClassCastException", "author": "stbischof", "createdAt": "2021-02-04T08:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTk4OTg5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6246f5895b5e364f9578c0b081b1c748a8522c91", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java b/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java\nindex 8cbafe3085..572cd49bbc 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java\n\n@@ -436,7 +433,7 @@ public class WebComponentBootstrapHandler extends BootstrapHandler {\n         String url = request.getParameter(REQ_PARAM_URL);\n         // if 'url' parameter was not available, use request url\n         if (url == null) {\n-            url = ((HttpServletRequestWrapper) request).getRequestURL().toString();\n+            url = getRequestUrl(request);\n         }\n         return url\n                 // +1 is to keep the trailing slash\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTk3NzUzMw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r571977533", "bodyText": "This change doesn't really make any sense as it is a private method and the type is regardless VaadinServletContext.", "author": "pleku", "createdAt": "2021-02-08T11:35:42Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -520,7 +520,7 @@ public void destroy() {\n         getService().destroy();\n     }\n \n-    private VaadinServletContext initializeContext() {\n+    private VaadinContext initializeContext() {", "originalCommit": "ae688b9edce49530fe1ece708a911db8c3a11a03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mjg1ODYyMg==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r572858622", "bodyText": "sure. will change this back.", "author": "stbischof", "createdAt": "2021-02-09T12:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTk3NzUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "6246f5895b5e364f9578c0b081b1c748a8522c91", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java b/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\nindex e23855343a..a25859f61b 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\n\n@@ -517,7 +529,10 @@ public class VaadinServlet extends HttpServlet {\n     @Override\n     public void destroy() {\n         super.destroy();\n-        getService().destroy();\n+        isServletInitialized = false;\n+        if (getService() != null) {\n+            getService().destroy();\n+        }\n     }\n \n     private VaadinContext initializeContext() {\n"}}, {"oid": "6246f5895b5e364f9578c0b081b1c748a8522c91", "url": "https://github.com/vaadin/flow/commit/6246f5895b5e364f9578c0b081b1c748a8522c91", "message": "add Test that ensures existese of Super Classes\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2021-02-18T10:56:26Z", "type": "forcePushed"}, {"oid": "c4070f7c49e20cbfeddeb254787a5b5897e367f0", "url": "https://github.com/vaadin/flow/commit/c4070f7c49e20cbfeddeb254787a5b5897e367f0", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2021-02-18T10:57:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzNDMyOQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r578334329", "bodyText": "Overall I like the idea behind this PR, I just have a problem with the explicit downcast from VaadinServletResponse to HttpServletResponse with the upcoming jakarta namespace change in mind. Totally out of scope, just my 2 cents.", "author": "knoobie", "createdAt": "2021-02-18T11:17:44Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java", "diffHunk": "@@ -1706,9 +1706,10 @@ protected void handleSessionExpired(VaadinRequest request,\n             SystemMessages systemMessages = getSystemMessages(\n                     HandlerHelper.findLocale(null, request), request);\n             String sessionExpiredURL = systemMessages.getSessionExpiredURL();\n+\n             if (sessionExpiredURL != null\n-                    && (response instanceof VaadinServletResponse)) {\n-                ((VaadinServletResponse) response)\n+                    && (response instanceof HttpServletResponse)) {", "originalCommit": "c4070f7c49e20cbfeddeb254787a5b5897e367f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzODc0OQ==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r578338749", "bodyText": "New interfaces that extends response and provides the Methods may be a way to solve this", "author": "stbischof", "createdAt": "2021-02-18T11:24:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzNDMyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTMyNzIyMA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585327220", "bodyText": "Would it make sense now to keep the original cast as an alternative that will work most of the time ? Or does it require checking for the existence of the class somehow", "author": "pleku", "createdAt": "2021-03-02T07:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODMzNDMyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9f7a35c4fd6115e799c051dfc066345479dfc566", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java b/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java\nindex 22c2a5c52b..276dc48c45 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/VaadinService.java\n\n@@ -1707,7 +1707,12 @@ public abstract class VaadinService implements Serializable {\n                     HandlerHelper.findLocale(null, request), request);\n             String sessionExpiredURL = systemMessages.getSessionExpiredURL();\n \n+            \n             if (sessionExpiredURL != null\n+                    && (response instanceof VaadinServletResponse)) {\n+                ((VaadinServletResponse) response)\n+                        .sendRedirect(sessionExpiredURL);\n+            } else if (sessionExpiredURL != null\n                     && (response instanceof HttpServletResponse)) {\n                 ((HttpServletResponse) response)\n                         .sendRedirect(sessionExpiredURL);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjE5NzU3Mg==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r582197572", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (request instanceof HttpServletRequest&&((HttpServletRequest)request).getRequestedSessionId() == null) {\n          \n          \n            \n                        if (request instanceof HttpServletRequest && ((HttpServletRequest) request).getRequestedSessionId() == null) {\n          \n      \n    \n    \n  \n\n@stbischof This could help with your rebuild as well ;) and makes the code a little bit easier to read.", "author": "knoobie", "createdAt": "2021-02-24T18:25:01Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -457,13 +457,13 @@ public VaadinServletService getService() {\n      * @return false if cookies are disabled, true otherwise\n      * @throws IOException\n      */\n-    private boolean ensureCookiesEnabled(VaadinServletRequest request,\n-            VaadinServletResponse response) throws IOException {\n+    private boolean ensureCookiesEnabled(VaadinRequest request,\n+            VaadinResponse response) throws IOException {\n         if (HandlerHelper.isRequestType(request, RequestType.UIDL)) {\n             // In all other but the first UIDL request a cookie should be\n             // returned by the browser.\n             // This can be removed if cookieless mode (#3228) is supported\n-            if (request.getRequestedSessionId() == null) {\n+            if (request instanceof HttpServletRequest&&((HttpServletRequest)request).getRequestedSessionId() == null) {", "originalCommit": "c4070f7c49e20cbfeddeb254787a5b5897e367f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4bf814261bd477995489588f7f50d1b3852b2bf4", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java b/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\nindex a25859f61b..1eb491dd2d 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java\n\n@@ -463,7 +463,7 @@ public class VaadinServlet extends HttpServlet {\n             // In all other but the first UIDL request a cookie should be\n             // returned by the browser.\n             // This can be removed if cookieless mode (#3228) is supported\n-            if (request instanceof HttpServletRequest&&((HttpServletRequest)request).getRequestedSessionId() == null) {\n+            if (request instanceof HttpServletRequest && ((HttpServletRequest) request).getRequestedSessionId() == null) {\n                 // User has cookies disabled\n                 SystemMessages systemMessages = getService().getSystemMessages(\n                         HandlerHelper.findLocale(null, request), request);\n"}}, {"oid": "4bf814261bd477995489588f7f50d1b3852b2bf4", "url": "https://github.com/vaadin/flow/commit/4bf814261bd477995489588f7f50d1b3852b2bf4", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2021-02-25T08:01:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjY0NzA0OA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r582647048", "bodyText": "Remove use of this unsecured \"getRequestedSessionId()\" method", "author": "vaadin-bot", "createdAt": "2021-02-25T08:49:25Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/VaadinServlet.java", "diffHunk": "@@ -457,13 +457,13 @@ public VaadinServletService getService() {\n      * @return false if cookies are disabled, true otherwise\n      * @throws IOException\n      */\n-    private boolean ensureCookiesEnabled(VaadinServletRequest request,\n-            VaadinServletResponse response) throws IOException {\n+    private boolean ensureCookiesEnabled(VaadinRequest request,\n+            VaadinResponse response) throws IOException {\n         if (HandlerHelper.isRequestType(request, RequestType.UIDL)) {\n             // In all other but the first UIDL request a cookie should be\n             // returned by the browser.\n             // This can be removed if cookieless mode (#3228) is supported\n-            if (request.getRequestedSessionId() == null) {\n+            if (request instanceof HttpServletRequest && ((HttpServletRequest) request).getRequestedSessionId() == null) {", "originalCommit": "4bf814261bd477995489588f7f50d1b3852b2bf4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "152aace6fb4aed57f307db28e3582edfc470d431", "url": "https://github.com/vaadin/flow/commit/152aace6fb4aed57f307db28e3582edfc470d431", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2021-02-25T09:47:48Z", "type": "commit"}, {"oid": "152aace6fb4aed57f307db28e3582edfc470d431", "url": "https://github.com/vaadin/flow/commit/152aace6fb4aed57f307db28e3582edfc470d431", "message": "use superclass of VadinServlet/Request if possible\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2021-02-25T09:47:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTMzOTkwMw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585339903", "bodyText": "non-blocking nit: typoed Vaadin here and c/p the error to other method names too ...", "author": "pleku", "createdAt": "2021-03-02T08:06:34Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.vaadin.flow.server;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import com.vaadin.flow.server.communication.PushRequestHandler;\n+\n+public class OtherImplementationsTest {\n+    @Test\n+    public void StaticFileServer_Constructor_uses_VadinService()", "originalCommit": "152aace6fb4aed57f307db28e3582edfc470d431", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY0NDUyMw==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585644523", "bodyText": "changed into Vaadin", "author": "stbischof", "createdAt": "2021-03-02T15:07:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTMzOTkwMw=="}], "type": "inlineReview", "revised_code": {"commit": "9f7a35c4fd6115e799c051dfc066345479dfc566", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java b/flow-server/src/test/java/com/vaadin/flow/server/CustomVaadinServiceImplementationTest.java\nsimilarity index 85%\nrename from flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java\nrename to flow-server/src/test/java/com/vaadin/flow/server/CustomVaadinServiceImplementationTest.java\nindex 6554e9a906..3e6b3ba5ec 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/CustomVaadinServiceImplementationTest.java\n\n@@ -16,9 +16,13 @@ import org.mockito.Mockito;\n \n import com.vaadin.flow.server.communication.PushRequestHandler;\n \n-public class OtherImplementationsTest {\n+/**\n+ * Makes sure that a custom vaadin service that is not vaadin servlet service can be used in when desired.\n+ *\n+ */\n+public class CustomVaadinServiceImplementationTest {\n     @Test\n-    public void StaticFileServer_Constructor_uses_VadinService()\n+    public void StaticFileServer_Constructor_uses_VaadinService()\n             throws NoSuchMethodException, SecurityException {\n \n         Assert.assertNotNull(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTM0MDc2OA==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585340768", "bodyText": "I get the test, but at a glance probably most developers will not. Please change the name to CustomVaadinServiceImplementationTest and maybe add a comment line \"Makes sure that a custom vaadin service that is not vaadin servlet service can be used in when desired\".", "author": "pleku", "createdAt": "2021-03-02T08:07:58Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package com.vaadin.flow.server;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Method;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import com.vaadin.flow.server.communication.PushRequestHandler;\n+\n+public class OtherImplementationsTest {", "originalCommit": "152aace6fb4aed57f307db28e3582edfc470d431", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY0MzczMg==", "url": "https://github.com/vaadin/flow/pull/9699#discussion_r585643732", "bodyText": "Done, Thx", "author": "stbischof", "createdAt": "2021-03-02T15:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTM0MDc2OA=="}], "type": "inlineReview", "revised_code": {"commit": "9f7a35c4fd6115e799c051dfc066345479dfc566", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java b/flow-server/src/test/java/com/vaadin/flow/server/CustomVaadinServiceImplementationTest.java\nsimilarity index 85%\nrename from flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java\nrename to flow-server/src/test/java/com/vaadin/flow/server/CustomVaadinServiceImplementationTest.java\nindex 6554e9a906..3e6b3ba5ec 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/OtherImplementationsTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/CustomVaadinServiceImplementationTest.java\n\n@@ -16,9 +16,13 @@ import org.mockito.Mockito;\n \n import com.vaadin.flow.server.communication.PushRequestHandler;\n \n-public class OtherImplementationsTest {\n+/**\n+ * Makes sure that a custom vaadin service that is not vaadin servlet service can be used in when desired.\n+ *\n+ */\n+public class CustomVaadinServiceImplementationTest {\n     @Test\n-    public void StaticFileServer_Constructor_uses_VadinService()\n+    public void StaticFileServer_Constructor_uses_VaadinService()\n             throws NoSuchMethodException, SecurityException {\n \n         Assert.assertNotNull(\n"}}, {"oid": "9f7a35c4fd6115e799c051dfc066345479dfc566", "url": "https://github.com/vaadin/flow/commit/9f7a35c4fd6115e799c051dfc066345479dfc566", "message": "Review fixes\n\nSigned-off-by: Stefan Bischof <stbischof@bipolis.org>", "committedDate": "2021-03-02T14:55:02Z", "type": "commit"}]}