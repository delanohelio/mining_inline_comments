{"pr_number": 7375, "pr_title": "refactor: rename @VaadinService to @Endpoint", "pr_createdAt": "2020-01-16T16:17:37Z", "pr_url": "https://github.com/vaadin/flow/pull/7375", "timeline": [{"oid": "ae19150e6f1aa50a23edf55d21e70282f650ae49", "url": "https://github.com/vaadin/flow/commit/ae19150e6f1aa50a23edf55d21e70282f650ae49", "message": "refactor: rename @VaadinService to @Export\n\nConnected to #7318", "committedDate": "2020-01-16T16:21:36Z", "type": "forcePushed"}, {"oid": "eb5dfdf35ca33deb90fc731d14ff40c3cca5cc8c", "url": "https://github.com/vaadin/flow/commit/eb5dfdf35ca33deb90fc731d14ff40c3cca5cc8c", "message": "refactor: rename @VaadinService to @Export\n\nConnected to #7318", "committedDate": "2020-01-17T10:15:26Z", "type": "forcePushed"}, {"oid": "e77e0e0261713866f0789bdfb88467001d755293", "url": "https://github.com/vaadin/flow/commit/e77e0e0261713866f0789bdfb88467001d755293", "message": "refactor: rename VaadinService to Endpoint", "committedDate": "2020-01-17T17:17:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2NDE5OA==", "url": "https://github.com/vaadin/flow/pull/7375#discussion_r368564198", "bodyText": "Remove this use of \"APPLICATION_JSON_UTF8_VALUE\"; it is deprecated.", "author": "vaadin-bot", "createdAt": "2020-01-20T14:05:33Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java", "diffHunk": "@@ -208,51 +209,52 @@ private ObjectMapper getDefaultObjectMapper(ApplicationContext context) {\n      * If an issue occurs during the request processing, an error response is\n      * returned instead of the serialized Java method return value.\n      *\n-     * @param serviceName\n-     *            the name of a service to address the calls to, not case\n+     * @param endpointName\n+     *            the name of an endpoint to address the calls to, not case\n      *            sensitive\n      * @param methodName\n-     *            the method name to execute on a service, not case sensitive\n+     *            the method name to execute on an endpoint, not case sensitive\n      * @param body\n      *            optional request body, that should be specified if the method\n      *            called has parameters\n      * @param request\n-     *            the current request which triggers the service call\n+     *            the current request which triggers the endpoint call\n      * @return execution result as a JSON string or an error message string\n      */\n-    @PostMapping(path = \"/{service}/{method}\", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n-    public ResponseEntity<String> serveVaadinService(\n-            @PathVariable(\"service\") String serviceName,\n+    @PostMapping(path = \"/{endpoint}/{method}\", produces =\n+            MediaType.APPLICATION_JSON_UTF8_VALUE)", "originalCommit": "6d8f08832db2f8d710d1b7d763206694af2d245f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ddcda8014b58dee823cd811736b82a18d618c81d", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java b/flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java\nindex f9ba5783b7..96694333d0 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/connect/VaadinConnectController.java\n\n@@ -209,52 +208,51 @@ public class VaadinConnectController {\n      * If an issue occurs during the request processing, an error response is\n      * returned instead of the serialized Java method return value.\n      *\n-     * @param endpointName\n-     *            the name of an endpoint to address the calls to, not case\n+     * @param serviceName\n+     *            the name of a service to address the calls to, not case\n      *            sensitive\n      * @param methodName\n-     *            the method name to execute on an endpoint, not case sensitive\n+     *            the method name to execute on a service, not case sensitive\n      * @param body\n      *            optional request body, that should be specified if the method\n      *            called has parameters\n      * @param request\n-     *            the current request which triggers the endpoint call\n+     *            the current request which triggers the service call\n      * @return execution result as a JSON string or an error message string\n      */\n-    @PostMapping(path = \"/{endpoint}/{method}\", produces =\n-            MediaType.APPLICATION_JSON_UTF8_VALUE)\n-    public ResponseEntity<String> serveEndpoint(\n-            @PathVariable(\"endpoint\") String endpointName,\n+    @PostMapping(path = \"/{service}/{method}\", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n+    public ResponseEntity<String> serveVaadinService(\n+            @PathVariable(\"service\") String serviceName,\n             @PathVariable(\"method\") String methodName,\n             @RequestBody(required = false) ObjectNode body,\n             HttpServletRequest request) {\n-        getLogger().debug(\"Endpoint: {}, method: {}, request body: {}\",\n-                endpointName, methodName, body);\n+        getLogger().debug(\"Service: {}, method: {}, request body: {}\",\n+                serviceName, methodName, body);\n \n-        VaadinEndpointData vaadinEndpointData = vaadinEndpoints\n-                .get(endpointName.toLowerCase(Locale.ENGLISH));\n-        if (vaadinEndpointData == null) {\n-            getLogger().debug(\"Endpoint '{}' not found\", endpointName);\n+        VaadinServiceData vaadinServiceData = vaadinServices\n+                .get(serviceName.toLowerCase(Locale.ENGLISH));\n+        if (vaadinServiceData == null) {\n+            getLogger().debug(\"Service '{}' not found\", serviceName);\n             return ResponseEntity.notFound().build();\n         }\n \n-        Method methodToInvoke = vaadinEndpointData\n+        Method methodToInvoke = vaadinServiceData\n                 .getMethod(methodName.toLowerCase(Locale.ENGLISH)).orElse(null);\n         if (methodToInvoke == null) {\n-            getLogger().debug(\"Method '{}' not found in endpoint '{}'\",\n-                    methodName, endpointName);\n+            getLogger().debug(\"Method '{}' not found in service '{}'\",\n+                    methodName, serviceName);\n             return ResponseEntity.notFound().build();\n         }\n \n         try {\n-            return invokeVaadinEndpointMethod(endpointName, methodName,\n-                    methodToInvoke, body, vaadinEndpointData, request);\n+            return invokeVaadinServiceMethod(serviceName, methodName,\n+                    methodToInvoke, body, vaadinServiceData, request);\n         } catch (JsonProcessingException e) {\n             String errorMessage = String.format(\n-                    \"Failed to serialize endpoint '%s' method '%s' response. \"\n+                    \"Failed to serialize service '%s' method '%s' response. \"\n                             + \"Double check method's return type or specify a custom mapper bean with qualifier '%s'\",\n-                    endpointName, methodName,\n-                    VAADIN_ENDPOINT_MAPPER_BEAN_QUALIFIER);\n+                    serviceName, methodName,\n+                    VAADIN_SERVICE_MAPPER_BEAN_QUALIFIER);\n             getLogger().error(errorMessage, e);\n             try {\n                 return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)\n"}}, {"oid": "ddcda8014b58dee823cd811736b82a18d618c81d", "url": "https://github.com/vaadin/flow/commit/ddcda8014b58dee823cd811736b82a18d618c81d", "message": "refactor: rename endpoint to prefix", "committedDate": "2020-01-21T09:18:21Z", "type": "commit"}, {"oid": "f8579f3e85edb146f7e21a16b07d86c6094dc81b", "url": "https://github.com/vaadin/flow/commit/f8579f3e85edb146f7e21a16b07d86c6094dc81b", "message": "refactor: rename VaadinService to Endpoint", "committedDate": "2020-01-21T09:18:22Z", "type": "commit"}, {"oid": "32c0bb716d7075d42455c2c1934636af12a208ab", "url": "https://github.com/vaadin/flow/commit/32c0bb716d7075d42455c2c1934636af12a208ab", "message": "refactor: replace lambda with method reference", "committedDate": "2020-01-21T09:18:22Z", "type": "commit"}, {"oid": "67b184e96e10075264ef3c2c36352000a25dda84", "url": "https://github.com/vaadin/flow/commit/67b184e96e10075264ef3c2c36352000a25dda84", "message": "refactor: rename endpointClass to endpoint in connect client", "committedDate": "2020-01-21T09:18:22Z", "type": "commit"}, {"oid": "e322e0344b064951c68e0c21ec38e17d1eb9a290", "url": "https://github.com/vaadin/flow/commit/e322e0344b064951c68e0c21ec38e17d1eb9a290", "message": "typo: an endpoint", "committedDate": "2020-01-21T09:18:22Z", "type": "commit"}, {"oid": "0d38449611db007493fd23747a374ffcf54eefc1", "url": "https://github.com/vaadin/flow/commit/0d38449611db007493fd23747a374ffcf54eefc1", "message": "rename MyEndpoits to MyEndpoint", "committedDate": "2020-01-21T11:09:39Z", "type": "commit"}, {"oid": "0d38449611db007493fd23747a374ffcf54eefc1", "url": "https://github.com/vaadin/flow/commit/0d38449611db007493fd23747a374ffcf54eefc1", "message": "rename MyEndpoits to MyEndpoint", "committedDate": "2020-01-21T11:09:39Z", "type": "forcePushed"}]}