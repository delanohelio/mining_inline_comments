{"pr_number": 9309, "pr_title": "generate sw.ts to frontend folder when pwa enabled", "pr_createdAt": "2020-11-04T10:47:51Z", "pr_url": "https://github.com/vaadin/flow/pull/9309", "timeline": [{"oid": "5d6cd06b374f911b8d10fd18e7c53198e384973c", "url": "https://github.com/vaadin/flow/commit/5d6cd06b374f911b8d10fd18e7c53198e384973c", "message": "genereate sw.ts to frontend folder when pwa enabled", "committedDate": "2020-11-04T10:45:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg3NzUxNA==", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r517877514", "bodyText": "createWebpackUpdater is run by setup so not needed to run explicitly unless creating a new PwaConfiguration in the test.", "author": "joheriks", "createdAt": "2020-11-05T08:42:05Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java", "diffHunk": "@@ -263,6 +263,37 @@ public void should_setPwaEnabledTrue_when_Pwa()\n                         .contains(\"const pwaEnabled = true;\"));\n     }\n \n+    @Test\n+    public void should_Not_generateServiceworkerFile_when_noPwa(){\n+        pwaConfiguration = new PwaConfiguration();\n+        createWebpackUpdater();\n+        webpackUpdater.execute();\n+\n+        File serviceWorkerFile = new File(frontendFolder,\n+                SERVICE_WORKER_SRC);\n+        Assert.assertFalse(serviceWorkerFile.exists());\n+    }\n+\n+    @Test\n+    public void should_generateServiceworkerFile_when_pwa(){\n+        createWebpackUpdater();", "originalCommit": "5d6cd06b374f911b8d10fd18e7c53198e384973c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "32eabe9545f49f5d220c1628c12691f5de7a17fb", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java b/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java\nindex 2d1bfde985..60d6f815f4 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java\n\n@@ -264,34 +265,48 @@ public class TaskUpdateWebpackTest extends NodeUpdateTestUtil {\n     }\n \n     @Test\n-    public void should_Not_generateServiceworkerFile_when_noPwa(){\n-        pwaConfiguration = new PwaConfiguration();\n-        createWebpackUpdater();\n+    public void should_setServiceWorkerEntryPoint_fromTargetFolder_when_NoCustomServiceWorkerFileFound()\n+            throws IOException {\n         webpackUpdater.execute();\n-\n-        File serviceWorkerFile = new File(frontendFolder,\n-                SERVICE_WORKER_SRC);\n-        Assert.assertFalse(serviceWorkerFile.exists());\n+        String webpackGeneratedContents = Files.lines(webpackGenerated.toPath())\n+                .collect(Collectors.joining(\"\\n\"));\n+        Assert.assertTrue(\"service workder entry point should be from target folder\",\n+                webpackGeneratedContents\n+                        .contains(\"const clientServiceWorkerEntryPoint = path.resolve(__dirname, 'target/sw');\"));\n     }\n \n     @Test\n-    public void should_generateServiceworkerFile_when_pwa(){\n+    public void should_setServiceWorkerEntryPoint_fromCurrentFolder_when_CustomServiceWorkerFileFound()\n+            throws IOException {\n+        frontendFolder.mkdir();\n+        File customSWFile = new File(frontendFolder, SERVICE_WORKER_SRC);\n+        customSWFile.createNewFile();\n         createWebpackUpdater();\n         webpackUpdater.execute();\n-\n-        File serviceWorkerFile = new File(frontendFolder,\n-                SERVICE_WORKER_SRC);\n-        Assert.assertTrue(serviceWorkerFile.exists());\n+        String webpackGeneratedContents = Files.lines(webpackGenerated.toPath())\n+                .collect(Collectors.joining(\"\\n\"));\n+        Assert.assertTrue(\"service workder entry point should be from current folder\",\n+                webpackGeneratedContents\n+                        .contains(\"const clientServiceWorkerEntryPoint = './sw';\"));\n+        customSWFile.delete();\n+        frontendFolder.delete();\n     }\n \n     @Test\n-    public void should_Not_generateServiceworkerFile_inProjectRootFoler_when_pwa(){\n+    public void should_setServiceWorkerEntryPoint_fromCurrentFolder_when_CustomServiceWorkerJsFileFound()\n+            throws IOException {\n+        frontendFolder.mkdir();\n+        File customSWFile = new File(frontendFolder, SERVICE_WORKER_SRC_JS);\n+        customSWFile.createNewFile();\n         createWebpackUpdater();\n         webpackUpdater.execute();\n-\n-        File serviceWorkerFile = new File(baseDir,\n-                SERVICE_WORKER_SRC);\n-        Assert.assertFalse(serviceWorkerFile.exists());\n+        String webpackGeneratedContents = Files.lines(webpackGenerated.toPath())\n+                .collect(Collectors.joining(\"\\n\"));\n+        Assert.assertTrue(\"service workder entry point should be from current folder\",\n+                webpackGeneratedContents\n+                        .contains(\"const clientServiceWorkerEntryPoint = './sw';\"));\n+        customSWFile.delete();\n+        frontendFolder.delete();\n     }\n \n     protected void createWebpackUpdater() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg3NzU5OQ==", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r517877599", "bodyText": "createWebpackUpdater is run by setup so not needed to run explicitly unless creating a new PwaConfiguration in the test.", "author": "joheriks", "createdAt": "2020-11-05T08:42:13Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java", "diffHunk": "@@ -263,6 +263,37 @@ public void should_setPwaEnabledTrue_when_Pwa()\n                         .contains(\"const pwaEnabled = true;\"));\n     }\n \n+    @Test\n+    public void should_Not_generateServiceworkerFile_when_noPwa(){\n+        pwaConfiguration = new PwaConfiguration();\n+        createWebpackUpdater();\n+        webpackUpdater.execute();\n+\n+        File serviceWorkerFile = new File(frontendFolder,\n+                SERVICE_WORKER_SRC);\n+        Assert.assertFalse(serviceWorkerFile.exists());\n+    }\n+\n+    @Test\n+    public void should_generateServiceworkerFile_when_pwa(){\n+        createWebpackUpdater();\n+        webpackUpdater.execute();\n+\n+        File serviceWorkerFile = new File(frontendFolder,\n+                SERVICE_WORKER_SRC);\n+        Assert.assertTrue(serviceWorkerFile.exists());\n+    }\n+\n+    @Test\n+    public void should_Not_generateServiceworkerFile_inProjectRootFoler_when_pwa(){\n+        createWebpackUpdater();", "originalCommit": "5d6cd06b374f911b8d10fd18e7c53198e384973c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "32eabe9545f49f5d220c1628c12691f5de7a17fb", "chunk": "diff --git a/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java b/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java\nindex 2d1bfde985..60d6f815f4 100644\n--- a/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java\n+++ b/flow-server/src/test/java/com/vaadin/flow/server/frontend/TaskUpdateWebpackTest.java\n\n@@ -264,34 +265,48 @@ public class TaskUpdateWebpackTest extends NodeUpdateTestUtil {\n     }\n \n     @Test\n-    public void should_Not_generateServiceworkerFile_when_noPwa(){\n-        pwaConfiguration = new PwaConfiguration();\n-        createWebpackUpdater();\n+    public void should_setServiceWorkerEntryPoint_fromTargetFolder_when_NoCustomServiceWorkerFileFound()\n+            throws IOException {\n         webpackUpdater.execute();\n-\n-        File serviceWorkerFile = new File(frontendFolder,\n-                SERVICE_WORKER_SRC);\n-        Assert.assertFalse(serviceWorkerFile.exists());\n+        String webpackGeneratedContents = Files.lines(webpackGenerated.toPath())\n+                .collect(Collectors.joining(\"\\n\"));\n+        Assert.assertTrue(\"service workder entry point should be from target folder\",\n+                webpackGeneratedContents\n+                        .contains(\"const clientServiceWorkerEntryPoint = path.resolve(__dirname, 'target/sw');\"));\n     }\n \n     @Test\n-    public void should_generateServiceworkerFile_when_pwa(){\n+    public void should_setServiceWorkerEntryPoint_fromCurrentFolder_when_CustomServiceWorkerFileFound()\n+            throws IOException {\n+        frontendFolder.mkdir();\n+        File customSWFile = new File(frontendFolder, SERVICE_WORKER_SRC);\n+        customSWFile.createNewFile();\n         createWebpackUpdater();\n         webpackUpdater.execute();\n-\n-        File serviceWorkerFile = new File(frontendFolder,\n-                SERVICE_WORKER_SRC);\n-        Assert.assertTrue(serviceWorkerFile.exists());\n+        String webpackGeneratedContents = Files.lines(webpackGenerated.toPath())\n+                .collect(Collectors.joining(\"\\n\"));\n+        Assert.assertTrue(\"service workder entry point should be from current folder\",\n+                webpackGeneratedContents\n+                        .contains(\"const clientServiceWorkerEntryPoint = './sw';\"));\n+        customSWFile.delete();\n+        frontendFolder.delete();\n     }\n \n     @Test\n-    public void should_Not_generateServiceworkerFile_inProjectRootFoler_when_pwa(){\n+    public void should_setServiceWorkerEntryPoint_fromCurrentFolder_when_CustomServiceWorkerJsFileFound()\n+            throws IOException {\n+        frontendFolder.mkdir();\n+        File customSWFile = new File(frontendFolder, SERVICE_WORKER_SRC_JS);\n+        customSWFile.createNewFile();\n         createWebpackUpdater();\n         webpackUpdater.execute();\n-\n-        File serviceWorkerFile = new File(baseDir,\n-                SERVICE_WORKER_SRC);\n-        Assert.assertFalse(serviceWorkerFile.exists());\n+        String webpackGeneratedContents = Files.lines(webpackGenerated.toPath())\n+                .collect(Collectors.joining(\"\\n\"));\n+        Assert.assertTrue(\"service workder entry point should be from current folder\",\n+                webpackGeneratedContents\n+                        .contains(\"const clientServiceWorkerEntryPoint = './sw';\"));\n+        customSWFile.delete();\n+        frontendFolder.delete();\n     }\n \n     protected void createWebpackUpdater() {\n"}}, {"oid": "32eabe9545f49f5d220c1628c12691f5de7a17fb", "url": "https://github.com/vaadin/flow/commit/32eabe9545f49f5d220c1628c12691f5de7a17fb", "message": "align sw.ts genneration with other bootstrap entries", "committedDate": "2020-11-09T20:50:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTk3NA==", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r520349974", "bodyText": "Would perhaps make sense to extract this duplicate logic into a private method, e.g. addServiceWorkerTask(Builder bilder, FrontendDependencies frontendDependencies).", "author": "joheriks", "createdAt": "2020-11-10T07:42:08Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeTasks.java", "diffHunk": "@@ -619,6 +623,13 @@ private void addBootstrapTasks(Builder builder) {\n         TaskGenerateTsDefinitions taskGenerateTsDefinitions = new TaskGenerateTsDefinitions(\n                 builder.npmFolder);\n         commands.add(taskGenerateTsDefinitions);\n+\n+        if (frontendDependencies != null) {\n+            PwaConfiguration pwaConfiguration = frontendDependencies.getPwaConfiguration();\n+            if (pwaConfiguration.isEnabled()) {\n+                commands.add(new TaskGenerateServiceWorker(builder.frontendDirectory, outputDirectory));\n+            }\n+        }", "originalCommit": "32eabe9545f49f5d220c1628c12691f5de7a17fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM2OTM5NQ==", "url": "https://github.com/vaadin/flow/pull/9309#discussion_r520369395", "bodyText": "Removed the other code block which should've been deleted.", "author": "haijian-vaadin", "createdAt": "2020-11-10T08:19:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTk3NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "c77795a218dd0839588db4c4951842b1dda84946", "url": "https://github.com/vaadin/flow/commit/c77795a218dd0839588db4c4951842b1dda84946", "message": "fix serialization unit test and remove duplicated code", "committedDate": "2020-11-10T07:54:39Z", "type": "commit"}, {"oid": "d0ac3d0519ca15f47382f3a2433476f34e2d819d", "url": "https://github.com/vaadin/flow/commit/d0ac3d0519ca15f47382f3a2433476f34e2d819d", "message": "Merge remote-tracking branch 'origin/feature/offline' into haijian/sw-improvements", "committedDate": "2020-11-10T08:04:40Z", "type": "commit"}]}