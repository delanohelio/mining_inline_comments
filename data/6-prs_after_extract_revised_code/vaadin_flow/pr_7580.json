{"pr_number": 7580, "pr_title": "Backport npm/pnpm/webpack command logging feature from V15", "pr_createdAt": "2020-02-13T18:09:53Z", "pr_url": "https://github.com/vaadin/flow/pull/7580", "timeline": [{"oid": "ec07d21f0cd6cfe267345b09b2c0c587f92ce920", "url": "https://github.com/vaadin/flow/commit/ec07d21f0cd6cfe267345b09b2c0c587f92ce920", "message": "Backport npm/pnpm/webpack command logging feature from V15", "committedDate": "2020-02-13T19:26:07Z", "type": "forcePushed"}, {"oid": "5381f4dbc8b0c93fbae7975bbef3e5d0d4ac2700", "url": "https://github.com/vaadin/flow/commit/5381f4dbc8b0c93fbae7975bbef3e5d0d4ac2700", "message": "Backport npm/pnpm/webpack command logging feature from V15", "committedDate": "2020-02-13T20:30:27Z", "type": "commit"}, {"oid": "5381f4dbc8b0c93fbae7975bbef3e5d0d4ac2700", "url": "https://github.com/vaadin/flow/commit/5381f4dbc8b0c93fbae7975bbef3e5d0d4ac2700", "message": "Backport npm/pnpm/webpack command logging feature from V15", "committedDate": "2020-02-13T20:30:27Z", "type": "forcePushed"}, {"oid": "93d9c15860164fae19e41b1c811daf4fcb193568", "url": "https://github.com/vaadin/flow/commit/93d9c15860164fae19e41b1c811daf4fcb193568", "message": "Revert logging all webpack output to console", "committedDate": "2020-02-14T11:58:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwNzA3OA==", "url": "https://github.com/vaadin/flow/pull/7580#discussion_r379407078", "bodyText": "Invoke method(s) only conditionally.", "author": "vaadin-bot", "createdAt": "2020-02-14T12:33:11Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -456,9 +464,12 @@ private void readLinesLoop(Pattern success, Pattern failure,\n             BufferedReader reader) throws IOException {\n         StringBuilder output = getOutputBuilder();\n \n-        Consumer<String> info = s -> getLogger().debug(GREEN, s);\n-        Consumer<String> error = s -> getLogger().error(RED, s);\n-        Consumer<String> warn = s -> getLogger().debug(YELLOW, s);\n+        Consumer<String> info = s -> getLogger()\n+                .debug(String.format(GREEN, \"{}\"), s);", "originalCommit": "93d9c15860164fae19e41b1c811daf4fcb193568", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwNzA4OQ==", "url": "https://github.com/vaadin/flow/pull/7580#discussion_r379407089", "bodyText": "Invoke method(s) only conditionally.", "author": "vaadin-bot", "createdAt": "2020-02-14T12:33:12Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -456,9 +464,12 @@ private void readLinesLoop(Pattern success, Pattern failure,\n             BufferedReader reader) throws IOException {\n         StringBuilder output = getOutputBuilder();\n \n-        Consumer<String> info = s -> getLogger().debug(GREEN, s);\n-        Consumer<String> error = s -> getLogger().error(RED, s);\n-        Consumer<String> warn = s -> getLogger().debug(YELLOW, s);\n+        Consumer<String> info = s -> getLogger()\n+                .debug(String.format(GREEN, \"{}\"), s);\n+        Consumer<String> error = s -> getLogger()\n+                .error(String.format(RED, \"{}\"), s);", "originalCommit": "93d9c15860164fae19e41b1c811daf4fcb193568", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwNzA5NA==", "url": "https://github.com/vaadin/flow/pull/7580#discussion_r379407094", "bodyText": "Invoke method(s) only conditionally.", "author": "vaadin-bot", "createdAt": "2020-02-14T12:33:13Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "diffHunk": "@@ -456,9 +464,12 @@ private void readLinesLoop(Pattern success, Pattern failure,\n             BufferedReader reader) throws IOException {\n         StringBuilder output = getOutputBuilder();\n \n-        Consumer<String> info = s -> getLogger().debug(GREEN, s);\n-        Consumer<String> error = s -> getLogger().error(RED, s);\n-        Consumer<String> warn = s -> getLogger().debug(YELLOW, s);\n+        Consumer<String> info = s -> getLogger()\n+                .debug(String.format(GREEN, \"{}\"), s);\n+        Consumer<String> error = s -> getLogger()\n+                .error(String.format(RED, \"{}\"), s);\n+        Consumer<String> warn = s -> getLogger()\n+                .debug(String.format(YELLOW, \"{}\"), s);", "originalCommit": "93d9c15860164fae19e41b1c811daf4fcb193568", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}