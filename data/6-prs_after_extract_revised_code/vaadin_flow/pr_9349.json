{"pr_number": 9349, "pr_title": "feat: Theme can be defined as string or class", "pr_createdAt": "2020-11-09T12:31:49Z", "pr_url": "https://github.com/vaadin/flow/pull/9349", "timeline": [{"oid": "c9d31b7ab8333301c23bb6e220247770061f7248", "url": "https://github.com/vaadin/flow/commit/c9d31b7ab8333301c23bb6e220247770061f7248", "message": "feat: Theme can be defined as string or class\n\nAdd a string definition for theme that\nmatches the application theme in the theme folder.\nChange old version to use themeClass for theme\nselection.\n\nFixes #9281", "committedDate": "2020-11-09T05:08:46Z", "type": "commit"}, {"oid": "d1dfba9b17cf9df76ea20a84d473b77702c1379a", "url": "https://github.com/vaadin/flow/commit/d1dfba9b17cf9df76ea20a84d473b77702c1379a", "message": "Add theme plugin for theme generation", "committedDate": "2020-11-09T12:00:26Z", "type": "commit"}, {"oid": "2163d3ecece7d22bebc27f55fb2b025e50cdf6c7", "url": "https://github.com/vaadin/flow/commit/2163d3ecece7d22bebc27f55fb2b025e50cdf6c7", "message": "Fix NPE problems and tests", "committedDate": "2020-11-09T12:30:21Z", "type": "commit"}, {"oid": "7eae10406655776d269817615ddba10a87152dfb", "url": "https://github.com/vaadin/flow/commit/7eae10406655776d269817615ddba10a87152dfb", "message": "Create legacy-theme profile for lumo and material test package.", "committedDate": "2020-11-09T12:30:55Z", "type": "commit"}, {"oid": "e18b9a7c8041f158c088d357faafd8485c7ebeb1", "url": "https://github.com/vaadin/flow/commit/e18b9a7c8041f158c088d357faafd8485c7ebeb1", "message": "Fix generator check and directory generation", "committedDate": "2020-11-09T13:09:34Z", "type": "commit"}, {"oid": "387c0560c1651d413cbd9413568acd7d28084f0e", "url": "https://github.com/vaadin/flow/commit/387c0560c1651d413cbd9413568acd7d28084f0e", "message": "Add camelcase as dev dependency\n\nAdd dev dependency for camelcase\ninstead of trusting it to come as a\ndependency.", "committedDate": "2020-11-10T05:13:36Z", "type": "commit"}, {"oid": "1bb9de73983a1b4d1462d87522e1bfa77d9ed187", "url": "https://github.com/vaadin/flow/commit/1bb9de73983a1b4d1462d87522e1bfa77d9ed187", "message": "Close directories after use.", "committedDate": "2020-11-10T07:15:32Z", "type": "commit"}, {"oid": "8ea1748741cbbcd26a8c550b434d90ddfae59f0f", "url": "https://github.com/vaadin/flow/commit/8ea1748741cbbcd26a8c550b434d90ddfae59f0f", "message": "No output for themeJar is not found.", "committedDate": "2020-11-10T07:21:38Z", "type": "commit"}, {"oid": "2cac58c3dd394340cf12e9b0b12eca3a79394147", "url": "https://github.com/vaadin/flow/commit/2cac58c3dd394340cf12e9b0b12eca3a79394147", "message": "Add app-theme global.css test to test-themes\n\nRemove camel case dependency.\nMove custom theme tests to frontend/legacyTheme folder form frontend/theme", "committedDate": "2020-11-10T08:14:56Z", "type": "commit"}, {"oid": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "url": "https://github.com/vaadin/flow/commit/3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "message": "Make application-theme-plugin node 10.x compatible", "committedDate": "2020-11-10T09:31:49Z", "type": "commit"}, {"oid": "67d4898c3158403c0c96be51fed51c0a7e3814b3", "url": "https://github.com/vaadin/flow/commit/67d4898c3158403c0c96be51fed51c0a7e3814b3", "message": "Fix get files to get folders and to not be async", "committedDate": "2020-11-10T11:15:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTE5Mg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520349192", "bodyText": "Not added to javadocs", "author": "pleku", "createdAt": "2020-11-10T07:40:24Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendWebComponentGenerator.java", "diffHunk": "@@ -72,7 +74,8 @@ public FrontendWebComponentGenerator(ClassFinder finder) {\n      * @throws java.lang.IllegalStateException\n      *             if {@code finder} cannot locate required classes\n      */\n-    public Set<File> generateWebComponents(File outputDirectory) {\n+    public Set<File> generateWebComponents(File outputDirectory,\n+            ThemeDefinition theme) {", "originalCommit": "8ea1748741cbbcd26a8c550b434d90ddfae59f0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNzE2MQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520517161", "bodyText": "done", "author": "caalador", "createdAt": "2020-11-10T12:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTE5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendWebComponentGenerator.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendWebComponentGenerator.java\nindex 8518ae28fd..a2968c6c1a 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendWebComponentGenerator.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendWebComponentGenerator.java\n\n@@ -69,7 +68,9 @@ public class FrontendWebComponentGenerator implements Serializable {\n      * outputDirectory}.\n      *\n      * @param outputDirectory\n-     *            target directory for the web component module files\n+     *     target directory for the web component module files\n+     * @param theme\n+     *     theme definition of theme to use with web component\n      * @return generated files\n      * @throws java.lang.IllegalStateException\n      *             if {@code finder} cannot locate required classes\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTY1MQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520349651", "bodyText": "Not added to javadocs", "author": "pleku", "createdAt": "2020-11-10T07:41:25Z", "path": "flow-server/src/main/java/com/vaadin/flow/theme/ThemeDefinition.java", "diffHunk": "@@ -40,13 +41,15 @@\n      *            the variant of the theme, not <code>null</code>\n      */\n     public ThemeDefinition(Class<? extends AbstractTheme> theme,\n-            String variant) {\n+            String variant, String name) {", "originalCommit": "8ea1748741cbbcd26a8c550b434d90ddfae59f0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyMzA5Nw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520523097", "bodyText": "done", "author": "caalador", "createdAt": "2020-11-10T12:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM0OTY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/theme/ThemeDefinition.java b/flow-server/src/main/java/com/vaadin/flow/theme/ThemeDefinition.java\nindex b4ccc15683..0e22dab97c 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/theme/ThemeDefinition.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/theme/ThemeDefinition.java\n\n@@ -39,6 +39,8 @@ public class ThemeDefinition implements Serializable {\n      *            the theme class, not <code>null</code>\n      * @param variant\n      *            the variant of the theme, not <code>null</code>\n+     * @param name\n+     *            name of the theme, not <code>null</code>\n      */\n     public ThemeDefinition(Class<? extends AbstractTheme> theme,\n             String variant, String name) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMzQ5NQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520403495", "bodyText": "What is this ? Maybe drop a comment line about why we have this", "author": "pleku", "createdAt": "2020-11-10T09:14:26Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeUpdater.java", "diffHunk": "@@ -309,6 +309,7 @@ static void addVaadinDefaultsToJson(JsonObject json) {\n         defaults.put(\"lit-html\", \"1.2.1\");\n         defaults.put(\"@types/validator\", \"10.11.3\");\n         defaults.put(\"validator\", \"12.0.0\");\n+        defaults.put(\"construct-style-sheets-polyfill\", \"2.4.2\");", "originalCommit": "2cac58c3dd394340cf12e9b0b12eca3a79394147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNzEwNw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520517107", "bodyText": "It's for Constructable Stylesheet Objects specification for handling style sheets across shadow boundaries and only implemented for chrome 73+, but is not needed yet at this step, removed.", "author": "caalador", "createdAt": "2020-11-10T12:15:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQwMzQ5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeUpdater.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeUpdater.java\nindex 0e5f0403eb..044108f3d0 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeUpdater.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/NodeUpdater.java\n\n@@ -309,7 +309,6 @@ public abstract class NodeUpdater implements FallibleCommand {\n         defaults.put(\"lit-html\", \"1.2.1\");\n         defaults.put(\"@types/validator\", \"10.11.3\");\n         defaults.put(\"validator\", \"12.0.0\");\n-        defaults.put(\"construct-style-sheets-polyfill\", \"2.4.2\");\n \n         // Forcing chokidar version for now until new babel version is available\n         // check out https://github.com/babel/babel/issues/11488\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxNjYxNA==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520416614", "bodyText": "nit: not formatted", "author": "pleku", "createdAt": "2020-11-10T09:33:18Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateImports.java", "diffHunk": "@@ -132,6 +132,13 @@ protected void writeImportLines(List<String> lines) {\n             Collection<String> lines = new ArrayList<>();\n             AbstractTheme theme = getTheme();\n             ThemeDefinition themeDef = getThemeDefinition();\n+\n+            if (themeDef!= null && !themeDef.getName().equals(\"\")) {", "originalCommit": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNzQ1NQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520517455", "bodyText": "done", "author": "caalador", "createdAt": "2020-11-10T12:15:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxNjYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateImports.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateImports.java\nindex 9ee3c3af30..67718b96a5 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateImports.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateImports.java\n\n@@ -133,9 +132,9 @@ public class TaskUpdateImports extends NodeUpdater {\n             AbstractTheme theme = getTheme();\n             ThemeDefinition themeDef = getThemeDefinition();\n \n-            if (themeDef!= null && !themeDef.getName().equals(\"\")) {\n-                // If we define a theme name we need to import theme/theme.js\n-                lines.add(\"import {applyTheme} from 'theme/theme.js';\");\n+            if (themeDef != null && !themeDef.getName().equals(\"\")) {\n+                // If we define a theme name we need to import theme/theme-generated.js\n+                lines.add(\"import {applyTheme} from 'theme/theme-generated.js';\");\n                 lines.add(\"applyTheme(document);\");\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNjQyMw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520426423", "bodyText": "As this file is generated, should we name it theme-generated.js instead ? As the users are not supposed to touch it themselves ?", "author": "pleku", "createdAt": "2020-11-10T09:47:46Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateThemeImport.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.server.frontend;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+\n+import com.vaadin.flow.server.ExecutionFailedException;\n+import com.vaadin.flow.theme.ThemeDefinition;\n+\n+import org.apache.commons.io.FileUtils;\n+\n+/**\n+ * Task for generating the theme.js file for importing application theme.\n+ *\n+ * @since\n+ */\n+public class TaskUpdateThemeImport implements FallibleCommand {\n+\n+    private File themeImportFile;\n+    private ThemeDefinition theme;\n+\n+    TaskUpdateThemeImport(File npmFolder, ThemeDefinition theme) {\n+        File nodeModules = new File(npmFolder, FrontendUtils.NODE_MODULES);\n+        File flowFrontend = new File(nodeModules, FrontendUtils.FLOW_NPM_PACKAGE_NAME);\n+        this.themeImportFile = new File(new File(flowFrontend, \"theme\"), \"theme.js\");\n+        this.theme = theme;\n+    }\n+\n+    @Override\n+    public void execute() throws ExecutionFailedException {\n+        if (theme == null || theme.getName().isEmpty()) {\n+            return;\n+        }\n+        themeImportFile.getParentFile().mkdirs();\n+\n+        try {\n+            FileUtils.write(\n+                themeImportFile, \"import {applyTheme as _applyTheme} from 'theme/\" + theme.getName() + \"/\"\n+                    + theme.getName() + \".js';\\nexport const applyTheme = _applyTheme;\\n\",", "originalCommit": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxNzgwMQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520517801", "bodyText": "done", "author": "caalador", "createdAt": "2020-11-10T12:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyNjQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateThemeImport.java b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateThemeImport.java\nindex 37d2c9b5cb..211ee4a357 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateThemeImport.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskUpdateThemeImport.java\n\n@@ -19,13 +19,14 @@ import java.io.File;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n \n+import org.apache.commons.io.FileUtils;\n+\n import com.vaadin.flow.server.ExecutionFailedException;\n import com.vaadin.flow.theme.ThemeDefinition;\n \n-import org.apache.commons.io.FileUtils;\n-\n /**\n- * Task for generating the theme.js file for importing application theme.\n+ * Task for generating the theme-generated.js file for importing application\n+ * theme.\n  *\n  * @since\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MDA0Ng==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520480046", "bodyText": "The comment above is outdated, should this even exist as we're not interested in theme in routes either than to fail graciously ?", "author": "pleku", "createdAt": "2020-11-10T11:09:17Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/scanner/FrontendClassVisitor.java", "diffHunk": "@@ -171,7 +174,9 @@ public void visit(String name, Object value) {\n         themeLayoutVisitor = new RepeatedAnnotationVisitor() {", "originalCommit": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MDIzNQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520480235", "bodyText": "The comment above is outdated, should this even exist as we're not interested in theme in routes either than to fail graciously ?", "author": "pleku", "createdAt": "2020-11-10T11:09:35Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/scanner/FrontendClassVisitor.java", "diffHunk": "@@ -160,8 +161,10 @@ public void visit(String name, Object value) {\n             @Override", "originalCommit": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyMDAzNA==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520520034", "bodyText": "This fork is from before the change for AppShell so on this instance in time it's correct.", "author": "caalador", "createdAt": "2020-11-10T12:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MDIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMTA4NQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521221085", "bodyText": "Made a ticket about this case #9379 as changing it here would make backporting problematic.", "author": "caalador", "createdAt": "2020-11-11T09:19:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MDIzNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NzIwNg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520487206", "bodyText": "First I was confused with why are we visiting end points... but then looked it up in code.\nShould the javadocs of this method be somehow changed as we're not supposed to search for theme information from \"end points\" anymore ? I mean that first we check for the theme annotation from the AppShellConfiguration and then if that is not found, we can search the \"end points\" and then make it fail if it is discovered there ?", "author": "pleku", "createdAt": "2020-11-10T11:21:17Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/scanner/FrontendDependencies.java", "diffHunk": "@@ -267,26 +267,28 @@ private void computeApplicationTheme() throws ClassNotFoundException,\n                 visitClass(endPoint.getLayout(), endPoint, false);\n             }\n             if (endPoint.getTheme() != null) {\n-                visitClass(endPoint.getTheme().getName(), endPoint, true);\n+                visitClass(endPoint.getTheme().getThemeClass(), endPoint, true);", "originalCommit": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyMDQxNg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520520416", "bodyText": "This branch doesn't have the appShell changes as of yet.", "author": "caalador", "createdAt": "2020-11-10T12:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NzIwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTExMzg5Mg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521113892", "bodyText": "Also AppShell is a configuration endpoint from the view of the scanner.", "author": "caalador", "createdAt": "2020-11-11T04:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NzIwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5MTM1OA==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520491358", "bodyText": "Based on the code here, I think the error is thrown only if the theme is discovered >1 times on any of the following things that are collected as EndPoint:\n\nRoute\nWebComponentExporter or WebComponentExporterFactory\nUIInitListener\nVaadinServiceInitListener\nHasErrorParameter\n\nAnd I don't think the theme should be on any of those classes anymore (?) even 1 time, so this code seems off now.", "author": "pleku", "createdAt": "2020-11-10T11:28:26Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/scanner/FrontendDependencies.java", "diffHunk": "@@ -267,26 +267,28 @@ private void computeApplicationTheme() throws ClassNotFoundException,\n                 visitClass(endPoint.getLayout(), endPoint, false);\n             }\n             if (endPoint.getTheme() != null) {\n-                visitClass(endPoint.getTheme().getName(), endPoint, true);\n+                visitClass(endPoint.getTheme().getThemeClass(), endPoint, true);\n             }\n         }\n \n         Set<ThemeData> themes = endPoints.values().stream()\n                 // consider only endPoints with theme information\n-                .filter(data -> data.getTheme().getName() != null\n+                .filter(data -> data.getTheme().getThemeClass() != null ||\n+                    (data.getTheme().getThemeName() != null && !data.getTheme().getThemeName().isEmpty())\n                         || data.getTheme().isNotheme())\n                 .map(EndPointData::getTheme)\n                 // Remove duplicates by returning a set\n                 .collect(Collectors.toSet());\n \n         if (themes.size() > 1) {\n             String names = endPoints.values().stream()\n-                    .filter(data -> data.getTheme().getName() != null\n+                    .filter(data -> data.getTheme().getThemeClass() != null ||\n+                        data.getTheme().getThemeName() != null", "originalCommit": "3dc13b2ea9669bc01fd9bdcbc164eb03eacee93b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NDI1MA==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520494250", "bodyText": "Doesn't this go into adding app theme support for exported web component ?\nNot sure it is OK for now or we should just have TODOs in place until we have tests that validate things...\nOr if we add the support at the same time we should then at least draft the issues for web component support accordingly and make sure this PRs commit message acknowledges all the additions.", "author": "pleku", "createdAt": "2020-11-10T11:33:22Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/webcomponent/WebComponentGenerator.java", "diffHunk": "@@ -150,9 +155,16 @@ private static String generateModule(\n \n     static Map<String, String> getReplacementsMap(String tag,\n             Set<PropertyData<? extends Serializable>> propertyDataSet,\n-            String frontendURI, boolean generateUiImport) {\n+            String frontendURI, boolean generateUiImport, String themeName) {\n         Map<String, String> replacements = new HashMap<>();\n \n+        if (themeName != null && !themeName.isEmpty()) {\n+            replacements.put(\"ThemeImport\",\"import {applyTheme} from 'theme/theme.js';\");\n+            replacements.put(\"ApplyTheme\",\"applyTheme(shadow);\");\n+        } else {\n+            replacements.put(\"ThemeImport\",\"\");\n+            replacements.put(\"ApplyTheme\",\"\");", "originalCommit": "67d4898c3158403c0c96be51fed51c0a7e3814b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyOTUyNg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520529526", "bodyText": "We can take it out.", "author": "caalador", "createdAt": "2020-11-10T12:37:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NDI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/webcomponent/WebComponentGenerator.java b/flow-server/src/main/java/com/vaadin/flow/server/webcomponent/WebComponentGenerator.java\nindex 1198058e68..c6cc2127b6 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/webcomponent/WebComponentGenerator.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/webcomponent/WebComponentGenerator.java\n\n@@ -159,7 +159,7 @@ public class WebComponentGenerator {\n         Map<String, String> replacements = new HashMap<>();\n \n         if (themeName != null && !themeName.isEmpty()) {\n-            replacements.put(\"ThemeImport\",\"import {applyTheme} from 'theme/theme.js';\");\n+            replacements.put(\"ThemeImport\",\"import {applyTheme} from 'theme/theme-generated.js';\");\n             replacements.put(\"ApplyTheme\",\"applyTheme(shadow);\");\n         } else {\n             replacements.put(\"ThemeImport\",\"\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NjEzNA==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520496134", "bodyText": "I think the class javadocs need to be updated as they now don't refer to the application theme and its folder in any way, which is the recommended way to go.", "author": "pleku", "createdAt": "2020-11-10T11:36:42Z", "path": "flow-server/src/main/java/com/vaadin/flow/theme/Theme.java", "diffHunk": "@@ -90,14 +90,24 @@\n     /**", "originalCommit": "67d4898c3158403c0c96be51fed51c0a7e3814b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE5MDI1Ng==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521190256", "bodyText": "What should we recommend here?", "author": "caalador", "createdAt": "2020-11-11T08:22:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NjEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5MTUzOQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521291539", "bodyText": "For the class level javadocs something like:\nDefines the theme to use for the application. Should be present only once for an app, in the `AppShellConfiguration` class.\n<p>\nThe {@code value} property defines the name of the application theme. When the theme is present inside the project, it maps to the {@code frontend/theme/<application-theme-name>}/ folder or alternatively to a folder inside the static resources of a jar file, like {@code  src/main/resources/META-INF/resources/<application-theme-name>/}.\nThe application theme is always based on Lumo theme and this is the recommended way to theme applications starting from Flow 6.0 and Vaadin 19.\n<p>\nAlternatively , if instead of Lumo theme the Material theme or another \"old style custom theme\" is to be used, that can be specified with the ....", "author": "pleku", "createdAt": "2020-11-11T11:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NjEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzMjM2Mg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521332362", "bodyText": "changed.", "author": "caalador", "createdAt": "2020-11-11T12:44:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NjEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java b/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java\nindex b028bd153b..d3a2036f90 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java\n\n@@ -104,9 +104,9 @@ public @interface Theme {\n     String variant() default \"\";\n \n     /**\n-     * The name of the application theme to use\n+     * The name of the theme to use.\n      *\n-     * If this is not specified, no application theme is used.\n+     * If this is not specified will default to Lumo.\n      *\n      */\n     String value() default \"\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ5NjMwOA==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520496308", "bodyText": "What is an application theme ? (+ missing a dot)", "author": "pleku", "createdAt": "2020-11-10T11:37:01Z", "path": "flow-server/src/main/java/com/vaadin/flow/theme/Theme.java", "diffHunk": "@@ -90,14 +90,24 @@\n     /**\n      * The theme translation handler.\n      *\n+     * Defaults to Lumo, If not specified.\n+     *\n      * @return theme handler\n      */\n-    Class<? extends AbstractTheme> value();\n+    Class<? extends AbstractTheme> themeClass() default AbstractTheme.class;\n \n     /**\n      * The theme variant, if any.\n      *\n      * @return the theme variant\n      */\n     String variant() default \"\";\n+\n+    /**\n+     * The name of the application theme to use", "originalCommit": "67d4898c3158403c0c96be51fed51c0a7e3814b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35b02fbc61590435178b973c240770e77b7c1e11", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java b/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java\nindex b028bd153b..d3a2036f90 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/theme/Theme.java\n\n@@ -104,9 +104,9 @@ public @interface Theme {\n     String variant() default \"\";\n \n     /**\n-     * The name of the application theme to use\n+     * The name of the theme to use.\n      *\n-     * If this is not specified, no application theme is used.\n+     * If this is not specified will default to Lumo.\n      *\n      */\n     String value() default \"\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwMjI2OQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520502269", "bodyText": "At one point at least it was discussed that this should be impossible and I think I've written it to the technical design doc - I mean basically as the application theme is always based on Lumo (that is stated in feature design doc too).\nThis code ^ should be not allowed as otherwise someone could try to use @Theme(value=\"my-theme\", themeClass=Material.class) and that is not supported for now (?) Or I'm a bit confused now, could that be made to work with this from our end ? What would it mean ? And anyway, if the parent theme is not lumo, it should be done in theme.json instead since one should not be able to switch the \"base theme\" for an application theme with the java annotation...\nEven if we could make this possible (not like this from Java code), we would then have to support this and add tests...", "author": "pleku", "createdAt": "2020-11-10T11:47:55Z", "path": "flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/NpmThemedComponentView.java", "diffHunk": "@@ -22,7 +22,7 @@\n import com.vaadin.flow.theme.Theme;\n \n @Route(value = \"com.vaadin.flow.uitest.ui.theme.NpmThemedComponentView\")\n-@Theme(MyTheme.class)\n+@Theme(value =\"app-theme\", themeClass = MyTheme.class)", "originalCommit": "67d4898c3158403c0c96be51fed51c0a7e3814b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwNDczMw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520504733", "bodyText": "But it might be OK to slice this (catching the usage the same time and throwing a meaningful error) to its own issue", "author": "pleku", "createdAt": "2020-11-10T11:52:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwMjI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyMzg4Mw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520523883", "bodyText": "Well at the moment we only add support for global.css for which the base theme doesn't matter as long as you don't use lumo specific things.", "author": "caalador", "createdAt": "2020-11-10T12:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwMjI2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE1NTYyMw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521155623", "bodyText": "#9370", "author": "pleku", "createdAt": "2020-11-11T07:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwMjI2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ad47a0751c300dd3095b12fa71c208690534ce1", "chunk": "diff --git a/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/NpmThemedComponentView.java b/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/NpmThemedComponentView.java\nindex 40be8ff383..36bc88a0db 100644\n--- a/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/NpmThemedComponentView.java\n+++ b/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/NpmThemedComponentView.java\n\n@@ -22,7 +22,6 @@ import com.vaadin.flow.router.Route;\n import com.vaadin.flow.theme.Theme;\n \n @Route(value = \"com.vaadin.flow.uitest.ui.theme.NpmThemedComponentView\")\n-@Theme(value =\"app-theme\", themeClass = MyTheme.class)\n @Tag(\"npm-themed-component\")\n @JsModule(\"./src/npm-themed-component.js\")\n /*\n"}}, {"oid": "825a444187d0368fde8d3df23e872e404f4958f8", "url": "https://github.com/vaadin/flow/commit/825a444187d0368fde8d3df23e872e404f4958f8", "message": "Only collect theme folders do not recurse them", "committedDate": "2020-11-10T12:13:02Z", "type": "commit"}, {"oid": "35b02fbc61590435178b973c240770e77b7c1e11", "url": "https://github.com/vaadin/flow/commit/35b02fbc61590435178b973c240770e77b7c1e11", "message": "JavaDoc updates and file name changes.", "committedDate": "2020-11-10T12:40:39Z", "type": "commit"}, {"oid": "30a65359fe22d4d18d961328ef58af6008f7dffe", "url": "https://github.com/vaadin/flow/commit/30a65359fe22d4d18d961328ef58af6008f7dffe", "message": "Merge branch 'master' into issues/9281_theme_global", "committedDate": "2020-11-10T12:41:38Z", "type": "commit"}, {"oid": "4ad47a0751c300dd3095b12fa71c208690534ce1", "url": "https://github.com/vaadin/flow/commit/4ad47a0751c300dd3095b12fa71c208690534ce1", "message": "Fix Theme definition to AppShell class", "committedDate": "2020-11-10T12:55:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNDUwMg==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520814502", "bodyText": "This comment is out of place now ?", "author": "pleku", "createdAt": "2020-11-10T19:18:23Z", "path": "flow-tests/test-misc/src/main/java/com/vaadin/flow/misc/ui/AppShell.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.misc.ui;\n+\n+import com.vaadin.flow.component.page.AppShellConfigurator;\n+import com.vaadin.flow.server.PWA;\n+import com.vaadin.flow.theme.Theme;\n+\n+// `src/` in component above should be replaced by `legacyTheme/my-theme`", "originalCommit": "4ad47a0751c300dd3095b12fa71c208690534ce1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4MzAzNw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521183037", "bodyText": "done", "author": "caalador", "createdAt": "2020-11-11T08:07:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNDUwMg=="}], "type": "inlineReview", "revised_code": {"commit": "5dc6a0ab56c64f2a14d787724ff44d4a293ee16c", "chunk": "diff --git a/flow-tests/test-misc/src/main/java/com/vaadin/flow/misc/ui/AppShell.java b/flow-tests/test-misc/src/main/java/com/vaadin/flow/misc/ui/AppShell.java\nindex 70c7959afd..92f742f48a 100644\n--- a/flow-tests/test-misc/src/main/java/com/vaadin/flow/misc/ui/AppShell.java\n+++ b/flow-tests/test-misc/src/main/java/com/vaadin/flow/misc/ui/AppShell.java\n\n@@ -20,7 +20,6 @@ import com.vaadin.flow.component.page.AppShellConfigurator;\n import com.vaadin.flow.server.PWA;\n import com.vaadin.flow.theme.Theme;\n \n-// `src/` in component above should be replaced by `legacyTheme/my-theme`\n @Theme(themeClass = MiscelaneousView.MyTheme.class)\n @PWA(name = \"Project Base for Vaadin\", shortName = \"Project Base\")\n public class AppShell implements AppShellConfigurator {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNDkxNQ==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r520814915", "bodyText": "This comment seems out of place", "author": "pleku", "createdAt": "2020-11-10T19:19:04Z", "path": "flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/AppShell.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import com.vaadin.flow.component.page.AppShellConfigurator;\n+import com.vaadin.flow.server.PWA;\n+import com.vaadin.flow.theme.Theme;\n+\n+// `src/` in component above should be replaced by `legacyTheme/my-theme`", "originalCommit": "4ad47a0751c300dd3095b12fa71c208690534ce1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4Mjg5Nw==", "url": "https://github.com/vaadin/flow/pull/9349#discussion_r521182897", "bodyText": "done", "author": "caalador", "createdAt": "2020-11-11T08:07:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNDkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5dc6a0ab56c64f2a14d787724ff44d4a293ee16c", "chunk": "diff --git a/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/AppShell.java b/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/AppShell.java\nindex 7c7aca5448..a33fbfe227 100644\n--- a/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/AppShell.java\n+++ b/flow-tests/test-themes/src/main/java/com/vaadin/flow/uitest/ui/theme/AppShell.java\n\n@@ -20,7 +20,6 @@ import com.vaadin.flow.component.page.AppShellConfigurator;\n import com.vaadin.flow.server.PWA;\n import com.vaadin.flow.theme.Theme;\n \n-// `src/` in component above should be replaced by `legacyTheme/my-theme`\n @Theme(value =\"app-theme\", themeClass = MyTheme.class)\n @PWA(name = \"Project Base for Vaadin\", shortName = \"Project Base\")\n public class AppShell implements AppShellConfigurator {\n"}}, {"oid": "5dc6a0ab56c64f2a14d787724ff44d4a293ee16c", "url": "https://github.com/vaadin/flow/commit/5dc6a0ab56c64f2a14d787724ff44d4a293ee16c", "message": "Add JsDocs, remove extra parts.\n\nRevert webcomponent to not use app theme", "committedDate": "2020-11-11T08:33:31Z", "type": "commit"}, {"oid": "8d49a62337268b104070820d530fa9bd0ca0bf13", "url": "https://github.com/vaadin/flow/commit/8d49a62337268b104070820d530fa9bd0ca0bf13", "message": "Fix webComponent missed revertions", "committedDate": "2020-11-11T08:44:36Z", "type": "commit"}, {"oid": "864406be84fa7f81fc7cff05073f84a771f2cee5", "url": "https://github.com/vaadin/flow/commit/864406be84fa7f81fc7cff05073f84a771f2cee5", "message": "Update JavaDocs", "committedDate": "2020-11-11T12:34:00Z", "type": "commit"}]}