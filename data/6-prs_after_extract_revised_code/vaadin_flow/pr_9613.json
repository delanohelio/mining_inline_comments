{"pr_number": 9613, "pr_title": "Add IT test for CSS loading order", "pr_createdAt": "2020-12-09T06:37:26Z", "pr_url": "https://github.com/vaadin/flow/pull/9613", "timeline": [{"oid": "2c4ffb90efb1ac491f9aec9936ae19748372929a", "url": "https://github.com/vaadin/flow/commit/2c4ffb90efb1ac491f9aec9936ae19748372929a", "message": "Add IT test for Css loading order", "committedDate": "2020-12-08T20:51:41Z", "type": "commit"}, {"oid": "470b0179a8a4d84edbb30188406ad6780d9cc22e", "url": "https://github.com/vaadin/flow/commit/470b0179a8a4d84edbb30188406ad6780d9cc22e", "message": "Add test for overriding Lumo custom CSS property", "committedDate": "2020-12-08T21:26:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MjMyNw==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r540742327", "bodyText": "The test name doesn't give a clear insight to what it actually tests.", "author": "caalador", "createdAt": "2020-12-11T07:27:05Z", "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ParagraphElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+import static com.vaadin.flow.uitest.ui.theme.CssLoadingView.CSS_IMPORT__PAGE_ADD_STYLESHEET;\n+import static com.vaadin.flow.uitest.ui.theme.CssLoadingView.CSS_IMPORT__STYLESHEET;\n+import static com.vaadin.flow.uitest.ui.theme.CssLoadingView.PAGE_ADD_STYLESHEET__STYLESHEET;\n+\n+public class CssLoadingIT extends ChromeBrowserTest {\n+\n+    private static final String BLUE_RGBA = \"rgba(0, 0, 255, 1)\";\n+    private static final String GREEN_RGBA = \"rgba(0, 255, 0, 1)\";\n+    private static final String STYLESHEET_LUMO_FONT_SIZE_M = \" 30px\";\n+\n+    @Test\n+    public void StyleSheet_overrides_CssImport() {\n+        open();\n+        // @StyleSheet [blue] > page.addStyleSheet() [green] < @CssImport [red]\n+        Assert.assertEquals(\n+                \"Styles from @StyleSheet should have a higher priority than from @CssImport.\",\n+                BLUE_RGBA, $(ParagraphElement.class).id(CSS_IMPORT__STYLESHEET)\n+                        .getCssValue(\"color\"));\n+    }\n+\n+    @Test\n+    public void addStyleSheet_overrides_StyleSheet() {\n+        open();\n+        Assert.assertEquals(\n+                \"Styles from addStyleSheet() should have a higher priority than from @StyleSheet.\",\n+                BLUE_RGBA,\n+                $(ParagraphElement.class).id(PAGE_ADD_STYLESHEET__STYLESHEET)\n+                        .getCssValue(\"color\"));\n+    }\n+\n+    @Test\n+    public void addStyleSheet_overrides_CssImport() {\n+        open();\n+        Assert.assertEquals(\n+                \"Styles from addStyleSheet() should have a higher priority than from @CssImport.\",\n+                GREEN_RGBA,\n+                $(ParagraphElement.class).id(CSS_IMPORT__PAGE_ADD_STYLESHEET)\n+                        .getCssValue(\"color\"));\n+    }\n+\n+    @Test\n+    public void lumoStyleIsOverridden() {", "originalCommit": "470b0179a8a4d84edbb30188406ad6780d9cc22e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2MDc4Mw==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r542160783", "bodyText": "I actually have no idea how to test Lumo styles in a more specific way.", "author": "tanbt", "createdAt": "2020-12-14T07:20:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MjMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2MzcwNg==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r542163706", "bodyText": "Should I create separate views to test the priority of each pair of sources: a view to test @CssImport vs @StyleSheet, another view for  @StyleSheet vs page.addStylesheet, and so on?\nThere could be many combinations if doing so.", "author": "tanbt", "createdAt": "2020-12-14T07:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MjMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2ODk5Ng==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r542168996", "bodyText": "Perhaps you could ask Rolf or Jouni about lumo tests, also Rolf might have a vision on the expected ordering.\nHaving overriding tests would be perhaps better as a bunch where each step has 2 values where one is overridden or something.", "author": "caalador", "createdAt": "2020-12-14T07:38:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0MjMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "d553baee027f30abbe4356d8e9c493636e4a4149", "chunk": "diff --git a/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java b/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java\nindex 116847a4a6..0f3741eb74 100644\n--- a/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java\n+++ b/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java\n\n@@ -31,7 +31,20 @@ public class CssLoadingIT extends ChromeBrowserTest {\n \n     private static final String BLUE_RGBA = \"rgba(0, 0, 255, 1)\";\n     private static final String GREEN_RGBA = \"rgba(0, 255, 0, 1)\";\n-    private static final String STYLESHEET_LUMO_FONT_SIZE_M = \" 30px\";\n+    private static final String STYLESHEET_LUMO_FONT_SIZE_M = \" 1.1rem\";\n+\n+    @Test\n+    public void appTheme_overrides_Lumo() {\n+        open();\n+        WebElement htmlElement = findElement(By.tagName(\"html\"));\n+\n+        Assert.assertEquals(\n+                \"Lumo styles should have the lowest priority and can be overridden by App Theme global style.\",\n+                STYLESHEET_LUMO_FONT_SIZE_M,\n+                executeScript(\n+                        \"return getComputedStyle(arguments[0]).getPropertyValue('--lumo-font-size-m')\",\n+                        htmlElement));\n+    }\n \n     @Test\n     public void StyleSheet_overrides_CssImport() {\n"}}, {"oid": "32dcafc7dfcd6604407e2ca5cd569ea61ad1bbcd", "url": "https://github.com/vaadin/flow/commit/32dcafc7dfcd6604407e2ca5cd569ea61ad1bbcd", "message": "Merge branch 'master' into test-css-loading-order", "committedDate": "2020-12-17T07:24:02Z", "type": "commit"}, {"oid": "35e49b4bde2985d6abbbf499fce738828c70a7e7", "url": "https://github.com/vaadin/flow/commit/35e49b4bde2985d6abbbf499fce738828c70a7e7", "message": "Merge branch 'master' into test-css-loading-order", "committedDate": "2020-12-17T13:16:02Z", "type": "commit"}, {"oid": "4e11ad9a7662ddb3ee2286aef0d8d2e83ebb5710", "url": "https://github.com/vaadin/flow/commit/4e11ad9a7662ddb3ee2286aef0d8d2e83ebb5710", "message": "Merge branch 'master' into test-css-loading-order", "committedDate": "2020-12-17T16:14:36Z", "type": "commit"}, {"oid": "d553baee027f30abbe4356d8e9c493636e4a4149", "url": "https://github.com/vaadin/flow/commit/d553baee027f30abbe4356d8e9c493636e4a4149", "message": "Test that application theme override lumo styles", "committedDate": "2020-12-17T19:41:05Z", "type": "commit"}, {"oid": "046b12236017cdfe7642e73a868a92c24c005e7e", "url": "https://github.com/vaadin/flow/commit/046b12236017cdfe7642e73a868a92c24c005e7e", "message": "Add test for all overridings", "committedDate": "2020-12-18T09:38:31Z", "type": "commit"}, {"oid": "bf00390c394113e863495df67dc2ffdf31420dbd", "url": "https://github.com/vaadin/flow/commit/bf00390c394113e863495df67dc2ffdf31420dbd", "message": "Merge branch 'master' into test-css-loading-order", "committedDate": "2020-12-18T10:32:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2NTE1OA==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r545765158", "bodyText": "Should these 3 tests just be merged to one multipleDefinitions_correctOverrides as opening a new browser for single asserts is quite heavy and they could just mention in the assertion fail message which part failed for which exception.", "author": "caalador", "createdAt": "2020-12-18T11:13:55Z", "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ParagraphElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+/**\n+ * Test CSS loading order from different sources.\n+ *\n+ * The expected order is: Lumo styles < @CssImport < page.addStylesheet\n+ * < @Stylehseet < parent theme < current theme (app theme)\n+ */\n+public class CssLoadingIT extends ChromeBrowserTest {\n+\n+    private static final String RED_RGBA = \"rgba(255, 0, 0, 1)\";\n+    private static final String BLUE_RGBA = \"rgba(0, 0, 255, 1)\";\n+    private static final String GREEN_RGBA = \"rgba(0, 255, 0, 1)\";\n+    private static final String YELLOW_RGBA = \"rgba(255, 255, 0, 1)\";\n+    private static final String STYLESHEET_LUMO_FONT_SIZE_M = \" 1.1rem\";\n+\n+    @Test\n+    public void CssImport_overrides_Lumo() {\n+        open();\n+        WebElement htmlElement = findElement(By.tagName(\"html\"));\n+\n+        Assert.assertEquals(\"CssImport styles should override Lumo styles.\",\n+                STYLESHEET_LUMO_FONT_SIZE_M,\n+                executeScript(\n+                        \"return getComputedStyle(arguments[0]).getPropertyValue('--lumo-font-size-m')\",\n+                        htmlElement));\n+    }\n+\n+    @Test\n+    public void pageAddStylesheet_overrides_CssImport() {\n+        open();\n+        assertStylesOverride(\"p1\", GREEN_RGBA, \"16px\", \"1px\");\n+    }\n+\n+    @Test\n+    public void Stylesheet_overrides_pageAddStylesheetAndCssImport() {\n+        open();\n+        // @Stylesheet should override color and font-size but not margin\n+        assertStylesOverride(\"p2\", BLUE_RGBA, \"18px\", \"1px\");\n+    }\n+\n+    @Test\n+    public void appTheme_overrides_all() {\n+        open();\n+        assertStylesOverride(\"p3\", YELLOW_RGBA, \"20px\", \"2px\");\n+    }", "originalCommit": "bf00390c394113e863495df67dc2ffdf31420dbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc3NDQyMw==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r545774423", "bodyText": "Done.", "author": "tanbt", "createdAt": "2020-12-18T11:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2NTE1OA=="}], "type": "inlineReview", "revised_code": {"commit": "e1e17e63123b7ea1edd7b10138d2402f9daf2a99", "chunk": "diff --git a/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java b/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java\nindex 6b3d88805e..5c24dfee87 100644\n--- a/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java\n+++ b/flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java\n\n@@ -26,12 +26,11 @@ import com.vaadin.flow.testutil.ChromeBrowserTest;\n /**\n  * Test CSS loading order from different sources.\n  *\n- * The expected order is: Lumo styles < @CssImport < page.addStylesheet\n+ * The expected priority is: Lumo styles < @CssImport < page.addStylesheet\n  * < @Stylehseet < parent theme < current theme (app theme)\n  */\n public class CssLoadingIT extends ChromeBrowserTest {\n \n-    private static final String RED_RGBA = \"rgba(255, 0, 0, 1)\";\n     private static final String BLUE_RGBA = \"rgba(0, 0, 255, 1)\";\n     private static final String GREEN_RGBA = \"rgba(0, 255, 0, 1)\";\n     private static final String YELLOW_RGBA = \"rgba(255, 255, 0, 1)\";\n"}}, {"oid": "e1e17e63123b7ea1edd7b10138d2402f9daf2a99", "url": "https://github.com/vaadin/flow/commit/e1e17e63123b7ea1edd7b10138d2402f9daf2a99", "message": "Refactor based on review", "committedDate": "2020-12-18T11:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYwMzQxMg==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r546603412", "bodyText": "Is it better to split out these 3 assertions into 3 separate tests and name them accordingly for better readability/maintainability?", "author": "mshabarov", "createdAt": "2020-12-21T09:39:21Z", "path": "flow-tests/test-themes/src/test/java/com/vaadin/flow/uitest/ui/theme/CssLoadingIT.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.uitest.ui.theme;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+\n+import com.vaadin.flow.component.html.testbench.ParagraphElement;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+/**\n+ * Test CSS loading order from different sources.\n+ *\n+ * The expected priority is: Lumo styles < @CssImport < page.addStylesheet\n+ * < @Stylehseet < parent theme < current theme (app theme)\n+ */\n+public class CssLoadingIT extends ChromeBrowserTest {\n+\n+    private static final String BLUE_RGBA = \"rgba(0, 0, 255, 1)\";\n+    private static final String GREEN_RGBA = \"rgba(0, 255, 0, 1)\";\n+    private static final String YELLOW_RGBA = \"rgba(255, 255, 0, 1)\";\n+    private static final String STYLESHEET_LUMO_FONT_SIZE_M = \" 1.1rem\";\n+\n+    @Test\n+    public void CssImport_overrides_Lumo() {\n+        open();\n+        WebElement htmlElement = findElement(By.tagName(\"html\"));\n+\n+        Assert.assertEquals(\"CssImport styles should override Lumo styles.\",\n+                STYLESHEET_LUMO_FONT_SIZE_M,\n+                executeScript(\n+                        \"return getComputedStyle(arguments[0]).getPropertyValue('--lumo-font-size-m')\",\n+                        htmlElement));\n+    }\n+\n+    @Test\n+    public void multipleDefinitions_correctOverrides() {\n+        open();\n+        assertStylesOverride(\"p1\", GREEN_RGBA, \"16px\", \"1px\");", "originalCommit": "e1e17e63123b7ea1edd7b10138d2402f9daf2a99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYwMzkwMw==", "url": "https://github.com/vaadin/flow/pull/9613#discussion_r546603903", "bodyText": "Sorry, just saw Mikael's comment about it. Ignore my comment.", "author": "mshabarov", "createdAt": "2020-12-21T09:40:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYwMzQxMg=="}], "type": "inlineReview", "revised_code": null}]}