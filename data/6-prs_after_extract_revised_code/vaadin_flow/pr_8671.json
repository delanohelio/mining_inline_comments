{"pr_number": 8671, "pr_title": "Fix hierarchy for HasHierarchicalDataProvider", "pr_createdAt": "2020-07-01T09:41:24Z", "pr_url": "https://github.com/vaadin/flow/pull/8671", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3NDExMA==", "url": "https://github.com/vaadin/flow/pull/8671#discussion_r448274110", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-07-01T10:37:25Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HasHierarchicalDataProvider.java", "diffHunk": "@@ -157,108 +158,26 @@ public default void setItems(Stream<T> rootItems,\n     }\n \n     /**\n-     * Sets the data items of this component provided as a collection.\n+     * Sets the data provider for this listing. The data provider is queried for\n+     * displayed items as needed.\n      * <p>\n-     * The provided items are wrapped into a {@link TreeDataProvider} backed by\n-     * a flat {@link TreeData} structure. The data provider instance is used as\n-     * a parameter for the {@link #setDataProvider(DataProvider)} method. It\n-     * means that the items collection can be accessed later on via\n-     * {@link #getTreeData()}:\n-     *\n-     * <pre>\n-     * <code>\n-     * HasHierarchicalDataProvider&lt;String&gt; treeGrid = new TreeGrid&lt;&gt;();\n-     * treeGrid.setItems(Arrays.asList(\"a\",\"b\"));\n-     * ...\n-     *\n-     * TreeData&lt;String&gt; data = treeGrid.getTreeData();\n-     * </code>\n-     * </pre>\n-     * <p>\n-     * The returned {@link TreeData} instance may be used as-is to add, remove\n-     * or modify items in the hierarchy. These modifications to the object are\n-     * not automatically reflected back to the TreeGrid. Items modified should\n-     * be refreshed with {@link HierarchicalDataProvider#refreshItem(Object)}\n-     * and when adding or removing items\n-     * {@link HierarchicalDataProvider#refreshAll()} should be called.\n-     *\n-     * @param items\n-     *            the data items to display, not {@code null}\n+     * <em>NOTE:</em> This method is here for backwards compatibility, but the\n+     * implementation for it will most likely throw if the data provider is not\n+     * a {@link HierarchicalDataProvider}.\n+     * \n+     * @param dataProvider\n+     *            the data provider, not null\n+     * @deprecated Use {@link #setDataProvider(HierarchicalDataProvider)}\n+     *             instead as the data should be hierarchical\n      */\n-    @Override\n-    public default void setItems(Collection<T> items) {\n-        Objects.requireNonNull(items, \"Given collection may not be null\");\n-        setDataProvider(new TreeDataProvider<>(\n-                new TreeData<T>().addItems(null, items)));\n-    }\n+    void setDataProvider(DataProvider<T, ?> dataProvider);", "originalCommit": "85fdde25b69d79ca33607e9d30b494dbe530ae18", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cf401d2bf9b58466579d6199ad8fe4beaee54bfa", "chunk": "diff --git a/flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HasHierarchicalDataProvider.java b/flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HasHierarchicalDataProvider.java\nindex 399aa5cf80..76bde64342 100644\n--- a/flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HasHierarchicalDataProvider.java\n+++ b/flow-data/src/main/java/com/vaadin/flow/data/provider/hierarchy/HasHierarchicalDataProvider.java\n\n@@ -170,6 +167,7 @@ public interface HasHierarchicalDataProvider<T> extends Serializable {\n      * @deprecated Use {@link #setDataProvider(HierarchicalDataProvider)}\n      *             instead as the data should be hierarchical\n      */\n+    @Deprecated\n     void setDataProvider(DataProvider<T, ?> dataProvider);\n \n     /**\n"}}, {"oid": "cf401d2bf9b58466579d6199ad8fe4beaee54bfa", "url": "https://github.com/vaadin/flow/commit/cf401d2bf9b58466579d6199ad8fe4beaee54bfa", "message": "Fix hierarchy for HasHierarchicalDataProvider\n\nHasHierarchicalDataProvider cannot extend HasDataProvider anymore.\nRemoves \"flat data\" API from HasHierarchicalDataProvider so it does not\ncause compile errors for tree grid which extends grid and implements\nHasHierarchicalDataProvider. This is a breaking change.\n\nGrid part in https://github.com/vaadin/vaadin-grid-flow/pull/1057\n\nPart of vaadin/vaadin-grid-flow#1027", "committedDate": "2020-07-01T13:42:30Z", "type": "commit"}, {"oid": "cf401d2bf9b58466579d6199ad8fe4beaee54bfa", "url": "https://github.com/vaadin/flow/commit/cf401d2bf9b58466579d6199ad8fe4beaee54bfa", "message": "Fix hierarchy for HasHierarchicalDataProvider\n\nHasHierarchicalDataProvider cannot extend HasDataProvider anymore.\nRemoves \"flat data\" API from HasHierarchicalDataProvider so it does not\ncause compile errors for tree grid which extends grid and implements\nHasHierarchicalDataProvider. This is a breaking change.\n\nGrid part in https://github.com/vaadin/vaadin-grid-flow/pull/1057\n\nPart of vaadin/vaadin-grid-flow#1027", "committedDate": "2020-07-01T13:42:30Z", "type": "forcePushed"}]}