{"pr_number": 7608, "pr_title": "Url parameter template support.", "pr_createdAt": "2020-02-17T12:46:59Z", "pr_url": "https://github.com/vaadin/flow/pull/7608", "timeline": [{"oid": "49f306b6194a5f64658ed644565b8ed777f9c053", "url": "https://github.com/vaadin/flow/commit/49f306b6194a5f64658ed644565b8ed777f9c053", "message": "Fix comments", "committedDate": "2020-05-06T10:48:10Z", "type": "commit"}, {"oid": "3975e61134b6897be546acb3b49ec25840ba259f", "url": "https://github.com/vaadin/flow/commit/3975e61134b6897be546acb3b49ec25840ba259f", "message": "Fix comment", "committedDate": "2020-05-06T10:52:44Z", "type": "commit"}, {"oid": "daf3d82a64a0257efccd2b011f4cf085afad4522", "url": "https://github.com/vaadin/flow/commit/daf3d82a64a0257efccd2b011f4cf085afad4522", "message": "Fix comments", "committedDate": "2020-05-07T03:44:58Z", "type": "commit"}, {"oid": "59c93d6607602c7eb89aba65dc7c917286a5ddbc", "url": "https://github.com/vaadin/flow/commit/59c93d6607602c7eb89aba65dc7c917286a5ddbc", "message": "Fix comments", "committedDate": "2020-05-07T09:12:02Z", "type": "commit"}, {"oid": "c6e7f1db81e05e231cb32999c276d875c1791d5b", "url": "https://github.com/vaadin/flow/commit/c6e7f1db81e05e231cb32999c276d875c1791d5b", "message": "Merge branch 'master' into bu/route-parameters", "committedDate": "2020-05-08T06:10:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MzMwMw==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r387583303", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-03-04T10:40:41Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java", "diffHunk": "@@ -85,17 +119,41 @@ public RouteBaseData(List<Class<? extends RouterLayout>> parentLayouts,\n      * Get the full route url of {@link Route}.\n      *\n      * @return route url\n+     * @deprecated use {@link #getUrlTemplate()} instead.\n      */\n+    @Deprecated\n     public String getUrl() {\n-        return url;\n+        return urlTemplate;\n     }\n \n     /**\n-     * Get {@link Route} url parameters if any.\n+     * Get the full route url of {@link Route}.\n+     *\n+     * @return route url template.\n+     */\n+    public String getUrlTemplate() {\n+        return urlTemplate;\n+    }\n+\n+    /**\n+     * This method will throw {@link UnsupportedOperationException}.\n      *\n      * @return url parameters (by type and in order)\n+     * @throws UnsupportedOperationException\n+     * @deprecated use {@link #getDefinedParameters()} instead.\n      */\n+    @Deprecated\n     public List<Class<?>> getParameters() {", "originalCommit": "d0986dda47f1f6f50bbb75c5ebbd06762939a08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java b/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java\nindex e298f5752d..360c707e0c 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java\n\n@@ -119,41 +120,42 @@ public abstract class RouteBaseData<T extends RouteBaseData>\n      * Get the full route url of {@link Route}.\n      *\n      * @return route url\n-     * @deprecated use {@link #getUrlTemplate()} instead.\n+     * @deprecated use {@link #getTemplate()} instead.\n      */\n     @Deprecated\n     public String getUrl() {\n-        return urlTemplate;\n+        return template;\n     }\n \n     /**\n-     * Get the full route url of {@link Route}.\n+     * Get the full route template of {@link Route}.\n      *\n-     * @return route url template.\n+     * @return route template.\n      */\n-    public String getUrlTemplate() {\n-        return urlTemplate;\n+    public String getTemplate() {\n+        return template;\n     }\n \n     /**\n-     * This method will throw {@link UnsupportedOperationException}.\n+     * Get {@link Route} route parameters types if any.\n      *\n-     * @return url parameters (by type and in order)\n-     * @throws UnsupportedOperationException\n-     * @deprecated use {@link #getDefinedParameters()} instead.\n+     * @return route parameters types.\n+     * @deprecated use {@link #getRouteParameters()} instead.\n      */\n     @Deprecated\n     public List<Class<?>> getParameters() {\n-        throw new UnsupportedOperationException(\n-                \"Use getDefinedParameters instead.\");\n+        final List<String> parametersRegex = parameters.values().stream()\n+                .map(RouteParameterData::getRegex).map(Optional::get)\n+                .collect(Collectors.toList());\n+        return HasUrlParameterFormat.getParameterTypes(parametersRegex);\n     }\n \n     /**\n-     * Get {@link Route} url parameters if any.\n+     * Get {@link Route} route parameters if any.\n      *\n-     * @return url parameters names mapped with their defined regex.\n+     * @return route parameters names mapped with their defined regex.\n      */\n-    public Map<String, String> getDefinedParameters() {\n+    public Map<String, RouteParameterData> getRouteParameters() {\n         return parameters;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MzMxMw==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r387583313", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-03-04T10:40:42Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java", "diffHunk": "@@ -85,17 +119,41 @@ public RouteBaseData(List<Class<? extends RouterLayout>> parentLayouts,\n      * Get the full route url of {@link Route}.\n      *\n      * @return route url\n+     * @deprecated use {@link #getUrlTemplate()} instead.\n      */\n+    @Deprecated\n     public String getUrl() {", "originalCommit": "d0986dda47f1f6f50bbb75c5ebbd06762939a08c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java b/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java\nindex e298f5752d..360c707e0c 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/RouteBaseData.java\n\n@@ -119,41 +120,42 @@ public abstract class RouteBaseData<T extends RouteBaseData>\n      * Get the full route url of {@link Route}.\n      *\n      * @return route url\n-     * @deprecated use {@link #getUrlTemplate()} instead.\n+     * @deprecated use {@link #getTemplate()} instead.\n      */\n     @Deprecated\n     public String getUrl() {\n-        return urlTemplate;\n+        return template;\n     }\n \n     /**\n-     * Get the full route url of {@link Route}.\n+     * Get the full route template of {@link Route}.\n      *\n-     * @return route url template.\n+     * @return route template.\n      */\n-    public String getUrlTemplate() {\n-        return urlTemplate;\n+    public String getTemplate() {\n+        return template;\n     }\n \n     /**\n-     * This method will throw {@link UnsupportedOperationException}.\n+     * Get {@link Route} route parameters types if any.\n      *\n-     * @return url parameters (by type and in order)\n-     * @throws UnsupportedOperationException\n-     * @deprecated use {@link #getDefinedParameters()} instead.\n+     * @return route parameters types.\n+     * @deprecated use {@link #getRouteParameters()} instead.\n      */\n     @Deprecated\n     public List<Class<?>> getParameters() {\n-        throw new UnsupportedOperationException(\n-                \"Use getDefinedParameters instead.\");\n+        final List<String> parametersRegex = parameters.values().stream()\n+                .map(RouteParameterData::getRegex).map(Optional::get)\n+                .collect(Collectors.toList());\n+        return HasUrlParameterFormat.getParameterTypes(parametersRegex);\n     }\n \n     /**\n-     * Get {@link Route} url parameters if any.\n+     * Get {@link Route} route parameters if any.\n      *\n-     * @return url parameters names mapped with their defined regex.\n+     * @return route parameters names mapped with their defined regex.\n      */\n-    public Map<String, String> getDefinedParameters() {\n+    public Map<String, RouteParameterData> getRouteParameters() {\n         return parameters;\n     }\n \n"}}, {"oid": "a96a8ee5babfe36316167ee962b7743fd4103536", "url": "https://github.com/vaadin/flow/commit/a96a8ee5babfe36316167ee962b7743fd4103536", "message": "Add tests.", "committedDate": "2020-03-04T11:53:20Z", "type": "commit"}, {"oid": "a96a8ee5babfe36316167ee962b7743fd4103536", "url": "https://github.com/vaadin/flow/commit/a96a8ee5babfe36316167ee962b7743fd4103536", "message": "Add tests.", "committedDate": "2020-03-04T11:53:20Z", "type": "forcePushed"}, {"oid": "de3cd848e391a67df9f151c7e9f62c9ee69e7c8f", "url": "https://github.com/vaadin/flow/commit/de3cd848e391a67df9f151c7e9f62c9ee69e7c8f", "message": "Merge branch 'master' into bu/route-parameters", "committedDate": "2020-03-05T06:30:02Z", "type": "commit"}, {"oid": "49ec3e2c735abce261889df84ed7483d2dee6eb8", "url": "https://github.com/vaadin/flow/commit/49ec3e2c735abce261889df84ed7483d2dee6eb8", "message": "Fix getUrl implementation in RouteModel and add more tests.", "committedDate": "2020-03-25T09:53:39Z", "type": "commit"}, {"oid": "668e7ca9271adb6fed01ff44f1442d0640dda09e", "url": "https://github.com/vaadin/flow/commit/668e7ca9271adb6fed01ff44f1442d0640dda09e", "message": "Merge branch 'master' into bu/route-parameters", "committedDate": "2020-03-25T10:10:01Z", "type": "commit"}, {"oid": "0094822881ae97fd583f3b8f5000aa478552e471", "url": "https://github.com/vaadin/flow/commit/0094822881ae97fd583f3b8f5000aa478552e471", "message": "Add test for reroute. Working on RouterLink.", "committedDate": "2020-03-27T11:40:20Z", "type": "commit"}, {"oid": "2e2706b47cb76997e4d4c44293cb682493628cec", "url": "https://github.com/vaadin/flow/commit/2e2706b47cb76997e4d4c44293cb682493628cec", "message": "Add UrlParameters to RouterLink.", "committedDate": "2020-03-29T04:14:27Z", "type": "commit"}, {"oid": "9bffb5baca94ce8cf0a572231adbca08ed941aaa", "url": "https://github.com/vaadin/flow/commit/9bffb5baca94ce8cf0a572231adbca08ed941aaa", "message": "Add RouteModel tests", "committedDate": "2020-03-29T06:15:34Z", "type": "commit"}, {"oid": "b7b4666d8e03d99438c8c2774610403c2adcdb4b", "url": "https://github.com/vaadin/flow/commit/b7b4666d8e03d99438c8c2774610403c2adcdb4b", "message": "Add TODOs", "committedDate": "2020-03-29T06:18:07Z", "type": "commit"}, {"oid": "4be00f3efa6752bb6704a26140fdc6428c5af908", "url": "https://github.com/vaadin/flow/commit/4be00f3efa6752bb6704a26140fdc6428c5af908", "message": "Add RouteModel tests, getRoutes() and RouteParameterData", "committedDate": "2020-03-30T11:10:23Z", "type": "commit"}, {"oid": "3b77ac25f8e26dbaea1343bbfb571c052a8790aa", "url": "https://github.com/vaadin/flow/commit/3b77ac25f8e26dbaea1343bbfb571c052a8790aa", "message": "Fix sonar", "committedDate": "2020-03-30T11:27:25Z", "type": "commit"}, {"oid": "fbf4aa844fbfb0d3d713834a86f53cd4ed6b8245", "url": "https://github.com/vaadin/flow/commit/fbf4aa844fbfb0d3d713834a86f53cd4ed6b8245", "message": "Remove Serializable from RouteSegmentValue", "committedDate": "2020-03-31T06:57:09Z", "type": "commit"}, {"oid": "5802f933677c752a0ffec149f3ff7070532a4a52", "url": "https://github.com/vaadin/flow/commit/5802f933677c752a0ffec149f3ff7070532a4a52", "message": "Remove UnsupportedOperationException from getParameters in RouteBaseData", "committedDate": "2020-03-31T07:21:28Z", "type": "commit"}, {"oid": "4698090e6b1a86d490294e43e98c7366c9eef039", "url": "https://github.com/vaadin/flow/commit/4698090e6b1a86d490294e43e98c7366c9eef039", "message": "Ignore serializable in RouteSegmentValue", "committedDate": "2020-03-31T11:13:02Z", "type": "commit"}, {"oid": "1e305050cc61459bf9256aca494399e6693145d0", "url": "https://github.com/vaadin/flow/commit/1e305050cc61459bf9256aca494399e6693145d0", "message": "Fix comments.", "committedDate": "2020-03-31T13:12:39Z", "type": "commit"}, {"oid": "f1f6ec937fbe5c455289ed8ce3ec2295ec809bfd", "url": "https://github.com/vaadin/flow/commit/f1f6ec937fbe5c455289ed8ce3ec2295ec809bfd", "message": "Rename to reroute target and forward target", "committedDate": "2020-03-31T13:31:27Z", "type": "commit"}, {"oid": "85acee264d72b22cbdc17abd9c46078ae8845e64", "url": "https://github.com/vaadin/flow/commit/85acee264d72b22cbdc17abd9c46078ae8845e64", "message": "Fix comments", "committedDate": "2020-04-01T11:29:21Z", "type": "commit"}, {"oid": "e7c7c0c5e4042f6e04e2f15cff7efa2566915ad4", "url": "https://github.com/vaadin/flow/commit/e7c7c0c5e4042f6e04e2f15cff7efa2566915ad4", "message": "Fix comments", "committedDate": "2020-04-02T06:46:47Z", "type": "commit"}, {"oid": "5620cc7d7b5a160e559fd9e31c5a1eb7d5f2925c", "url": "https://github.com/vaadin/flow/commit/5620cc7d7b5a160e559fd9e31c5a1eb7d5f2925c", "message": "Fix sonar", "committedDate": "2020-04-02T07:10:16Z", "type": "commit"}, {"oid": "535ff8c650e3f604f54c69e586d8be34ccf807ab", "url": "https://github.com/vaadin/flow/commit/535ff8c650e3f604f54c69e586d8be34ccf807ab", "message": "Fix comments", "committedDate": "2020-04-02T12:21:51Z", "type": "commit"}, {"oid": "98622e2a0b452a843e9b2221975a7ccf09a1d9ba", "url": "https://github.com/vaadin/flow/commit/98622e2a0b452a843e9b2221975a7ccf09a1d9ba", "message": "Fix comments", "committedDate": "2020-04-06T03:30:50Z", "type": "commit"}, {"oid": "1a8463135208ea15091d7dea2b705a4883154487", "url": "https://github.com/vaadin/flow/commit/1a8463135208ea15091d7dea2b705a4883154487", "message": "Move RouteTarget to router.internal", "committedDate": "2020-04-06T03:38:24Z", "type": "commit"}, {"oid": "4b69531b906759be1a04a2fcb8c41625df3d909b", "url": "https://github.com/vaadin/flow/commit/4b69531b906759be1a04a2fcb8c41625df3d909b", "message": "Rename UrlParameters to RouteParameters.", "committedDate": "2020-04-06T03:45:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNTY4Ng==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r403815686", "bodyText": "Replace this if-then-else statement by a single return statement.", "author": "vaadin-bot", "createdAt": "2020-04-06T03:48:17Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java", "diffHunk": "@@ -0,0 +1,256 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.router.internal;\n+\n+import java.io.Serializable;\n+import java.util.Set;\n+\n+import com.vaadin.flow.router.RouteParameterFormatOption;\n+import com.vaadin.flow.router.RouteParameterRegex;\n+\n+/**\n+ * Utility class which contains various methods for defining url parameter\n+ * template.\n+ */\n+class RouteFormat implements Serializable {\n+\n+    static final String INTEGER_REGEX = RouteParameterRegex.INTEGER;\n+    static final String LONG_REGEX = RouteParameterRegex.LONG;\n+    static final String BOOLEAN_REGEX = RouteParameterRegex.BOOLEAN;\n+    static final String STRING_REGEX = \"\";\n+\n+    /**\n+     * Returns whether the specified urlTemplate contains url parameters.\n+     *\n+     * @param urlTemplate\n+     *            a url template.\n+     * @return true if the specified urlTemplate contains url parameters,\n+     *         otherwise false.\n+     */\n+    static boolean hasParameters(String urlTemplate) {\n+        return urlTemplate.contains(\":\");\n+    }\n+\n+    /**\n+     * Returns whether the specified urlTemplate contains url parameters.\n+     *\n+     * @param urlTemplate\n+     *            a url template.\n+     * @return true if the specified urlTemplate contains url parameters,\n+     *         otherwise false.\n+     */\n+    static boolean hasRequiredParameter(String urlTemplate) {\n+        int index = -1;\n+        do {\n+            index = urlTemplate.indexOf(\":\", index + 1);\n+\n+            if (index >= 0) {\n+                final int regexIndex = urlTemplate.indexOf(\"(\", index);\n+                final int slashIndex = urlTemplate.indexOf(\"/\", index);\n+\n+                int parameterNameEnding = Math.min(regexIndex, slashIndex);\n+\n+                // Missing regex.\n+                if (parameterNameEnding < 0) {\n+                    parameterNameEnding = slashIndex;\n+                }\n+                // End of the string.\n+                if (parameterNameEnding < 0) {\n+                    parameterNameEnding = urlTemplate.length();\n+                }\n+\n+                int optional = urlTemplate.indexOf(\"?\", index);\n+                if (0 < optional && optional < parameterNameEnding) {\n+                    // This parameter is an optional, move on.\n+                    continue;\n+                }\n+\n+                int wildcard = urlTemplate.indexOf(\"*\", index);\n+                if (0 < wildcard && wildcard < parameterNameEnding) {", "originalCommit": "1a8463135208ea15091d7dea2b705a4883154487", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java b/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java\nindex e9d7374cd4..3133d29857 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java\n\n@@ -16,6 +16,7 @@\n package com.vaadin.flow.router.internal;\n \n import java.io.Serializable;\n+import java.util.Optional;\n import java.util.Set;\n \n import com.vaadin.flow.router.RouteParameterFormatOption;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNjQ3MQ==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r403816471", "bodyText": "Either log or rethrow this exception.", "author": "vaadin-bot", "createdAt": "2020-04-06T03:52:07Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java", "diffHunk": "@@ -110,57 +133,115 @@ public ConfiguredRoutes(ConfigureRoutes original) {\n      * See if configuration contains a registered route for given path.\n      *\n      * @param path\n-     *         path to check\n+     *            path to check\n      * @return true if configuration contains route\n      */\n     public boolean hasRoute(String path) {\n-        return getRoutesMap().containsKey(path);\n+        return hasUrlTemplate(path);\n+    }\n+\n+    /**\n+     * See if configuration contains a registered route for given url template.\n+     *\n+     * @param urlTemplate\n+     *            url template to check\n+     * @return true if configuration contains route\n+     */\n+    public boolean hasUrlTemplate(String urlTemplate) {\n+        return getRoutesMap().containsKey(urlTemplate);\n     }\n \n     /**\n      * Check if configuration holds a route for given path with possible path\n      * segments.\n      *\n-     * @param pathString\n-     *         path string to check\n+     * @param path\n+     *            path string to check\n      * @param segments\n-     *         path segments for route\n+     *            path segments for route\n      * @return true if a route is found, else false\n      */\n-    public boolean hasRoute(String pathString, List<String> segments) {\n-        if (hasRoute(pathString)) {\n-            return getRouteTarget(pathString).getTarget(segments) != null;\n-        }\n-        return false;\n+    public boolean hasRoute(String path, List<String> segments) {\n+        return getNavigationRouteTarget(PathUtil.getPath(path, segments))\n+                .hasTarget();\n     }\n \n     /**\n      * Check it the given route target has been registered to the configuration.\n      *\n-     * @param targetRoute\n-     *         target to check registration status for\n+     * @param target\n+     *            target to check registration status for\n      * @return true if target is found in configuration\n      */\n-    public boolean hasRouteTarget(Class<? extends Component> targetRoute) {\n-        return getTargetRoutes().containsKey(targetRoute);\n+    public boolean hasRouteTarget(Class<? extends Component> target) {\n+        return getTargetRoutes().containsKey(target);\n+    }\n+\n+    /**\n+     * Search for a route target using given navigation <code>url</code>\n+     * argument.\n+     *\n+     * @param url\n+     *            the navigation url used to search a route target.\n+     * @return a {@link NavigationRouteTarget} instance containing the\n+     *         {@link RouteTarget} and {@link RouteParameters} extracted from the\n+     *         <code>url</code> argument according with the route configuration.\n+     */\n+    public NavigationRouteTarget getNavigationRouteTarget(String url) {\n+        return getRouteModel().getNavigationRouteTarget(url);\n+    }\n+\n+    /**\n+     * Gets the {@link RouteTarget} instance matching the given target component\n+     * and route parameters.\n+     *\n+     * @param target\n+     *            a component class which is a navigation target.\n+     * @param parameters\n+     *            parameter values that may be used with given target.\n+     * @return the {@link RouteTarget} instance matching the given target\n+     *         component and route parameters.\n+     */\n+    public RouteTarget getRouteTarget(Class<? extends Component> target,\n+                                      RouteParameters parameters) {\n+        return iterateUrlTemplates(target, urlTemplate -> {\n+            try {\n+                return getRouteModel().getRouteTarget(urlTemplate, parameters);\n+            } catch (IllegalArgumentException e) {", "originalCommit": "4b69531b906759be1a04a2fcb8c41625df3d909b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java b/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\nindex d48c4f3a42..0ac91cd64f 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\n\n@@ -137,18 +139,18 @@ public class ConfiguredRoutes implements Serializable {\n      * @return true if configuration contains route\n      */\n     public boolean hasRoute(String path) {\n-        return hasUrlTemplate(path);\n+        return hasTemplate(path);\n     }\n \n     /**\n-     * See if configuration contains a registered route for given url template.\n+     * See if configuration contains a registered route for given template.\n      *\n-     * @param urlTemplate\n-     *            url template to check\n+     * @param template\n+     *            template to check\n      * @return true if configuration contains route\n      */\n-    public boolean hasUrlTemplate(String urlTemplate) {\n-        return getRoutesMap().containsKey(urlTemplate);\n+    public boolean hasTemplate(String template) {\n+        return getRoutesMap().containsKey(template);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNjQ3Ng==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r403816476", "bodyText": "Either log or rethrow this exception.", "author": "vaadin-bot", "createdAt": "2020-04-06T03:52:08Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java", "diffHunk": "@@ -173,30 +254,133 @@ public boolean hasRouteTarget(Class<? extends Component> targetRoute) {\n     }\n \n     /**\n-     * Get all registered target routes for this configuration.\n+     * Get all registered target routes for this configuration mapping the main\n+     * url template.\n      *\n      * @return component-to-path map of all target routes\n      */\n     public Map<Class<? extends Component>, String> getTargetRoutes() {\n-        return targetRoutes;\n+        return targetToPath;\n+    }\n+\n+    /**\n+     * Get all registered target routes for this configuration.\n+     *\n+     * @return component-to-path map of all target routes\n+     */\n+    Map<Class<? extends Component>, RouteModel> getTargetRouteModels() {\n+        return targetRouteModels;\n+    }\n+\n+    /**\n+     * Make a copy of the target and route models mapping.\n+     * \n+     * @return a copy of the target and route models mapping.\n+     */\n+    protected final Map<Class<? extends Component>, RouteModel> copyTargetRouteModels(\n+            boolean mutable) {\n+        Map<Class<? extends Component>, RouteModel> copyMap = new HashMap<>();\n+        this.getTargetRouteModels().entrySet().forEach(entry -> copyMap\n+                .put(entry.getKey(), RouteModel.copy(entry.getValue(), mutable)));\n+        return copyMap;\n     }\n \n     /**\n-     * Get the route path String for the given navigation target class.\n+     * Get the route url template String for the given navigation target class.\n      *\n      * @param navigationTarget\n-     *         navigationTarget to get registered route for\n+     *            navigationTarget to get registered route for\n      * @return base route string if target class found\n      */\n     public String getTargetRoute(Class<? extends Component> navigationTarget) {\n+        return getUrlTemplate(navigationTarget);\n+    }\n+\n+    /**\n+     * Get the route url template String for the given navigation target class.\n+     *\n+     * @param navigationTarget\n+     *            navigationTarget to get registered route for\n+     * @return base route string if target class found\n+     */\n+    public String getUrlTemplate(Class<? extends Component> navigationTarget) {\n         return getTargetRoutes().get(navigationTarget);\n     }\n \n+    /**\n+     * Get the route url template String for the given navigation target class\n+     * and using the specified parameters format.\n+     *\n+     * @param navigationTarget\n+     *            navigationTarget to get registered route for\n+     * @param format\n+     *            settings used to format the result parameters. If all of\n+     *            {@link RouteParameterFormatOption#NAME},\n+     *            {@link RouteParameterFormatOption#MODIFIER} and\n+     *            {@link RouteParameterFormatOption#REGEX} are provided, the\n+     *            unformatted url template will be provided.\n+     * @return base route string if target class found\n+     */\n+    public String getUrlTemplate(Class<? extends Component> navigationTarget,\n+            Set<RouteParameterFormatOption> format) {\n+        final String urlTemplate = getUrlTemplate(navigationTarget);\n+        if (urlTemplate == null) {\n+            return null;\n+        }\n+\n+        return getRouteModel().formatUrlTemplate(urlTemplate, format);\n+    }\n+\n+    /**\n+     * Get the url path String for the given navigation target class.\n+     *\n+     * @param navigationTarget\n+     *            navigationTarget to get registered route for\n+     * @return route string if target class found\n+     */\n+    public String getTargetUrl(Class<? extends Component> navigationTarget) {\n+        return iterateUrlTemplates(navigationTarget, urlTemplate -> {\n+            if (RouteFormat.hasRequiredParameter(urlTemplate)) {\n+                return null;\n+\n+            } else if (RouteFormat.hasParameters(urlTemplate)) {\n+                // In case all parameters are optional or wildcard, this will\n+                // return successfully.\n+                return getRouteModel().getUrl(urlTemplate,\n+                        RouteParameters.empty());\n+            }\n+\n+            return urlTemplate;\n+        });\n+    }\n+\n+    /**\n+     * Get the url path String for the given navigation target class and\n+     * parameters.\n+     *\n+     * @param navigationTarget\n+     *            navigationTarget to get registered route for\n+     * @param parameters\n+     *            route parameters\n+     * @return url String populated with parameters for the given\n+     *         navigationTarget\n+     */\n+    public String getTargetUrl(Class<? extends Component> navigationTarget,\n+            RouteParameters parameters) {\n+        return iterateUrlTemplates(navigationTarget, urlTemplate -> {\n+            try {\n+                return getRouteModel().getUrl(urlTemplate, parameters);\n+            } catch (IllegalArgumentException e) {", "originalCommit": "4b69531b906759be1a04a2fcb8c41625df3d909b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java b/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\nindex d48c4f3a42..0ac91cd64f 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\n\n@@ -255,12 +257,12 @@ public class ConfiguredRoutes implements Serializable {\n \n     /**\n      * Get all registered target routes for this configuration mapping the main\n-     * url template.\n+     * template.\n      *\n      * @return component-to-path map of all target routes\n      */\n     public Map<Class<? extends Component>, String> getTargetRoutes() {\n-        return targetToPath;\n+        return targetRouteMap;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNjQ3OA==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r403816478", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-04-06T03:52:09Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java", "diffHunk": "@@ -210,33 +394,74 @@ public String getTargetRoute(Class<? extends Component> navigationTarget) {\n      * @return all registered exception handlers\n      */\n     public Map<Class<? extends Exception>, Class<? extends Component>> getExceptionHandlers() {\n-        return exceptionTargets;\n+        return exceptionToTarget;\n     }\n \n     /**\n      * Return the parent layout chain for given navigation target on the target\n      * path.\n      *\n      * @param path\n-     *         path to get parent layout chain for\n+     *            path to get parent layout chain for.\n      * @param navigationTarget\n-     *         navigation target on path to get parent layout chain for\n-     * @return list of parent layout chain\n+     *            navigation target on path to get parent layout chain for.\n+     * @return list of parent layout chain.\n+     * @deprecated use {@link #getNavigationRouteTarget(String)} instead.\n      */\n+    @Deprecated\n     public List<Class<? extends RouterLayout>> getParentLayouts(String path,", "originalCommit": "4b69531b906759be1a04a2fcb8c41625df3d909b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java b/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\nindex d48c4f3a42..0ac91cd64f 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/internal/ConfiguredRoutes.java\n\n@@ -394,7 +396,7 @@ public class ConfiguredRoutes implements Serializable {\n      * @return all registered exception handlers\n      */\n     public Map<Class<? extends Exception>, Class<? extends Component>> getExceptionHandlers() {\n-        return exceptionToTarget;\n+        return exceptionTargetMap;\n     }\n \n     /**\n"}}, {"oid": "e7e5cbe93fb06f774e9d74e62617a8978f5601d1", "url": "https://github.com/vaadin/flow/commit/e7e5cbe93fb06f774e9d74e62617a8978f5601d1", "message": "Fix sonar", "committedDate": "2020-04-06T04:40:32Z", "type": "commit"}, {"oid": "c176fb184534e3b1934488f2607f89d84664eb57", "url": "https://github.com/vaadin/flow/commit/c176fb184534e3b1934488f2607f89d84664eb57", "message": "Add isPathAvailable", "committedDate": "2020-04-07T05:28:25Z", "type": "commit"}, {"oid": "49cf494d6e20f3e2f474516f36a29ac2591d09a8", "url": "https://github.com/vaadin/flow/commit/49cf494d6e20f3e2f474516f36a29ac2591d09a8", "message": "Rename to just template. Fix route remove with path and class.", "committedDate": "2020-04-07T10:16:28Z", "type": "commit"}, {"oid": "c8dc099f77317b6b4d04732caf50963d52f9f075", "url": "https://github.com/vaadin/flow/commit/c8dc099f77317b6b4d04732caf50963d52f9f075", "message": "Update javadoc", "committedDate": "2020-04-07T10:27:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNDg5Mw==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r404704893", "bodyText": "Remove useless curly braces around statement", "author": "vaadin-bot", "createdAt": "2020-04-07T10:29:58Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/AbstractRouteRegistry.java", "diffHunk": "@@ -238,136 +249,117 @@ public ConfiguredRoutes getConfiguration() {\n     }\n \n     private List<Class<? extends RouterLayout>> getParentLayouts(\n-            ConfiguredRoutes configuration, Class<? extends Component> target,\n-            String url) {\n-        RouteTarget routeTarget = configuration.getRouteTarget(url);\n+            ConfiguredRoutes configuration, String template) {\n+        RouteTarget routeTarget = configuration.getRouteTarget(template);\n         if (routeTarget != null) {\n-            return routeTarget.getParentLayouts(target);\n+            return routeTarget.getParentLayouts();\n         }\n         return Collections.emptyList();\n     }\n \n+    /**\n+     * @deprecated use {@link #getNavigationRouteTarget(String)} instead.\n+     */\n     @Override\n-    public List<Class<? extends RouterLayout>> getRouteLayouts(String path,\n+    @Deprecated\n+    public List<Class<? extends RouterLayout>> getRouteLayouts(String url,\n             Class<? extends Component> navigationTarget) {\n-        if (getConfiguration().hasRoute(path)) {\n-            return getConfiguration().getParentLayouts(path, navigationTarget);\n-        }\n-        return Collections.emptyList();\n+        return getConfiguration().getParentLayouts(url, navigationTarget);\n     }\n \n-    private List<Class<?>> getRouteParameters(\n-            Class<? extends Component> target) {\n-        List<Class<?>> parameters = new ArrayList<>();\n-        if (HasUrlParameter.class.isAssignableFrom(target)) {\n-            Class<?> genericInterfaceType = ReflectTools\n-                    .getGenericInterfaceType(target, HasUrlParameter.class);\n-            parameters.add(genericInterfaceType);\n-        }\n+    @Override\n+    public Optional<String> getTargetUrl(\n+            Class<? extends Component> navigationTarget) {\n+        Objects.requireNonNull(navigationTarget, TARGET_MUST_NOT_BE_NULL);\n+\n+        HasUrlParameterFormat.checkMandatoryParameter(navigationTarget, null);\n \n-        return parameters;\n+        return Optional.ofNullable(\n+                getConfiguration().getTargetUrl(navigationTarget));\n     }\n \n     @Override\n     public Optional<String> getTargetUrl(\n-            Class<? extends Component> navigationTarget) {\n-        Objects.requireNonNull(navigationTarget, \"Target must not be null.\");\n-        return Optional.ofNullable(collectRequiredParameters(navigationTarget));\n+            Class<? extends Component> navigationTarget,\n+            RouteParameters parameters) {\n+        Objects.requireNonNull(navigationTarget, TARGET_MUST_NOT_BE_NULL);\n+\n+        HasUrlParameterFormat.checkMandatoryParameter(navigationTarget,\n+                parameters);\n+\n+        return Optional.ofNullable(getConfiguration()\n+                .getTargetUrl(navigationTarget, parameters));\n     }\n \n-    /**\n-     * Append any required parameters as /{param_class} to the route.\n-     *\n-     * @param navigationTarget\n-     *            navigation target to generate url for\n-     * @return route with required parameters\n-     */\n-    private String collectRequiredParameters(\n+    @Override\n+    public Optional<String> getTemplate(\n             Class<? extends Component> navigationTarget) {\n-        if (!getConfiguration().hasRouteTarget(navigationTarget)) {\n-            return null;\n-        }\n-        StringBuilder route = new StringBuilder(\n-                getConfiguration().getTargetRoute(navigationTarget));\n+        Objects.requireNonNull(navigationTarget, TARGET_MUST_NOT_BE_NULL);\n \n-        List<Class<?>> routeParameters = getRouteParameters(navigationTarget);\n-\n-        if (!routeParameters.isEmpty()) {\n-            routeParameters.forEach(param -> route.append(\"/{\")\n-                    .append(param.getSimpleName()).append(\"}\"));\n-        }\n-        return route.toString();\n+        return Optional.ofNullable(\n+                getConfiguration().getTemplate(navigationTarget));\n     }\n \n     @Override\n-    public void setRoute(String path,\n+    public void setRoute(String template,\n             Class<? extends Component> navigationTarget,\n             List<Class<? extends RouterLayout>> parentChain) {\n-        configure(configuration -> {\n-            RouteTarget routeTarget = addRouteToConfiguration(path,\n-                    navigationTarget, configuration);\n-            routeTarget.setParentLayouts(navigationTarget, parentChain);\n-        });\n+        configureSafe(template, navigationTarget,\n+                (configuration, fullTemplate) -> configuration\n+                        .setRoute(fullTemplate, navigationTarget, parentChain));\n     }\n \n     @Override\n-    public void removeRoute(Class<? extends Component> routeTarget) {\n-        if (!getConfiguration().hasRouteTarget(routeTarget)) {\n+    public void removeRoute(Class<? extends Component> navigationTarget) {\n+        if (!getConfiguration().hasRouteTarget(navigationTarget)) {\n             return;\n         }\n-        configure(configuration -> configuration.removeRoute(routeTarget));\n+        configureSafe(configuration -> configuration.removeRoute(navigationTarget));\n     }\n \n     @Override\n     public void removeRoute(String path) {\n-        if (!getConfiguration().hasRoute(path)) {\n+        if (!getConfiguration().hasTemplate(path)) {\n             return;\n         }\n-        configure(configuration -> configuration.removeRoute(path));\n+        configureSafe(configuration -> configuration.removeRoute(path));\n     }\n \n     @Override\n     public void removeRoute(String path,\n             Class<? extends Component> navigationTarget) {\n-        if (!getConfiguration().hasRoute(path)) {\n+        if (!getConfiguration().hasTemplate(path)) {\n             return;\n         }\n-        configure(configuration -> configuration.removeRoute(path,\n-                navigationTarget));\n+        configureSafe(path, navigationTarget,\n+                (configuration, fullTemplate) -> configuration\n+                        .removeRoute(fullTemplate, navigationTarget));\n     }\n \n     @Override\n     public void clean() {\n         configure(ConfigureRoutes::clear);\n     }\n \n-    /**\n-     * This adds a new route path to the configuration.\n-     * <p>\n-     * Note! this should only be called from a configure() for thread safety.\n-     *\n-     * @param path\n-     *            path for the navigation target\n-     * @param navigationTarget\n-     *            navigation target for given path\n-     * @param configuration\n-     *            mutable configuration object\n-     * @return the route target to which the target was added\n-     */\n-    private RouteTarget addRouteToConfiguration(String path,\n+    private void configureSafe(String path,\n             Class<? extends Component> navigationTarget,\n-            ConfigureRoutes configuration) {\n-        if (!hasLock()) {\n-            throw new IllegalStateException(\n-                    \"addRouteToConfiguration requires the registry lock and a mutable configuration.\");\n-        }\n+            TemplateConfiguration templateConfiguration) {\n+        requireLock();\n+        configure(configuration -> {", "originalCommit": "49cf494d6e20f3e2f474516f36a29ac2591d09a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/internal/AbstractRouteRegistry.java b/flow-server/src/main/java/com/vaadin/flow/router/internal/AbstractRouteRegistry.java\nindex 9330fbe135..a423ea8362 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/internal/AbstractRouteRegistry.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/internal/AbstractRouteRegistry.java\n\n@@ -258,13 +259,17 @@ public abstract class AbstractRouteRegistry implements RouteRegistry {\n     }\n \n     /**\n-     * @deprecated use {@link #getNavigationRouteTarget(String)} instead.\n+     * @deprecated instead use {@link #getNavigationRouteTarget(String)} and\n+     *             retrieve the list of route layouts from the\n+     *             {@link RouteTarget} contained in the\n+     *             {@link NavigationRouteTarget}.\n+     * @see RouteTarget#getParentLayouts()\n      */\n     @Override\n     @Deprecated\n-    public List<Class<? extends RouterLayout>> getRouteLayouts(String url,\n+    public List<Class<? extends RouterLayout>> getRouteLayouts(String path,\n             Class<? extends Component> navigationTarget) {\n-        return getConfiguration().getParentLayouts(url, navigationTarget);\n+        return getConfiguration().getParentLayouts(path, navigationTarget);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNDkwMw==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r404704903", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-04-07T10:29:58Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/RouteConfiguration.java", "diffHunk": "@@ -115,17 +111,30 @@ public static RouteConfiguration forRegistry(RouteRegistry registry) {\n      * @param path\n      *         path to check for route registration\n      * @return true if there exists a route for the given path\n+     * @deprecated Use {@link #isPathAvailable(String)}\n      */\n+    @Deprecated\n     public boolean isPathRegistered(String path) {", "originalCommit": "49cf494d6e20f3e2f474516f36a29ac2591d09a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwNDkzMA==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r404704930", "bodyText": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.", "author": "vaadin-bot", "createdAt": "2020-04-07T10:30:02Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Copyright 2000-2020 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package com.vaadin.flow.router.internal;\n+\n+import java.io.Serializable;\n+import java.util.Set;\n+\n+import com.vaadin.flow.router.RouteParameterFormatOption;\n+import com.vaadin.flow.router.RouteParameterRegex;\n+\n+/**\n+ * Utility class which contains various methods for defining url parameter\n+ * template.\n+ * <p>\n+ * For internal use only. May be renamed or removed in a future release.\n+ */\n+class RouteFormat implements Serializable {\n+\n+    static final String INTEGER_REGEX = RouteParameterRegex.INTEGER;\n+    static final String LONG_REGEX = RouteParameterRegex.LONG;\n+    static final String BOOLEAN_REGEX = RouteParameterRegex.BOOLEAN;\n+    static final String STRING_REGEX = \"\";\n+\n+    /**\n+     * Returns whether the specified template contains route parameters.\n+     *\n+     * @param template\n+     *            a template.\n+     * @return true if the specified template contains route parameters,\n+     *         otherwise false.\n+     */\n+    static boolean hasParameters(String template) {\n+        return template.contains(\":\");\n+    }\n+\n+    /**\n+     * Returns whether the specified template contains route parameters.\n+     *\n+     * @param template\n+     *            a template.\n+     * @return true if the specified template contains route parameters,\n+     *         otherwise false.\n+     */\n+    static boolean hasRequiredParameter(String template) {", "originalCommit": "49cf494d6e20f3e2f474516f36a29ac2591d09a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java b/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java\nindex cd859bb547..3133d29857 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/internal/RouteFormat.java\n\n@@ -16,6 +16,7 @@\n package com.vaadin.flow.router.internal;\n \n import java.io.Serializable;\n+import java.util.Optional;\n import java.util.Set;\n \n import com.vaadin.flow.router.RouteParameterFormatOption;\n"}}, {"oid": "bd16b711fd02277fc1411c5d392114832eba8eb0", "url": "https://github.com/vaadin/flow/commit/bd16b711fd02277fc1411c5d392114832eba8eb0", "message": "Fix comments", "committedDate": "2020-04-08T10:57:00Z", "type": "commit"}, {"oid": "5dcba8a7eec8ae8736a655c0172682fcd46b4dc3", "url": "https://github.com/vaadin/flow/commit/5dcba8a7eec8ae8736a655c0172682fcd46b4dc3", "message": "Fix comments", "committedDate": "2020-04-08T11:22:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1ODY5NQ==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r405458695", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-04-08T11:39:15Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/internal/AbstractRouteRegistry.java", "diffHunk": "@@ -238,89 +249,81 @@ public ConfiguredRoutes getConfiguration() {\n     }\n \n     private List<Class<? extends RouterLayout>> getParentLayouts(\n-            ConfiguredRoutes configuration, Class<? extends Component> target,\n-            String url) {\n-        RouteTarget routeTarget = configuration.getRouteTarget(url);\n+            ConfiguredRoutes configuration, String template) {\n+        RouteTarget routeTarget = configuration.getRouteTarget(template);\n         if (routeTarget != null) {\n-            return routeTarget.getParentLayouts(target);\n+            return routeTarget.getParentLayouts();\n         }\n         return Collections.emptyList();\n     }\n \n+    /**\n+     * @deprecated instead use {@link #getNavigationRouteTarget(String)} and\n+     *             retrieve the list of route layouts from the\n+     *             {@link RouteTarget} contained in the\n+     *             {@link NavigationRouteTarget}.\n+     * @see RouteTarget#getParentLayouts()\n+     */\n     @Override\n+    @Deprecated\n     public List<Class<? extends RouterLayout>> getRouteLayouts(String path,", "originalCommit": "5dcba8a7eec8ae8736a655c0172682fcd46b4dc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1ODcwMw==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r405458703", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-04-08T11:39:16Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/SessionRouteRegistry.java", "diffHunk": "@@ -143,47 +146,101 @@ public Registration addRoutesChangeListener(\n     }\n \n     @Override\n-    public Optional<Class<? extends Component>> getNavigationTarget(\n-            String pathString) {\n-        Objects.requireNonNull(pathString, \"pathString must not be null.\");\n-        Optional<Class<? extends Component>> navigationTarget = getNavigationTarget(\n-                pathString, Collections.emptyList());\n+    public NavigationRouteTarget getNavigationRouteTarget(String url) {\n+        final NavigationRouteTarget navigationRouteTarget = getConfiguration()\n+                .getNavigationRouteTarget(url);\n+        if (navigationRouteTarget.hasTarget()) {\n+            return navigationRouteTarget;\n+        }\n+        return getParentRegistry().getNavigationRouteTarget(url);\n+    }\n \n-        if (navigationTarget.isPresent()) {\n-            return navigationTarget;\n+    @Override\n+    public RouteTarget getRouteTarget(Class<? extends Component> target,\n+                                      RouteParameters parameters) {\n+        final RouteTarget routeTarget = getConfiguration()\n+                .getRouteTarget(target, parameters);\n+        if (routeTarget != null) {\n+            return routeTarget;\n         }\n+        return getParentRegistry().getRouteTarget(target, parameters);\n+    }\n \n-        return getParentRegistry().getNavigationTarget(pathString);\n+    @Override\n+    public Optional<Class<? extends Component>> getNavigationTarget(\n+            String url) {\n+        Objects.requireNonNull(url, \"pathString must not be null.\");\n+        final Optional<Class<? extends Component>> target = getConfiguration()\n+                .getTarget(url);\n+        if (target.isPresent()) {\n+            return target;\n+        }\n+\n+        return getParentRegistry().getNavigationTarget(url);\n     }\n \n     @Override\n     public Optional<Class<? extends Component>> getNavigationTarget(\n-            String pathString, List<String> segments) {\n-        Objects.requireNonNull(pathString, \"pathString must not be null.\");\n-        if (getConfiguration().hasRoute(pathString, segments)) {\n-            return getConfiguration().getRoute(pathString, segments);\n+            String url, List<String> segments) {\n+        Objects.requireNonNull(url, \"pathString must not be null.\");\n+        final Optional<Class<? extends Component>> target = getConfiguration()\n+                .getTarget(PathUtil.getPath(url, segments));\n+        if (target.isPresent()) {\n+            return target;\n         }\n \n-        return getParentRegistry().getNavigationTarget(pathString, segments);\n+        return getParentRegistry().getNavigationTarget(url, segments);\n     }\n \n     @Override\n     public Optional<String> getTargetUrl(\n             Class<? extends Component> navigationTarget) {\n-\n         Optional<String> targetUrl = super.getTargetUrl(navigationTarget);\n         if (targetUrl.isPresent()) {\n             return targetUrl;\n         }\n-\n         return getParentRegistry().getTargetUrl(navigationTarget);\n     }\n \n     @Override\n+    public Optional<String> getTargetUrl(\n+            Class<? extends Component> navigationTarget,\n+            RouteParameters parameters) {\n+        Optional<String> targetUrl = super.getTargetUrl(navigationTarget,\n+                parameters);\n+        if (targetUrl.isPresent()) {\n+            return targetUrl;\n+        }\n+\n+        return getParentRegistry().getTargetUrl(navigationTarget, parameters);\n+    }\n+\n+    @Override\n+    public Optional<String> getTemplate(\n+            Class<? extends Component> navigationTarget) {\n+        final Optional<String> targetRoute = super.getTemplate(\n+                navigationTarget);\n+        if (targetRoute.isPresent()) {\n+            return targetRoute;\n+        }\n+        return getParentRegistry().getTemplate(navigationTarget);\n+    }\n+\n+    /**\n+     * @deprecated instead use {@link #getNavigationRouteTarget(String)} and\n+     *             retrieve the list of route layouts from the\n+     *             {@link RouteTarget} contained in the\n+     *             {@link NavigationRouteTarget}.\n+     * @see RouteTarget#getParentLayouts()\n+     */\n+    @Override\n+    @Deprecated\n     public List<Class<? extends RouterLayout>> getRouteLayouts(String path,", "originalCommit": "5dcba8a7eec8ae8736a655c0172682fcd46b4dc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/server/SessionRouteRegistry.java b/flow-server/src/main/java/com/vaadin/flow/server/SessionRouteRegistry.java\nindex e6f7ee3773..40c1761589 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/server/SessionRouteRegistry.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/server/SessionRouteRegistry.java\n\n@@ -157,7 +157,7 @@ public class SessionRouteRegistry extends AbstractRouteRegistry {\n \n     @Override\n     public RouteTarget getRouteTarget(Class<? extends Component> target,\n-                                      RouteParameters parameters) {\n+            RouteParameters parameters) {\n         final RouteTarget routeTarget = getConfiguration()\n                 .getRouteTarget(target, parameters);\n         if (routeTarget != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1ODcxMQ==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r405458711", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-04-08T11:39:17Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/RouteRegistry.java", "diffHunk": "@@ -168,7 +215,13 @@ void setRoute(String path, Class<? extends Component> navigationTarget,\n      * @param navigationTarget\n      *            navigation target to get layout chain for\n      * @return layout chain of target\n+     * @deprecated instead use {@link #getNavigationRouteTarget(String)} and\n+     *             retrieve the list of route layouts from the\n+     *             {@link RouteTarget} contained in the\n+     *             {@link NavigationRouteTarget}.\n+     * @see RouteTarget#getParentLayouts()\n      */\n+    @Deprecated\n     List<Class<? extends RouterLayout>> getRouteLayouts(String path,", "originalCommit": "5dcba8a7eec8ae8736a655c0172682fcd46b4dc3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b405fd97a6479ba2278c62a5fb6454ec440a838a", "url": "https://github.com/vaadin/flow/commit/b405fd97a6479ba2278c62a5fb6454ec440a838a", "message": "Fix sonar", "committedDate": "2020-04-09T06:29:14Z", "type": "commit"}, {"oid": "479f6feaa846b07d1eb305c542f52d7f627fd9f0", "url": "https://github.com/vaadin/flow/commit/479f6feaa846b07d1eb305c542f52d7f627fd9f0", "message": "Fix rename mistake of getUrlParameters. Rename getDefinedParameter into getRouteParameters.", "committedDate": "2020-04-09T07:55:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAzMDIwNw==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r406030207", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-04-09T08:10:33Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/NavigationState.java", "diffHunk": "@@ -84,29 +116,54 @@ public void setResolvedPath(String resolvedPath) {\n      */\n     public String getResolvedPath() {\n         if (resolvedPath == null) {\n-            resolvedPath = RouteConfiguration.forRegistry(router.getRegistry())\n-                    .getUrlBase(navigationTarget).orElse(null);\n+            resolvedPath = router.getRegistry()\n+                    .getTargetUrl(getNavigationTarget(), getRouteParameters())\n+                    .orElse(null);\n         }\n         return resolvedPath;\n     }\n \n+    /**\n+     * Sets the route parameters.\n+     *\n+     * @param routeParameters\n+     *            route parameters.\n+     */\n+    void setRouteParameters(RouteParameters routeParameters) {\n+        assert routeParameters != null;\n+\n+        this.routeParameters = routeParameters;\n+    }\n+\n+    /**\n+     * Gets the route parameters map.\n+     * \n+     * @return route parameters.\n+     */\n+    public RouteParameters getRouteParameters() {\n+        return routeParameters;\n+    }\n+\n     /**\n      * Gets the list of strings that correspond to the raw string url\n      * parameters.\n      *\n      * @return the url parameters of this navigation state\n      */\n     public Optional<List<String>> getUrlParameters() {\n-        return Optional.ofNullable(urlParameters);\n+        return Optional.of(HasUrlParameterFormat\n+                .getParameterValues(getRouteParameters()));\n     }\n \n     /**\n-     * Set the list of strings that correspond to the raw string url parameters.\n+     * Set the list of strings that correspond to the raw string route parameters.\n      *\n-     * @param urlParameters\n+     * @param parameters\n      *            the url parameters to set\n+     * @deprecated use {@link #setRouteParameters(RouteParameters)} instead.\n      */\n-    public void setUrlParameters(List<String> urlParameters) {\n-        this.urlParameters = urlParameters;\n+    @Deprecated\n+    public void setUrlParameters(List<String> parameters) {", "originalCommit": "479f6feaa846b07d1eb305c542f52d7f627fd9f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/NavigationState.java b/flow-server/src/main/java/com/vaadin/flow/router/NavigationState.java\nindex 69311a6944..fca2d84da9 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/NavigationState.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/NavigationState.java\n\n@@ -127,7 +127,7 @@ public class NavigationState implements Serializable {\n      * Sets the route parameters.\n      *\n      * @param routeParameters\n-     *            route parameters.\n+     *            route parameters, not null.\n      */\n     void setRouteParameters(RouteParameters routeParameters) {\n         assert routeParameters != null;\n"}}, {"oid": "ea52c59fb2f12ce407dc4f9ef1c69e37e6215ae5", "url": "https://github.com/vaadin/flow/commit/ea52c59fb2f12ce407dc4f9ef1c69e37e6215ae5", "message": "Remove Boolean from RouteParameters", "committedDate": "2020-04-09T09:05:57Z", "type": "commit"}, {"oid": "9fa1db2746a118561af1877269b8f5e7f8be8256", "url": "https://github.com/vaadin/flow/commit/9fa1db2746a118561af1877269b8f5e7f8be8256", "message": "Make RouteSegmentValue static", "committedDate": "2020-04-09T09:09:21Z", "type": "commit"}, {"oid": "8332002b66be01c905560863671cd6e7f093fd9c", "url": "https://github.com/vaadin/flow/commit/8332002b66be01c905560863671cd6e7f093fd9c", "message": "Merge branch 'master' into bu/route-parameters", "committedDate": "2020-04-14T05:40:11Z", "type": "commit"}, {"oid": "66e5b477a1e7a0440191b2640f690cd1cde9c27b", "url": "https://github.com/vaadin/flow/commit/66e5b477a1e7a0440191b2640f690cd1cde9c27b", "message": "Fix comments", "committedDate": "2020-04-14T11:40:23Z", "type": "commit"}, {"oid": "dbbb9bd68f2e3a38b3a831ac1e9af1b09c333230", "url": "https://github.com/vaadin/flow/commit/dbbb9bd68f2e3a38b3a831ac1e9af1b09c333230", "message": "Fix comments.", "committedDate": "2020-04-16T02:02:11Z", "type": "commit"}, {"oid": "6d80e44c6a265e5d654862962982a08d307bb825", "url": "https://github.com/vaadin/flow/commit/6d80e44c6a265e5d654862962982a08d307bb825", "message": "Revert js renames.", "committedDate": "2020-04-20T05:01:36Z", "type": "commit"}, {"oid": "e7276be9c59b5a3f20c7bac8188863a84c8e0380", "url": "https://github.com/vaadin/flow/commit/e7276be9c59b5a3f20c7bac8188863a84c8e0380", "message": "Fix comments.", "committedDate": "2020-05-04T10:12:19Z", "type": "commit"}, {"oid": "02dbde80148871bd39af919c89fc6c6605c31826", "url": "https://github.com/vaadin/flow/commit/02dbde80148871bd39af919c89fc6c6605c31826", "message": "Fix comments.", "committedDate": "2020-05-05T08:54:32Z", "type": "commit"}, {"oid": "fa815a10835531ea699c6f1dfc646ea8f87ab9d5", "url": "https://github.com/vaadin/flow/commit/fa815a10835531ea699c6f1dfc646ea8f87ab9d5", "message": "Revert BootstrapUtils change.", "committedDate": "2020-02-19T16:00:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM3OTQ3NQ==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r381379475", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-02-19T16:14:35Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java", "diffHunk": "@@ -381,12 +470,32 @@ public void rerouteTo(String route) {\n      * Get the URL parameters of the forward target.\n      *\n      * @return URL parameters of forward target\n+     * @deprecated use {@link #getForwardTargetUrlParameters()} instead.\n      */\n+    @Deprecated\n     public List<String> getForwardTargetParameters() {", "originalCommit": "fa815a10835531ea699c6f1dfc646ea8f87ab9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java b/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java\nindex 3b346a45cc..55bd130577 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java\n\n@@ -461,16 +495,22 @@ public abstract class BeforeEvent extends EventObject {\n      * Get the forward target type for forwarding.\n      *\n      * @return forward target type\n+     * @throws NullPointerException\n+     *             if no forward target is set. Check\n+     *             {@link #hasForwardTarget()} before accessing this method.\n      */\n     public Class<? extends Component> getForwardTargetType() {\n         return forwardTargetState.getNavigationTarget();\n     }\n \n     /**\n-     * Get the URL parameters of the forward target.\n+     * Gets the URL parameters of the forward target.\n      *\n      * @return URL parameters of forward target\n-     * @deprecated use {@link #getForwardTargetUrlParameters()} instead.\n+     * @throws NullPointerException\n+     *             if no forward target is set. Check\n+     *             {@link #hasForwardTarget()} before accessing this method.\n+     * @deprecated use {@link #getForwardTargetRouteParameters()} instead.\n      */\n     @Deprecated\n     public List<String> getForwardTargetParameters() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM3OTQ4OQ==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r381379489", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-02-19T16:14:36Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java", "diffHunk": "@@ -412,12 +521,32 @@ public void rerouteTo(String route) {\n      * Get the URL parameters of the reroute target.\n      *\n      * @return URL parameters of reroute target\n+     * @deprecated use {@link #getRerouteTargetUrlParameters()} instead.\n      */\n+    @Deprecated\n     public List<String> getRerouteTargetParameters() {", "originalCommit": "fa815a10835531ea699c6f1dfc646ea8f87ab9d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java b/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java\nindex 3b346a45cc..55bd130577 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/BeforeEvent.java\n\n@@ -521,7 +570,10 @@ public abstract class BeforeEvent extends EventObject {\n      * Get the URL parameters of the reroute target.\n      *\n      * @return URL parameters of reroute target\n-     * @deprecated use {@link #getRerouteTargetUrlParameters()} instead.\n+     * @throws NullPointerException\n+     *             if no reroute target is set. Check\n+     *             {@link #hasRerouteTarget()} before accessing this method.\n+     * @deprecated use {@link #getRerouteTargetRouteParameters()} instead.\n      */\n     @Deprecated\n     public List<String> getRerouteTargetParameters() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2OTk1NA==", "url": "https://github.com/vaadin/flow/pull/7608#discussion_r382069954", "bodyText": "Do not forget to remove this deprecated code someday.", "author": "vaadin-bot", "createdAt": "2020-02-20T15:23:55Z", "path": "flow-server/src/main/java/com/vaadin/flow/router/NavigationStateBuilder.java", "diffHunk": "@@ -51,7 +52,9 @@ public NavigationStateBuilder(Router router) {\n      * @param urlParameters\n      *            the url parameter of the navigation target\n      * @return this builder, for chaining\n+     * @deprecated use {@link #withTarget(Class, UrlParameters)} instead.\n      */\n+    @Deprecated\n     public NavigationStateBuilder withTarget(", "originalCommit": "f8ae552e90c618f79a987984f5a4a8ff4a55db3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49f306b6194a5f64658ed644565b8ed777f9c053", "chunk": "diff --git a/flow-server/src/main/java/com/vaadin/flow/router/NavigationStateBuilder.java b/flow-server/src/main/java/com/vaadin/flow/router/NavigationStateBuilder.java\nindex 185b7551a3..414356d7b7 100644\n--- a/flow-server/src/main/java/com/vaadin/flow/router/NavigationStateBuilder.java\n+++ b/flow-server/src/main/java/com/vaadin/flow/router/NavigationStateBuilder.java\n\n@@ -44,22 +44,22 @@ public class NavigationStateBuilder {\n     }\n \n     /**\n-     * Assigns the given navigation target with the given url parameter to the\n+     * Assigns the given navigation target with the given route parameters to the\n      * navigation state being built.\n      *\n      * @param navigationTarget\n      *            the navigation target\n-     * @param urlParameters\n-     *            the url parameter of the navigation target\n+     * @param parameters\n+     *            the route parameters of the navigation target\n      * @return this builder, for chaining\n-     * @deprecated use {@link #withTarget(Class, UrlParameters)} instead.\n+     * @deprecated use {@link #withTarget(Class, RouteParameters)} instead.\n      */\n     @Deprecated\n     public NavigationStateBuilder withTarget(\n             Class<? extends Component> navigationTarget,\n-            List<String> urlParameters) {\n+            List<String> parameters) {\n         currentState.setNavigationTarget(navigationTarget);\n-        currentState.setUrlParameters(urlParameters);\n+        currentState.setUrlParameters(parameters);\n         return this;\n     }\n \n"}}, {"oid": "dea0d2edf86678393668d832b4e03815869e758d", "url": "https://github.com/vaadin/flow/commit/dea0d2edf86678393668d832b4e03815869e758d", "message": "Fix test", "committedDate": "2020-02-21T08:44:14Z", "type": "forcePushed"}, {"oid": "f7ba9aa14fec07b7abea118a789333dbaa8eb47e", "url": "https://github.com/vaadin/flow/commit/f7ba9aa14fec07b7abea118a789333dbaa8eb47e", "message": "Change parameter type back. Add .", "committedDate": "2020-02-24T12:00:36Z", "type": "forcePushed"}, {"oid": "85f2c09dc01b058e6af5626138f7d2fa8408665e", "url": "https://github.com/vaadin/flow/commit/85f2c09dc01b058e6af5626138f7d2fa8408665e", "message": "Initial model test with no parameters", "committedDate": "2020-02-24T15:21:53Z", "type": "commit"}, {"oid": "b00c10dc6dd192d5fd4bbaf8bd1caedcfcb8875d", "url": "https://github.com/vaadin/flow/commit/b00c10dc6dd192d5fd4bbaf8bd1caedcfcb8875d", "message": "Working on test with eligible parameters disabled.", "committedDate": "2020-02-24T15:21:53Z", "type": "commit"}, {"oid": "e8666969a421ae805158d2e7614138620268b21b", "url": "https://github.com/vaadin/flow/commit/e8666969a421ae805158d2e7614138620268b21b", "message": "Test eligible parameters.", "committedDate": "2020-02-24T15:21:53Z", "type": "commit"}, {"oid": "b964d654cb74bb58da904afd1bcce559300eedd8", "url": "https://github.com/vaadin/flow/commit/b964d654cb74bb58da904afd1bcce559300eedd8", "message": "Starting integration with ConfigureRoutes", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "7ec2d512267eac50998b14efad63c1363e7bc35c", "url": "https://github.com/vaadin/flow/commit/7ec2d512267eac50998b14efad63c1363e7bc35c", "message": "Transform path for HasUrlParameter", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "91c00502ea6b60b61500c4943c532f2677660e71", "url": "https://github.com/vaadin/flow/commit/91c00502ea6b60b61500c4943c532f2677660e71", "message": "While adding urlParameters to BeforeEvent.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "98f904bacf56b3e50e038ac3c4dcef68fec0ce37", "url": "https://github.com/vaadin/flow/commit/98f904bacf56b3e50e038ac3c4dcef68fec0ce37", "message": "setParameter invoked with ___url_parameter.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "54c53e73ceedf5db5f6b9e4e1ce009089b486022", "url": "https://github.com/vaadin/flow/commit/54c53e73ceedf5db5f6b9e4e1ce009089b486022", "message": "Fix reroute test", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "d810c40bc4b84460dce58d0155d56edc29418559", "url": "https://github.com/vaadin/flow/commit/d810c40bc4b84460dce58d0155d56edc29418559", "message": "Create UrlParameters container", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "53f0b74c0475ba0e296e0651facf300605088823", "url": "https://github.com/vaadin/flow/commit/53f0b74c0475ba0e296e0651facf300605088823", "message": "Fix NPE", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "1502c50cc64703aa49b843b4256764103458c017", "url": "https://github.com/vaadin/flow/commit/1502c50cc64703aa49b843b4256764103458c017", "message": "Handle varargs.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "057c7cbd3c68bca098d13e1556e1720f8bdb7414", "url": "https://github.com/vaadin/flow/commit/057c7cbd3c68bca098d13e1556e1720f8bdb7414", "message": "Add RouteModel", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "8bfb3450c4e4248bcb83e2655361e76048aebfa5", "url": "https://github.com/vaadin/flow/commit/8bfb3450c4e4248bcb83e2655361e76048aebfa5", "message": "Fix RouteModelTest", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "d604bacd6a65e2cf85a525c44ee9d94c88d6b49c", "url": "https://github.com/vaadin/flow/commit/d604bacd6a65e2cf85a525c44ee9d94c88d6b49c", "message": "Look for target in optional children.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "fd6d93bf403d4be0f1f8ecce43c5c34d47c2d56e", "url": "https://github.com/vaadin/flow/commit/fd6d93bf403d4be0f1f8ecce43c5c34d47c2d56e", "message": "Handle wildcard transformation from list into UrlParameters", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "19e1f4346d3abe51bc006106edba5c17190ee2ba", "url": "https://github.com/vaadin/flow/commit/19e1f4346d3abe51bc006106edba5c17190ee2ba", "message": "Remove regex test", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "26c33a48f2b04bb95e54e7ccd2561131091a0753", "url": "https://github.com/vaadin/flow/commit/26c33a48f2b04bb95e54e7ccd2561131091a0753", "message": "Add @Route and @RoutePrefix test.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "fe0a62664e42d45720c34dc9f1e90972d1083311", "url": "https://github.com/vaadin/flow/commit/fe0a62664e42d45720c34dc9f1e90972d1083311", "message": "Working on regex tests", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "1e45b21b47f39e5b1e38fdde10c7f29e704d778a", "url": "https://github.com/vaadin/flow/commit/1e45b21b47f39e5b1e38fdde10c7f29e704d778a", "message": "Store parameter patterns segments in insertion order.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "82322eee52c4b5d2df0efff0bbf5bb005ed47b8a", "url": "https://github.com/vaadin/flow/commit/82322eee52c4b5d2df0efff0bbf5bb005ed47b8a", "message": "Improving parameter tests.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "b26b9651d9103403ccfa8171121a6f0194eeb03a", "url": "https://github.com/vaadin/flow/commit/b26b9651d9103403ccfa8171121a6f0194eeb03a", "message": "Converting to UrlParameters.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "e8293379e2c63cd80937f8d6ec9615cfc4843ae3", "url": "https://github.com/vaadin/flow/commit/e8293379e2c63cd80937f8d6ec9615cfc4843ae3", "message": "Handle ambigous exceptions.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "31539ebb54942882cc7c6361ba21af8e3f1a3372", "url": "https://github.com/vaadin/flow/commit/31539ebb54942882cc7c6361ba21af8e3f1a3372", "message": "Remove lower level exception.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "aecab4f23696bde612f234636b54c0fc62bf4390", "url": "https://github.com/vaadin/flow/commit/aecab4f23696bde612f234636b54c0fc62bf4390", "message": "UrlParameters compatibility and fix more tests", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "c0ec67a124bb397b62e80e54068e1f74ed916b64", "url": "https://github.com/vaadin/flow/commit/c0ec67a124bb397b62e80e54068e1f74ed916b64", "message": "Fix root bug", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "834c1aab8bede4c30915e0ab272eb2c4328bb8b8", "url": "https://github.com/vaadin/flow/commit/834c1aab8bede4c30915e0ab272eb2c4328bb8b8", "message": "Add getTargetRoute API.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "46ab3882380c45b439677d6d00819794a86e883a", "url": "https://github.com/vaadin/flow/commit/46ab3882380c45b439677d6d00819794a86e883a", "message": "Working to clone the model.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "c9e9589a2b16f3632401d3c6d44f744d4ea925e2", "url": "https://github.com/vaadin/flow/commit/c9e9589a2b16f3632401d3c6d44f744d4ea925e2", "message": "Fixing tests", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "9207fdd56e7169186b0ae17323d35827c99b9eec", "url": "https://github.com/vaadin/flow/commit/9207fdd56e7169186b0ae17323d35827c99b9eec", "message": "Remove UriTemplate.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "fb21f0d154749cf6508f16a852c1d8b8f225966b", "url": "https://github.com/vaadin/flow/commit/fb21f0d154749cf6508f16a852c1d8b8f225966b", "message": "Add getUrlTemplage. Fix tests.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "d903dda16a7c9c1e142e41da829ae30b51c3c805", "url": "https://github.com/vaadin/flow/commit/d903dda16a7c9c1e142e41da829ae30b51c3c805", "message": "Change format to match with path-to-regexp.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "868e47d79f843a2755e1ce8b6a92786f08501c0b", "url": "https://github.com/vaadin/flow/commit/868e47d79f843a2755e1ce8b6a92786f08501c0b", "message": "Remove RouteConfigurationException", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "c234ac2db51e0080beb6d3386f3d14359ce632bf", "url": "https://github.com/vaadin/flow/commit/c234ac2db51e0080beb6d3386f3d14359ce632bf", "message": "Move test url params in RoutePrefix.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "58472ff84ceaaffe676573d9806cccc7f0d2559b", "url": "https://github.com/vaadin/flow/commit/58472ff84ceaaffe676573d9806cccc7f0d2559b", "message": "Fix tests.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "9a090292faafad708320d20110f1a9001fc1f66d", "url": "https://github.com/vaadin/flow/commit/9a090292faafad708320d20110f1a9001fc1f66d", "message": "Providing RouteTarget in NavigationStatus.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "1cf28d40aefcd9aa27523c0aa86720bb4609b355", "url": "https://github.com/vaadin/flow/commit/1cf28d40aefcd9aa27523c0aa86720bb4609b355", "message": "Use router layouts from RouteTarget when handle a UI request.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "4836f5673025323afdcd9a1df664c8fde1a5f0d6", "url": "https://github.com/vaadin/flow/commit/4836f5673025323afdcd9a1df664c8fde1a5f0d6", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "50e3996d24a4da7591fe81e7d74c1957ca69de5e", "url": "https://github.com/vaadin/flow/commit/50e3996d24a4da7591fe81e7d74c1957ca69de5e", "message": "Revert BootstrapUtils change.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "13222703eed1ffbcc5f08b7d1f4e774abf12859d", "url": "https://github.com/vaadin/flow/commit/13222703eed1ffbcc5f08b7d1f4e774abf12859d", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "bf8e88ecc7809119165a89dc5dee77d68d2164ed", "url": "https://github.com/vaadin/flow/commit/bf8e88ecc7809119165a89dc5dee77d68d2164ed", "message": "Fix header", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "c0425caa13cd06c2a560da260a3855928e57b742", "url": "https://github.com/vaadin/flow/commit/c0425caa13cd06c2a560da260a3855928e57b742", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "72ed729952d2f2a6c8dbd5c069ef6e30cbe45ba7", "url": "https://github.com/vaadin/flow/commit/72ed729952d2f2a6c8dbd5c069ef6e30cbe45ba7", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "547c170319320edccc9b2ae5870dadd85cbd150d", "url": "https://github.com/vaadin/flow/commit/547c170319320edccc9b2ae5870dadd85cbd150d", "message": "Fix compile error", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "ba0bddfee6e9281fe0d0dfc0c9c0d6d073b68adb", "url": "https://github.com/vaadin/flow/commit/ba0bddfee6e9281fe0d0dfc0c9c0d6d073b68adb", "message": "Use only regex for parameter type.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "fd93ab9271615c5ecb420f28bdbacd80402a0a8d", "url": "https://github.com/vaadin/flow/commit/fd93ab9271615c5ecb420f28bdbacd80402a0a8d", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "acfadf642be5efd0635cf2979a8ca608fc607a9e", "url": "https://github.com/vaadin/flow/commit/acfadf642be5efd0635cf2979a8ca608fc607a9e", "message": "Simplify regex names", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "88c2755de95ddbffdd1fc26aafcbc47ad02bd8ed", "url": "https://github.com/vaadin/flow/commit/88c2755de95ddbffdd1fc26aafcbc47ad02bd8ed", "message": "Rename pathTemplate to urlTemplate", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "22f91863b2c53e2cad1e2d3afaac3c38c4d1e2cc", "url": "https://github.com/vaadin/flow/commit/22f91863b2c53e2cad1e2d3afaac3c38c4d1e2cc", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "e408a661bf6009c6a28bf673d379a84420960bef", "url": "https://github.com/vaadin/flow/commit/e408a661bf6009c6a28bf673d379a84420960bef", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "803eef2e73c73c2e7f9bd6b86f331538082c6034", "url": "https://github.com/vaadin/flow/commit/803eef2e73c73c2e7f9bd6b86f331538082c6034", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "6eb6e02eb9092934ba107bc1b561a9d51c833a3b", "url": "https://github.com/vaadin/flow/commit/6eb6e02eb9092934ba107bc1b561a9d51c833a3b", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "5f3e22fc3d1fa1895648573399d9749dd8bedd74", "url": "https://github.com/vaadin/flow/commit/5f3e22fc3d1fa1895648573399d9749dd8bedd74", "message": "Fix compilation", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "7dea9efcaa727c862c0b2fcae22952cdae3d20e1", "url": "https://github.com/vaadin/flow/commit/7dea9efcaa727c862c0b2fcae22952cdae3d20e1", "message": "Fix test", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "a471e589bc189231b34446fb5f8d77de6e9d9f90", "url": "https://github.com/vaadin/flow/commit/a471e589bc189231b34446fb5f8d77de6e9d9f90", "message": "Remove FIXME and make RouteFormat internal.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "cbba351e1e05e8d032b1c2e98544a375c5535110", "url": "https://github.com/vaadin/flow/commit/cbba351e1e05e8d032b1c2e98544a375c5535110", "message": "Fix NavigationState bug.", "committedDate": "2020-02-24T15:21:54Z", "type": "commit"}, {"oid": "d1b7e5b281fdf92dd0796c6151b1eb6df0ca04ed", "url": "https://github.com/vaadin/flow/commit/d1b7e5b281fdf92dd0796c6151b1eb6df0ca04ed", "message": "Remove urlParameters null check.", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "1b562cfeed802857e402f0c30d77b26168979fd7", "url": "https://github.com/vaadin/flow/commit/1b562cfeed802857e402f0c30d77b26168979fd7", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "6d25568a1cb3aefcc0dcf264db34b8554458c7f6", "url": "https://github.com/vaadin/flow/commit/6d25568a1cb3aefcc0dcf264db34b8554458c7f6", "message": "Remove primitive type logic.", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "9219affcf2b61a5472ab366aee771c295da47dcf", "url": "https://github.com/vaadin/flow/commit/9219affcf2b61a5472ab366aee771c295da47dcf", "message": "Move RouteTarget back to server.startup", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "e15f6b2be752ea41d40e9dd883c1be312f7ea429", "url": "https://github.com/vaadin/flow/commit/e15f6b2be752ea41d40e9dd883c1be312f7ea429", "message": "Make NavigationState methods public again.", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "2ca48a324f3654e6f3f71f006b6627aa3909da9f", "url": "https://github.com/vaadin/flow/commit/2ca48a324f3654e6f3f71f006b6627aa3909da9f", "message": "Rename to urlTemplate. Change if (routeLayoutTypes == null).", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "cf449f46eeeea927eaa9f48340fa1a78e0770706", "url": "https://github.com/vaadin/flow/commit/cf449f46eeeea927eaa9f48340fa1a78e0770706", "message": "Use Optional with UrlParameters.", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "dcd04fabe825d05d5b170dc3e80ac2f7a97970fd", "url": "https://github.com/vaadin/flow/commit/dcd04fabe825d05d5b170dc3e80ac2f7a97970fd", "message": "Fix sonar", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "8e979b4ab192e5d496b888f129cb0b985eea8b05", "url": "https://github.com/vaadin/flow/commit/8e979b4ab192e5d496b888f129cb0b985eea8b05", "message": "Change parameter type back. Add .", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "d475a85887dd067858d3da9a378ede43cb7ef821", "url": "https://github.com/vaadin/flow/commit/d475a85887dd067858d3da9a378ede43cb7ef821", "message": "Add removed method back.", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "14cdef612862a7ea6ec9659e22d0fc0735aad61d", "url": "https://github.com/vaadin/flow/commit/14cdef612862a7ea6ec9659e22d0fc0735aad61d", "message": "Add UI.navigate with url params test.", "committedDate": "2020-02-24T15:21:55Z", "type": "commit"}, {"oid": "14cdef612862a7ea6ec9659e22d0fc0735aad61d", "url": "https://github.com/vaadin/flow/commit/14cdef612862a7ea6ec9659e22d0fc0735aad61d", "message": "Add UI.navigate with url params test.", "committedDate": "2020-02-24T15:21:55Z", "type": "forcePushed"}, {"oid": "e0f0d62e8ecbb6e9e68fb3c551b98ee34b888cbc", "url": "https://github.com/vaadin/flow/commit/e0f0d62e8ecbb6e9e68fb3c551b98ee34b888cbc", "message": "Add tests.", "committedDate": "2020-02-25T13:27:04Z", "type": "commit"}, {"oid": "ba3110c9a9f2c4ceb808eb53ccdb210e176aa4fb", "url": "https://github.com/vaadin/flow/commit/ba3110c9a9f2c4ceb808eb53ccdb210e176aa4fb", "message": "Deprecate more methods to make them internal.", "committedDate": "2020-02-25T13:40:02Z", "type": "commit"}, {"oid": "71f67de225e38c27946f94cafe19a38315ec4b74", "url": "https://github.com/vaadin/flow/commit/71f67de225e38c27946f94cafe19a38315ec4b74", "message": "Fix.", "committedDate": "2020-02-25T13:50:20Z", "type": "commit"}, {"oid": "d8808e8cc79bac7c8e00d5783cafd321443714e1", "url": "https://github.com/vaadin/flow/commit/d8808e8cc79bac7c8e00d5783cafd321443714e1", "message": "Fix.", "committedDate": "2020-02-25T13:54:10Z", "type": "commit"}, {"oid": "6b8ce1db8bc1040b41298bf7fa31c6abdbe28089", "url": "https://github.com/vaadin/flow/commit/6b8ce1db8bc1040b41298bf7fa31c6abdbe28089", "message": "Refactor recursion.", "committedDate": "2020-02-25T14:05:48Z", "type": "commit"}, {"oid": "739aedbb82d83e8ab60fdfa65b92f1ddf7ddbc2e", "url": "https://github.com/vaadin/flow/commit/739aedbb82d83e8ab60fdfa65b92f1ddf7ddbc2e", "message": "Fix bug", "committedDate": "2020-02-27T11:43:16Z", "type": "commit"}, {"oid": "3af46322d0f4463bfb6103faf243027bf3ac87bf", "url": "https://github.com/vaadin/flow/commit/3af46322d0f4463bfb6103faf243027bf3ac87bf", "message": "Merge branch 'master' into bu/route-parameters", "committedDate": "2020-02-27T12:01:27Z", "type": "commit"}, {"oid": "8cf0ecb324e4c738e27bf96003f2461c93042c15", "url": "https://github.com/vaadin/flow/commit/8cf0ecb324e4c738e27bf96003f2461c93042c15", "message": "Fix sonar", "committedDate": "2020-02-28T07:31:25Z", "type": "commit"}, {"oid": "8cf0ecb324e4c738e27bf96003f2461c93042c15", "url": "https://github.com/vaadin/flow/commit/8cf0ecb324e4c738e27bf96003f2461c93042c15", "message": "Fix sonar", "committedDate": "2020-02-28T07:31:25Z", "type": "forcePushed"}, {"oid": "2131f3f8e5a66f8c6d8ec4a264d06d8e7df22fdd", "url": "https://github.com/vaadin/flow/commit/2131f3f8e5a66f8c6d8ec4a264d06d8e7df22fdd", "message": "Fix sonar", "committedDate": "2020-02-28T08:23:12Z", "type": "commit"}, {"oid": "d3e0aa66470e5e46225d7c1e4087b3ef6ad1490d", "url": "https://github.com/vaadin/flow/commit/d3e0aa66470e5e46225d7c1e4087b3ef6ad1490d", "message": "Fix sonar", "committedDate": "2020-02-28T12:16:54Z", "type": "commit"}, {"oid": "04ae848e7578f21c77fc2118910c816a2436f01e", "url": "https://github.com/vaadin/flow/commit/04ae848e7578f21c77fc2118910c816a2436f01e", "message": "Fix sonar", "committedDate": "2020-02-28T13:05:38Z", "type": "commit"}, {"oid": "f20ea15491ee7a5700323f2c7e885139c8770439", "url": "https://github.com/vaadin/flow/commit/f20ea15491ee7a5700323f2c7e885139c8770439", "message": "Fix sonar", "committedDate": "2020-02-28T13:07:07Z", "type": "commit"}, {"oid": "4794561f76a25ab42d2158c8bbdd7c0d6e228cdf", "url": "https://github.com/vaadin/flow/commit/4794561f76a25ab42d2158c8bbdd7c0d6e228cdf", "message": "Undeprecate RouteTarget and NavigationState.", "committedDate": "2020-02-28T13:16:45Z", "type": "commit"}, {"oid": "4cebfdaf32eb2b91930e57edecb60635f185f6ff", "url": "https://github.com/vaadin/flow/commit/4cebfdaf32eb2b91930e57edecb60635f185f6ff", "message": "Undeprecate NavigationState.", "committedDate": "2020-02-28T13:38:26Z", "type": "commit"}, {"oid": "d7e681bfecc8adee58440e6185ad6569fb9f2d37", "url": "https://github.com/vaadin/flow/commit/d7e681bfecc8adee58440e6185ad6569fb9f2d37", "message": "Fix some of the review comments.", "committedDate": "2020-03-04T07:27:56Z", "type": "commit"}, {"oid": "d346fce6eaa80fa78edadc9ab1e6d19c7dc29c03", "url": "https://github.com/vaadin/flow/commit/d346fce6eaa80fa78edadc9ab1e6d19c7dc29c03", "message": "Fix review comments.", "committedDate": "2020-03-04T10:22:38Z", "type": "commit"}, {"oid": "a69ba4ea071a22542f337d160687950babcb2041", "url": "https://github.com/vaadin/flow/commit/a69ba4ea071a22542f337d160687950babcb2041", "message": "Fix sonar.", "committedDate": "2020-03-04T10:25:23Z", "type": "commit"}, {"oid": "d0986dda47f1f6f50bbb75c5ebbd06762939a08c", "url": "https://github.com/vaadin/flow/commit/d0986dda47f1f6f50bbb75c5ebbd06762939a08c", "message": "Document RoutePrefix with parameter templates", "committedDate": "2020-03-04T10:30:25Z", "type": "commit"}]}