{"pr_number": 7594, "pr_title": "Picks from master to 2.2", "pr_createdAt": "2020-02-14T13:13:13Z", "pr_url": "https://github.com/vaadin/flow/pull/7594", "timeline": [{"oid": "4d3afdf9f0835c7170f4742cc2709757e54782ce", "url": "https://github.com/vaadin/flow/commit/4d3afdf9f0835c7170f4742cc2709757e54782ce", "message": "Update branches info (#7554)\n\n\n(cherry picked from commit b99cde98b081f7050577b3b579a715f620178da2)", "committedDate": "2020-02-14T12:39:26Z", "type": "commit"}, {"oid": "86d6d7cc8e8f3d42bb776af57bfd27caf35acefc", "url": "https://github.com/vaadin/flow/commit/86d6d7cc8e8f3d42bb776af57bfd27caf35acefc", "message": "Remove pnpm-lock.yaml file if npm is used (#7543)\n\n(cherry picked from commit e15aed57c5e817bc79e6f62b8271acc57c312838)", "committedDate": "2020-02-14T12:56:47Z", "type": "commit"}, {"oid": "beda7088d8194d1678ae18202a0bb84fd09290ca", "url": "https://github.com/vaadin/flow/commit/beda7088d8194d1678ae18202a0bb84fd09290ca", "message": "* Handle navigation for HasErrorParameter in the same way as for other\nviews.\n* Add logic to prevent an infinite loop due changes in HasErrorParameter\nhandling logic\n\n(cherry picked from commit 56caabd59a15e0753a146786ae52e74de44de78b)", "committedDate": "2020-02-14T12:58:02Z", "type": "commit"}, {"oid": "1e76b46599a6356c15fb1050c41d2617226c581b", "url": "https://github.com/vaadin/flow/commit/1e76b46599a6356c15fb1050c41d2617226c581b", "message": "Add Unit and IT tests\n\n(cherry picked from commit 4040a8b24e65cad8a79782d7a9445873dc310690)", "committedDate": "2020-02-14T12:58:44Z", "type": "commit"}, {"oid": "f4d83cb5d5327e78387a131402241e87bda851d1", "url": "https://github.com/vaadin/flow/commit/f4d83cb5d5327e78387a131402241e87bda851d1", "message": "Add more unit tests, fix minor code issues.\n\n(cherry picked from commit 67eccb16158ef26fea958e9284f61ceef4dc2df8)", "committedDate": "2020-02-14T13:05:43Z", "type": "commit"}, {"oid": "81e4913693de12130ea65caf1bee5643bbcf3174", "url": "https://github.com/vaadin/flow/commit/81e4913693de12130ea65caf1bee5643bbcf3174", "message": "Throw an exception in case there is an infinite loop instead of only\nlogging it\n\n(cherry picked from commit 17eb3be341907c6524dc39d7865a6159b2d82cb7)", "committedDate": "2020-02-14T13:05:50Z", "type": "commit"}, {"oid": "87f4d1322c005f420b893ab66ec4a903fb4abc06", "url": "https://github.com/vaadin/flow/commit/87f4d1322c005f420b893ab66ec4a903fb4abc06", "message": "Make a method to access {user_home}/.vaadin directory.\n\n(cherry picked from commit 089bf455180c1870fc6e36a418ac0555f4f9beb3)", "committedDate": "2020-02-14T13:05:56Z", "type": "commit"}, {"oid": "1ce53221012b4608cb188add81406f9a0390018a", "url": "https://github.com/vaadin/flow/commit/1ce53221012b4608cb188add81406f9a0390018a", "message": "Use .vaadin folder from home folder to search node/npm binaries. (#7569)\n\nFixes #7560\r\n\n(cherry picked from commit fcf5e1ccb6617be45b901ca4038a3a740bcfa296)", "committedDate": "2020-02-14T13:06:01Z", "type": "commit"}, {"oid": "740ea9055d4c87e2527ae49b277f2731043bc27e", "url": "https://github.com/vaadin/flow/commit/740ea9055d4c87e2527ae49b277f2731043bc27e", "message": "Add zip protocol support to DevModeInitializer (#7585)\n\n* Add zip protocol support to DevModeInitializer\n\n(cherry picked from commit ef599f67bda222ede511c157bf56065dade3b9ce)", "committedDate": "2020-02-14T13:12:19Z", "type": "commit"}, {"oid": "c895cf2d1c0589cbcad70f1e48b3537421651a1c", "url": "https://github.com/vaadin/flow/commit/c895cf2d1c0589cbcad70f1e48b3537421651a1c", "message": "Fix compile errors", "committedDate": "2020-02-14T13:55:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2NTY3NQ==", "url": "https://github.com/vaadin/flow/pull/7594#discussion_r394765675", "bodyText": "Either log or rethrow this exception.", "author": "vaadin-bot", "createdAt": "2020-03-19T03:05:44Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java", "diffHunk": "@@ -1173,6 +1174,83 @@ private static Logger getLogger() {\n         return Optional.empty();\n     }\n \n+    private static List<String> getNpmExecutable(String baseDir,\n+            boolean removePnpmLock) {\n+        try {\n+            List<String> returnCommand = getNpmScriptCommand(baseDir);\n+            if (returnCommand.isEmpty()) {\n+                returnCommand = getNpmScriptCommand(\n+                        getVaadinHomeDirectory().getAbsolutePath());\n+            }\n+            if (returnCommand.isEmpty()) {\n+                // Otherwise look for regulag `npm`\n+                String command = isWindows() ? \"npm.cmd\" : \"npm\";\n+                returnCommand.add(getExecutable(baseDir, command, null)\n+                        .getAbsolutePath());\n+            }\n+            returnCommand.add(\"--no-update-notifier\");\n+            returnCommand.add(\"--no-audit\");\n+\n+            if (removePnpmLock) {\n+                // remove pnpm-lock.yaml which contains pnpm as a dependency.\n+                new File(baseDir, \"pnpm-lock.yaml\").delete();\n+            }\n+\n+            return returnCommand;\n+        } catch (FileNotFoundException exception) {", "originalCommit": "c895cf2d1c0589cbcad70f1e48b3537421651a1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2NTY3OQ==", "url": "https://github.com/vaadin/flow/pull/7594#discussion_r394765679", "bodyText": "Either log or rethrow this exception.", "author": "vaadin-bot", "createdAt": "2020-03-19T03:05:45Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/FrontendUtils.java", "diffHunk": "@@ -441,12 +432,21 @@ private static File getExecutable(String baseDir, String cmd,\n             String defaultLocation) {\n         File file = null;\n         try {\n-            file = defaultLocation == null\n-                    ? frontendToolsLocator.tryLocateTool(cmd).orElse(null)\n-                    : Optional.of(new File(baseDir, defaultLocation))\n-                            .filter(frontendToolsLocator::verifyTool)\n-                            .orElseGet(() -> frontendToolsLocator\n-                                    .tryLocateTool(cmd).orElse(null));\n+            if (defaultLocation == null) {\n+                file = frontendToolsLocator.tryLocateTool(cmd).orElse(null);\n+            } else {\n+                file = Arrays\n+                        .asList(baseDir,\n+                                getVaadinHomeDirectory().getAbsolutePath())\n+                        .stream().map(dir -> new File(dir, defaultLocation))\n+                        .filter(frontendToolsLocator::verifyTool).findFirst()\n+                        .orElseGet(() -> frontendToolsLocator.tryLocateTool(cmd)\n+                                .orElse(null));\n+            }\n+        } catch (FileNotFoundException exception) {", "originalCommit": "c895cf2d1c0589cbcad70f1e48b3537421651a1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}