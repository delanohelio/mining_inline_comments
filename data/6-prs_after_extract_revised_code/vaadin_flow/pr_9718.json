{"pr_number": 9718, "pr_title": "Always install webpack plugins", "pr_createdAt": "2020-12-23T09:08:55Z", "pr_url": "https://github.com/vaadin/flow/pull/9718", "timeline": [{"oid": "9447177dfc5f98c475f4a882077c000eff7f511e", "url": "https://github.com/vaadin/flow/commit/9447177dfc5f98c475f4a882077c000eff7f511e", "message": "Always install webpack plugins\n\nPlugin installation can be skipped\nby defining `\"update\": false,` in installed\npackage.json of plugin under node_modules", "committedDate": "2020-12-23T09:08:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NTMzNw==", "url": "https://github.com/vaadin/flow/pull/9718#discussion_r547875337", "bodyText": "Why did you drop this check?", "author": "mshabarov", "createdAt": "2020-12-23T09:58:43Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskInstallWebpackPlugins.java", "diffHunk": "@@ -120,14 +120,8 @@ private void generatePluginFiles(String pluginName) throws IOException {\n             String packageFile = FileUtils\n                 .readFileToString(new File(pluginTargetFile, PACKAGE_JSON),\n                     StandardCharsets.UTF_8);\n-            final FrontendVersion packageVersion = new FrontendVersion(\n-                Json.parse(packageFile).getString(\"version\"));\n-            FrontendVersion pluginVersion = new FrontendVersion(\n-                packageJson.getString(\"version\"));\n-            if (packageVersion.isEqualTo(pluginVersion)) {", "originalCommit": "9447177dfc5f98c475f4a882077c000eff7f511e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NjgyOQ==", "url": "https://github.com/vaadin/flow/pull/9718#discussion_r547876829", "bodyText": "it's dropped so that you don't get the situation that you had where the plugin was not the same as for the project.", "author": "caalador", "createdAt": "2020-12-23T10:02:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NTMzNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NTYwNw==", "url": "https://github.com/vaadin/flow/pull/9718#discussion_r547875607", "bodyText": "What is the use case when the developer wants to skip any webpack plugin?", "author": "mshabarov", "createdAt": "2020-12-23T09:59:12Z", "path": "flow-server/src/main/java/com/vaadin/flow/server/frontend/TaskInstallWebpackPlugins.java", "diffHunk": "@@ -120,14 +120,8 @@ private void generatePluginFiles(String pluginName) throws IOException {\n             String packageFile = FileUtils\n                 .readFileToString(new File(pluginTargetFile, PACKAGE_JSON),\n                     StandardCharsets.UTF_8);\n-            final FrontendVersion packageVersion = new FrontendVersion(\n-                Json.parse(packageFile).getString(\"version\"));\n-            FrontendVersion pluginVersion = new FrontendVersion(\n-                packageJson.getString(\"version\"));\n-            if (packageVersion.isEqualTo(pluginVersion)) {\n-                log().debug(\n-                    \"Skipping install of {} for version {} already installed\",\n-                    pluginName, pluginVersion.getFullVersion());\n+            final JsonObject targetJson = Json.parse(packageFile);\n+            if(targetJson.hasKey(\"update\") && !targetJson.getBoolean(\"update\")) {", "originalCommit": "9447177dfc5f98c475f4a882077c000eff7f511e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3Njc4NA==", "url": "https://github.com/vaadin/flow/pull/9718#discussion_r547876784", "bodyText": "Skipping getting the jar packaged plugin is really useful for when you develop the plugin in a project so you can make changes directly there without having the plugin overridden from the jar every time.", "author": "caalador", "createdAt": "2020-12-23T10:01:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3NTYwNw=="}], "type": "inlineReview", "revised_code": null}]}