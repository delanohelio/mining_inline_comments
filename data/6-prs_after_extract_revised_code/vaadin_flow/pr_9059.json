{"pr_number": 9059, "pr_title": "Cherry-picks for 2.4", "pr_createdAt": "2020-09-24T06:35:27Z", "pr_url": "https://github.com/vaadin/flow/pull/9059", "timeline": [{"oid": "dd0d7be9630f52d1a4eb438f5fe7008a27129207", "url": "https://github.com/vaadin/flow/commit/dd0d7be9630f52d1a4eb438f5fe7008a27129207", "message": "Keep ui reference to avoid its GC during test (#9021)\n\n\n# Conflicts:\n#\tflow-server/src/test/java/com/vaadin/flow/component/ComponentTest.java", "committedDate": "2020-09-18T07:17:32Z", "type": "commit"}, {"oid": "8238c3583ad7b024154c499c578b861f15d0b81e", "url": "https://github.com/vaadin/flow/commit/8238c3583ad7b024154c499c578b861f15d0b81e", "message": "Send clear event if no other changes done on attach (#9017)\n\nSend clear event if no other changes done on attach\n\nFixes #9015", "committedDate": "2020-09-23T18:01:23Z", "type": "commit"}, {"oid": "40b35c6591c13e8c379690afef4e49e116cbc321", "url": "https://github.com/vaadin/flow/commit/40b35c6591c13e8c379690afef4e49e116cbc321", "message": "Set `display:none` in addition to `hidden` attribute when hiding elements inside a shadow root (#9026)\n\nSet `display:none` in addition to `hidden` attribute when hiding elements inside a shadow root\n\nFixes #8256", "committedDate": "2020-09-23T18:02:01Z", "type": "commit"}, {"oid": "58ed1f0bd6c34ce82950da7c8155c822d8d96f79", "url": "https://github.com/vaadin/flow/commit/58ed1f0bd6c34ce82950da7c8155c822d8d96f79", "message": "Fixed: flow-server now closes resources properly when parsing java classes (#9002)\n\nAs the ClassReader(InputStream) constructor doesn't close the input stream itself, the stream is then left hanging. This is a problem with the Gradle Plugin since the input stream is left hanging in the Gradle Daemon, which can stay around for hours. \r\n\r\nThis could be a possible cause for vaadin/vaadin-gradle-plugin#81", "committedDate": "2020-09-24T06:30:45Z", "type": "commit"}, {"oid": "1fe8d20bf0b601a3b9bb71dfdfcd13ead5d01247", "url": "https://github.com/vaadin/flow/commit/1fe8d20bf0b601a3b9bb71dfdfcd13ead5d01247", "message": "Fix JavaDoc typos (#9055)", "committedDate": "2020-09-24T06:30:53Z", "type": "commit"}, {"oid": "2328079ad65917ebb464e1223dbb3f21ebe51f1e", "url": "https://github.com/vaadin/flow/commit/2328079ad65917ebb464e1223dbb3f21ebe51f1e", "message": "Restructure dev mode handler logic to avoid starting webpack twice\n(#9061)\n\nRestructure dev mode handler logic to avoid starting webpack twice\n\nFixes #8981\n# Conflicts:\n#\tflow-server/src/main/java/com/vaadin/flow/server/DevModeHandler.java", "committedDate": "2020-09-25T10:50:30Z", "type": "commit"}, {"oid": "a0e14f215077a7895105a61ef84246342304a6d6", "url": "https://github.com/vaadin/flow/commit/a0e14f215077a7895105a61ef84246342304a6d6", "message": "Make it possible to run IT in compat mode", "committedDate": "2020-09-25T10:54:29Z", "type": "commit"}, {"oid": "443fc0586d847f585a717c20d5378ecc304ca59c", "url": "https://github.com/vaadin/flow/commit/443fc0586d847f585a717c20d5378ecc304ca59c", "message": "Correct template id", "committedDate": "2020-09-25T13:38:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyNDIwMA==", "url": "https://github.com/vaadin/flow/pull/9059#discussion_r495024200", "bodyText": "Remove this use of \"Thread.sleep()\".", "author": "vaadin-bot", "createdAt": "2020-09-25T14:24:16Z", "path": "flow-server/src/test/java/com/vaadin/flow/server/DevModeHandlerTest.java", "diffHunk": "@@ -461,6 +465,80 @@ public void serveDevModeRequest_prepareTasksThrows_serveDevModeReturnsFalseAndDo\n         Assert.assertFalse(handler.serveDevModeRequest(request, response));\n     }\n \n+    @Test\n+    public void start_twoTimes_onlyOneHandlerInstanceIsCreated() {\n+        MockDeploymentConfiguration configuration = Mockito\n+                .spy(MockDeploymentConfiguration.class);\n+        DevModeHandler handler = DevModeHandler.start(0, configuration,\n+                npmFolder, CompletableFuture.completedFuture(null));\n+        handler.join();\n+\n+        // This is how new server handler instantiation checked:\n+        Mockito.verify(configuration).reuseDevServer();\n+\n+        // \"start\" one more time: there should not be another instance of dev\n+        // mode handler created\n+        DevModeHandler anotherHandler = DevModeHandler.start(0, configuration,\n+                npmFolder, CompletableFuture.completedFuture(null));\n+        anotherHandler.join();\n+\n+        // The handler instances are the same but there should be no attempt to\n+        // create another instance (which won't be stored anywhere), see below\n+        Assert.assertSame(handler, anotherHandler);\n+\n+        // No more \"reuseDevServer\" calls are done: see above, it has been\n+        // already called one time\n+        Mockito.verify(configuration).reuseDevServer();\n+    }\n+\n+    @Test\n+    public void start_twoInstances_secondInstanceUsesAnotherPort()\n+            throws Exception {\n+\n+        // start the first instance\n+        DevModeHandler handler = DevModeHandler.start(0, configuration,\n+                npmFolder, CompletableFuture.completedFuture(null));\n+\n+        // remove the \"singleton\" instance to be able to start another one\n+        removeDevModeHandlerInstance();\n+\n+        // since the timeout is quite big the server port still should be\n+        // available and the second instance should try to reuse it\n+\n+        DevModeHandler.start(0, configuration, npmFolder,\n+                CompletableFuture.completedFuture(null));\n+\n+        // make checks only if webpack has not yet completed\n+\n+        DevModeHandler anotherHandler = DevModeHandler.start(0, configuration,\n+                npmFolder, CompletableFuture.completedFuture(null));\n+\n+        while (handler.getPort() == 0) {\n+            Thread.sleep(100);", "originalCommit": "443fc0586d847f585a717c20d5378ecc304ca59c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}