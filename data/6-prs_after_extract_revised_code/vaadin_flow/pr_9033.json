{"pr_number": 9033, "pr_title": "Force size re-estimate when requested range end equals assumed size", "pr_createdAt": "2020-09-18T12:42:20Z", "pr_url": "https://github.com/vaadin/flow/pull/9033", "timeline": [{"oid": "667e30c24b5b7cd06ac5027da6d77f4e83fc3538", "url": "https://github.com/vaadin/flow/commit/667e30c24b5b7cd06ac5027da6d77f4e83fc3538", "message": "Force size re-estimate when requested range end equals assumed size", "committedDate": "2020-09-18T12:35:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MjY3NQ==", "url": "https://github.com/vaadin/flow/pull/9033#discussion_r491892675", "bodyText": "Good catch but where is the unit test ?", "author": "pleku", "createdAt": "2020-09-21T09:09:25Z", "path": "flow-data/src/main/java/com/vaadin/flow/data/provider/DataCommunicator.java", "diffHunk": "@@ -541,7 +541,7 @@ public void setDefinedSize(boolean definedSize) {\n              * estimated size. If there was a previous defined size used, then\n              * that is kept until a reset occurs.\n              */\n-            if (requestedRange.contains(assumedSize)) {\n+            if (requestedRange.contains(assumedSize - 1)) {", "originalCommit": "667e30c24b5b7cd06ac5027da6d77f4e83fc3538", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5MTY1Mw==", "url": "https://github.com/vaadin/flow/pull/9033#discussion_r492491653", "bodyText": "Unit test added", "author": "mshabarov", "createdAt": "2020-09-22T06:07:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MjY3NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f236d1a0974014ff221a8456655bff22ac8e1a3c", "url": "https://github.com/vaadin/flow/commit/f236d1a0974014ff221a8456655bff22ac8e1a3c", "message": "Unit test added", "committedDate": "2020-09-22T06:02:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MjYzMA==", "url": "https://github.com/vaadin/flow/pull/9033#discussion_r492572630", "bodyText": "Could have been nice to add a comment here that states that // the size will be 100 so it makes it very clear how this test works", "author": "pleku", "createdAt": "2020-09-22T08:49:46Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java", "diffHunk": "@@ -1072,6 +1073,30 @@ public void itemCountChangeEvent_estimatedCount_estimateUsedUntilEndReached() {\n         Assert.assertFalse(event.isItemCountEstimated());\n     }\n \n+    @Test\n+    public void setDefinedSize_rangeEndEqualsAssumedSize_flushRequested() {\n+        // trigger client communication in order to initialise it and avoid\n+        // infinite loop inside 'requestFlush()'\n+        fakeClientCommunication();\n+\n+        StateNode stateNode = Mockito.spy(element.getNode());\n+        DataCommunicator<Item> dataCommunicator = new DataCommunicator<>(\n+                dataGenerator, arrayUpdater, data -> {}, stateNode);\n+        dataCommunicator.setPageSize(pageSize);\n+        dataCommunicator.setDataProvider(createDataProvider(), null);", "originalCommit": "f236d1a0974014ff221a8456655bff22ac8e1a3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1OTIwMw==", "url": "https://github.com/vaadin/flow/pull/9033#discussion_r493659203", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-09-23T14:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MjYzMA=="}], "type": "inlineReview", "revised_code": {"commit": "6d56f83100d8448c57539d5bdfcab02884ba2e5c", "chunk": "diff --git a/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java b/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java\nindex 1acf9a9e83..66ac7dd9bf 100644\n--- a/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java\n+++ b/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java\n\n@@ -1083,7 +1083,10 @@ public class DataCommunicatorTest {\n         DataCommunicator<Item> dataCommunicator = new DataCommunicator<>(\n                 dataGenerator, arrayUpdater, data -> {}, stateNode);\n         dataCommunicator.setPageSize(pageSize);\n+\n+        // the items size returned by this data provider will be 100\n         dataCommunicator.setDataProvider(createDataProvider(), null);\n+\n         // Trigger flush() to set the assumedSize\n         fakeClientCommunication();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MjY1Ng==", "url": "https://github.com/vaadin/flow/pull/9033#discussion_r492572656", "bodyText": "Like (most?) other tests here, shouldn't this very that the (estimated) count is increased properly too (which is the desired outcome in terms of internal DC logic) instead of just relying that call to flush has been done ?", "author": "pleku", "createdAt": "2020-09-22T08:49:49Z", "path": "flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java", "diffHunk": "@@ -1072,6 +1073,30 @@ public void itemCountChangeEvent_estimatedCount_estimateUsedUntilEndReached() {\n         Assert.assertFalse(event.isItemCountEstimated());\n     }\n \n+    @Test\n+    public void setDefinedSize_rangeEndEqualsAssumedSize_flushRequested() {\n+        // trigger client communication in order to initialise it and avoid\n+        // infinite loop inside 'requestFlush()'\n+        fakeClientCommunication();\n+\n+        StateNode stateNode = Mockito.spy(element.getNode());\n+        DataCommunicator<Item> dataCommunicator = new DataCommunicator<>(\n+                dataGenerator, arrayUpdater, data -> {}, stateNode);\n+        dataCommunicator.setPageSize(pageSize);\n+        dataCommunicator.setDataProvider(createDataProvider(), null);\n+        // Trigger flush() to set the assumedSize\n+        fakeClientCommunication();\n+\n+        dataCommunicator.setRequestedRange(0, 100);\n+        // clean flushRequest\n+        fakeClientCommunication();\n+\n+        Mockito.reset(stateNode);\n+        dataCommunicator.setDefinedSize(false);\n+        // Verify that requestFlush has been invoked\n+        Mockito.verify(stateNode).runWhenAttached(Mockito.anyObject());", "originalCommit": "f236d1a0974014ff221a8456655bff22ac8e1a3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1OTMxNA==", "url": "https://github.com/vaadin/flow/pull/9033#discussion_r493659314", "bodyText": "Done", "author": "mshabarov", "createdAt": "2020-09-23T14:53:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU3MjY1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6d56f83100d8448c57539d5bdfcab02884ba2e5c", "chunk": "diff --git a/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java b/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java\nindex 1acf9a9e83..66ac7dd9bf 100644\n--- a/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java\n+++ b/flow-data/src/test/java/com/vaadin/flow/data/provider/DataCommunicatorTest.java\n\n@@ -1083,7 +1083,10 @@ public class DataCommunicatorTest {\n         DataCommunicator<Item> dataCommunicator = new DataCommunicator<>(\n                 dataGenerator, arrayUpdater, data -> {}, stateNode);\n         dataCommunicator.setPageSize(pageSize);\n+\n+        // the items size returned by this data provider will be 100\n         dataCommunicator.setDataProvider(createDataProvider(), null);\n+\n         // Trigger flush() to set the assumedSize\n         fakeClientCommunication();\n \n"}}, {"oid": "6d56f83100d8448c57539d5bdfcab02884ba2e5c", "url": "https://github.com/vaadin/flow/commit/6d56f83100d8448c57539d5bdfcab02884ba2e5c", "message": "Estimated count verification added", "committedDate": "2020-09-23T14:52:55Z", "type": "commit"}]}