{"pr_number": 25227, "pr_title": "Fix no error when attempting to invoke a remote transactional method in a non-transactional scope", "pr_createdAt": "2020-08-12T05:46:00Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25227", "timeline": [{"oid": "e7cf78ed85dc8e68909def848a714765b010cffc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e7cf78ed85dc8e68909def848a714765b010cffc", "message": "Fix no error when invoking remote transactional in non transactional", "committedDate": "2020-08-12T05:43:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NzU3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25227#discussion_r470587578", "bodyText": "Any reason for avoiding transaction statement test for old parser?", "author": "mohanvive", "createdAt": "2020-08-14T12:14:48Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/statements/transaction/TransactionStmtTest.java", "diffHunk": "@@ -30,7 +30,7 @@\n /**\n  * Test cases for flow validation in TransactionStatement.\n  */\n-\n+@Test(groups = {\"disableOnOldParser\"})", "originalCommit": "e7cf78ed85dc8e68909def848a714765b010cffc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIwODgxNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25227#discussion_r471208817", "bodyText": "An invalid token 'transactional' compilation error is given in the old parser when defining a remote transactional function.", "author": "lasinicl", "createdAt": "2020-08-17T03:03:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NzU3OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwNDkyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25227#discussion_r470604927", "bodyText": "Can we please revisit this condition check with the code in lines 2178-2182 ?", "author": "mohanvive", "createdAt": "2020-08-14T12:53:02Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -2170,6 +2170,11 @@ public void visit(BLangInvocation invocationExpr) {\n     }\n \n     public void visit(BLangInvocation.BLangActionInvocation actionInvocation) {\n+        BSymbol funcSymbol = actionInvocation.symbol;\n+        if (Symbols.isFlagOn(funcSymbol.flags, Flags.TRANSACTIONAL) && !withinTransactionScope) {\n+            dlog.error(actionInvocation.pos, DiagnosticCode.TRANSACTIONAL_FUNC_INVOKE_PROHIBITED, actionInvocation);\n+            return;\n+        }", "originalCommit": "e7cf78ed85dc8e68909def848a714765b010cffc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74a3c613d0b4b5f8727381108fd9ea40989eac8c", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\nindex 52f097e2cd0..5540b9fae35 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n\n@@ -2170,15 +2170,14 @@ public class CodeAnalyzer extends BLangNodeVisitor {\n     }\n \n     public void visit(BLangInvocation.BLangActionInvocation actionInvocation) {\n-        BSymbol funcSymbol = actionInvocation.symbol;\n-        if (Symbols.isFlagOn(funcSymbol.flags, Flags.TRANSACTIONAL) && !withinTransactionScope) {\n+        if (!actionInvocation.async && !this.withinTransactionScope &&\n+                Symbols.isFlagOn(actionInvocation.symbol.flags, Flags.TRANSACTIONAL)) {\n             dlog.error(actionInvocation.pos, DiagnosticCode.TRANSACTIONAL_FUNC_INVOKE_PROHIBITED, actionInvocation);\n-            return;\n         }\n+\n         if (actionInvocation.async && this.withinTransactionScope &&\n                 !Symbols.isFlagOn(actionInvocation.symbol.flags, Flags.TRANSACTIONAL)) {\n             dlog.error(actionInvocation.pos, DiagnosticCode.USAGE_OF_START_WITHIN_TRANSACTION_IS_PROHIBITED);\n-            return;\n         }\n \n         analyzeExpr(actionInvocation.expr);\n"}}, {"oid": "74a3c613d0b4b5f8727381108fd9ea40989eac8c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/74a3c613d0b4b5f8727381108fd9ea40989eac8c", "message": "Change condition check", "committedDate": "2020-08-17T03:23:14Z", "type": "commit"}, {"oid": "a43a0f9175210fba89819161734618f0c4283e38", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a43a0f9175210fba89819161734618f0c4283e38", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fix-25017", "committedDate": "2020-08-17T03:24:47Z", "type": "commit"}, {"oid": "1669ba372f294354d4ca79aec783f485de355cf5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1669ba372f294354d4ca79aec783f485de355cf5", "message": "Add missing return", "committedDate": "2020-08-17T04:17:53Z", "type": "commit"}]}