{"pr_number": 25605, "pr_title": "Implement API for retrieving the symbol at a given position", "pr_createdAt": "2020-09-03T17:43:27Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605", "timeline": [{"oid": "d2513ba3d5e46460b70ebf72a946e20cef816d3c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2513ba3d5e46460b70ebf72a946e20cef816d3c", "message": "Implement API for retrieving the symbol at a given position", "committedDate": "2020-09-03T18:23:40Z", "type": "forcePushed"}, {"oid": "ff9509024e14681c3beebbaf5d186f99a99a2971", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff9509024e14681c3beebbaf5d186f99a99a2971", "message": "Implement API for retrieving the symbol at a given position", "committedDate": "2020-09-03T18:27:44Z", "type": "forcePushed"}, {"oid": "099d672eeb139711e14c66c1d38913364d9086ef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/099d672eeb139711e14c66c1d38913364d9086ef", "message": "Implement API for retrieving the symbol at a given position", "committedDate": "2020-09-04T04:29:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NDMxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483384311", "bodyText": "Shall we mention what needs to be improved? otherwise we might forget these over time", "author": "SupunS", "createdAt": "2020-09-04T04:49:49Z", "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java", "diffHunk": "@@ -66,4 +66,24 @@ public String toString() {\n         }\n         return this.orgName() + \"/\" + this.moduleName() + \":\" + this.version();\n     }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+\n+        // TODO: Improve this", "originalCommit": "099d672eeb139711e14c66c1d38913364d9086ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwNDAwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483504000", "bodyText": "Will fix these in the PR itself", "author": "pubudu91", "createdAt": "2020-09-04T09:32:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NDMxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5e2950f4721626f174177bb06bba5d3475f11d53", "chunk": "diff --git a/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java b/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java\nindex e17f0b447ea..b11e68820f3 100644\n--- a/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java\n+++ b/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java\n\n@@ -77,7 +77,6 @@ public class BallerinaModuleID implements ModuleID {\n             return false;\n         }\n \n-        // TODO: Improve this\n         BallerinaModuleID target = (BallerinaModuleID) obj;\n         return this.moduleID.equals(target.moduleID);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5NjU2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483396562", "bodyText": "Is it possible to get this logic to a common place? Since the same is implemented in https://github.com/ballerina-platform/ballerina-lang/pull/25605/files#diff-3bb78fa9a4bfafbf27ec61bfdea79e93R1059 as well?", "author": "nadeeshaan", "createdAt": "2020-09-04T05:34:47Z", "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -99,4 +129,31 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n     public List<Diagnostic> diagnostics(TextRange range) {\n         return new ArrayList<>();\n     }\n+\n+    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+        return symbol.origin == SOURCE &&\n+                (cursorPos.compareTo(symbol.pos) > SYMBOL_POSITION ||\n+                        symbol.owner instanceof BPackageSymbol ||\n+                        Symbols.isFlagOn(symbol.flags, Flags.WORKER));\n+    }\n+\n+    private boolean isImportedSymbol(BSymbol symbol) {\n+        return symbol.origin == COMPILED_SOURCE &&\n+                (Symbols.isFlagOn(symbol.flags, Flags.PUBLIC) || symbol.getKind() == SymbolKind.PACKAGE);\n+    }\n+\n+    private boolean isWithinSymbol(LinePosition cursorPos, DiagnosticPos symbolPos) {\n+        int symbolStartLine = symbolPos.getStartLine();\n+        int symbolEndLine = symbolPos.getEndLine();\n+        int symbolStartCol = symbolPos.getStartColumn();\n+        int symbolEndCol = symbolPos.getEndColumn();\n+        int cursorLine = cursorPos.line();\n+        int cursorCol = cursorPos.offset();\n+\n+        return (symbolStartLine < cursorLine && symbolEndLine > cursorLine)", "originalCommit": "099d672eeb139711e14c66c1d38913364d9086ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwNDc2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483504760", "bodyText": "For now, I just simply took the same logic. But yeah, need to figure out where to place things like these", "author": "pubudu91", "createdAt": "2020-09-04T09:33:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5NjU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "960310c2274e2f355f54a5e021e3a73d64805155", "chunk": "diff --git a/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java b/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java\nindex 2a2643e1547..4a6b640b164 100644\n--- a/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java\n+++ b/compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java\n\n@@ -142,6 +140,13 @@ public class BallerinaSemanticModel implements SemanticModel {\n                 (Symbols.isFlagOn(symbol.flags, Flags.PUBLIC) || symbol.getKind() == SymbolKind.PACKAGE);\n     }\n \n+    private BLangCompilationUnit getCompilationUnit(String srcFile) {\n+        return bLangPackage.compUnits.stream()\n+                .filter(unit -> unit.name.equals(srcFile))\n+                .findFirst()\n+                .get();\n+    }\n+\n     private boolean isWithinSymbol(LinePosition cursorPos, DiagnosticPos symbolPos) {\n         int symbolStartLine = symbolPos.getStartLine();\n         int symbolEndLine = symbolPos.getEndLine();\n"}}, {"oid": "960310c2274e2f355f54a5e021e3a73d64805155", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/960310c2274e2f355f54a5e021e3a73d64805155", "message": "Refactor exact symbol lookup API to accept the file name", "committedDate": "2020-09-07T09:47:43Z", "type": "forcePushed"}, {"oid": "5e2950f4721626f174177bb06bba5d3475f11d53", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5e2950f4721626f174177bb06bba5d3475f11d53", "message": "Sync API changes", "committedDate": "2020-09-10T06:49:56Z", "type": "commit"}, {"oid": "08d8875dd6d9f6158dd346c672a7f80b63cf9f12", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/08d8875dd6d9f6158dd346c672a7f80b63cf9f12", "message": "Fix symbol visibility issue in let expr", "committedDate": "2020-09-10T06:50:00Z", "type": "commit"}, {"oid": "42a0fa14c2420ea8bf4aced65807eeffd16e7362", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42a0fa14c2420ea8bf4aced65807eeffd16e7362", "message": "Refactor symbol lookup API to accept file name", "committedDate": "2020-09-10T06:50:01Z", "type": "commit"}, {"oid": "4b2acdad0ad526e58f108054573d919246773197", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4b2acdad0ad526e58f108054573d919246773197", "message": "Sync with API changes", "committedDate": "2020-09-10T06:50:01Z", "type": "commit"}, {"oid": "9c231b59186cd0f6cd3d2b16d941403e39c2cffc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9c231b59186cd0f6cd3d2b16d941403e39c2cffc", "message": "Implement API for retrieving the symbol at a given position", "committedDate": "2020-09-10T06:50:01Z", "type": "commit"}, {"oid": "5b529e53b789a7d3b3deb55f2086ee3e39d606b5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b529e53b789a7d3b3deb55f2086ee3e39d606b5", "message": "Refactor exact symbol lookup API to accept the file name", "committedDate": "2020-09-10T06:50:01Z", "type": "commit"}, {"oid": "ab925c1aed0661527dbe20bb25203ead7054f8a1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab925c1aed0661527dbe20bb25203ead7054f8a1", "message": "Sync with API changes", "committedDate": "2020-09-10T06:50:02Z", "type": "commit"}, {"oid": "ab925c1aed0661527dbe20bb25203ead7054f8a1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab925c1aed0661527dbe20bb25203ead7054f8a1", "message": "Sync with API changes", "committedDate": "2020-09-10T06:50:02Z", "type": "forcePushed"}]}