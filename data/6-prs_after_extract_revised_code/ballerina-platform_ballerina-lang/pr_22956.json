{"pr_number": 22956, "pr_title": "Support conversion from xml:Text to string", "pr_createdAt": "2020-04-29T07:44:32Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22956", "timeline": [{"oid": "11c26f13e70f8ed480ec20d6deb1f536433da6a2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/11c26f13e70f8ed480ec20d6deb1f536433da6a2", "message": "Support string opertations for xml:Text", "committedDate": "2020-04-29T07:05:25Z", "type": "commit"}, {"oid": "3ae62303a325c099c2716752d8adb89cb3573a31", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ae62303a325c099c2716752d8adb89cb3573a31", "message": "Add tests", "committedDate": "2020-04-29T07:43:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzOTAzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22956#discussion_r418439030", "bodyText": "Shall we add this new lookup logic only to XML_TEXT case\nI think it will make it more evident that we are only intending to lookup string methods for XML_TEXT Tag.\nWhat I'm suggesting is to have bSymbol = lookupLangLibMethodInModule(symTable.langXmlModuleSymbol, name); break; after L:573", "author": "rdhananjaya", "createdAt": "2020-05-01T06:53:27Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -573,6 +573,9 @@ public BSymbol lookupLangLibMethod(BType type, Name name) {\n             case TypeTags.XML_PI:\n             case TypeTags.XML_TEXT:\n                 bSymbol = lookupLangLibMethodInModule(symTable.langXmlModuleSymbol, name);\n+                if (bSymbol == symTable.notFoundSymbol && type.tag == TypeTags.XML_TEXT) {", "originalCommit": "3ae62303a325c099c2716752d8adb89cb3573a31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTExMjk0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22956#discussion_r419112943", "bodyText": "Done", "author": "KavinduZoysa", "createdAt": "2020-05-03T14:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzOTAzMA=="}], "type": "inlineReview", "revised_code": {"commit": "4521075f121e4c3db60a053f4870a90382a44a8e", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\nindex f38d630a50a..8aba75e32f9 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java\n\n@@ -571,9 +571,11 @@ public class SymbolResolver extends BLangNodeVisitor {\n             case TypeTags.XML_ELEMENT:\n             case TypeTags.XML_COMMENT:\n             case TypeTags.XML_PI:\n+                bSymbol = lookupLangLibMethodInModule(symTable.langXmlModuleSymbol, name);\n+                break;\n             case TypeTags.XML_TEXT:\n                 bSymbol = lookupLangLibMethodInModule(symTable.langXmlModuleSymbol, name);\n-                if (bSymbol == symTable.notFoundSymbol && type.tag == TypeTags.XML_TEXT) {\n+                if (bSymbol == symTable.notFoundSymbol) {\n                     bSymbol = lookupLangLibMethodInModule(symTable.langStringModuleSymbol, name);\n                 }\n                 break;\n"}}, {"oid": "4521075f121e4c3db60a053f4870a90382a44a8e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4521075f121e4c3db60a053f4870a90382a44a8e", "message": "Isolate the langlib method resolving logic", "committedDate": "2020-05-03T16:55:17Z", "type": "commit"}, {"oid": "4521075f121e4c3db60a053f4870a90382a44a8e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4521075f121e4c3db60a053f4870a90382a44a8e", "message": "Isolate the langlib method resolving logic", "committedDate": "2020-05-03T16:55:17Z", "type": "forcePushed"}]}