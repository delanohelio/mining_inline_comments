{"pr_number": 20711, "pr_title": "Review the Java File of the Build Command", "pr_createdAt": "2020-01-23T10:05:34Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711", "timeline": [{"oid": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4b5bcceb6da14b43791a4f5ee812413d11673c3c", "message": "Review the Build command Java file", "committedDate": "2020-01-23T10:03:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MTIxMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370051212", "bodyText": "This is sorta wrong, even the previous message. The binary built by the build command is not necessarily executable in the sense that it doesn't have to have an entry point.", "author": "pubudu91", "createdAt": "2020-01-23T10:54:16Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -68,8 +68,8 @@\n  *\n  * @since 0.90\n  */\n-@CommandLine.Command(name = BUILD_COMMAND, description = \"Ballerina build - Builds Ballerina module(s) and generates \" +\n-                                                         \"executable outputs.\")\n+@CommandLine.Command(name = BUILD_COMMAND, description = \"Ballerina build - Build Ballerina module(s) and generate \" +\n+                                                         \"executable output.\")", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3MDg0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371670842", "bodyText": "As per the offline discussion we had with Kishanthan, shall we mention in the help text of build that executables are produced only for modules containing an entry point?", "author": "pubudu91", "createdAt": "2020-01-28T08:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MTIxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NjQ4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372186482", "bodyText": "Fixed in the cli/ballerina-tool/src/main/resources/cli-help/ballerina-build.help file.", "author": "praneesha", "createdAt": "2020-01-29T04:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MTIxMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MTkzMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370051933", "bodyText": "\"Writes\" is correct in this context isn't it? This is basically saying \"The build command writes the output...\"", "author": "pubudu91", "createdAt": "2020-01-23T10:55:54Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -116,26 +116,26 @@ public BuildCommand(Path userDir, PrintStream outStream, PrintStream errStream,\n     @CommandLine.Option(names = {\"--all\", \"-a\"}, description = \"Build or compile all the modules of the project.\")\n     private boolean buildAll;\n     \n-    @CommandLine.Option(names = {\"--output\", \"-o\"}, description = \"Writes output to the given file. The provided \" +\n-                                                                  \"output filename may or may not contain the '.jar' \" +\n+    @CommandLine.Option(names = {\"--output\", \"-o\"}, description = \"Write the output to the given file. The provided \" +", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3NzY1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371677659", "bodyText": "We use \"write\" as a convention following the practice used in docs of similar communities like [1].\n[1] https://golang.org/cmd/go/", "author": "praneesha", "createdAt": "2020-01-28T09:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MTkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "185bea53915cf981421ce85623787048fe7eefa2", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 700738103e2..9132357962a 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -117,8 +117,8 @@ public class BuildCommand implements BLauncherCmd {\n     private boolean buildAll;\n     \n     @CommandLine.Option(names = {\"--output\", \"-o\"}, description = \"Write the output to the given file. The provided \" +\n-                                                                  \"output file name may or may not contain the '.jar' \" +\n-                                                                  \"extension.\")\n+                                                                  \"output file name may or may not contain the \" +\n+                                                                  \"'.jar' extension.\")\n     private String output;\n \n     @CommandLine.Option(names = {\"--offline\"}, description = \"Build/Compile offline without downloading \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MzExNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370053117", "bodyText": "This should be \"you\", going by the convention we use", "author": "pubudu91", "createdAt": "2020-01-23T10:58:26Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -166,51 +166,51 @@ public void execute() {\n         String[] args = LaunchUtils\n                 .initConfigurations(this.argList == null ? new String[0] : this.argList.toArray(new String[0]));\n \n-        // check if there are too many arguments.\n+        // Check if there are too many arguments.\n         if (args.length > 1) {\n             CommandUtil.printError(this.errStream, \"too many arguments.\", buildCmd, false);\n             CommandUtil.exitError(this.exitWhenFinish);\n             return;\n         }\n     \n-        // if -a or --all flag is not given, then it is mandatory to give a module name or ballerina file as arg.\n+        // If -a or --all is not given, then it is mandatory to give a module name or a Ballerina file as the arg.\n         if (!this.buildAll && (this.argList == null || this.argList.size() == 0)) {\n             CommandUtil.printError(this.errStream,\n-                    \"'build' command requires a module name or a Ballerina file to build/compile. use '-a' or \" +\n-                    \"'--all' flag to build/compile all the modules of the project.\",\n+                    \"'build' command requires a module name or a Ballerina file to build/compile. Use '-a' or \" +\n+                    \"'--all' to build/compile all the modules of the project.\",\n                     \"ballerina build {<ballerina-file> | <module-name> | -a | --all}\",\n                     false);\n             CommandUtil.exitError(this.exitWhenFinish);\n             return;\n         }\n         \n-        // validation and decide source root and source full path\n+        // Validate and decide the source root and the full path of the source.\n         this.sourceRootPath = null != this.sourceRoot ?\n                 Paths.get(this.sourceRoot).toAbsolutePath() : this.sourceRootPath;\n         Path sourcePath = null;\n         Path targetPath;\n         \n-        // when -a or --all flag is provided. check if the command is executed within a ballerina project. update source\n-        // root path if command executed inside a project.\n+        // When -a or --all is provided, check if the command is executed within a Ballerina project. Update source\n+        // root path if the command is executed inside a project.\n         if (this.buildAll) {\n-            // when building all the modules\n-            //// check if output flag is set\n+            // Check if the output flag is set\n+            //// when building all the modules.\n             if (null != this.output) {\n                 CommandUtil.printError(this.errStream,\n-                                       \"'-o' and '--output' flag is only supported for building a single Ballerina \" +\n+                                       \"'-o' and '--output' are only supported for building a single Ballerina \" +\n                                                \"file.\",\n                                        \"ballerina build -o <output-file> <ballerina-file> \",\n                                        true);\n                 CommandUtil.exitError(this.exitWhenFinish);\n                 return;\n             }\n         \n-            //// validate and set source root path\n+            //// Validate and set the path of the source root.\n             if (!ProjectDirs.isProject(this.sourceRootPath)) {\n                 Path findRoot = ProjectDirs.findProjectRoot(this.sourceRootPath);\n                 if (null == findRoot) {\n                     CommandUtil.printError(this.errStream,\n-                                           \"you are trying to build/compile a Ballerina project but there is no \" +\n+                                           \"You are trying to build/compile a Ballerina project that does not have a \" +", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3OTQ1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371679456", "bodyText": "fixed.", "author": "praneesha", "createdAt": "2020-01-28T09:09:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1MzExNw=="}], "type": "inlineReview", "revised_code": {"commit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 700738103e2..e51b00cbe93 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -210,7 +210,7 @@ public class BuildCommand implements BLauncherCmd {\n                 Path findRoot = ProjectDirs.findProjectRoot(this.sourceRootPath);\n                 if (null == findRoot) {\n                     CommandUtil.printError(this.errStream,\n-                                           \"You are trying to build/compile a Ballerina project that does not have a \" +\n+                                           \"you are trying to build/compile a Ballerina project that does not have a \" +\n                                                    \"Ballerina.toml file.\",\n                                            null,\n                                            false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDEyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370054121", "bodyText": "Again, \"too\" is correct here.", "author": "pubudu91", "createdAt": "2020-01-23T11:00:50Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -224,17 +224,15 @@ public void execute() {\n             targetPath = this.sourceRootPath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n \n             if (args.length > 0) {\n-                CommandUtil.printError(this.errStream, \"too many arguments.\", buildCmd, false);\n+                CommandUtil.printError(this.errStream, \"Too many arguments.\", buildCmd, false);", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3OTkzOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371679939", "bodyText": "Fixed.", "author": "praneesha", "createdAt": "2020-01-28T09:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 700738103e2..e51b00cbe93 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -224,7 +224,7 @@ public class BuildCommand implements BLauncherCmd {\n             targetPath = this.sourceRootPath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n \n             if (args.length > 0) {\n-                CommandUtil.printError(this.errStream, \"Too many arguments.\", buildCmd, false);\n+                CommandUtil.printError(this.errStream, \"too many arguments.\", buildCmd, false);\n                 CommandUtil.exitError(this.exitWhenFinish);\n                 return;\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDQ0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370054443", "bodyText": "You -> you", "author": "pubudu91", "createdAt": "2020-01-23T11:01:32Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -294,7 +292,7 @@ public void execute() {\n             //// check if command executed from project root.\n             if (!RepoUtils.isBallerinaProject(this.sourceRootPath)) {\n                 CommandUtil.printError(this.errStream,\n-                        \"you are trying to build/compile a module that is not inside a project.\",\n+                        \"You are trying to build/compile a module that is not inside a project.\",", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4MDA3Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371680077", "bodyText": "Fixed.", "author": "praneesha", "createdAt": "2020-01-28T09:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDQ0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 700738103e2..e51b00cbe93 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -292,7 +292,7 @@ public class BuildCommand implements BLauncherCmd {\n             //// check if command executed from project root.\n             if (!RepoUtils.isBallerinaProject(this.sourceRootPath)) {\n                 CommandUtil.printError(this.errStream,\n-                        \"You are trying to build/compile a module that is not inside a project.\",\n+                        \"you are trying to build/compile a module that is not inside a project.\",\n                         null,\n                         false);\n                 CommandUtil.exitError(this.exitWhenFinish);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDUzNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370054536", "bodyText": "You -> you, at the start only", "author": "pubudu91", "createdAt": "2020-01-23T11:01:43Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -304,8 +302,8 @@ public void execute() {\n             //// check if module name given is not absolute.\n             if (Paths.get(argList.get(0)).isAbsolute()) {\n                 CommandUtil.printError(this.errStream,\n-                                       \"you are trying to build/compile a module by giving the absolute path. you \" +\n-                                               \"only need give the name of the module.\",\n+                                       \"You are trying to build/compile a module by giving the absolute path. You \" +", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4MDE4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371680187", "bodyText": "Fixed.", "author": "praneesha", "createdAt": "2020-01-28T09:11:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 700738103e2..e51b00cbe93 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -302,7 +302,7 @@ public class BuildCommand implements BLauncherCmd {\n             //// check if module name given is not absolute.\n             if (Paths.get(argList.get(0)).isAbsolute()) {\n                 CommandUtil.printError(this.errStream,\n-                                       \"You are trying to build/compile a module by giving the absolute path. You \" +\n+                                       \"you are trying to build/compile a module by giving the absolute path. You \" +\n                                                \"only need to give the name of the module.\",\n                                        \"ballerina build [-c] <module-name>\",\n                                        true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDc0Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r370054743", "bodyText": "Invalid -> invalid", "author": "pubudu91", "createdAt": "2020-01-23T11:02:11Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -334,10 +332,10 @@ public void execute() {\n             targetPath = this.sourceRootPath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n         } else {\n             CommandUtil.printError(this.errStream,\n-                                   \"invalid Ballerina source path. It should either be a name of a module in a \" +\n+                                   \"Invalid Ballerina source path. It should either be a name of a module in a \" +", "originalCommit": "4b5bcceb6da14b43791a4f5ee812413d11673c3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4MDQ4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r371680487", "bodyText": "Fixed.", "author": "praneesha", "createdAt": "2020-01-28T09:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA1NDc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex 700738103e2..e51b00cbe93 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -332,7 +332,7 @@ public class BuildCommand implements BLauncherCmd {\n             targetPath = this.sourceRootPath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n         } else {\n             CommandUtil.printError(this.errStream,\n-                                   \"Invalid Ballerina source path. It should either be a name of a module in a \" +\n+                                   \"invalid Ballerina source path. It should either be a name of a module in a \" +\n                                    \"Ballerina project or a file with a \\'\" + BLangConstants.BLANG_SRC_FILE_SUFFIX +\n                                    \"\\' extension. Use -a or --all \" +\n                                    \"to build or compile all modules.\",\n"}}, {"oid": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42fb2419acb3c002bd98a91eebda22fa98b3772f", "message": "Address review comments", "committedDate": "2020-01-28T09:22:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2NjQ0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372166444", "bodyText": "Not introduced by this PR, but I don't think we need these comments. Shall we remove them, @hemikak?", "author": "MaryamZi", "createdAt": "2020-01-29T02:53:25Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -166,51 +166,51 @@ public void execute() {\n         String[] args = LaunchUtils\n                 .initConfigurations(this.argList == null ? new String[0] : this.argList.toArray(new String[0]));\n \n-        // check if there are too many arguments.\n+        // Check if there are too many arguments.\n         if (args.length > 1) {\n             CommandUtil.printError(this.errStream, \"too many arguments.\", buildCmd, false);\n             CommandUtil.exitError(this.exitWhenFinish);\n             return;\n         }\n     \n-        // if -a or --all flag is not given, then it is mandatory to give a module name or ballerina file as arg.\n+        // If -a or --all is not given, then it is mandatory to give a module name or a Ballerina file as the arg.\n         if (!this.buildAll && (this.argList == null || this.argList.size() == 0)) {\n             CommandUtil.printError(this.errStream,\n-                    \"'build' command requires a module name or a Ballerina file to build/compile. use '-a' or \" +\n-                    \"'--all' flag to build/compile all the modules of the project.\",\n+                    \"'build' command requires a module name or a Ballerina file to build/compile. Use '-a' or \" +\n+                    \"'--all' to build/compile all the modules of the project.\",\n                     \"ballerina build {<ballerina-file> | <module-name> | -a | --all}\",\n                     false);\n             CommandUtil.exitError(this.exitWhenFinish);\n             return;\n         }\n         \n-        // validation and decide source root and source full path\n+        // Validate and decide the source root and the full path of the source.\n         this.sourceRootPath = null != this.sourceRoot ?\n                 Paths.get(this.sourceRoot).toAbsolutePath() : this.sourceRootPath;\n         Path sourcePath = null;\n         Path targetPath;\n         \n-        // when -a or --all flag is provided. check if the command is executed within a ballerina project. update source\n-        // root path if command executed inside a project.\n+        // When -a or --all is provided, check if the command is executed within a Ballerina project. Update source\n+        // root path if the command is executed inside a project.\n         if (this.buildAll) {\n-            // when building all the modules\n-            //// check if output flag is set\n+            // Check if the output flag is set\n+            //// when building all the modules.", "originalCommit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4ODM1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372188351", "bodyText": "Added the comment as a single line;\n// Check if the output flag is set when building all the modules.", "author": "praneesha", "createdAt": "2020-01-29T04:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2NjQ0NA=="}], "type": "inlineReview", "revised_code": {"commit": "83cce5d6674c649e5b50a47bad12b5892e32b161", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex e51b00cbe93..11025984291 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -193,8 +193,7 @@ public class BuildCommand implements BLauncherCmd {\n         // When -a or --all is provided, check if the command is executed within a Ballerina project. Update source\n         // root path if the command is executed inside a project.\n         if (this.buildAll) {\n-            // Check if the output flag is set\n-            //// when building all the modules.\n+            //// Check if the output flag is set when building all the modules.\n             if (null != this.output) {\n                 CommandUtil.printError(this.errStream,\n                                        \"'-o' and '--output' are only supported for building a single Ballerina \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2NjQ5MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372166490", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                   \"'-o' and '--output' are only supported for building a single Ballerina \" +\n          \n          \n            \n                                                   \"'-o' and '--output' are only supported when building a single Ballerina \" +", "author": "MaryamZi", "createdAt": "2020-01-29T02:53:41Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -166,51 +166,51 @@ public void execute() {\n         String[] args = LaunchUtils\n                 .initConfigurations(this.argList == null ? new String[0] : this.argList.toArray(new String[0]));\n \n-        // check if there are too many arguments.\n+        // Check if there are too many arguments.\n         if (args.length > 1) {\n             CommandUtil.printError(this.errStream, \"too many arguments.\", buildCmd, false);\n             CommandUtil.exitError(this.exitWhenFinish);\n             return;\n         }\n     \n-        // if -a or --all flag is not given, then it is mandatory to give a module name or ballerina file as arg.\n+        // If -a or --all is not given, then it is mandatory to give a module name or a Ballerina file as the arg.\n         if (!this.buildAll && (this.argList == null || this.argList.size() == 0)) {\n             CommandUtil.printError(this.errStream,\n-                    \"'build' command requires a module name or a Ballerina file to build/compile. use '-a' or \" +\n-                    \"'--all' flag to build/compile all the modules of the project.\",\n+                    \"'build' command requires a module name or a Ballerina file to build/compile. Use '-a' or \" +\n+                    \"'--all' to build/compile all the modules of the project.\",\n                     \"ballerina build {<ballerina-file> | <module-name> | -a | --all}\",\n                     false);\n             CommandUtil.exitError(this.exitWhenFinish);\n             return;\n         }\n         \n-        // validation and decide source root and source full path\n+        // Validate and decide the source root and the full path of the source.\n         this.sourceRootPath = null != this.sourceRoot ?\n                 Paths.get(this.sourceRoot).toAbsolutePath() : this.sourceRootPath;\n         Path sourcePath = null;\n         Path targetPath;\n         \n-        // when -a or --all flag is provided. check if the command is executed within a ballerina project. update source\n-        // root path if command executed inside a project.\n+        // When -a or --all is provided, check if the command is executed within a Ballerina project. Update source\n+        // root path if the command is executed inside a project.\n         if (this.buildAll) {\n-            // when building all the modules\n-            //// check if output flag is set\n+            // Check if the output flag is set\n+            //// when building all the modules.\n             if (null != this.output) {\n                 CommandUtil.printError(this.errStream,\n-                                       \"'-o' and '--output' flag is only supported for building a single Ballerina \" +\n+                                       \"'-o' and '--output' are only supported for building a single Ballerina \" +", "originalCommit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83cce5d6674c649e5b50a47bad12b5892e32b161", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex e51b00cbe93..11025984291 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -193,8 +193,7 @@ public class BuildCommand implements BLauncherCmd {\n         // When -a or --all is provided, check if the command is executed within a Ballerina project. Update source\n         // root path if the command is executed inside a project.\n         if (this.buildAll) {\n-            // Check if the output flag is set\n-            //// when building all the modules.\n+            //// Check if the output flag is set when building all the modules.\n             if (null != this.output) {\n                 CommandUtil.printError(this.errStream,\n                                        \"'-o' and '--output' are only supported for building a single Ballerina \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2ODM2MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372168361", "bodyText": "Shouldn't this be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                throw LauncherUtils.createLauncherException(\"Error occurred when creating executable.\");\n          \n          \n            \n                                throw LauncherUtils.createLauncherException(\"Error occurred when creating the executable.\");", "author": "MaryamZi", "createdAt": "2020-01-29T03:03:11Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -270,7 +268,7 @@ public void execute() {\n                 try {\n                     targetPath = Files.createTempDirectory(\"ballerina-build-\" + System.nanoTime());\n                 } catch (IOException e) {\n-                    throw LauncherUtils.createLauncherException(\"error occurred when creating executable.\");\n+                    throw LauncherUtils.createLauncherException(\"Error occurred when creating executable.\");", "originalCommit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1723a0edb96846cb0f15e96eda0f90d88841124c", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex e51b00cbe93..5ffc2c95602 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -268,7 +267,7 @@ public class BuildCommand implements BLauncherCmd {\n                 try {\n                     targetPath = Files.createTempDirectory(\"ballerina-build-\" + System.nanoTime());\n                 } catch (IOException e) {\n-                    throw LauncherUtils.createLauncherException(\"Error occurred when creating executable.\");\n+                    throw LauncherUtils.createLauncherException(\"Error occurred when creating the executable.\");\n                 }\n             }\n         } else if (Files.exists(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2ODQ2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372168460", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                   \"you are trying to build/compile a module by giving the absolute path. You \" +\n          \n          \n            \n                                                   \"you are trying to build/compile a module giving the absolute path. You \" +", "author": "MaryamZi", "createdAt": "2020-01-29T03:03:39Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -304,8 +302,8 @@ public void execute() {\n             //// check if module name given is not absolute.\n             if (Paths.get(argList.get(0)).isAbsolute()) {\n                 CommandUtil.printError(this.errStream,\n-                                       \"you are trying to build/compile a module by giving the absolute path. you \" +\n-                                               \"only need give the name of the module.\",\n+                                       \"you are trying to build/compile a module by giving the absolute path. You \" +", "originalCommit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "289f70fd1fc6b80ed3992dece67155aa7844631c", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex e51b00cbe93..adc5619a49c 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -302,7 +301,7 @@ public class BuildCommand implements BLauncherCmd {\n             //// check if module name given is not absolute.\n             if (Paths.get(argList.get(0)).isAbsolute()) {\n                 CommandUtil.printError(this.errStream,\n-                                       \"you are trying to build/compile a module by giving the absolute path. You \" +\n+                                       \"you are trying to build/compile a module giving the absolute path. You \" +\n                                                \"only need to give the name of the module.\",\n                                        \"ballerina build [-c] <module-name>\",\n                                        true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2OTQ5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20711#discussion_r372169497", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    out.append(\"Build Ballerina module(s)/file and produce an executable JAR file(s). \\n\");\n          \n          \n            \n                    out.append(\"Build a Ballerina module(s)/file and produce an executable JAR file(s). \\n\");", "author": "MaryamZi", "createdAt": "2020-01-29T03:08:09Z", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -406,13 +404,13 @@ public String getName() {\n \n     @Override\n     public void printLongDesc(StringBuilder out) {\n-        out.append(\"Builds Ballerina module(s)/file and produces an executable jar file(s). \\n\");\n+        out.append(\"Build Ballerina module(s)/file and produce an executable JAR file(s). \\n\");", "originalCommit": "42fb2419acb3c002bd98a91eebda22fa98b3772f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "217d8dc46075a902c1d2879e339654444493473a", "chunk": "diff --git a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\nindex e51b00cbe93..be882e03d78 100644\n--- a/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n+++ b/cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\n@@ -404,7 +403,7 @@ public class BuildCommand implements BLauncherCmd {\n \n     @Override\n     public void printLongDesc(StringBuilder out) {\n-        out.append(\"Build Ballerina module(s)/file and produce an executable JAR file(s). \\n\");\n+        out.append(\"Build a Ballerina module(s)/file and produce an executable JAR file(s). \\n\");\n         out.append(\"\\n\");\n         out.append(\"Build a Ballerina project or a specific module in a project. The \\n\");\n         out.append(\"executable \\\".jar\\\" files will be created in the <PROJECT-ROOT>/target/bin directory. \\n\");\n"}}, {"oid": "83cce5d6674c649e5b50a47bad12b5892e32b161", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/83cce5d6674c649e5b50a47bad12b5892e32b161", "message": "Address review comments", "committedDate": "2020-01-29T05:28:15Z", "type": "commit"}, {"oid": "217d8dc46075a902c1d2879e339654444493473a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/217d8dc46075a902c1d2879e339654444493473a", "message": "Update cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>", "committedDate": "2020-01-29T05:29:31Z", "type": "commit"}, {"oid": "4727987dfce6c27741ae50eed03a07de19b377d5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4727987dfce6c27741ae50eed03a07de19b377d5", "message": "Update cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>", "committedDate": "2020-01-29T05:29:54Z", "type": "commit"}, {"oid": "1723a0edb96846cb0f15e96eda0f90d88841124c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1723a0edb96846cb0f15e96eda0f90d88841124c", "message": "Update cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>", "committedDate": "2020-01-29T05:30:06Z", "type": "commit"}, {"oid": "289f70fd1fc6b80ed3992dece67155aa7844631c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/289f70fd1fc6b80ed3992dece67155aa7844631c", "message": "Update cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>", "committedDate": "2020-01-29T05:30:17Z", "type": "commit"}, {"oid": "185bea53915cf981421ce85623787048fe7eefa2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/185bea53915cf981421ce85623787048fe7eefa2", "message": "Fix checkstyle build errors", "committedDate": "2020-02-05T11:13:49Z", "type": "commit"}, {"oid": "99d93338d0b1e3ba8ac4e5b359b8ceb9ed3016e0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/99d93338d0b1e3ba8ac4e5b359b8ceb9ed3016e0", "message": "Merge branch 'lang-issue-19220' of https://github.com/praneesha/ballerina-lang into lang-issue-19220", "committedDate": "2020-02-05T11:14:24Z", "type": "commit"}, {"oid": "b8315847ad3d453b784e1ac4f997551798ec015c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8315847ad3d453b784e1ac4f997551798ec015c", "message": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/CompileFlagWithBuildCommandTest.java", "committedDate": "2020-02-10T12:01:31Z", "type": "commit"}, {"oid": "6d89792d602a85090bca1151916f351b6ed404f3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d89792d602a85090bca1151916f351b6ed404f3", "message": "Fix related tests", "committedDate": "2020-02-11T08:28:30Z", "type": "commit"}, {"oid": "e51c770409471ba02d50bcec12e478c36dd82888", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e51c770409471ba02d50bcec12e478c36dd82888", "message": "Fix tests to resolve build failure", "committedDate": "2020-02-12T04:23:59Z", "type": "commit"}, {"oid": "f3af6f1a1b5da604181022e0e7f603f5b731582b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f3af6f1a1b5da604181022e0e7f603f5b731582b", "message": "Fix test cases to resolve build errors", "committedDate": "2020-02-12T08:58:28Z", "type": "commit"}]}