{"pr_number": 26974, "pr_title": "Fix parser crashes for incomplete function-type in tuple-type", "pr_createdAt": "2020-11-17T07:31:44Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974", "timeline": [{"oid": "acd965dc00dc9dfe314896b04022a11af62b112d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acd965dc00dc9dfe314896b04022a11af62b112d", "message": "Fix parsing bug of parseAnonFuncExprOrFuncTypeDesc", "committedDate": "2020-11-17T07:27:26Z", "type": "commit"}, {"oid": "b61b05802554853762327344949cdf3e28e9ebc7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b61b05802554853762327344949cdf3e28e9ebc7", "message": "Test case", "committedDate": "2020-11-17T07:27:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMTk5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#discussion_r525031996", "bodyText": "Rather than the flag, can we use the ParserRuleContext to determine where we are?", "author": "SupunS", "createdAt": "2020-11-17T10:06:39Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -13357,11 +13359,15 @@ private STNode parseAnonFuncExprOrFuncTypeDesc(List<STNode> qualifiers) {\n                 return parseExpressionRhs(DEFAULT_OP_PRECEDENCE, anonFunc, false, true);\n             case IDENTIFIER_TOKEN:\n             default:\n-                switchContext(ParserRuleContext.VAR_DECL_STMT);\n                 STNode funcTypeDesc = STNodeFactory.createFunctionTypeDescriptorNode(qualifierList, functionKeyword,\n                         funcSignature);\n-                return parseComplexTypeDescriptor(funcTypeDesc, ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN,\n-                        true);\n+                if (!isInBracketedList) {", "originalCommit": "b61b05802554853762327344949cdf3e28e9ebc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA4NzkyOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#discussion_r525087929", "bodyText": "Context information is not available and it's not straightforward to pass the ctx from calling methods. I think using a flag is better here. WDYT?", "author": "rdulmina", "createdAt": "2020-11-17T11:37:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1OTQ3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#discussion_r525159474", "bodyText": "Catch is, a bracketed list can also exist in a nested level as well. e.g:  [ [function( ], x].\nBut Since you are passing hardcoded false in L#13248 and L#13324, this condition may sometimes return false for valid scenarios.\nIf passing down the context is a pain, We can add a method to get the current context, similar to add/end/switch context methods.", "author": "SupunS", "createdAt": "2020-11-17T13:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgxNjA0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#discussion_r525816048", "bodyText": "Done", "author": "rdulmina", "createdAt": "2020-11-18T05:00:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMTk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1d0782d68b307965091709d960b129deeff3a510", "chunk": "diff --git a/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java b/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java\nindex c21ed758dca..896e8f785f6 100644\n--- a/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java\n+++ b/compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java\n\n@@ -13361,7 +13362,7 @@ public class BallerinaParser extends AbstractParser {\n             default:\n                 STNode funcTypeDesc = STNodeFactory.createFunctionTypeDescriptorNode(qualifierList, functionKeyword,\n                         funcSignature);\n-                if (!isInBracketedList) {\n+                if (currentCtx != ParserRuleContext.STMT_START_BRACKETED_LIST) {\n                     switchContext(ParserRuleContext.VAR_DECL_STMT);\n                     return parseComplexTypeDescriptor(funcTypeDesc, ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN,\n                             true);\n"}}, {"oid": "ed8cd4717f00d42ff85f9b09970b3ed5bc33b1bb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed8cd4717f00d42ff85f9b09970b3ed5bc33b1bb", "message": "Add test case for anon func expression path", "committedDate": "2020-11-17T11:47:10Z", "type": "commit"}, {"oid": "1d0782d68b307965091709d960b129deeff3a510", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d0782d68b307965091709d960b129deeff3a510", "message": "Use current ctx to check context inside bracketed list", "committedDate": "2020-11-18T05:00:35Z", "type": "commit"}]}