{"pr_number": 22373, "pr_title": "Fix slice on tuple with rest descriptor", "pr_createdAt": "2020-04-01T07:30:32Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/22373", "timeline": [{"oid": "9fa8dfc8630d383090a1b4fc70e9d2c77ce44230", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fa8dfc8630d383090a1b4fc70e9d2c77ce44230", "message": "Fix slice on tuple with rest desc.", "committedDate": "2020-04-01T06:43:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1NzM1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22373#discussion_r401557357", "bodyText": "Shouldn't the new type have the same flags as the original type?", "author": "pubudu91", "createdAt": "2020-04-01T11:53:10Z", "path": "langlib/lang.array/src/main/java/org/ballerinalang/langlib/array/Slice.java", "diffHunk": "@@ -70,18 +73,24 @@ public static ArrayValue slice(Strand strand, ArrayValue arr, long startIndex, l\n \n         BType arrType = arr.getType();\n         ArrayValue slicedArr;\n-        int elemTypeTag;\n \n         switch (arrType.getTag()) {\n             case TypeTags.ARRAY_TAG:\n                 slicedArr = ((ArrayValueImpl) arr).slice(startIndex, endIndex);\n                 break;\n             case TypeTags.TUPLE_TAG:\n                 BTupleType tupleType = (BTupleType) arrType;\n-                BUnionType unionType = new BUnionType(tupleType.getTupleTypes(), tupleType.getTypeFlags());\n+\n+                List<BType> memTypes = new ArrayList<>(tupleType.getTupleTypes());\n+\n+                BType restType = tupleType.getRestType();\n+                if (restType != null) {\n+                    memTypes.add(restType);\n+                }\n+\n+                BUnionType unionType = new BUnionType(memTypes);", "originalCommit": "9fa8dfc8630d383090a1b4fc70e9d2c77ce44230", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2MjY5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22373#discussion_r401562696", "bodyText": "Not really. For the array type maybe we could use the same but not for the union type.\nThe flags are NILABLE, ANYDATA, PURE.\nConsider the tuple type [int, string?, error...]. The is PURE and ANYDATA.\nThe union created for this is  int|string|error?. This is NILABLE and PURE.\nThis BUnionType constructor computes the new flags - https://github.com/ballerina-platform/ballerina-lang/blob/ballerina-1.2.x/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BUnionType.java#L56.", "author": "MaryamZi", "createdAt": "2020-04-01T12:03:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1NzM1Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "6ac5f368aaf95b6adc6a01c19c85a3f0ff0e72e9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6ac5f368aaf95b6adc6a01c19c85a3f0ff0e72e9", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-lang/ballerina into fix-tuple-issues", "committedDate": "2020-04-02T00:49:17Z", "type": "commit"}]}