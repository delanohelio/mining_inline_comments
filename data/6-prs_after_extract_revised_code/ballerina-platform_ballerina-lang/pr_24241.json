{"pr_number": 24241, "pr_title": "Remove char escape from string template", "pr_createdAt": "2020-06-17T05:25:35Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24241", "timeline": [{"oid": "f1ed3a3692c8f99499229e1b2ed08e4f69bf179a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f1ed3a3692c8f99499229e1b2ed08e4f69bf179a", "message": "Remove char escape from string template", "committedDate": "2020-06-17T05:21:51Z", "type": "commit"}, {"oid": "7a5394706fc6d0316815c6c9ae6c6d9d64d8ff17", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7a5394706fc6d0316815c6c9ae6c6d9d64d8ff17", "message": "Modify string template literal test cases", "committedDate": "2020-06-17T05:21:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1OTMwNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24241#discussion_r441359307", "bodyText": "This applies to XML literal as well.", "author": "hasithaa", "createdAt": "2020-06-17T08:06:07Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -3916,7 +3916,9 @@ private BLangLiteral createSimpleLiteral(Node literal, SyntaxKind sign, boolean\n                 position = matcher.end() - 2;\n                 matcher = UNICODE_PATTERN.matcher(text);\n             }\n-            text = StringEscapeUtils.unescapeJava(text);\n+            if (type != SyntaxKind.TEMPLATE_STRING) {", "originalCommit": "7a5394706fc6d0316815c6c9ae6c6d9d64d8ff17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0Njg0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24241#discussion_r441546848", "bodyText": "Done", "author": "chiranSachintha", "createdAt": "2020-06-17T13:31:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1OTMwNw=="}], "type": "inlineReview", "revised_code": {"commit": "f6ef66353fc9ba1ed5c2161058f6c2fb4029c97b", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\nindex 9d1b07a0c2e..05a80c868e1 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n\n@@ -3916,7 +3916,7 @@ public class BLangNodeTransformer extends NodeTransformer<BLangNode> {\n                 position = matcher.end() - 2;\n                 matcher = UNICODE_PATTERN.matcher(text);\n             }\n-            if (type != SyntaxKind.TEMPLATE_STRING) {\n+            if (type != SyntaxKind.TEMPLATE_STRING && type != SyntaxKind.XML_TEXT_CONTENT) {\n                 text = StringEscapeUtils.unescapeJava(text);\n             }\n \n"}}, {"oid": "f6ef66353fc9ba1ed5c2161058f6c2fb4029c97b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f6ef66353fc9ba1ed5c2161058f6c2fb4029c97b", "message": "Remove char escape from xml literal", "committedDate": "2020-06-17T12:51:31Z", "type": "commit"}, {"oid": "400aa091507b8bc70788e2114fa2de71a095f080", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/400aa091507b8bc70788e2114fa2de71a095f080", "message": "Modify test cases related to xml template", "committedDate": "2020-06-17T14:03:29Z", "type": "commit"}, {"oid": "400aa091507b8bc70788e2114fa2de71a095f080", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/400aa091507b8bc70788e2114fa2de71a095f080", "message": "Modify test cases related to xml template", "committedDate": "2020-06-17T14:03:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyODMxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24241#discussion_r453528313", "bodyText": "I think this is correct.\nSpec [1] says:  Within a BacktickString, every character that is not part of an interpolation is interpreted as a literal character.\n[1] - https://ballerina.io/ballerina-spec/spec.html#section_6.6.1", "author": "rdhananjaya", "createdAt": "2020-07-13T09:46:12Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/XMLQueryExpressionTest.java", "diffHunk": "@@ -48,13 +48,13 @@ public void testSimpleQueryExprForXML() {\n                 \"<name>Sherlock Holmes</name><name>The Da Vinci Code</name>\");\n     }\n \n-    @Test(description = \"Test simple query expression for XMLs - #2\")\n+    @Test(groups = { \"disableOnOldParser\" }, description = \"Test simple query expression for XMLs - #2\")\n     public void testSimpleQueryExprForXML2() {\n         BValue[] returnValues = BRunUtil.invoke(result, \"testSimpleQueryExprForXML2\");\n         Assert.assertNotNull(returnValues);\n \n         Assert.assertEquals(returnValues[0].stringValue(),\n-                \"<book>the book</book>bit of text\u2702\u2705\");\n+                \"<book>the book</book>bit of text\\\\u2702\\\\u2705\");", "originalCommit": "400aa091507b8bc70788e2114fa2de71a095f080", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "0e13ee51f8472cbb6eeb455ec9a8e2dca1d68b42", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e13ee51f8472cbb6eeb455ec9a8e2dca1d68b42", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23998", "committedDate": "2020-07-15T10:02:36Z", "type": "commit"}]}