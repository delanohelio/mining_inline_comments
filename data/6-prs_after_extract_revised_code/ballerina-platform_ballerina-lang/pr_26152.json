{"pr_number": 26152, "pr_title": "[Debugger] Add global variable support", "pr_createdAt": "2020-09-29T11:11:31Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26152", "timeline": [{"oid": "275626ac65da44281be589e89b884c23281ba2a4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/275626ac65da44281be589e89b884c23281ba2a4", "message": "Add debugging support to view global variable scope", "committedDate": "2020-09-26T10:29:19Z", "type": "commit"}, {"oid": "8edfca86331b81802451e870ecbfec784b6e531f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8edfca86331b81802451e870ecbfec784b6e531f", "message": "Update variable evaluation support for global variables", "committedDate": "2020-09-28T07:48:41Z", "type": "commit"}, {"oid": "3c2338996262822548e51f643c5cd2b974e71c90", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c2338996262822548e51f643c5cd2b974e71c90", "message": "Update debugger test framework and resources", "committedDate": "2020-09-28T11:11:25Z", "type": "commit"}, {"oid": "aecddeddd3a4717303e7f6aef550290620aa5152", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aecddeddd3a4717303e7f6aef550290620aa5152", "message": "Refactor local variable test utils", "committedDate": "2020-09-29T04:43:55Z", "type": "commit"}, {"oid": "14f35c61f29d6b703f7b14fb4fe42346f34a75b7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/14f35c61f29d6b703f7b14fb4fe42346f34a75b7", "message": "Add variable and expression evaluation tests for global variables", "committedDate": "2020-09-29T06:07:29Z", "type": "commit"}, {"oid": "b20484e2ed2e3325b75fda7f5f9142697a769157", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b20484e2ed2e3325b75fda7f5f9142697a769157", "message": "Add minor fixes", "committedDate": "2020-09-29T06:12:41Z", "type": "commit"}, {"oid": "a59fedee76ca6ee0ec8684c63bad65424203dc21", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a59fedee76ca6ee0ec8684c63bad65424203dc21", "message": "Rectify a debugger adapter protocol violation", "committedDate": "2020-09-29T10:27:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNTI0MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26152#discussion_r499325240", "bodyText": "As a practice, let's try to get each of the stream operations to a new line", "author": "nadeeshaan", "createdAt": "2020-10-05T02:54:49Z", "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java", "diffHunk": "@@ -356,15 +360,18 @@ private void setBreakpoints(List<BallerinaTestDebugPoint> breakPoints) throws Ba\n                     .stackTrace(stackTraceArgs);\n             StackFrame[] stackFrames = stackTraceResp.getStackFrames();\n             if (stackFrames.length == 0) {\n-                return new Variable[0];\n+                return variables;\n+            }\n+            if (scope == VariableScope.LOCAL) {\n+                scopeArgs.setFrameId(stackFrames[0].getId());\n+            } else {\n+                scopeArgs.setFrameId(-stackFrames[0].getId());\n             }\n-\n-            scopeArgs.setFrameId(stackFrames[0].getId());\n             ScopesResponse scopesResp = DebugHitListener.connector.getRequestManager().scopes(scopeArgs);\n             variableArgs.setVariablesReference(scopesResp.getScopes()[0].getVariablesReference());\n             VariablesResponse variableResp = DebugHitListener.connector.getRequestManager().variables(variableArgs);\n-            return variableResp.getVariables();\n-\n+            Arrays.stream(variableResp.getVariables()).forEach(variable -> variables.put(variable.getName(), variable));", "originalCommit": "a59fedee76ca6ee0ec8684c63bad65424203dc21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxNTk3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26152#discussion_r500015972", "bodyText": "Kept it inline as there's only one stream operation in here. changed with db9e03c.", "author": "NipunaRanasinghe", "createdAt": "2020-10-06T05:36:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNTI0MA=="}], "type": "inlineReview", "revised_code": {"commit": "db9e03c60f78430cbd30ea5d968cb92e03099b36", "chunk": "diff --git a/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java b/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java\nindex b1d005730b1..c9f8bd1ac88 100644\n--- a/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java\n+++ b/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java\n\n@@ -362,15 +362,12 @@ public class DebugAdapterBaseTestCase extends BaseTestCase {\n             if (stackFrames.length == 0) {\n                 return variables;\n             }\n-            if (scope == VariableScope.LOCAL) {\n-                scopeArgs.setFrameId(stackFrames[0].getId());\n-            } else {\n-                scopeArgs.setFrameId(-stackFrames[0].getId());\n-            }\n+            scopeArgs.setFrameId(scope == VariableScope.LOCAL ? stackFrames[0].getId() : -stackFrames[0].getId());\n             ScopesResponse scopesResp = DebugHitListener.connector.getRequestManager().scopes(scopeArgs);\n             variableArgs.setVariablesReference(scopesResp.getScopes()[0].getVariablesReference());\n             VariablesResponse variableResp = DebugHitListener.connector.getRequestManager().variables(variableArgs);\n-            Arrays.stream(variableResp.getVariables()).forEach(variable -> variables.put(variable.getName(), variable));\n+            Arrays.stream(variableResp.getVariables())\n+                    .forEach(variable -> variables.put(variable.getName(), variable));\n             return variables;\n         } catch (Exception e) {\n             LOGGER.warn(\"Error occurred when fetching debug hit variables\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNTc5NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26152#discussion_r499325794", "bodyText": "May be we can use the conditional operator here", "author": "nadeeshaan", "createdAt": "2020-10-05T02:57:56Z", "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java", "diffHunk": "@@ -356,15 +360,18 @@ private void setBreakpoints(List<BallerinaTestDebugPoint> breakPoints) throws Ba\n                     .stackTrace(stackTraceArgs);\n             StackFrame[] stackFrames = stackTraceResp.getStackFrames();\n             if (stackFrames.length == 0) {\n-                return new Variable[0];\n+                return variables;\n+            }\n+            if (scope == VariableScope.LOCAL) {", "originalCommit": "a59fedee76ca6ee0ec8684c63bad65424203dc21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxNjA3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26152#discussion_r500016071", "bodyText": "Done via db9e03c", "author": "NipunaRanasinghe", "createdAt": "2020-10-06T05:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNTc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "db9e03c60f78430cbd30ea5d968cb92e03099b36", "chunk": "diff --git a/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java b/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java\nindex b1d005730b1..c9f8bd1ac88 100644\n--- a/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java\n+++ b/tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/DebugAdapterBaseTestCase.java\n\n@@ -362,15 +362,12 @@ public class DebugAdapterBaseTestCase extends BaseTestCase {\n             if (stackFrames.length == 0) {\n                 return variables;\n             }\n-            if (scope == VariableScope.LOCAL) {\n-                scopeArgs.setFrameId(stackFrames[0].getId());\n-            } else {\n-                scopeArgs.setFrameId(-stackFrames[0].getId());\n-            }\n+            scopeArgs.setFrameId(scope == VariableScope.LOCAL ? stackFrames[0].getId() : -stackFrames[0].getId());\n             ScopesResponse scopesResp = DebugHitListener.connector.getRequestManager().scopes(scopeArgs);\n             variableArgs.setVariablesReference(scopesResp.getScopes()[0].getVariablesReference());\n             VariablesResponse variableResp = DebugHitListener.connector.getRequestManager().variables(variableArgs);\n-            Arrays.stream(variableResp.getVariables()).forEach(variable -> variables.put(variable.getName(), variable));\n+            Arrays.stream(variableResp.getVariables())\n+                    .forEach(variable -> variables.put(variable.getName(), variable));\n             return variables;\n         } catch (Exception e) {\n             LOGGER.warn(\"Error occurred when fetching debug hit variables\", e);\n"}}, {"oid": "db9e03c60f78430cbd30ea5d968cb92e03099b36", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db9e03c60f78430cbd30ea5d968cb92e03099b36", "message": "Add review suggestions", "committedDate": "2020-10-06T05:25:19Z", "type": "commit"}, {"oid": "a1f507ccfbb60ac7991890e6c2ffd20383bb3aef", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a1f507ccfbb60ac7991890e6c2ffd20383bb3aef", "message": "Sync with master and resolve conflicts\n# Conflicts:\n#\tmisc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/evaluation/engine/SimpleNameReferenceEvaluator.java\n#\ttests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/evaluation/ExpressionEvaluationTest.java\n#\ttests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/variables/VariableVisibilityTest.java", "committedDate": "2020-10-06T05:35:13Z", "type": "commit"}]}