{"pr_number": 23384, "pr_title": "Error type revamp distinct type", "pr_createdAt": "2020-05-20T05:12:03Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384", "timeline": [{"oid": "151de342f7ec9cd282bfe99a027883b6c7c73634", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/151de342f7ec9cd282bfe99a027883b6c7c73634", "message": "Update grammar for error type change", "committedDate": "2020-05-12T12:34:06Z", "type": "commit"}, {"oid": "2c77bbe0aa0662ae1bfb8d9a4bfc8e48c7e8db31", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c77bbe0aa0662ae1bfb8d9a4bfc8e48c7e8db31", "message": "Fix BIRSymbolEnter skipping record type flags", "committedDate": "2020-05-15T04:28:13Z", "type": "commit"}, {"oid": "ae1aab33f1b11a7f48e028003f85d46fe7947ba3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae1aab33f1b11a7f48e028003f85d46fe7947ba3", "message": "Add error message and cause langlib functions", "committedDate": "2020-05-15T04:30:28Z", "type": "commit"}, {"oid": "29fbc17f57311566f4a980f0e1a199ce5c577a4b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/29fbc17f57311566f4a980f0e1a199ce5c577a4b", "message": "Incorporate error cause to error value", "committedDate": "2020-05-15T09:10:56Z", "type": "commit"}, {"oid": "81c615658c71220b6eb38f319dd0316c1411da1b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81c615658c71220b6eb38f319dd0316c1411da1b", "message": "Fix ErrorTest jballerina-unit-test", "committedDate": "2020-05-15T11:11:27Z", "type": "commit"}, {"oid": "c6908d057cb2ec7e520d10b0479956fd25ca2012", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6908d057cb2ec7e520d10b0479956fd25ca2012", "message": "Improve runtime equality check for error type", "committedDate": "2020-05-16T14:04:46Z", "type": "commit"}, {"oid": "c53c116b5088172a99f084667be280b2d1250fab", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c53c116b5088172a99f084667be280b2d1250fab", "message": "Merge branch '23283-add-distinct-type' of github.com:ballerina-platform/ballerina-lang into error-type-revamp-distinct-type\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BErrorType.java\n\u0001\tcompiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4\n\u0001\ttests/jballerina-unit-test/src/test/resources/testng.xml", "committedDate": "2020-05-16T15:16:29Z", "type": "commit"}, {"oid": "dd1378dded2694855530dbe1f64b304a9c576b0f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dd1378dded2694855530dbe1f64b304a9c576b0f", "message": "Improve distinct type support for error type", "committedDate": "2020-05-18T07:50:12Z", "type": "commit"}, {"oid": "34c6e2a56f79ffeeb12ac7affacbf4f97955e0cb", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34c6e2a56f79ffeeb12ac7affacbf4f97955e0cb", "message": "Support distinct keyword with user defined types", "committedDate": "2020-05-19T09:05:33Z", "type": "commit"}, {"oid": "e4e2f8ac3d3cc53480a712b3ffd519003e3f054c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e4e2f8ac3d3cc53480a712b3ffd519003e3f054c", "message": "Update default error to use map<anydata|readonly>", "committedDate": "2020-05-19T13:36:06Z", "type": "commit"}, {"oid": "d6d7a1ed2e6b12c75d263de3a35f7c6473ad04fe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6d7a1ed2e6b12c75d263de3a35f7c6473ad04fe", "message": "Add subtyping support for distinct error type", "committedDate": "2020-05-20T08:02:31Z", "type": "commit"}, {"oid": "39146b21017f43d351a16b2e60288edf4f1a246e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/39146b21017f43d351a16b2e60288edf4f1a246e", "message": "Improve distinct type assignability", "committedDate": "2020-05-20T17:22:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMzM0OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428203349", "bodyText": "Wrong year", "author": "hasithaa", "createdAt": "2020-05-20T17:58:31Z", "path": "bvm/ballerina-core/src/main/java/org/ballerinalang/model/types/BReadonlyType.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "39146b21017f43d351a16b2e60288edf4f1a246e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18b379f9edd529b3dea3fcfa2e7ba6b233847b0b", "chunk": "diff --git a/bvm/ballerina-core/src/main/java/org/ballerinalang/model/types/BReadonlyType.java b/bvm/ballerina-core/src/main/java/org/ballerinalang/model/types/BReadonlyType.java\nindex cc6b96d08d0..efa6b40b53b 100644\n--- a/bvm/ballerina-core/src/main/java/org/ballerinalang/model/types/BReadonlyType.java\n+++ b/bvm/ballerina-core/src/main/java/org/ballerinalang/model/types/BReadonlyType.java\n\n@@ -1,5 +1,5 @@\n /*\n- *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n  *\n  *  WSO2 Inc. licenses this file to you under the Apache License,\n  *  Version 2.0 (the \"License\"); you may not use this file except\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNjI4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428206287", "bodyText": "Need to check cause as well.", "author": "hasithaa", "createdAt": "2020-05-20T18:03:23Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -2078,8 +2075,9 @@ private static boolean isEqual(ErrorValue lhsError, ErrorValue rhsError, List<Va\n         }\n         checkedValues.add(compValuePair);\n \n-        return isEqual(lhsError.getReason(), rhsError.getReason(), checkedValues) &&\n-                isEqual((MapValueImpl) lhsError.getDetails(), (MapValueImpl) rhsError.getDetails(), checkedValues);\n+        return isEqual(lhsError.getMessage(), rhsError.getMessage(), checkedValues) &&", "originalCommit": "39146b21017f43d351a16b2e60288edf4f1a246e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyNTc1NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428625754", "bodyText": "Line:2080 does that", "author": "rdhananjaya", "createdAt": "2020-05-21T12:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNjI4Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMjcxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428212715", "bodyText": "This is going to replace with type-ids. isn't it?", "author": "hasithaa", "createdAt": "2020-05-20T18:14:53Z", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ErrorValue.java", "diffHunk": "@@ -127,18 +139,18 @@ public String toString() {\n      *\n      * @return reason string\n      */\n-    @Deprecated\n-    public String getReason() {\n-        return reason.getValue();\n+    // todo: How do we handle this?\n+//    public BString getErrorReason() {", "originalCommit": "39146b21017f43d351a16b2e60288edf4f1a246e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMzcxOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428213718", "bodyText": "Let's remove this.", "author": "hasithaa", "createdAt": "2020-05-20T18:16:34Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java", "diffHunk": "@@ -972,9 +974,8 @@ BType readType(int cpI) throws IOException {\n                     pkgCpIndex = inputStream.readInt();\n                     pkgId = getPackageId(pkgCpIndex);\n                     String errorName = getStringCPEntryValue(inputStream);\n-                    BType reasonType = readTypeFromCp();\n+//                    BType reasonType = readTypeFromCp();", "originalCommit": "39146b21017f43d351a16b2e60288edf4f1a246e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "18b379f9edd529b3dea3fcfa2e7ba6b233847b0b", "chunk": "diff --git a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java\nindex 35f3d40949a..b86915c5794 100644\n--- a/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java\n+++ b/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java\n\n@@ -974,7 +974,6 @@ public class BIRPackageSymbolEnter {\n                     pkgCpIndex = inputStream.readInt();\n                     pkgId = getPackageId(pkgCpIndex);\n                     String errorName = getStringCPEntryValue(inputStream);\n-//                    BType reasonType = readTypeFromCp();\n                     BType detailsType = readTypeFromCp();\n                     errorType.detailType = detailsType;\n                     errorSymbol.type = errorType;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ0NzM3MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428447370", "bodyText": "This is no longer valid, isn't it?", "author": "hasithaa", "createdAt": "2020-05-21T05:09:41Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -481,14 +480,6 @@ public void visit(BLangRecordTypeNode recordTypeNode) {\n \n     @Override\n     public void visit(BLangErrorType errorType) {\n-        BType reasonType = getReasonType(errorType);\n-\n-        if (!types.isAssignable(reasonType, symTable.stringType)) {\n-            dlog.error(errorType.reasonType.pos, DiagnosticCode.INVALID_ERROR_REASON_TYPE, reasonType);\n-        } else if (errorType.reasonType != null) {\n-            validateModuleQualifiedReasons(errorType.reasonType.pos, reasonType);\n-        }\n-\n         if (errorType.detailType == null) {", "originalCommit": "39146b21017f43d351a16b2e60288edf4f1a246e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1MTYyNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23384#discussion_r428651624", "bodyText": "We can still have something like type F error\nhttps://ballerina.io/ballerina-spec/spec.html#section_5.5.1", "author": "rdhananjaya", "createdAt": "2020-05-21T13:30:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ0NzM3MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "18b379f9edd529b3dea3fcfa2e7ba6b233847b0b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18b379f9edd529b3dea3fcfa2e7ba6b233847b0b", "message": "Apply review suggestions", "committedDate": "2020-05-21T13:35:01Z", "type": "commit"}]}